; ModuleID = '../../v8/src/runtime/runtime-array.cc'
source_filename = "../../v8/src/runtime/runtime-array.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::atomic.1133" = type { %"struct.std::__1::__atomic_base.1134" }
%"struct.std::__1::__atomic_base.1134" = type { %"struct.std::__1::__atomic_base.1135" }
%"struct.std::__1::__atomic_base.1135" = type { %"struct.std::__1::__cxx_atomic_impl.1136" }
%"struct.std::__1::__cxx_atomic_impl.1136" = type { %"struct.std::__1::__cxx_atomic_base_impl.1137" }
%"struct.std::__1::__cxx_atomic_base_impl.1137" = type { i32 }
%"class.v8::internal::ElementsAccessor" = type { i32 (...)** }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.645", %"class.std::__1::unique_ptr.666", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.676", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.815", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.828", {}*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.838", {}*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.849", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.924", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.967"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.975", i32, i8, i8, i32, i32, %"class.std::__1::vector.981", %"class.std::__1::vector.981", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.988", i64, %"class.std::__1::unordered_map.989", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.541", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1045", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1083", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, {}*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1117", %"class.std::__1::vector.1121", %"class.std::__1::vector.1121", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.178", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.308", %"class.std::__1::unique_ptr.314", %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.359", %"class.std::__1::unique_ptr.398", %"class.std::__1::unique_ptr.428", %"class.std::__1::unique_ptr.434", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.450", %"class.std::__1::unique_ptr.456", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.462", %"class.std::__1::unique_ptr.468", %"class.std::__1::unique_ptr.474", %"class.std::__1::shared_ptr.480", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.503", %"class.std::__1::unique_ptr.529", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.535", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.548", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.330", i8, [7 x i8], %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.580", %"class.std::__1::unordered_map.554", %"class.std::__1::unordered_map.604", %"class.std::__1::vector.632", i8, %"class.std::__1::unique_ptr.639", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1050", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1054", %"class.std::__1::unique_ptr.1060", %"class.std::__1::unique_ptr.474", %"class.std::__1::vector.1066", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1050" = type { %"struct.std::__1::__atomic_base.1051" }
%"struct.std::__1::__atomic_base.1051" = type { %"struct.std::__1::__cxx_atomic_impl.1052" }
%"struct.std::__1::__cxx_atomic_impl.1052" = type { %"struct.std::__1::__cxx_atomic_base_impl.1053" }
%"struct.std::__1::__cxx_atomic_base_impl.1053" = type { i32 }
%"class.std::__1::unique_ptr.1054" = type { %"class.std::__1::__compressed_pair.1055" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.1056" }
%"struct.std::__1::__compressed_pair_elem.1056" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.808" }
%"class.std::__1::vector.808" = type { %"class.std::__1::__vector_base.809" }
%"class.std::__1::__vector_base.809" = type { i64**, i64**, %"class.std::__1::__compressed_pair.810" }
%"class.std::__1::__compressed_pair.810" = type { %"struct.std::__1::__compressed_pair_elem.811" }
%"struct.std::__1::__compressed_pair_elem.811" = type { i64** }
%"class.std::__1::unique_ptr.1060" = type { %"class.std::__1::__compressed_pair.1061" }
%"class.std::__1::__compressed_pair.1061" = type { %"struct.std::__1::__compressed_pair_elem.1062" }
%"struct.std::__1::__compressed_pair_elem.1062" = type { %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.808", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1066" = type { %"class.std::__1::__vector_base.1067" }
%"class.std::__1::__vector_base.1067" = type { %"struct.std::__1::pair.1068"*, %"struct.std::__1::pair.1068"*, %"class.std::__1::__compressed_pair.1069" }
%"struct.std::__1::pair.1068" = type opaque
%"class.std::__1::__compressed_pair.1069" = type { %"struct.std::__1::__compressed_pair_elem.1070" }
%"struct.std::__1::__compressed_pair_elem.1070" = type { %"struct.std::__1::pair.1068"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type opaque
%"class.std::__1::unique_ptr.178" = type { %"class.std::__1::__compressed_pair.179" }
%"class.std::__1::__compressed_pair.179" = type { %"struct.std::__1::__compressed_pair_elem.180" }
%"struct.std::__1::__compressed_pair_elem.180" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.220", %"class.std::__1::unique_ptr.226", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.std::__1::vector.287", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.181", %"class.std::__1::vector.182", %"class.std::__1::vector.189", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.181" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type opaque
%"class.std::__1::vector.182" = type { %"class.std::__1::__vector_base.183" }
%"class.std::__1::__vector_base.183" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.184" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.189" = type { %"class.std::__1::__vector_base.190" }
%"class.std::__1::__vector_base.190" = type { %"class.std::__1::unique_ptr.191"*, %"class.std::__1::unique_ptr.191"*, %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::unique_ptr.191" = type opaque
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.std::__1::unique_ptr.191"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type opaque
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.197", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.197" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.213", i8, i64 }
%"class.std::__1::vector.213" = type { %"class.std::__1::__vector_base.214" }
%"class.std::__1::__vector_base.214" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.215" }
%"class.std::__1::__compressed_pair.215" = type { %"struct.std::__1::__compressed_pair_elem.216" }
%"struct.std::__1::__compressed_pair_elem.216" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.220" = type { %"class.std::__1::__compressed_pair.221" }
%"class.std::__1::__compressed_pair.221" = type { %"struct.std::__1::__compressed_pair_elem.222" }
%"struct.std::__1::__compressed_pair_elem.222" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.229" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.181"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.229" = type { %"class.std::__1::__hash_table.230" }
%"class.std::__1::__hash_table.230" = type <{ %"class.std::__1::unique_ptr.231", %"class.std::__1::__compressed_pair.241", %"class.std::__1::__compressed_pair.246", %"class.std::__1::__compressed_pair.249", [4 x i8] }>
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233", %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"struct.std::__1::__hash_node_base.234"** }
%"struct.std::__1::__hash_node_base.234" = type { %"struct.std::__1::__hash_node_base.234"* }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.std::__1::__bucket_list_deallocator.236" }
%"class.std::__1::__bucket_list_deallocator.236" = type { %"class.std::__1::__compressed_pair.237" }
%"class.std::__1::__compressed_pair.237" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"struct.std::__1::__hash_node_base.234" }
%"class.std::__1::__compressed_pair.246" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.249" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.256" }
%"class.std::__1::unordered_map.256" = type { %"class.std::__1::__hash_table.257" }
%"class.std::__1::__hash_table.257" = type <{ %"class.std::__1::unique_ptr.258", %"class.std::__1::__compressed_pair.268", %"class.std::__1::__compressed_pair.273", %"class.std::__1::__compressed_pair.276", [4 x i8] }>
%"class.std::__1::unique_ptr.258" = type { %"class.std::__1::__compressed_pair.259" }
%"class.std::__1::__compressed_pair.259" = type { %"struct.std::__1::__compressed_pair_elem.260", %"struct.std::__1::__compressed_pair_elem.262" }
%"struct.std::__1::__compressed_pair_elem.260" = type { %"struct.std::__1::__hash_node_base.261"** }
%"struct.std::__1::__hash_node_base.261" = type { %"struct.std::__1::__hash_node_base.261"* }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"class.std::__1::__bucket_list_deallocator.263" }
%"class.std::__1::__bucket_list_deallocator.263" = type { %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.268" = type { %"struct.std::__1::__compressed_pair_elem.269" }
%"struct.std::__1::__compressed_pair_elem.269" = type { %"struct.std::__1::__hash_node_base.261" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.280" = type { %"class.std::__1::__vector_base.281" }
%"class.std::__1::__vector_base.281" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.287" = type { %"class.std::__1::__vector_base.288" }
%"class.std::__1::__vector_base.288" = type { %"struct.std::__1::pair.289"*, %"struct.std::__1::pair.289"*, %"class.std::__1::__compressed_pair.290" }
%"struct.std::__1::pair.289" = type opaque
%"class.std::__1::__compressed_pair.290" = type { %"struct.std::__1::__compressed_pair_elem.291" }
%"struct.std::__1::__compressed_pair_elem.291" = type { %"struct.std::__1::pair.289"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.295", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.280"], [3 x %"class.std::__1::vector.280"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.280", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.295" = type { %"class.std::__1::__compressed_pair.296" }
%"class.std::__1::__compressed_pair.296" = type { %"struct.std::__1::__compressed_pair_elem.297" }
%"struct.std::__1::__compressed_pair_elem.297" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.305"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.280", %"class.std::__1::vector.280", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.305" = type opaque
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.308" = type { %"class.std::__1::__compressed_pair.309" }
%"class.std::__1::__compressed_pair.309" = type { %"struct.std::__1::__compressed_pair_elem.310" }
%"struct.std::__1::__compressed_pair_elem.310" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.v8::internal::ScavengerCollector" = type opaque
%"class.std::__1::unique_ptr.314" = type { %"class.std::__1::__compressed_pair.315" }
%"class.std::__1::__compressed_pair.315" = type { %"struct.std::__1::__compressed_pair_elem.316" }
%"struct.std::__1::__compressed_pair_elem.316" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.330", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.323"], %"class.std::__1::unique_ptr.295" }
%"class.std::__1::vector.323" = type { %"class.std::__1::__vector_base.324" }
%"class.std::__1::__vector_base.324" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.325" }
%"class.std::__1::__compressed_pair.325" = type { %"struct.std::__1::__compressed_pair_elem.326" }
%"struct.std::__1::__compressed_pair_elem.326" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.359" = type { %"class.std::__1::__compressed_pair.360" }
%"class.std::__1::__compressed_pair.360" = type { %"struct.std::__1::__compressed_pair_elem.361" }
%"struct.std::__1::__compressed_pair_elem.361" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.362", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.366", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.371" }
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.366" = type { %"struct.std::__1::__atomic_base.367" }
%"struct.std::__1::__atomic_base.367" = type { %"struct.std::__1::__cxx_atomic_impl.368" }
%"struct.std::__1::__cxx_atomic_impl.368" = type { %"struct.std::__1::__cxx_atomic_base_impl.369" }
%"struct.std::__1::__cxx_atomic_base_impl.369" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.371" = type { %"class.std::__1::__hash_table.372" }
%"class.std::__1::__hash_table.372" = type <{ %"class.std::__1::unique_ptr.373", %"class.std::__1::__compressed_pair.383", %"class.std::__1::__compressed_pair.388", %"class.std::__1::__compressed_pair.391", [4 x i8] }>
%"class.std::__1::unique_ptr.373" = type { %"class.std::__1::__compressed_pair.374" }
%"class.std::__1::__compressed_pair.374" = type { %"struct.std::__1::__compressed_pair_elem.375", %"struct.std::__1::__compressed_pair_elem.377" }
%"struct.std::__1::__compressed_pair_elem.375" = type { %"struct.std::__1::__hash_node_base.376"** }
%"struct.std::__1::__hash_node_base.376" = type { %"struct.std::__1::__hash_node_base.376"* }
%"struct.std::__1::__compressed_pair_elem.377" = type { %"class.std::__1::__bucket_list_deallocator.378" }
%"class.std::__1::__bucket_list_deallocator.378" = type { %"class.std::__1::__compressed_pair.379" }
%"class.std::__1::__compressed_pair.379" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.383" = type { %"struct.std::__1::__compressed_pair_elem.384" }
%"struct.std::__1::__compressed_pair_elem.384" = type { %"struct.std::__1::__hash_node_base.376" }
%"class.std::__1::__compressed_pair.388" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.391" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.398" = type { %"class.std::__1::__compressed_pair.399" }
%"class.std::__1::__compressed_pair.399" = type { %"struct.std::__1::__compressed_pair_elem.400" }
%"struct.std::__1::__compressed_pair_elem.400" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.295", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.401", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.401" = type { %"class.std::__1::__hash_table.402" }
%"class.std::__1::__hash_table.402" = type <{ %"class.std::__1::unique_ptr.403", %"class.std::__1::__compressed_pair.413", %"class.std::__1::__compressed_pair.418", %"class.std::__1::__compressed_pair.421", [4 x i8] }>
%"class.std::__1::unique_ptr.403" = type { %"class.std::__1::__compressed_pair.404" }
%"class.std::__1::__compressed_pair.404" = type { %"struct.std::__1::__compressed_pair_elem.405", %"struct.std::__1::__compressed_pair_elem.407" }
%"struct.std::__1::__compressed_pair_elem.405" = type { %"struct.std::__1::__hash_node_base.406"** }
%"struct.std::__1::__hash_node_base.406" = type { %"struct.std::__1::__hash_node_base.406"* }
%"struct.std::__1::__compressed_pair_elem.407" = type { %"class.std::__1::__bucket_list_deallocator.408" }
%"class.std::__1::__bucket_list_deallocator.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.413" = type { %"struct.std::__1::__compressed_pair_elem.414" }
%"struct.std::__1::__compressed_pair_elem.414" = type { %"struct.std::__1::__hash_node_base.406" }
%"class.std::__1::__compressed_pair.418" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.421" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.428" = type { %"class.std::__1::__compressed_pair.429" }
%"class.std::__1::__compressed_pair.429" = type { %"struct.std::__1::__compressed_pair_elem.430" }
%"struct.std::__1::__compressed_pair_elem.430" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.434" = type { %"class.std::__1::__compressed_pair.435" }
%"class.std::__1::__compressed_pair.435" = type { %"struct.std::__1::__compressed_pair_elem.436" }
%"struct.std::__1::__compressed_pair_elem.436" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.437" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.437" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.450" = type { %"class.std::__1::__compressed_pair.451" }
%"class.std::__1::__compressed_pair.451" = type { %"struct.std::__1::__compressed_pair_elem.452" }
%"struct.std::__1::__compressed_pair_elem.452" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.456" = type { %"class.std::__1::__compressed_pair.457" }
%"class.std::__1::__compressed_pair.457" = type { %"struct.std::__1::__compressed_pair_elem.458" }
%"struct.std::__1::__compressed_pair_elem.458" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.462" = type { %"class.std::__1::__compressed_pair.463" }
%"class.std::__1::__compressed_pair.463" = type { %"struct.std::__1::__compressed_pair_elem.464" }
%"struct.std::__1::__compressed_pair_elem.464" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.468" = type { %"class.std::__1::__compressed_pair.469" }
%"class.std::__1::__compressed_pair.469" = type { %"struct.std::__1::__compressed_pair_elem.470" }
%"struct.std::__1::__compressed_pair_elem.470" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type opaque
%"class.std::__1::unique_ptr.474" = type { %"class.std::__1::__compressed_pair.475" }
%"class.std::__1::__compressed_pair.475" = type { %"struct.std::__1::__compressed_pair_elem.476" }
%"struct.std::__1::__compressed_pair_elem.476" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.480" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.499", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.481", %"class.v8::internal::VirtualMemory" }
%"class.std::__1::unique_ptr.481" = type { %"class.std::__1::__compressed_pair.482" }
%"class.std::__1::__compressed_pair.482" = type { %"struct.std::__1::__compressed_pair_elem.483" }
%"struct.std::__1::__compressed_pair_elem.483" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.484", %"class.std::__1::set.492" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.std::__1::set.484" = type { %"class.std::__1::__tree.485" }
%"class.std::__1::__tree.485" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.490" }
%"class.std::__1::__compressed_pair.486" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.490" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.492" = type { %"class.std::__1::__tree.493" }
%"class.std::__1::__tree.493" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.486", %"class.std::__1::__compressed_pair.494" }
%"class.std::__1::__compressed_pair.494" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.499" = type { %"struct.std::__1::__atomic_base.500" }
%"struct.std::__1::__atomic_base.500" = type { %"struct.std::__1::__cxx_atomic_impl.501" }
%"struct.std::__1::__cxx_atomic_impl.501" = type { %"struct.std::__1::__cxx_atomic_base_impl.502" }
%"struct.std::__1::__cxx_atomic_base_impl.502" = type { i8* }
%"class.v8::CppHeap" = type opaque
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.503" = type { %"class.std::__1::__hash_table.504" }
%"class.std::__1::__hash_table.504" = type <{ %"class.std::__1::unique_ptr.505", %"class.std::__1::__compressed_pair.515", %"class.std::__1::__compressed_pair.520", %"class.std::__1::__compressed_pair.523", [4 x i8] }>
%"class.std::__1::unique_ptr.505" = type { %"class.std::__1::__compressed_pair.506" }
%"class.std::__1::__compressed_pair.506" = type { %"struct.std::__1::__compressed_pair_elem.507", %"struct.std::__1::__compressed_pair_elem.509" }
%"struct.std::__1::__compressed_pair_elem.507" = type { %"struct.std::__1::__hash_node_base.508"** }
%"struct.std::__1::__hash_node_base.508" = type { %"struct.std::__1::__hash_node_base.508"* }
%"struct.std::__1::__compressed_pair_elem.509" = type { %"class.std::__1::__bucket_list_deallocator.510" }
%"class.std::__1::__bucket_list_deallocator.510" = type { %"class.std::__1::__compressed_pair.511" }
%"class.std::__1::__compressed_pair.511" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.515" = type { %"struct.std::__1::__compressed_pair_elem.516" }
%"struct.std::__1::__compressed_pair_elem.516" = type { %"struct.std::__1::__hash_node_base.508" }
%"class.std::__1::__compressed_pair.520" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.523" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.529" = type { %"class.std::__1::__compressed_pair.530" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.531" }
%"struct.std::__1::__compressed_pair_elem.531" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.535" = type { %"class.std::__1::__compressed_pair.536" }
%"class.std::__1::__compressed_pair.536" = type { %"struct.std::__1::__compressed_pair_elem.537" }
%"struct.std::__1::__compressed_pair_elem.537" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.541", %"class.std::__1::vector.541" }
%"class.std::__1::unique_ptr.548" = type { %"class.std::__1::__compressed_pair.549" }
%"class.std::__1::__compressed_pair.549" = type { %"struct.std::__1::__compressed_pair_elem.550" }
%"struct.std::__1::__compressed_pair_elem.550" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.std::__1::unordered_set.330" = type { %"class.std::__1::__hash_table.331" }
%"class.std::__1::__hash_table.331" = type <{ %"class.std::__1::unique_ptr.332", %"class.std::__1::__compressed_pair.342", %"class.std::__1::__compressed_pair.347", %"class.std::__1::__compressed_pair.351", [4 x i8] }>
%"class.std::__1::unique_ptr.332" = type { %"class.std::__1::__compressed_pair.333" }
%"class.std::__1::__compressed_pair.333" = type { %"struct.std::__1::__compressed_pair_elem.334", %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.334" = type { %"struct.std::__1::__hash_node_base.335"** }
%"struct.std::__1::__hash_node_base.335" = type { %"struct.std::__1::__hash_node_base.335"* }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.std::__1::__bucket_list_deallocator.337" }
%"class.std::__1::__bucket_list_deallocator.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.342" = type { %"struct.std::__1::__compressed_pair_elem.343" }
%"struct.std::__1::__compressed_pair_elem.343" = type { %"struct.std::__1::__hash_node_base.335" }
%"class.std::__1::__compressed_pair.347" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.351" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.580" = type { %"class.std::__1::__hash_table.581" }
%"class.std::__1::__hash_table.581" = type <{ %"class.std::__1::unique_ptr.582", %"class.std::__1::__compressed_pair.592", %"class.std::__1::__compressed_pair.597", %"class.std::__1::__compressed_pair.600", [4 x i8] }>
%"class.std::__1::unique_ptr.582" = type { %"class.std::__1::__compressed_pair.583" }
%"class.std::__1::__compressed_pair.583" = type { %"struct.std::__1::__compressed_pair_elem.584", %"struct.std::__1::__compressed_pair_elem.586" }
%"struct.std::__1::__compressed_pair_elem.584" = type { %"struct.std::__1::__hash_node_base.585"** }
%"struct.std::__1::__hash_node_base.585" = type { %"struct.std::__1::__hash_node_base.585"* }
%"struct.std::__1::__compressed_pair_elem.586" = type { %"class.std::__1::__bucket_list_deallocator.587" }
%"class.std::__1::__bucket_list_deallocator.587" = type { %"class.std::__1::__compressed_pair.588" }
%"class.std::__1::__compressed_pair.588" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.592" = type { %"struct.std::__1::__compressed_pair_elem.593" }
%"struct.std::__1::__compressed_pair_elem.593" = type { %"struct.std::__1::__hash_node_base.585" }
%"class.std::__1::__compressed_pair.597" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.600" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.554" = type { %"class.std::__1::__hash_table.555" }
%"class.std::__1::__hash_table.555" = type <{ %"class.std::__1::unique_ptr.556", %"class.std::__1::__compressed_pair.566", %"class.std::__1::__compressed_pair.571", %"class.std::__1::__compressed_pair.574", [4 x i8] }>
%"class.std::__1::unique_ptr.556" = type { %"class.std::__1::__compressed_pair.557" }
%"class.std::__1::__compressed_pair.557" = type { %"struct.std::__1::__compressed_pair_elem.558", %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.558" = type { %"struct.std::__1::__hash_node_base.559"** }
%"struct.std::__1::__hash_node_base.559" = type { %"struct.std::__1::__hash_node_base.559"* }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.std::__1::__bucket_list_deallocator.561" }
%"class.std::__1::__bucket_list_deallocator.561" = type { %"class.std::__1::__compressed_pair.562" }
%"class.std::__1::__compressed_pair.562" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.566" = type { %"struct.std::__1::__compressed_pair_elem.567" }
%"struct.std::__1::__compressed_pair_elem.567" = type { %"struct.std::__1::__hash_node_base.559" }
%"class.std::__1::__compressed_pair.571" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.574" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.604" = type { %"class.std::__1::__hash_table.605" }
%"class.std::__1::__hash_table.605" = type <{ %"class.std::__1::unique_ptr.606", %"class.std::__1::__compressed_pair.616", %"class.std::__1::__compressed_pair.621", %"class.std::__1::__compressed_pair.626", [4 x i8] }>
%"class.std::__1::unique_ptr.606" = type { %"class.std::__1::__compressed_pair.607" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.608", %"struct.std::__1::__compressed_pair_elem.610" }
%"struct.std::__1::__compressed_pair_elem.608" = type { %"struct.std::__1::__hash_node_base.609"** }
%"struct.std::__1::__hash_node_base.609" = type { %"struct.std::__1::__hash_node_base.609"* }
%"struct.std::__1::__compressed_pair_elem.610" = type { %"class.std::__1::__bucket_list_deallocator.611" }
%"class.std::__1::__bucket_list_deallocator.611" = type { %"class.std::__1::__compressed_pair.612" }
%"class.std::__1::__compressed_pair.612" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.616" = type { %"struct.std::__1::__compressed_pair_elem.617" }
%"struct.std::__1::__compressed_pair_elem.617" = type { %"struct.std::__1::__hash_node_base.609" }
%"class.std::__1::__compressed_pair.621" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.632" = type { %"class.std::__1::__vector_base.633" }
%"class.std::__1::__vector_base.633" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.634" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.634" = type { %"struct.std::__1::__compressed_pair_elem.635" }
%"struct.std::__1::__compressed_pair_elem.635" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.639" = type { %"class.std::__1::__compressed_pair.640" }
%"class.std::__1::__compressed_pair.640" = type { %"struct.std::__1::__compressed_pair_elem.641" }
%"struct.std::__1::__compressed_pair_elem.641" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.541" }
%"class.std::__1::shared_ptr.645" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.646", %"class.std::__1::unique_ptr.660" }
%"class.std::__1::unique_ptr.646" = type { %"class.std::__1::__compressed_pair.647" }
%"class.std::__1::__compressed_pair.647" = type { %"struct.std::__1::__compressed_pair_elem.648" }
%"struct.std::__1::__compressed_pair_elem.648" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.649" }
%"class.std::__1::vector.649" = type { %"class.std::__1::__vector_base.650" }
%"class.std::__1::__vector_base.650" = type { %"class.std::__1::unique_ptr.651"*, %"class.std::__1::unique_ptr.651"*, %"class.std::__1::__compressed_pair.652" }
%"class.std::__1::unique_ptr.651" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.652" = type { %"struct.std::__1::__compressed_pair_elem.653" }
%"struct.std::__1::__compressed_pair_elem.653" = type { %"class.std::__1::unique_ptr.651"* }
%"class.std::__1::unique_ptr.660" = type { %"class.std::__1::__compressed_pair.661" }
%"class.std::__1::__compressed_pair.661" = type { %"struct.std::__1::__compressed_pair_elem.662" }
%"struct.std::__1::__compressed_pair_elem.662" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::unique_ptr.666" = type { %"class.std::__1::__compressed_pair.667" }
%"class.std::__1::__compressed_pair.667" = type { %"struct.std::__1::__compressed_pair_elem.668" }
%"struct.std::__1::__compressed_pair_elem.668" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.669", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.669" = type { %"struct.std::__1::__atomic_base.670" }
%"struct.std::__1::__atomic_base.670" = type { %"struct.std::__1::__cxx_atomic_impl.671" }
%"struct.std::__1::__cxx_atomic_impl.671" = type { %"struct.std::__1::__cxx_atomic_base_impl.672" }
%"struct.std::__1::__cxx_atomic_base_impl.672" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.676" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.677", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.677" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.678", %"class.v8::base::Optional", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.678" = type { %"class.std::__1::__vector_base.679" }
%"class.std::__1::__vector_base.679" = type { %"class.std::__1::unique_ptr.680"*, %"class.std::__1::unique_ptr.680"*, %"class.std::__1::__compressed_pair.681" }
%"class.std::__1::unique_ptr.680" = type opaque
%"class.std::__1::__compressed_pair.681" = type { %"struct.std::__1::__compressed_pair_elem.682" }
%"struct.std::__1::__compressed_pair_elem.682" = type { %"class.std::__1::unique_ptr.680"* }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.686", %"class.std::__1::unique_ptr.692", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.698", %"class.std::__1::unique_ptr.704", %"class.std::__1::unique_ptr.710", %"class.std::__1::unique_ptr.716", %"class.std::__1::unique_ptr.722", %"class.std::__1::set.728", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.686" = type { %"class.std::__1::__compressed_pair.687" }
%"class.std::__1::__compressed_pair.687" = type { %"struct.std::__1::__compressed_pair_elem.688" }
%"struct.std::__1::__compressed_pair_elem.688" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.692" = type { %"class.std::__1::__compressed_pair.693" }
%"class.std::__1::__compressed_pair.693" = type { %"struct.std::__1::__compressed_pair_elem.694" }
%"struct.std::__1::__compressed_pair_elem.694" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.698" = type { %"class.std::__1::__compressed_pair.699" }
%"class.std::__1::__compressed_pair.699" = type { %"struct.std::__1::__compressed_pair_elem.700" }
%"struct.std::__1::__compressed_pair_elem.700" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.704" = type { %"class.std::__1::__compressed_pair.705" }
%"class.std::__1::__compressed_pair.705" = type { %"struct.std::__1::__compressed_pair_elem.706" }
%"struct.std::__1::__compressed_pair_elem.706" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.710" = type { %"class.std::__1::__compressed_pair.711" }
%"class.std::__1::__compressed_pair.711" = type { %"struct.std::__1::__compressed_pair_elem.712" }
%"struct.std::__1::__compressed_pair_elem.712" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.716" = type { %"class.std::__1::__compressed_pair.717" }
%"class.std::__1::__compressed_pair.717" = type { %"struct.std::__1::__compressed_pair_elem.718" }
%"struct.std::__1::__compressed_pair_elem.718" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.722" = type { %"class.std::__1::__compressed_pair.723" }
%"class.std::__1::__compressed_pair.723" = type { %"struct.std::__1::__compressed_pair_elem.724" }
%"struct.std::__1::__compressed_pair_elem.724" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.728" = type { %"class.std::__1::__tree.729" }
%"class.std::__1::__tree.729" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.730", %"class.std::__1::__compressed_pair.734" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.734" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.737" }
%"class.v8::internal::TaggedImpl.737" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.736" }
%"class.v8::internal::TaggedImpl.736" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.744", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.744" = type { %"class.std::__1::__compressed_pair.745" }
%"class.std::__1::__compressed_pair.745" = type { %"struct.std::__1::__compressed_pair_elem.746" }
%"struct.std::__1::__compressed_pair_elem.746" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.750", %"class.v8::internal::DetachableVector.751", %"class.v8::internal::DetachableVector.750", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.751" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.750" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.738", %"class.std::__1::unique_ptr.481" }
%"class.std::__1::unique_ptr.738" = type { %"class.std::__1::__compressed_pair.739" }
%"class.std::__1::__compressed_pair.739" = type { %"struct.std::__1::__compressed_pair_elem.740" }
%"struct.std::__1::__compressed_pair_elem.740" = type { %"class.v8::internal::VirtualMemory"* }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.752", %"class.std::__1::vector.758", %"class.std::__1::unique_ptr.765", %"class.std::__1::vector.772", %"class.std::__1::unique_ptr.779", i64, %"class.std::__1::vector.785", %"class.std::__1::vector.793", %"class.std::__1::vector.801", i8, i8, i32 }
%"class.std::__1::unique_ptr.752" = type { %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.754" }
%"struct.std::__1::__compressed_pair_elem.754" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.758" = type { %"class.std::__1::__vector_base.759" }
%"class.std::__1::__vector_base.759" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.760" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.765" = type { %"class.std::__1::__compressed_pair.766" }
%"class.std::__1::__compressed_pair.766" = type { %"struct.std::__1::__compressed_pair_elem.767" }
%"struct.std::__1::__compressed_pair_elem.767" = type { %"class.v8::internal::GlobalHandles::NodeSpace.768"* }
%"class.v8::internal::GlobalHandles::NodeSpace.768" = type opaque
%"class.std::__1::vector.772" = type { %"class.std::__1::__vector_base.773" }
%"class.std::__1::__vector_base.773" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.774" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.774" = type { %"struct.std::__1::__compressed_pair_elem.775" }
%"struct.std::__1::__compressed_pair_elem.775" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.785" = type { %"class.std::__1::__vector_base.786" }
%"class.std::__1::__vector_base.786" = type { %"struct.std::__1::pair.787"*, %"struct.std::__1::pair.787"*, %"class.std::__1::__compressed_pair.788" }
%"struct.std::__1::pair.787" = type opaque
%"class.std::__1::__compressed_pair.788" = type { %"struct.std::__1::__compressed_pair_elem.789" }
%"struct.std::__1::__compressed_pair_elem.789" = type { %"struct.std::__1::pair.787"* }
%"class.std::__1::vector.793" = type { %"class.std::__1::__vector_base.794" }
%"class.std::__1::__vector_base.794" = type { %"struct.std::__1::pair.795"*, %"struct.std::__1::pair.795"*, %"class.std::__1::__compressed_pair.796" }
%"struct.std::__1::pair.795" = type opaque
%"class.std::__1::__compressed_pair.796" = type { %"struct.std::__1::__compressed_pair_elem.797" }
%"struct.std::__1::__compressed_pair_elem.797" = type { %"struct.std::__1::pair.795"* }
%"class.std::__1::vector.801" = type { %"class.std::__1::__vector_base.802" }
%"class.std::__1::__vector_base.802" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.803" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.std::__1::__compressed_pair.803" = type { %"struct.std::__1::__compressed_pair_elem.804" }
%"struct.std::__1::__compressed_pair_elem.804" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.808", %"class.std::__1::vector.815" }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.822" }
%"class.std::__1::unique_ptr.822" = type { %"class.std::__1::__compressed_pair.823" }
%"class.std::__1::__compressed_pair.823" = type { %"struct.std::__1::__compressed_pair_elem.824" }
%"struct.std::__1::__compressed_pair_elem.824" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.815" = type { %"class.std::__1::__vector_base.816" }
%"class.std::__1::__vector_base.816" = type { i32*, i32*, %"class.std::__1::__compressed_pair.817" }
%"class.std::__1::__compressed_pair.817" = type { %"struct.std::__1::__compressed_pair_elem.818" }
%"struct.std::__1::__compressed_pair_elem.818" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"struct.std::__1::atomic.828" = type { %"struct.std::__1::__atomic_base.829" }
%"struct.std::__1::__atomic_base.829" = type { %"struct.std::__1::__cxx_atomic_impl.830" }
%"struct.std::__1::__cxx_atomic_impl.830" = type { %"struct.std::__1::__cxx_atomic_base_impl.831" }
%"struct.std::__1::__cxx_atomic_base_impl.831" = type { i32 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.838" = type { %"struct.std::__1::__atomic_base.839" }
%"struct.std::__1::__atomic_base.839" = type { %"struct.std::__1::__cxx_atomic_impl.840" }
%"struct.std::__1::__cxx_atomic_impl.840" = type { %"struct.std::__1::__cxx_atomic_base_impl.841" }
%"struct.std::__1::__cxx_atomic_base_impl.841" = type { i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.843" }
%"class.std::__1::__compressed_pair.843" = type { %"struct.std::__1::__compressed_pair_elem.844" }
%"struct.std::__1::__compressed_pair_elem.844" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.845 }
%union.anon.845 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.849" = type { %"class.std::__1::__hash_table.850" }
%"class.std::__1::__hash_table.850" = type <{ %"class.std::__1::unique_ptr.851", %"class.std::__1::__compressed_pair.861", %"class.std::__1::__compressed_pair.866", %"class.std::__1::__compressed_pair.869", [4 x i8] }>
%"class.std::__1::unique_ptr.851" = type { %"class.std::__1::__compressed_pair.852" }
%"class.std::__1::__compressed_pair.852" = type { %"struct.std::__1::__compressed_pair_elem.853", %"struct.std::__1::__compressed_pair_elem.855" }
%"struct.std::__1::__compressed_pair_elem.853" = type { %"struct.std::__1::__hash_node_base.854"** }
%"struct.std::__1::__hash_node_base.854" = type { %"struct.std::__1::__hash_node_base.854"* }
%"struct.std::__1::__compressed_pair_elem.855" = type { %"class.std::__1::__bucket_list_deallocator.856" }
%"class.std::__1::__bucket_list_deallocator.856" = type { %"class.std::__1::__compressed_pair.857" }
%"class.std::__1::__compressed_pair.857" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.861" = type { %"struct.std::__1::__compressed_pair_elem.862" }
%"struct.std::__1::__compressed_pair_elem.862" = type { %"struct.std::__1::__hash_node_base.854" }
%"class.std::__1::__compressed_pair.866" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.869" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.875", %"class.v8::internal::Handle.881", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.882", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.875" = type { %"class.std::__1::__compressed_pair.876" }
%"class.std::__1::__compressed_pair.876" = type { %"struct.std::__1::__compressed_pair_elem.877" }
%"struct.std::__1::__compressed_pair_elem.877" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.881" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.882" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.883", %"class.std::__1::vector.889", %"class.std::__1::unique_ptr.897", %"class.std::__1::unique_ptr.903", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.909", %"class.std::__1::vector.915", %"struct.std::__1::pair.923" }
%"class.std::__1::unique_ptr.883" = type { %"class.std::__1::__compressed_pair.884" }
%"class.std::__1::__compressed_pair.884" = type { %"struct.std::__1::__compressed_pair_elem.885" }
%"struct.std::__1::__compressed_pair_elem.885" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.889" = type { %"class.std::__1::__vector_base.890" }
%"class.std::__1::__vector_base.890" = type { %"class.std::__1::unique_ptr.891"*, %"class.std::__1::unique_ptr.891"*, %"class.std::__1::__compressed_pair.892" }
%"class.std::__1::unique_ptr.891" = type opaque
%"class.std::__1::__compressed_pair.892" = type { %"struct.std::__1::__compressed_pair_elem.893" }
%"struct.std::__1::__compressed_pair_elem.893" = type { %"class.std::__1::unique_ptr.891"* }
%"class.std::__1::unique_ptr.897" = type { %"class.std::__1::__compressed_pair.898" }
%"class.std::__1::__compressed_pair.898" = type { %"struct.std::__1::__compressed_pair_elem.899" }
%"struct.std::__1::__compressed_pair_elem.899" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.909" = type { %"class.std::__1::__compressed_pair.910" }
%"class.std::__1::__compressed_pair.910" = type { %"struct.std::__1::__compressed_pair_elem.911" }
%"struct.std::__1::__compressed_pair_elem.911" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.915" = type { %"class.std::__1::__vector_base.916" }
%"class.std::__1::__vector_base.916" = type { %"struct.std::__1::pair.917"*, %"struct.std::__1::pair.917"*, %"class.std::__1::__compressed_pair.918" }
%"struct.std::__1::pair.917" = type opaque
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"struct.std::__1::pair.917"* }
%"struct.std::__1::pair.923" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.924" = type { %"class.std::__1::__compressed_pair.925" }
%"class.std::__1::__compressed_pair.925" = type { %"struct.std::__1::__compressed_pair_elem.926" }
%"struct.std::__1::__compressed_pair_elem.926" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.927", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.927" = type { %"class.std::__1::__hash_table.928" }
%"class.std::__1::__hash_table.928" = type <{ %"class.std::__1::unique_ptr.929", %"class.std::__1::__compressed_pair.939", %"class.std::__1::__compressed_pair.944", %"class.std::__1::__compressed_pair.948", [4 x i8] }>
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931", %"struct.std::__1::__compressed_pair_elem.933" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"struct.std::__1::__hash_node_base.932"** }
%"struct.std::__1::__hash_node_base.932" = type { %"struct.std::__1::__hash_node_base.932"* }
%"struct.std::__1::__compressed_pair_elem.933" = type { %"class.std::__1::__bucket_list_deallocator.934" }
%"class.std::__1::__bucket_list_deallocator.934" = type { %"class.std::__1::__compressed_pair.935" }
%"class.std::__1::__compressed_pair.935" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.939" = type { %"struct.std::__1::__compressed_pair_elem.940" }
%"struct.std::__1::__compressed_pair_elem.940" = type { %"struct.std::__1::__hash_node_base.932" }
%"class.std::__1::__compressed_pair.944" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.948" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.962" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"struct.std::__1::pair.956"**, %"class.std::__1::__compressed_pair.957" }
%"struct.std::__1::pair.956" = type opaque
%"class.std::__1::__compressed_pair.957" = type { %"struct.std::__1::__compressed_pair_elem.958" }
%"struct.std::__1::__compressed_pair_elem.958" = type { %"struct.std::__1::pair.956"** }
%"class.std::__1::__compressed_pair.962" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.967" = type { %"class.std::__1::__vector_base.968" }
%"class.std::__1::__vector_base.968" = type { %"class.v8::internal::Handle.969"*, %"class.v8::internal::Handle.969"*, %"class.std::__1::__compressed_pair.970" }
%"class.v8::internal::Handle.969" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.970" = type { %"struct.std::__1::__compressed_pair_elem.971" }
%"struct.std::__1::__compressed_pair_elem.971" = type { %"class.v8::internal::Handle.969"* }
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type opaque
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.833", i32, %"class.v8::Local.0" }
%"class.v8::Local.833" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.975" = type { %"class.std::__1::__compressed_pair.976" }
%"class.std::__1::__compressed_pair.976" = type { %"struct.std::__1::__compressed_pair_elem.977" }
%"struct.std::__1::__compressed_pair_elem.977" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.981" = type { %"class.std::__1::__vector_base.982" }
%"class.std::__1::__vector_base.982" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.983" }
%"class.std::__1::__compressed_pair.983" = type { %"struct.std::__1::__compressed_pair_elem.984" }
%"struct.std::__1::__compressed_pair_elem.984" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.988" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.989" = type { %"class.std::__1::__hash_table.990" }
%"class.std::__1::__hash_table.990" = type <{ %"class.std::__1::unique_ptr.991", %"class.std::__1::__compressed_pair.1001", %"class.std::__1::__compressed_pair.1006", %"class.std::__1::__compressed_pair.1009", [4 x i8] }>
%"class.std::__1::unique_ptr.991" = type { %"class.std::__1::__compressed_pair.992" }
%"class.std::__1::__compressed_pair.992" = type { %"struct.std::__1::__compressed_pair_elem.993", %"struct.std::__1::__compressed_pair_elem.995" }
%"struct.std::__1::__compressed_pair_elem.993" = type { %"struct.std::__1::__hash_node_base.994"** }
%"struct.std::__1::__hash_node_base.994" = type { %"struct.std::__1::__hash_node_base.994"* }
%"struct.std::__1::__compressed_pair_elem.995" = type { %"class.std::__1::__bucket_list_deallocator.996" }
%"class.std::__1::__bucket_list_deallocator.996" = type { %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1001" = type { %"struct.std::__1::__compressed_pair_elem.1002" }
%"struct.std::__1::__compressed_pair_elem.1002" = type { %"struct.std::__1::__hash_node_base.994" }
%"class.std::__1::__compressed_pair.1006" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1009" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.541" = type { %"class.std::__1::__vector_base.542" }
%"class.std::__1::__vector_base.542" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.543" }
%"class.std::__1::__compressed_pair.543" = type { %"struct.std::__1::__compressed_pair_elem.544" }
%"struct.std::__1::__compressed_pair_elem.544" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1013", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1042", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1043", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1013" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.1038, %union.anon.1040, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.1038 = type { i64 }
%union.anon.1040 = type { i64 }
%"class.std::__1::weak_ptr.1042" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1043" = type { %"class.v8::PersistentBase.1044" }
%"class.v8::PersistentBase.1044" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1014", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1014" = type { %"class.std::__1::__hash_table.1015" }
%"class.std::__1::__hash_table.1015" = type <{ %"class.std::__1::unique_ptr.1016", %"class.std::__1::__compressed_pair.1026", %"class.std::__1::__compressed_pair.1031", %"class.std::__1::__compressed_pair.1034", [4 x i8] }>
%"class.std::__1::unique_ptr.1016" = type { %"class.std::__1::__compressed_pair.1017" }
%"class.std::__1::__compressed_pair.1017" = type { %"struct.std::__1::__compressed_pair_elem.1018", %"struct.std::__1::__compressed_pair_elem.1020" }
%"struct.std::__1::__compressed_pair_elem.1018" = type { %"struct.std::__1::__hash_node_base.1019"** }
%"struct.std::__1::__hash_node_base.1019" = type { %"struct.std::__1::__hash_node_base.1019"* }
%"struct.std::__1::__compressed_pair_elem.1020" = type { %"class.std::__1::__bucket_list_deallocator.1021" }
%"class.std::__1::__bucket_list_deallocator.1021" = type { %"class.std::__1::__compressed_pair.1022" }
%"class.std::__1::__compressed_pair.1022" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1026" = type { %"struct.std::__1::__compressed_pair_elem.1027" }
%"struct.std::__1::__compressed_pair_elem.1027" = type { %"struct.std::__1::__hash_node_base.1019" }
%"class.std::__1::__compressed_pair.1031" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1034" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.1047" }
%"struct.std::__1::__compressed_pair_elem.1047" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1074", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1083" = type { %"class.std::__1::__compressed_pair.1084" }
%"class.std::__1::__compressed_pair.1084" = type { %"struct.std::__1::__compressed_pair_elem.1085" }
%"struct.std::__1::__compressed_pair_elem.1085" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.834", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.834" = type { %"class.v8::Context"* }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1091" }
%"class.std::__1::unordered_map.1091" = type { %"class.std::__1::__hash_table.1092" }
%"class.std::__1::__hash_table.1092" = type <{ %"class.std::__1::unique_ptr.1093", %"class.std::__1::__compressed_pair.1103", %"class.std::__1::__compressed_pair.1108", %"class.std::__1::__compressed_pair.1111", [4 x i8] }>
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095", %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"struct.std::__1::__hash_node_base.1096"** }
%"struct.std::__1::__hash_node_base.1096" = type { %"struct.std::__1::__hash_node_base.1096"* }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"class.std::__1::__bucket_list_deallocator.1098" }
%"class.std::__1::__bucket_list_deallocator.1098" = type { %"class.std::__1::__compressed_pair.1099" }
%"class.std::__1::__compressed_pair.1099" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1103" = type { %"struct.std::__1::__compressed_pair_elem.1104" }
%"struct.std::__1::__compressed_pair_elem.1104" = type { %"struct.std::__1::__hash_node_base.1096" }
%"class.std::__1::__compressed_pair.1108" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"struct.std::__1::atomic.1117" = type { %"struct.std::__1::__atomic_base.1118" }
%"struct.std::__1::__atomic_base.1118" = type { %"struct.std::__1::__cxx_atomic_impl.1119" }
%"struct.std::__1::__cxx_atomic_impl.1119" = type { %"struct.std::__1::__cxx_atomic_base_impl.1120" }
%"struct.std::__1::__cxx_atomic_base_impl.1120" = type { %"class.std::__1::vector.1121"* }
%"class.std::__1::vector.1121" = type { %"class.std::__1::__vector_base.1122" }
%"class.std::__1::__vector_base.1122" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1123" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.v8::MemoryRange"* }
%"class.std::__1::unique_ptr.1143" = type { %"class.std::__1::__compressed_pair.1144" }
%"class.std::__1::__compressed_pair.1144" = type { %"struct.std::__1::__compressed_pair_elem.1145" }
%"struct.std::__1::__compressed_pair_elem.1145" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::RuntimeCallTimerScope" = type { %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::internal::Arguments.1162" = type { i64, i64* }
%"class.v8::internal::Factory" = type { i8 }
%"class.v8::internal::LookupIterator" = type { i32, i32, i8, i32, %"class.v8::internal::PropertyDetails", %"class.v8::internal::Isolate"*, %"class.v8::internal::Handle.1178", %"class.v8::internal::Handle.1160", %"class.v8::internal::Handle.1160", %"class.v8::internal::Handle.1164", %"class.v8::internal::Handle.1160", i64, %"class.v8::internal::InternalIndex" }
%"class.v8::internal::PropertyDetails" = type { i32 }
%"class.v8::internal::Handle.1178" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1164" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::Handle.1160" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::InternalIndex" = type { i64 }
%"class.v8::internal::Handle<v8::internal::Object>::ObjectRef" = type { %"class.v8::internal::Object" }
%"class.v8::internal::FactoryBase" = type { i8 }

$_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE = comdat any

@_ZN2v88internal12TracingFlags13runtime_statsE = external local_unnamed_addr global %"struct.std::__1::atomic.1133", align 4
@_ZZN2v88internalL36Stats_Runtime_TransitionElementsKindEiPmPNS0_7IsolateEE27trace_event_unique_atomic25 = internal global i64 0, align 8
@.str = private unnamed_addr constant [31 x i8] c"disabled-by-default-v8.runtime\00", align 1
@.str.1 = private unnamed_addr constant [42 x i8] c"V8.Runtime_Runtime_TransitionElementsKind\00", align 1
@.str.2 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.3 = private unnamed_addr constant [21 x i8] c"args[0].IsJSObject()\00", align 1
@.str.4 = private unnamed_addr constant [16 x i8] c"args[1].IsMap()\00", align 1
@.str.5 = private unnamed_addr constant [69 x i8] c"Fatal JavaScript invalid size error when transitioning elements kind\00", align 1
@_ZN2v88internal16ElementsAccessor19elements_accessors_E = external local_unnamed_addr global %"class.v8::internal::ElementsAccessor"**, align 8
@_ZZN2v88internalL44Stats_Runtime_TransitionElementsKindWithKindEiPmPNS0_7IsolateEE27trace_event_unique_atomic43 = internal global i64 0, align 8
@.str.6 = private unnamed_addr constant [50 x i8] c"V8.Runtime_Runtime_TransitionElementsKindWithKind\00", align 1
@.str.7 = private unnamed_addr constant [16 x i8] c"args[1].IsSmi()\00", align 1
@_ZZN2v88internalL22Stats_Runtime_NewArrayEiPmPNS0_7IsolateEE27trace_event_unique_atomic53 = internal global i64 0, align 8
@.str.8 = private unnamed_addr constant [28 x i8] c"V8.Runtime_Runtime_NewArray\00", align 1
@.str.9 = private unnamed_addr constant [26 x i8] c"args[argc].IsJSFunction()\00", align 1
@.str.10 = private unnamed_addr constant [30 x i8] c"args[argc + 1].IsJSReceiver()\00", align 1
@.str.11 = private unnamed_addr constant [30 x i8] c"args[argc + 2].IsHeapObject()\00", align 1
@_ZZN2v88internalL31Stats_Runtime_NormalizeElementsEiPmPNS0_7IsolateEE28trace_event_unique_atomic157 = internal global i64 0, align 8
@.str.12 = private unnamed_addr constant [37 x i8] c"V8.Runtime_Runtime_NormalizeElements\00", align 1
@.str.13 = private unnamed_addr constant [32 x i8] c"!array->HasTypedArrayElements()\00", align 1
@.str.14 = private unnamed_addr constant [26 x i8] c"!array->IsJSGlobalProxy()\00", align 1
@_ZZN2v88internalL31Stats_Runtime_GrowArrayElementsEiPmPNS0_7IsolateEE28trace_event_unique_atomic169 = internal global i64 0, align 8
@.str.15 = private unnamed_addr constant [37 x i8] c"V8.Runtime_Runtime_GrowArrayElements\00", align 1
@.str.17 = private unnamed_addr constant [20 x i8] c"key->IsHeapNumber()\00", align 1
@_ZZN2v88internalL26Stats_Runtime_ArrayIsArrayEiPmPNS0_7IsolateEE28trace_event_unique_atomic204 = internal global i64 0, align 8
@.str.18 = private unnamed_addr constant [32 x i8] c"V8.Runtime_Runtime_ArrayIsArray\00", align 1
@_ZZN2v88internalL21Stats_Runtime_IsArrayEiPmPNS0_7IsolateEE28trace_event_unique_atomic213 = internal global i64 0, align 8
@.str.20 = private unnamed_addr constant [27 x i8] c"V8.Runtime_Runtime_IsArray\00", align 1
@_ZZN2v88internalL37Stats_Runtime_ArraySpeciesConstructorEiPmPNS0_7IsolateEE28trace_event_unique_atomic220 = internal global i64 0, align 8
@.str.21 = private unnamed_addr constant [43 x i8] c"V8.Runtime_Runtime_ArraySpeciesConstructor\00", align 1
@_ZZN2v88internalL32Stats_Runtime_ArrayIncludes_SlowEiPmPNS0_7IsolateEE28trace_event_unique_atomic229 = internal global i64 0, align 8
@.str.22 = private unnamed_addr constant [38 x i8] c"V8.Runtime_Runtime_ArrayIncludes_Slow\00", align 1
@_ZZN2v88internalL26Stats_Runtime_ArrayIndexOfEiPmPNS0_7IsolateEE28trace_event_unique_atomic330 = internal global i64 0, align 8
@.str.24 = private unnamed_addr constant [32 x i8] c"V8.Runtime_Runtime_ArrayIndexOf\00", align 1
@.str.25 = private unnamed_addr constant [24 x i8] c"Array.prototype.indexOf\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal30Runtime_TransitionElementsKindEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL36Stats_Runtime_TransitionElementsKindEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %84

8:                                                ; preds = %3
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load i64, i64* %1, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21, !prof !3

21:                                               ; preds = %8
  %22 = and i64 %18, -4294967296
  %23 = add i64 %18, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp ugt i16 %30, 188
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %21, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

33:                                               ; preds = %21
  %34 = add i64 %9, -8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %50, label %39, !prof !3

39:                                               ; preds = %33
  %40 = and i64 %36, -4294967296
  %41 = add i64 %36, -1
  %42 = inttoptr i64 %41 to i32*
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = zext i32 %43 to i64
  %45 = or i64 %40, %44
  %46 = add i64 %45, 7
  %47 = inttoptr i64 %46 to i16*
  %48 = load atomic i16, i16* %47 monotonic, align 2
  %49 = icmp eq i16 %48, 172
  br i1 %49, label %51, label %50, !prof !2

50:                                               ; preds = %39, %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #8
  unreachable

51:                                               ; preds = %39
  %52 = add i64 %36, 10
  %53 = inttoptr i64 %52 to i8*
  %54 = load i8, i8* %53, align 1
  %55 = lshr i8 %54, 2
  %56 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %57 = zext i8 %55 to i64
  %58 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %56, i64 %57
  %59 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %58, align 8
  %60 = bitcast %"class.v8::internal::ElementsAccessor"* %59 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)***
  %61 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)*** %60, align 8
  %62 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)** %61, i64 13
  %63 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)** %62, align 8
  %64 = tail call i16 %63(%"class.v8::internal::ElementsAccessor"* %59, i64* %1, i64* %35) #5
  %65 = trunc i16 %64 to i8
  %66 = icmp eq i8 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %51
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.5, i64 0, i64 0)) #8
  unreachable

68:                                               ; preds = %51
  %69 = load i64, i64* %1, align 8
  %70 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %70, label %84, label %71

71:                                               ; preds = %68
  %72 = inttoptr i64 %12 to i64*
  %73 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %74 = load i64*, i64** %73, align 8
  store i64 %12, i64* %11, align 8
  %75 = load i32, i32* %15, align 8
  %76 = add nsw i32 %75, -1
  store i32 %76, i32* %15, align 8
  %77 = load i64*, i64** %13, align 8
  %78 = icmp eq i64* %77, %14
  br i1 %78, label %81, label %79

79:                                               ; preds = %71
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %80 = load i64*, i64** %73, align 8
  br label %81

81:                                               ; preds = %79, %71
  %82 = phi i64* [ %80, %79 ], [ %72, %71 ]
  %83 = phi i64* [ %14, %79 ], [ %74, %71 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %82, i64* %83) #5
  br label %84

84:                                               ; preds = %81, %68, %6
  %85 = phi i64 [ %7, %6 ], [ %69, %68 ], [ %69, %81 ]
  ret i64 %85
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL36Stats_Runtime_TransitionElementsKindEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 229) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL36Stats_Runtime_TransitionElementsKindEiPmPNS0_7IsolateEE27trace_event_unique_atomic25 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL36Stats_Runtime_TransitionElementsKindEiPmPNS0_7IsolateEE27trace_event_unique_atomic25 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.1, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = ptrtoint i64* %1 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  %76 = load i64, i64* %1, align 8
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79, !prof !3

79:                                               ; preds = %66
  %80 = and i64 %76, -4294967296
  %81 = add i64 %76, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp ugt i16 %88, 188
  br i1 %89, label %91, label %90, !prof !2

90:                                               ; preds = %79, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

91:                                               ; preds = %79
  %92 = add i64 %67, -8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %108, label %97, !prof !3

97:                                               ; preds = %91
  %98 = and i64 %94, -4294967296
  %99 = add i64 %94, -1
  %100 = inttoptr i64 %99 to i32*
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = zext i32 %101 to i64
  %103 = or i64 %98, %102
  %104 = add i64 %103, 7
  %105 = inttoptr i64 %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = icmp eq i16 %106, 172
  br i1 %107, label %109, label %108, !prof !2

108:                                              ; preds = %97, %91
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.4, i64 0, i64 0)) #8
  unreachable

109:                                              ; preds = %97
  %110 = add i64 %94, 10
  %111 = inttoptr i64 %110 to i8*
  %112 = load i8, i8* %111, align 1
  %113 = lshr i8 %112, 2
  %114 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %115 = zext i8 %113 to i64
  %116 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %114, i64 %115
  %117 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %116, align 8
  %118 = bitcast %"class.v8::internal::ElementsAccessor"* %117 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)***
  %119 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)*** %118, align 8
  %120 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)** %119, i64 13
  %121 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i64*)** %120, align 8
  %122 = call i16 %121(%"class.v8::internal::ElementsAccessor"* %117, i64* %1, i64* %93) #5
  %123 = trunc i16 %122 to i8
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %109
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([69 x i8], [69 x i8]* @.str.5, i64 0, i64 0)) #8
  unreachable

126:                                              ; preds = %109
  %127 = load i64, i64* %1, align 8
  %128 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %128, label %142, label %129

129:                                              ; preds = %126
  %130 = inttoptr i64 %70 to i64*
  %131 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %132 = load i64*, i64** %131, align 8
  store i64 %70, i64* %69, align 8
  %133 = load i32, i32* %73, align 8
  %134 = add nsw i32 %133, -1
  store i32 %134, i32* %73, align 8
  %135 = load i64*, i64** %71, align 8
  %136 = icmp eq i64* %135, %72
  br i1 %136, label %139, label %137

137:                                              ; preds = %129
  store i64* %72, i64** %71, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %138 = load i64*, i64** %131, align 8
  br label %139

139:                                              ; preds = %137, %129
  %140 = phi i64* [ %138, %137 ], [ %130, %129 ]
  %141 = phi i64* [ %72, %137 ], [ %132, %129 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %140, i64* %141) #5
  br label %142

142:                                              ; preds = %126, %139
  %143 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %144 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %143, null
  br i1 %144, label %161, label %145

145:                                              ; preds = %142
  %146 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %147 = load i8*, i8** %146, align 8
  %148 = load atomic i8, i8* %147 monotonic, align 1
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %161, label %150

150:                                              ; preds = %145
  %151 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %152 = load i8*, i8** %146, align 8
  %153 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %154 = load i8*, i8** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.v8::TracingController"* %151 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %158 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %157, align 8
  %159 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %158, i64 5
  %160 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %159, align 8
  call void %160(%"class.v8::TracingController"* %151, i8* %152, i8* %154, i64 %156) #5
  br label %161

161:                                              ; preds = %142, %145, %150
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %162 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %163 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %162, align 8
  %164 = icmp eq %"class.v8::internal::RuntimeCallStats"* %163, null
  br i1 %164, label %167, label %165, !prof !2

165:                                              ; preds = %161
  %166 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %163, %"class.v8::internal::RuntimeCallTimer"* %166) #5
  br label %167

167:                                              ; preds = %161, %165
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %127
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal38Runtime_TransitionElementsKindWithKindEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL44Stats_Runtime_TransitionElementsKindWithKindEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %59

8:                                                ; preds = %3
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load i64, i64* %1, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21, !prof !3

21:                                               ; preds = %8
  %22 = and i64 %18, -4294967296
  %23 = add i64 %18, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp ugt i16 %30, 188
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %21, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

33:                                               ; preds = %21
  %34 = add i64 %9, -8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %40, label %39, !prof !2

39:                                               ; preds = %33
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #8
  unreachable

40:                                               ; preds = %33
  %41 = trunc i64 %36 to i32
  %42 = lshr i32 %41, 1
  %43 = trunc i32 %42 to i8
  tail call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %1, i8 zeroext %43) #5
  %44 = load i64, i64* %1, align 8
  %45 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %45, label %59, label %46

46:                                               ; preds = %40
  %47 = inttoptr i64 %12 to i64*
  %48 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %49 = load i64*, i64** %48, align 8
  store i64 %12, i64* %11, align 8
  %50 = load i32, i32* %15, align 8
  %51 = add nsw i32 %50, -1
  store i32 %51, i32* %15, align 8
  %52 = load i64*, i64** %13, align 8
  %53 = icmp eq i64* %52, %14
  br i1 %53, label %56, label %54

54:                                               ; preds = %46
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %55 = load i64*, i64** %48, align 8
  br label %56

56:                                               ; preds = %54, %46
  %57 = phi i64* [ %55, %54 ], [ %47, %46 ]
  %58 = phi i64* [ %14, %54 ], [ %49, %46 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %57, i64* %58) #5
  br label %59

59:                                               ; preds = %56, %40, %6
  %60 = phi i64 [ %7, %6 ], [ %44, %40 ], [ %44, %56 ]
  ret i64 %60
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL44Stats_Runtime_TransitionElementsKindWithKindEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 230) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL44Stats_Runtime_TransitionElementsKindWithKindEiPmPNS0_7IsolateEE27trace_event_unique_atomic43 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL44Stats_Runtime_TransitionElementsKindWithKindEiPmPNS0_7IsolateEE27trace_event_unique_atomic43 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.6, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = ptrtoint i64* %1 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  %76 = load i64, i64* %1, align 8
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79, !prof !3

79:                                               ; preds = %66
  %80 = and i64 %76, -4294967296
  %81 = add i64 %76, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp ugt i16 %88, 188
  br i1 %89, label %91, label %90, !prof !2

90:                                               ; preds = %79, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

91:                                               ; preds = %79
  %92 = add i64 %67, -8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %98, label %97, !prof !2

97:                                               ; preds = %91
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.7, i64 0, i64 0)) #8
  unreachable

98:                                               ; preds = %91
  %99 = trunc i64 %94 to i32
  %100 = lshr i32 %99, 1
  %101 = trunc i32 %100 to i8
  call void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64* %1, i8 zeroext %101) #5
  %102 = load i64, i64* %1, align 8
  %103 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %103, label %117, label %104

104:                                              ; preds = %98
  %105 = inttoptr i64 %70 to i64*
  %106 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %107 = load i64*, i64** %106, align 8
  store i64 %70, i64* %69, align 8
  %108 = load i32, i32* %73, align 8
  %109 = add nsw i32 %108, -1
  store i32 %109, i32* %73, align 8
  %110 = load i64*, i64** %71, align 8
  %111 = icmp eq i64* %110, %72
  br i1 %111, label %114, label %112

112:                                              ; preds = %104
  store i64* %72, i64** %71, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %113 = load i64*, i64** %106, align 8
  br label %114

114:                                              ; preds = %112, %104
  %115 = phi i64* [ %113, %112 ], [ %105, %104 ]
  %116 = phi i64* [ %72, %112 ], [ %107, %104 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %115, i64* %116) #5
  br label %117

117:                                              ; preds = %98, %114
  %118 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %119 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %118, null
  br i1 %119, label %136, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %122 = load i8*, i8** %121, align 8
  %123 = load atomic i8, i8* %122 monotonic, align 1
  %124 = icmp eq i8 %123, 0
  br i1 %124, label %136, label %125

125:                                              ; preds = %120
  %126 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %127 = load i8*, i8** %121, align 8
  %128 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %129 = load i8*, i8** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %131 = load i64, i64* %130, align 8
  %132 = bitcast %"class.v8::TracingController"* %126 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %133 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %133, i64 5
  %135 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %134, align 8
  call void %135(%"class.v8::TracingController"* %126, i8* %127, i8* %129, i64 %131) #5
  br label %136

136:                                              ; preds = %117, %120, %125
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %137 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %138 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %137, align 8
  %139 = icmp eq %"class.v8::internal::RuntimeCallStats"* %138, null
  br i1 %139, label %142, label %140, !prof !2

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %138, %"class.v8::internal::RuntimeCallTimer"* %141) #5
  br label %142

142:                                              ; preds = %136, %140
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %102
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal16Runtime_NewArrayEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::Arguments.1162", align 8
  %5 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %9, label %7, !prof !2

7:                                                ; preds = %3
  %8 = tail call fastcc i64 @_ZN2v88internalL22Stats_Runtime_NewArrayEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %235

9:                                                ; preds = %3
  %10 = ptrtoint i64* %1 to i64
  %11 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %12 = bitcast %"struct.v8::internal::HandleScopeData"* %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %15 = load i64*, i64** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %17 = load i32, i32* %16, align 8
  %18 = add nsw i32 %17, 1
  store i32 %18, i32* %16, align 8
  %19 = add nsw i32 %0, -3
  %20 = bitcast %"class.v8::internal::Arguments.1162"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #5
  %21 = getelementptr inbounds %"class.v8::internal::Arguments.1162", %"class.v8::internal::Arguments.1162"* %4, i64 0, i32 0
  %22 = sext i32 %19 to i64
  store i64 %22, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Arguments.1162", %"class.v8::internal::Arguments.1162"* %4, i64 0, i32 1
  store i64* %1, i64** %23, align 8
  %24 = shl nsw i32 %19, 3
  %25 = sext i32 %24 to i64
  %26 = sub i64 %10, %25
  %27 = inttoptr i64 %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 1
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %43, label %31, !prof !3

31:                                               ; preds = %9
  %32 = and i64 %28, -4294967296
  %33 = add i64 %28, -1
  %34 = inttoptr i64 %33 to i32*
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = zext i32 %35 to i64
  %37 = or i64 %32, %36
  %38 = add i64 %37, 7
  %39 = inttoptr i64 %38 to i16*
  %40 = load atomic i16, i16* %39 monotonic, align 2
  %41 = add i16 %40, -1059
  %42 = icmp ult i16 %41, 15
  br i1 %42, label %44, label %43, !prof !2

43:                                               ; preds = %31, %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)) #8
  unreachable

44:                                               ; preds = %31
  %45 = shl i32 %0, 3
  %46 = add i32 %45, -16
  %47 = sext i32 %46 to i64
  %48 = sub i64 %10, %47
  %49 = inttoptr i64 %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 1
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %64, label %53, !prof !3

53:                                               ; preds = %44
  %54 = and i64 %50, -4294967296
  %55 = add i64 %50, -1
  %56 = inttoptr i64 %55 to i32*
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = zext i32 %57 to i64
  %59 = or i64 %54, %58
  %60 = add i64 %59, 7
  %61 = inttoptr i64 %60 to i16*
  %62 = load atomic i16, i16* %61 monotonic, align 2
  %63 = icmp ugt i16 %62, 185
  br i1 %63, label %65, label %64, !prof !2

64:                                               ; preds = %53, %44
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #8
  unreachable

65:                                               ; preds = %53
  %66 = add i32 %45, -8
  %67 = sext i32 %66 to i64
  %68 = sub i64 %10, %67
  %69 = inttoptr i64 %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = and i64 %70, 1
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %73, label %74, !prof !4

73:                                               ; preds = %65
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0)) #8
  unreachable

74:                                               ; preds = %65
  %75 = and i64 %70, -4294967296
  %76 = add i64 %70, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = zext i32 %78 to i64
  %80 = or i64 %75, %79
  %81 = add i64 %80, 7
  %82 = inttoptr i64 %81 to i16*
  %83 = load atomic i16, i16* %82 monotonic, align 2
  %84 = icmp eq i16 %83, 90
  %85 = select i1 %84, i64 %68, i64 0
  %86 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %87 = inttoptr i64 %85 to i64*
  %88 = icmp eq i64 %85, 0
  %89 = xor i1 %88, true
  %90 = icmp eq i32 %19, 1
  br i1 %90, label %91, label %110

91:                                               ; preds = %74
  %92 = mul nsw i64 %22, -8
  %93 = add i64 %10, 8
  %94 = add i64 %93, %92
  %95 = inttoptr i64 %94 to i64*
  %96 = load i64, i64* %95, align 8
  %97 = and i64 %96, 1
  %98 = icmp eq i64 %97, 0
  br i1 %98, label %99, label %110

99:                                               ; preds = %91
  %100 = trunc i64 %96 to i32
  %101 = ashr i32 %100, 1
  %102 = icmp slt i32 %100, 0
  %103 = icmp ugt i32 %101, 33554432
  %104 = or i1 %102, %103
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = icmp eq i32 %101, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %105
  %108 = icmp slt i32 %100, 32760
  %109 = zext i1 %108 to i8
  br label %110

110:                                              ; preds = %107, %105, %99, %91, %74
  %111 = phi i8 [ 1, %74 ], [ 1, %105 ], [ 1, %99 ], [ %109, %107 ], [ 1, %91 ]
  %112 = phi i1 [ %89, %74 ], [ %89, %105 ], [ false, %99 ], [ %89, %107 ], [ false, %91 ]
  %113 = phi i1 [ false, %74 ], [ false, %105 ], [ false, %99 ], [ true, %107 ], [ false, %91 ]
  %114 = tail call i64* @_ZN2v88internal10JSFunction13GetDerivedMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %2, i64* %27, i64* %49) #5
  %115 = icmp eq i64* %114, null
  br i1 %115, label %116, label %118

116:                                              ; preds = %110
  %117 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %218

118:                                              ; preds = %110
  br i1 %112, label %119, label %127

119:                                              ; preds = %118
  %120 = load i64, i64* %87, align 8
  %121 = add i64 %120, 3
  %122 = inttoptr i64 %121 to i32*
  %123 = load i32, i32* %122, align 4
  %124 = lshr i32 %123, 1
  %125 = trunc i32 %124 to i8
  %126 = and i8 %125, 63
  br label %133

127:                                              ; preds = %118
  %128 = load i64, i64* %114, align 8
  %129 = add i64 %128, 10
  %130 = inttoptr i64 %129 to i8*
  %131 = load i8, i8* %130, align 1
  %132 = lshr i8 %131, 2
  br label %133

133:                                              ; preds = %127, %119
  %134 = phi i8 [ %126, %119 ], [ %132, %127 ]
  br i1 %113, label %135, label %162

135:                                              ; preds = %133
  %136 = and i8 %134, 1
  %137 = icmp ne i8 %136, 0
  %138 = icmp ult i8 %134, 6
  %139 = and i1 %138, %137
  br i1 %139, label %162, label %140

140:                                              ; preds = %135
  %141 = icmp ult i8 %134, 7
  br i1 %141, label %142, label %151

142:                                              ; preds = %140
  %143 = lshr i8 85, %134
  %144 = and i8 %143, 1
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %151, label %146

146:                                              ; preds = %142
  %147 = zext i8 %134 to i56
  %148 = shl nuw nsw i56 %147, 3
  %149 = lshr i56 1971445840412929, %148
  %150 = trunc i56 %149 to i8
  br label %151

151:                                              ; preds = %142, %140, %146
  %152 = phi i8 [ %150, %146 ], [ %134, %142 ], [ %134, %140 ]
  br i1 %88, label %162, label %153

153:                                              ; preds = %151
  %154 = load i64, i64* %87, align 8
  %155 = add i64 %154, 3
  %156 = inttoptr i64 %155 to i32*
  %157 = load i32, i32* %156, align 4
  %158 = zext i8 %152 to i32
  %159 = shl nuw nsw i32 %158, 1
  %160 = and i32 %157, -128
  %161 = or i32 %160, %159
  store atomic volatile i32 %161, i32* %156 monotonic, align 4
  br label %162

162:                                              ; preds = %153, %151, %135, %133
  %163 = phi i8 [ %134, %135 ], [ %152, %151 ], [ %152, %153 ], [ %134, %133 ]
  %164 = tail call i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %2, i64* nonnull %114, i8 zeroext %163) #5
  %165 = icmp ult i8 %163, 2
  %166 = select i1 %165, i64* %87, i64* null
  %167 = tail call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %86, i64* %164, i8 zeroext 0, i64* %166) #5
  tail call void @_ZN2v88internal7Factory17NewJSArrayStorageENS0_6HandleINS0_7JSArrayEEEiiNS0_26ArrayStorageAllocationModeE(%"class.v8::internal::Factory"* %86, i64* %167, i32 0, i32 0, i32 0) #5
  %168 = load i64, i64* %167, align 8
  %169 = and i64 %168, -4294967296
  %170 = add i64 %168, -1
  %171 = inttoptr i64 %170 to i32*
  %172 = load atomic i32, i32* %171 monotonic, align 4
  %173 = zext i32 %172 to i64
  %174 = or i64 %169, %173
  %175 = add i64 %174, 10
  %176 = inttoptr i64 %175 to i8*
  %177 = load i8, i8* %176, align 1
  %178 = call i64* @_ZN2v88internal32ArrayConstructInitializeElementsENS0_6HandleINS0_7JSArrayEEEPNS0_9ArgumentsILNS0_13ArgumentsTypeE1EEE(i64* %167, %"class.v8::internal::Arguments.1162"* nonnull %4) #5
  %179 = icmp eq i64* %178, null
  br i1 %179, label %180, label %182

180:                                              ; preds = %162
  %181 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %218

182:                                              ; preds = %162
  %183 = load i64, i64* %167, align 8
  %184 = and i64 %183, -4294967296
  %185 = add i64 %183, -1
  %186 = inttoptr i64 %185 to i32*
  %187 = load atomic i32, i32* %186 monotonic, align 4
  %188 = zext i32 %187 to i64
  %189 = or i64 %184, %188
  %190 = add i64 %189, 10
  %191 = inttoptr i64 %190 to i8*
  %192 = load i8, i8* %191, align 1
  %193 = xor i8 %192, %177
  %194 = icmp ugt i8 %193, 3
  br i1 %88, label %207, label %195

195:                                              ; preds = %182
  %196 = xor i1 %112, true
  %197 = or i1 %194, %196
  %198 = icmp eq i8 %111, 0
  %199 = or i1 %198, %197
  br i1 %199, label %200, label %218

200:                                              ; preds = %195
  %201 = load i64, i64* %87, align 8
  %202 = add i64 %201, 3
  %203 = inttoptr i64 %202 to i32*
  %204 = load i32, i32* %203, align 4
  %205 = and i32 %204, -130
  %206 = or i32 %205, 128
  store atomic volatile i32 %206, i32* %203 monotonic, align 4
  br label %218

207:                                              ; preds = %182
  %208 = icmp eq i8 %111, 0
  %209 = or i1 %208, %194
  br i1 %209, label %210, label %218

210:                                              ; preds = %207
  %211 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 603
  %212 = load i64, i64* %211, align 8
  %213 = add i64 %212, 11
  %214 = inttoptr i64 %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = icmp eq i32 %215, 2
  br i1 %216, label %217, label %218

217:                                              ; preds = %210
  call void @_ZN2v88internal10Protectors26InvalidateArrayConstructorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %218

218:                                              ; preds = %217, %210, %207, %200, %195, %180, %116
  %219 = phi i64* [ %117, %116 ], [ %181, %180 ], [ %167, %207 ], [ %167, %195 ], [ %167, %217 ], [ %167, %210 ], [ %167, %200 ]
  %220 = load i64, i64* %219, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #5
  %221 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %221, label %235, label %222

222:                                              ; preds = %218
  %223 = inttoptr i64 %13 to i64*
  %224 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %11, i64 0, i32 0
  %225 = load i64*, i64** %224, align 8
  store i64 %13, i64* %12, align 8
  %226 = load i32, i32* %16, align 8
  %227 = add nsw i32 %226, -1
  store i32 %227, i32* %16, align 8
  %228 = load i64*, i64** %14, align 8
  %229 = icmp eq i64* %228, %15
  br i1 %229, label %232, label %230

230:                                              ; preds = %222
  store i64* %15, i64** %14, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %231 = load i64*, i64** %224, align 8
  br label %232

232:                                              ; preds = %230, %222
  %233 = phi i64* [ %231, %230 ], [ %223, %222 ]
  %234 = phi i64* [ %15, %230 ], [ %225, %222 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %233, i64* %234) #5
  br label %235

235:                                              ; preds = %232, %218, %7
  %236 = phi i64 [ %8, %7 ], [ %220, %218 ], [ %220, %232 ]
  ret i64 %236
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL22Stats_Runtime_NewArrayEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::Arguments.1162", align 8
  %6 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %7 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %8 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %8) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 40, i1 false) #5
  %9 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %17, label %11, !prof !2

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %13 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %15 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %15, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallStats"** %12, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %16, %"class.v8::internal::RuntimeCallTimer"* %13, i32 227) #5
  br label %17

17:                                               ; preds = %3, %11
  %18 = load atomic i64, i64* @_ZZN2v88internalL22Stats_Runtime_NewArrayEiPmPNS0_7IsolateEE27trace_event_unique_atomic53 monotonic, align 8
  %19 = inttoptr i64 %18 to i8*
  %20 = icmp eq i64 %18, 0
  br i1 %20, label %21, label %29

21:                                               ; preds = %17
  %22 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %23 = bitcast %"class.v8::TracingController"* %22 to i8* (%"class.v8::TracingController"*, i8*)***
  %24 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %23, align 8
  %25 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, i64 2
  %26 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %25, align 8
  %27 = call i8* %26(%"class.v8::TracingController"* %22, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %28 = ptrtoint i8* %27 to i64
  store atomic volatile i64 %28, i64* @_ZZN2v88internalL22Stats_Runtime_NewArrayEiPmPNS0_7IsolateEE27trace_event_unique_atomic53 monotonic, align 8
  br label %29

29:                                               ; preds = %17, %21
  %30 = phi i8* [ %19, %17 ], [ %27, %21 ]
  %31 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %31) #5
  %32 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %33 = load atomic i8, i8* %30 monotonic, align 1
  %34 = and i8 %33, 5
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %67, label %36

36:                                               ; preds = %29
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #5
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #5
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %30, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %38, i32 0) #5
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %36
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #5
  br label %53

53:                                               ; preds = %48, %36
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #5
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #5
  %63 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1
  %64 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, i64 0, i32 0
  store i8* %30, i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.8, i64 0, i64 0), i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 2
  store i64 %44, i64* %66, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %63, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  br label %67

67:                                               ; preds = %29, %62
  %68 = ptrtoint i64* %1 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %70 = bitcast %"struct.v8::internal::HandleScopeData"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %73 = load i64*, i64** %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %75 = load i32, i32* %74, align 8
  %76 = add nsw i32 %75, 1
  store i32 %76, i32* %74, align 8
  %77 = add nsw i32 %0, -3
  %78 = bitcast %"class.v8::internal::Arguments.1162"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %78) #5
  %79 = getelementptr inbounds %"class.v8::internal::Arguments.1162", %"class.v8::internal::Arguments.1162"* %5, i64 0, i32 0
  %80 = sext i32 %77 to i64
  store i64 %80, i64* %79, align 8
  %81 = getelementptr inbounds %"class.v8::internal::Arguments.1162", %"class.v8::internal::Arguments.1162"* %5, i64 0, i32 1
  store i64* %1, i64** %81, align 8
  %82 = shl nsw i32 %77, 3
  %83 = sext i32 %82 to i64
  %84 = sub i64 %68, %83
  %85 = inttoptr i64 %84 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = and i64 %86, 1
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %101, label %89, !prof !3

89:                                               ; preds = %67
  %90 = and i64 %86, -4294967296
  %91 = add i64 %86, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %90, %94
  %96 = add i64 %95, 7
  %97 = inttoptr i64 %96 to i16*
  %98 = load atomic i16, i16* %97 monotonic, align 2
  %99 = add i16 %98, -1059
  %100 = icmp ult i16 %99, 15
  br i1 %100, label %102, label %101, !prof !2

101:                                              ; preds = %89, %67
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.9, i64 0, i64 0)) #8
  unreachable

102:                                              ; preds = %89
  %103 = shl i32 %0, 3
  %104 = add i32 %103, -16
  %105 = sext i32 %104 to i64
  %106 = sub i64 %68, %105
  %107 = inttoptr i64 %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = and i64 %108, 1
  %110 = icmp eq i64 %109, 0
  br i1 %110, label %122, label %111, !prof !3

111:                                              ; preds = %102
  %112 = and i64 %108, -4294967296
  %113 = add i64 %108, -1
  %114 = inttoptr i64 %113 to i32*
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = zext i32 %115 to i64
  %117 = or i64 %112, %116
  %118 = add i64 %117, 7
  %119 = inttoptr i64 %118 to i16*
  %120 = load atomic i16, i16* %119 monotonic, align 2
  %121 = icmp ugt i16 %120, 185
  br i1 %121, label %123, label %122, !prof !2

122:                                              ; preds = %111, %102
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.10, i64 0, i64 0)) #8
  unreachable

123:                                              ; preds = %111
  %124 = add i32 %103, -8
  %125 = sext i32 %124 to i64
  %126 = sub i64 %68, %125
  %127 = inttoptr i64 %126 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = and i64 %128, 1
  %130 = icmp eq i64 %129, 0
  br i1 %130, label %131, label %132, !prof !4

131:                                              ; preds = %123
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.11, i64 0, i64 0)) #8
  unreachable

132:                                              ; preds = %123
  %133 = and i64 %128, -4294967296
  %134 = add i64 %128, -1
  %135 = inttoptr i64 %134 to i32*
  %136 = load atomic i32, i32* %135 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %133, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = icmp eq i16 %141, 90
  %143 = select i1 %142, i64 %126, i64 0
  %144 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::Factory"*
  %145 = inttoptr i64 %143 to i64*
  %146 = icmp eq i64 %143, 0
  %147 = xor i1 %146, true
  %148 = icmp eq i32 %77, 1
  br i1 %148, label %149, label %168

149:                                              ; preds = %132
  %150 = mul nsw i64 %80, -8
  %151 = add i64 %68, 8
  %152 = add i64 %151, %150
  %153 = inttoptr i64 %152 to i64*
  %154 = load i64, i64* %153, align 8
  %155 = and i64 %154, 1
  %156 = icmp eq i64 %155, 0
  br i1 %156, label %157, label %168

157:                                              ; preds = %149
  %158 = trunc i64 %154 to i32
  %159 = ashr i32 %158, 1
  %160 = icmp slt i32 %158, 0
  %161 = icmp ugt i32 %159, 33554432
  %162 = or i1 %160, %161
  br i1 %162, label %168, label %163

163:                                              ; preds = %157
  %164 = icmp eq i32 %159, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %163
  %166 = icmp slt i32 %158, 32760
  %167 = zext i1 %166 to i8
  br label %168

168:                                              ; preds = %165, %163, %157, %149, %132
  %169 = phi i8 [ 1, %132 ], [ 1, %163 ], [ 1, %157 ], [ %167, %165 ], [ 1, %149 ]
  %170 = phi i1 [ %147, %132 ], [ %147, %163 ], [ false, %157 ], [ %147, %165 ], [ false, %149 ]
  %171 = phi i1 [ false, %132 ], [ false, %163 ], [ false, %157 ], [ true, %165 ], [ false, %149 ]
  %172 = call i64* @_ZN2v88internal10JSFunction13GetDerivedMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"* %2, i64* %85, i64* %107) #5
  %173 = icmp eq i64* %172, null
  br i1 %173, label %174, label %176

174:                                              ; preds = %168
  %175 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %276

176:                                              ; preds = %168
  br i1 %170, label %177, label %185

177:                                              ; preds = %176
  %178 = load i64, i64* %145, align 8
  %179 = add i64 %178, 3
  %180 = inttoptr i64 %179 to i32*
  %181 = load i32, i32* %180, align 4
  %182 = lshr i32 %181, 1
  %183 = trunc i32 %182 to i8
  %184 = and i8 %183, 63
  br label %191

185:                                              ; preds = %176
  %186 = load i64, i64* %172, align 8
  %187 = add i64 %186, 10
  %188 = inttoptr i64 %187 to i8*
  %189 = load i8, i8* %188, align 1
  %190 = lshr i8 %189, 2
  br label %191

191:                                              ; preds = %185, %177
  %192 = phi i8 [ %184, %177 ], [ %190, %185 ]
  br i1 %171, label %193, label %220

193:                                              ; preds = %191
  %194 = and i8 %192, 1
  %195 = icmp ne i8 %194, 0
  %196 = icmp ult i8 %192, 6
  %197 = and i1 %196, %195
  br i1 %197, label %220, label %198

198:                                              ; preds = %193
  %199 = icmp ult i8 %192, 7
  br i1 %199, label %200, label %209

200:                                              ; preds = %198
  %201 = lshr i8 85, %192
  %202 = and i8 %201, 1
  %203 = icmp eq i8 %202, 0
  br i1 %203, label %209, label %204

204:                                              ; preds = %200
  %205 = zext i8 %192 to i56
  %206 = shl nuw nsw i56 %205, 3
  %207 = lshr i56 1971445840412929, %206
  %208 = trunc i56 %207 to i8
  br label %209

209:                                              ; preds = %200, %198, %204
  %210 = phi i8 [ %208, %204 ], [ %192, %200 ], [ %192, %198 ]
  br i1 %146, label %220, label %211

211:                                              ; preds = %209
  %212 = load i64, i64* %145, align 8
  %213 = add i64 %212, 3
  %214 = inttoptr i64 %213 to i32*
  %215 = load i32, i32* %214, align 4
  %216 = zext i8 %210 to i32
  %217 = shl nuw nsw i32 %216, 1
  %218 = and i32 %215, -128
  %219 = or i32 %218, %217
  store atomic volatile i32 %219, i32* %214 monotonic, align 4
  br label %220

220:                                              ; preds = %211, %209, %193, %191
  %221 = phi i8 [ %192, %193 ], [ %210, %209 ], [ %210, %211 ], [ %192, %191 ]
  %222 = call i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"* %2, i64* nonnull %172, i8 zeroext %221) #5
  %223 = icmp ult i8 %221, 2
  %224 = select i1 %223, i64* %145, i64* null
  %225 = call i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"* %144, i64* %222, i8 zeroext 0, i64* %224) #5
  call void @_ZN2v88internal7Factory17NewJSArrayStorageENS0_6HandleINS0_7JSArrayEEEiiNS0_26ArrayStorageAllocationModeE(%"class.v8::internal::Factory"* %144, i64* %225, i32 0, i32 0, i32 0) #5
  %226 = load i64, i64* %225, align 8
  %227 = and i64 %226, -4294967296
  %228 = add i64 %226, -1
  %229 = inttoptr i64 %228 to i32*
  %230 = load atomic i32, i32* %229 monotonic, align 4
  %231 = zext i32 %230 to i64
  %232 = or i64 %227, %231
  %233 = add i64 %232, 10
  %234 = inttoptr i64 %233 to i8*
  %235 = load i8, i8* %234, align 1
  %236 = call i64* @_ZN2v88internal32ArrayConstructInitializeElementsENS0_6HandleINS0_7JSArrayEEEPNS0_9ArgumentsILNS0_13ArgumentsTypeE1EEE(i64* %225, %"class.v8::internal::Arguments.1162"* nonnull %5) #5
  %237 = icmp eq i64* %236, null
  br i1 %237, label %238, label %240

238:                                              ; preds = %220
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %276

240:                                              ; preds = %220
  %241 = load i64, i64* %225, align 8
  %242 = and i64 %241, -4294967296
  %243 = add i64 %241, -1
  %244 = inttoptr i64 %243 to i32*
  %245 = load atomic i32, i32* %244 monotonic, align 4
  %246 = zext i32 %245 to i64
  %247 = or i64 %242, %246
  %248 = add i64 %247, 10
  %249 = inttoptr i64 %248 to i8*
  %250 = load i8, i8* %249, align 1
  %251 = xor i8 %250, %235
  %252 = icmp ugt i8 %251, 3
  br i1 %146, label %265, label %253

253:                                              ; preds = %240
  %254 = xor i1 %170, true
  %255 = or i1 %252, %254
  %256 = icmp eq i8 %169, 0
  %257 = or i1 %256, %255
  br i1 %257, label %258, label %276

258:                                              ; preds = %253
  %259 = load i64, i64* %145, align 8
  %260 = add i64 %259, 3
  %261 = inttoptr i64 %260 to i32*
  %262 = load i32, i32* %261, align 4
  %263 = and i32 %262, -130
  %264 = or i32 %263, 128
  store atomic volatile i32 %264, i32* %261 monotonic, align 4
  br label %276

265:                                              ; preds = %240
  %266 = icmp eq i8 %169, 0
  %267 = or i1 %266, %252
  br i1 %267, label %268, label %276

268:                                              ; preds = %265
  %269 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 603
  %270 = load i64, i64* %269, align 8
  %271 = add i64 %270, 11
  %272 = inttoptr i64 %271 to i32*
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, 2
  br i1 %274, label %275, label %276

275:                                              ; preds = %268
  call void @_ZN2v88internal10Protectors26InvalidateArrayConstructorEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %276

276:                                              ; preds = %275, %268, %265, %258, %253, %238, %174
  %277 = phi i64* [ %175, %174 ], [ %239, %238 ], [ %225, %265 ], [ %225, %253 ], [ %225, %275 ], [ %225, %268 ], [ %225, %258 ]
  %278 = load i64, i64* %277, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %78) #5
  %279 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %279, label %293, label %280

280:                                              ; preds = %276
  %281 = inttoptr i64 %71 to i64*
  %282 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %69, i64 0, i32 0
  %283 = load i64*, i64** %282, align 8
  store i64 %71, i64* %70, align 8
  %284 = load i32, i32* %74, align 8
  %285 = add nsw i32 %284, -1
  store i32 %285, i32* %74, align 8
  %286 = load i64*, i64** %72, align 8
  %287 = icmp eq i64* %286, %73
  br i1 %287, label %290, label %288

288:                                              ; preds = %280
  store i64* %73, i64** %72, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %289 = load i64*, i64** %282, align 8
  br label %290

290:                                              ; preds = %288, %280
  %291 = phi i64* [ %289, %288 ], [ %281, %280 ]
  %292 = phi i64* [ %73, %288 ], [ %283, %280 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %291, i64* %292) #5
  br label %293

293:                                              ; preds = %276, %290
  %294 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %32, align 8
  %295 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %294, null
  br i1 %295, label %312, label %296

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 0
  %298 = load i8*, i8** %297, align 8
  %299 = load atomic i8, i8* %298 monotonic, align 1
  %300 = icmp eq i8 %299, 0
  br i1 %300, label %312, label %301

301:                                              ; preds = %296
  %302 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %303 = load i8*, i8** %297, align 8
  %304 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 1
  %305 = load i8*, i8** %304, align 8
  %306 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %7, i64 0, i32 1, i32 2
  %307 = load i64, i64* %306, align 8
  %308 = bitcast %"class.v8::TracingController"* %302 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %309 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %308, align 8
  %310 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %309, i64 5
  %311 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %310, align 8
  call void %311(%"class.v8::TracingController"* %302, i8* %303, i8* %305, i64 %307) #5
  br label %312

312:                                              ; preds = %293, %296, %301
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %31) #5
  %313 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 0
  %314 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %313, align 8
  %315 = icmp eq %"class.v8::internal::RuntimeCallStats"* %314, null
  br i1 %315, label %318, label %316, !prof !2

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %6, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %314, %"class.v8::internal::RuntimeCallTimer"* %317) #5
  br label %318

318:                                              ; preds = %312, %316
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %8) #5
  ret i64 %278
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal25Runtime_NormalizeElementsEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL31Stats_Runtime_NormalizeElementsEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %69

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64, i64* %1, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %31, label %20, !prof !3

20:                                               ; preds = %8
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp ugt i16 %29, 188
  br i1 %30, label %32, label %31, !prof !2

31:                                               ; preds = %20, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

32:                                               ; preds = %20
  %33 = load atomic i32, i32* %23 monotonic, align 4
  %34 = zext i32 %33 to i64
  %35 = or i64 %21, %34
  %36 = add i64 %35, 10
  %37 = inttoptr i64 %36 to i8*
  %38 = load i8, i8* %37, align 1
  %39 = lshr i8 %38, 2
  %40 = add nsw i8 %39, -17
  %41 = icmp ult i8 %40, 11
  br i1 %41, label %42, label %43, !prof !4

42:                                               ; preds = %32
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0)) #8
  unreachable

43:                                               ; preds = %32
  %44 = load atomic i32, i32* %23 monotonic, align 4
  %45 = zext i32 %44 to i64
  %46 = or i64 %21, %45
  %47 = add i64 %46, 7
  %48 = inttoptr i64 %47 to i16*
  %49 = load atomic i16, i16* %48 monotonic, align 2
  %50 = icmp eq i16 %49, 190
  br i1 %50, label %51, label %52, !prof !4

51:                                               ; preds = %43
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0)) #8
  unreachable

52:                                               ; preds = %43
  %53 = tail call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %1) #5
  %54 = load i64, i64* %1, align 8
  %55 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %55, label %69, label %56

56:                                               ; preds = %52
  %57 = inttoptr i64 %11 to i64*
  %58 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %59 = load i64*, i64** %58, align 8
  store i64 %11, i64* %10, align 8
  %60 = load i32, i32* %14, align 8
  %61 = add nsw i32 %60, -1
  store i32 %61, i32* %14, align 8
  %62 = load i64*, i64** %12, align 8
  %63 = icmp eq i64* %62, %13
  br i1 %63, label %66, label %64

64:                                               ; preds = %56
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %65 = load i64*, i64** %58, align 8
  br label %66

66:                                               ; preds = %64, %56
  %67 = phi i64* [ %65, %64 ], [ %57, %56 ]
  %68 = phi i64* [ %13, %64 ], [ %59, %56 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %67, i64* %68) #5
  br label %69

69:                                               ; preds = %66, %52, %6
  %70 = phi i64 [ %7, %6 ], [ %54, %52 ], [ %54, %66 ]
  ret i64 %70
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL31Stats_Runtime_NormalizeElementsEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 228) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL31Stats_Runtime_NormalizeElementsEiPmPNS0_7IsolateEE28trace_event_unique_atomic157 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL31Stats_Runtime_NormalizeElementsEiPmPNS0_7IsolateEE28trace_event_unique_atomic157 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.12, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %89, label %78, !prof !3

78:                                               ; preds = %66
  %79 = and i64 %75, -4294967296
  %80 = add i64 %75, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp ugt i16 %87, 188
  br i1 %88, label %90, label %89, !prof !2

89:                                               ; preds = %78, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

90:                                               ; preds = %78
  %91 = load atomic i32, i32* %81 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %79, %92
  %94 = add i64 %93, 10
  %95 = inttoptr i64 %94 to i8*
  %96 = load i8, i8* %95, align 1
  %97 = lshr i8 %96, 2
  %98 = add nsw i8 %97, -17
  %99 = icmp ult i8 %98, 11
  br i1 %99, label %100, label %101, !prof !4

100:                                              ; preds = %90
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.13, i64 0, i64 0)) #8
  unreachable

101:                                              ; preds = %90
  %102 = load atomic i32, i32* %81 monotonic, align 4
  %103 = zext i32 %102 to i64
  %104 = or i64 %79, %103
  %105 = add i64 %104, 7
  %106 = inttoptr i64 %105 to i16*
  %107 = load atomic i16, i16* %106 monotonic, align 2
  %108 = icmp eq i16 %107, 190
  br i1 %108, label %109, label %110, !prof !4

109:                                              ; preds = %101
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.14, i64 0, i64 0)) #8
  unreachable

110:                                              ; preds = %101
  %111 = call i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64* %1) #5
  %112 = load i64, i64* %1, align 8
  %113 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %113, label %127, label %114

114:                                              ; preds = %110
  %115 = inttoptr i64 %69 to i64*
  %116 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %117 = load i64*, i64** %116, align 8
  store i64 %69, i64* %68, align 8
  %118 = load i32, i32* %72, align 8
  %119 = add nsw i32 %118, -1
  store i32 %119, i32* %72, align 8
  %120 = load i64*, i64** %70, align 8
  %121 = icmp eq i64* %120, %71
  br i1 %121, label %124, label %122

122:                                              ; preds = %114
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %123 = load i64*, i64** %116, align 8
  br label %124

124:                                              ; preds = %122, %114
  %125 = phi i64* [ %123, %122 ], [ %115, %114 ]
  %126 = phi i64* [ %71, %122 ], [ %117, %114 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %125, i64* %126) #5
  br label %127

127:                                              ; preds = %110, %124
  %128 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %129 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %128, null
  br i1 %129, label %146, label %130

130:                                              ; preds = %127
  %131 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %132 = load i8*, i8** %131, align 8
  %133 = load atomic i8, i8* %132 monotonic, align 1
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %146, label %135

135:                                              ; preds = %130
  %136 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %137 = load i8*, i8** %131, align 8
  %138 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %139 = load i8*, i8** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = bitcast %"class.v8::TracingController"* %136 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %143 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %142, align 8
  %144 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %143, i64 5
  %145 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %144, align 8
  call void %145(%"class.v8::TracingController"* %136, i8* %137, i8* %139, i64 %141) #5
  br label %146

146:                                              ; preds = %127, %130, %135
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %147 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %148 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %147, align 8
  %149 = icmp eq %"class.v8::internal::RuntimeCallStats"* %148, null
  br i1 %149, label %152, label %150, !prof !2

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %148, %"class.v8::internal::RuntimeCallTimer"* %151) #5
  br label %152

152:                                              ; preds = %146, %150
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %112
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal25Runtime_GrowArrayElementsEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL31Stats_Runtime_GrowArrayElementsEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %124

8:                                                ; preds = %3
  %9 = ptrtoint i64* %1 to i64
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %11 = bitcast %"struct.v8::internal::HandleScopeData"* %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %14 = load i64*, i64** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %16 = load i32, i32* %15, align 8
  %17 = add nsw i32 %16, 1
  store i32 %17, i32* %15, align 8
  %18 = load i64, i64* %1, align 8
  %19 = and i64 %18, 1
  %20 = icmp eq i64 %19, 0
  br i1 %20, label %32, label %21, !prof !3

21:                                               ; preds = %8
  %22 = and i64 %18, -4294967296
  %23 = add i64 %18, -1
  %24 = inttoptr i64 %23 to i32*
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = zext i32 %25 to i64
  %27 = or i64 %22, %26
  %28 = add i64 %27, 7
  %29 = inttoptr i64 %28 to i16*
  %30 = load atomic i16, i16* %29 monotonic, align 2
  %31 = icmp ugt i16 %30, 188
  br i1 %31, label %33, label %32, !prof !2

32:                                               ; preds = %21, %8
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

33:                                               ; preds = %21
  %34 = add i64 %9, -8
  %35 = inttoptr i64 %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %43

39:                                               ; preds = %33
  %40 = trunc i64 %36 to i32
  %41 = ashr i32 %40, 1
  %42 = icmp slt i32 %40, 0
  br i1 %42, label %108, label %64

43:                                               ; preds = %33
  %44 = and i64 %36, -4294967296
  %45 = add i64 %36, -1
  %46 = inttoptr i64 %45 to i32*
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = zext i32 %47 to i64
  %49 = or i64 %44, %48
  %50 = add i64 %49, 7
  %51 = inttoptr i64 %50 to i16*
  %52 = load atomic i16, i16* %51 monotonic, align 2
  %53 = icmp eq i16 %52, 66
  br i1 %53, label %55, label %54, !prof !2

54:                                               ; preds = %43
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #8
  unreachable

55:                                               ; preds = %43
  %56 = add i64 %36, 3
  %57 = inttoptr i64 %56 to double*
  %58 = load double, double* %57, align 1
  %59 = fcmp olt double %58, 0.000000e+00
  %60 = fcmp ogt double %58, 0x41EFFFFFFFE00000
  %61 = or i1 %59, %60
  br i1 %61, label %108, label %62

62:                                               ; preds = %55
  %63 = fptoui double %58 to i32
  br label %64

64:                                               ; preds = %62, %39
  %65 = phi i32 [ %63, %62 ], [ %41, %39 ]
  %66 = add i64 %18, 7
  %67 = inttoptr i64 %66 to i32*
  %68 = load i32, i32* %67, align 4
  %69 = zext i32 %68 to i64
  %70 = or i64 %22, %69
  %71 = add i64 %70, 3
  %72 = inttoptr i64 %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = ashr i32 %73, 1
  %75 = icmp ult i32 %65, %74
  br i1 %75, label %108, label %76

76:                                               ; preds = %64
  %77 = load atomic i32, i32* %24 monotonic, align 4
  %78 = zext i32 %77 to i64
  %79 = or i64 %22, %78
  %80 = add i64 %79, 10
  %81 = inttoptr i64 %80 to i8*
  %82 = load i8, i8* %81, align 1
  %83 = lshr i8 %82, 2
  %84 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %85 = zext i8 %83 to i64
  %86 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %84, i64 %85
  %87 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %86, align 8
  %88 = bitcast %"class.v8::internal::ElementsAccessor"* %87 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)***
  %89 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*** %88, align 8
  %90 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %89, i64 15
  %91 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %90, align 8
  %92 = tail call i16 %91(%"class.v8::internal::ElementsAccessor"* %87, i64* %1, i32 %65) #5
  %93 = trunc i16 %92 to i8
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %95, label %98, !prof !4

95:                                               ; preds = %76
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %97 = load i64, i64* %96, align 8
  br label %108

98:                                               ; preds = %76
  %99 = icmp ult i16 %92, 256
  br i1 %99, label %108, label %100

100:                                              ; preds = %98
  %101 = load i64, i64* %1, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, 7
  %104 = inttoptr i64 %103 to i32*
  %105 = load i32, i32* %104, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  br label %108

108:                                              ; preds = %64, %100, %98, %95, %55, %39
  %109 = phi i64 [ 0, %39 ], [ 0, %55 ], [ %97, %95 ], [ 0, %98 ], [ %107, %100 ], [ %70, %64 ]
  %110 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %108
  %112 = inttoptr i64 %12 to i64*
  %113 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %10, i64 0, i32 0
  %114 = load i64*, i64** %113, align 8
  store i64 %12, i64* %11, align 8
  %115 = load i32, i32* %15, align 8
  %116 = add nsw i32 %115, -1
  store i32 %116, i32* %15, align 8
  %117 = load i64*, i64** %13, align 8
  %118 = icmp eq i64* %117, %14
  br i1 %118, label %121, label %119

119:                                              ; preds = %111
  store i64* %14, i64** %13, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %120 = load i64*, i64** %113, align 8
  br label %121

121:                                              ; preds = %119, %111
  %122 = phi i64* [ %120, %119 ], [ %112, %111 ]
  %123 = phi i64* [ %14, %119 ], [ %114, %111 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %122, i64* %123) #5
  br label %124

124:                                              ; preds = %121, %108, %6
  %125 = phi i64 [ %7, %6 ], [ %109, %108 ], [ %109, %121 ]
  ret i64 %125
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL31Stats_Runtime_GrowArrayElementsEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 225) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL31Stats_Runtime_GrowArrayElementsEiPmPNS0_7IsolateEE28trace_event_unique_atomic169 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL31Stats_Runtime_GrowArrayElementsEiPmPNS0_7IsolateEE28trace_event_unique_atomic169 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([37 x i8], [37 x i8]* @.str.15, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = ptrtoint i64* %1 to i64
  %68 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %69 = bitcast %"struct.v8::internal::HandleScopeData"* %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %72 = load i64*, i64** %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %74 = load i32, i32* %73, align 8
  %75 = add nsw i32 %74, 1
  store i32 %75, i32* %73, align 8
  %76 = load i64, i64* %1, align 8
  %77 = and i64 %76, 1
  %78 = icmp eq i64 %77, 0
  br i1 %78, label %90, label %79, !prof !3

79:                                               ; preds = %66
  %80 = and i64 %76, -4294967296
  %81 = add i64 %76, -1
  %82 = inttoptr i64 %81 to i32*
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %80, %84
  %86 = add i64 %85, 7
  %87 = inttoptr i64 %86 to i16*
  %88 = load atomic i16, i16* %87 monotonic, align 2
  %89 = icmp ugt i16 %88, 188
  br i1 %89, label %91, label %90, !prof !2

90:                                               ; preds = %79, %66
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.3, i64 0, i64 0)) #8
  unreachable

91:                                               ; preds = %79
  %92 = add i64 %67, -8
  %93 = inttoptr i64 %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = and i64 %94, 1
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %97, label %101

97:                                               ; preds = %91
  %98 = trunc i64 %94 to i32
  %99 = ashr i32 %98, 1
  %100 = icmp slt i32 %98, 0
  br i1 %100, label %166, label %122

101:                                              ; preds = %91
  %102 = and i64 %94, -4294967296
  %103 = add i64 %94, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp eq i16 %110, 66
  br i1 %111, label %113, label %112, !prof !2

112:                                              ; preds = %101
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.17, i64 0, i64 0)) #8
  unreachable

113:                                              ; preds = %101
  %114 = add i64 %94, 3
  %115 = inttoptr i64 %114 to double*
  %116 = load double, double* %115, align 1
  %117 = fcmp olt double %116, 0.000000e+00
  %118 = fcmp ogt double %116, 0x41EFFFFFFFE00000
  %119 = or i1 %117, %118
  br i1 %119, label %166, label %120

120:                                              ; preds = %113
  %121 = fptoui double %116 to i32
  br label %122

122:                                              ; preds = %120, %97
  %123 = phi i32 [ %121, %120 ], [ %99, %97 ]
  %124 = add i64 %76, 7
  %125 = inttoptr i64 %124 to i32*
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i64
  %128 = or i64 %80, %127
  %129 = add i64 %128, 3
  %130 = inttoptr i64 %129 to i32*
  %131 = load i32, i32* %130, align 4
  %132 = ashr i32 %131, 1
  %133 = icmp ult i32 %123, %132
  br i1 %133, label %166, label %134

134:                                              ; preds = %122
  %135 = load atomic i32, i32* %82 monotonic, align 4
  %136 = zext i32 %135 to i64
  %137 = or i64 %80, %136
  %138 = add i64 %137, 10
  %139 = inttoptr i64 %138 to i8*
  %140 = load i8, i8* %139, align 1
  %141 = lshr i8 %140, 2
  %142 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %143 = zext i8 %141 to i64
  %144 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %142, i64 %143
  %145 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %144, align 8
  %146 = bitcast %"class.v8::internal::ElementsAccessor"* %145 to i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)***
  %147 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)**, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*** %146, align 8
  %148 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %147, i64 15
  %149 = load i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)*, i16 (%"class.v8::internal::ElementsAccessor"*, i64*, i32)** %148, align 8
  %150 = call i16 %149(%"class.v8::internal::ElementsAccessor"* %145, i64* %1, i32 %123) #5
  %151 = trunc i16 %150 to i8
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %153, label %156, !prof !4

153:                                              ; preds = %134
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %155 = load i64, i64* %154, align 8
  br label %166

156:                                              ; preds = %134
  %157 = icmp ult i16 %150, 256
  br i1 %157, label %166, label %158

158:                                              ; preds = %156
  %159 = load i64, i64* %1, align 8
  %160 = and i64 %159, -4294967296
  %161 = add i64 %159, 7
  %162 = inttoptr i64 %161 to i32*
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i64
  %165 = or i64 %160, %164
  br label %166

166:                                              ; preds = %122, %158, %156, %153, %113, %97
  %167 = phi i64 [ 0, %97 ], [ 0, %113 ], [ %155, %153 ], [ 0, %156 ], [ %165, %158 ], [ %128, %122 ]
  %168 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %168, label %182, label %169

169:                                              ; preds = %166
  %170 = inttoptr i64 %70 to i64*
  %171 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %68, i64 0, i32 0
  %172 = load i64*, i64** %171, align 8
  store i64 %70, i64* %69, align 8
  %173 = load i32, i32* %73, align 8
  %174 = add nsw i32 %173, -1
  store i32 %174, i32* %73, align 8
  %175 = load i64*, i64** %71, align 8
  %176 = icmp eq i64* %175, %72
  br i1 %176, label %179, label %177

177:                                              ; preds = %169
  store i64* %72, i64** %71, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %178 = load i64*, i64** %171, align 8
  br label %179

179:                                              ; preds = %177, %169
  %180 = phi i64* [ %178, %177 ], [ %170, %169 ]
  %181 = phi i64* [ %72, %177 ], [ %172, %169 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %180, i64* %181) #5
  br label %182

182:                                              ; preds = %166, %179
  %183 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %184 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %183, null
  br i1 %184, label %201, label %185

185:                                              ; preds = %182
  %186 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %187 = load i8*, i8** %186, align 8
  %188 = load atomic i8, i8* %187 monotonic, align 1
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %201, label %190

190:                                              ; preds = %185
  %191 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %192 = load i8*, i8** %186, align 8
  %193 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %194 = load i8*, i8** %193, align 8
  %195 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::TracingController"* %191 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %198 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %197, align 8
  %199 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %198, i64 5
  %200 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %199, align 8
  call void %200(%"class.v8::TracingController"* %191, i8* %192, i8* %194, i64 %196) #5
  br label %201

201:                                              ; preds = %182, %185, %190
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %202 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %203 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %202, align 8
  %204 = icmp eq %"class.v8::internal::RuntimeCallStats"* %203, null
  br i1 %204, label %207, label %205, !prof !2

205:                                              ; preds = %201
  %206 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %203, %"class.v8::internal::RuntimeCallTimer"* %206) #5
  br label %207

207:                                              ; preds = %201, %205
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %167
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal20Runtime_ArrayIsArrayEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL26Stats_Runtime_ArrayIsArrayEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %74

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = load i64, i64* %1, align 8
  %18 = and i64 %17, 1
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %47, label %20

20:                                               ; preds = %8
  %21 = and i64 %17, -4294967296
  %22 = add i64 %17, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 monotonic, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = add i64 %26, 7
  %28 = inttoptr i64 %27 to i16*
  %29 = load atomic i16, i16* %28 monotonic, align 2
  %30 = icmp eq i16 %29, 1085
  br i1 %30, label %47, label %31

31:                                               ; preds = %20
  %32 = load atomic i32, i32* %23 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %21, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp eq i16 %37, 188
  br i1 %38, label %39, label %47

39:                                               ; preds = %31
  %40 = tail call i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64* %1) #5
  %41 = trunc i16 %40 to i8
  %42 = lshr i16 %40, 8
  %43 = trunc i16 %42 to i8
  %44 = icmp eq i8 %41, 0
  br i1 %44, label %45, label %47

45:                                               ; preds = %39
  %46 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %57

47:                                               ; preds = %39, %31, %20, %8
  %48 = phi i8 [ %43, %39 ], [ 0, %31 ], [ 1, %20 ], [ 0, %8 ]
  %49 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %50 = icmp eq i8 %48, 0
  %51 = ptrtoint %"class.v8::internal::Heap"* %49 to i64
  %52 = add i64 %51, -41416
  %53 = inttoptr i64 %52 to %"class.v8::internal::Isolate"*
  %54 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 0, i32 7, i32 0, i64 7
  %55 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %53, i64 0, i32 0, i32 7, i32 0, i64 8
  %56 = select i1 %50, i64* %55, i64* %54
  br label %57

57:                                               ; preds = %47, %45
  %58 = phi i64* [ %46, %45 ], [ %56, %47 ]
  %59 = load i64, i64* %58, align 8
  %60 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %57
  %62 = inttoptr i64 %11 to i64*
  %63 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %64 = load i64*, i64** %63, align 8
  store i64 %11, i64* %10, align 8
  %65 = load i32, i32* %14, align 8
  %66 = add nsw i32 %65, -1
  store i32 %66, i32* %14, align 8
  %67 = load i64*, i64** %12, align 8
  %68 = icmp eq i64* %67, %13
  br i1 %68, label %71, label %69

69:                                               ; preds = %61
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %70 = load i64*, i64** %63, align 8
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi i64* [ %70, %69 ], [ %62, %61 ]
  %73 = phi i64* [ %13, %69 ], [ %64, %61 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %72, i64* %73) #5
  br label %74

74:                                               ; preds = %71, %57, %6
  %75 = phi i64 [ %7, %6 ], [ %59, %57 ], [ %59, %71 ]
  ret i64 %75
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL26Stats_Runtime_ArrayIsArrayEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 223) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL26Stats_Runtime_ArrayIsArrayEiPmPNS0_7IsolateEE28trace_event_unique_atomic204 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL26Stats_Runtime_ArrayIsArrayEiPmPNS0_7IsolateEE28trace_event_unique_atomic204 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.18, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = load i64, i64* %1, align 8
  %76 = and i64 %75, 1
  %77 = icmp eq i64 %76, 0
  br i1 %77, label %105, label %78

78:                                               ; preds = %66
  %79 = and i64 %75, -4294967296
  %80 = add i64 %75, -1
  %81 = inttoptr i64 %80 to i32*
  %82 = load atomic i32, i32* %81 monotonic, align 4
  %83 = zext i32 %82 to i64
  %84 = or i64 %79, %83
  %85 = add i64 %84, 7
  %86 = inttoptr i64 %85 to i16*
  %87 = load atomic i16, i16* %86 monotonic, align 2
  %88 = icmp eq i16 %87, 1085
  br i1 %88, label %105, label %89

89:                                               ; preds = %78
  %90 = load atomic i32, i32* %81 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %79, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp eq i16 %95, 188
  br i1 %96, label %97, label %105

97:                                               ; preds = %89
  %98 = call i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64* %1) #5
  %99 = trunc i16 %98 to i8
  %100 = lshr i16 %98, 8
  %101 = trunc i16 %100 to i8
  %102 = icmp eq i8 %99, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %97
  %104 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  br label %115

105:                                              ; preds = %97, %89, %78, %66
  %106 = phi i8 [ %101, %97 ], [ 0, %89 ], [ 1, %78 ], [ 0, %66 ]
  %107 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %108 = icmp eq i8 %106, 0
  %109 = ptrtoint %"class.v8::internal::Heap"* %107 to i64
  %110 = add i64 %109, -41416
  %111 = inttoptr i64 %110 to %"class.v8::internal::Isolate"*
  %112 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %111, i64 0, i32 0, i32 7, i32 0, i64 7
  %113 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %111, i64 0, i32 0, i32 7, i32 0, i64 8
  %114 = select i1 %108, i64* %113, i64* %112
  br label %115

115:                                              ; preds = %105, %103
  %116 = phi i64* [ %104, %103 ], [ %114, %105 ]
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %118, label %132, label %119

119:                                              ; preds = %115
  %120 = inttoptr i64 %69 to i64*
  %121 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %122 = load i64*, i64** %121, align 8
  store i64 %69, i64* %68, align 8
  %123 = load i32, i32* %72, align 8
  %124 = add nsw i32 %123, -1
  store i32 %124, i32* %72, align 8
  %125 = load i64*, i64** %70, align 8
  %126 = icmp eq i64* %125, %71
  br i1 %126, label %129, label %127

127:                                              ; preds = %119
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %128 = load i64*, i64** %121, align 8
  br label %129

129:                                              ; preds = %127, %119
  %130 = phi i64* [ %128, %127 ], [ %120, %119 ]
  %131 = phi i64* [ %71, %127 ], [ %122, %119 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %130, i64* %131) #5
  br label %132

132:                                              ; preds = %115, %129
  %133 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %134 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %133, null
  br i1 %134, label %151, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %137 = load i8*, i8** %136, align 8
  %138 = load atomic i8, i8* %137 monotonic, align 1
  %139 = icmp eq i8 %138, 0
  br i1 %139, label %151, label %140

140:                                              ; preds = %135
  %141 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %142 = load i8*, i8** %136, align 8
  %143 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %144 = load i8*, i8** %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %146 = load i64, i64* %145, align 8
  %147 = bitcast %"class.v8::TracingController"* %141 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %148 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %148, i64 5
  %150 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %149, align 8
  call void %150(%"class.v8::TracingController"* %141, i8* %142, i8* %144, i64 %146) #5
  br label %151

151:                                              ; preds = %132, %135, %140
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %152 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %153 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %152, align 8
  %154 = icmp eq %"class.v8::internal::RuntimeCallStats"* %153, null
  br i1 %154, label %157, label %155, !prof !2

155:                                              ; preds = %151
  %156 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %153, %"class.v8::internal::RuntimeCallTimer"* %156) #5
  br label %157

157:                                              ; preds = %151, %155
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %117
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal15Runtime_IsArrayEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL21Stats_Runtime_IsArrayEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %38

8:                                                ; preds = %3
  %9 = load i64, i64* %1, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %11 = and i64 %9, 1
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %13, label %18

13:                                               ; preds = %8
  %14 = ptrtoint %"class.v8::internal::Heap"* %10 to i64
  %15 = add i64 %14, -41416
  %16 = inttoptr i64 %15 to %"class.v8::internal::Isolate"*
  %17 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %16, i64 0, i32 0, i32 7, i32 0, i64 8
  br label %35

18:                                               ; preds = %8
  %19 = and i64 %9, -4294967296
  %20 = add i64 %9, -1
  %21 = inttoptr i64 %20 to i32*
  %22 = load atomic i32, i32* %21 monotonic, align 4
  %23 = zext i32 %22 to i64
  %24 = or i64 %19, %23
  %25 = add i64 %24, 7
  %26 = inttoptr i64 %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = icmp eq i16 %27, 1085
  %29 = ptrtoint %"class.v8::internal::Heap"* %10 to i64
  %30 = add i64 %29, -41416
  %31 = inttoptr i64 %30 to %"class.v8::internal::Isolate"*
  %32 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 7
  %33 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %31, i64 0, i32 0, i32 7, i32 0, i64 8
  %34 = select i1 %28, i64* %32, i64* %33
  br label %35

35:                                               ; preds = %13, %18
  %36 = phi i64* [ %17, %13 ], [ %34, %18 ]
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %35, %6
  %39 = phi i64 [ %7, %6 ], [ %37, %35 ]
  ret i64 %39
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL21Stats_Runtime_IsArrayEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 226) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL21Stats_Runtime_IsArrayEiPmPNS0_7IsolateEE28trace_event_unique_atomic213 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL21Stats_Runtime_IsArrayEiPmPNS0_7IsolateEE28trace_event_unique_atomic213 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.20, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = phi %"struct.v8::internal::tracing::ScopedTracer::Data"* [ null, %28 ], [ %62, %61 ]
  %68 = load i64, i64* %1, align 8
  %69 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 2
  %70 = and i64 %68, 1
  %71 = icmp eq i64 %70, 0
  br i1 %71, label %72, label %77

72:                                               ; preds = %66
  %73 = ptrtoint %"class.v8::internal::Heap"* %69 to i64
  %74 = add i64 %73, -41416
  %75 = inttoptr i64 %74 to %"class.v8::internal::Isolate"*
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %75, i64 0, i32 0, i32 7, i32 0, i64 8
  br label %94

77:                                               ; preds = %66
  %78 = and i64 %68, -4294967296
  %79 = add i64 %68, -1
  %80 = inttoptr i64 %79 to i32*
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = zext i32 %81 to i64
  %83 = or i64 %78, %82
  %84 = add i64 %83, 7
  %85 = inttoptr i64 %84 to i16*
  %86 = load atomic i16, i16* %85 monotonic, align 2
  %87 = icmp eq i16 %86, 1085
  %88 = ptrtoint %"class.v8::internal::Heap"* %69 to i64
  %89 = add i64 %88, -41416
  %90 = inttoptr i64 %89 to %"class.v8::internal::Isolate"*
  %91 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %90, i64 0, i32 0, i32 7, i32 0, i64 7
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %90, i64 0, i32 0, i32 7, i32 0, i64 8
  %93 = select i1 %87, i64* %91, i64* %92
  br label %94

94:                                               ; preds = %72, %77
  %95 = phi i64* [ %76, %72 ], [ %93, %77 ]
  %96 = load i64, i64* %95, align 8
  %97 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %67, null
  br i1 %97, label %114, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %100 = load i8*, i8** %99, align 8
  %101 = load atomic i8, i8* %100 monotonic, align 1
  %102 = icmp eq i8 %101, 0
  br i1 %102, label %114, label %103

103:                                              ; preds = %98
  %104 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %105 = load i8*, i8** %99, align 8
  %106 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %107 = load i8*, i8** %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %109 = load i64, i64* %108, align 8
  %110 = bitcast %"class.v8::TracingController"* %104 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %111 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %111, i64 5
  %113 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %112, align 8
  call void %113(%"class.v8::TracingController"* %104, i8* %105, i8* %107, i64 %109) #5
  br label %114

114:                                              ; preds = %94, %98, %103
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %115 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %116 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %115, align 8
  %117 = icmp eq %"class.v8::internal::RuntimeCallStats"* %116, null
  br i1 %117, label %120, label %118, !prof !2

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %116, %"class.v8::internal::RuntimeCallTimer"* %119) #5
  br label %120

120:                                              ; preds = %114, %118
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %96
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal31Runtime_ArraySpeciesConstructorEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6, !prof !2

6:                                                ; preds = %3
  %7 = tail call fastcc i64 @_ZN2v88internalL37Stats_Runtime_ArraySpeciesConstructorEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %36

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %10 = bitcast %"struct.v8::internal::HandleScopeData"* %9 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %13 = load i64*, i64** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = add nsw i32 %15, 1
  store i32 %16, i32* %14, align 8
  %17 = tail call i64* @_ZN2v88internal6Object23ArraySpeciesConstructorEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %1) #5
  %18 = icmp eq i64* %17, null
  %19 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %20 = select i1 %18, i64* %19, i64* %17
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %8
  %24 = inttoptr i64 %11 to i64*
  %25 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %9, i64 0, i32 0
  %26 = load i64*, i64** %25, align 8
  store i64 %11, i64* %10, align 8
  %27 = load i32, i32* %14, align 8
  %28 = add nsw i32 %27, -1
  store i32 %28, i32* %14, align 8
  %29 = load i64*, i64** %12, align 8
  %30 = icmp eq i64* %29, %13
  br i1 %30, label %33, label %31

31:                                               ; preds = %23
  store i64* %13, i64** %12, align 8
  tail call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %32 = load i64*, i64** %25, align 8
  br label %33

33:                                               ; preds = %31, %23
  %34 = phi i64* [ %32, %31 ], [ %24, %23 ]
  %35 = phi i64* [ %13, %31 ], [ %26, %23 ]
  tail call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %34, i64* %35) #5
  br label %36

36:                                               ; preds = %33, %8, %6
  %37 = phi i64 [ %7, %6 ], [ %21, %8 ], [ %21, %33 ]
  ret i64 %37
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL37Stats_Runtime_ArraySpeciesConstructorEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %6 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %7 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %7) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 40, i1 false) #5
  %8 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10, !prof !2

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %14 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %14, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallStats"** %11, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %15, %"class.v8::internal::RuntimeCallTimer"* %12, i32 224) #5
  br label %16

16:                                               ; preds = %3, %10
  %17 = load atomic i64, i64* @_ZZN2v88internalL37Stats_Runtime_ArraySpeciesConstructorEiPmPNS0_7IsolateEE28trace_event_unique_atomic220 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %16
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internalL37Stats_Runtime_ArraySpeciesConstructorEiPmPNS0_7IsolateEE28trace_event_unique_atomic220 monotonic, align 8
  br label %28

28:                                               ; preds = %16, %20
  %29 = phi i8* [ %18, %16 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #5
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %66, label %35

35:                                               ; preds = %28
  %36 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %36) #5
  %37 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %36, i8 0, i64 16, i1 false) #5
  %38 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %39 = bitcast %"class.v8::TracingController"* %38 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %40 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %39, align 8
  %41 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %40, i64 3
  %42 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %41, align 8
  %43 = call i64 %42(%"class.v8::TracingController"* %38, i8 signext 88, i8* %29, i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %37, i32 0) #5
  %44 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %45 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %44, align 8
  %46 = icmp eq %"class.v8::ConvertableToTraceFormat"* %45, null
  br i1 %46, label %52, label %47

47:                                               ; preds = %35
  %48 = bitcast %"class.v8::ConvertableToTraceFormat"* %45 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %49 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %49, i64 1
  %51 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, align 8
  call void %51(%"class.v8::ConvertableToTraceFormat"* nonnull %45) #5
  br label %52

52:                                               ; preds = %47, %35
  %53 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %54 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %53, align 16
  %55 = icmp eq %"class.v8::ConvertableToTraceFormat"* %54, null
  br i1 %55, label %61, label %56

56:                                               ; preds = %52
  %57 = bitcast %"class.v8::ConvertableToTraceFormat"* %54 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %58 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %57, align 8
  %59 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %58, i64 1
  %60 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, align 8
  call void %60(%"class.v8::ConvertableToTraceFormat"* nonnull %54) #5
  br label %61

61:                                               ; preds = %52, %56
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %36) #5
  %62 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1
  %63 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, i64 0, i32 0
  store i8* %29, i8** %63, align 8
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([43 x i8], [43 x i8]* @.str.21, i64 0, i64 0), i8** %64, align 8
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  store i64 %43, i64* %65, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %62, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %66

66:                                               ; preds = %28, %61
  %67 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %68 = bitcast %"struct.v8::internal::HandleScopeData"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %71 = load i64*, i64** %70, align 8
  %72 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %73 = load i32, i32* %72, align 8
  %74 = add nsw i32 %73, 1
  store i32 %74, i32* %72, align 8
  %75 = call i64* @_ZN2v88internal6Object23ArraySpeciesConstructorEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %1) #5
  %76 = icmp eq i64* %75, null
  %77 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %78 = select i1 %76, i64* %77, i64* %75
  %79 = load i64, i64* %78, align 8
  %80 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %80, label %94, label %81

81:                                               ; preds = %66
  %82 = inttoptr i64 %69 to i64*
  %83 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %67, i64 0, i32 0
  %84 = load i64*, i64** %83, align 8
  store i64 %69, i64* %68, align 8
  %85 = load i32, i32* %72, align 8
  %86 = add nsw i32 %85, -1
  store i32 %86, i32* %72, align 8
  %87 = load i64*, i64** %70, align 8
  %88 = icmp eq i64* %87, %71
  br i1 %88, label %91, label %89

89:                                               ; preds = %81
  store i64* %71, i64** %70, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %90 = load i64*, i64** %83, align 8
  br label %91

91:                                               ; preds = %89, %81
  %92 = phi i64* [ %90, %89 ], [ %82, %81 ]
  %93 = phi i64* [ %71, %89 ], [ %84, %81 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %92, i64* %93) #5
  br label %94

94:                                               ; preds = %66, %91
  %95 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %96 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %95, null
  br i1 %96, label %113, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 0
  %99 = load i8*, i8** %98, align 8
  %100 = load atomic i8, i8* %99 monotonic, align 1
  %101 = icmp eq i8 %100, 0
  br i1 %101, label %113, label %102

102:                                              ; preds = %97
  %103 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %104 = load i8*, i8** %98, align 8
  %105 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 1
  %106 = load i8*, i8** %105, align 8
  %107 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %6, i64 0, i32 1, i32 2
  %108 = load i64, i64* %107, align 8
  %109 = bitcast %"class.v8::TracingController"* %103 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %110 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %110, i64 5
  %112 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %111, align 8
  call void %112(%"class.v8::TracingController"* %103, i8* %104, i8* %106, i64 %108) #5
  br label %113

113:                                              ; preds = %94, %97, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #5
  %114 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 0
  %115 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %114, align 8
  %116 = icmp eq %"class.v8::internal::RuntimeCallStats"* %115, null
  br i1 %116, label %119, label %117, !prof !2

117:                                              ; preds = %113
  %118 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %5, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %115, %"class.v8::internal::RuntimeCallTimer"* %118) #5
  br label %119

119:                                              ; preds = %113, %117
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %7) #5
  ret i64 %79
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal26Runtime_ArrayIncludes_SlowEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %3
  %10 = tail call fastcc i64 @_ZN2v88internalL32Stats_Runtime_ArrayIncludes_SlowEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %468

11:                                               ; preds = %3
  %12 = ptrtoint i64* %1 to i64
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %14 = bitcast %"struct.v8::internal::HandleScopeData"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = add i64 %12, -8
  %22 = inttoptr i64 %21 to i64*
  %23 = add i64 %12, -16
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %1, align 8
  %26 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %27 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %28 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %27, null
  %29 = inttoptr i64 %15 to i64*
  br i1 %28, label %33, label %30

30:                                               ; preds = %11
  %31 = tail call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %27, i64 %25) #5
  %32 = load i64, i64* %31, align 8
  br label %43

33:                                               ; preds = %11
  %34 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %35 = icmp eq i64* %17, %29
  br i1 %35, label %36, label %38

36:                                               ; preds = %33
  %37 = tail call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %38

38:                                               ; preds = %36, %33
  %39 = phi i64* [ %37, %36 ], [ %29, %33 ]
  %40 = ptrtoint i64* %39 to i64
  %41 = add i64 %40, 8
  %42 = inttoptr i64 %41 to i64*
  store i64* %42, i64** %34, align 8
  store i64 %25, i64* %39, align 8
  br label %43

43:                                               ; preds = %38, %30
  %44 = phi i64 [ %32, %30 ], [ %25, %38 ]
  %45 = phi i64* [ %31, %30 ], [ %39, %38 ]
  %46 = and i64 %44, 1
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %59, label %48

48:                                               ; preds = %43
  %49 = and i64 %44, -4294967296
  %50 = add i64 %44, -1
  %51 = inttoptr i64 %50 to i32*
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = zext i32 %52 to i64
  %54 = or i64 %49, %53
  %55 = add i64 %54, 7
  %56 = inttoptr i64 %55 to i16*
  %57 = load atomic i16, i16* %56 monotonic, align 2
  %58 = icmp ugt i16 %57, 185
  br i1 %58, label %61, label %59

59:                                               ; preds = %48, %43
  %60 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* %45, i8* null) #5
  br label %61

61:                                               ; preds = %59, %48
  %62 = phi i64* [ %60, %59 ], [ %45, %48 ]
  %63 = icmp eq i64* %62, null
  br i1 %63, label %64, label %67

64:                                               ; preds = %61
  %65 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %66 = load i64, i64* %65, align 8
  br label %453

67:                                               ; preds = %61
  %68 = ptrtoint i64* %62 to i64
  %69 = load i64, i64* %62, align 8
  %70 = and i64 %69, -4294967296
  %71 = add i64 %69, -1
  %72 = inttoptr i64 %71 to i32*
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = zext i32 %73 to i64
  %75 = or i64 %70, %74
  %76 = add i64 %75, 7
  %77 = inttoptr i64 %76 to i16*
  %78 = load atomic i16, i16* %77 monotonic, align 2
  %79 = icmp eq i16 %78, 1085
  br i1 %79, label %80, label %115

80:                                               ; preds = %67
  %81 = add i64 %69, 11
  %82 = inttoptr i64 %81 to i32*
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i64
  %85 = or i64 %70, %84
  %86 = and i64 %84, 1
  %87 = icmp eq i64 %86, 0
  br i1 %87, label %88, label %92

88:                                               ; preds = %80
  %89 = icmp slt i32 %83, 0
  %90 = lshr i32 %83, 1
  %91 = select i1 %89, i32 0, i32 %90
  br label %112

92:                                               ; preds = %80
  %93 = add i64 %85, -1
  %94 = inttoptr i64 %93 to i32*
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = zext i32 %95 to i64
  %97 = or i64 %70, %96
  %98 = add i64 %97, 7
  %99 = inttoptr i64 %98 to i16*
  %100 = load atomic i16, i16* %99 monotonic, align 2
  %101 = icmp eq i16 %100, 66
  br i1 %101, label %102, label %112

102:                                              ; preds = %92
  %103 = add i64 %85, 3
  %104 = inttoptr i64 %103 to double*
  %105 = load double, double* %104, align 1
  %106 = fadd double %105, 0x4330000000000000
  %107 = bitcast double %106 to i64
  %108 = and i64 %107, -4294967296
  %109 = icmp eq i64 %108, 4841369599423283200
  %110 = trunc i64 %107 to i32
  %111 = select i1 %109, i32 %110, i32 0
  br label %112

112:                                              ; preds = %102, %92, %88
  %113 = phi i32 [ 0, %92 ], [ %91, %88 ], [ %111, %102 ]
  %114 = zext i32 %113 to i64
  br label %235

115:                                              ; preds = %67
  %116 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %117 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %117) #5
  %118 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %119 = load i64, i64* %116, align 8
  %120 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %121 = load i64, i64* %120, align 8
  %122 = add i64 %119, -1
  %123 = inttoptr i64 %122 to i32*
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i64 %121, 4294967295
  %126 = icmp eq i64 %125, 0
  tail call void @llvm.assume(i1 %126) #5
  %127 = zext i32 %124 to i64
  %128 = or i64 %121, %127
  %129 = add i64 %128, 7
  %130 = inttoptr i64 %129 to i16*
  %131 = load atomic i16, i16* %130 monotonic, align 2
  %132 = icmp eq i16 %131, 64
  br i1 %132, label %133, label %139

133:                                              ; preds = %115
  %134 = add i64 %119, 7
  %135 = inttoptr i64 %134 to i32*
  %136 = load i32, i32* %135, align 4
  %137 = and i32 %136, 1
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %133, %115
  br label %140

140:                                              ; preds = %139, %133
  %141 = phi i32 [ 3, %139 ], [ 0, %133 ]
  store i32 %141, i32* %118, align 8
  %142 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %142, align 4
  %143 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %143, align 8
  %144 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %144, align 4
  %145 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %145, align 8
  %146 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %146, align 8
  %147 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %116, i64** %147, align 8
  %148 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %148, align 8
  %149 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %62, i64** %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %152 = bitcast %"class.v8::internal::Handle.1160"* %151 to i64*
  store i64 %68, i64* %152, align 8
  %153 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %154 = bitcast i64* %153 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %154, i8 -1, i64 16, i1 false) #5
  %155 = and i64 %119, -4294967296
  %156 = load atomic i32, i32* %123 monotonic, align 4
  %157 = zext i32 %156 to i64
  %158 = or i64 %155, %157
  %159 = add i64 %158, 7
  %160 = inttoptr i64 %159 to i16*
  %161 = load atomic i16, i16* %160 monotonic, align 2
  %162 = and i16 %161, -32
  %163 = icmp eq i16 %162, 32
  br i1 %163, label %164, label %168

164:                                              ; preds = %140
  %165 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %166 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %165, align 8
  %167 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %166, %"class.v8::internal::Isolate"* %2, i64* %116) #5
  br label %168

168:                                              ; preds = %164, %140
  %169 = phi i64* [ %167, %164 ], [ %116, %140 ]
  store i64* %169, i64** %147, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #5
  %170 = load i32, i32* %142, align 4
  %171 = icmp eq i32 %170, 4
  br i1 %171, label %172, label %177

172:                                              ; preds = %168
  %173 = bitcast %"class.v8::internal::Isolate"** %146 to %"class.v8::internal::Factory"**
  %174 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %174, i64 160
  %176 = bitcast %"class.v8::internal::Factory"* %175 to i64*
  br label %179

177:                                              ; preds = %168
  %178 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #5
  br label %179

179:                                              ; preds = %177, %172
  %180 = phi i64* [ %178, %177 ], [ %176, %172 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %117) #5
  %181 = icmp eq i64* %180, null
  br i1 %181, label %182, label %185

182:                                              ; preds = %179
  %183 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %184 = load i64, i64* %183, align 8
  br label %453

185:                                              ; preds = %179
  %186 = load i64, i64* %180, align 8
  %187 = and i64 %186, 1
  %188 = icmp eq i64 %187, 0
  br i1 %188, label %189, label %212

189:                                              ; preds = %185
  %190 = trunc i64 %186 to i32
  %191 = ashr i32 %190, 1
  %192 = icmp sgt i32 %191, 0
  %193 = select i1 %192, i32 %191, i32 0
  %194 = shl nuw nsw i32 %193, 1
  %195 = zext i32 %194 to i64
  %196 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %26, align 8
  %197 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %196, null
  br i1 %197, label %200, label %198

198:                                              ; preds = %189
  %199 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %196, i64 %195) #5
  br label %214

200:                                              ; preds = %189
  %201 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %202 = load i64*, i64** %201, align 8
  %203 = load i64*, i64** %16, align 8
  %204 = icmp eq i64* %202, %203
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  %206 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %207

207:                                              ; preds = %205, %200
  %208 = phi i64* [ %206, %205 ], [ %202, %200 ]
  %209 = ptrtoint i64* %208 to i64
  %210 = add i64 %209, 8
  %211 = inttoptr i64 %210 to i64*
  store i64* %211, i64** %201, align 8
  store i64 %195, i64* %208, align 8
  br label %214

212:                                              ; preds = %185
  %213 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %180) #5
  br label %214

214:                                              ; preds = %212, %207, %198
  %215 = phi i64* [ %213, %212 ], [ %199, %198 ], [ %208, %207 ]
  %216 = icmp eq i64* %215, null
  br i1 %216, label %217, label %220

217:                                              ; preds = %214
  %218 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %219 = load i64, i64* %218, align 8
  br label %453

220:                                              ; preds = %214
  %221 = load i64, i64* %215, align 8
  %222 = and i64 %221, 1
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %228

224:                                              ; preds = %220
  %225 = trunc i64 %221 to i32
  %226 = ashr i32 %225, 1
  %227 = sitofp i32 %226 to double
  br label %232

228:                                              ; preds = %220
  %229 = add i64 %221, 3
  %230 = inttoptr i64 %229 to double*
  %231 = load double, double* %230, align 1
  br label %232

232:                                              ; preds = %228, %224
  %233 = phi double [ %227, %224 ], [ %231, %228 ]
  %234 = fptosi double %233 to i64
  br label %235

235:                                              ; preds = %232, %112
  %236 = phi i64 [ %114, %112 ], [ %234, %232 ]
  %237 = icmp eq i64 %236, 0
  br i1 %237, label %238, label %241

238:                                              ; preds = %235
  %239 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 8
  %240 = load i64, i64* %239, align 8
  br label %453

241:                                              ; preds = %235
  %242 = load i64, i64* %24, align 8
  %243 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %244 = load i64, i64* %243, align 8
  %245 = trunc i64 %242 to i32
  %246 = trunc i64 %244 to i32
  %247 = icmp eq i32 %245, %246
  br i1 %247, label %293, label %248

248:                                              ; preds = %241
  %249 = and i64 %242, 1
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %253, label %251

251:                                              ; preds = %248
  %252 = call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %24) #5
  br label %253

253:                                              ; preds = %251, %248
  %254 = phi i64* [ %252, %251 ], [ %24, %248 ]
  %255 = icmp eq i64* %254, null
  br i1 %255, label %256, label %259

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %258 = load i64, i64* %257, align 8
  br label %453

259:                                              ; preds = %253
  %260 = load i64, i64* %254, align 8
  %261 = and i64 %260, 1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %272, !prof !2

263:                                              ; preds = %259
  %264 = trunc i64 %260 to i32
  %265 = ashr i32 %264, 1
  %266 = icmp slt i32 %264, 0
  %267 = sext i32 %265 to i64
  br i1 %266, label %268, label %293

268:                                              ; preds = %263
  %269 = add nsw i64 %236, %267
  %270 = icmp sgt i64 %269, 0
  %271 = select i1 %270, i64 %269, i64 0
  br label %293

272:                                              ; preds = %259
  %273 = add i64 %260, 3
  %274 = inttoptr i64 %273 to double*
  %275 = load double, double* %274, align 1
  %276 = sitofp i64 %236 to double
  %277 = fcmp ult double %275, %276
  br i1 %277, label %278, label %290

278:                                              ; preds = %272
  %279 = call double @llvm.fabs.f64(double %275) #9
  %280 = fcmp ueq double %279, 0x7FF0000000000000
  br i1 %280, label %293, label %281, !prof !4

281:                                              ; preds = %278
  %282 = fcmp olt double %275, 0.000000e+00
  br i1 %282, label %283, label %288

283:                                              ; preds = %281
  %284 = fadd double %275, %276
  %285 = fcmp olt double %284, 0.000000e+00
  %286 = select i1 %285, double 0.000000e+00, double %284
  %287 = fptosi double %286 to i64
  br label %293

288:                                              ; preds = %281
  %289 = fptosi double %275 to i64
  br label %293

290:                                              ; preds = %272
  %291 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 8
  %292 = load i64, i64* %291, align 8
  br label %453

293:                                              ; preds = %288, %283, %278, %268, %263, %241
  %294 = phi i64 [ 0, %241 ], [ %271, %268 ], [ 0, %278 ], [ %289, %288 ], [ %287, %283 ], [ %267, %263 ]
  %295 = load i64, i64* %62, align 8
  %296 = and i64 %295, -4294967296
  %297 = add i64 %295, -1
  %298 = inttoptr i64 %297 to i32*
  %299 = load atomic i32, i32* %298 monotonic, align 4
  %300 = zext i32 %299 to i64
  %301 = or i64 %296, %300
  %302 = add i64 %301, 7
  %303 = inttoptr i64 %302 to i16*
  %304 = load atomic i16, i16* %303 monotonic, align 2
  %305 = icmp ugt i16 %304, 1040
  %306 = icmp slt i64 %236, 4294967296
  %307 = and i1 %306, %305
  br i1 %307, label %308, label %383

308:                                              ; preds = %293
  %309 = load atomic i32, i32* %298 monotonic, align 4
  %310 = zext i32 %309 to i64
  %311 = or i64 %296, %310
  %312 = add i64 %311, 15
  %313 = inttoptr i64 %312 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %316 = load i64, i64* %315, align 8
  %317 = trunc i64 %316 to i32
  %318 = icmp eq i32 %314, %317
  br i1 %318, label %354, label %319

319:                                              ; preds = %308
  %320 = zext i32 %314 to i64
  %321 = or i64 %296, %320
  %322 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 111
  %323 = load i64, i64* %322, align 8
  %324 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  %325 = load i64, i64* %324, align 8
  %326 = trunc i64 %325 to i32
  %327 = trunc i64 %323 to i32
  br label %328

328:                                              ; preds = %347, %319
  %329 = phi i64 [ %321, %319 ], [ %352, %347 ]
  %330 = and i64 %329, -4294967296
  %331 = add i64 %329, -1
  %332 = inttoptr i64 %331 to i32*
  %333 = load atomic i32, i32* %332 monotonic, align 4
  %334 = zext i32 %333 to i64
  %335 = or i64 %330, %334
  %336 = add i64 %335, 7
  %337 = inttoptr i64 %336 to i16*
  %338 = load atomic i16, i16* %337 monotonic, align 2
  %339 = icmp ult i16 %338, 1042
  br i1 %339, label %383, label %340

340:                                              ; preds = %328
  %341 = add i64 %329, 7
  %342 = inttoptr i64 %341 to i32*
  %343 = load i32, i32* %342, align 4
  %344 = icmp ne i32 %343, %326
  %345 = icmp ne i32 %343, %327
  %346 = and i1 %344, %345
  br i1 %346, label %383, label %347

347:                                              ; preds = %340
  %348 = add i64 %335, 15
  %349 = inttoptr i64 %348 to i32*
  %350 = load i32, i32* %349, align 4
  %351 = zext i32 %350 to i64
  %352 = or i64 %330, %351
  %353 = icmp eq i32 %350, %317
  br i1 %353, label %354, label %328

354:                                              ; preds = %347, %308
  %355 = load atomic i32, i32* %298 monotonic, align 4
  %356 = zext i32 %355 to i64
  %357 = or i64 %296, %356
  %358 = add i64 %357, 10
  %359 = inttoptr i64 %358 to i8*
  %360 = load i8, i8* %359, align 1
  %361 = lshr i8 %360, 2
  %362 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %363 = zext i8 %361 to i64
  %364 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %362, i64 %363
  %365 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %364, align 8
  %366 = bitcast %"class.v8::internal::ElementsAccessor"* %365 to i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)***
  %367 = load i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)**, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*** %366, align 8
  %368 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %367, i64 25
  %369 = load i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %368, align 8
  %370 = call i16 %369(%"class.v8::internal::ElementsAccessor"* %365, %"class.v8::internal::Isolate"* %2, i64* nonnull %62, i64* %22, i64 %294, i64 %236) #5
  %371 = trunc i16 %370 to i8
  %372 = icmp eq i8 %371, 0
  br i1 %372, label %373, label %376

373:                                              ; preds = %354
  %374 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %375 = load i64, i64* %374, align 8
  br label %453

376:                                              ; preds = %354
  %377 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %378 = icmp ugt i16 %370, 255
  %379 = select i1 %378, i64 184, i64 192
  %380 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %377, i64 %379
  %381 = bitcast %"class.v8::internal::FactoryBase"* %380 to i64*
  %382 = load i64, i64* %381, align 8
  br label %453

383:                                              ; preds = %340, %328, %293
  %384 = icmp slt i64 %294, %236
  br i1 %384, label %385, label %450

385:                                              ; preds = %383
  %386 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %387 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %388 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %389 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  %390 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 7
  %391 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %392 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %393 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %13, i64 0, i32 0
  br i1 %392, label %394, label %415

394:                                              ; preds = %385, %402
  %395 = phi i64 [ %403, %402 ], [ %294, %385 ]
  %396 = load i32, i32* %18, align 8
  %397 = add nsw i32 %396, 1
  store i32 %397, i32* %18, align 8
  %398 = sitofp i64 %395 to double
  %399 = fptoui double %398 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %386) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* null, i64* nonnull %62, i64* null, i64 %399, i64* nonnull %62, i32 3) #5
  %400 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #5
  %401 = icmp eq i64* %400, null
  br i1 %401, label %411, label %405

402:                                              ; preds = %405
  %403 = add i64 %395, 1
  %404 = icmp eq i64 %403, %236
  br i1 %404, label %450, label %394

405:                                              ; preds = %394
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %386) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %387) #5
  %406 = load i64, i64* %22, align 8
  store i64 %406, i64* %388, align 8
  %407 = load i64, i64* %400, align 8
  %408 = call zeroext i1 @_ZN2v88internal6Object13SameValueZeroES1_(%"class.v8::internal::Object"* nonnull %389, i64 %407) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %387) #5
  br i1 %408, label %409, label %402

409:                                              ; preds = %405
  %410 = load i64, i64* %390, align 8
  br label %453

411:                                              ; preds = %394
  %412 = load i64, i64* %391, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %386) #5
  br label %453

413:                                              ; preds = %445
  %414 = icmp eq i64 %449, %236
  br i1 %414, label %450, label %415

415:                                              ; preds = %385, %413
  %416 = phi i64 [ %436, %413 ], [ undef, %385 ]
  %417 = phi i64 [ %449, %413 ], [ %294, %385 ]
  %418 = load i64, i64* %14, align 8
  %419 = load i64*, i64** %16, align 8
  %420 = load i32, i32* %18, align 8
  %421 = add nsw i32 %420, 1
  store i32 %421, i32* %18, align 8
  %422 = sitofp i64 %417 to double
  %423 = fptoui double %422 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %386) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* nonnull %2, i64* nonnull %62, i64* null, i64 %423, i64* nonnull %62, i32 3) #5
  %424 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #5
  %425 = icmp eq i64* %424, null
  br i1 %425, label %426, label %428

426:                                              ; preds = %415
  %427 = load i64, i64* %391, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %386) #5
  br label %434

428:                                              ; preds = %415
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %386) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %387) #5
  %429 = load i64, i64* %22, align 8
  store i64 %429, i64* %388, align 8
  %430 = load i64, i64* %424, align 8
  %431 = call zeroext i1 @_ZN2v88internal6Object13SameValueZeroES1_(%"class.v8::internal::Object"* nonnull %389, i64 %430) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %387) #5
  br i1 %431, label %432, label %434

432:                                              ; preds = %428
  %433 = load i64, i64* %390, align 8
  br label %434

434:                                              ; preds = %432, %428, %426
  %435 = phi i32 [ 1, %432 ], [ 1, %426 ], [ 0, %428 ]
  %436 = phi i64 [ %433, %432 ], [ %427, %426 ], [ %416, %428 ]
  %437 = inttoptr i64 %418 to i64*
  %438 = load i64*, i64** %393, align 8
  store i64 %418, i64* %14, align 8
  %439 = load i32, i32* %18, align 8
  %440 = add nsw i32 %439, -1
  store i32 %440, i32* %18, align 8
  %441 = load i64*, i64** %16, align 8
  %442 = icmp eq i64* %441, %419
  br i1 %442, label %445, label %443

443:                                              ; preds = %434
  store i64* %419, i64** %16, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %444 = load i64*, i64** %393, align 8
  br label %445

445:                                              ; preds = %443, %434
  %446 = phi i64* [ %444, %443 ], [ %437, %434 ]
  %447 = phi i64* [ %419, %443 ], [ %438, %434 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %446, i64* %447) #5
  %448 = icmp eq i32 %435, 0
  %449 = add i64 %417, 1
  br i1 %448, label %413, label %453

450:                                              ; preds = %413, %402, %383
  %451 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 8
  %452 = load i64, i64* %451, align 8
  br label %453

453:                                              ; preds = %445, %450, %411, %409, %376, %373, %290, %256, %238, %217, %182, %64
  %454 = phi i64 [ %66, %64 ], [ %240, %238 ], [ %452, %450 ], [ %292, %290 ], [ %258, %256 ], [ %375, %373 ], [ %382, %376 ], [ %184, %182 ], [ %219, %217 ], [ %412, %411 ], [ %410, %409 ], [ %436, %445 ]
  %455 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %455, label %468, label %456

456:                                              ; preds = %453
  %457 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %13, i64 0, i32 0
  %458 = load i64*, i64** %457, align 8
  store i64 %15, i64* %14, align 8
  %459 = load i32, i32* %18, align 8
  %460 = add nsw i32 %459, -1
  store i32 %460, i32* %18, align 8
  %461 = load i64*, i64** %16, align 8
  %462 = icmp eq i64* %461, %17
  br i1 %462, label %465, label %463

463:                                              ; preds = %456
  store i64* %17, i64** %16, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %464 = load i64*, i64** %457, align 8
  br label %465

465:                                              ; preds = %463, %456
  %466 = phi i64* [ %464, %463 ], [ %29, %456 ]
  %467 = phi i64* [ %17, %463 ], [ %458, %456 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %466, i64* %467) #5
  br label %468

468:                                              ; preds = %465, %453, %9
  %469 = phi i64 [ %10, %9 ], [ %454, %453 ], [ %454, %465 ]
  ret i64 %469
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL32Stats_Runtime_ArrayIncludes_SlowEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %9 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %10 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #5
  %11 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallTimer"* %15, i32 221) #5
  br label %19

19:                                               ; preds = %3, %13
  %20 = load atomic i64, i64* @_ZZN2v88internalL32Stats_Runtime_ArrayIncludes_SlowEiPmPNS0_7IsolateEE28trace_event_unique_atomic229 monotonic, align 8
  %21 = inttoptr i64 %20 to i8*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %25 = bitcast %"class.v8::TracingController"* %24 to i8* (%"class.v8::TracingController"*, i8*)***
  %26 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, i64 2
  %28 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %27, align 8
  %29 = call i8* %28(%"class.v8::TracingController"* %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %30 = ptrtoint i8* %29 to i64
  store atomic volatile i64 %30, i64* @_ZZN2v88internalL32Stats_Runtime_ArrayIncludes_SlowEiPmPNS0_7IsolateEE28trace_event_unique_atomic229 monotonic, align 8
  br label %31

31:                                               ; preds = %19, %23
  %32 = phi i8* [ %21, %19 ], [ %29, %23 ]
  %33 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  %35 = load atomic i8, i8* %32 monotonic, align 1
  %36 = and i8 %35, 5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #5
  %40 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 0, i64 16, i1 false) #5
  %41 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %42 = bitcast %"class.v8::TracingController"* %41 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %43, i64 3
  %45 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %44, align 8
  %46 = call i64 %45(%"class.v8::TracingController"* %41, i8 signext 88, i8* %32, i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %40, i32 0) #5
  %47 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %48 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %47, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %47, align 8
  %49 = icmp eq %"class.v8::ConvertableToTraceFormat"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %38
  %51 = bitcast %"class.v8::ConvertableToTraceFormat"* %48 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, i64 1
  %54 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, align 8
  call void %54(%"class.v8::ConvertableToTraceFormat"* nonnull %48) #5
  br label %55

55:                                               ; preds = %50, %38
  %56 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %56, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %56, align 16
  %58 = icmp eq %"class.v8::ConvertableToTraceFormat"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.v8::ConvertableToTraceFormat"* %57 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, i64 1
  %63 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %62, align 8
  call void %63(%"class.v8::ConvertableToTraceFormat"* nonnull %57) #5
  br label %64

64:                                               ; preds = %55, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #5
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1
  %66 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %65, i64 0, i32 0
  store i8* %32, i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([38 x i8], [38 x i8]* @.str.22, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  store i64 %46, i64* %68, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %65, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  br label %69

69:                                               ; preds = %31, %64
  %70 = ptrtoint i64* %1 to i64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %72 = bitcast %"struct.v8::internal::HandleScopeData"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = add i64 %70, -8
  %80 = inttoptr i64 %79 to i64*
  %81 = add i64 %70, -16
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %1, align 8
  %84 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %85 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %86 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %85, null
  %87 = inttoptr i64 %73 to i64*
  br i1 %86, label %91, label %88

88:                                               ; preds = %69
  %89 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %85, i64 %83) #5
  %90 = load i64, i64* %89, align 8
  br label %101

91:                                               ; preds = %69
  %92 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %93 = icmp eq i64* %75, %87
  br i1 %93, label %94, label %96

94:                                               ; preds = %91
  %95 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %96

96:                                               ; preds = %94, %91
  %97 = phi i64* [ %95, %94 ], [ %87, %91 ]
  %98 = ptrtoint i64* %97 to i64
  %99 = add i64 %98, 8
  %100 = inttoptr i64 %99 to i64*
  store i64* %100, i64** %92, align 8
  store i64 %83, i64* %97, align 8
  br label %101

101:                                              ; preds = %96, %88
  %102 = phi i64 [ %90, %88 ], [ %83, %96 ]
  %103 = phi i64* [ %89, %88 ], [ %97, %96 ]
  %104 = and i64 %102, 1
  %105 = icmp eq i64 %104, 0
  br i1 %105, label %117, label %106

106:                                              ; preds = %101
  %107 = and i64 %102, -4294967296
  %108 = add i64 %102, -1
  %109 = inttoptr i64 %108 to i32*
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = zext i32 %110 to i64
  %112 = or i64 %107, %111
  %113 = add i64 %112, 7
  %114 = inttoptr i64 %113 to i16*
  %115 = load atomic i16, i16* %114 monotonic, align 2
  %116 = icmp ugt i16 %115, 185
  br i1 %116, label %119, label %117

117:                                              ; preds = %106, %101
  %118 = call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* %103, i8* null) #5
  br label %119

119:                                              ; preds = %117, %106
  %120 = phi i64* [ %118, %117 ], [ %103, %106 ]
  %121 = icmp eq i64* %120, null
  br i1 %121, label %122, label %125

122:                                              ; preds = %119
  %123 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %124 = load i64, i64* %123, align 8
  br label %511

125:                                              ; preds = %119
  %126 = ptrtoint i64* %120 to i64
  %127 = load i64, i64* %120, align 8
  %128 = and i64 %127, -4294967296
  %129 = add i64 %127, -1
  %130 = inttoptr i64 %129 to i32*
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = zext i32 %131 to i64
  %133 = or i64 %128, %132
  %134 = add i64 %133, 7
  %135 = inttoptr i64 %134 to i16*
  %136 = load atomic i16, i16* %135 monotonic, align 2
  %137 = icmp eq i16 %136, 1085
  br i1 %137, label %138, label %173

138:                                              ; preds = %125
  %139 = add i64 %127, 11
  %140 = inttoptr i64 %139 to i32*
  %141 = load i32, i32* %140, align 4
  %142 = zext i32 %141 to i64
  %143 = or i64 %128, %142
  %144 = and i64 %142, 1
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %150

146:                                              ; preds = %138
  %147 = icmp slt i32 %141, 0
  %148 = lshr i32 %141, 1
  %149 = select i1 %147, i32 0, i32 %148
  br label %170

150:                                              ; preds = %138
  %151 = add i64 %143, -1
  %152 = inttoptr i64 %151 to i32*
  %153 = load atomic i32, i32* %152 monotonic, align 4
  %154 = zext i32 %153 to i64
  %155 = or i64 %128, %154
  %156 = add i64 %155, 7
  %157 = inttoptr i64 %156 to i16*
  %158 = load atomic i16, i16* %157 monotonic, align 2
  %159 = icmp eq i16 %158, 66
  br i1 %159, label %160, label %170

160:                                              ; preds = %150
  %161 = add i64 %143, 3
  %162 = inttoptr i64 %161 to double*
  %163 = load double, double* %162, align 1
  %164 = fadd double %163, 0x4330000000000000
  %165 = bitcast double %164 to i64
  %166 = and i64 %165, -4294967296
  %167 = icmp eq i64 %166, 4841369599423283200
  %168 = trunc i64 %165 to i32
  %169 = select i1 %167, i32 %168, i32 0
  br label %170

170:                                              ; preds = %160, %150, %146
  %171 = phi i32 [ 0, %150 ], [ %149, %146 ], [ %169, %160 ]
  %172 = zext i32 %171 to i64
  br label %293

173:                                              ; preds = %125
  %174 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %175 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %175) #5
  %176 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %177 = load i64, i64* %174, align 8
  %178 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %179 = load i64, i64* %178, align 8
  %180 = add i64 %177, -1
  %181 = inttoptr i64 %180 to i32*
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i64 %179, 4294967295
  %184 = icmp eq i64 %183, 0
  call void @llvm.assume(i1 %184) #5
  %185 = zext i32 %182 to i64
  %186 = or i64 %179, %185
  %187 = add i64 %186, 7
  %188 = inttoptr i64 %187 to i16*
  %189 = load atomic i16, i16* %188 monotonic, align 2
  %190 = icmp eq i16 %189, 64
  br i1 %190, label %191, label %197

191:                                              ; preds = %173
  %192 = add i64 %177, 7
  %193 = inttoptr i64 %192 to i32*
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 1
  %196 = icmp eq i32 %195, 0
  br i1 %196, label %197, label %198

197:                                              ; preds = %191, %173
  br label %198

198:                                              ; preds = %197, %191
  %199 = phi i32 [ 3, %197 ], [ 0, %191 ]
  store i32 %199, i32* %176, align 8
  %200 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %200, align 4
  %201 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %201, align 8
  %202 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %202, align 4
  %203 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %204, align 8
  %205 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %174, i64** %205, align 8
  %206 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %206, align 8
  %207 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %120, i64** %207, align 8
  %208 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %208, align 8
  %209 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %210 = bitcast %"class.v8::internal::Handle.1160"* %209 to i64*
  store i64 %126, i64* %210, align 8
  %211 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %212 = bitcast i64* %211 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %212, i8 -1, i64 16, i1 false) #5
  %213 = and i64 %177, -4294967296
  %214 = load atomic i32, i32* %181 monotonic, align 4
  %215 = zext i32 %214 to i64
  %216 = or i64 %213, %215
  %217 = add i64 %216, 7
  %218 = inttoptr i64 %217 to i16*
  %219 = load atomic i16, i16* %218 monotonic, align 2
  %220 = and i16 %219, -32
  %221 = icmp eq i16 %220, 32
  br i1 %221, label %222, label %226

222:                                              ; preds = %198
  %223 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %224 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %223, align 8
  %225 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %224, %"class.v8::internal::Isolate"* %2, i64* %174) #5
  br label %226

226:                                              ; preds = %222, %198
  %227 = phi i64* [ %225, %222 ], [ %174, %198 ]
  store i64* %227, i64** %205, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #5
  %228 = load i32, i32* %200, align 4
  %229 = icmp eq i32 %228, 4
  br i1 %229, label %230, label %235

230:                                              ; preds = %226
  %231 = bitcast %"class.v8::internal::Isolate"** %204 to %"class.v8::internal::Factory"**
  %232 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %231, align 8
  %233 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %232, i64 160
  %234 = bitcast %"class.v8::internal::Factory"* %233 to i64*
  br label %237

235:                                              ; preds = %226
  %236 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #5
  br label %237

237:                                              ; preds = %235, %230
  %238 = phi i64* [ %236, %235 ], [ %234, %230 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %175) #5
  %239 = icmp eq i64* %238, null
  br i1 %239, label %240, label %243

240:                                              ; preds = %237
  %241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %242 = load i64, i64* %241, align 8
  br label %511

243:                                              ; preds = %237
  %244 = load i64, i64* %238, align 8
  %245 = and i64 %244, 1
  %246 = icmp eq i64 %245, 0
  br i1 %246, label %247, label %270

247:                                              ; preds = %243
  %248 = trunc i64 %244 to i32
  %249 = ashr i32 %248, 1
  %250 = icmp sgt i32 %249, 0
  %251 = select i1 %250, i32 %249, i32 0
  %252 = shl nuw nsw i32 %251, 1
  %253 = zext i32 %252 to i64
  %254 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %84, align 8
  %255 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %254, null
  br i1 %255, label %258, label %256

256:                                              ; preds = %247
  %257 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %254, i64 %253) #5
  br label %272

258:                                              ; preds = %247
  %259 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %260 = load i64*, i64** %259, align 8
  %261 = load i64*, i64** %74, align 8
  %262 = icmp eq i64* %260, %261
  br i1 %262, label %263, label %265

263:                                              ; preds = %258
  %264 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %265

265:                                              ; preds = %263, %258
  %266 = phi i64* [ %264, %263 ], [ %260, %258 ]
  %267 = ptrtoint i64* %266 to i64
  %268 = add i64 %267, 8
  %269 = inttoptr i64 %268 to i64*
  store i64* %269, i64** %259, align 8
  store i64 %253, i64* %266, align 8
  br label %272

270:                                              ; preds = %243
  %271 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %238) #5
  br label %272

272:                                              ; preds = %270, %265, %256
  %273 = phi i64* [ %271, %270 ], [ %257, %256 ], [ %266, %265 ]
  %274 = icmp eq i64* %273, null
  br i1 %274, label %275, label %278

275:                                              ; preds = %272
  %276 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %277 = load i64, i64* %276, align 8
  br label %511

278:                                              ; preds = %272
  %279 = load i64, i64* %273, align 8
  %280 = and i64 %279, 1
  %281 = icmp eq i64 %280, 0
  br i1 %281, label %282, label %286

282:                                              ; preds = %278
  %283 = trunc i64 %279 to i32
  %284 = ashr i32 %283, 1
  %285 = sitofp i32 %284 to double
  br label %290

286:                                              ; preds = %278
  %287 = add i64 %279, 3
  %288 = inttoptr i64 %287 to double*
  %289 = load double, double* %288, align 1
  br label %290

290:                                              ; preds = %286, %282
  %291 = phi double [ %285, %282 ], [ %289, %286 ]
  %292 = fptosi double %291 to i64
  br label %293

293:                                              ; preds = %290, %170
  %294 = phi i64 [ %172, %170 ], [ %292, %290 ]
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %296, label %299

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 8
  %298 = load i64, i64* %297, align 8
  br label %511

299:                                              ; preds = %293
  %300 = load i64, i64* %82, align 8
  %301 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 4
  %302 = load i64, i64* %301, align 8
  %303 = trunc i64 %300 to i32
  %304 = trunc i64 %302 to i32
  %305 = icmp eq i32 %303, %304
  br i1 %305, label %351, label %306

306:                                              ; preds = %299
  %307 = and i64 %300, 1
  %308 = icmp eq i64 %307, 0
  br i1 %308, label %311, label %309

309:                                              ; preds = %306
  %310 = call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %82) #5
  br label %311

311:                                              ; preds = %309, %306
  %312 = phi i64* [ %310, %309 ], [ %82, %306 ]
  %313 = icmp eq i64* %312, null
  br i1 %313, label %314, label %317

314:                                              ; preds = %311
  %315 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %316 = load i64, i64* %315, align 8
  br label %511

317:                                              ; preds = %311
  %318 = load i64, i64* %312, align 8
  %319 = and i64 %318, 1
  %320 = icmp eq i64 %319, 0
  br i1 %320, label %321, label %330, !prof !2

321:                                              ; preds = %317
  %322 = trunc i64 %318 to i32
  %323 = ashr i32 %322, 1
  %324 = icmp slt i32 %322, 0
  %325 = sext i32 %323 to i64
  br i1 %324, label %326, label %351

326:                                              ; preds = %321
  %327 = add nsw i64 %294, %325
  %328 = icmp sgt i64 %327, 0
  %329 = select i1 %328, i64 %327, i64 0
  br label %351

330:                                              ; preds = %317
  %331 = add i64 %318, 3
  %332 = inttoptr i64 %331 to double*
  %333 = load double, double* %332, align 1
  %334 = sitofp i64 %294 to double
  %335 = fcmp ult double %333, %334
  br i1 %335, label %336, label %348

336:                                              ; preds = %330
  %337 = call double @llvm.fabs.f64(double %333) #9
  %338 = fcmp ueq double %337, 0x7FF0000000000000
  br i1 %338, label %351, label %339, !prof !4

339:                                              ; preds = %336
  %340 = fcmp olt double %333, 0.000000e+00
  br i1 %340, label %341, label %346

341:                                              ; preds = %339
  %342 = fadd double %333, %334
  %343 = fcmp olt double %342, 0.000000e+00
  %344 = select i1 %343, double 0.000000e+00, double %342
  %345 = fptosi double %344 to i64
  br label %351

346:                                              ; preds = %339
  %347 = fptosi double %333 to i64
  br label %351

348:                                              ; preds = %330
  %349 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 8
  %350 = load i64, i64* %349, align 8
  br label %511

351:                                              ; preds = %346, %341, %336, %326, %321, %299
  %352 = phi i64 [ 0, %299 ], [ %329, %326 ], [ 0, %336 ], [ %347, %346 ], [ %345, %341 ], [ %325, %321 ]
  %353 = load i64, i64* %120, align 8
  %354 = and i64 %353, -4294967296
  %355 = add i64 %353, -1
  %356 = inttoptr i64 %355 to i32*
  %357 = load atomic i32, i32* %356 monotonic, align 4
  %358 = zext i32 %357 to i64
  %359 = or i64 %354, %358
  %360 = add i64 %359, 7
  %361 = inttoptr i64 %360 to i16*
  %362 = load atomic i16, i16* %361 monotonic, align 2
  %363 = icmp ugt i16 %362, 1040
  %364 = icmp slt i64 %294, 4294967296
  %365 = and i1 %364, %363
  br i1 %365, label %366, label %441

366:                                              ; preds = %351
  %367 = load atomic i32, i32* %356 monotonic, align 4
  %368 = zext i32 %367 to i64
  %369 = or i64 %354, %368
  %370 = add i64 %369, 15
  %371 = inttoptr i64 %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %374 = load i64, i64* %373, align 8
  %375 = trunc i64 %374 to i32
  %376 = icmp eq i32 %372, %375
  br i1 %376, label %412, label %377

377:                                              ; preds = %366
  %378 = zext i32 %372 to i64
  %379 = or i64 %354, %378
  %380 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 111
  %381 = load i64, i64* %380, align 8
  %382 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  %383 = load i64, i64* %382, align 8
  %384 = trunc i64 %383 to i32
  %385 = trunc i64 %381 to i32
  br label %386

386:                                              ; preds = %405, %377
  %387 = phi i64 [ %379, %377 ], [ %410, %405 ]
  %388 = and i64 %387, -4294967296
  %389 = add i64 %387, -1
  %390 = inttoptr i64 %389 to i32*
  %391 = load atomic i32, i32* %390 monotonic, align 4
  %392 = zext i32 %391 to i64
  %393 = or i64 %388, %392
  %394 = add i64 %393, 7
  %395 = inttoptr i64 %394 to i16*
  %396 = load atomic i16, i16* %395 monotonic, align 2
  %397 = icmp ult i16 %396, 1042
  br i1 %397, label %441, label %398

398:                                              ; preds = %386
  %399 = add i64 %387, 7
  %400 = inttoptr i64 %399 to i32*
  %401 = load i32, i32* %400, align 4
  %402 = icmp ne i32 %401, %384
  %403 = icmp ne i32 %401, %385
  %404 = and i1 %402, %403
  br i1 %404, label %441, label %405

405:                                              ; preds = %398
  %406 = add i64 %393, 15
  %407 = inttoptr i64 %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = zext i32 %408 to i64
  %410 = or i64 %388, %409
  %411 = icmp eq i32 %408, %375
  br i1 %411, label %412, label %386

412:                                              ; preds = %405, %366
  %413 = load atomic i32, i32* %356 monotonic, align 4
  %414 = zext i32 %413 to i64
  %415 = or i64 %354, %414
  %416 = add i64 %415, 10
  %417 = inttoptr i64 %416 to i8*
  %418 = load i8, i8* %417, align 1
  %419 = lshr i8 %418, 2
  %420 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %421 = zext i8 %419 to i64
  %422 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %420, i64 %421
  %423 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %422, align 8
  %424 = bitcast %"class.v8::internal::ElementsAccessor"* %423 to i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)***
  %425 = load i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)**, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*** %424, align 8
  %426 = getelementptr inbounds i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %425, i64 25
  %427 = load i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, i16 (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %426, align 8
  %428 = call i16 %427(%"class.v8::internal::ElementsAccessor"* %423, %"class.v8::internal::Isolate"* %2, i64* nonnull %120, i64* %80, i64 %352, i64 %294) #5
  %429 = trunc i16 %428 to i8
  %430 = icmp eq i8 %429, 0
  br i1 %430, label %431, label %434

431:                                              ; preds = %412
  %432 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %433 = load i64, i64* %432, align 8
  br label %511

434:                                              ; preds = %412
  %435 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %436 = icmp ugt i16 %428, 255
  %437 = select i1 %436, i64 184, i64 192
  %438 = getelementptr inbounds %"class.v8::internal::FactoryBase", %"class.v8::internal::FactoryBase"* %435, i64 %437
  %439 = bitcast %"class.v8::internal::FactoryBase"* %438 to i64*
  %440 = load i64, i64* %439, align 8
  br label %511

441:                                              ; preds = %398, %386, %351
  %442 = icmp slt i64 %352, %294
  br i1 %442, label %443, label %508

443:                                              ; preds = %441
  %444 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %445 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7 to i8*
  %446 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %447 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0
  %448 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 7
  %449 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %450 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %451 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %71, i64 0, i32 0
  br i1 %450, label %452, label %473

452:                                              ; preds = %443, %460
  %453 = phi i64 [ %461, %460 ], [ %352, %443 ]
  %454 = load i32, i32* %76, align 8
  %455 = add nsw i32 %454, 1
  store i32 %455, i32* %76, align 8
  %456 = sitofp i64 %453 to double
  %457 = fptoui double %456 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %444) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* null, i64* nonnull %120, i64* null, i64 %457, i64* nonnull %120, i32 3) #5
  %458 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #5
  %459 = icmp eq i64* %458, null
  br i1 %459, label %469, label %463

460:                                              ; preds = %463
  %461 = add i64 %453, 1
  %462 = icmp eq i64 %461, %294
  br i1 %462, label %508, label %452

463:                                              ; preds = %452
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %444) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %445) #5
  %464 = load i64, i64* %80, align 8
  store i64 %464, i64* %446, align 8
  %465 = load i64, i64* %458, align 8
  %466 = call zeroext i1 @_ZN2v88internal6Object13SameValueZeroES1_(%"class.v8::internal::Object"* nonnull %447, i64 %465) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %445) #5
  br i1 %466, label %467, label %460

467:                                              ; preds = %463
  %468 = load i64, i64* %448, align 8
  br label %511

469:                                              ; preds = %452
  %470 = load i64, i64* %449, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %444) #5
  br label %511

471:                                              ; preds = %503
  %472 = icmp eq i64 %507, %294
  br i1 %472, label %508, label %473

473:                                              ; preds = %443, %471
  %474 = phi i64 [ %494, %471 ], [ undef, %443 ]
  %475 = phi i64 [ %507, %471 ], [ %352, %443 ]
  %476 = load i64, i64* %72, align 8
  %477 = load i64*, i64** %74, align 8
  %478 = load i32, i32* %76, align 8
  %479 = add nsw i32 %478, 1
  store i32 %479, i32* %76, align 8
  %480 = sitofp i64 %475 to double
  %481 = fptoui double %480 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %444) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* nonnull %2, i64* nonnull %120, i64* null, i64 %481, i64* nonnull %120, i32 3) #5
  %482 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #5
  %483 = icmp eq i64* %482, null
  br i1 %483, label %484, label %486

484:                                              ; preds = %473
  %485 = load i64, i64* %449, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %444) #5
  br label %492

486:                                              ; preds = %473
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %444) #5
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %445) #5
  %487 = load i64, i64* %80, align 8
  store i64 %487, i64* %446, align 8
  %488 = load i64, i64* %482, align 8
  %489 = call zeroext i1 @_ZN2v88internal6Object13SameValueZeroES1_(%"class.v8::internal::Object"* nonnull %447, i64 %488) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %445) #5
  br i1 %489, label %490, label %492

490:                                              ; preds = %486
  %491 = load i64, i64* %448, align 8
  br label %492

492:                                              ; preds = %490, %486, %484
  %493 = phi i32 [ 1, %490 ], [ 1, %484 ], [ 0, %486 ]
  %494 = phi i64 [ %491, %490 ], [ %485, %484 ], [ %474, %486 ]
  %495 = inttoptr i64 %476 to i64*
  %496 = load i64*, i64** %451, align 8
  store i64 %476, i64* %72, align 8
  %497 = load i32, i32* %76, align 8
  %498 = add nsw i32 %497, -1
  store i32 %498, i32* %76, align 8
  %499 = load i64*, i64** %74, align 8
  %500 = icmp eq i64* %499, %477
  br i1 %500, label %503, label %501

501:                                              ; preds = %492
  store i64* %477, i64** %74, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %502 = load i64*, i64** %451, align 8
  br label %503

503:                                              ; preds = %501, %492
  %504 = phi i64* [ %502, %501 ], [ %495, %492 ]
  %505 = phi i64* [ %477, %501 ], [ %496, %492 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %504, i64* %505) #5
  %506 = icmp eq i32 %493, 0
  %507 = add i64 %475, 1
  br i1 %506, label %471, label %511

508:                                              ; preds = %471, %460, %441
  %509 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 8
  %510 = load i64, i64* %509, align 8
  br label %511

511:                                              ; preds = %503, %508, %469, %467, %434, %431, %348, %314, %296, %275, %240, %122
  %512 = phi i64 [ %124, %122 ], [ %298, %296 ], [ %510, %508 ], [ %350, %348 ], [ %316, %314 ], [ %433, %431 ], [ %440, %434 ], [ %242, %240 ], [ %277, %275 ], [ %470, %469 ], [ %468, %467 ], [ %494, %503 ]
  %513 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %513, label %526, label %514

514:                                              ; preds = %511
  %515 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %71, i64 0, i32 0
  %516 = load i64*, i64** %515, align 8
  store i64 %73, i64* %72, align 8
  %517 = load i32, i32* %76, align 8
  %518 = add nsw i32 %517, -1
  store i32 %518, i32* %76, align 8
  %519 = load i64*, i64** %74, align 8
  %520 = icmp eq i64* %519, %75
  br i1 %520, label %523, label %521

521:                                              ; preds = %514
  store i64* %75, i64** %74, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %522 = load i64*, i64** %515, align 8
  br label %523

523:                                              ; preds = %521, %514
  %524 = phi i64* [ %522, %521 ], [ %87, %514 ]
  %525 = phi i64* [ %75, %521 ], [ %516, %514 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %524, i64* %525) #5
  br label %526

526:                                              ; preds = %511, %523
  %527 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  %528 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %527, null
  br i1 %528, label %545, label %529

529:                                              ; preds = %526
  %530 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 0
  %531 = load i8*, i8** %530, align 8
  %532 = load atomic i8, i8* %531 monotonic, align 1
  %533 = icmp eq i8 %532, 0
  br i1 %533, label %545, label %534

534:                                              ; preds = %529
  %535 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %536 = load i8*, i8** %530, align 8
  %537 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  %538 = load i8*, i8** %537, align 8
  %539 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  %540 = load i64, i64* %539, align 8
  %541 = bitcast %"class.v8::TracingController"* %535 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %542 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %541, align 8
  %543 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %542, i64 5
  %544 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %543, align 8
  call void %544(%"class.v8::TracingController"* %535, i8* %536, i8* %538, i64 %540) #5
  br label %545

545:                                              ; preds = %526, %529, %534
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #5
  %546 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %547 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %546, align 8
  %548 = icmp eq %"class.v8::internal::RuntimeCallStats"* %547, null
  br i1 %548, label %551, label %549, !prof !2

549:                                              ; preds = %545
  %550 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %547, %"class.v8::internal::RuntimeCallTimer"* %550) #5
  br label %551

551:                                              ; preds = %545, %549
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #5
  ret i64 %512
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN2v88internal20Runtime_ArrayIndexOfEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) local_unnamed_addr #0 {
  %4 = alloca %"class.v8::internal::LookupIterator", align 8
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %7 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %11, label %9, !prof !2

9:                                                ; preds = %3
  %10 = tail call fastcc i64 @_ZN2v88internalL26Stats_Runtime_ArrayIndexOfEiPmPNS0_7IsolateE(i32 %0, i64* %1, %"class.v8::internal::Isolate"* %2)
  br label %538

11:                                               ; preds = %3
  %12 = ptrtoint i64* %1 to i64
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %14 = bitcast %"struct.v8::internal::HandleScopeData"* %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %17 = load i64*, i64** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %19 = load i32, i32* %18, align 8
  %20 = add nsw i32 %19, 1
  store i32 %20, i32* %18, align 8
  %21 = add i64 %12, -8
  %22 = inttoptr i64 %21 to i64*
  %23 = add i64 %12, -16
  %24 = inttoptr i64 %23 to i64*
  %25 = load i64, i64* %1, align 8
  %26 = and i64 %25, 1
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %39, label %28

28:                                               ; preds = %11
  %29 = and i64 %25, -4294967296
  %30 = add i64 %25, -1
  %31 = inttoptr i64 %30 to i32*
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = zext i32 %32 to i64
  %34 = or i64 %29, %33
  %35 = add i64 %34, 7
  %36 = inttoptr i64 %35 to i16*
  %37 = load atomic i16, i16* %36 monotonic, align 2
  %38 = icmp ugt i16 %37, 185
  br i1 %38, label %41, label %39

39:                                               ; preds = %28, %11
  %40 = tail call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i64 0, i64 0)) #5
  br label %41

41:                                               ; preds = %39, %28
  %42 = phi i64* [ %40, %39 ], [ %1, %28 ]
  %43 = icmp eq i64* %42, null
  br i1 %43, label %44, label %47

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %46 = load i64, i64* %45, align 8
  br label %522

47:                                               ; preds = %41
  %48 = ptrtoint i64* %42 to i64
  %49 = load i64, i64* %42, align 8
  %50 = and i64 %49, -4294967296
  %51 = add i64 %49, -1
  %52 = inttoptr i64 %51 to i32*
  %53 = load atomic i32, i32* %52 monotonic, align 4
  %54 = zext i32 %53 to i64
  %55 = or i64 %50, %54
  %56 = add i64 %55, 7
  %57 = inttoptr i64 %56 to i16*
  %58 = load atomic i16, i16* %57 monotonic, align 2
  %59 = icmp eq i16 %58, 1085
  br i1 %59, label %60, label %95

60:                                               ; preds = %47
  %61 = add i64 %49, 11
  %62 = inttoptr i64 %61 to i32*
  %63 = load i32, i32* %62, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %50, %64
  %66 = and i64 %64, 1
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %68, label %72

68:                                               ; preds = %60
  %69 = icmp slt i32 %63, 0
  %70 = lshr i32 %63, 1
  %71 = select i1 %69, i32 0, i32 %70
  br label %92

72:                                               ; preds = %60
  %73 = add i64 %65, -1
  %74 = inttoptr i64 %73 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %50, %76
  %78 = add i64 %77, 7
  %79 = inttoptr i64 %78 to i16*
  %80 = load atomic i16, i16* %79 monotonic, align 2
  %81 = icmp eq i16 %80, 66
  br i1 %81, label %82, label %92

82:                                               ; preds = %72
  %83 = add i64 %65, 3
  %84 = inttoptr i64 %83 to double*
  %85 = load double, double* %84, align 1
  %86 = fadd double %85, 0x4330000000000000
  %87 = bitcast double %86 to i64
  %88 = and i64 %87, -4294967296
  %89 = icmp eq i64 %88, 4841369599423283200
  %90 = trunc i64 %87 to i32
  %91 = select i1 %89, i32 %90, i32 0
  br label %92

92:                                               ; preds = %82, %72, %68
  %93 = phi i32 [ 0, %72 ], [ %71, %68 ], [ %91, %82 ]
  %94 = zext i32 %93 to i64
  br label %216

95:                                               ; preds = %47
  %96 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %97 = bitcast %"class.v8::internal::LookupIterator"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %97) #5
  %98 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 0
  %99 = load i64, i64* %96, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %101 = load i64, i64* %100, align 8
  %102 = add i64 %99, -1
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = and i64 %101, 4294967295
  %106 = icmp eq i64 %105, 0
  tail call void @llvm.assume(i1 %106) #5
  %107 = zext i32 %104 to i64
  %108 = or i64 %101, %107
  %109 = add i64 %108, 7
  %110 = inttoptr i64 %109 to i16*
  %111 = load atomic i16, i16* %110 monotonic, align 2
  %112 = icmp eq i16 %111, 64
  br i1 %112, label %113, label %119

113:                                              ; preds = %95
  %114 = add i64 %99, 7
  %115 = inttoptr i64 %114 to i32*
  %116 = load i32, i32* %115, align 4
  %117 = and i32 %116, 1
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %120

119:                                              ; preds = %113, %95
  br label %120

120:                                              ; preds = %119, %113
  %121 = phi i32 [ 3, %119 ], [ 0, %113 ]
  store i32 %121, i32* %98, align 8
  %122 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 1
  store i32 4, i32* %122, align 4
  %123 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 2
  store i8 0, i8* %123, align 8
  %124 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 3
  store i32 0, i32* %124, align 4
  %125 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 4, i32 0
  store i32 0, i32* %125, align 8
  %126 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %126, align 8
  %127 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 6, i32 0, i32 0
  store i64* %96, i64** %127, align 8
  %128 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 8, i32 0, i32 0
  store i64* %42, i64** %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %130, align 8
  %131 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 10
  %132 = bitcast %"class.v8::internal::Handle.1160"* %131 to i64*
  store i64 %48, i64* %132, align 8
  %133 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %4, i64 0, i32 11
  %134 = bitcast i64* %133 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 -1, i64 16, i1 false) #5
  %135 = and i64 %99, -4294967296
  %136 = load atomic i32, i32* %103 monotonic, align 4
  %137 = zext i32 %136 to i64
  %138 = or i64 %135, %137
  %139 = add i64 %138, 7
  %140 = inttoptr i64 %139 to i16*
  %141 = load atomic i16, i16* %140 monotonic, align 2
  %142 = and i16 %141, -32
  %143 = icmp eq i16 %142, 32
  br i1 %143, label %144, label %148

144:                                              ; preds = %120
  %145 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %146 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %145, align 8
  %147 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %146, %"class.v8::internal::Isolate"* %2, i64* %96) #5
  br label %148

148:                                              ; preds = %144, %120
  %149 = phi i64* [ %147, %144 ], [ %96, %120 ]
  store i64* %149, i64** %127, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %4) #5
  %150 = load i32, i32* %122, align 4
  %151 = icmp eq i32 %150, 4
  br i1 %151, label %152, label %157

152:                                              ; preds = %148
  %153 = bitcast %"class.v8::internal::Isolate"** %126 to %"class.v8::internal::Factory"**
  %154 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %153, align 8
  %155 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %154, i64 160
  %156 = bitcast %"class.v8::internal::Factory"* %155 to i64*
  br label %159

157:                                              ; preds = %148
  %158 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %4, i1 zeroext false) #5
  br label %159

159:                                              ; preds = %157, %152
  %160 = phi i64* [ %158, %157 ], [ %156, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %97) #5
  %161 = icmp eq i64* %160, null
  br i1 %161, label %162, label %165

162:                                              ; preds = %159
  %163 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %164 = load i64, i64* %163, align 8
  br label %522

165:                                              ; preds = %159
  %166 = load i64, i64* %160, align 8
  %167 = and i64 %166, 1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %193

169:                                              ; preds = %165
  %170 = trunc i64 %166 to i32
  %171 = ashr i32 %170, 1
  %172 = icmp sgt i32 %171, 0
  %173 = select i1 %172, i32 %171, i32 0
  %174 = shl nuw nsw i32 %173, 1
  %175 = zext i32 %174 to i64
  %176 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %177 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %176, align 8
  %178 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %177, null
  br i1 %178, label %181, label %179

179:                                              ; preds = %169
  %180 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %177, i64 %175) #5
  br label %195

181:                                              ; preds = %169
  %182 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %183 = load i64*, i64** %182, align 8
  %184 = load i64*, i64** %16, align 8
  %185 = icmp eq i64* %183, %184
  br i1 %185, label %186, label %188

186:                                              ; preds = %181
  %187 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %188

188:                                              ; preds = %186, %181
  %189 = phi i64* [ %187, %186 ], [ %183, %181 ]
  %190 = ptrtoint i64* %189 to i64
  %191 = add i64 %190, 8
  %192 = inttoptr i64 %191 to i64*
  store i64* %192, i64** %182, align 8
  store i64 %175, i64* %189, align 8
  br label %195

193:                                              ; preds = %165
  %194 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %160) #5
  br label %195

195:                                              ; preds = %193, %188, %179
  %196 = phi i64* [ %194, %193 ], [ %180, %179 ], [ %189, %188 ]
  %197 = icmp eq i64* %196, null
  br i1 %197, label %198, label %201

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %200 = load i64, i64* %199, align 8
  br label %522

201:                                              ; preds = %195
  %202 = load i64, i64* %196, align 8
  %203 = and i64 %202, 1
  %204 = icmp eq i64 %203, 0
  br i1 %204, label %205, label %209

205:                                              ; preds = %201
  %206 = trunc i64 %202 to i32
  %207 = ashr i32 %206, 1
  %208 = sitofp i32 %207 to double
  br label %213

209:                                              ; preds = %201
  %210 = add i64 %202, 3
  %211 = inttoptr i64 %210 to double*
  %212 = load double, double* %211, align 1
  br label %213

213:                                              ; preds = %209, %205
  %214 = phi double [ %208, %205 ], [ %212, %209 ]
  %215 = fptosi double %214 to i64
  br label %216

216:                                              ; preds = %213, %92
  %217 = phi i64 [ %94, %92 ], [ %215, %213 ]
  %218 = icmp eq i64 %217, 0
  br i1 %218, label %522, label %219

219:                                              ; preds = %216
  %220 = load i64, i64* %24, align 8
  %221 = and i64 %220, 1
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %225, label %223

223:                                              ; preds = %219
  %224 = call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %24) #5
  br label %225

225:                                              ; preds = %223, %219
  %226 = phi i64* [ %224, %223 ], [ %24, %219 ]
  %227 = icmp eq i64* %226, null
  br i1 %227, label %228, label %231

228:                                              ; preds = %225
  %229 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %230 = load i64, i64* %229, align 8
  br label %522

231:                                              ; preds = %225
  %232 = load i64, i64* %226, align 8
  %233 = and i64 %232, 1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %239

235:                                              ; preds = %231
  %236 = trunc i64 %232 to i32
  %237 = ashr i32 %236, 1
  %238 = sitofp i32 %237 to double
  br label %243

239:                                              ; preds = %231
  %240 = add i64 %232, 3
  %241 = inttoptr i64 %240 to double*
  %242 = load double, double* %241, align 1
  br label %243

243:                                              ; preds = %239, %235
  %244 = phi double [ %238, %235 ], [ %242, %239 ]
  %245 = sitofp i64 %217 to double
  %246 = fcmp ogt double %244, %245
  br i1 %246, label %522, label %247

247:                                              ; preds = %243
  %248 = fcmp ult double %244, 0xC3E0000000000000
  br i1 %248, label %252, label %249, !prof !4

249:                                              ; preds = %247
  %250 = fptosi double %244 to i64
  %251 = icmp sgt i64 %250, -1
  br i1 %251, label %257, label %252

252:                                              ; preds = %249, %247
  %253 = phi i64 [ %250, %249 ], [ -9223372036854775808, %247 ]
  %254 = add nsw i64 %253, %217
  %255 = icmp sgt i64 %254, 0
  %256 = select i1 %255, i64 %254, i64 0
  br label %257

257:                                              ; preds = %252, %249
  %258 = phi i64 [ %256, %252 ], [ %250, %249 ]
  %259 = load i64, i64* %42, align 8
  %260 = and i64 %259, -4294967296
  %261 = add i64 %259, -1
  %262 = inttoptr i64 %261 to i32*
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = zext i32 %263 to i64
  %265 = or i64 %260, %264
  %266 = add i64 %265, 7
  %267 = inttoptr i64 %266 to i16*
  %268 = load atomic i16, i16* %267 monotonic, align 2
  %269 = icmp ugt i16 %268, 1040
  %270 = icmp slt i64 %217, 4294967296
  %271 = and i1 %270, %269
  br i1 %271, label %272, label %380

272:                                              ; preds = %257
  %273 = load atomic i32, i32* %262 monotonic, align 4
  %274 = zext i32 %273 to i64
  %275 = or i64 %260, %274
  %276 = add i64 %275, 15
  %277 = inttoptr i64 %276 to i32*
  %278 = load i32, i32* %277, align 4
  %279 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %280 = load i64, i64* %279, align 8
  %281 = trunc i64 %280 to i32
  %282 = icmp eq i32 %278, %281
  br i1 %282, label %318, label %283

283:                                              ; preds = %272
  %284 = zext i32 %278 to i64
  %285 = or i64 %260, %284
  %286 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 111
  %287 = load i64, i64* %286, align 8
  %288 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  %289 = load i64, i64* %288, align 8
  %290 = trunc i64 %289 to i32
  %291 = trunc i64 %287 to i32
  br label %292

292:                                              ; preds = %311, %283
  %293 = phi i64 [ %285, %283 ], [ %316, %311 ]
  %294 = and i64 %293, -4294967296
  %295 = add i64 %293, -1
  %296 = inttoptr i64 %295 to i32*
  %297 = load atomic i32, i32* %296 monotonic, align 4
  %298 = zext i32 %297 to i64
  %299 = or i64 %294, %298
  %300 = add i64 %299, 7
  %301 = inttoptr i64 %300 to i16*
  %302 = load atomic i16, i16* %301 monotonic, align 2
  %303 = icmp ult i16 %302, 1042
  br i1 %303, label %380, label %304

304:                                              ; preds = %292
  %305 = add i64 %293, 7
  %306 = inttoptr i64 %305 to i32*
  %307 = load i32, i32* %306, align 4
  %308 = icmp ne i32 %307, %290
  %309 = icmp ne i32 %307, %291
  %310 = and i1 %308, %309
  br i1 %310, label %380, label %311

311:                                              ; preds = %304
  %312 = add i64 %299, 15
  %313 = inttoptr i64 %312 to i32*
  %314 = load i32, i32* %313, align 4
  %315 = zext i32 %314 to i64
  %316 = or i64 %294, %315
  %317 = icmp eq i32 %314, %281
  br i1 %317, label %318, label %292

318:                                              ; preds = %311, %272
  %319 = load atomic i32, i32* %262 monotonic, align 4
  %320 = zext i32 %319 to i64
  %321 = or i64 %260, %320
  %322 = add i64 %321, 10
  %323 = inttoptr i64 %322 to i8*
  %324 = load i8, i8* %323, align 1
  %325 = lshr i8 %324, 2
  %326 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %327 = zext i8 %325 to i64
  %328 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %326, i64 %327
  %329 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %328, align 8
  %330 = and i64 %258, 4294967295
  %331 = and i64 %217, 4294967295
  %332 = bitcast %"class.v8::internal::ElementsAccessor"* %329 to { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)***
  %333 = load { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)**, { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*** %332, align 8
  %334 = getelementptr inbounds { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %333, i64 26
  %335 = load { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %334, align 8
  %336 = call { i8, i64 } %335(%"class.v8::internal::ElementsAccessor"* %329, %"class.v8::internal::Isolate"* %2, i64* nonnull %42, i64* %22, i64 %330, i64 %331) #5
  %337 = extractvalue { i8, i64 } %336, 0
  %338 = extractvalue { i8, i64 } %336, 1
  %339 = icmp eq i8 %337, 0
  br i1 %339, label %340, label %343

340:                                              ; preds = %318
  %341 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %342 = load i64, i64* %341, align 8
  br label %522

343:                                              ; preds = %318
  %344 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %345 = add i64 %338, 2147483648
  %346 = icmp ugt i64 %345, 4294967295
  br i1 %346, label %371, label %347

347:                                              ; preds = %343
  %348 = shl i64 %338, 32
  %349 = ashr exact i64 %348, 32
  %350 = add nsw i64 %349, 1073741824
  %351 = icmp ult i64 %350, 2147483648
  br i1 %351, label %352, label %371

352:                                              ; preds = %347
  %353 = ashr exact i64 %348, 31
  %354 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %355 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %354, align 8
  %356 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %355, null
  br i1 %356, label %359, label %357

357:                                              ; preds = %352
  %358 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %355, i64 %353) #5
  br label %377

359:                                              ; preds = %352
  %360 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %361 = load i64*, i64** %360, align 8
  %362 = load i64*, i64** %16, align 8
  %363 = icmp eq i64* %361, %362
  br i1 %363, label %364, label %366

364:                                              ; preds = %359
  %365 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %366

366:                                              ; preds = %364, %359
  %367 = phi i64* [ %365, %364 ], [ %361, %359 ]
  %368 = ptrtoint i64* %367 to i64
  %369 = add i64 %368, 8
  %370 = inttoptr i64 %369 to i64*
  store i64* %370, i64** %360, align 8
  store i64 %353, i64* %367, align 8
  br label %377

371:                                              ; preds = %347, %343
  %372 = sitofp i64 %338 to double
  %373 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %344) #5
  %374 = load i64, i64* %373, align 8
  %375 = add i64 %374, 3
  %376 = inttoptr i64 %375 to double*
  store double %372, double* %376, align 1
  br label %377

377:                                              ; preds = %371, %366, %357
  %378 = phi i64* [ %373, %371 ], [ %358, %357 ], [ %367, %366 ]
  %379 = load i64, i64* %378, align 8
  br label %522

380:                                              ; preds = %304, %292, %257
  %381 = icmp slt i64 %258, %217
  br i1 %381, label %382, label %522

382:                                              ; preds = %380
  %383 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  %384 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6 to i8*
  %385 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0, i32 0, i32 0
  %386 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %6, i64 0, i32 0
  %387 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %388 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %389 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %390 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %391 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %392 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %13, i64 0, i32 0
  br i1 %391, label %393, label %447

393:                                              ; preds = %382, %444
  %394 = phi i64 [ %445, %444 ], [ %258, %382 ]
  %395 = load i32, i32* %18, align 8
  %396 = add nsw i32 %395, 1
  store i32 %396, i32* %18, align 8
  %397 = sitofp i64 %394 to double
  %398 = fptoui double %397 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %383) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* null, i64* nonnull %42, i64* null, i64 %398, i64* nonnull %42, i32 3) #5
  %399 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5) #5
  %400 = trunc i16 %399 to i8
  %401 = icmp eq i8 %400, 0
  br i1 %401, label %441, label %402

402:                                              ; preds = %393
  %403 = icmp ugt i16 %399, 255
  br i1 %403, label %404, label %444

404:                                              ; preds = %402
  %405 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #5
  %406 = icmp eq i64* %405, null
  br i1 %406, label %441, label %407

407:                                              ; preds = %404
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #5
  %408 = load i64, i64* %22, align 8
  store i64 %408, i64* %385, align 8
  %409 = load i64, i64* %405, align 8
  %410 = call zeroext i1 @_ZN2v88internal6Object12StrictEqualsES1_(%"class.v8::internal::Object"* nonnull %386, i64 %409) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #5
  br i1 %410, label %411, label %444

411:                                              ; preds = %407
  %412 = add i64 %394, 2147483648
  %413 = icmp ugt i64 %412, 4294967295
  br i1 %413, label %436, label %414

414:                                              ; preds = %411
  %415 = shl i64 %394, 32
  %416 = ashr exact i64 %415, 32
  %417 = add nsw i64 %416, 1073741824
  %418 = icmp ult i64 %417, 2147483648
  br i1 %418, label %419, label %436

419:                                              ; preds = %414
  %420 = ashr exact i64 %415, 31
  %421 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %388, align 8
  %422 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %421, null
  br i1 %422, label %425, label %423

423:                                              ; preds = %419
  %424 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %421, i64 %420) #5
  br label %441

425:                                              ; preds = %419
  %426 = load i64*, i64** %389, align 8
  %427 = load i64*, i64** %16, align 8
  %428 = icmp eq i64* %426, %427
  br i1 %428, label %429, label %431

429:                                              ; preds = %425
  %430 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* null) #5
  br label %431

431:                                              ; preds = %429, %425
  %432 = phi i64* [ %430, %429 ], [ %426, %425 ]
  %433 = ptrtoint i64* %432 to i64
  %434 = add i64 %433, 8
  %435 = inttoptr i64 %434 to i64*
  store i64* %435, i64** %389, align 8
  store i64 %420, i64* %432, align 8
  br label %441

436:                                              ; preds = %414, %411
  %437 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %387) #5
  %438 = load i64, i64* %437, align 8
  %439 = add i64 %438, 3
  %440 = inttoptr i64 %439 to double*
  store double %397, double* %440, align 1
  br label %441

441:                                              ; preds = %393, %404, %423, %431, %436
  %442 = phi i64* [ %437, %436 ], [ %424, %423 ], [ %432, %431 ], [ %390, %404 ], [ %390, %393 ]
  %443 = load i64, i64* %442, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %383) #5
  br label %522

444:                                              ; preds = %407, %402
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %383) #5
  %445 = add i64 %394, 1
  %446 = icmp eq i64 %445, %217
  br i1 %446, label %522, label %393

447:                                              ; preds = %382, %519
  %448 = phi i64 [ %507, %519 ], [ undef, %382 ]
  %449 = phi i64 [ %520, %519 ], [ %258, %382 ]
  %450 = load i64, i64* %14, align 8
  %451 = load i64*, i64** %16, align 8
  %452 = load i32, i32* %18, align 8
  %453 = add nsw i32 %452, 1
  store i32 %453, i32* %18, align 8
  %454 = sitofp i64 %449 to double
  %455 = fptoui double %454 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %383) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %5, %"class.v8::internal::Isolate"* nonnull %2, i64* nonnull %42, i64* null, i64 %455, i64* nonnull %42, i32 3) #5
  %456 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %5) #5
  %457 = trunc i16 %456 to i8
  %458 = icmp eq i8 %457, 0
  br i1 %458, label %459, label %461

459:                                              ; preds = %447
  %460 = load i64, i64* %390, align 8
  br label %505

461:                                              ; preds = %447
  %462 = icmp ugt i16 %456, 255
  br i1 %462, label %463, label %505

463:                                              ; preds = %461
  %464 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #5
  %465 = icmp eq i64* %464, null
  br i1 %465, label %466, label %468

466:                                              ; preds = %463
  %467 = load i64, i64* %390, align 8
  br label %505

468:                                              ; preds = %463
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #5
  %469 = load i64, i64* %22, align 8
  store i64 %469, i64* %385, align 8
  %470 = load i64, i64* %464, align 8
  %471 = call zeroext i1 @_ZN2v88internal6Object12StrictEqualsES1_(%"class.v8::internal::Object"* nonnull %386, i64 %470) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #5
  br i1 %471, label %472, label %505

472:                                              ; preds = %468
  %473 = add i64 %449, 2147483648
  %474 = icmp ugt i64 %473, 4294967295
  br i1 %474, label %497, label %475

475:                                              ; preds = %472
  %476 = shl i64 %449, 32
  %477 = ashr exact i64 %476, 32
  %478 = add nsw i64 %477, 1073741824
  %479 = icmp ult i64 %478, 2147483648
  br i1 %479, label %480, label %497

480:                                              ; preds = %475
  %481 = ashr exact i64 %476, 31
  %482 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %388, align 8
  %483 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %482, null
  br i1 %483, label %486, label %484

484:                                              ; preds = %480
  %485 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %482, i64 %481) #5
  br label %502

486:                                              ; preds = %480
  %487 = load i64*, i64** %389, align 8
  %488 = load i64*, i64** %16, align 8
  %489 = icmp eq i64* %487, %488
  br i1 %489, label %490, label %492

490:                                              ; preds = %486
  %491 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  br label %492

492:                                              ; preds = %490, %486
  %493 = phi i64* [ %491, %490 ], [ %487, %486 ]
  %494 = ptrtoint i64* %493 to i64
  %495 = add i64 %494, 8
  %496 = inttoptr i64 %495 to i64*
  store i64* %496, i64** %389, align 8
  store i64 %481, i64* %493, align 8
  br label %502

497:                                              ; preds = %475, %472
  %498 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* nonnull %387) #5
  %499 = load i64, i64* %498, align 8
  %500 = add i64 %499, 3
  %501 = inttoptr i64 %500 to double*
  store double %454, double* %501, align 1
  br label %502

502:                                              ; preds = %497, %492, %484
  %503 = phi i64* [ %498, %497 ], [ %485, %484 ], [ %493, %492 ]
  %504 = load i64, i64* %503, align 8
  br label %505

505:                                              ; preds = %502, %468, %466, %461, %459
  %506 = phi i32 [ 1, %459 ], [ 1, %502 ], [ 1, %466 ], [ 28, %461 ], [ 0, %468 ]
  %507 = phi i64 [ %460, %459 ], [ %504, %502 ], [ %467, %466 ], [ %448, %461 ], [ %448, %468 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %383) #5
  %508 = inttoptr i64 %450 to i64*
  %509 = load i64*, i64** %392, align 8
  store i64 %450, i64* %14, align 8
  %510 = load i32, i32* %18, align 8
  %511 = add nsw i32 %510, -1
  store i32 %511, i32* %18, align 8
  %512 = load i64*, i64** %16, align 8
  %513 = icmp eq i64* %512, %451
  br i1 %513, label %516, label %514

514:                                              ; preds = %505
  store i64* %451, i64** %16, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %515 = load i64*, i64** %392, align 8
  br label %516

516:                                              ; preds = %514, %505
  %517 = phi i64* [ %515, %514 ], [ %508, %505 ]
  %518 = phi i64* [ %451, %514 ], [ %509, %505 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %517, i64* %518) #5
  switch i32 %506, label %522 [
    i32 0, label %519
    i32 28, label %519
  ]

519:                                              ; preds = %516, %516
  %520 = add i64 %449, 1
  %521 = icmp eq i64 %520, %217
  br i1 %521, label %522, label %447

522:                                              ; preds = %519, %516, %444, %441, %380, %377, %340, %243, %228, %216, %198, %162, %44
  %523 = phi i64 [ %46, %44 ], [ %230, %228 ], [ -2, %216 ], [ -2, %243 ], [ %342, %340 ], [ %379, %377 ], [ %164, %162 ], [ %200, %198 ], [ -2, %380 ], [ %443, %441 ], [ -2, %444 ], [ -2, %519 ], [ %507, %516 ]
  %524 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %524, label %538, label %525

525:                                              ; preds = %522
  %526 = inttoptr i64 %15 to i64*
  %527 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %13, i64 0, i32 0
  %528 = load i64*, i64** %527, align 8
  store i64 %15, i64* %14, align 8
  %529 = load i32, i32* %18, align 8
  %530 = add nsw i32 %529, -1
  store i32 %530, i32* %18, align 8
  %531 = load i64*, i64** %16, align 8
  %532 = icmp eq i64* %531, %17
  br i1 %532, label %535, label %533

533:                                              ; preds = %525
  store i64* %17, i64** %16, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %534 = load i64*, i64** %527, align 8
  br label %535

535:                                              ; preds = %533, %525
  %536 = phi i64* [ %534, %533 ], [ %526, %525 ]
  %537 = phi i64* [ %17, %533 ], [ %528, %525 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %536, i64* %537) #5
  br label %538

538:                                              ; preds = %535, %522, %9
  %539 = phi i64 [ %10, %9 ], [ %523, %522 ], [ %523, %535 ]
  ret i64 %539
}

; Function Attrs: noinline nounwind ssp uwtable
define internal fastcc i64 @_ZN2v88internalL26Stats_Runtime_ArrayIndexOfEiPmPNS0_7IsolateE(i32, i64*, %"class.v8::internal::Isolate"*) unnamed_addr #1 {
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1143"], align 16
  %5 = alloca %"class.v8::internal::LookupIterator", align 8
  %6 = alloca %"class.v8::internal::LookupIterator", align 8
  %7 = alloca %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", align 8
  %8 = alloca %"class.v8::internal::RuntimeCallTimerScope", align 8
  %9 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %10 = bitcast %"class.v8::internal::RuntimeCallTimerScope"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %10) #5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 0, i64 40, i1 false) #5
  %11 = load atomic i32, i32* getelementptr inbounds (%"struct.std::__1::atomic.1133", %"struct.std::__1::atomic.1133"* @_ZN2v88internal12TracingFlags13runtime_statsE, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %19, label %13, !prof !2

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 14, i32 0
  %17 = load %"class.v8::internal::Counters"*, %"class.v8::internal::Counters"** %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Counters", %"class.v8::internal::Counters"* %17, i64 0, i32 757
  store %"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallStats"** %14, align 8
  call void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"* %18, %"class.v8::internal::RuntimeCallTimer"* %15, i32 222) #5
  br label %19

19:                                               ; preds = %3, %13
  %20 = load atomic i64, i64* @_ZZN2v88internalL26Stats_Runtime_ArrayIndexOfEiPmPNS0_7IsolateEE28trace_event_unique_atomic330 monotonic, align 8
  %21 = inttoptr i64 %20 to i8*
  %22 = icmp eq i64 %20, 0
  br i1 %22, label %23, label %31

23:                                               ; preds = %19
  %24 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %25 = bitcast %"class.v8::TracingController"* %24 to i8* (%"class.v8::TracingController"*, i8*)***
  %26 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %25, align 8
  %27 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %26, i64 2
  %28 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %27, align 8
  %29 = call i8* %28(%"class.v8::TracingController"* %24, i8* getelementptr inbounds ([31 x i8], [31 x i8]* @.str, i64 0, i64 0)) #5
  %30 = ptrtoint i8* %29 to i64
  store atomic volatile i64 %30, i64* @_ZZN2v88internalL26Stats_Runtime_ArrayIndexOfEiPmPNS0_7IsolateEE28trace_event_unique_atomic330 monotonic, align 8
  br label %31

31:                                               ; preds = %19, %23
  %32 = phi i8* [ %21, %19 ], [ %29, %23 ]
  %33 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %33) #5
  %34 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  %35 = load atomic i8, i8* %32 monotonic, align 1
  %36 = and i8 %35, 5
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %69, label %38

38:                                               ; preds = %31
  %39 = bitcast [2 x %"class.std::__1::unique_ptr.1143"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %39) #5
  %40 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %39, i8 0, i64 16, i1 false) #5
  %41 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %42 = bitcast %"class.v8::TracingController"* %41 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)***
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*** %42, align 8
  %44 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %43, i64 3
  %45 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1143"*, i32)** %44, align 8
  %46 = call i64 %45(%"class.v8::TracingController"* %41, i8 signext 88, i8* %32, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1143"* nonnull %40, i32 0) #5
  %47 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %48 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %47, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %47, align 8
  %49 = icmp eq %"class.v8::ConvertableToTraceFormat"* %48, null
  br i1 %49, label %55, label %50

50:                                               ; preds = %38
  %51 = bitcast %"class.v8::ConvertableToTraceFormat"* %48 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %51, align 8
  %53 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %52, i64 1
  %54 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %53, align 8
  call void %54(%"class.v8::ConvertableToTraceFormat"* nonnull %48) #5
  br label %55

55:                                               ; preds = %50, %38
  %56 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1143"], [2 x %"class.std::__1::unique_ptr.1143"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %56, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %56, align 16
  %58 = icmp eq %"class.v8::ConvertableToTraceFormat"* %57, null
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = bitcast %"class.v8::ConvertableToTraceFormat"* %57 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %60, align 8
  %62 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %61, i64 1
  %63 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %62, align 8
  call void %63(%"class.v8::ConvertableToTraceFormat"* nonnull %57) #5
  br label %64

64:                                               ; preds = %55, %59
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %39) #5
  %65 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1
  %66 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %65, i64 0, i32 0
  store i8* %32, i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.24, i64 0, i64 0), i8** %67, align 8
  %68 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  store i64 %46, i64* %68, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %65, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  br label %69

69:                                               ; preds = %31, %64
  %70 = ptrtoint i64* %1 to i64
  %71 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31
  %72 = bitcast %"struct.v8::internal::HandleScopeData"* %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 1
  %75 = load i64*, i64** %74, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 2
  %77 = load i32, i32* %76, align 8
  %78 = add nsw i32 %77, 1
  store i32 %78, i32* %76, align 8
  %79 = add i64 %70, -8
  %80 = inttoptr i64 %79 to i64*
  %81 = add i64 %70, -16
  %82 = inttoptr i64 %81 to i64*
  %83 = load i64, i64* %1, align 8
  %84 = and i64 %83, 1
  %85 = icmp eq i64 %84, 0
  br i1 %85, label %97, label %86

86:                                               ; preds = %69
  %87 = and i64 %83, -4294967296
  %88 = add i64 %83, -1
  %89 = inttoptr i64 %88 to i32*
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = zext i32 %90 to i64
  %92 = or i64 %87, %91
  %93 = add i64 %92, 7
  %94 = inttoptr i64 %93 to i16*
  %95 = load atomic i16, i16* %94 monotonic, align 2
  %96 = icmp ugt i16 %95, 185
  br i1 %96, label %99, label %97

97:                                               ; preds = %86, %69
  %98 = call i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"* %2, i64* %1, i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.25, i64 0, i64 0)) #5
  br label %99

99:                                               ; preds = %97, %86
  %100 = phi i64* [ %98, %97 ], [ %1, %86 ]
  %101 = icmp eq i64* %100, null
  br i1 %101, label %102, label %105

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %104 = load i64, i64* %103, align 8
  br label %580

105:                                              ; preds = %99
  %106 = ptrtoint i64* %100 to i64
  %107 = load i64, i64* %100, align 8
  %108 = and i64 %107, -4294967296
  %109 = add i64 %107, -1
  %110 = inttoptr i64 %109 to i32*
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = zext i32 %111 to i64
  %113 = or i64 %108, %112
  %114 = add i64 %113, 7
  %115 = inttoptr i64 %114 to i16*
  %116 = load atomic i16, i16* %115 monotonic, align 2
  %117 = icmp eq i16 %116, 1085
  br i1 %117, label %118, label %153

118:                                              ; preds = %105
  %119 = add i64 %107, 11
  %120 = inttoptr i64 %119 to i32*
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = or i64 %108, %122
  %124 = and i64 %122, 1
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %126, label %130

126:                                              ; preds = %118
  %127 = icmp slt i32 %121, 0
  %128 = lshr i32 %121, 1
  %129 = select i1 %127, i32 0, i32 %128
  br label %150

130:                                              ; preds = %118
  %131 = add i64 %123, -1
  %132 = inttoptr i64 %131 to i32*
  %133 = load atomic i32, i32* %132 monotonic, align 4
  %134 = zext i32 %133 to i64
  %135 = or i64 %108, %134
  %136 = add i64 %135, 7
  %137 = inttoptr i64 %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = icmp eq i16 %138, 66
  br i1 %139, label %140, label %150

140:                                              ; preds = %130
  %141 = add i64 %123, 3
  %142 = inttoptr i64 %141 to double*
  %143 = load double, double* %142, align 1
  %144 = fadd double %143, 0x4330000000000000
  %145 = bitcast double %144 to i64
  %146 = and i64 %145, -4294967296
  %147 = icmp eq i64 %146, 4841369599423283200
  %148 = trunc i64 %145 to i32
  %149 = select i1 %147, i32 %148, i32 0
  br label %150

150:                                              ; preds = %140, %130, %126
  %151 = phi i32 [ 0, %130 ], [ %129, %126 ], [ %149, %140 ]
  %152 = zext i32 %151 to i64
  br label %274

153:                                              ; preds = %105
  %154 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 363
  %155 = bitcast %"class.v8::internal::LookupIterator"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %155) #5
  %156 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 0
  %157 = load i64, i64* %154, align 8
  %158 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 4
  %159 = load i64, i64* %158, align 8
  %160 = add i64 %157, -1
  %161 = inttoptr i64 %160 to i32*
  %162 = load atomic i32, i32* %161 monotonic, align 4
  %163 = and i64 %159, 4294967295
  %164 = icmp eq i64 %163, 0
  call void @llvm.assume(i1 %164) #5
  %165 = zext i32 %162 to i64
  %166 = or i64 %159, %165
  %167 = add i64 %166, 7
  %168 = inttoptr i64 %167 to i16*
  %169 = load atomic i16, i16* %168 monotonic, align 2
  %170 = icmp eq i16 %169, 64
  br i1 %170, label %171, label %177

171:                                              ; preds = %153
  %172 = add i64 %157, 7
  %173 = inttoptr i64 %172 to i32*
  %174 = load i32, i32* %173, align 4
  %175 = and i32 %174, 1
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %178

177:                                              ; preds = %171, %153
  br label %178

178:                                              ; preds = %177, %171
  %179 = phi i32 [ 3, %177 ], [ 0, %171 ]
  store i32 %179, i32* %156, align 8
  %180 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 1
  store i32 4, i32* %180, align 4
  %181 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 2
  store i8 0, i8* %181, align 8
  %182 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 3
  store i32 0, i32* %182, align 4
  %183 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 4, i32 0
  store i32 0, i32* %183, align 8
  %184 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %2, %"class.v8::internal::Isolate"** %184, align 8
  %185 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 6, i32 0, i32 0
  store i64* %154, i64** %185, align 8
  %186 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %186, align 8
  %187 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 8, i32 0, i32 0
  store i64* %100, i64** %187, align 8
  %188 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %188, align 8
  %189 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 10
  %190 = bitcast %"class.v8::internal::Handle.1160"* %189 to i64*
  store i64 %106, i64* %190, align 8
  %191 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %5, i64 0, i32 11
  %192 = bitcast i64* %191 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %192, i8 -1, i64 16, i1 false) #5
  %193 = and i64 %157, -4294967296
  %194 = load atomic i32, i32* %161 monotonic, align 4
  %195 = zext i32 %194 to i64
  %196 = or i64 %193, %195
  %197 = add i64 %196, 7
  %198 = inttoptr i64 %197 to i16*
  %199 = load atomic i16, i16* %198 monotonic, align 2
  %200 = and i16 %199, -32
  %201 = icmp eq i16 %200, 32
  br i1 %201, label %202, label %206

202:                                              ; preds = %178
  %203 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 5, i32 0, i32 0, i32 0
  %204 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %203, align 8
  %205 = call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %204, %"class.v8::internal::Isolate"* %2, i64* %154) #5
  br label %206

206:                                              ; preds = %202, %178
  %207 = phi i64* [ %205, %202 ], [ %154, %178 ]
  store i64* %207, i64** %185, align 8
  call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* nonnull %5) #5
  %208 = load i32, i32* %180, align 4
  %209 = icmp eq i32 %208, 4
  br i1 %209, label %210, label %215

210:                                              ; preds = %206
  %211 = bitcast %"class.v8::internal::Isolate"** %184 to %"class.v8::internal::Factory"**
  %212 = load %"class.v8::internal::Factory"*, %"class.v8::internal::Factory"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Factory", %"class.v8::internal::Factory"* %212, i64 160
  %214 = bitcast %"class.v8::internal::Factory"* %213 to i64*
  br label %217

215:                                              ; preds = %206
  %216 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %5, i1 zeroext false) #5
  br label %217

217:                                              ; preds = %215, %210
  %218 = phi i64* [ %216, %215 ], [ %214, %210 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %155) #5
  %219 = icmp eq i64* %218, null
  br i1 %219, label %220, label %223

220:                                              ; preds = %217
  %221 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %222 = load i64, i64* %221, align 8
  br label %580

223:                                              ; preds = %217
  %224 = load i64, i64* %218, align 8
  %225 = and i64 %224, 1
  %226 = icmp eq i64 %225, 0
  br i1 %226, label %227, label %251

227:                                              ; preds = %223
  %228 = trunc i64 %224 to i32
  %229 = ashr i32 %228, 1
  %230 = icmp sgt i32 %229, 0
  %231 = select i1 %230, i32 %229, i32 0
  %232 = shl nuw nsw i32 %231, 1
  %233 = zext i32 %232 to i64
  %234 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %235 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %234, align 8
  %236 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %235, null
  br i1 %236, label %239, label %237

237:                                              ; preds = %227
  %238 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %235, i64 %233) #5
  br label %253

239:                                              ; preds = %227
  %240 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %241 = load i64*, i64** %240, align 8
  %242 = load i64*, i64** %74, align 8
  %243 = icmp eq i64* %241, %242
  br i1 %243, label %244, label %246

244:                                              ; preds = %239
  %245 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %246

246:                                              ; preds = %244, %239
  %247 = phi i64* [ %245, %244 ], [ %241, %239 ]
  %248 = ptrtoint i64* %247 to i64
  %249 = add i64 %248, 8
  %250 = inttoptr i64 %249 to i64*
  store i64* %250, i64** %240, align 8
  store i64 %233, i64* %247, align 8
  br label %253

251:                                              ; preds = %223
  %252 = call i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* nonnull %218) #5
  br label %253

253:                                              ; preds = %251, %246, %237
  %254 = phi i64* [ %252, %251 ], [ %238, %237 ], [ %247, %246 ]
  %255 = icmp eq i64* %254, null
  br i1 %255, label %256, label %259

256:                                              ; preds = %253
  %257 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %258 = load i64, i64* %257, align 8
  br label %580

259:                                              ; preds = %253
  %260 = load i64, i64* %254, align 8
  %261 = and i64 %260, 1
  %262 = icmp eq i64 %261, 0
  br i1 %262, label %263, label %267

263:                                              ; preds = %259
  %264 = trunc i64 %260 to i32
  %265 = ashr i32 %264, 1
  %266 = sitofp i32 %265 to double
  br label %271

267:                                              ; preds = %259
  %268 = add i64 %260, 3
  %269 = inttoptr i64 %268 to double*
  %270 = load double, double* %269, align 1
  br label %271

271:                                              ; preds = %267, %263
  %272 = phi double [ %266, %263 ], [ %270, %267 ]
  %273 = fptosi double %272 to i64
  br label %274

274:                                              ; preds = %271, %150
  %275 = phi i64 [ %152, %150 ], [ %273, %271 ]
  %276 = icmp eq i64 %275, 0
  br i1 %276, label %580, label %277

277:                                              ; preds = %274
  %278 = load i64, i64* %82, align 8
  %279 = and i64 %278, 1
  %280 = icmp eq i64 %279, 0
  br i1 %280, label %283, label %281

281:                                              ; preds = %277
  %282 = call i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"* %2, i64* %82) #5
  br label %283

283:                                              ; preds = %281, %277
  %284 = phi i64* [ %282, %281 ], [ %82, %277 ]
  %285 = icmp eq i64* %284, null
  br i1 %285, label %286, label %289

286:                                              ; preds = %283
  %287 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %288 = load i64, i64* %287, align 8
  br label %580

289:                                              ; preds = %283
  %290 = load i64, i64* %284, align 8
  %291 = and i64 %290, 1
  %292 = icmp eq i64 %291, 0
  br i1 %292, label %293, label %297

293:                                              ; preds = %289
  %294 = trunc i64 %290 to i32
  %295 = ashr i32 %294, 1
  %296 = sitofp i32 %295 to double
  br label %301

297:                                              ; preds = %289
  %298 = add i64 %290, 3
  %299 = inttoptr i64 %298 to double*
  %300 = load double, double* %299, align 1
  br label %301

301:                                              ; preds = %297, %293
  %302 = phi double [ %296, %293 ], [ %300, %297 ]
  %303 = sitofp i64 %275 to double
  %304 = fcmp ogt double %302, %303
  br i1 %304, label %580, label %305

305:                                              ; preds = %301
  %306 = fcmp ult double %302, 0xC3E0000000000000
  br i1 %306, label %310, label %307, !prof !4

307:                                              ; preds = %305
  %308 = fptosi double %302 to i64
  %309 = icmp sgt i64 %308, -1
  br i1 %309, label %315, label %310

310:                                              ; preds = %307, %305
  %311 = phi i64 [ %308, %307 ], [ -9223372036854775808, %305 ]
  %312 = add nsw i64 %311, %275
  %313 = icmp sgt i64 %312, 0
  %314 = select i1 %313, i64 %312, i64 0
  br label %315

315:                                              ; preds = %310, %307
  %316 = phi i64 [ %314, %310 ], [ %308, %307 ]
  %317 = load i64, i64* %100, align 8
  %318 = and i64 %317, -4294967296
  %319 = add i64 %317, -1
  %320 = inttoptr i64 %319 to i32*
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = zext i32 %321 to i64
  %323 = or i64 %318, %322
  %324 = add i64 %323, 7
  %325 = inttoptr i64 %324 to i16*
  %326 = load atomic i16, i16* %325 monotonic, align 2
  %327 = icmp ugt i16 %326, 1040
  %328 = icmp slt i64 %275, 4294967296
  %329 = and i1 %328, %327
  br i1 %329, label %330, label %438

330:                                              ; preds = %315
  %331 = load atomic i32, i32* %320 monotonic, align 4
  %332 = zext i32 %331 to i64
  %333 = or i64 %318, %332
  %334 = add i64 %333, 15
  %335 = inttoptr i64 %334 to i32*
  %336 = load i32, i32* %335, align 4
  %337 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 6
  %338 = load i64, i64* %337, align 8
  %339 = trunc i64 %338 to i32
  %340 = icmp eq i32 %336, %339
  br i1 %340, label %376, label %341

341:                                              ; preds = %330
  %342 = zext i32 %336 to i64
  %343 = or i64 %318, %342
  %344 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 111
  %345 = load i64, i64* %344, align 8
  %346 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 29
  %347 = load i64, i64* %346, align 8
  %348 = trunc i64 %347 to i32
  %349 = trunc i64 %345 to i32
  br label %350

350:                                              ; preds = %369, %341
  %351 = phi i64 [ %343, %341 ], [ %374, %369 ]
  %352 = and i64 %351, -4294967296
  %353 = add i64 %351, -1
  %354 = inttoptr i64 %353 to i32*
  %355 = load atomic i32, i32* %354 monotonic, align 4
  %356 = zext i32 %355 to i64
  %357 = or i64 %352, %356
  %358 = add i64 %357, 7
  %359 = inttoptr i64 %358 to i16*
  %360 = load atomic i16, i16* %359 monotonic, align 2
  %361 = icmp ult i16 %360, 1042
  br i1 %361, label %438, label %362

362:                                              ; preds = %350
  %363 = add i64 %351, 7
  %364 = inttoptr i64 %363 to i32*
  %365 = load i32, i32* %364, align 4
  %366 = icmp ne i32 %365, %348
  %367 = icmp ne i32 %365, %349
  %368 = and i1 %366, %367
  br i1 %368, label %438, label %369

369:                                              ; preds = %362
  %370 = add i64 %357, 15
  %371 = inttoptr i64 %370 to i32*
  %372 = load i32, i32* %371, align 4
  %373 = zext i32 %372 to i64
  %374 = or i64 %352, %373
  %375 = icmp eq i32 %372, %339
  br i1 %375, label %376, label %350

376:                                              ; preds = %369, %330
  %377 = load atomic i32, i32* %320 monotonic, align 4
  %378 = zext i32 %377 to i64
  %379 = or i64 %318, %378
  %380 = add i64 %379, 10
  %381 = inttoptr i64 %380 to i8*
  %382 = load i8, i8* %381, align 1
  %383 = lshr i8 %382, 2
  %384 = load %"class.v8::internal::ElementsAccessor"**, %"class.v8::internal::ElementsAccessor"*** @_ZN2v88internal16ElementsAccessor19elements_accessors_E, align 8
  %385 = zext i8 %383 to i64
  %386 = getelementptr inbounds %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %384, i64 %385
  %387 = load %"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::ElementsAccessor"** %386, align 8
  %388 = and i64 %316, 4294967295
  %389 = and i64 %275, 4294967295
  %390 = bitcast %"class.v8::internal::ElementsAccessor"* %387 to { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)***
  %391 = load { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)**, { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*** %390, align 8
  %392 = getelementptr inbounds { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %391, i64 26
  %393 = load { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)*, { i8, i64 } (%"class.v8::internal::ElementsAccessor"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64)** %392, align 8
  %394 = call { i8, i64 } %393(%"class.v8::internal::ElementsAccessor"* %387, %"class.v8::internal::Isolate"* %2, i64* nonnull %100, i64* %80, i64 %388, i64 %389) #5
  %395 = extractvalue { i8, i64 } %394, 0
  %396 = extractvalue { i8, i64 } %394, 1
  %397 = icmp eq i8 %395, 0
  br i1 %397, label %398, label %401

398:                                              ; preds = %376
  %399 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %400 = load i64, i64* %399, align 8
  br label %580

401:                                              ; preds = %376
  %402 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %403 = add i64 %396, 2147483648
  %404 = icmp ugt i64 %403, 4294967295
  br i1 %404, label %429, label %405

405:                                              ; preds = %401
  %406 = shl i64 %396, 32
  %407 = ashr exact i64 %406, 32
  %408 = add nsw i64 %407, 1073741824
  %409 = icmp ult i64 %408, 2147483648
  br i1 %409, label %410, label %429

410:                                              ; preds = %405
  %411 = ashr exact i64 %406, 31
  %412 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %413 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %412, align 8
  %414 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %413, null
  br i1 %414, label %417, label %415

415:                                              ; preds = %410
  %416 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %413, i64 %411) #5
  br label %435

417:                                              ; preds = %410
  %418 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %419 = load i64*, i64** %418, align 8
  %420 = load i64*, i64** %74, align 8
  %421 = icmp eq i64* %419, %420
  br i1 %421, label %422, label %424

422:                                              ; preds = %417
  %423 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* %2) #5
  br label %424

424:                                              ; preds = %422, %417
  %425 = phi i64* [ %423, %422 ], [ %419, %417 ]
  %426 = ptrtoint i64* %425 to i64
  %427 = add i64 %426, 8
  %428 = inttoptr i64 %427 to i64*
  store i64* %428, i64** %418, align 8
  store i64 %411, i64* %425, align 8
  br label %435

429:                                              ; preds = %405, %401
  %430 = sitofp i64 %396 to double
  %431 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %402) #5
  %432 = load i64, i64* %431, align 8
  %433 = add i64 %432, 3
  %434 = inttoptr i64 %433 to double*
  store double %430, double* %434, align 1
  br label %435

435:                                              ; preds = %429, %424, %415
  %436 = phi i64* [ %431, %429 ], [ %416, %415 ], [ %425, %424 ]
  %437 = load i64, i64* %436, align 8
  br label %580

438:                                              ; preds = %362, %350, %315
  %439 = icmp slt i64 %316, %275
  br i1 %439, label %440, label %580

440:                                              ; preds = %438
  %441 = bitcast %"class.v8::internal::LookupIterator"* %6 to i8*
  %442 = bitcast %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7 to i8*
  %443 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0, i32 0, i32 0
  %444 = getelementptr inbounds %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef", %"class.v8::internal::Handle<v8::internal::Object>::ObjectRef"* %7, i64 0, i32 0
  %445 = bitcast %"class.v8::internal::Isolate"* %2 to %"class.v8::internal::FactoryBase"*
  %446 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 4
  %447 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 31, i32 0
  %448 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2, i64 0, i32 0, i32 7, i32 0, i64 32
  %449 = icmp eq %"class.v8::internal::Isolate"* %2, null
  %450 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %71, i64 0, i32 0
  br i1 %449, label %451, label %505

451:                                              ; preds = %440, %502
  %452 = phi i64 [ %503, %502 ], [ %316, %440 ]
  %453 = load i32, i32* %76, align 8
  %454 = add nsw i32 %453, 1
  store i32 %454, i32* %76, align 8
  %455 = sitofp i64 %452 to double
  %456 = fptoui double %455 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %441) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* null, i64* nonnull %100, i64* null, i64 %456, i64* nonnull %100, i32 3) #5
  %457 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %6) #5
  %458 = trunc i16 %457 to i8
  %459 = icmp eq i8 %458, 0
  br i1 %459, label %499, label %460

460:                                              ; preds = %451
  %461 = icmp ugt i16 %457, 255
  br i1 %461, label %462, label %502

462:                                              ; preds = %460
  %463 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #5
  %464 = icmp eq i64* %463, null
  br i1 %464, label %499, label %465

465:                                              ; preds = %462
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %442) #5
  %466 = load i64, i64* %80, align 8
  store i64 %466, i64* %443, align 8
  %467 = load i64, i64* %463, align 8
  %468 = call zeroext i1 @_ZN2v88internal6Object12StrictEqualsES1_(%"class.v8::internal::Object"* nonnull %444, i64 %467) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %442) #5
  br i1 %468, label %469, label %502

469:                                              ; preds = %465
  %470 = add i64 %452, 2147483648
  %471 = icmp ugt i64 %470, 4294967295
  br i1 %471, label %494, label %472

472:                                              ; preds = %469
  %473 = shl i64 %452, 32
  %474 = ashr exact i64 %473, 32
  %475 = add nsw i64 %474, 1073741824
  %476 = icmp ult i64 %475, 2147483648
  br i1 %476, label %477, label %494

477:                                              ; preds = %472
  %478 = ashr exact i64 %473, 31
  %479 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %446, align 8
  %480 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %479, null
  br i1 %480, label %483, label %481

481:                                              ; preds = %477
  %482 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %479, i64 %478) #5
  br label %499

483:                                              ; preds = %477
  %484 = load i64*, i64** %447, align 8
  %485 = load i64*, i64** %74, align 8
  %486 = icmp eq i64* %484, %485
  br i1 %486, label %487, label %489

487:                                              ; preds = %483
  %488 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* null) #5
  br label %489

489:                                              ; preds = %487, %483
  %490 = phi i64* [ %488, %487 ], [ %484, %483 ]
  %491 = ptrtoint i64* %490 to i64
  %492 = add i64 %491, 8
  %493 = inttoptr i64 %492 to i64*
  store i64* %493, i64** %447, align 8
  store i64 %478, i64* %490, align 8
  br label %499

494:                                              ; preds = %472, %469
  %495 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* %445) #5
  %496 = load i64, i64* %495, align 8
  %497 = add i64 %496, 3
  %498 = inttoptr i64 %497 to double*
  store double %455, double* %498, align 1
  br label %499

499:                                              ; preds = %451, %462, %481, %489, %494
  %500 = phi i64* [ %495, %494 ], [ %482, %481 ], [ %490, %489 ], [ %448, %462 ], [ %448, %451 ]
  %501 = load i64, i64* %500, align 8
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %441) #5
  br label %580

502:                                              ; preds = %465, %460
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %441) #5
  %503 = add i64 %452, 1
  %504 = icmp eq i64 %503, %275
  br i1 %504, label %580, label %451

505:                                              ; preds = %440, %577
  %506 = phi i64 [ %565, %577 ], [ undef, %440 ]
  %507 = phi i64 [ %578, %577 ], [ %316, %440 ]
  %508 = load i64, i64* %72, align 8
  %509 = load i64*, i64** %74, align 8
  %510 = load i32, i32* %76, align 8
  %511 = add nsw i32 %510, 1
  store i32 %511, i32* %76, align 8
  %512 = sitofp i64 %507 to double
  %513 = fptoui double %512 to i64
  call void @llvm.lifetime.start.p0i8(i64 88, i8* nonnull %441) #5
  call void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"* nonnull %6, %"class.v8::internal::Isolate"* nonnull %2, i64* nonnull %100, i64* null, i64 %513, i64* nonnull %100, i32 3) #5
  %514 = call i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"* nonnull %6) #5
  %515 = trunc i16 %514 to i8
  %516 = icmp eq i8 %515, 0
  br i1 %516, label %517, label %519

517:                                              ; preds = %505
  %518 = load i64, i64* %448, align 8
  br label %563

519:                                              ; preds = %505
  %520 = icmp ugt i16 %514, 255
  br i1 %520, label %521, label %563

521:                                              ; preds = %519
  %522 = call i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"* nonnull %6, i1 zeroext false) #5
  %523 = icmp eq i64* %522, null
  br i1 %523, label %524, label %526

524:                                              ; preds = %521
  %525 = load i64, i64* %448, align 8
  br label %563

526:                                              ; preds = %521
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %442) #5
  %527 = load i64, i64* %80, align 8
  store i64 %527, i64* %443, align 8
  %528 = load i64, i64* %522, align 8
  %529 = call zeroext i1 @_ZN2v88internal6Object12StrictEqualsES1_(%"class.v8::internal::Object"* nonnull %444, i64 %528) #5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %442) #5
  br i1 %529, label %530, label %563

530:                                              ; preds = %526
  %531 = add i64 %507, 2147483648
  %532 = icmp ugt i64 %531, 4294967295
  br i1 %532, label %555, label %533

533:                                              ; preds = %530
  %534 = shl i64 %507, 32
  %535 = ashr exact i64 %534, 32
  %536 = add nsw i64 %535, 1073741824
  %537 = icmp ult i64 %536, 2147483648
  br i1 %537, label %538, label %555

538:                                              ; preds = %533
  %539 = ashr exact i64 %534, 31
  %540 = load %"class.v8::internal::CanonicalHandleScope"*, %"class.v8::internal::CanonicalHandleScope"** %446, align 8
  %541 = icmp eq %"class.v8::internal::CanonicalHandleScope"* %540, null
  br i1 %541, label %544, label %542

542:                                              ; preds = %538
  %543 = call i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"* nonnull %540, i64 %539) #5
  br label %560

544:                                              ; preds = %538
  %545 = load i64*, i64** %447, align 8
  %546 = load i64*, i64** %74, align 8
  %547 = icmp eq i64* %545, %546
  br i1 %547, label %548, label %550

548:                                              ; preds = %544
  %549 = call i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  br label %550

550:                                              ; preds = %548, %544
  %551 = phi i64* [ %549, %548 ], [ %545, %544 ]
  %552 = ptrtoint i64* %551 to i64
  %553 = add i64 %552, 8
  %554 = inttoptr i64 %553 to i64*
  store i64* %554, i64** %447, align 8
  store i64 %539, i64* %551, align 8
  br label %560

555:                                              ; preds = %533, %530
  %556 = call i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"* nonnull %445) #5
  %557 = load i64, i64* %556, align 8
  %558 = add i64 %557, 3
  %559 = inttoptr i64 %558 to double*
  store double %512, double* %559, align 1
  br label %560

560:                                              ; preds = %555, %550, %542
  %561 = phi i64* [ %556, %555 ], [ %543, %542 ], [ %551, %550 ]
  %562 = load i64, i64* %561, align 8
  br label %563

563:                                              ; preds = %560, %526, %524, %519, %517
  %564 = phi i32 [ 1, %517 ], [ 1, %560 ], [ 1, %524 ], [ 28, %519 ], [ 0, %526 ]
  %565 = phi i64 [ %518, %517 ], [ %562, %560 ], [ %525, %524 ], [ %506, %519 ], [ %506, %526 ]
  call void @llvm.lifetime.end.p0i8(i64 88, i8* nonnull %441) #5
  %566 = inttoptr i64 %508 to i64*
  %567 = load i64*, i64** %450, align 8
  store i64 %508, i64* %72, align 8
  %568 = load i32, i32* %76, align 8
  %569 = add nsw i32 %568, -1
  store i32 %569, i32* %76, align 8
  %570 = load i64*, i64** %74, align 8
  %571 = icmp eq i64* %570, %509
  br i1 %571, label %574, label %572

572:                                              ; preds = %563
  store i64* %509, i64** %74, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %573 = load i64*, i64** %450, align 8
  br label %574

574:                                              ; preds = %572, %563
  %575 = phi i64* [ %573, %572 ], [ %566, %563 ]
  %576 = phi i64* [ %509, %572 ], [ %567, %563 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %575, i64* %576) #5
  switch i32 %564, label %580 [
    i32 0, label %577
    i32 28, label %577
  ]

577:                                              ; preds = %574, %574
  %578 = add i64 %507, 1
  %579 = icmp eq i64 %578, %275
  br i1 %579, label %580, label %505

580:                                              ; preds = %577, %574, %502, %499, %438, %435, %398, %301, %286, %274, %256, %220, %102
  %581 = phi i64 [ %104, %102 ], [ %288, %286 ], [ -2, %274 ], [ -2, %301 ], [ %400, %398 ], [ %437, %435 ], [ %222, %220 ], [ %258, %256 ], [ -2, %438 ], [ %501, %499 ], [ -2, %502 ], [ -2, %577 ], [ %565, %574 ]
  %582 = icmp eq %"class.v8::internal::Isolate"* %2, null
  br i1 %582, label %596, label %583

583:                                              ; preds = %580
  %584 = inttoptr i64 %73 to i64*
  %585 = getelementptr inbounds %"struct.v8::internal::HandleScopeData", %"struct.v8::internal::HandleScopeData"* %71, i64 0, i32 0
  %586 = load i64*, i64** %585, align 8
  store i64 %73, i64* %72, align 8
  %587 = load i32, i32* %76, align 8
  %588 = add nsw i32 %587, -1
  store i32 %588, i32* %76, align 8
  %589 = load i64*, i64** %74, align 8
  %590 = icmp eq i64* %589, %75
  br i1 %590, label %593, label %591

591:                                              ; preds = %583
  store i64* %75, i64** %74, align 8
  call void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"* nonnull %2) #5
  %592 = load i64*, i64** %585, align 8
  br label %593

593:                                              ; preds = %591, %583
  %594 = phi i64* [ %592, %591 ], [ %584, %583 ]
  %595 = phi i64* [ %75, %591 ], [ %586, %583 ]
  call void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64* %594, i64* %595) #5
  br label %596

596:                                              ; preds = %580, %593
  %597 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %34, align 8
  %598 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %597, null
  br i1 %598, label %615, label %599

599:                                              ; preds = %596
  %600 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 0
  %601 = load i8*, i8** %600, align 8
  %602 = load atomic i8, i8* %601 monotonic, align 1
  %603 = icmp eq i8 %602, 0
  br i1 %603, label %615, label %604

604:                                              ; preds = %599
  %605 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #5
  %606 = load i8*, i8** %600, align 8
  %607 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 1
  %608 = load i8*, i8** %607, align 8
  %609 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %9, i64 0, i32 1, i32 2
  %610 = load i64, i64* %609, align 8
  %611 = bitcast %"class.v8::TracingController"* %605 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %612 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %611, align 8
  %613 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %612, i64 5
  %614 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %613, align 8
  call void %614(%"class.v8::TracingController"* %605, i8* %606, i8* %608, i64 %610) #5
  br label %615

615:                                              ; preds = %596, %599, %604
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %33) #5
  %616 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 0
  %617 = load %"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallStats"** %616, align 8
  %618 = icmp eq %"class.v8::internal::RuntimeCallStats"* %617, null
  br i1 %618, label %621, label %619, !prof !2

619:                                              ; preds = %615
  %620 = getelementptr inbounds %"class.v8::internal::RuntimeCallTimerScope", %"class.v8::internal::RuntimeCallTimerScope"* %8, i64 0, i32 1
  call void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"* nonnull %617, %"class.v8::internal::RuntimeCallTimer"* %620) #5
  br label %621

621:                                              ; preds = %615, %619
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %10) #5
  ret i64 %581
}

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5EnterEPNS0_16RuntimeCallTimerENS0_20RuntimeCallCounterIdE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*, i32) local_unnamed_addr #3

declare void @_ZN2v88internal16RuntimeCallStats5LeaveEPNS0_16RuntimeCallTimerE(%"class.v8::internal::RuntimeCallStats"*, %"class.v8::internal::RuntimeCallTimer"*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #4

; Function Attrs: nounwind
declare void @llvm.assume(i1) #5

declare void @_ZN2v88internal11HandleScope16DeleteExtensionsEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

declare void @_ZN2v88internal11HandleScope8ZapRangeEPmS2_(i64*, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal8JSObject22TransitionElementsKindENS0_6HandleIS1_EENS0_12ElementsKindE(i64*, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal10JSFunction13GetDerivedMapEPNS0_7IsolateENS0_6HandleIS1_EENS4_INS0_10JSReceiverEEE(%"class.v8::internal::Isolate"*, i64*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal3Map14AsElementsKindEPNS0_7IsolateENS0_6HandleIS1_EENS0_12ElementsKindE(%"class.v8::internal::Isolate"*, i64*, i8 zeroext) local_unnamed_addr #3

declare i64* @_ZN2v88internal7Factory18NewJSObjectFromMapENS0_6HandleINS0_3MapEEENS0_14AllocationTypeENS2_INS0_14AllocationSiteEEE(%"class.v8::internal::Factory"*, i64*, i8 zeroext, i64*) local_unnamed_addr #3

declare void @_ZN2v88internal7Factory17NewJSArrayStorageENS0_6HandleINS0_7JSArrayEEEiiNS0_26ArrayStorageAllocationModeE(%"class.v8::internal::Factory"*, i64*, i32, i32, i32) local_unnamed_addr #3

declare i64* @_ZN2v88internal32ArrayConstructInitializeElementsENS0_6HandleINS0_7JSArrayEEEPNS0_9ArgumentsILNS0_13ArgumentsTypeE1EEE(i64*, %"class.v8::internal::Arguments.1162"*) local_unnamed_addr #3

declare void @_ZN2v88internal10Protectors26InvalidateArrayConstructorEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i64* @_ZN2v88internal8JSObject17NormalizeElementsENS0_6HandleIS1_EE(i64*) local_unnamed_addr #3

declare i16 @_ZN2v88internal7JSProxy7IsArrayENS0_6HandleIS1_EE(i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object23ArraySpeciesConstructorEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object11GetPropertyEPNS0_14LookupIteratorEb(%"class.v8::internal::LookupIterator"*, i1 zeroext) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6Object13SameValueZeroES1_(%"class.v8::internal::Object"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object12ToObjectImplEPNS0_7IsolateENS0_6HandleIS1_EEPKc(%"class.v8::internal::Isolate"*, i64*, i8*) local_unnamed_addr #3

declare i64* @_ZN2v88internal20CanonicalHandleScope6LookupEm(%"class.v8::internal::CanonicalHandleScope"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11HandleScope6ExtendEPNS0_7IsolateE(%"class.v8::internal::Isolate"*) local_unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14LookupIteratorC2EPNS0_7IsolateENS0_6HandleINS0_6ObjectEEENS4_INS0_4NameEEEmS6_NS1_13ConfigurationE(%"class.v8::internal::LookupIterator"*, %"class.v8::internal::Isolate"*, i64*, i64*, i64, i64*, i32) unnamed_addr #6 comdat align 2 {
  %8 = ptrtoint i64* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 0
  %10 = icmp eq i64* %3, null
  br i1 %10, label %32, label %11

11:                                               ; preds = %7
  %12 = load i64, i64* %3, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 0, i32 4
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %12, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i64 %14, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #5
  %20 = zext i32 %17 to i64
  %21 = or i64 %14, %20
  %22 = add i64 %21, 7
  %23 = inttoptr i64 %22 to i16*
  %24 = load atomic i16, i16* %23 monotonic, align 2
  %25 = icmp eq i16 %24, 64
  br i1 %25, label %26, label %32

26:                                               ; preds = %11
  %27 = add i64 %12, 7
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %33

32:                                               ; preds = %26, %11, %7
  br label %33

33:                                               ; preds = %26, %32
  %34 = phi i32 [ %6, %32 ], [ 0, %26 ]
  store i32 %34, i32* %9, align 8
  %35 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 1
  store i32 4, i32* %35, align 4
  %36 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 2
  store i8 0, i8* %36, align 8
  %37 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 3
  store i32 0, i32* %37, align 4
  %38 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 4, i32 0
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 5
  store %"class.v8::internal::Isolate"* %1, %"class.v8::internal::Isolate"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6, i32 0, i32 0
  store i64* %3, i64** %40, align 8
  %41 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 7, i32 0, i32 0
  store i64* null, i64** %41, align 8
  %42 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 8, i32 0, i32 0
  store i64* %2, i64** %42, align 8
  %43 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 9, i32 0, i32 0
  store i64* null, i64** %43, align 8
  %44 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 10
  %45 = bitcast %"class.v8::internal::Handle.1160"* %44 to i64*
  store i64 %8, i64* %45, align 8
  %46 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 11
  store i64 %4, i64* %46, align 8
  %47 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 12, i32 0
  store i64 -1, i64* %47, align 8
  %48 = icmp eq i64 %4, -1
  br i1 %48, label %115, label %49

49:                                               ; preds = %33
  %50 = icmp ugt i64 %4, 4294967294
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %114, label %99

53:                                               ; preds = %49
  %54 = load i64, i64* %5, align 8
  %55 = and i64 %54, 1
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %53
  %58 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %10, label %72, label %78

59:                                               ; preds = %53
  %60 = and i64 %54, -4294967296
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = zext i32 %63 to i64
  %65 = or i64 %60, %64
  %66 = add i64 %65, 7
  %67 = inttoptr i64 %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = icmp eq i16 %68, 1080
  %70 = getelementptr inbounds %"class.v8::internal::LookupIterator", %"class.v8::internal::LookupIterator"* %0, i64 0, i32 6
  br i1 %69, label %98, label %71

71:                                               ; preds = %59
  br i1 %10, label %72, label %78

72:                                               ; preds = %57, %71
  %73 = phi %"class.v8::internal::Handle.1178"* [ %58, %57 ], [ %70, %71 ]
  %74 = bitcast %"class.v8::internal::Isolate"* %1 to %"class.v8::internal::Factory"*
  %75 = tail call i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"* %74, i64 %4, i1 zeroext true) #5
  %76 = ptrtoint i64* %75 to i64
  %77 = bitcast %"class.v8::internal::Handle.1178"* %73 to i64*
  store i64 %76, i64* %77, align 8
  br label %78

78:                                               ; preds = %57, %72, %71
  %79 = phi i64* [ %3, %57 ], [ %75, %72 ], [ %3, %71 ]
  %80 = load i64, i64* %79, align 8
  %81 = and i64 %80, -4294967296
  %82 = add i64 %80, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = add i64 %86, 7
  %88 = inttoptr i64 %87 to i16*
  %89 = load atomic i16, i16* %88 monotonic, align 2
  %90 = and i16 %89, -32
  %91 = icmp eq i16 %90, 32
  br i1 %91, label %92, label %96

92:                                               ; preds = %78
  %93 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %94 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %93, align 8
  %95 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %94, %"class.v8::internal::Isolate"* %1, i64* %79) #5
  br label %96

96:                                               ; preds = %78, %92
  %97 = phi i64* [ %95, %92 ], [ %79, %78 ]
  store i64* %97, i64** %40, align 8
  br label %114

98:                                               ; preds = %59
  br i1 %10, label %114, label %99

99:                                               ; preds = %51, %98
  %100 = phi %"class.v8::internal::Handle.1178"* [ %52, %51 ], [ %70, %98 ]
  %101 = load i64, i64* %3, align 8
  %102 = and i64 %101, -4294967296
  %103 = add i64 %101, -1
  %104 = inttoptr i64 %103 to i32*
  %105 = load atomic i32, i32* %104 monotonic, align 4
  %106 = zext i32 %105 to i64
  %107 = or i64 %102, %106
  %108 = add i64 %107, 7
  %109 = inttoptr i64 %108 to i16*
  %110 = load atomic i16, i16* %109 monotonic, align 2
  %111 = icmp ult i16 %110, 32
  br i1 %111, label %114, label %112

112:                                              ; preds = %99
  %113 = bitcast %"class.v8::internal::Handle.1178"* %100 to i64*
  store i64 0, i64* %113, align 8
  br label %114

114:                                              ; preds = %98, %51, %99, %112, %96
  tail call void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"* %0) #5
  br label %134

115:                                              ; preds = %33
  %116 = load i64, i64* %3, align 8
  %117 = and i64 %116, -4294967296
  %118 = add i64 %116, -1
  %119 = inttoptr i64 %118 to i32*
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = zext i32 %120 to i64
  %122 = or i64 %117, %121
  %123 = add i64 %122, 7
  %124 = inttoptr i64 %123 to i16*
  %125 = load atomic i16, i16* %124 monotonic, align 2
  %126 = and i16 %125, -32
  %127 = icmp eq i16 %126, 32
  br i1 %127, label %128, label %132

128:                                              ; preds = %115
  %129 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1, i64 0, i32 5, i32 0, i32 0, i32 0
  %130 = load %"class.v8::internal::StringTable"*, %"class.v8::internal::StringTable"** %129, align 8
  %131 = tail call i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"* %130, %"class.v8::internal::Isolate"* %1, i64* %3) #5
  br label %132

132:                                              ; preds = %115, %128
  %133 = phi i64* [ %131, %128 ], [ %3, %115 ]
  store i64* %133, i64** %40, align 8
  tail call void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"* %0) #5
  br label %134

134:                                              ; preds = %132, %114
  ret void
}

declare i64* @_ZN2v88internal7Factory12SizeToStringEmb(%"class.v8::internal::Factory"*, i64, i1 zeroext) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb1EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare void @_ZN2v88internal14LookupIterator5StartILb0EEEvv(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare i64* @_ZN2v88internal11StringTable12LookupStringEPNS0_7IsolateENS0_6HandleINS0_6StringEEE(%"class.v8::internal::StringTable"*, %"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object15ConvertToLengthEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

declare i64* @_ZN2v88internal6Object16ConvertToIntegerEPNS0_7IsolateENS0_6HandleIS1_EE(%"class.v8::internal::Isolate"*, i64*) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare double @llvm.fabs.f64(double) #7

declare i16 @_ZN2v88internal10JSReceiver11HasPropertyEPNS0_14LookupIteratorE(%"class.v8::internal::LookupIterator"*) local_unnamed_addr #3

declare zeroext i1 @_ZN2v88internal6Object12StrictEqualsES1_(%"class.v8::internal::Object"*, i64) local_unnamed_addr #3

declare i64* @_ZN2v88internal11FactoryBaseINS0_7FactoryEE13NewHeapNumberILNS0_14AllocationTypeE0EEENS0_6HandleINS0_10HeapNumberEEEv(%"class.v8::internal::FactoryBase"*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }
attributes #6 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone speculatable }
attributes #8 = { noreturn nounwind }
attributes #9 = { nounwind readnone }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1073205, i32 2146410443}
!4 = !{!"branch_weights", i32 1, i32 2000}
