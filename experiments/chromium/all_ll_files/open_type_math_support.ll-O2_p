; ModuleID = '../../third_party/blink/renderer/platform/fonts/opentype/open_type_math_support.cc'
source_filename = "../../third_party/blink/renderer/platform/fonts/opentype/open_type_math_support.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.blink::HarfBuzzFace" = type { %"class.WTF::RefCounted", %"class.blink::FontPlatformData"*, i64, %struct.hb_font_t*, %"struct.blink::HarfBuzzFontData"* }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.blink::FontPlatformData" = type opaque
%struct.hb_font_t = type opaque
%"struct.blink::HarfBuzzFontData" = type opaque
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.0", %"class.WTF::Vector" }
%"class.WTF::RefCounted.0" = type { %"class.base::RefCounted.1" }
%"class.base::RefCounted.1" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%struct.hb_face_t = type opaque
%"class.WTF::Vector.2" = type { %"class.WTF::VectorBuffer.3" }
%"class.WTF::VectorBuffer.3" = type { %"class.WTF::VectorBufferBase.4" }
%"class.WTF::VectorBufferBase.4" = type { i16*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.8" }
%"struct.std::__1::__atomic_base.8" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%struct.hb_ot_math_glyph_variant_t = type { i32, i32 }
%"class.absl::optional.9" = type { %"class.absl::optional_internal::optional_data.10" }
%"class.absl::optional_internal::optional_data.10" = type { %"class.absl::optional_internal::optional_data_base.11" }
%"class.absl::optional_internal::optional_data_base.11" = type { %"class.absl::optional_internal::optional_data_dtor_base.12" }
%"class.absl::optional_internal::optional_data_dtor_base.12" = type { i8, %union.anon.13 }
%union.anon.13 = type { i16 }
%"class.WTF::Vector.14" = type { %"class.WTF::VectorBuffer.15" }
%"class.WTF::VectorBuffer.15" = type { %"class.WTF::VectorBufferBase.16" }
%"class.WTF::VectorBufferBase.16" = type { %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, i32, i32 }
%"struct.blink::OpenTypeMathStretchData::GlyphPartRecord" = type { i16, float, float, float, i8 }
%"class.base::OnceCallback.19" = type { %"class.base::internal::CallbackBase" }
%"class.base::RepeatingCallback.22" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.absl::optional.25" = type { %"class.absl::optional_internal::optional_data.26" }
%"class.absl::optional_internal::optional_data.26" = type { %"class.absl::optional_internal::optional_data_base.27" }
%"class.absl::optional_internal::optional_data_base.27" = type { %"class.absl::optional_internal::optional_data_dtor_base.28" }
%"class.absl::optional_internal::optional_data_dtor_base.28" = type { i8, %union.anon.29 }
%union.anon.29 = type { %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord" }
%struct.hb_ot_math_glyph_part_t = type { i32, i32, i32, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.36 }
%union.anon.36 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }

$_ZN5blink21GetHarfBuzzMathRecordI26hb_ot_math_glyph_variant_ttEEN3WTF6VectorIT0_Lj0ENS2_18PartitionAllocatorEEEPKNS_12HarfBuzzFaceEtNS_23OpenTypeMathStretchData11StretchAxisEN4base12OnceCallbackIFjP9hb_font_tj14hb_direction_tjPjPT_EEENSC_17RepeatingCallbackIFS4_SI_EEEN4absl8optionalIS4_EE = comdat any

$_ZN5blink21GetHarfBuzzMathRecordI23hb_ot_math_glyph_part_tNS_23OpenTypeMathStretchData15GlyphPartRecordEEEN3WTF6VectorIT0_Lj0ENS4_18PartitionAllocatorEEEPKNS_12HarfBuzzFaceEtNS2_11StretchAxisEN4base12OnceCallbackIFjP9hb_font_tj14hb_direction_tjPjPT_EEENSD_17RepeatingCallbackIFS6_SJ_EEEN4absl8optionalIS6_EE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEEES9_E7RunOnceEPNS0_13BindStateBaseES4_jS5_jS6_S8_ = comdat any

$_ZN4base8internal9BindStateIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm = comdat any

$_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRtEEvOT_ = comdat any

$_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPt = comdat any

$_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14AppendSlowCaseItEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEmm = comdat any

$_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_ = comdat any

$_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_ = comdat any

@.str = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.1 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv = private unnamed_addr constant [62 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned short]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEPKcv = private unnamed_addr constant [95 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::OpenTypeMathStretchData::GlyphPartRecord]\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink19OpenTypeMathSupport11HasMathDataEPKNS_12HarfBuzzFaceE(%"class.blink::HarfBuzzFace"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::HarfBuzzFace"* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* nonnull %0, %"class.blink::UnicodeRangeSet"* null, i32 1) #9
  %5 = tail call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %4) #9
  %6 = tail call i32 @hb_ot_math_has_data(%struct.hb_face_t* %5) #9
  %7 = icmp ne i32 %6, 0
  br label %8

8:                                                ; preds = %1, %3
  %9 = phi i1 [ %7, %3 ], [ false, %1 ]
  ret i1 %9
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"*, %"class.blink::UnicodeRangeSet"*, i32) local_unnamed_addr #2

declare %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t*) local_unnamed_addr #2

declare i32 @hb_ot_math_has_data(%struct.hb_face_t*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink19OpenTypeMathSupport12MathConstantEPKNS_12HarfBuzzFaceENS0_13MathConstantsE(%"class.blink::HarfBuzzFace"*, i32) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::HarfBuzzFace"* %0, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* nonnull %0, %"class.blink::UnicodeRangeSet"* null, i32 1) #9
  %6 = tail call %struct.hb_face_t* @hb_font_get_face(%struct.hb_font_t* %5) #9
  %7 = tail call i32 @hb_ot_math_has_data(%struct.hb_face_t* %6) #9
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %4
  %10 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* nonnull %0, %"class.blink::UnicodeRangeSet"* null, i32 1) #9
  %11 = tail call i32 @hb_ot_math_get_constant(%struct.hb_font_t* %10, i32 %1) #9
  switch i32 %1, label %21 [
    i32 0, label %12
    i32 1, label %12
    i32 55, label %12
    i32 2, label %17
    i32 3, label %17
    i32 4, label %17
    i32 5, label %17
    i32 6, label %17
    i32 7, label %17
    i32 8, label %17
    i32 9, label %17
    i32 10, label %17
    i32 11, label %17
    i32 12, label %17
    i32 13, label %17
    i32 14, label %17
    i32 15, label %17
    i32 16, label %17
    i32 17, label %17
    i32 18, label %17
    i32 19, label %17
    i32 20, label %17
    i32 21, label %17
    i32 22, label %17
    i32 23, label %17
    i32 24, label %17
    i32 25, label %17
    i32 26, label %17
    i32 27, label %17
    i32 28, label %17
    i32 29, label %17
    i32 30, label %17
    i32 31, label %17
    i32 32, label %17
    i32 33, label %17
    i32 34, label %17
    i32 35, label %17
    i32 36, label %17
    i32 37, label %17
    i32 38, label %17
    i32 39, label %17
    i32 40, label %17
    i32 41, label %17
    i32 42, label %17
    i32 43, label %17
    i32 44, label %17
    i32 45, label %17
    i32 46, label %17
    i32 47, label %17
    i32 48, label %17
    i32 49, label %17
    i32 50, label %17
    i32 51, label %17
    i32 52, label %17
    i32 53, label %17
    i32 54, label %17
  ]

12:                                               ; preds = %9, %9, %9
  %13 = sitofp i32 %11 to double
  %14 = fdiv double %13, 1.000000e+02
  %15 = fptrunc double %14 to float
  %16 = bitcast float %15 to i32
  br label %21

17:                                               ; preds = %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9, %9
  %18 = sitofp i32 %11 to float
  %19 = fmul float %18, 0x3EF0000000000000
  %20 = bitcast float %19 to i32
  br label %21

21:                                               ; preds = %4, %2, %9, %12, %17
  %22 = phi i64 [ 1, %17 ], [ 1, %12 ], [ 0, %4 ], [ 0, %9 ], [ 0, %2 ]
  %23 = phi i32 [ %20, %17 ], [ %16, %12 ], [ undef, %4 ], [ undef, %9 ], [ undef, %2 ]
  %24 = zext i32 %23 to i64
  %25 = shl nuw i64 %24, 32
  %26 = or i64 %25, %22
  ret i64 %26
}

declare i32 @hb_ot_math_get_constant(%struct.hb_font_t*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZN5blink19OpenTypeMathSupport20MathItalicCorrectionEPKNS_12HarfBuzzFaceEt(%"class.blink::HarfBuzzFace"*, i16 zeroext) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::HarfBuzzFace"* %0, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* nonnull %0, %"class.blink::UnicodeRangeSet"* null, i32 1) #9
  %6 = zext i16 %1 to i32
  %7 = tail call i32 @hb_ot_math_get_glyph_italics_correction(%struct.hb_font_t* %5, i32 %6) #9
  %8 = sitofp i32 %7 to float
  %9 = fmul float %8, 0x3EF0000000000000
  %10 = bitcast float %9 to i32
  %11 = zext i32 %10 to i64
  %12 = shl nuw i64 %11, 32
  br label %13

13:                                               ; preds = %2, %4
  %14 = phi i64 [ 1, %4 ], [ 0, %2 ]
  %15 = phi i64 [ %12, %4 ], [ 0, %2 ]
  %16 = or i64 %15, %14
  ret i64 %16
}

declare i32 @hb_ot_math_get_glyph_italics_correction(%struct.hb_font_t*, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS_12HarfBuzzFaceEtNS_23OpenTypeMathStretchData11StretchAxisE(%"class.WTF::Vector.2"* noalias sret, %"class.blink::HarfBuzzFace"*, i16 zeroext, i8 zeroext) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = alloca %"class.base::RepeatingCallback", align 8
  %7 = alloca %"class.base::OnceCallback", align 8
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = bitcast %"class.base::OnceCallback"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #9
  %10 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0, i32 0, i32 0
  %11 = tail call i8* @_Znwm(i64 48) #10, !noalias !2
  %12 = bitcast i8* %11 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %12, void ()* bitcast (i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEEES9_E7RunOnceEPNS0_13BindStateBaseES4_jS5_jS6_S8_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEE7DestroyEPKNS0_13BindStateBaseE) #9, !noalias !2
  %13 = getelementptr inbounds i8, i8* %11, i64 32
  %14 = bitcast i8* %13 to i64*
  store i64 ptrtoint (i32 (%struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)* @hb_ot_math_get_glyph_variants to i64), i64* %14, align 8, !noalias !2
  %15 = bitcast %"class.base::RepeatingCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = tail call i8* @_Znwm(i64 40) #10, !noalias !7
  %18 = bitcast i8* %17 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %18, void ()* bitcast (i16 (%"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_variant_t*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEE3$_0JEEEFt26hb_ot_math_glyph_variant_tEE3RunEPNS0_13BindStateBaseEOSC_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !7
  %19 = ptrtoint i8* %11 to i64
  %20 = bitcast %"class.base::OnceCallback"* %7 to i64*
  store i64 %19, i64* %20, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %10, align 8
  %21 = ptrtoint i8* %17 to i64
  %22 = bitcast %"class.base::RepeatingCallback"* %8 to i64*
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %16, align 8
  %23 = zext i16 %2 to i32
  %24 = shl nuw i32 %23, 16
  %25 = or i32 %24, 1
  call void @_ZN5blink21GetHarfBuzzMathRecordI26hb_ot_math_glyph_variant_ttEEN3WTF6VectorIT0_Lj0ENS2_18PartitionAllocatorEEEPKNS_12HarfBuzzFaceEtNS_23OpenTypeMathStretchData11StretchAxisEN4base12OnceCallbackIFjP9hb_font_tj14hb_direction_tjPjPT_EEENSC_17RepeatingCallbackIFS4_SI_EEEN4absl8optionalIS4_EE(%"class.WTF::Vector.2"* sret %0, %"class.blink::HarfBuzzFace"* %1, i16 zeroext %2, i8 zeroext %3, %"class.base::OnceCallback"* nonnull %7, %"class.base::RepeatingCallback"* nonnull %8, i32 %25)
  %26 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %26) #9
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %7, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #9
  %28 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %6, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %28) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #9
  %29 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #9
  ret void
}

declare i32 @hb_ot_math_get_glyph_variants(%struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*) #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21GetHarfBuzzMathRecordI26hb_ot_math_glyph_variant_ttEEN3WTF6VectorIT0_Lj0ENS2_18PartitionAllocatorEEEPKNS_12HarfBuzzFaceEtNS_23OpenTypeMathStretchData11StretchAxisEN4base12OnceCallbackIFjP9hb_font_tj14hb_direction_tjPjPT_EEENSC_17RepeatingCallbackIFS4_SI_EEEN4absl8optionalIS4_EE(%"class.WTF::Vector.2"* noalias sret, %"class.blink::HarfBuzzFace"*, i16 zeroext, i8 zeroext, %"class.base::OnceCallback"*, %"class.base::RepeatingCallback"*, i32) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca i64, align 8
  %10 = alloca i32, align 4
  %11 = alloca i32, align 4
  %12 = alloca i16, align 2
  store i32 %6, i32* %10, align 4
  %13 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* %1, %"class.blink::UnicodeRangeSet"* null, i32 1) #9
  %14 = icmp eq i8 %3, 0
  %15 = alloca [20 x %struct.hb_ot_math_glyph_variant_t], align 16
  %16 = bitcast [20 x %struct.hb_ot_math_glyph_variant_t]* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %16, i8 -86, i64 160, i1 false)
  %17 = bitcast i32* %10 to %"class.absl::optional.9"*
  %18 = select i1 %14, i32 4, i32 7
  %19 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_variant_t], [20 x %struct.hb_ot_math_glyph_variant_t]* %15, i64 0, i64 0
  %20 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %20) #9
  store i32 20, i32* %11, align 4
  %21 = zext i16 %2 to i32
  %22 = bitcast %"class.base::OnceCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0, i32 0, i32 0
  %24 = bitcast %"class.base::OnceCallback"* %4 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.base::OnceCallback"* %8 to i64*
  store i64 %25, i64* %26, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %23, align 8
  %27 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  %28 = inttoptr i64 %25 to %"class.base::internal::BindStateBase"*
  %29 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %28, i64 0, i32 1
  %30 = bitcast void ()** %29 to i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)**
  %31 = load i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)*, i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)** %30, align 8
  %32 = call i32 %31(%"class.base::internal::BindStateBase"* %28, %struct.hb_font_t* %13, i32 %21, i32 %18, i32 0, i32* nonnull %11, %struct.hb_ot_math_glyph_variant_t* nonnull %19) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %27) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #9
  %33 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %34 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %35 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %36 = bitcast %"class.WTF::Vector.2"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 16, i1 false) #9
  %37 = trunc i32 %6 to i8
  %38 = load i32, i32* %11, align 4
  %39 = and i32 %6, 255
  %40 = add i32 %38, %39
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %53, label %42

42:                                               ; preds = %7
  %43 = bitcast i32* %10 to i8*
  %44 = zext i32 %40 to i64
  %45 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64 %44) #9
  %46 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %45, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv, i64 0, i64 0)) #9
  %47 = ptrtoint i8* %46 to i64
  %48 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %47, i64* %48 monotonic, align 8
  %49 = lshr i64 %45, 1
  %50 = trunc i64 %49 to i32
  store i32 %50, i32* %34, align 8
  %51 = load i8, i8* %43, align 4, !range !12
  %52 = bitcast i8* %46 to i16*
  br label %53

53:                                               ; preds = %7, %42
  %54 = phi i16* [ null, %7 ], [ %52, %42 ]
  %55 = phi i32 [ 0, %7 ], [ %50, %42 ]
  %56 = phi i8 [ %37, %7 ], [ %51, %42 ]
  %57 = icmp eq i8 %56, 0
  br i1 %57, label %69, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.absl::optional.9", %"class.absl::optional.9"* %17, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %60 = load i32, i32* %35, align 4
  %61 = icmp eq i32 %60, %55
  br i1 %61, label %68, label %62, !prof !13

62:                                               ; preds = %58
  %63 = zext i32 %60 to i64
  %64 = getelementptr inbounds i16, i16* %54, i64 %63
  %65 = load i16, i16* %59, align 2
  store i16 %65, i16* %64, align 2
  %66 = load i32, i32* %35, align 4
  %67 = add i32 %66, 1
  store i32 %67, i32* %35, align 4
  br label %69

68:                                               ; preds = %58
  call void @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRtEEvOT_(%"class.WTF::Vector.2"* %0, i16* dereferenceable(2) %59) #9
  br label %69

69:                                               ; preds = %53, %68, %62
  %70 = load i32, i32* %11, align 4
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %102, label %72

72:                                               ; preds = %69
  %73 = bitcast i16* %12 to i8*
  %74 = bitcast i64* %9 to i8*
  %75 = bitcast i64* %9 to %struct.hb_ot_math_glyph_variant_t*
  %76 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %77

77:                                               ; preds = %72, %97
  %78 = phi i64 [ 0, %72 ], [ %98, %97 ]
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %73) #9
  %79 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_variant_t], [20 x %struct.hb_ot_math_glyph_variant_t]* %15, i64 0, i64 %78
  %80 = bitcast %struct.hb_ot_math_glyph_variant_t* %79 to i64*
  %81 = load i64, i64* %80, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %74)
  store i64 %81, i64* %9, align 8
  %82 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %76, align 8
  %83 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %82, i64 0, i32 1
  %84 = bitcast void ()** %83 to i16 (%"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_variant_t*)**
  %85 = load i16 (%"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_variant_t*)*, i16 (%"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_variant_t*)** %84, align 8
  %86 = call zeroext i16 %85(%"class.base::internal::BindStateBase"* %82, %struct.hb_ot_math_glyph_variant_t* nonnull dereferenceable(8) %75) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %74)
  store i16 %86, i16* %12, align 2
  %87 = load i32, i32* %35, align 4
  %88 = load i32, i32* %34, align 8
  %89 = icmp eq i32 %87, %88
  br i1 %89, label %96, label %90, !prof !13

90:                                               ; preds = %77
  %91 = load i16*, i16** %33, align 8
  %92 = zext i32 %87 to i64
  %93 = getelementptr inbounds i16, i16* %91, i64 %92
  store i16 %86, i16* %93, align 2
  %94 = load i32, i32* %35, align 4
  %95 = add i32 %94, 1
  store i32 %95, i32* %35, align 4
  br label %97

96:                                               ; preds = %77
  call void @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14AppendSlowCaseItEEvOT_(%"class.WTF::Vector.2"* %0, i16* nonnull dereferenceable(2) %12) #9
  br label %97

97:                                               ; preds = %90, %96
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %73) #9
  %98 = add nuw nsw i64 %78, 1
  %99 = load i32, i32* %11, align 4
  %100 = zext i32 %99 to i64
  %101 = icmp ult i64 %98, %100
  br i1 %101, label %77, label %102

102:                                              ; preds = %97, %69
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %20) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS_12HarfBuzzFaceEtNS_23OpenTypeMathStretchData11StretchAxisEPf(%"class.WTF::Vector.14"* noalias sret, %"class.blink::HarfBuzzFace"*, i16 zeroext, i8 zeroext, float*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback.19", align 8
  %7 = alloca %"class.base::RepeatingCallback.22", align 8
  %8 = alloca %"class.base::OnceCallback.19", align 8
  %9 = alloca %"class.base::RepeatingCallback.22", align 8
  %10 = alloca %"class.absl::optional.25", align 8
  %11 = alloca i32, align 4
  %12 = bitcast %"class.base::OnceCallback.19"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %6, i64 0, i32 0, i32 0, i32 0
  %14 = tail call i8* @_Znwm(i64 40) #10, !noalias !14
  %15 = bitcast i8* %14 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %15, void ()* bitcast (i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_part_t*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEEEFjP9hb_font_tj14hb_direction_tjPjP23hb_ot_math_glyph_part_tEE7RunOnceEPNS0_13BindStateBaseESE_jSF_jSG_SI_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !14
  %16 = bitcast %"class.base::RepeatingCallback.22"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = getelementptr inbounds %"class.base::RepeatingCallback.22", %"class.base::RepeatingCallback.22"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %18 = tail call i8* @_Znwm(i64 40) #10, !noalias !19
  %19 = bitcast i8* %18 to %"class.base::internal::BindStateBase"*
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %19, void ()* bitcast (void (%"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_part_t*)* @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEEFNS8_15GlyphPartRecordE23hb_ot_math_glyph_part_tEE3RunEPNS0_13BindStateBaseEOSE_" to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @"_ZN4base8internal9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEE7DestroyEPKNS0_13BindStateBaseE") #9, !noalias !19
  %20 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %21 = ptrtoint i8* %14 to i64
  %22 = bitcast %"class.base::OnceCallback.19"* %8 to i64*
  %23 = bitcast %"class.WTF::Vector.14"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %23, i8 -86, i64 16, i1 false)
  store i64 %21, i64* %22, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %13, align 8
  %24 = ptrtoint i8* %18 to i64
  %25 = bitcast %"class.base::RepeatingCallback.22"* %9 to i64*
  store i64 %24, i64* %25, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %17, align 8
  %26 = getelementptr inbounds %"class.absl::optional.25", %"class.absl::optional.25"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %26, align 8
  %27 = getelementptr inbounds %"class.absl::optional.25", %"class.absl::optional.25"* %10, i64 0, i32 0, i32 0, i32 0, i32 1
  %28 = bitcast %union.anon.29* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %28, i8 0, i64 20, i1 false) #9
  call void @_ZN5blink21GetHarfBuzzMathRecordI23hb_ot_math_glyph_part_tNS_23OpenTypeMathStretchData15GlyphPartRecordEEEN3WTF6VectorIT0_Lj0ENS4_18PartitionAllocatorEEEPKNS_12HarfBuzzFaceEtNS2_11StretchAxisEN4base12OnceCallbackIFjP9hb_font_tj14hb_direction_tjPjPT_EEENSD_17RepeatingCallbackIFS6_SJ_EEEN4absl8optionalIS6_EE(%"class.WTF::Vector.14"* sret %0, %"class.blink::HarfBuzzFace"* %1, i16 zeroext %2, i8 zeroext %3, %"class.base::OnceCallback.19"* nonnull %8, %"class.base::RepeatingCallback.22"* nonnull %9, %"class.absl::optional.25"* nonnull byval(%"class.absl::optional.25") align 8 %10)
  %29 = getelementptr inbounds %"class.base::RepeatingCallback.22", %"class.base::RepeatingCallback.22"* %9, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %29) #9
  %30 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %30) #9
  %31 = icmp eq float* %4, null
  %32 = load i32, i32* %20, align 4
  %33 = icmp eq i32 %32, 0
  %34 = or i1 %31, %33
  br i1 %34, label %45, label %35

35:                                               ; preds = %5
  %36 = call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* %1, %"class.blink::UnicodeRangeSet"* null, i32 1) #9
  %37 = bitcast i32* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %37) #9
  store i32 -1431655766, i32* %11, align 4
  %38 = zext i16 %2 to i32
  %39 = icmp eq i8 %3, 0
  %40 = select i1 %39, i32 4, i32 7
  %41 = call i32 @hb_ot_math_get_glyph_assembly(%struct.hb_font_t* %36, i32 %38, i32 %40, i32 0, i32* null, %struct.hb_ot_math_glyph_part_t* null, i32* nonnull %11) #9
  %42 = load i32, i32* %11, align 4
  %43 = sitofp i32 %42 to float
  %44 = fmul float %43, 0x3EF0000000000000
  store float %44, float* %4, align 4
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %37) #9
  br label %45

45:                                               ; preds = %35, %5
  %46 = getelementptr inbounds %"class.base::RepeatingCallback.22", %"class.base::RepeatingCallback.22"* %7, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %46) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  %47 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %47) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21GetHarfBuzzMathRecordI23hb_ot_math_glyph_part_tNS_23OpenTypeMathStretchData15GlyphPartRecordEEEN3WTF6VectorIT0_Lj0ENS4_18PartitionAllocatorEEEPKNS_12HarfBuzzFaceEtNS2_11StretchAxisEN4base12OnceCallbackIFjP9hb_font_tj14hb_direction_tjPjPT_EEENSD_17RepeatingCallbackIFS6_SJ_EEEN4absl8optionalIS6_EE(%"class.WTF::Vector.14"* noalias sret, %"class.blink::HarfBuzzFace"*, i16 zeroext, i8 zeroext, %"class.base::OnceCallback.19"*, %"class.base::RepeatingCallback.22"*, %"class.absl::optional.25"* byval(%"class.absl::optional.25") align 8) local_unnamed_addr #0 comdat {
  %8 = alloca %"class.base::OnceCallback.19", align 8
  %9 = alloca %struct.hb_ot_math_glyph_part_t, align 8
  %10 = alloca i32, align 4
  %11 = alloca %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", align 4
  %12 = tail call %struct.hb_font_t* @_ZNK5blink12HarfBuzzFace13GetScaledFontE13scoped_refptrINS_15UnicodeRangeSetEENS0_23VerticalLayoutCallbacksE(%"class.blink::HarfBuzzFace"* %1, %"class.blink::UnicodeRangeSet"* null, i32 1) #9
  %13 = icmp eq i8 %3, 0
  %14 = alloca [20 x %struct.hb_ot_math_glyph_part_t], align 16
  %15 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 2
  %16 = bitcast %struct.hb_ot_math_glyph_part_t* %15 to i8*
  %17 = bitcast [20 x %struct.hb_ot_math_glyph_part_t]* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %17, i8 -86, i64 40, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 -86, i64 20, i1 false)
  %18 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 3
  %19 = bitcast %struct.hb_ot_math_glyph_part_t* %18 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %19, i8 -86, i64 20, i1 false)
  %20 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 4
  %21 = bitcast %struct.hb_ot_math_glyph_part_t* %20 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %21, i8 -86, i64 20, i1 false)
  %22 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 5
  %23 = bitcast %struct.hb_ot_math_glyph_part_t* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %23, i8 -86, i64 20, i1 false)
  %24 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 6
  %25 = bitcast %struct.hb_ot_math_glyph_part_t* %24 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 -86, i64 20, i1 false)
  %26 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 7
  %27 = bitcast %struct.hb_ot_math_glyph_part_t* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 -86, i64 20, i1 false)
  %28 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 8
  %29 = bitcast %struct.hb_ot_math_glyph_part_t* %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %29, i8 -86, i64 20, i1 false)
  %30 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 9
  %31 = bitcast %struct.hb_ot_math_glyph_part_t* %30 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %31, i8 -86, i64 20, i1 false)
  %32 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 10
  %33 = bitcast %struct.hb_ot_math_glyph_part_t* %32 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 -86, i64 20, i1 false)
  %34 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 11
  %35 = bitcast %struct.hb_ot_math_glyph_part_t* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %35, i8 -86, i64 20, i1 false)
  %36 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 12
  %37 = bitcast %struct.hb_ot_math_glyph_part_t* %36 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %37, i8 -86, i64 20, i1 false)
  %38 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 13
  %39 = bitcast %struct.hb_ot_math_glyph_part_t* %38 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %39, i8 -86, i64 20, i1 false)
  %40 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 14
  %41 = bitcast %struct.hb_ot_math_glyph_part_t* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 -86, i64 20, i1 false)
  %42 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 15
  %43 = bitcast %struct.hb_ot_math_glyph_part_t* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %43, i8 -86, i64 20, i1 false)
  %44 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 16
  %45 = bitcast %struct.hb_ot_math_glyph_part_t* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 16 %45, i8 -86, i64 20, i1 false)
  %46 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 17
  %47 = bitcast %struct.hb_ot_math_glyph_part_t* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %47, i8 -86, i64 20, i1 false)
  %48 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 18
  %49 = bitcast %struct.hb_ot_math_glyph_part_t* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 -86, i64 20, i1 false)
  %50 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 19
  %51 = bitcast %struct.hb_ot_math_glyph_part_t* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %51, i8 -86, i64 20, i1 false)
  %52 = select i1 %13, i32 4, i32 7
  %53 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 0
  %54 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %54) #9
  store i32 20, i32* %10, align 4
  %55 = zext i16 %2 to i32
  %56 = bitcast %"class.base::OnceCallback.19"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #9
  %57 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %4, i64 0, i32 0, i32 0, i32 0
  %58 = bitcast %"class.base::OnceCallback.19"* %4 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.base::OnceCallback.19"* %8 to i64*
  store i64 %59, i64* %60, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %57, align 8
  %61 = getelementptr inbounds %"class.base::OnceCallback.19", %"class.base::OnceCallback.19"* %8, i64 0, i32 0
  %62 = inttoptr i64 %59 to %"class.base::internal::BindStateBase"*
  %63 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %62, i64 0, i32 1
  %64 = bitcast void ()** %63 to i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_part_t*)**
  %65 = load i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_part_t*)*, i32 (%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_part_t*)** %64, align 8
  %66 = call i32 %65(%"class.base::internal::BindStateBase"* %62, %struct.hb_font_t* %12, i32 %55, i32 %52, i32 0, i32* nonnull %10, %struct.hb_ot_math_glyph_part_t* nonnull %53) #9
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %61) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #9
  %67 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::Vector.14"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false) #9
  %71 = getelementptr inbounds %"class.absl::optional.25", %"class.absl::optional.25"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !12
  %73 = load i32, i32* %10, align 4
  %74 = zext i8 %72 to i32
  %75 = add i32 %73, %74
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %87, label %77

77:                                               ; preds = %7
  %78 = zext i32 %75 to i64
  %79 = call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEmm(i64 %78) #9
  %80 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %79, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEPKcv, i64 0, i64 0)) #9
  %81 = ptrtoint i8* %80 to i64
  %82 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %81, i64* %82 monotonic, align 8
  %83 = udiv i64 %79, 20
  %84 = trunc i64 %83 to i32
  store i32 %84, i32* %68, align 8
  %85 = load i8, i8* %71, align 8, !range !12
  %86 = bitcast i8* %80 to %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*
  br label %87

87:                                               ; preds = %7, %77
  %88 = phi %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* [ null, %7 ], [ %86, %77 ]
  %89 = phi i32 [ 0, %7 ], [ %84, %77 ]
  %90 = phi i8 [ %72, %7 ], [ %85, %77 ]
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %104, label %92

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.absl::optional.25", %"class.absl::optional.25"* %6, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %94 = load i32, i32* %69, align 4
  %95 = icmp eq i32 %94, %89
  br i1 %95, label %103, label %96, !prof !13

96:                                               ; preds = %92
  %97 = zext i32 %94 to i64
  %98 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %88, i64 %97
  %99 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %98 to i8*
  %100 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %93 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %99, i8* align 4 %100, i64 20, i1 false) #9
  %101 = load i32, i32* %69, align 4
  %102 = add i32 %101, 1
  store i32 %102, i32* %69, align 4
  br label %104

103:                                              ; preds = %92
  call void @_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.14"* %0, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* dereferenceable(20) %93) #9
  br label %104

104:                                              ; preds = %87, %103, %96
  %105 = load i32, i32* %10, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %135, label %107

107:                                              ; preds = %104
  %108 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %11 to i8*
  %109 = bitcast %struct.hb_ot_math_glyph_part_t* %9 to i8*
  %110 = getelementptr inbounds %"class.base::RepeatingCallback.22", %"class.base::RepeatingCallback.22"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  br label %111

111:                                              ; preds = %107, %130
  %112 = phi i64 [ 0, %107 ], [ %131, %130 ]
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %108) #9
  %113 = getelementptr inbounds [20 x %struct.hb_ot_math_glyph_part_t], [20 x %struct.hb_ot_math_glyph_part_t]* %14, i64 0, i64 %112
  %114 = bitcast %struct.hb_ot_math_glyph_part_t* %113 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %109)
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %109, i8* align 4 %114, i64 20, i1 false)
  %115 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %110, align 8, !noalias !24
  %116 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %115, i64 0, i32 1
  %117 = bitcast void ()** %116 to void (%"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_part_t*)**
  %118 = load void (%"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_part_t*)*, void (%"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"class.base::internal::BindStateBase"*, %struct.hb_ot_math_glyph_part_t*)** %117, align 8, !noalias !24
  call void %118(%"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* nonnull sret %11, %"class.base::internal::BindStateBase"* %115, %struct.hb_ot_math_glyph_part_t* nonnull dereferenceable(20) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %109)
  %119 = load i32, i32* %69, align 4
  %120 = load i32, i32* %68, align 8
  %121 = icmp eq i32 %119, %120
  br i1 %121, label %129, label %122, !prof !13

122:                                              ; preds = %111
  %123 = load %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"** %67, align 8
  %124 = zext i32 %119 to i64
  %125 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %123, i64 %124
  %126 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %125 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %126, i8* nonnull align 4 %108, i64 20, i1 false) #9
  %127 = load i32, i32* %69, align 4
  %128 = add i32 %127, 1
  store i32 %128, i32* %69, align 4
  br label %130

129:                                              ; preds = %111
  call void @_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.14"* %0, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* nonnull dereferenceable(20) %11) #9
  br label %130

130:                                              ; preds = %122, %129
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %108) #9
  %131 = add nuw nsw i64 %112, 1
  %132 = load i32, i32* %10, align 4
  %133 = zext i32 %132 to i64
  %134 = icmp ult i64 %131, %133
  br i1 %134, label %111, label %135

135:                                              ; preds = %130, %104
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %54) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

declare i32 @hb_ot_math_get_glyph_assembly(%struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_part_t*, i32*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN4base8internal7InvokerINS0_9BindStateIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEEES9_E7RunOnceEPNS0_13BindStateBaseES4_jS5_jS6_S8_(%"class.base::internal::BindStateBase"*, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*) #0 comdat align 2 {
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %9 = bitcast %"class.base::internal::BindStateBase"* %8 to i32 (%struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)**
  %10 = load i32 (%struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)*, i32 (%struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_variant_t*)** %9, align 8
  %11 = tail call i32 %10(%struct.hb_font_t* %1, i32 %2, i32 %3, i32 %4, i32* %5, %struct.hb_ot_math_glyph_variant_t* %6) #9
  ret i32 %11
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #5

; Function Attrs: norecurse nounwind readonly ssp uwtable
define internal zeroext i16 @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEE3$_0JEEEFt26hb_ot_math_glyph_variant_tEE3RunEPNS0_13BindStateBaseEOSC_"(%"class.base::internal::BindStateBase"* nocapture readnone, %struct.hb_ot_math_glyph_variant_t* nocapture readonly dereferenceable(8)) #6 align 2 {
  %3 = bitcast %struct.hb_ot_math_glyph_variant_t* %1 to i64*
  %4 = load i64, i64* %3, align 4
  %5 = trunc i64 %4 to i16
  ret i16 %5
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEE3$_0JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 1072693248
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 1072693248) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 1
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRtEEvOT_(%"class.WTF::Vector.2"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i16* @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPt(%"class.WTF::Vector.2"* %0, i32 %5, i16* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %6, align 2
  store i16 %12, i16* %11, align 2
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i16* @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPt(%"class.WTF::Vector.2"*, i32, i16*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load i16*, i16** %4, align 8
  %6 = icmp ugt i16* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i16, i16* %5, i64 %10
  %12 = icmp ugt i16* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !27

24:                                               ; preds = %13
  %25 = icmp eq i16* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = lshr i64 %27, 1
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = lshr i64 %27, 1
  %36 = ptrtoint i8* %28 to i64
  %37 = load i16*, i16** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne i16* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast i16* %37 to i8*
  br i1 %40, label %42, label %49, !prof !27

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = shl nuw nsw i64 %45, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %28, i8* nonnull align 2 %41, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.2"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint i16* %2 to i64
  %55 = ptrtoint i16* %5 to i64
  %56 = sub i64 %54, %55
  %57 = ashr exact i64 %56, 1
  %58 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !27

68:                                               ; preds = %53
  %69 = icmp eq i16* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeItEEmm(i64 %70) #9
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([62 x i8], [62 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameItEEPKcv, i64 0, i64 0)) #9
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load i16*, i16** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne i16* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast i16* %77 to i8*
  br i1 %80, label %82, label %88, !prof !27

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = shl nuw nsw i64 %84, 1
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 2 %72, i8* nonnull align 2 %81, i64 %85, i1 false) #9
  %86 = bitcast %"class.WTF::Vector.2"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #9
  %90 = bitcast %"class.WTF::Vector.2"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = lshr i64 %71, 1
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to i16*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi i16* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds i16, i16* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi i16* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret i16* %99
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14AppendSlowCaseItEEvOT_(%"class.WTF::Vector.2"*, i16* dereferenceable(2)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call i16* @_ZN3WTF6VectorItLj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPt(%"class.WTF::Vector.2"* %0, i32 %5, i16* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.2", %"class.WTF::Vector.2"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load i16*, i16** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds i16, i16* %8, i64 %10
  %12 = load i16, i16* %6, align 2
  store i16 %12, i16* %11, align 2
  %13 = load i32, i32* %3, align 4
  %14 = add i32 %13, 1
  store i32 %14, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i32 @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEEEFjP9hb_font_tj14hb_direction_tjPjP23hb_ot_math_glyph_part_tEE7RunOnceEPNS0_13BindStateBaseESE_jSF_jSG_SI_"(%"class.base::internal::BindStateBase"* nocapture readnone, %struct.hb_font_t*, i32, i32, i32, i32*, %struct.hb_ot_math_glyph_part_t*) #0 align 2 {
  %8 = alloca i32, align 4
  %9 = bitcast i32* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #9
  store i32 -1431655766, i32* %8, align 4
  %10 = call i32 @hb_ot_math_get_glyph_assembly(%struct.hb_font_t* %1, i32 %2, i32 %3, i32 %4, i32* %5, %struct.hb_ot_math_glyph_part_t* %6, i32* nonnull %8) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #9
  ret i32 %10
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal void @"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEEFNS8_15GlyphPartRecordE23hb_ot_math_glyph_part_tEE3RunEPNS0_13BindStateBaseEOSE_"(%"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* noalias nocapture sret, %"class.base::internal::BindStateBase"* nocapture readnone, %struct.hb_ot_math_glyph_part_t* nocapture readonly dereferenceable(20)) #8 align 2 {
  %4 = getelementptr inbounds %struct.hb_ot_math_glyph_part_t, %struct.hb_ot_math_glyph_part_t* %2, i64 0, i32 0
  %5 = load i32, i32* %4, align 4, !noalias !28
  %6 = getelementptr inbounds %struct.hb_ot_math_glyph_part_t, %struct.hb_ot_math_glyph_part_t* %2, i64 0, i32 1
  %7 = load i32, i32* %6, align 4, !noalias !28
  %8 = getelementptr inbounds %struct.hb_ot_math_glyph_part_t, %struct.hb_ot_math_glyph_part_t* %2, i64 0, i32 2
  %9 = load i32, i32* %8, align 4, !noalias !28
  %10 = getelementptr inbounds %struct.hb_ot_math_glyph_part_t, %struct.hb_ot_math_glyph_part_t* %2, i64 0, i32 3
  %11 = load i32, i32* %10, align 4, !noalias !28
  %12 = getelementptr inbounds %struct.hb_ot_math_glyph_part_t, %struct.hb_ot_math_glyph_part_t* %2, i64 0, i32 4
  %13 = load i32, i32* %12, align 4, !noalias !28
  %14 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %0, i64 0, i32 0
  %15 = trunc i32 %5 to i16
  store i16 %15, i16* %14, align 4, !alias.scope !35
  %16 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %0, i64 0, i32 1
  %17 = sitofp i32 %7 to float
  %18 = fmul float %17, 0x3EF0000000000000
  store float %18, float* %16, align 4, !alias.scope !35
  %19 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %0, i64 0, i32 2
  %20 = sitofp i32 %9 to float
  %21 = fmul float %20, 0x3EF0000000000000
  store float %21, float* %19, align 4, !alias.scope !35
  %22 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %0, i64 0, i32 3
  %23 = sitofp i32 %11 to float
  %24 = fmul float %23, 0x3EF0000000000000
  store float %24, float* %22, align 4, !alias.scope !35
  %25 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %0, i64 0, i32 4
  %26 = trunc i32 %13 to i8
  %27 = and i8 %26, 1
  store i8 %27, i8* %25, align 4, !alias.scope !35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal void @"_ZN4base8internal9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEE7DestroyEPKNS0_13BindStateBaseE"(%"class.base::internal::BindStateBase"*) #0 align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %5, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #10
  br label %5

5:                                                ; preds = %3, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 107269324
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 107269324) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.1, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = mul i64 %0, 20
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRS3_EEvOT_(%"class.WTF::Vector.14"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* dereferenceable(20)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* @_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.14"* %0, i32 %5, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %8, i64 %10
  %12 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %11 to i8*
  %13 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 20, i1 false) #9
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* @_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.14"*, i32, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = load %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"** %4, align 8
  %6 = icmp ugt %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %5, %2
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %5, i64 %10
  %12 = icmp ugt %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %11, %2
  br i1 %12, label %53, label %13

13:                                               ; preds = %7, %3
  %14 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = lshr i32 %15, 2
  %17 = add i32 %15, 1
  %18 = add i32 %17, %16
  %19 = icmp ugt i32 %18, 4
  %20 = select i1 %19, i32 %18, i32 4
  %21 = icmp ugt i32 %20, %1
  %22 = select i1 %21, i32 %20, i32 %1
  %23 = icmp ult i32 %15, %22
  br i1 %23, label %24, label %98, !prof !27

24:                                               ; preds = %13
  %25 = icmp eq %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %5, null
  %26 = zext i32 %22 to i64
  %27 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEmm(i64 %26) #9
  %28 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %27, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEPKcv, i64 0, i64 0)) #9
  br i1 %25, label %29, label %34

29:                                               ; preds = %24
  %30 = ptrtoint i8* %28 to i64
  %31 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = udiv i64 %27, 20
  %33 = trunc i64 %32 to i32
  store i32 %33, i32* %14, align 8
  br label %98

34:                                               ; preds = %24
  %35 = udiv i64 %27, 20
  %36 = ptrtoint i8* %28 to i64
  %37 = load %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"** %4, align 8
  %38 = icmp ne i8* %28, null
  %39 = icmp ne %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %37, null
  %40 = and i1 %38, %39
  %41 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %37 to i8*
  br i1 %40, label %42, label %49, !prof !27

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %44 = load i32, i32* %43, align 4
  %45 = zext i32 %44 to i64
  %46 = mul nuw nsw i64 %45, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %28, i8* nonnull align 4 %41, i64 %46, i1 false) #9
  %47 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %48 = load i8*, i8** %47, align 8
  br label %49

49:                                               ; preds = %42, %34
  %50 = phi i8* [ %48, %42 ], [ %41, %34 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %50) #9
  %51 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %36, i64* %51 monotonic, align 8
  %52 = trunc i64 %35 to i32
  store i32 %52, i32* %14, align 8
  br label %98

53:                                               ; preds = %7
  %54 = ptrtoint %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %2 to i64
  %55 = ptrtoint %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %5 to i64
  %56 = sub i64 %54, %55
  %57 = sdiv exact i64 %56, 20
  %58 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = lshr i32 %59, 2
  %61 = add i32 %59, 1
  %62 = add i32 %61, %60
  %63 = icmp ugt i32 %62, 4
  %64 = select i1 %63, i32 %62, i32 4
  %65 = icmp ugt i32 %64, %1
  %66 = select i1 %65, i32 %64, i32 %1
  %67 = icmp ult i32 %59, %66
  br i1 %67, label %68, label %95, !prof !27

68:                                               ; preds = %53
  %69 = icmp eq %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %5, null
  %70 = zext i32 %66 to i64
  %71 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEmm(i64 %70) #9
  %72 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %71, i8* getelementptr inbounds ([95 x i8], [95 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23OpenTypeMathStretchData15GlyphPartRecordEEEPKcv, i64 0, i64 0)) #9
  %73 = ptrtoint i8* %72 to i64
  br i1 %69, label %74, label %76

74:                                               ; preds = %68
  %75 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %73, i64* %75 monotonic, align 8
  br label %91

76:                                               ; preds = %68
  %77 = load %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"** %4, align 8
  %78 = icmp ne i8* %72, null
  %79 = icmp ne %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %77, null
  %80 = and i1 %78, %79
  %81 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %77 to i8*
  br i1 %80, label %82, label %88, !prof !27

82:                                               ; preds = %76
  %83 = load i32, i32* %8, align 4
  %84 = zext i32 %83 to i64
  %85 = mul nuw nsw i64 %84, 20
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %72, i8* nonnull align 4 %81, i64 %85, i1 false) #9
  %86 = bitcast %"class.WTF::Vector.14"* %0 to i8**
  %87 = load i8*, i8** %86, align 8
  br label %88

88:                                               ; preds = %82, %76
  %89 = phi i8* [ %87, %82 ], [ %81, %76 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %89) #9
  %90 = bitcast %"class.WTF::Vector.14"* %0 to i64*
  store atomic i64 %73, i64* %90 monotonic, align 8
  br label %91

91:                                               ; preds = %88, %74
  %92 = udiv i64 %71, 20
  %93 = trunc i64 %92 to i32
  store i32 %93, i32* %58, align 8
  %94 = bitcast i8* %72 to %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*
  br label %95

95:                                               ; preds = %91, %53
  %96 = phi %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* [ %5, %53 ], [ %94, %91 ]
  %97 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %96, i64 %57
  br label %98

98:                                               ; preds = %49, %29, %13, %95
  %99 = phi %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* [ %97, %95 ], [ %2, %13 ], [ %2, %29 ], [ %2, %49 ]
  ret %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %99
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14AppendSlowCaseIS3_EEvOT_(%"class.WTF::Vector.14"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* dereferenceable(20)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = tail call %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* @_ZN3WTF6VectorIN5blink23OpenTypeMathStretchData15GlyphPartRecordELj0ENS_18PartitionAllocatorEE14ExpandCapacityEjPS3_(%"class.WTF::Vector.14"* %0, i32 %5, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %1)
  %7 = getelementptr inbounds %"class.WTF::Vector.14", %"class.WTF::Vector.14"* %0, i64 0, i32 0, i32 0, i32 0
  %8 = load %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"*, %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"** %7, align 8
  %9 = load i32, i32* %3, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord", %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %8, i64 %10
  %12 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %11 to i8*
  %13 = bitcast %"struct.blink::OpenTypeMathStretchData::GlyphPartRecord"* %6 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %12, i8* align 4 %13, i64 20, i1 false) #9
  %14 = load i32, i32* %3, align 4
  %15 = add i32 %14, 1
  store i32 %15, i32* %3, align 4
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEEEDcOT0_DpOT1_: argument 0"}
!4 = distinct !{!4, !"_ZN4base8internal8BindImplINS_12OnceCallbackEPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEEEDcOT0_DpOT1_"}
!5 = distinct !{!5, !6, !"_ZN4base8BindOnceIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!6 = distinct !{!6, !"_ZN4base8BindOnceIPFjP9hb_font_tj14hb_direction_tjPjP26hb_ot_math_glyph_variant_tEJEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!7 = !{!8, !10}
!8 = distinct !{!8, !9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEE3$_0JEEEDcOT0_DpOT1_: argument 0"}
!9 = distinct !{!9, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEE3$_0JEEEDcOT0_DpOT1_"}
!10 = distinct !{!10, !11, !"_ZN4base13BindRepeatingIZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS1_12HarfBuzzFaceEtNS1_23OpenTypeMathStretchData11StretchAxisEE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!11 = distinct !{!11, !"_ZN4base13BindRepeatingIZN5blink19OpenTypeMathSupport22GetGlyphVariantRecordsEPKNS1_12HarfBuzzFaceEtNS1_23OpenTypeMathStretchData11StretchAxisEE3$_0JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!12 = !{i8 0, i8 2}
!13 = !{!"branch_weights", i32 1, i32 2000}
!14 = !{!15, !17}
!15 = distinct !{!15, !16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEEEDcOT0_DpOT1_: argument 0"}
!16 = distinct !{!16, !"_ZN4base8internal8BindImplINS_12OnceCallbackEZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEEEDcOT0_DpOT1_"}
!17 = distinct !{!17, !18, !"_ZN4base8BindOnceIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS1_12HarfBuzzFaceEtNS1_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!18 = distinct !{!18, !"_ZN4base8BindOnceIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS1_12HarfBuzzFaceEtNS1_23OpenTypeMathStretchData11StretchAxisEPfE3$_1JEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!19 = !{!20, !22}
!20 = distinct !{!20, !21, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEEDcOT0_DpOT1_: argument 0"}
!21 = distinct !{!21, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEEDcOT0_DpOT1_"}
!22 = distinct !{!22, !23, !"_ZN4base13BindRepeatingIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS1_12HarfBuzzFaceEtNS1_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_: argument 0"}
!23 = distinct !{!23, !"_ZN4base13BindRepeatingIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS1_12HarfBuzzFaceEtNS1_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSD_DpOSE_"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZNKR4base17RepeatingCallbackIFN5blink23OpenTypeMathStretchData15GlyphPartRecordE23hb_ot_math_glyph_part_tEE3RunES4_: argument 0"}
!26 = distinct !{!26, !"_ZNKR4base17RepeatingCallbackIFN5blink23OpenTypeMathStretchData15GlyphPartRecordE23hb_ot_math_glyph_part_tEE3RunES4_"}
!27 = !{!"branch_weights", i32 2000, i32 1}
!28 = !{!29, !31, !33}
!29 = distinct !{!29, !30, !"_ZN4base8internal13FunctorTraitsIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEPfE3$_2vE6InvokeIRKSA_J23hb_ot_math_glyph_part_tEEENS7_15GlyphPartRecordEOT_DpOT0_: argument 0"}
!30 = distinct !{!30, !"_ZN4base8internal13FunctorTraitsIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS2_23OpenTypeMathStretchData11StretchAxisEPfE3$_2vE6InvokeIRKSA_J23hb_ot_math_glyph_part_tEEENS7_15GlyphPartRecordEOT_DpOT0_"}
!31 = distinct !{!31, !32, !"_ZN4base8internal12InvokeHelperILb0EN5blink23OpenTypeMathStretchData15GlyphPartRecordEE8MakeItSoIRKZNS2_19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS3_11StretchAxisEPfE3$_2J23hb_ot_math_glyph_part_tEEES4_OT_DpOT0_: argument 0"}
!32 = distinct !{!32, !"_ZN4base8internal12InvokeHelperILb0EN5blink23OpenTypeMathStretchData15GlyphPartRecordEE8MakeItSoIRKZNS2_19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS2_12HarfBuzzFaceEtNS3_11StretchAxisEPfE3$_2J23hb_ot_math_glyph_part_tEEES4_OT_DpOT0_"}
!33 = distinct !{!33, !34, !"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEEFNS8_15GlyphPartRecordE23hb_ot_math_glyph_part_tEE7RunImplIRKSB_RKNSt3__15tupleIJEEEJEEESD_OT_OT0_NSK_16integer_sequenceImJXspT1_EEEEOSE_: argument 0"}
!34 = distinct !{!34, !"_ZN4base8internal7InvokerINS0_9BindStateIZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS3_12HarfBuzzFaceEtNS3_23OpenTypeMathStretchData11StretchAxisEPfE3$_2JEEEFNS8_15GlyphPartRecordE23hb_ot_math_glyph_part_tEE7RunImplIRKSB_RKNSt3__15tupleIJEEEJEEESD_OT_OT0_NSK_16integer_sequenceImJXspT1_EEEEOSE_"}
!35 = !{!36, !29, !31, !33}
!36 = distinct !{!36, !37, !"_ZZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS_12HarfBuzzFaceEtNS_23OpenTypeMathStretchData11StretchAxisEPfENK3$_2clE23hb_ot_math_glyph_part_t: argument 0"}
!37 = distinct !{!37, !"_ZZN5blink19OpenTypeMathSupport19GetGlyphPartRecordsEPKNS_12HarfBuzzFaceEtNS_23OpenTypeMathStretchData11StretchAxisEPfENK3$_2clE23hb_ot_math_glyph_part_t"}
