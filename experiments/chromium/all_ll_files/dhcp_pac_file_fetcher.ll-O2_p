; ModuleID = '../../net/proxy_resolution/dhcp_pac_file_fetcher.cc'
source_filename = "../../net/proxy_resolution/dhcp_pac_file_fetcher.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::DhcpPacFileFetcher" = type { i32 (...)** }
%"class.net::DoNothingDhcpPacFileFetcher" = type { %"class.net::DhcpPacFileFetcher", %class.GURL }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"class.std::__1::basic_string.4" = type { %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__rep" = type { %union.anon.7 }
%union.anon.7 = type { %"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" }
%"struct.std::__1::basic_string<char16_t, std::__1::char_traits<char16_t>, std::__1::allocator<char16_t> >::__long" = type { i16*, i64, i64 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.13" }
%"struct.std::__1::__atomic_base.13" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.net::NetLogWithSource" = type opaque
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZTVN3net18DhcpPacFileFetcherE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DhcpPacFileFetcher"*)* @_ZN3net18DhcpPacFileFetcherD2Ev to i8*), i8* bitcast (void (%"class.net::DhcpPacFileFetcher"*)* @_ZN3net18DhcpPacFileFetcherD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::DhcpPacFileFetcher"*)* @_ZNK3net18DhcpPacFileFetcher14GetFetcherNameEv to i8*)] }, align 8
@_ZTVN3net27DoNothingDhcpPacFileFetcherE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZN3net27DoNothingDhcpPacFileFetcherD2Ev to i8*), i8* bitcast (void (%"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZN3net27DoNothingDhcpPacFileFetcherD0Ev to i8*), i8* bitcast (i32 (%"class.net::DoNothingDhcpPacFileFetcher"*, %"class.std::__1::basic_string.4"*, %"class.base::OnceCallback"*, %"class.net::NetLogWithSource"*, i32)* @_ZN3net27DoNothingDhcpPacFileFetcher5FetchEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN4base12OnceCallbackIFviEEERKNS_16NetLogWithSourceENS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (void (%"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZN3net27DoNothingDhcpPacFileFetcher6CancelEv to i8*), i8* bitcast (void (%"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZN3net27DoNothingDhcpPacFileFetcher10OnShutdownEv to i8*), i8* bitcast (%class.GURL* (%"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZNK3net27DoNothingDhcpPacFileFetcher9GetPacURLEv to i8*), i8* bitcast (void (%"class.std::__1::basic_string"*, %"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZNK3net27DoNothingDhcpPacFileFetcher14GetFetcherNameEv to i8*)] }, align 8
@.str = private unnamed_addr constant [11 x i8] c"do nothing\00", align 1

@_ZN3net18DhcpPacFileFetcherD1Ev = hidden unnamed_addr alias void (%"class.net::DhcpPacFileFetcher"*), void (%"class.net::DhcpPacFileFetcher"*)* @_ZN3net18DhcpPacFileFetcherD2Ev
@_ZN3net27DoNothingDhcpPacFileFetcherC1Ev = hidden unnamed_addr alias void (%"class.net::DoNothingDhcpPacFileFetcher"*), void (%"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZN3net27DoNothingDhcpPacFileFetcherC2Ev
@_ZN3net27DoNothingDhcpPacFileFetcherD1Ev = hidden unnamed_addr alias void (%"class.net::DoNothingDhcpPacFileFetcher"*), void (%"class.net::DoNothingDhcpPacFileFetcher"*)* @_ZN3net27DoNothingDhcpPacFileFetcherD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net18DhcpPacFileFetcher14GetFetcherNameEv(%"class.std::__1::basic_string"* noalias nocapture sret, %"class.net::DhcpPacFileFetcher"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #9
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN3net18DhcpPacFileFetcherC2Ev(%"class.net::DhcpPacFileFetcher"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"class.net::DhcpPacFileFetcher", %"class.net::DhcpPacFileFetcher"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net18DhcpPacFileFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net18DhcpPacFileFetcherD2Ev(%"class.net::DhcpPacFileFetcher"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN3net18DhcpPacFileFetcherD0Ev(%"class.net::DhcpPacFileFetcher"* nocapture readnone) unnamed_addr #3 align 2 {
  tail call void @llvm.trap() #10
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27DoNothingDhcpPacFileFetcherC2Ev(%"class.net::DoNothingDhcpPacFileFetcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DoNothingDhcpPacFileFetcher", %"class.net::DoNothingDhcpPacFileFetcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27DoNothingDhcpPacFileFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DoNothingDhcpPacFileFetcher", %"class.net::DoNothingDhcpPacFileFetcher"* %0, i64 0, i32 1
  tail call void @_ZN4GURLC1Ev(%class.GURL* %3) #9
  ret void
}

declare void @_ZN4GURLC1Ev(%class.GURL*) unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27DoNothingDhcpPacFileFetcherD2Ev(%"class.net::DoNothingDhcpPacFileFetcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DoNothingDhcpPacFileFetcher", %"class.net::DoNothingDhcpPacFileFetcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27DoNothingDhcpPacFileFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DoNothingDhcpPacFileFetcher", %"class.net::DoNothingDhcpPacFileFetcher"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #9
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4GURLD1Ev(%class.GURL*) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net27DoNothingDhcpPacFileFetcherD0Ev(%"class.net::DoNothingDhcpPacFileFetcher"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::DoNothingDhcpPacFileFetcher", %"class.net::DoNothingDhcpPacFileFetcher"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN3net27DoNothingDhcpPacFileFetcherE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::DoNothingDhcpPacFileFetcher", %"class.net::DoNothingDhcpPacFileFetcher"* %0, i64 0, i32 1
  tail call void @_ZN4GURLD1Ev(%class.GURL* %3) #9
  %4 = bitcast %"class.net::DoNothingDhcpPacFileFetcher"* %0 to i8*
  tail call void @_ZdlPv(i8* %4) #11
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net27DoNothingDhcpPacFileFetcher5FetchEPNSt3__112basic_stringIDsNS1_11char_traitsIDsEENS1_9allocatorIDsEEEEN4base12OnceCallbackIFviEEERKNS_16NetLogWithSourceENS_27NetworkTrafficAnnotationTagE(%"class.net::DoNothingDhcpPacFileFetcher"* nocapture readnone, %"class.std::__1::basic_string.4"* nocapture readnone, %"class.base::OnceCallback"* nocapture readnone, %"class.net::NetLogWithSource"* nocapture readnone, i32) unnamed_addr #2 align 2 {
  ret i32 -11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net27DoNothingDhcpPacFileFetcher6CancelEv(%"class.net::DoNothingDhcpPacFileFetcher"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net27DoNothingDhcpPacFileFetcher10OnShutdownEv(%"class.net::DoNothingDhcpPacFileFetcher"* nocapture) unnamed_addr #2 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(120) %class.GURL* @_ZNK3net27DoNothingDhcpPacFileFetcher9GetPacURLEv(%"class.net::DoNothingDhcpPacFileFetcher"* readnone) unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.net::DoNothingDhcpPacFileFetcher", %"class.net::DoNothingDhcpPacFileFetcher"* %0, i64 0, i32 1
  ret %class.GURL* %2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net27DoNothingDhcpPacFileFetcher14GetFetcherNameEv(%"class.std::__1::basic_string"* noalias sret, %"class.net::DoNothingDhcpPacFileFetcher"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  store i8 10, i8* %4, align 1
  %5 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 1 getelementptr inbounds ([11 x i8], [11 x i8]* @.str, i64 0, i64 0), i64 10, i1 false) #9
  %6 = getelementptr inbounds i8, i8* %5, i64 10
  store i8 0, i8* %6, align 2
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #8

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { cold noreturn nounwind }
attributes #5 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { noreturn nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
