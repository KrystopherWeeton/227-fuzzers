; ModuleID = '../../third_party/skia/src/core/SkCpu.cpp'
source_filename = "../../third_party/skia/src/core/SkCpu.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

@_ZN5SkCpu15gCachedFeaturesE = hidden local_unnamed_addr global i32 0, align 4
@_ZZN5SkCpu20CacheRuntimeFeaturesEvE4once = internal global { { { i8 } } } zeroinitializer, align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5SkCpu20CacheRuntimeFeaturesEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN5SkCpu20CacheRuntimeFeaturesEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  switch i8 %1, label %2 [
    i8 2, label %87
    i8 0, label %3
  ]

2:                                                ; preds = %3, %0
  br label %84

3:                                                ; preds = %0
  %4 = cmpxchg i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN5SkCpu20CacheRuntimeFeaturesEvE4once, i64 0, i32 0, i32 0, i32 0), i8 0, i8 1 monotonic monotonic
  %5 = extractvalue { i8, i1 } %4, 1
  br i1 %5, label %6, label %2

6:                                                ; preds = %3
  %7 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 0) #1, !srcloc !2
  %8 = extractvalue { i32, i32, i32, i32 } %7, 0
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,~{dirflag},~{fpsr},~{flags}"(i32 1) #1, !srcloc !3
  %12 = extractvalue { i32, i32, i32, i32 } %11, 2
  %13 = extractvalue { i32, i32, i32, i32 } %11, 3
  %14 = lshr i32 %13, 25
  %15 = and i32 %14, 3
  br label %16

16:                                               ; preds = %10, %6
  %17 = phi i32 [ 0, %6 ], [ %12, %10 ]
  %18 = phi i32 [ 0, %6 ], [ %15, %10 ]
  %19 = shl i32 %17, 2
  %20 = and i32 %19, 4
  %21 = or i32 %20, %18
  %22 = lshr i32 %17, 6
  %23 = and i32 %22, 8
  %24 = or i32 %21, %23
  %25 = lshr i32 %17, 15
  %26 = and i32 %25, 16
  %27 = or i32 %24, %26
  %28 = and i32 %25, 32
  %29 = or i32 %27, %28
  %30 = and i32 %17, 201326592
  %31 = icmp eq i32 %30, 201326592
  br i1 %31, label %32, label %82

32:                                               ; preds = %16
  %33 = tail call { i32, i32 } asm sideeffect "xgetbv", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #2, !srcloc !4
  %34 = extractvalue { i32, i32 } %33, 0
  %35 = and i32 %34, 6
  %36 = icmp eq i32 %35, 6
  br i1 %36, label %37, label %82

37:                                               ; preds = %32
  %38 = lshr i32 %17, 22
  %39 = lshr i32 %17, 4
  %40 = and i32 %39, 256
  %41 = tail call { i32, i32, i32, i32 } asm "  xchgq  %rbx,${1:q}\0A  cpuid\0A  xchgq  %rbx,${1:q}", "={ax},=r,={cx},={dx},0,2,~{dirflag},~{fpsr},~{flags}"(i32 7, i32 0) #1, !srcloc !5
  %42 = extractvalue { i32, i32, i32, i32 } %41, 1
  %43 = shl i32 %42, 4
  %44 = and i32 %43, 512
  %45 = shl i32 %42, 7
  %46 = and i32 %45, 1024
  %47 = shl i32 %42, 3
  %48 = and i32 %47, 2048
  %49 = shl i32 %42, 11
  %50 = and i32 %49, 1048576
  %51 = and i32 %38, 192
  %52 = or i32 %51, %40
  %53 = or i32 %52, %29
  %54 = or i32 %53, %44
  %55 = or i32 %54, %46
  %56 = or i32 %55, %48
  %57 = or i32 %56, %50
  %58 = tail call { i32, i32 } asm sideeffect "xgetbv", "={ax},={dx},{cx},~{dirflag},~{fpsr},~{flags}"(i32 0) #2, !srcloc !4
  %59 = extractvalue { i32, i32 } %58, 0
  %60 = and i32 %59, 224
  %61 = icmp eq i32 %60, 224
  br i1 %61, label %62, label %82

62:                                               ; preds = %37
  %63 = lshr i32 %42, 4
  %64 = lshr i32 %42, 7
  %65 = and i32 %64, 16384
  %66 = lshr i32 %42, 11
  %67 = and i32 %66, 32768
  %68 = and i32 %66, 65536
  %69 = and i32 %66, 131072
  %70 = lshr i32 %42, 12
  %71 = and i32 %70, 262144
  %72 = and i32 %63, 12288
  %73 = or i32 %72, %65
  %74 = or i32 %73, %67
  %75 = or i32 %74, %68
  %76 = or i32 %75, %69
  %77 = or i32 %76, %71
  %78 = or i32 %77, %57
  %79 = icmp slt i32 %42, 0
  %80 = or i32 %78, 524288
  %81 = select i1 %79, i32 %80, i32 %78
  br label %82

82:                                               ; preds = %62, %37, %32, %16
  %83 = phi i32 [ %57, %37 ], [ %29, %32 ], [ %29, %16 ], [ %81, %62 ]
  store i32 %83, i32* @_ZN5SkCpu15gCachedFeaturesE, align 4
  store atomic i8 2, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN5SkCpu20CacheRuntimeFeaturesEvE4once, i64 0, i32 0, i32 0, i32 0) release, align 1
  br label %87

84:                                               ; preds = %2, %84
  %85 = load atomic i8, i8* getelementptr inbounds ({ { { i8 } } }, { { { i8 } } }* @_ZZN5SkCpu20CacheRuntimeFeaturesEvE4once, i64 0, i32 0, i32 0, i32 0) acquire, align 1
  %86 = icmp eq i8 %85, 2
  br i1 %86, label %87, label %84

87:                                               ; preds = %84, %0, %82
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind readnone }
attributes #2 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i32 -2143667856, i32 -2143667820, i32 -2143667796}
!3 = !{i32 -2143667650, i32 -2143667614, i32 -2143667590}
!4 = !{i32 1205}
!5 = !{i32 -2143667206, i32 -2143667170, i32 -2143667146}
