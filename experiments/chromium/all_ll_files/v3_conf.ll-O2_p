; ModuleID = '../../third_party/boringssl/src/crypto/x509v3/v3_conf.c'
source_filename = "../../third_party/boringssl/src/crypto/x509v3/v3_conf.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.X509V3_CONF_METHOD_st = type { i8* (i8*, i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)*, void (i8*, i8*)*, void (i8*, %struct.stack_st_CONF_VALUE*)* }
%struct.stack_st_CONF_VALUE = type opaque
%struct.X509_extension_st = type { %struct.asn1_object_st*, i32, %struct.asn1_string_st* }
%struct.asn1_object_st = type { i8*, i8*, i32, i32, i8*, i32 }
%struct.asn1_string_st = type { i32, i32, i8*, i64 }
%struct.conf_st = type opaque
%struct.v3_ext_ctx = type { i32, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, %struct.X509V3_CONF_METHOD_st*, i8* }
%struct.x509_st = type { %struct.x509_cinf_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, %struct.crypto_ex_data_st, i64, i64, i64, i64, i64, i64, %struct.asn1_string_st*, %struct.AUTHORITY_KEYID_st*, %struct.X509_POLICY_CACHE_st*, %struct.stack_st_DIST_POINT*, %struct.stack_st_GENERAL_NAME*, %struct.NAME_CONSTRAINTS_st*, [20 x i8], %struct.x509_cert_aux_st*, %struct.crypto_buffer_st*, %union.crypto_mutex_st }
%struct.x509_cinf_st = type { %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.X509_val_st*, %struct.X509_name_st*, %struct.X509_pubkey_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.X509_val_st = type opaque
%struct.X509_name_st = type { %struct.stack_st_X509_NAME_ENTRY*, i32, %struct.buf_mem_st*, i8*, i32 }
%struct.stack_st_X509_NAME_ENTRY = type opaque
%struct.buf_mem_st = type { i64, i8*, i64 }
%struct.X509_pubkey_st = type opaque
%struct.stack_st_X509_EXTENSION = type opaque
%struct.ASN1_ENCODING_st = type { i8*, i64, i32, i8 }
%struct.X509_algor_st = type { %struct.asn1_object_st*, %struct.asn1_type_st* }
%struct.asn1_type_st = type { i32, %union.anon }
%union.anon = type { i8* }
%struct.crypto_ex_data_st = type { %struct.stack_st_void* }
%struct.stack_st_void = type opaque
%struct.AUTHORITY_KEYID_st = type { %struct.asn1_string_st*, %struct.stack_st_GENERAL_NAME*, %struct.asn1_string_st* }
%struct.X509_POLICY_CACHE_st = type opaque
%struct.stack_st_DIST_POINT = type opaque
%struct.stack_st_GENERAL_NAME = type opaque
%struct.NAME_CONSTRAINTS_st = type { %struct.stack_st_GENERAL_SUBTREE*, %struct.stack_st_GENERAL_SUBTREE* }
%struct.stack_st_GENERAL_SUBTREE = type opaque
%struct.x509_cert_aux_st = type opaque
%struct.crypto_buffer_st = type opaque
%union.crypto_mutex_st = type { double, [48 x i8] }
%struct.X509_req_st = type opaque
%struct.X509_crl_st = type { %struct.X509_crl_info_st*, %struct.X509_algor_st*, %struct.asn1_string_st*, i32, i32, %struct.AUTHORITY_KEYID_st*, %struct.ISSUING_DIST_POINT_st*, i32, i32, %struct.asn1_string_st*, %struct.asn1_string_st*, [20 x i8], %struct.stack_st_GENERAL_NAMES*, %struct.x509_crl_method_st*, i8* }
%struct.X509_crl_info_st = type { %struct.asn1_string_st*, %struct.X509_algor_st*, %struct.X509_name_st*, %struct.asn1_string_st*, %struct.asn1_string_st*, %struct.stack_st_X509_REVOKED*, %struct.stack_st_X509_EXTENSION*, %struct.ASN1_ENCODING_st }
%struct.stack_st_X509_REVOKED = type opaque
%struct.ISSUING_DIST_POINT_st = type { %struct.DIST_POINT_NAME_st*, i32, i32, %struct.asn1_string_st*, i32, i32 }
%struct.DIST_POINT_NAME_st = type { i32, %union.anon.0, %struct.X509_name_st* }
%union.anon.0 = type { %struct.stack_st_GENERAL_NAME* }
%struct.stack_st_GENERAL_NAMES = type opaque
%struct.x509_crl_method_st = type opaque
%struct.v3_ext_method = type { i32, i32, %struct.ASN1_ITEM_st*, i8* ()*, void (i8*)*, i8* (i8*, i8**, i64)*, i32 (i8*, i8**)*, i8* (%struct.v3_ext_method*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, %struct.stack_st_CONF_VALUE* (%struct.v3_ext_method*, i8*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i32 (%struct.v3_ext_method*, i8*, %struct.bio_st*, i32)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* }
%struct.ASN1_ITEM_st = type opaque
%struct.bio_st = type { %struct.bio_method_st*, i32, i32, i32, i32, i32, i32, i8*, %struct.bio_st*, i64, i64 }
%struct.bio_method_st = type { i32, i8*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*, i32)*, i32 (%struct.bio_st*, i8*)*, i32 (%struct.bio_st*, i8*, i32)*, i64 (%struct.bio_st*, i32, i64, i8*)*, i32 (%struct.bio_st*)*, i32 (%struct.bio_st*)*, i64 (%struct.bio_st*, i32, i64 (%struct.bio_st*, i32, i8*, i32, i64, i64)*)* }
%struct.stack_st = type { i64, i8**, i32, i64, i32 (i8**, i8**)* }
%struct.ASN1_VALUE_st = type opaque
%struct.conf_value_st = type { i8*, i8*, i8* }

@.str = private unnamed_addr constant [56 x i8] c"../../third_party/boringssl/src/crypto/x509v3/v3_conf.c\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"name=\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c", value=\00", align 1
@nconf_method = internal constant %struct.X509V3_CONF_METHOD_st { i8* (i8*, i8*, i8*)* @nconf_get_string, %struct.stack_st_CONF_VALUE* (i8*, i8*)* @nconf_get_section, void (i8*, i8*)* null, void (i8*, %struct.stack_st_CONF_VALUE*)* null }, align 8
@.str.3 = private unnamed_addr constant [10 x i8] c",section=\00", align 1
@.str.4 = private unnamed_addr constant [10 x i8] c"critical,\00", align 1
@.str.5 = private unnamed_addr constant [5 x i8] c"DER:\00", align 1
@.str.6 = private unnamed_addr constant [6 x i8] c"ASN1:\00", align 1
@.str.7 = private unnamed_addr constant [7 x i8] c"value=\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_extension_st* @X509V3_EXT_nconf(%struct.conf_st*, %struct.v3_ext_ctx*, i8*, i8*) local_unnamed_addr #0 {
  %5 = tail call i64 @strlen(i8* %3) #8
  %6 = icmp ult i64 %5, 9
  br i1 %6, label %23, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @strncmp(i8* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, i8* %3, i64 9
  %12 = tail call i16** @__ctype_b_loc() #9
  %13 = load i16*, i16** %12, align 8
  br label %14

14:                                               ; preds = %14, %10
  %15 = phi i8* [ %11, %10 ], [ %22, %14 ]
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %13, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  %22 = getelementptr inbounds i8, i8* %15, i64 1
  br i1 %21, label %23, label %14

23:                                               ; preds = %14, %4, %7
  %24 = phi i8* [ %3, %4 ], [ %3, %7 ], [ %15, %14 ]
  %25 = phi i32 [ 0, %4 ], [ 0, %7 ], [ 1, %14 ]
  %26 = tail call i64 @strlen(i8* %24) #8
  %27 = icmp ugt i64 %26, 3
  br i1 %27, label %28, label %53

28:                                               ; preds = %23
  %29 = tail call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = icmp ugt i64 %26, 4
  br i1 %32, label %33, label %53

33:                                               ; preds = %31
  %34 = tail call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %53

36:                                               ; preds = %33, %28
  %37 = phi i64 [ 4, %28 ], [ 5, %33 ]
  %38 = phi i32 [ 1, %28 ], [ 2, %33 ]
  %39 = getelementptr inbounds i8, i8* %24, i64 %37
  %40 = tail call i16** @__ctype_b_loc() #9
  %41 = load i16*, i16** %40, align 8
  br label %42

42:                                               ; preds = %42, %36
  %43 = phi i8* [ %39, %36 ], [ %50, %42 ]
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds i16, i16* %41, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = and i16 %47, 8192
  %49 = icmp eq i16 %48, 0
  %50 = getelementptr inbounds i8, i8* %43, i64 1
  br i1 %49, label %51, label %42

51:                                               ; preds = %42
  %52 = tail call fastcc %struct.X509_extension_st* @v3_generic_extension(i8* %2, i8* %43, i32 %25, i32 %38, %struct.v3_ext_ctx* %1)
  br label %58

53:                                               ; preds = %33, %31, %23
  %54 = tail call i32 @OBJ_sn2nid(i8* %2) #10
  %55 = tail call fastcc %struct.X509_extension_st* @do_ext_nconf(%struct.conf_st* %0, %struct.v3_ext_ctx* %1, i32 %54, i32 %25, i8* %24)
  %56 = icmp eq %struct.X509_extension_st* %55, null
  br i1 %56, label %57, label %58

57:                                               ; preds = %53
  tail call void @ERR_put_error(i32 20, i32 0, i32 110, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 99) #10
  tail call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %2, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8* %24) #10
  br label %58

58:                                               ; preds = %57, %53, %51
  %59 = phi %struct.X509_extension_st* [ %52, %51 ], [ %55, %53 ], [ null, %57 ]
  ret %struct.X509_extension_st* %59
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.X509_extension_st* @v3_generic_extension(i8*, i8*, i32, i32, %struct.v3_ext_ctx*) unnamed_addr #0 {
  %6 = alloca i8*, align 8
  %7 = alloca i64, align 8
  %8 = bitcast i64* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #10
  store i64 0, i64* %7, align 8
  %9 = tail call %struct.asn1_object_st* @OBJ_txt2obj(i8* %0, i32 0) #10
  %10 = icmp eq %struct.asn1_object_st* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %5
  tail call void @ERR_put_error(i32 20, i32 0, i32 113, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 276) #10
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %0) #10
  br label %39

12:                                               ; preds = %5
  switch i32 %3, label %28 [
    i32 1, label %13
    i32 2, label %15
  ]

13:                                               ; preds = %12
  %14 = call i8* @x509v3_hex_to_bytes(i8* %1, i64* nonnull %7) #10
  br label %25

15:                                               ; preds = %12
  %16 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store i8* null, i8** %6, align 8
  %17 = tail call %struct.asn1_type_st* @ASN1_generate_v3(i8* %1, %struct.v3_ext_ctx* %4) #10
  %18 = icmp eq %struct.asn1_type_st* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %15
  %20 = call i32 @i2d_ASN1_TYPE(%struct.asn1_type_st* nonnull %17, i8** nonnull %6) #10
  %21 = sext i32 %20 to i64
  store i64 %21, i64* %7, align 8
  call void @ASN1_TYPE_free(%struct.asn1_type_st* nonnull %17) #10
  %22 = load i8*, i8** %6, align 8
  br label %23

23:                                               ; preds = %15, %19
  %24 = phi i8* [ %22, %19 ], [ null, %15 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %25

25:                                               ; preds = %23, %13
  %26 = phi i8* [ %14, %13 ], [ %24, %23 ]
  %27 = icmp eq i8* %26, null
  br i1 %27, label %28, label %29

28:                                               ; preds = %12, %25
  call void @ERR_put_error(i32 20, i32 0, i32 116, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 287) #10
  call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.7, i64 0, i64 0), i8* %1) #10
  br label %39

29:                                               ; preds = %25
  %30 = call %struct.asn1_string_st* @ASN1_OCTET_STRING_new() #10
  %31 = icmp eq %struct.asn1_string_st* %30, null
  br i1 %31, label %32, label %33

32:                                               ; preds = %29
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 293) #10
  br label %39

33:                                               ; preds = %29
  %34 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %30, i64 0, i32 2
  store i8* %26, i8** %34, align 8
  %35 = load i64, i64* %7, align 8
  %36 = trunc i64 %35 to i32
  %37 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %30, i64 0, i32 0
  store i32 %36, i32* %37, align 8
  %38 = call %struct.X509_extension_st* @X509_EXTENSION_create_by_OBJ(%struct.X509_extension_st** null, %struct.asn1_object_st* nonnull %9, i32 %2, %struct.asn1_string_st* nonnull %30) #10
  br label %39

39:                                               ; preds = %33, %32, %28, %11
  %40 = phi i8* [ null, %28 ], [ null, %33 ], [ %26, %32 ], [ null, %11 ]
  %41 = phi %struct.asn1_string_st* [ null, %28 ], [ %30, %33 ], [ null, %32 ], [ null, %11 ]
  %42 = phi %struct.X509_extension_st* [ null, %28 ], [ %38, %33 ], [ null, %32 ], [ null, %11 ]
  call void @ASN1_OBJECT_free(%struct.asn1_object_st* %9) #10
  call void @ASN1_OCTET_STRING_free(%struct.asn1_string_st* %41) #10
  %43 = icmp eq i8* %40, null
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @OPENSSL_free(i8* nonnull %40) #10
  br label %45

45:                                               ; preds = %39, %44
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #10
  ret %struct.X509_extension_st* %42
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.X509_extension_st* @do_ext_nconf(%struct.conf_st*, %struct.v3_ext_ctx*, i32, i32, i8*) unnamed_addr #0 {
  %6 = icmp eq i32 %2, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @ERR_put_error(i32 20, i32 0, i32 158, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 129) #10
  br label %81

8:                                                ; preds = %5
  %9 = tail call %struct.v3_ext_method* @X509V3_EXT_get_nid(i32 %2) #10
  %10 = icmp eq %struct.v3_ext_method* %9, null
  br i1 %10, label %11, label %12

11:                                               ; preds = %8
  tail call void @ERR_put_error(i32 20, i32 0, i32 157, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 133) #10
  br label %81

12:                                               ; preds = %8
  %13 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %9, i64 0, i32 10
  %14 = load i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)** %13, align 8
  %15 = icmp eq i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)* %14, null
  br i1 %15, label %45, label %16

16:                                               ; preds = %12
  %17 = load i8, i8* %4, align 1
  %18 = icmp eq i8 %17, 64
  br i1 %18, label %19, label %22

19:                                               ; preds = %16
  %20 = getelementptr inbounds i8, i8* %4, i64 1
  %21 = tail call %struct.stack_st_CONF_VALUE* @NCONF_get_section(%struct.conf_st* %0, i8* %20) #10
  br label %24

22:                                               ; preds = %16
  %23 = tail call %struct.stack_st_CONF_VALUE* @X509V3_parse_list(i8* %4) #10
  br label %24

24:                                               ; preds = %22, %19
  %25 = phi %struct.stack_st_CONF_VALUE* [ %21, %19 ], [ %23, %22 ]
  %26 = icmp eq %struct.stack_st_CONF_VALUE* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %24
  %28 = bitcast %struct.stack_st_CONF_VALUE* %25 to %struct.stack_st*
  %29 = tail call i64 @sk_num(%struct.stack_st* nonnull %28) #10
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %31, label %37

31:                                               ; preds = %27, %24
  tail call void @ERR_put_error(i32 20, i32 0, i32 121, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 143) #10
  %32 = tail call i8* @OBJ_nid2sn(i32 %2) #10
  tail call void (i32, ...) @ERR_add_error_data(i32 4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %32, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.3, i64 0, i64 0), i8* %4) #10
  %33 = load i8, i8* %4, align 1
  %34 = icmp eq i8 %33, 64
  br i1 %34, label %81, label %35

35:                                               ; preds = %31
  %36 = bitcast %struct.stack_st_CONF_VALUE* %25 to %struct.stack_st*
  tail call void @sk_pop_free_ex(%struct.stack_st* %36, void (void (i8*)*, i8*)* nonnull @sk_CONF_VALUE_call_free_func, void (i8*)* bitcast (void (%struct.conf_value_st*)* @X509V3_conf_free to void (i8*)*)) #10
  br label %81

37:                                               ; preds = %27
  %38 = load i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, %struct.stack_st_CONF_VALUE*)** %13, align 8
  %39 = tail call i8* %38(%struct.v3_ext_method* nonnull %9, %struct.v3_ext_ctx* %1, %struct.stack_st_CONF_VALUE* nonnull %25) #10
  %40 = load i8, i8* %4, align 1
  %41 = icmp eq i8 %40, 64
  br i1 %41, label %43, label %42

42:                                               ; preds = %37
  tail call void @sk_pop_free_ex(%struct.stack_st* nonnull %28, void (void (i8*)*, i8*)* nonnull @sk_CONF_VALUE_call_free_func, void (i8*)* bitcast (void (%struct.conf_value_st*)* @X509V3_conf_free to void (i8*)*)) #10
  br label %43

43:                                               ; preds = %37, %42
  %44 = icmp eq i8* %39, null
  br i1 %44, label %81, label %70

45:                                               ; preds = %12
  %46 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %9, i64 0, i32 8
  %47 = load i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)** %46, align 8
  %48 = icmp eq i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* %47, null
  br i1 %48, label %52, label %49

49:                                               ; preds = %45
  %50 = tail call i8* %47(%struct.v3_ext_method* nonnull %9, %struct.v3_ext_ctx* %1, i8* %4) #10
  %51 = icmp eq i8* %50, null
  br i1 %51, label %81, label %70

52:                                               ; preds = %45
  %53 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %9, i64 0, i32 12
  %54 = load i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)*, i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)** %53, align 8
  %55 = icmp eq i8* (%struct.v3_ext_method*, %struct.v3_ext_ctx*, i8*)* %54, null
  br i1 %55, label %68, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %1, i64 0, i32 6
  %58 = load i8*, i8** %57, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %56
  %61 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %1, i64 0, i32 5
  %62 = load %struct.X509V3_CONF_METHOD_st*, %struct.X509V3_CONF_METHOD_st** %61, align 8
  %63 = icmp eq %struct.X509V3_CONF_METHOD_st* %62, null
  br i1 %63, label %64, label %65

64:                                               ; preds = %60, %56
  tail call void @ERR_put_error(i32 20, i32 0, i32 139, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 160) #10
  br label %81

65:                                               ; preds = %60
  %66 = tail call i8* %54(%struct.v3_ext_method* nonnull %9, %struct.v3_ext_ctx* %1, i8* %4) #10
  %67 = icmp eq i8* %66, null
  br i1 %67, label %81, label %70

68:                                               ; preds = %52
  tail call void @ERR_put_error(i32 20, i32 0, i32 115, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 166) #10
  %69 = tail call i8* @OBJ_nid2sn(i32 %2) #10
  tail call void (i32, ...) @ERR_add_error_data(i32 2, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8* %69) #10
  br label %81

70:                                               ; preds = %43, %49, %65
  %71 = phi i8* [ %39, %43 ], [ %50, %49 ], [ %66, %65 ]
  %72 = tail call fastcc %struct.X509_extension_st* @do_ext_i2d(%struct.v3_ext_method* nonnull %9, i32 %2, i32 %3, i8* nonnull %71)
  %73 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %9, i64 0, i32 2
  %74 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %73, align 8
  %75 = icmp eq %struct.ASN1_ITEM_st* %74, null
  br i1 %75, label %78, label %76

76:                                               ; preds = %70
  %77 = bitcast i8* %71 to %struct.ASN1_VALUE_st*
  tail call void @ASN1_item_free(%struct.ASN1_VALUE_st* %77, %struct.ASN1_ITEM_st* nonnull %74) #10
  br label %81

78:                                               ; preds = %70
  %79 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %9, i64 0, i32 4
  %80 = load void (i8*)*, void (i8*)** %79, align 8
  tail call void %80(i8* nonnull %71) #10
  br label %81

81:                                               ; preds = %76, %78, %65, %49, %43, %35, %31, %68, %64, %11, %7
  %82 = phi %struct.X509_extension_st* [ null, %7 ], [ null, %64 ], [ null, %68 ], [ null, %11 ], [ null, %31 ], [ null, %35 ], [ null, %43 ], [ null, %49 ], [ null, %65 ], [ %72, %78 ], [ %72, %76 ]
  ret %struct.X509_extension_st* %82
}

declare i32 @OBJ_sn2nid(i8*) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_extension_st* @X509V3_EXT_nconf_nid(%struct.conf_st*, %struct.v3_ext_ctx*, i32, i8*) local_unnamed_addr #0 {
  %5 = tail call i64 @strlen(i8* %3) #8
  %6 = icmp ult i64 %5, 9
  br i1 %6, label %23, label %7

7:                                                ; preds = %4
  %8 = tail call i32 @strncmp(i8* %3, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.4, i64 0, i64 0), i64 9) #8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %23

10:                                               ; preds = %7
  %11 = getelementptr inbounds i8, i8* %3, i64 9
  %12 = tail call i16** @__ctype_b_loc() #9
  %13 = load i16*, i16** %12, align 8
  br label %14

14:                                               ; preds = %14, %10
  %15 = phi i8* [ %11, %10 ], [ %22, %14 ]
  %16 = load i8, i8* %15, align 1
  %17 = zext i8 %16 to i64
  %18 = getelementptr inbounds i16, i16* %13, i64 %17
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 8192
  %21 = icmp eq i16 %20, 0
  %22 = getelementptr inbounds i8, i8* %15, i64 1
  br i1 %21, label %23, label %14

23:                                               ; preds = %14, %4, %7
  %24 = phi i8* [ %3, %4 ], [ %3, %7 ], [ %15, %14 ]
  %25 = phi i32 [ 0, %4 ], [ 0, %7 ], [ 1, %14 ]
  %26 = tail call i64 @strlen(i8* %24) #8
  %27 = icmp ugt i64 %26, 3
  br i1 %27, label %28, label %54

28:                                               ; preds = %23
  %29 = tail call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.5, i64 0, i64 0), i64 4) #8
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %28
  %32 = icmp ugt i64 %26, 4
  br i1 %32, label %33, label %54

33:                                               ; preds = %31
  %34 = tail call i32 @strncmp(i8* %24, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.6, i64 0, i64 0), i64 5) #8
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %54

36:                                               ; preds = %33, %28
  %37 = phi i64 [ 4, %28 ], [ 5, %33 ]
  %38 = phi i32 [ 1, %28 ], [ 2, %33 ]
  %39 = getelementptr inbounds i8, i8* %24, i64 %37
  %40 = tail call i16** @__ctype_b_loc() #9
  %41 = load i16*, i16** %40, align 8
  br label %42

42:                                               ; preds = %42, %36
  %43 = phi i8* [ %39, %36 ], [ %50, %42 ]
  %44 = load i8, i8* %43, align 1
  %45 = zext i8 %44 to i64
  %46 = getelementptr inbounds i16, i16* %41, i64 %45
  %47 = load i16, i16* %46, align 2
  %48 = and i16 %47, 8192
  %49 = icmp eq i16 %48, 0
  %50 = getelementptr inbounds i8, i8* %43, i64 1
  br i1 %49, label %51, label %42

51:                                               ; preds = %42
  %52 = tail call i8* @OBJ_nid2sn(i32 %2) #10
  %53 = tail call fastcc %struct.X509_extension_st* @v3_generic_extension(i8* %52, i8* %43, i32 %25, i32 %38, %struct.v3_ext_ctx* %1)
  br label %56

54:                                               ; preds = %33, %31, %23
  %55 = tail call fastcc %struct.X509_extension_st* @do_ext_nconf(%struct.conf_st* %0, %struct.v3_ext_ctx* %1, i32 %2, i32 %25, i8* %24)
  br label %56

56:                                               ; preds = %54, %51
  %57 = phi %struct.X509_extension_st* [ %53, %51 ], [ %55, %54 ]
  ret %struct.X509_extension_st* %57
}

declare i8* @OBJ_nid2sn(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden %struct.X509_extension_st* @X509V3_EXT_i2d(i32, i32, i8*) local_unnamed_addr #0 {
  %4 = tail call %struct.v3_ext_method* @X509V3_EXT_get_nid(i32 %0) #10
  %5 = icmp eq %struct.v3_ext_method* %4, null
  br i1 %5, label %6, label %7

6:                                                ; preds = %3
  tail call void @ERR_put_error(i32 20, i32 0, i32 157, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 226) #10
  br label %9

7:                                                ; preds = %3
  %8 = tail call fastcc %struct.X509_extension_st* @do_ext_i2d(%struct.v3_ext_method* nonnull %4, i32 %0, i32 %1, i8* %2)
  br label %9

9:                                                ; preds = %7, %6
  %10 = phi %struct.X509_extension_st* [ %8, %7 ], [ null, %6 ]
  ret %struct.X509_extension_st* %10
}

declare %struct.v3_ext_method* @X509V3_EXT_get_nid(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct.X509_extension_st* @do_ext_i2d(%struct.v3_ext_method* nocapture readonly, i32, i32, i8*) unnamed_addr #0 {
  %5 = alloca i8*, align 8
  %6 = alloca i8*, align 8
  %7 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %8 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %0, i64 0, i32 2
  %9 = load %struct.ASN1_ITEM_st*, %struct.ASN1_ITEM_st** %8, align 8
  %10 = icmp eq %struct.ASN1_ITEM_st* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %4
  store i8* null, i8** %5, align 8
  %12 = bitcast i8* %3 to %struct.ASN1_VALUE_st*
  %13 = call i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st* %12, i8** nonnull %5, %struct.ASN1_ITEM_st* nonnull %9) #10
  %14 = icmp slt i32 %13, 0
  br i1 %14, label %40, label %27

15:                                               ; preds = %4
  %16 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #10
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %17 = getelementptr inbounds %struct.v3_ext_method, %struct.v3_ext_method* %0, i64 0, i32 6
  %18 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %17, align 8
  %19 = tail call i32 %18(i8* %3, i8** null) #10
  %20 = sext i32 %19 to i64
  %21 = tail call i8* @OPENSSL_malloc(i64 %20) #10
  store i8* %21, i8** %5, align 8
  %22 = icmp eq i8* %21, null
  br i1 %22, label %26, label %23

23:                                               ; preds = %15
  store i8* %21, i8** %6, align 8
  %24 = load i32 (i8*, i8**)*, i32 (i8*, i8**)** %17, align 8
  %25 = call i32 %24(i8* %3, i8** nonnull %6) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %27

26:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #10
  br label %40

27:                                               ; preds = %23, %11
  %28 = phi i32 [ %13, %11 ], [ %19, %23 ]
  %29 = call %struct.asn1_string_st* @ASN1_OCTET_STRING_new() #10
  %30 = icmp eq %struct.asn1_string_st* %29, null
  br i1 %30, label %40, label %31

31:                                               ; preds = %27
  %32 = bitcast i8** %5 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %29, i64 0, i32 2
  %35 = bitcast i8** %34 to i64*
  store i64 %33, i64* %35, align 8
  %36 = getelementptr inbounds %struct.asn1_string_st, %struct.asn1_string_st* %29, i64 0, i32 0
  store i32 %28, i32* %36, align 8
  %37 = call %struct.X509_extension_st* @X509_EXTENSION_create_by_NID(%struct.X509_extension_st** null, i32 %1, i32 %2, %struct.asn1_string_st* nonnull %29) #10
  %38 = icmp eq %struct.X509_extension_st* %37, null
  br i1 %38, label %40, label %39

39:                                               ; preds = %31
  call void @ASN1_OCTET_STRING_free(%struct.asn1_string_st* nonnull %29) #10
  br label %41

40:                                               ; preds = %26, %31, %27, %11
  call void @ERR_put_error(i32 20, i32 0, i32 65, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 215) #10
  br label %41

41:                                               ; preds = %40, %39
  %42 = phi %struct.X509_extension_st* [ null, %40 ], [ %37, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #10
  ret %struct.X509_extension_st* %42
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509V3_EXT_add_nconf_sk(%struct.conf_st*, %struct.v3_ext_ctx*, i8*, %struct.stack_st_X509_EXTENSION**) local_unnamed_addr #0 {
  %5 = tail call %struct.stack_st_CONF_VALUE* @NCONF_get_section(%struct.conf_st* %0, i8* %2) #10
  %6 = icmp eq %struct.stack_st_CONF_VALUE* %5, null
  br i1 %6, label %31, label %7

7:                                                ; preds = %4
  %8 = bitcast %struct.stack_st_CONF_VALUE* %5 to %struct.stack_st*
  %9 = tail call i64 @sk_num(%struct.stack_st* nonnull %8) #10
  %10 = icmp eq i64 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %7
  %12 = icmp eq %struct.stack_st_X509_EXTENSION** %3, null
  br label %13

13:                                               ; preds = %11, %27
  %14 = phi i64 [ 0, %11 ], [ %28, %27 ]
  %15 = tail call i8* @sk_value(%struct.stack_st* nonnull %8, i64 %14) #10
  %16 = getelementptr inbounds i8, i8* %15, i64 8
  %17 = bitcast i8* %16 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = getelementptr inbounds i8, i8* %15, i64 16
  %20 = bitcast i8* %19 to i8**
  %21 = load i8*, i8** %20, align 8
  %22 = tail call %struct.X509_extension_st* @X509V3_EXT_nconf(%struct.conf_st* %0, %struct.v3_ext_ctx* %1, i8* %18, i8* %21)
  %23 = icmp eq %struct.X509_extension_st* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %13
  br i1 %12, label %27, label %25

25:                                               ; preds = %24
  %26 = tail call %struct.stack_st_X509_EXTENSION* @X509v3_add_ext(%struct.stack_st_X509_EXTENSION** nonnull %3, %struct.X509_extension_st* nonnull %22, i32 -1) #10
  br label %27

27:                                               ; preds = %24, %25
  tail call void @X509_EXTENSION_free(%struct.X509_extension_st* nonnull %22) #10
  %28 = add nuw i64 %14, 1
  %29 = tail call i64 @sk_num(%struct.stack_st* nonnull %8) #10
  %30 = icmp ult i64 %28, %29
  br i1 %30, label %13, label %31

31:                                               ; preds = %13, %27, %7, %4
  %32 = phi i32 [ 0, %4 ], [ 1, %7 ], [ 0, %13 ], [ 1, %27 ]
  ret i32 %32
}

declare %struct.stack_st_CONF_VALUE* @NCONF_get_section(%struct.conf_st*, i8*) local_unnamed_addr #2

declare %struct.stack_st_X509_EXTENSION* @X509v3_add_ext(%struct.stack_st_X509_EXTENSION**, %struct.X509_extension_st*, i32) local_unnamed_addr #2

declare void @X509_EXTENSION_free(%struct.X509_extension_st*) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509V3_EXT_add_nconf(%struct.conf_st*, %struct.v3_ext_ctx*, i8*, %struct.x509_st* readonly) local_unnamed_addr #0 {
  %5 = icmp eq %struct.x509_st* %3, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.x509_st, %struct.x509_st* %3, i64 0, i32 0
  %8 = load %struct.x509_cinf_st*, %struct.x509_cinf_st** %7, align 8
  %9 = getelementptr inbounds %struct.x509_cinf_st, %struct.x509_cinf_st* %8, i64 0, i32 9
  br label %10

10:                                               ; preds = %4, %6
  %11 = phi %struct.stack_st_X509_EXTENSION** [ %9, %6 ], [ null, %4 ]
  %12 = tail call i32 @X509V3_EXT_add_nconf_sk(%struct.conf_st* %0, %struct.v3_ext_ctx* %1, i8* %2, %struct.stack_st_X509_EXTENSION** %11)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509V3_EXT_CRL_add_nconf(%struct.conf_st*, %struct.v3_ext_ctx*, i8*, %struct.X509_crl_st* readonly) local_unnamed_addr #0 {
  %5 = icmp eq %struct.X509_crl_st* %3, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %4
  %7 = getelementptr inbounds %struct.X509_crl_st, %struct.X509_crl_st* %3, i64 0, i32 0
  %8 = load %struct.X509_crl_info_st*, %struct.X509_crl_info_st** %7, align 8
  %9 = getelementptr inbounds %struct.X509_crl_info_st, %struct.X509_crl_info_st* %8, i64 0, i32 6
  br label %10

10:                                               ; preds = %4, %6
  %11 = phi %struct.stack_st_X509_EXTENSION** [ %9, %6 ], [ null, %4 ]
  %12 = tail call i32 @X509V3_EXT_add_nconf_sk(%struct.conf_st* %0, %struct.v3_ext_ctx* %1, i8* %2, %struct.stack_st_X509_EXTENSION** %11)
  ret i32 %12
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @X509V3_EXT_REQ_add_nconf(%struct.conf_st*, %struct.v3_ext_ctx*, i8*, %struct.X509_req_st*) local_unnamed_addr #0 {
  %5 = alloca %struct.stack_st_X509_EXTENSION*, align 8
  %6 = bitcast %struct.stack_st_X509_EXTENSION** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #10
  store %struct.stack_st_X509_EXTENSION* null, %struct.stack_st_X509_EXTENSION** %5, align 8
  %7 = icmp eq %struct.X509_req_st* %3, null
  %8 = select i1 %7, %struct.stack_st_X509_EXTENSION** null, %struct.stack_st_X509_EXTENSION** %5
  %9 = call i32 @X509V3_EXT_add_nconf_sk(%struct.conf_st* %0, %struct.v3_ext_ctx* %1, i8* %2, %struct.stack_st_X509_EXTENSION** %8)
  %10 = icmp ne i32 %9, 0
  %11 = icmp ne %struct.stack_st_X509_EXTENSION** %8, null
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %18

13:                                               ; preds = %4
  %14 = load %struct.stack_st_X509_EXTENSION*, %struct.stack_st_X509_EXTENSION** %5, align 8
  %15 = call i32 @X509_REQ_add_extensions(%struct.X509_req_st* %3, %struct.stack_st_X509_EXTENSION* %14) #10
  %16 = bitcast %struct.stack_st_X509_EXTENSION** %5 to %struct.stack_st**
  %17 = load %struct.stack_st*, %struct.stack_st** %16, align 8
  call void @sk_pop_free_ex(%struct.stack_st* %17, void (void (i8*)*, i8*)* nonnull @sk_X509_EXTENSION_call_free_func, void (i8*)* bitcast (void (%struct.X509_extension_st*)* @X509_EXTENSION_free to void (i8*)*)) #10
  br label %18

18:                                               ; preds = %4, %13
  %19 = phi i32 [ %15, %13 ], [ %9, %4 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #10
  ret i32 %19
}

declare i32 @X509_REQ_add_extensions(%struct.X509_req_st*, %struct.stack_st_X509_EXTENSION*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i8* @X509V3_get_string(%struct.v3_ext_ctx* nocapture readonly, i8*, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 6
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %15, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 5
  %9 = load %struct.X509V3_CONF_METHOD_st*, %struct.X509V3_CONF_METHOD_st** %8, align 8
  %10 = icmp eq %struct.X509V3_CONF_METHOD_st* %9, null
  br i1 %10, label %15, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %struct.X509V3_CONF_METHOD_st, %struct.X509V3_CONF_METHOD_st* %9, i64 0, i32 0
  %13 = load i8* (i8*, i8*, i8*)*, i8* (i8*, i8*, i8*)** %12, align 8
  %14 = icmp eq i8* (i8*, i8*, i8*)* %13, null
  br i1 %14, label %15, label %16

15:                                               ; preds = %11, %7, %3
  tail call void @ERR_put_error(i32 20, i32 0, i32 147, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 396) #10
  br label %18

16:                                               ; preds = %11
  %17 = tail call i8* %13(i8* nonnull %5, i8* %1, i8* %2) #10
  br label %18

18:                                               ; preds = %16, %15
  %19 = phi i8* [ %17, %16 ], [ null, %15 ]
  ret i8* %19
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct.stack_st_CONF_VALUE* @X509V3_get_section(%struct.v3_ext_ctx* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 6
  %4 = load i8*, i8** %3, align 8
  %5 = icmp eq i8* %4, null
  br i1 %5, label %14, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 5
  %8 = load %struct.X509V3_CONF_METHOD_st*, %struct.X509V3_CONF_METHOD_st** %7, align 8
  %9 = icmp eq %struct.X509V3_CONF_METHOD_st* %8, null
  br i1 %9, label %14, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds %struct.X509V3_CONF_METHOD_st, %struct.X509V3_CONF_METHOD_st* %8, i64 0, i32 1
  %12 = load %struct.stack_st_CONF_VALUE* (i8*, i8*)*, %struct.stack_st_CONF_VALUE* (i8*, i8*)** %11, align 8
  %13 = icmp eq %struct.stack_st_CONF_VALUE* (i8*, i8*)* %12, null
  br i1 %13, label %14, label %15

14:                                               ; preds = %10, %6, %2
  tail call void @ERR_put_error(i32 20, i32 0, i32 147, i8* getelementptr inbounds ([56 x i8], [56 x i8]* @.str, i64 0, i64 0), i32 407) #10
  br label %17

15:                                               ; preds = %10
  %16 = tail call %struct.stack_st_CONF_VALUE* %12(i8* nonnull %4, i8* %1) #10
  br label %17

17:                                               ; preds = %15, %14
  %18 = phi %struct.stack_st_CONF_VALUE* [ %16, %15 ], [ null, %14 ]
  ret %struct.stack_st_CONF_VALUE* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509V3_string_free(%struct.v3_ext_ctx* nocapture readonly, i8*) local_unnamed_addr #0 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 5
  %6 = load %struct.X509V3_CONF_METHOD_st*, %struct.X509V3_CONF_METHOD_st** %5, align 8
  %7 = getelementptr inbounds %struct.X509V3_CONF_METHOD_st, %struct.X509V3_CONF_METHOD_st* %6, i64 0, i32 2
  %8 = load void (i8*, i8*)*, void (i8*, i8*)** %7, align 8
  %9 = icmp eq void (i8*, i8*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 6
  %12 = load i8*, i8** %11, align 8
  tail call void %8(i8* %12, i8* nonnull %1) #10
  br label %13

13:                                               ; preds = %4, %2, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @X509V3_section_free(%struct.v3_ext_ctx* nocapture readonly, %struct.stack_st_CONF_VALUE*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.stack_st_CONF_VALUE* %1, null
  br i1 %3, label %13, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 5
  %6 = load %struct.X509V3_CONF_METHOD_st*, %struct.X509V3_CONF_METHOD_st** %5, align 8
  %7 = getelementptr inbounds %struct.X509V3_CONF_METHOD_st, %struct.X509V3_CONF_METHOD_st* %6, i64 0, i32 3
  %8 = load void (i8*, %struct.stack_st_CONF_VALUE*)*, void (i8*, %struct.stack_st_CONF_VALUE*)** %7, align 8
  %9 = icmp eq void (i8*, %struct.stack_st_CONF_VALUE*)* %8, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 6
  %12 = load i8*, i8** %11, align 8
  tail call void %8(i8* %12, %struct.stack_st_CONF_VALUE* nonnull %1) #10
  br label %13

13:                                               ; preds = %4, %2, %10
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509V3_set_nconf(%struct.v3_ext_ctx* nocapture, %struct.conf_st*) local_unnamed_addr #3 {
  %3 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 5
  store %struct.X509V3_CONF_METHOD_st* @nconf_method, %struct.X509V3_CONF_METHOD_st** %3, align 8
  %4 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 6
  %5 = bitcast i8** %4 to %struct.conf_st**
  store %struct.conf_st* %1, %struct.conf_st** %5, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @X509V3_set_ctx(%struct.v3_ext_ctx* nocapture, %struct.x509_st*, %struct.x509_st*, %struct.X509_req_st*, %struct.X509_crl_st*, i32) local_unnamed_addr #3 {
  %7 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 1
  store %struct.x509_st* %1, %struct.x509_st** %7, align 8
  %8 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 2
  store %struct.x509_st* %2, %struct.x509_st** %8, align 8
  %9 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 4
  store %struct.X509_crl_st* %4, %struct.X509_crl_st** %9, align 8
  %10 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 3
  store %struct.X509_req_st* %3, %struct.X509_req_st** %10, align 8
  %11 = getelementptr inbounds %struct.v3_ext_ctx, %struct.v3_ext_ctx* %0, i64 0, i32 0
  store i32 %5, i32* %11, align 8
  ret void
}

declare %struct.stack_st_CONF_VALUE* @X509V3_parse_list(i8*) local_unnamed_addr #2

declare void @X509V3_conf_free(%struct.conf_value_st*) #2

declare void @ASN1_item_free(%struct.ASN1_VALUE_st*, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare void @sk_pop_free_ex(%struct.stack_st*, void (void (i8*)*, i8*)*, void (i8*)*) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_CONF_VALUE_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.conf_value_st*)*
  %4 = bitcast i8* %1 to %struct.conf_value_st*
  tail call void %3(%struct.conf_value_st* %4) #10
  ret void
}

declare i32 @ASN1_item_i2d(%struct.ASN1_VALUE_st*, i8**, %struct.ASN1_ITEM_st*) local_unnamed_addr #2

declare i8* @OPENSSL_malloc(i64) local_unnamed_addr #2

declare %struct.asn1_string_st* @ASN1_OCTET_STRING_new() local_unnamed_addr #2

declare %struct.X509_extension_st* @X509_EXTENSION_create_by_NID(%struct.X509_extension_st**, i32, i32, %struct.asn1_string_st*) local_unnamed_addr #2

declare void @ASN1_OCTET_STRING_free(%struct.asn1_string_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree nounwind readonly
declare i32 @strncmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #6

; Function Attrs: nounwind readnone
declare i16** @__ctype_b_loc() local_unnamed_addr #7

declare %struct.asn1_object_st* @OBJ_txt2obj(i8*, i32) local_unnamed_addr #2

declare i8* @x509v3_hex_to_bytes(i8*, i64*) local_unnamed_addr #2

declare %struct.X509_extension_st* @X509_EXTENSION_create_by_OBJ(%struct.X509_extension_st**, %struct.asn1_object_st*, i32, %struct.asn1_string_st*) local_unnamed_addr #2

declare void @ASN1_OBJECT_free(%struct.asn1_object_st*) local_unnamed_addr #2

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare %struct.asn1_type_st* @ASN1_generate_v3(i8*, %struct.v3_ext_ctx*) local_unnamed_addr #2

declare i32 @i2d_ASN1_TYPE(%struct.asn1_type_st*, i8**) local_unnamed_addr #2

declare void @ASN1_TYPE_free(%struct.asn1_type_st*) local_unnamed_addr #2

declare i64 @sk_num(%struct.stack_st*) local_unnamed_addr #2

declare i8* @sk_value(%struct.stack_st*, i64) local_unnamed_addr #2

; Function Attrs: inlinehint nounwind ssp uwtable
define internal void @sk_X509_EXTENSION_call_free_func(void (i8*)* nocapture, i8*) #4 {
  %3 = bitcast void (i8*)* %0 to void (%struct.X509_extension_st*)*
  %4 = bitcast i8* %1 to %struct.X509_extension_st*
  tail call void %3(%struct.X509_extension_st* %4) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define internal i8* @nconf_get_string(i8*, i8*, i8*) #0 {
  %4 = bitcast i8* %0 to %struct.conf_st*
  %5 = tail call i8* @NCONF_get_string(%struct.conf_st* %4, i8* %1, i8* %2) #10
  ret i8* %5
}

; Function Attrs: nounwind ssp uwtable
define internal %struct.stack_st_CONF_VALUE* @nconf_get_section(i8*, i8*) #0 {
  %3 = bitcast i8* %0 to %struct.conf_st*
  %4 = tail call %struct.stack_st_CONF_VALUE* @NCONF_get_section(%struct.conf_st* %3, i8* %1) #10
  ret %struct.stack_st_CONF_VALUE* %4
}

declare i8* @NCONF_get_string(%struct.conf_st*, i8*, i8*) local_unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind readnone "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind readonly }
attributes #9 = { nounwind readnone }
attributes #10 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
