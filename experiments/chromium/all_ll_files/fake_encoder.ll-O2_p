; ModuleID = '../../third_party/webrtc/test/fake_encoder.cc'
source_filename = "../../third_party/webrtc/test/fake_encoder.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%union.anon.11 = type { i32 }
%"class.webrtc::DataRate" = type { %"class.webrtc::rtc_units_impl::RelativeUnit" }
%"class.webrtc::rtc_units_impl::RelativeUnit" = type { %"class.webrtc::rtc_units_impl::UnitBase" }
%"class.webrtc::rtc_units_impl::UnitBase" = type { i64 }
%"struct.webrtc::VideoPlayoutDelay" = type { i32, i32 }
%"class.rtc::scoped_refptr.72" = type { %"class.webrtc::EncodedImageBufferInterface"* }
%"class.webrtc::EncodedImageBufferInterface" = type { %"class.rtc::RefCountInterface" }
%"class.rtc::RefCountInterface" = type { i32 (...)** }
%union.anon = type { i32 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.73", %"class.std::__1::__compressed_pair.78" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.78" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"struct.std::__1::__compressed_pair_elem.79" = type { i64 }
%union.anon.21 = type { %"struct.webrtc::HdrMetadata" }
%"struct.webrtc::HdrMetadata" = type { %"struct.webrtc::HdrMasteringMetadata", i32, i32 }
%"struct.webrtc::HdrMasteringMetadata" = type { %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", %"struct.webrtc::HdrMasteringMetadata::Chromaticity", float, float }
%"struct.webrtc::HdrMasteringMetadata::Chromaticity" = type { float, float }
%union.anon.85 = type { i16 }
%"class.webrtc::RtpPacketInfos" = type { %"class.rtc::scoped_refptr.27" }
%"class.rtc::scoped_refptr.27" = type { %"class.webrtc::RtpPacketInfos::Data"* }
%"class.webrtc::RtpPacketInfos::Data" = type { %"class.rtc::RefCountedBase.base", %"class.std::__1::vector.29" }
%"class.rtc::RefCountedBase.base" = type <{ i32 (...)**, %"class.webrtc::webrtc_impl::RefCounter" }>
%"class.webrtc::webrtc_impl::RefCounter" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.28" }
%"struct.std::__1::__atomic_base.28" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::vector.29" = type { %"class.std::__1::__vector_base.30" }
%"class.std::__1::__vector_base.30" = type { %"class.webrtc::RtpPacketInfo"*, %"class.webrtc::RtpPacketInfo"*, %"class.std::__1::__compressed_pair.54" }
%"class.webrtc::RtpPacketInfo" = type { i32, %"class.std::__1::vector.31", i32, %"class.absl::optional.38", %"class.absl::optional.43", %"class.absl::optional.48", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.31" = type { %"class.std::__1::__vector_base.32" }
%"class.std::__1::__vector_base.32" = type { i32*, i32*, %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { i32* }
%"class.absl::optional.38" = type { %"class.absl::optional_internal::optional_data.39" }
%"class.absl::optional_internal::optional_data.39" = type { %"class.absl::optional_internal::optional_data_base.40" }
%"class.absl::optional_internal::optional_data_base.40" = type { %"class.absl::optional_internal::optional_data_dtor_base.41" }
%"class.absl::optional_internal::optional_data_dtor_base.41" = type { i8, %union.anon.42 }
%union.anon.42 = type { i8 }
%"class.absl::optional.43" = type { %"class.absl::optional_internal::optional_data.44" }
%"class.absl::optional_internal::optional_data.44" = type { %"class.absl::optional_internal::optional_data_base.45" }
%"class.absl::optional_internal::optional_data_base.45" = type { %"class.absl::optional_internal::optional_data_dtor_base.46" }
%"class.absl::optional_internal::optional_data_dtor_base.46" = type { i8, %union.anon.47 }
%union.anon.47 = type { %"struct.webrtc::AbsoluteCaptureTime" }
%"struct.webrtc::AbsoluteCaptureTime" = type { i64, %"class.absl::optional.48" }
%"class.absl::optional.48" = type { %"class.absl::optional_internal::optional_data.49" }
%"class.absl::optional_internal::optional_data.49" = type { %"class.absl::optional_internal::optional_data_base.50" }
%"class.absl::optional_internal::optional_data_base.50" = type { %"class.absl::optional_internal::optional_data_dtor_base.51" }
%"class.absl::optional_internal::optional_data_dtor_base.51" = type { i8, %union.anon.52 }
%union.anon.52 = type { i64 }
%"class.webrtc::Timestamp" = type { %"class.webrtc::rtc_units_impl::UnitBase.53" }
%"class.webrtc::rtc_units_impl::UnitBase.53" = type { i64 }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { %"class.webrtc::RtpPacketInfo"* }
%"struct.std::__1::array" = type { [3 x i8] }
%"class.webrtc::test::FakeEncoder" = type { %"class.webrtc::VideoEncoder", %"struct.webrtc::test::FakeEncoder::FrameInfo", %"class.webrtc::Clock"*, %"class.webrtc::VideoCodec", %"class.webrtc::EncodedImageCallback"*, %"struct.webrtc::VideoEncoder::RateControlParameters", i32, i8, i32, %"class.webrtc::Mutex", [3 x i8], %"class.absl::optional", i64 }
%"class.webrtc::VideoEncoder" = type { i32 (...)** }
%"struct.webrtc::test::FakeEncoder::FrameInfo" = type { i8, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"class.std::__1::__compressed_pair" }
%"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer" = type { i32, i32 }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* }
%"class.webrtc::VideoCodec" = type { i32, i16, i16, i32, i32, i32, i32, i8, i32, i8, [3 x %"struct.webrtc::SpatialLayer"], [5 x %"struct.webrtc::SpatialLayer"], i32, i8, %"class.absl::optional", %"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds", i8, %"union.webrtc::VideoCodecUnion", %"class.std::__1::basic_string" }
%"struct.webrtc::SpatialLayer" = type { i16, i16, float, i8, i32, i32, i32, i32, i8 }
%"struct.webrtc::VideoCodec::TimingFrameTriggerThresholds" = type { i64, i16 }
%"union.webrtc::VideoCodecUnion" = type { %"struct.webrtc::VideoCodecVP9" }
%"struct.webrtc::VideoCodecVP9" = type { i32, i8, i8, i8, i32, i8, i8, i8, i8, i32 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.webrtc::EncodedImageCallback" = type { i32 (...)** }
%"struct.webrtc::VideoEncoder::RateControlParameters" = type { i32 (...)**, %"class.webrtc::VideoBitrateAllocation", %"class.webrtc::VideoBitrateAllocation", double, %"class.webrtc::DataRate" }
%"class.webrtc::VideoBitrateAllocation" = type <{ i32, [5 x [4 x %"class.absl::optional.7"]], i8, [3 x i8] }>
%"class.absl::optional.7" = type { %"class.absl::optional_internal::optional_data.8" }
%"class.absl::optional_internal::optional_data.8" = type { %"class.absl::optional_internal::optional_data_base.9" }
%"class.absl::optional_internal::optional_data_base.9" = type { %"class.absl::optional_internal::optional_data_dtor_base.10" }
%"class.absl::optional_internal::optional_data_dtor_base.10" = type { i8, %union.anon.11 }
%"class.webrtc::Mutex" = type { %"class.webrtc::MutexImpl" }
%"class.webrtc::MutexImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%"class.webrtc::Clock" = type { i32 (...)** }
%"class.webrtc::test::FakeH264Encoder" = type { %"class.webrtc::test::FakeEncoder", i32, %"class.webrtc::Mutex" }
%"class.webrtc::test::DelayedEncoder" = type <{ %"class.webrtc::test::FakeEncoder", i32, %"class.webrtc::SequenceChecker", [3 x i8] }>
%"class.webrtc::SequenceChecker" = type { i8 }
%"class.webrtc::test::MultithreadedFakeH264Encoder" = type <{ %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::TaskQueueFactory"*, i32, [4 x i8], %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"class.webrtc::SequenceChecker", [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %"class.webrtc::TaskQueueBase"* }
%"class.webrtc::TaskQueueBase" = type { i32 (...)** }
%"class.webrtc::TaskQueueFactory" = type { i32 (...)** }
%union.pthread_mutexattr_t = type { i32 }
%"class.webrtc::FecControllerOverride" = type { i32 (...)** }
%"struct.webrtc::VideoEncoder::Settings" = type { %"struct.webrtc::VideoEncoder::Capabilities", i32, i64 }
%"struct.webrtc::VideoEncoder::Capabilities" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webrtc::VideoFrame" = type { i16, %"class.rtc::scoped_refptr", i32, i64, i64, i32, %"class.absl::optional.12", %"class.absl::optional", %"class.absl::optional.22", %"class.webrtc::RtpPacketInfos", %"class.absl::optional.59" }
%"class.rtc::scoped_refptr" = type { %"class.webrtc::VideoFrameBuffer"* }
%"class.webrtc::VideoFrameBuffer" = type { %"class.rtc::RefCountInterface" }
%"class.absl::optional.12" = type { %"class.absl::optional_internal::optional_data.13" }
%"class.absl::optional_internal::optional_data.13" = type { %"class.absl::optional_internal::optional_data_base.14" }
%"class.absl::optional_internal::optional_data_base.14" = type { %"class.absl::optional_internal::optional_data_dtor_base.15" }
%"class.absl::optional_internal::optional_data_dtor_base.15" = type { i8, %union.anon.16 }
%union.anon.16 = type { %"class.webrtc::ColorSpace" }
%"class.webrtc::ColorSpace" = type { i8, i8, i8, i32, i32, i32, %"class.absl::optional.17" }
%"class.absl::optional.17" = type { %"class.absl::optional_internal::optional_data.18" }
%"class.absl::optional_internal::optional_data.18" = type { %"class.absl::optional_internal::optional_data_base.19" }
%"class.absl::optional_internal::optional_data_base.19" = type { %"class.absl::optional_internal::optional_data_dtor_base.20" }
%"class.absl::optional_internal::optional_data_dtor_base.20" = type { i8, %union.anon.21 }
%"class.absl::optional.22" = type { %"class.absl::optional_internal::optional_data.23" }
%"class.absl::optional_internal::optional_data.23" = type { %"class.absl::optional_internal::optional_data_base.24" }
%"class.absl::optional_internal::optional_data_base.24" = type { %"class.absl::optional_internal::optional_data_dtor_base.25" }
%"class.absl::optional_internal::optional_data_dtor_base.25" = type { i8, %union.anon.26 }
%union.anon.26 = type { %"struct.webrtc::VideoFrame::UpdateRect" }
%"struct.webrtc::VideoFrame::UpdateRect" = type { i32, i32, i32, i32 }
%"class.absl::optional.59" = type { %"class.absl::optional_internal::optional_data.60" }
%"class.absl::optional_internal::optional_data.60" = type { %"class.absl::optional_internal::optional_data_base.61" }
%"class.absl::optional_internal::optional_data_base.61" = type { %"class.absl::optional_internal::optional_data_dtor_base.62" }
%"class.absl::optional_internal::optional_data_dtor_base.62" = type { i8, %union.anon.63 }
%union.anon.63 = type { %"struct.webrtc::VideoFrame::ProcessingTime" }
%"struct.webrtc::VideoFrame::ProcessingTime" = type { %"class.webrtc::Timestamp", %"class.webrtc::Timestamp" }
%"class.std::__1::vector.64" = type { %"class.std::__1::__vector_base.65" }
%"class.std::__1::__vector_base.65" = type { i32*, i32*, %"class.std::__1::__compressed_pair.66" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { i32* }
%"class.rtc::scoped_refptr.71" = type { %"class.webrtc::EncodedImageBuffer"* }
%"class.webrtc::EncodedImageBuffer" = type { %"class.webrtc::EncodedImageBufferInterface", i64, i8* }
%"class.webrtc::EncodedImage" = type <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", %"struct.webrtc::EncodedImage::Timing", %"class.rtc::scoped_refptr.72", i64, i32, %"class.absl::optional", [4 x i8], %"class.std::__1::map", %"class.absl::optional.12", %"class.absl::optional.81", [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>
%"struct.webrtc::EncodedImage::Timing" = type { i8, i64, i64, i64, i64, i64, i64, i64, i64 }
%"class.absl::optional.81" = type { %"class.absl::optional_internal::optional_data.82" }
%"class.absl::optional_internal::optional_data.82" = type { %"class.absl::optional_internal::optional_data_base.83" }
%"class.absl::optional_internal::optional_data_base.83" = type { %"class.absl::optional_internal::optional_data_dtor_base.84" }
%"class.absl::optional_internal::optional_data_dtor_base.84" = type { i8, %union.anon.85 }
%"struct.webrtc::CodecSpecificInfo" = type { i32, %"union.webrtc::CodecSpecificInfoUnion", i8, %"class.absl::optional.86", %"class.absl::optional.113" }
%"union.webrtc::CodecSpecificInfoUnion" = type { %"struct.webrtc::CodecSpecificInfoVP9" }
%"struct.webrtc::CodecSpecificInfoVP9" = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i64, i64, i8, [8 x i16], [8 x i16], %"struct.webrtc::GofInfoVP9", i8, [3 x i8], i8 }
%"struct.webrtc::GofInfoVP9" = type { i64, [255 x i8], [255 x i8], [255 x i8], [255 x [3 x i8]], i16 }
%"class.absl::optional.86" = type { %"class.absl::optional_internal::optional_data.87" }
%"class.absl::optional_internal::optional_data.87" = type { %"class.absl::optional_internal::optional_data_base.88" }
%"class.absl::optional_internal::optional_data_base.88" = type { %"class.absl::optional_internal::optional_data_dtor_base.89" }
%"class.absl::optional_internal::optional_data_dtor_base.89" = type { i8, %union.anon.90 }
%union.anon.90 = type { %"struct.webrtc::GenericFrameInfo" }
%"struct.webrtc::GenericFrameInfo" = type { %"struct.webrtc::FrameDependencyTemplate", %"class.absl::InlinedVector.101", %"class.std::__1::vector.108", %"class.std::__1::bitset" }
%"struct.webrtc::FrameDependencyTemplate" = type { i32, i32, %"class.absl::InlinedVector", %"class.absl::InlinedVector.94", %"class.absl::InlinedVector.94" }
%"class.absl::InlinedVector" = type { %"class.absl::inlined_vector_internal::Storage" }
%"class.absl::inlined_vector_internal::Storage" = type { %"class.absl::container_internal::CompressedTuple", %"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" }
%"class.absl::container_internal::CompressedTuple" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.93" }
%"struct.absl::container_internal::internal_compressed_tuple::Storage.93" = type { i64 }
%"union.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::DecodeTargetIndication, 10, std::__1::allocator<webrtc::DecodeTargetIndication> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.94" = type { %"class.absl::inlined_vector_internal::Storage.95" }
%"class.absl::inlined_vector_internal::Storage.95" = type { %"class.absl::container_internal::CompressedTuple.96", %"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" }
%"class.absl::container_internal::CompressedTuple.96" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.97" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.97" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.93" }
%"union.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<int, 4, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.101" = type { %"class.absl::inlined_vector_internal::Storage.102" }
%"class.absl::inlined_vector_internal::Storage.102" = type { %"class.absl::container_internal::CompressedTuple.103", %"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" }
%"class.absl::container_internal::CompressedTuple.103" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.104" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.104" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.93" }
%"union.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated", [48 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::CodecBufferUsage, 8, std::__1::allocator<webrtc::CodecBufferUsage> >::Allocated" = type { %"struct.webrtc::CodecBufferUsage"*, i64 }
%"struct.webrtc::CodecBufferUsage" = type <{ i32, i8, i8, [2 x i8] }>
%"class.std::__1::vector.108" = type { i64*, i64, %"class.std::__1::__compressed_pair.109" }
%"class.std::__1::__compressed_pair.109" = type { %"struct.std::__1::__compressed_pair_elem.79" }
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { i64 }
%"class.absl::optional.113" = type { %"class.absl::optional_internal::optional_data.114" }
%"class.absl::optional_internal::optional_data.114" = type { %"class.absl::optional_internal::optional_data_base.115" }
%"class.absl::optional_internal::optional_data_base.115" = type { %"class.absl::optional_internal::optional_data_dtor_base.116" }
%"class.absl::optional_internal::optional_data_dtor_base.116" = type { i8, %union.anon.117 }
%union.anon.117 = type { %"struct.webrtc::FrameDependencyStructure" }
%"struct.webrtc::FrameDependencyStructure" = type { i32, i32, i32, %"class.absl::InlinedVector.118", %"class.absl::InlinedVector.120", %"class.std::__1::vector.127" }
%"class.absl::InlinedVector.118" = type { %"class.absl::inlined_vector_internal::Storage.119" }
%"class.absl::inlined_vector_internal::Storage.119" = type { %"class.absl::container_internal::CompressedTuple.96", %"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" }
%"union.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated", [24 x i8] }
%"struct.absl::inlined_vector_internal::Storage<int, 10, std::__1::allocator<int> >::Allocated" = type { i32*, i64 }
%"class.absl::InlinedVector.120" = type { %"class.absl::inlined_vector_internal::Storage.121" }
%"class.absl::inlined_vector_internal::Storage.121" = type { %"class.absl::container_internal::CompressedTuple.122", %"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" }
%"class.absl::container_internal::CompressedTuple.122" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.123" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.123" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.93" }
%"union.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated", [16 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::RenderResolution, 4, std::__1::allocator<webrtc::RenderResolution> >::Allocated" = type { %"class.webrtc::RenderResolution"*, i64 }
%"class.webrtc::RenderResolution" = type { i32, i32 }
%"class.std::__1::vector.127" = type { %"class.std::__1::__vector_base.128" }
%"class.std::__1::__vector_base.128" = type { %"struct.webrtc::FrameDependencyTemplate"*, %"struct.webrtc::FrameDependencyTemplate"*, %"class.std::__1::__compressed_pair.129" }
%"class.std::__1::__compressed_pair.129" = type { %"struct.std::__1::__compressed_pair_elem.130" }
%"struct.std::__1::__compressed_pair_elem.130" = type { %"struct.webrtc::FrameDependencyTemplate"* }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.webrtc::VideoEncoder::EncoderInfo" = type { %"struct.webrtc::VideoEncoder::ScalingSettings", i32, i8, i8, %"class.std::__1::basic_string", i8, i8, i8, [5 x %"class.absl::InlinedVector.139"], %"class.std::__1::vector.146", i8, %"class.absl::InlinedVector.153" }
%"struct.webrtc::VideoEncoder::ScalingSettings" = type { %"class.absl::optional.134", i32 }
%"class.absl::optional.134" = type { %"class.absl::optional_internal::optional_data.135" }
%"class.absl::optional_internal::optional_data.135" = type { %"class.absl::optional_internal::optional_data_base.136" }
%"class.absl::optional_internal::optional_data_base.136" = type { %"class.absl::optional_internal::optional_data_dtor_base.137" }
%"class.absl::optional_internal::optional_data_dtor_base.137" = type { i8, %union.anon.138 }
%union.anon.138 = type { %"struct.webrtc::VideoEncoder::QpThresholds" }
%"struct.webrtc::VideoEncoder::QpThresholds" = type { i32, i32 }
%"class.absl::InlinedVector.139" = type { %"class.absl::inlined_vector_internal::Storage.140" }
%"class.absl::inlined_vector_internal::Storage.140" = type { %"class.absl::container_internal::CompressedTuple.141", %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" }
%"class.absl::container_internal::CompressedTuple.141" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.142" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.142" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.93" }
%"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" }
%"struct.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Allocated" = type { i8*, i64 }
%"class.std::__1::vector.146" = type { %"class.std::__1::__vector_base.147" }
%"class.std::__1::__vector_base.147" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"*, %"class.std::__1::__compressed_pair.148" }
%"struct.webrtc::VideoEncoder::ResolutionBitrateLimits" = type { i32, i32, i32, i32 }
%"class.std::__1::__compressed_pair.148" = type { %"struct.std::__1::__compressed_pair_elem.149" }
%"struct.std::__1::__compressed_pair_elem.149" = type { %"struct.webrtc::VideoEncoder::ResolutionBitrateLimits"* }
%"class.absl::InlinedVector.153" = type { %"class.absl::inlined_vector_internal::Storage.154" }
%"class.absl::inlined_vector_internal::Storage.154" = type { %"class.absl::container_internal::CompressedTuple.155", %"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" }
%"class.absl::container_internal::CompressedTuple.155" = type { %"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.156" }
%"struct.absl::container_internal::internal_compressed_tuple::CompressedTupleImpl.156" = type { %"struct.absl::container_internal::internal_compressed_tuple::Storage.93" }
%"union.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Data" = type { %"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated", [8 x i8] }
%"struct.absl::inlined_vector_internal::Storage<webrtc::VideoFrameBuffer::Type, 5, std::__1::allocator<webrtc::VideoFrameBuffer::Type> >::Allocated" = type { i32*, i64 }
%"class.webrtc::QueuedTask" = type { i32 (...)** }
%"struct.webrtc::VideoEncoder::LossNotification" = type { i32, i32, %"class.absl::optional.173", %"class.absl::optional.173" }
%"class.absl::optional.173" = type { %"class.absl::optional_internal::optional_data.174" }
%"class.absl::optional_internal::optional_data.174" = type { %"class.absl::optional_internal::optional_data_base.175" }
%"class.absl::optional_internal::optional_data_base.175" = type { %"class.absl::optional_internal::optional_data_dtor_base.176" }
%"class.absl::optional_internal::optional_data_dtor_base.176" = type { i8, %union.anon.177 }
%union.anon.177 = type { i8 }
%"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask" = type { %"class.webrtc::QueuedTask", %"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::VideoFrame", %"class.std::__1::vector.64" }

$_ZN6webrtc4test11FakeEncoderD2Ev = comdat any

$_ZN6webrtc4test11FakeEncoderD0Ev = comdat any

$_ZN6webrtc4test15FakeH264EncoderD2Ev = comdat any

$_ZN6webrtc4test15FakeH264EncoderD0Ev = comdat any

$_ZN6webrtc4test14DelayedEncoderD0Ev = comdat any

$_ZN6webrtc4test28MultithreadedFakeH264EncoderD2Ev = comdat any

$_ZN6webrtc4test28MultithreadedFakeH264EncoderD0Ev = comdat any

$_ZNSt3__16vectorIN6webrtc4test11FakeEncoder9FrameInfo12SpatialLayerENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJhEEERhDpOT_ = comdat any

$_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskD2Ev = comdat any

$_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskD0Ev = comdat any

$_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTask3RunEv = comdat any

$_ZTVN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskE = comdat any

@_ZTVN6webrtc4test11FakeEncoderE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*)* @_ZN6webrtc4test11FakeEncoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*)* @_ZN6webrtc4test11FakeEncoderD0Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::FecControllerOverride"*)* @_ZN6webrtc4test11FakeEncoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE to i8*), i8* bitcast (i32 (%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64)* @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*)* @_ZN6webrtc4test11FakeEncoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImageCallback"*)* @_ZN6webrtc4test11FakeEncoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*)* @_ZN6webrtc4test11FakeEncoder7ReleaseEv to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::VideoFrame"*, %"class.std::__1::vector.64"*)* @_ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"*)* @_ZN6webrtc4test11FakeEncoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, float)* @_ZN6webrtc12VideoEncoder22OnPacketLossRateUpdateEf to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, i64)* @_ZN6webrtc12VideoEncoder11OnRttUpdateEl to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, %"struct.webrtc::VideoEncoder::LossNotification"*)* @_ZN6webrtc12VideoEncoder18OnLossNotificationERKNS0_16LossNotificationE to i8*), i8* bitcast (void (%"struct.webrtc::VideoEncoder::EncoderInfo"*, %"class.webrtc::test::FakeEncoder"*)* @_ZNK6webrtc4test11FakeEncoder14GetEncoderInfoEv to i8*), i8* bitcast (void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)* @_ZN6webrtc4test11FakeEncoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEE to i8*)] }, align 8
@__const._ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.simulcast_streams = private unnamed_addr constant [3 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }] [{ i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }, { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] } { i16 -21846, i16 -21846, float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA" }], align 16
@__const._ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.rates = private unnamed_addr constant { i32 (...)**, <{ i32, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]], i8, [3 x i8] }>, <{ i32, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]], i8, [3 x i8] }>, double, %"class.webrtc::DataRate" } { i32 (...)** inttoptr (i64 -6148914691236517206 to i32 (...)**), <{ i32, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]], i8, [3 x i8] }> <{ i32 -1431655766, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]] [[4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }]], i8 -86, [3 x i8] c"\AA\AA\AA" }>, <{ i32, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]], i8, [3 x i8] }> <{ i32 -1431655766, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]] [[4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }], [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }] [{ { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }, { { { { i8, [3 x i8], %union.anon.11 } } } } { { { { i8, [3 x i8], %union.anon.11 } } } { { { i8, [3 x i8], %union.anon.11 } } { { i8, [3 x i8], %union.anon.11 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.11 { i32 -1431655766 } } } } }]], i8 -86, [3 x i8] c"\AA\AA\AA" }>, double 0xFFFFFFFFFFFFFFFF, %"class.webrtc::DataRate" { %"class.webrtc::rtc_units_impl::RelativeUnit" { %"class.webrtc::rtc_units_impl::UnitBase" { i64 -6148914691236517206 } } } }, align 8
@__const._ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.encoded = private unnamed_addr constant <{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", { i8, [7 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }, %"class.rtc::scoped_refptr.72", i64, i32, { { { { i8, [3 x i8], %union.anon } } } }, [4 x i8], %"class.std::__1::map", { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } } } } } }, { { { { i8, [1 x i8], %union.anon.85 } } } }, [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }> <{ i32 -1431655766, i32 -1431655766, i64 -6148914691236517206, i64 -6148914691236517206, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, %"struct.webrtc::VideoPlayoutDelay" { i32 -1431655766, i32 -1431655766 }, { i8, [7 x i8], i64, i64, i64, i64, i64, i64, i64, i64 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206, i64 -6148914691236517206 }, %"class.rtc::scoped_refptr.72" { %"class.webrtc::EncodedImageBufferInterface"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::EncodedImageBufferInterface"*) }, i64 -6148914691236517206, i32 -1431655766, { { { { i8, [3 x i8], %union.anon } } } } { { { { i8, [3 x i8], %union.anon } } } { { { i8, [3 x i8], %union.anon } } { { i8, [3 x i8], %union.anon } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon { i32 -1431655766 } } } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.std::__1::map" { %"class.std::__1::__tree" { %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__compressed_pair.73" { %"struct.std::__1::__compressed_pair_elem.74" { %"class.std::__1::__tree_end_node" { %"class.std::__1::__tree_node_base"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_node_base"*) } } }, %"class.std::__1::__compressed_pair.78" { %"struct.std::__1::__compressed_pair_elem.79" { i64 -6148914691236517206 } } } }, { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } } } } } } { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } } } } } { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } } } } { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } } } { i8 -86, [3 x i8] c"\AA\AA\AA", { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } } { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } { i8 -86, i8 -86, i8 -86, [1 x i8] c"\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, { { { { i8, [3 x i8], %union.anon.21 } } } } { { { { i8, [3 x i8], %union.anon.21 } } } { { { i8, [3 x i8], %union.anon.21 } } { { i8, [3 x i8], %union.anon.21 } { i8 -86, [3 x i8] c"\AA\AA\AA", %union.anon.21 { %"struct.webrtc::HdrMetadata" { %"struct.webrtc::HdrMasteringMetadata" { %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, %"struct.webrtc::HdrMasteringMetadata::Chromaticity" { float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, float 0xFFFFFFFFE0000000, float 0xFFFFFFFFE0000000 }, i32 -1431655766, i32 -1431655766 } } } } } } } } } } } }, { { { { i8, [1 x i8], %union.anon.85 } } } } { { { { i8, [1 x i8], %union.anon.85 } } } { { { i8, [1 x i8], %union.anon.85 } } { { i8, [1 x i8], %union.anon.85 } { i8 -86, [1 x i8] c"\AA", %union.anon.85 { i16 -21846 } } } } }, [4 x i8] c"\AA\AA\AA\AA", %"class.webrtc::RtpPacketInfos" { %"class.rtc::scoped_refptr.27" { %"class.webrtc::RtpPacketInfos::Data"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::RtpPacketInfos::Data"*) } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, align 8
@_ZN6webrtc4test12_GLOBAL__N_124kTemporalLayerRateFactorE = internal unnamed_addr constant [4 x [4 x i32]] [[4 x i32] [i32 1, i32 0, i32 0, i32 0], [4 x i32] [i32 2, i32 2, i32 0, i32 0], [4 x i32] [i32 4, i32 4, i32 2, i32 0], [4 x i32] [i32 8, i32 8, i32 4, i32 2]], align 16
@.str = private unnamed_addr constant [13 x i8] c"fake_encoder\00", align 1
@_ZN6webrtc4test11FakeEncoder19kImplementationNameE = hidden local_unnamed_addr global i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str, i64 0, i64 0), align 8
@_ZTVN6webrtc4test15FakeH264EncoderE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::FakeH264Encoder"*)* @_ZN6webrtc4test15FakeH264EncoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeH264Encoder"*)* @_ZN6webrtc4test15FakeH264EncoderD0Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::FecControllerOverride"*)* @_ZN6webrtc4test11FakeEncoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE to i8*), i8* bitcast (i32 (%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64)* @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*)* @_ZN6webrtc4test11FakeEncoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImageCallback"*)* @_ZN6webrtc4test11FakeEncoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*)* @_ZN6webrtc4test11FakeEncoder7ReleaseEv to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::VideoFrame"*, %"class.std::__1::vector.64"*)* @_ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"*)* @_ZN6webrtc4test11FakeEncoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, float)* @_ZN6webrtc12VideoEncoder22OnPacketLossRateUpdateEf to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, i64)* @_ZN6webrtc12VideoEncoder11OnRttUpdateEl to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, %"struct.webrtc::VideoEncoder::LossNotification"*)* @_ZN6webrtc12VideoEncoder18OnLossNotificationERKNS0_16LossNotificationE to i8*), i8* bitcast (void (%"struct.webrtc::VideoEncoder::EncoderInfo"*, %"class.webrtc::test::FakeEncoder"*)* @_ZNK6webrtc4test11FakeEncoder14GetEncoderInfoEv to i8*), i8* bitcast (void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeH264Encoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)* @_ZN6webrtc4test15FakeH264Encoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEE to i8*)] }, align 8
@_ZZN6webrtc4test15FakeH264Encoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEEE10kStartCode = internal unnamed_addr constant %"struct.std::__1::array" { [3 x i8] c"\00\00\01" }, align 1
@_ZTVN6webrtc4test14DelayedEncoderE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*)* @_ZN6webrtc4test11FakeEncoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::DelayedEncoder"*)* @_ZN6webrtc4test14DelayedEncoderD0Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::FecControllerOverride"*)* @_ZN6webrtc4test11FakeEncoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE to i8*), i8* bitcast (i32 (%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64)* @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*)* @_ZN6webrtc4test11FakeEncoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImageCallback"*)* @_ZN6webrtc4test11FakeEncoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*)* @_ZN6webrtc4test11FakeEncoder7ReleaseEv to i8*), i8* bitcast (i32 (%"class.webrtc::test::DelayedEncoder"*, %"class.webrtc::VideoFrame"*, %"class.std::__1::vector.64"*)* @_ZN6webrtc4test14DelayedEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"*)* @_ZN6webrtc4test11FakeEncoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, float)* @_ZN6webrtc12VideoEncoder22OnPacketLossRateUpdateEf to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, i64)* @_ZN6webrtc12VideoEncoder11OnRttUpdateEl to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, %"struct.webrtc::VideoEncoder::LossNotification"*)* @_ZN6webrtc12VideoEncoder18OnLossNotificationERKNS0_16LossNotificationE to i8*), i8* bitcast (void (%"struct.webrtc::VideoEncoder::EncoderInfo"*, %"class.webrtc::test::FakeEncoder"*)* @_ZNK6webrtc4test11FakeEncoder14GetEncoderInfoEv to i8*), i8* bitcast (void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)* @_ZN6webrtc4test11FakeEncoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEE to i8*)] }, align 8
@_ZTVN6webrtc4test28MultithreadedFakeH264EncoderE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::MultithreadedFakeH264Encoder"*)* @_ZN6webrtc4test28MultithreadedFakeH264EncoderD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::MultithreadedFakeH264Encoder"*)* @_ZN6webrtc4test28MultithreadedFakeH264EncoderD0Ev to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::FecControllerOverride"*)* @_ZN6webrtc4test11FakeEncoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE to i8*), i8* bitcast (i32 (%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64)* @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim to i8*), i8* bitcast (i32 (%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"*)* @_ZN6webrtc4test28MultithreadedFakeH264Encoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE to i8*), i8* bitcast (i32 (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImageCallback"*)* @_ZN6webrtc4test11FakeEncoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE to i8*), i8* bitcast (i32 (%"class.webrtc::test::MultithreadedFakeH264Encoder"*)* @_ZN6webrtc4test28MultithreadedFakeH264Encoder7ReleaseEv to i8*), i8* bitcast (i32 (%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::VideoFrame"*, %"class.std::__1::vector.64"*)* @_ZN6webrtc4test28MultithreadedFakeH264Encoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE to i8*), i8* bitcast (void (%"class.webrtc::test::FakeEncoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"*)* @_ZN6webrtc4test11FakeEncoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, float)* @_ZN6webrtc12VideoEncoder22OnPacketLossRateUpdateEf to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, i64)* @_ZN6webrtc12VideoEncoder11OnRttUpdateEl to i8*), i8* bitcast (void (%"class.webrtc::VideoEncoder"*, %"struct.webrtc::VideoEncoder::LossNotification"*)* @_ZN6webrtc12VideoEncoder18OnLossNotificationERKNS0_16LossNotificationE to i8*), i8* bitcast (void (%"struct.webrtc::VideoEncoder::EncoderInfo"*, %"class.webrtc::test::FakeEncoder"*)* @_ZNK6webrtc4test11FakeEncoder14GetEncoderInfoEv to i8*), i8* bitcast (void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeH264Encoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)* @_ZN6webrtc4test15FakeH264Encoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEE to i8*)] }, align 8
@.str.1 = private unnamed_addr constant [8 x i8] c"Queue 1\00", align 1
@.str.2 = private unnamed_addr constant [8 x i8] c"Queue 2\00", align 1
@_ZTVN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"*)* @_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskD2Ev to i8*), i8* bitcast (void (%"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"*)* @_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskD0Ev to i8*), i8* bitcast (i1 (%"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"*)* @_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTask3RunEv to i8*)] }, comdat, align 8

@_ZN6webrtc4test11FakeEncoderC1EPNS_5ClockE = hidden unnamed_addr alias void (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::Clock"*), void (%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::Clock"*)* @_ZN6webrtc4test11FakeEncoderC2EPNS_5ClockE
@_ZN6webrtc4test15FakeH264EncoderC1EPNS_5ClockE = hidden unnamed_addr alias void (%"class.webrtc::test::FakeH264Encoder"*, %"class.webrtc::Clock"*), void (%"class.webrtc::test::FakeH264Encoder"*, %"class.webrtc::Clock"*)* @_ZN6webrtc4test15FakeH264EncoderC2EPNS_5ClockE
@_ZN6webrtc4test14DelayedEncoderC1EPNS_5ClockEi = hidden unnamed_addr alias void (%"class.webrtc::test::DelayedEncoder"*, %"class.webrtc::Clock"*, i32), void (%"class.webrtc::test::DelayedEncoder"*, %"class.webrtc::Clock"*, i32)* @_ZN6webrtc4test14DelayedEncoderC2EPNS_5ClockEi
@_ZN6webrtc4test28MultithreadedFakeH264EncoderC1EPNS_5ClockEPNS_16TaskQueueFactoryE = hidden unnamed_addr alias void (%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::Clock"*, %"class.webrtc::TaskQueueFactory"*), void (%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::Clock"*, %"class.webrtc::TaskQueueFactory"*)* @_ZN6webrtc4test28MultithreadedFakeH264EncoderC2EPNS_5ClockEPNS_16TaskQueueFactoryE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoderC2EPNS_5ClockE(%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::Clock"*) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 1
  %6 = bitcast %"class.std::__1::vector"* %5 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false) #14
  %7 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 2
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %7, align 8
  %8 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3
  tail call void @_ZN6webrtc10VideoCodecC1Ev(%"class.webrtc::VideoCodec"* %8) #14
  %9 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 4
  store %"class.webrtc::EncodedImageCallback"* null, %"class.webrtc::EncodedImageCallback"** %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %10) #14
  %11 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 6
  store i32 -1, i32* %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 7
  store i8 1, i8* %12, align 4
  %13 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 8
  store i32 0, i32* %13, align 8
  %14 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #14
  %15 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %15, align 4
  %16 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #14
  %17 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %18 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %17, %union.pthread_mutexattr_t* nonnull %3) #14
  %19 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #14
  %20 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %20, align 4
  %21 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 12
  store i64 0, i64* %21, align 8
  %22 = getelementptr %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 10, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %22, i8 0, i64 3, i1 false)
  ret void
}

declare void @_ZN6webrtc10VideoCodecC1Ev(%"class.webrtc::VideoCodec"*) unnamed_addr #1

declare void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoder24SetFecControllerOverrideEPNS_21FecControllerOverrideE(%"class.webrtc::test::FakeEncoder"* nocapture, %"class.webrtc::FecControllerOverride"* nocapture) unnamed_addr #3 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoder13SetMaxBitrateEi(%"class.webrtc::test::FakeEncoder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #14
  %5 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 6
  store i32 %1, i32* %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc4test11FakeEncoder14SetRatesLockedERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::test::FakeEncoder"* %0, %"struct.webrtc::VideoEncoder::RateControlParameters"* dereferenceable(360) %6)
  %7 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoder14SetRatesLockedERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::test::FakeEncoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"* nocapture readonly dereferenceable(360)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5, i32 1
  %4 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %1, i64 0, i32 1
  %5 = bitcast %"class.webrtc::VideoBitrateAllocation"* %3 to i8*
  %6 = bitcast %"class.webrtc::VideoBitrateAllocation"* %4 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %5, i8* align 8 %6, i64 352, i1 false) #14
  %7 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %1, i64 0, i32 2, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = udiv i32 %8, 1000
  %10 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = icmp sgt i32 %11, 0
  %13 = icmp sgt i32 %9, %11
  %14 = and i1 %12, %13
  br i1 %14, label %15, label %32

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5, i32 2
  %17 = zext i32 %9 to i64
  br label %18

18:                                               ; preds = %64, %15
  %19 = phi i64 [ 0, %15 ], [ %65, %64 ]
  %20 = tail call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 0) #14
  br i1 %20, label %21, label %30

21:                                               ; preds = %18
  %22 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 0) #14
  %23 = zext i32 %22 to i64
  %24 = load i32, i32* %10, align 8
  %25 = sext i32 %24 to i64
  %26 = mul nsw i64 %25, %23
  %27 = sdiv i64 %26, %17
  %28 = trunc i64 %27 to i32
  %29 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 0, i32 %28) #14
  br label %30

30:                                               ; preds = %18, %21
  %31 = tail call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 1) #14
  br i1 %31, label %33, label %42

32:                                               ; preds = %64, %2
  ret void

33:                                               ; preds = %30
  %34 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 1) #14
  %35 = zext i32 %34 to i64
  %36 = load i32, i32* %10, align 8
  %37 = sext i32 %36 to i64
  %38 = mul nsw i64 %37, %35
  %39 = sdiv i64 %38, %17
  %40 = trunc i64 %39 to i32
  %41 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 1, i32 %40) #14
  br label %42

42:                                               ; preds = %33, %30
  %43 = tail call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 2) #14
  br i1 %43, label %44, label %53

44:                                               ; preds = %42
  %45 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 2) #14
  %46 = zext i32 %45 to i64
  %47 = load i32, i32* %10, align 8
  %48 = sext i32 %47 to i64
  %49 = mul nsw i64 %48, %46
  %50 = sdiv i64 %49, %17
  %51 = trunc i64 %50 to i32
  %52 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 2, i32 %51) #14
  br label %53

53:                                               ; preds = %44, %42
  %54 = tail call zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 3) #14
  br i1 %54, label %55, label %64

55:                                               ; preds = %53
  %56 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 3) #14
  %57 = zext i32 %56 to i64
  %58 = load i32, i32* %10, align 8
  %59 = sext i32 %58 to i64
  %60 = mul nsw i64 %59, %57
  %61 = sdiv i64 %60, %17
  %62 = trunc i64 %61 to i32
  %63 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %16, i64 %19, i64 3, i32 %62) #14
  br label %64

64:                                               ; preds = %55, %53
  %65 = add nuw nsw i64 %19, 1
  %66 = icmp eq i64 %65, 5
  br i1 %66, label %32, label %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoder5SetQpEi(%"class.webrtc::test::FakeEncoder"*, i32) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #14
  %5 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %6 = bitcast i8* %5 to i64*
  %7 = zext i32 %1 to i64
  %8 = shl nuw i64 %7, 32
  %9 = or i64 %8, 1
  store i64 %9, i64* %6, align 4
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test11FakeEncoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE(%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %5 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %4) #14
  %6 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3
  %7 = bitcast %"class.webrtc::VideoCodec"* %6 to i8*
  %8 = bitcast %"class.webrtc::VideoCodec"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %7, i8* align 8 %8, i64 352, i1 false) #14
  %9 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 18
  %10 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18
  %11 = icmp eq %"class.webrtc::VideoCodec"* %6, %1
  br i1 %11, label %41, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  %17 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  br i1 %16, label %31, label %21

21:                                               ; preds = %12
  br i1 %20, label %25, label %22

22:                                               ; preds = %21
  %23 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #14
  br label %41

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i8*, i8** %26, align 8
  %28 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %27, i64 %29) #14
  br label %41

31:                                               ; preds = %12
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = getelementptr inbounds %"class.webrtc::VideoCodec", %"class.webrtc::VideoCodec"* %1, i64 0, i32 18, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  %37 = zext i8 %19 to i64
  %38 = select i1 %20, i8* %33, i8* %36
  %39 = select i1 %20, i64 %35, i64 %37
  %40 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %9, i8* %38, i64 %39) #14
  br label %41

41:                                               ; preds = %3, %22, %25, %31
  %42 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5, i32 2
  %43 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 3
  %44 = load i32, i32* %43, align 8
  %45 = mul i32 %44, 1000
  %46 = tail call zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"* %42, i64 0, i64 0, i32 %45) #14
  %47 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 6
  %48 = load i32, i32* %47, align 4
  %49 = uitofp i32 %48 to double
  %50 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5, i32 3
  store double %49, double* %50, align 8
  %51 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 7
  store i8 1, i8* %51, align 4
  %52 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 0
  store i8 0, i8* %52, align 8
  %53 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 1
  %54 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %53, i64 0, i32 0, i32 0
  %55 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %54, align 8
  %56 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %55, null
  br i1 %56, label %63, label %57

57:                                               ; preds = %41
  %58 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %55 to i64
  %59 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %60 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %55 to i8*
  tail call void @_ZdlPv(i8* %61) #15
  %62 = bitcast %"class.std::__1::vector"* %53 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 24, i1 false) #14
  br label %63

63:                                               ; preds = %41, %57
  %64 = bitcast %"class.std::__1::vector"* %53 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %64, i8 0, i64 24, i1 false)
  %65 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %4) #14
  ret i32 0
}

declare zeroext i1 @_ZN6webrtc22VideoBitrateAllocation10SetBitrateEmmj(%"class.webrtc::VideoBitrateAllocation"*, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::VideoFrame"* nocapture readonly dereferenceable(176), %"class.std::__1::vector.64"* readonly) unnamed_addr #0 align 2 {
  %4 = alloca [3 x %"struct.webrtc::SpatialLayer"], align 16
  %5 = alloca %"struct.webrtc::VideoEncoder::RateControlParameters", align 8
  %6 = alloca %"struct.webrtc::test::FakeEncoder::FrameInfo", align 8
  %7 = alloca %"class.rtc::scoped_refptr.71", align 8
  %8 = alloca %"class.webrtc::EncodedImage", align 8
  %9 = alloca %"struct.webrtc::CodecSpecificInfo", align 8
  %10 = alloca %"class.rtc::scoped_refptr.71", align 8
  %11 = bitcast [3 x %"struct.webrtc::SpatialLayer"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 96, i8* nonnull %11) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 16 %11, i8* align 16 bitcast ([3 x { i16, i16, float, i8, [3 x i8], i32, i32, i32, i32, i8, [3 x i8] }]* @__const._ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.simulcast_streams to i8*), i64 96, i1 false)
  %12 = bitcast %"struct.webrtc::VideoEncoder::RateControlParameters"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 360, i8* nonnull %12) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %12, i8* align 8 bitcast ({ i32 (...)**, <{ i32, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]], i8, [3 x i8] }>, <{ i32, [5 x [4 x { { { { i8, [3 x i8], %union.anon.11 } } } }]], i8, [3 x i8] }>, double, %"class.webrtc::DataRate" }* @__const._ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.rates to i8*), i64 360, i1 false)
  call void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* nonnull %5) #14
  %13 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %14 = call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %13) #14
  %15 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 6
  %16 = load i32, i32* %15, align 4
  %17 = trunc i32 %16 to i8
  %18 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 9
  %19 = load i8, i8* %18, align 8
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %35, label %21

21:                                               ; preds = %3
  %22 = zext i8 %19 to i64
  %23 = and i64 %22, 1
  %24 = icmp eq i8 %19, 1
  br i1 %24, label %27, label %25

25:                                               ; preds = %21
  %26 = sub nsw i64 %22, %23
  br label %45

27:                                               ; preds = %45, %21
  %28 = phi i64 [ 0, %21 ], [ %57, %45 ]
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %27
  %31 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 10, i64 %28
  %32 = getelementptr inbounds [3 x %"struct.webrtc::SpatialLayer"], [3 x %"struct.webrtc::SpatialLayer"]* %4, i64 0, i64 %28
  %33 = bitcast %"struct.webrtc::SpatialLayer"* %32 to i8*
  %34 = bitcast %"struct.webrtc::SpatialLayer"* %31 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %33, i8* align 4 %34, i64 32, i1 false)
  br label %35

35:                                               ; preds = %30, %27, %3
  %36 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 4
  %37 = load %"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImageCallback"** %36, align 8
  %38 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %5, i64 0, i32 1
  %39 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5, i32 1
  %40 = bitcast %"class.webrtc::VideoBitrateAllocation"* %38 to i8*
  %41 = bitcast %"class.webrtc::VideoBitrateAllocation"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 352, i1 false) #14
  %42 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %5, i64 0, i32 3
  %43 = load double, double* %42, align 8
  %44 = fcmp ugt double %43, 0.000000e+00
  br i1 %44, label %62, label %60

45:                                               ; preds = %45, %25
  %46 = phi i64 [ 0, %25 ], [ %57, %45 ]
  %47 = phi i64 [ %26, %25 ], [ %58, %45 ]
  %48 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 10, i64 %46
  %49 = getelementptr inbounds [3 x %"struct.webrtc::SpatialLayer"], [3 x %"struct.webrtc::SpatialLayer"]* %4, i64 0, i64 %46
  %50 = bitcast %"struct.webrtc::SpatialLayer"* %49 to i8*
  %51 = bitcast %"struct.webrtc::SpatialLayer"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %50, i8* align 4 %51, i64 32, i1 false)
  %52 = or i64 %46, 1
  %53 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 10, i64 %52
  %54 = getelementptr inbounds [3 x %"struct.webrtc::SpatialLayer"], [3 x %"struct.webrtc::SpatialLayer"]* %4, i64 0, i64 %52
  %55 = bitcast %"struct.webrtc::SpatialLayer"* %54 to i8*
  %56 = bitcast %"struct.webrtc::SpatialLayer"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 16 %55, i8* align 4 %56, i64 32, i1 false)
  %57 = add nuw nsw i64 %46, 2
  %58 = add i64 %47, -2
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %27, label %45

60:                                               ; preds = %35
  %61 = uitofp i8 %17 to double
  store double %61, double* %42, align 8
  br label %62

62:                                               ; preds = %35, %60
  %63 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 7
  %64 = load i8, i8* %63, align 4, !range !2
  %65 = icmp ne i8 %64, 0
  store i8 0, i8* %63, align 4
  %66 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 8
  %67 = load i32, i32* %66, align 8
  %68 = add i32 %67, 1
  store i32 %68, i32* %66, align 8
  %69 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %70 = bitcast i8* %69 to i64*
  %71 = load i64, i64* %70, align 4
  %72 = lshr i64 %71, 32
  %73 = trunc i64 %72 to i32
  %74 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %13) #14
  %75 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %75) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %75, i8 -86, i64 32, i1 false)
  %76 = getelementptr inbounds %"struct.webrtc::VideoEncoder::RateControlParameters", %"struct.webrtc::VideoEncoder::RateControlParameters"* %5, i64 0, i32 2
  %77 = getelementptr inbounds [3 x %"struct.webrtc::SpatialLayer"], [3 x %"struct.webrtc::SpatialLayer"]* %4, i64 0, i64 0
  %78 = load double, double* %42, align 8
  %79 = fadd double %78, 5.000000e-01
  %80 = fptosi double %79 to i32
  call void @_ZN6webrtc4test11FakeEncoder9NextFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS2_9allocatorIS4_EEEEbhRKNS_22VideoBitrateAllocationEPNS_12SpatialLayerEi(%"struct.webrtc::test::FakeEncoder::FrameInfo"* nonnull sret %6, %"class.webrtc::test::FakeEncoder"* %0, %"class.std::__1::vector.64"* %2, i1 zeroext %65, i8 zeroext %19, %"class.webrtc::VideoBitrateAllocation"* dereferenceable(168) %76, %"struct.webrtc::SpatialLayer"* nonnull %77, i32 %80)
  %81 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %6, i64 0, i32 1
  %82 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %6, i64 0, i32 1, i32 0, i32 1
  %83 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %82 to i64*
  %84 = load i64, i64* %83, align 8
  %85 = bitcast %"class.std::__1::vector"* %81 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = icmp eq i64 %84, %86
  %88 = inttoptr i64 %86 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br i1 %87, label %263, label %89

89:                                               ; preds = %62
  %90 = trunc i64 %71 to i8
  %91 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %81, i64 0, i32 0, i32 0
  %92 = bitcast %"class.rtc::scoped_refptr.71"* %7 to i8*
  %93 = getelementptr inbounds %"class.rtc::scoped_refptr.71", %"class.rtc::scoped_refptr.71"* %7, i64 0, i32 0
  %94 = trunc i32 %67 to i8
  %95 = lshr i32 %67, 8
  %96 = trunc i32 %95 to i8
  %97 = lshr i32 %67, 16
  %98 = trunc i32 %97 to i8
  %99 = lshr i32 %67, 24
  %100 = trunc i32 %99 to i8
  %101 = bitcast %"class.webrtc::EncodedImage"* %8 to i8*
  %102 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 11, i32 0
  %103 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 12
  %104 = getelementptr inbounds %"class.webrtc::VideoFrame", %"class.webrtc::VideoFrame"* %1, i64 0, i32 2
  %105 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 13
  %106 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 4
  %107 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 0
  %108 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 1
  %109 = icmp eq i8 %90, 0
  %110 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 8
  %111 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %8, i64 0, i32 14
  %112 = bitcast %"class.absl::optional"* %111 to i64*
  %113 = bitcast %"struct.webrtc::CodecSpecificInfo"* %9 to i8*
  %114 = getelementptr inbounds %"class.rtc::scoped_refptr.71", %"class.rtc::scoped_refptr.71"* %10, i64 0, i32 0
  %115 = bitcast %"class.webrtc::test::FakeEncoder"* %0 to void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)***
  %116 = bitcast %"class.webrtc::EncodedImageCallback"* %37 to { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)***
  br label %117

117:                                              ; preds = %89, %253
  %118 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %88, %89 ], [ %255, %253 ]
  %119 = phi i64 [ %86, %89 ], [ %256, %253 ]
  %120 = phi i64 [ %84, %89 ], [ %257, %253 ]
  %121 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %88, %89 ], [ %254, %253 ]
  %122 = phi i64 [ 0, %89 ], [ %259, %253 ]
  %123 = phi i8 [ 0, %89 ], [ %258, %253 ]
  %124 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %121, i64 %122, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = icmp slt i32 %125, 14
  br i1 %126, label %127, label %129

127:                                              ; preds = %117
  %128 = inttoptr i64 %119 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br label %253

129:                                              ; preds = %117
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %92) #14
  store %"class.webrtc::EncodedImageBuffer"* inttoptr (i64 -6148914691236517206 to %"class.webrtc::EncodedImageBuffer"*), %"class.webrtc::EncodedImageBuffer"** %93, align 8
  %130 = load i32, i32* %124, align 4
  %131 = sext i32 %130 to i64
  call void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr.71"* nonnull sret %7, i64 %131) #14
  %132 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %93, align 8
  %133 = bitcast %"class.webrtc::EncodedImageBuffer"* %132 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %134 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %133, align 8
  %135 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %134, i64 5
  %136 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %135, align 8
  %137 = call i8* %136(%"class.webrtc::EncodedImageBuffer"* %132) #14
  %138 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %91, align 8
  %139 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %138, i64 %122, i32 0
  %140 = load i32, i32* %139, align 4
  %141 = sext i32 %140 to i64
  call void @llvm.memset.p0i8.i64(i8* align 1 %137, i8 9, i64 %141, i1 false)
  %142 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %93, align 8
  %143 = bitcast %"class.webrtc::EncodedImageBuffer"* %142 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %144 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %143, align 8
  %145 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %144, i64 5
  %146 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %145, align 8
  %147 = call i8* %146(%"class.webrtc::EncodedImageBuffer"* %142) #14
  %148 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %91, align 8
  %149 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %148, i64 %122, i32 0
  %150 = load i32, i32* %149, align 4
  %151 = sext i32 %150 to i64
  %152 = getelementptr inbounds i8, i8* %147, i64 -4
  %153 = getelementptr inbounds i8, i8* %152, i64 %151
  store i8 %94, i8* %153, align 1
  %154 = getelementptr inbounds i8, i8* %153, i64 1
  store i8 %96, i8* %154, align 1
  %155 = getelementptr inbounds i8, i8* %153, i64 2
  store i8 %98, i8* %155, align 1
  %156 = getelementptr inbounds i8, i8* %153, i64 3
  store i8 %100, i8* %156, align 1
  call void @llvm.lifetime.start.p0i8(i64 272, i8* nonnull %101) #14
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %101, i8* align 8 bitcast (<{ i32, i32, i64, i64, i32, i32, i8, [3 x i8], i32, %"struct.webrtc::VideoPlayoutDelay", { i8, [7 x i8], i64, i64, i64, i64, i64, i64, i64, i64 }, %"class.rtc::scoped_refptr.72", i64, i32, { { { { i8, [3 x i8], %union.anon } } } }, [4 x i8], %"class.std::__1::map", { { { { i8, [3 x i8], { { i8, i8, i8, [1 x i8], i32, i32, i32, { { { { i8, [3 x i8], %union.anon.21 } } } } } } } } } }, { { { { i8, [1 x i8], %union.anon.85 } } } }, [4 x i8], %"class.webrtc::RtpPacketInfos", i8, [7 x i8] }>* @__const._ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE.encoded to i8*), i64 272, i1 false)
  call void @_ZN6webrtc12EncodedImageC1Ev(%"class.webrtc::EncodedImage"* nonnull %8) #14
  %157 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %93, align 8
  %158 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %157, i64 0, i32 0
  %159 = icmp eq %"class.webrtc::EncodedImageBuffer"* %157, null
  br i1 %159, label %169, label %160

160:                                              ; preds = %129
  %161 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %157, i64 0, i32 0, i32 0
  %162 = bitcast %"class.webrtc::EncodedImageBuffer"* %157 to void (%"class.rtc::RefCountInterface"*)***
  %163 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %162, align 8
  %164 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %163, align 8
  call void %164(%"class.rtc::RefCountInterface"* %161) #14
  %165 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %157, i64 0, i32 0, i32 0
  %166 = bitcast %"class.webrtc::EncodedImageBuffer"* %157 to void (%"class.rtc::RefCountInterface"*)***
  %167 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %166, align 8
  %168 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %167, align 8
  call void %168(%"class.rtc::RefCountInterface"* %165) #14
  br label %169

169:                                              ; preds = %129, %160
  %170 = load %"class.webrtc::EncodedImageBufferInterface"*, %"class.webrtc::EncodedImageBufferInterface"** %102, align 8
  %171 = icmp eq %"class.webrtc::EncodedImageBufferInterface"* %170, null
  br i1 %171, label %179, label %172

172:                                              ; preds = %169
  %173 = getelementptr inbounds %"class.webrtc::EncodedImageBufferInterface", %"class.webrtc::EncodedImageBufferInterface"* %170, i64 0, i32 0
  %174 = bitcast %"class.webrtc::EncodedImageBufferInterface"* %170 to i32 (%"class.rtc::RefCountInterface"*)***
  %175 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %174, align 8
  %176 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %175, i64 1
  %177 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %176, align 8
  %178 = call i32 %177(%"class.rtc::RefCountInterface"* %173) #14
  br label %179

179:                                              ; preds = %169, %172
  store %"class.webrtc::EncodedImageBufferInterface"* %158, %"class.webrtc::EncodedImageBufferInterface"** %102, align 8
  %180 = bitcast %"class.webrtc::EncodedImageBuffer"* %157 to i64 (%"class.webrtc::EncodedImageBufferInterface"*)***
  %181 = load i64 (%"class.webrtc::EncodedImageBufferInterface"*)**, i64 (%"class.webrtc::EncodedImageBufferInterface"*)*** %180, align 8
  %182 = getelementptr inbounds i64 (%"class.webrtc::EncodedImageBufferInterface"*)*, i64 (%"class.webrtc::EncodedImageBufferInterface"*)** %181, i64 6
  %183 = load i64 (%"class.webrtc::EncodedImageBufferInterface"*)*, i64 (%"class.webrtc::EncodedImageBufferInterface"*)** %182, align 8
  %184 = call i64 %183(%"class.webrtc::EncodedImageBufferInterface"* %158) #14
  store i64 %184, i64* %103, align 8
  br i1 %159, label %192, label %185

185:                                              ; preds = %179
  %186 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %157, i64 0, i32 0, i32 0
  %187 = bitcast %"class.webrtc::EncodedImageBuffer"* %157 to i32 (%"class.rtc::RefCountInterface"*)***
  %188 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %187, align 8
  %189 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %188, i64 1
  %190 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %189, align 8
  %191 = call i32 %190(%"class.rtc::RefCountInterface"* %186) #14
  br label %192

192:                                              ; preds = %179, %185
  %193 = load i32, i32* %104, align 8
  store i32 %193, i32* %105, align 8
  %194 = load i8, i8* %75, align 8, !range !2
  %195 = icmp eq i8 %194, 0
  %196 = select i1 %195, i32 4, i32 3
  store i32 %196, i32* %106, align 8
  %197 = getelementptr inbounds [3 x %"struct.webrtc::SpatialLayer"], [3 x %"struct.webrtc::SpatialLayer"]* %4, i64 0, i64 %122, i32 0
  %198 = load i16, i16* %197, align 16
  %199 = zext i16 %198 to i32
  store i32 %199, i32* %107, align 8
  %200 = getelementptr inbounds [3 x %"struct.webrtc::SpatialLayer"], [3 x %"struct.webrtc::SpatialLayer"]* %4, i64 0, i64 %122, i32 1
  %201 = load i16, i16* %200, align 2
  %202 = zext i16 %201 to i32
  store i32 %202, i32* %108, align 4
  br i1 %109, label %204, label %203

203:                                              ; preds = %192
  store i32 %73, i32* %110, align 4
  br label %204

204:                                              ; preds = %192, %203
  %205 = zext i8 %123 to i64
  %206 = shl nuw nsw i64 %205, 32
  %207 = or i64 %206, 1
  store i64 %207, i64* %112, align 4
  call void @llvm.lifetime.start.p0i8(i64 1992, i8* nonnull %113) #14
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %113, i8 -86, i64 1992, i1 false)
  %208 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %93, align 8
  store %"class.webrtc::EncodedImageBuffer"* %208, %"class.webrtc::EncodedImageBuffer"** %114, align 8
  %209 = icmp eq %"class.webrtc::EncodedImageBuffer"* %208, null
  br i1 %209, label %215, label %210

210:                                              ; preds = %204
  %211 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %208, i64 0, i32 0, i32 0
  %212 = bitcast %"class.webrtc::EncodedImageBuffer"* %208 to void (%"class.rtc::RefCountInterface"*)***
  %213 = load void (%"class.rtc::RefCountInterface"*)**, void (%"class.rtc::RefCountInterface"*)*** %212, align 8
  %214 = load void (%"class.rtc::RefCountInterface"*)*, void (%"class.rtc::RefCountInterface"*)** %213, align 8
  call void %214(%"class.rtc::RefCountInterface"* %211) #14
  br label %215

215:                                              ; preds = %204, %210
  %216 = load void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)**, void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)*** %115, align 8
  %217 = getelementptr inbounds void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)*, void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)** %216, i64 13
  %218 = load void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)*, void (%"struct.webrtc::CodecSpecificInfo"*, %"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImage"*, %"class.rtc::scoped_refptr.71"*)** %217, align 8
  call void %218(%"struct.webrtc::CodecSpecificInfo"* nonnull sret %9, %"class.webrtc::test::FakeEncoder"* %0, %"class.webrtc::EncodedImage"* nonnull dereferenceable(272) %8, %"class.rtc::scoped_refptr.71"* nonnull %10) #14
  %219 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %114, align 8
  %220 = icmp eq %"class.webrtc::EncodedImageBuffer"* %219, null
  br i1 %220, label %228, label %221

221:                                              ; preds = %215
  %222 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %219, i64 0, i32 0, i32 0
  %223 = bitcast %"class.webrtc::EncodedImageBuffer"* %219 to i32 (%"class.rtc::RefCountInterface"*)***
  %224 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %223, align 8
  %225 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %224, i64 1
  %226 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %225, align 8
  %227 = call i32 %226(%"class.rtc::RefCountInterface"* %222) #14
  br label %228

228:                                              ; preds = %215, %221
  %229 = load { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)**, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*** %116, align 8
  %230 = getelementptr inbounds { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)** %229, i64 2
  %231 = load { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)*, { i64, i8 } (%"class.webrtc::EncodedImageCallback"*, %"class.webrtc::EncodedImage"*, %"struct.webrtc::CodecSpecificInfo"*)** %230, align 8
  %232 = call { i64, i8 } %231(%"class.webrtc::EncodedImageCallback"* %37, %"class.webrtc::EncodedImage"* nonnull dereferenceable(272) %8, %"struct.webrtc::CodecSpecificInfo"* nonnull %9) #14
  %233 = extractvalue { i64, i8 } %232, 0
  %234 = trunc i64 %233 to i32
  %235 = icmp eq i32 %234, 0
  call void @_ZN6webrtc17CodecSpecificInfoD1Ev(%"struct.webrtc::CodecSpecificInfo"* nonnull %9) #14
  call void @llvm.lifetime.end.p0i8(i64 1992, i8* nonnull %113) #14
  call void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"* nonnull %8) #14
  call void @llvm.lifetime.end.p0i8(i64 272, i8* nonnull %101) #14
  %236 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %93, align 8
  %237 = icmp eq %"class.webrtc::EncodedImageBuffer"* %236, null
  br i1 %237, label %245, label %238

238:                                              ; preds = %228
  %239 = getelementptr inbounds %"class.webrtc::EncodedImageBuffer", %"class.webrtc::EncodedImageBuffer"* %236, i64 0, i32 0, i32 0
  %240 = bitcast %"class.webrtc::EncodedImageBuffer"* %236 to i32 (%"class.rtc::RefCountInterface"*)***
  %241 = load i32 (%"class.rtc::RefCountInterface"*)**, i32 (%"class.rtc::RefCountInterface"*)*** %240, align 8
  %242 = getelementptr inbounds i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %241, i64 1
  %243 = load i32 (%"class.rtc::RefCountInterface"*)*, i32 (%"class.rtc::RefCountInterface"*)** %242, align 8
  %244 = call i32 %243(%"class.rtc::RefCountInterface"* %239) #14
  br label %245

245:                                              ; preds = %238, %228
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %92) #14
  br i1 %235, label %249, label %246

246:                                              ; preds = %245
  %247 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %6, i64 0, i32 1, i32 0, i32 0
  %248 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %247, align 8
  br label %263

249:                                              ; preds = %245
  %250 = load i64, i64* %83, align 8
  %251 = load i64, i64* %85, align 8
  %252 = inttoptr i64 %251 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br label %253

253:                                              ; preds = %127, %249
  %254 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %128, %127 ], [ %252, %249 ]
  %255 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %118, %127 ], [ %252, %249 ]
  %256 = phi i64 [ %119, %127 ], [ %251, %249 ]
  %257 = phi i64 [ %120, %127 ], [ %250, %249 ]
  %258 = add i8 %123, 1
  %259 = zext i8 %258 to i64
  %260 = sub i64 %257, %256
  %261 = ashr exact i64 %260, 3
  %262 = icmp ugt i64 %261, %259
  br i1 %262, label %117, label %263

263:                                              ; preds = %253, %246, %62
  %264 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %88, %62 ], [ %248, %246 ], [ %255, %253 ]
  %265 = phi i32 [ 0, %62 ], [ -1, %246 ], [ 0, %253 ]
  %266 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %264, null
  br i1 %266, label %270, label %267

267:                                              ; preds = %263
  %268 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %264 to i64
  store i64 %268, i64* %83, align 8
  %269 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %264 to i8*
  call void @_ZdlPv(i8* %269) #15
  br label %270

270:                                              ; preds = %263, %267
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %75) #14
  call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 360, i8* nonnull %12) #14
  call void @llvm.lifetime.end.p0i8(i64 96, i8* nonnull %11) #14
  ret i32 %265
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoder9NextFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS2_9allocatorIS4_EEEEbhRKNS_22VideoBitrateAllocationEPNS_12SpatialLayerEi(%"struct.webrtc::test::FakeEncoder::FrameInfo"* noalias sret, %"class.webrtc::test::FakeEncoder"*, %"class.std::__1::vector.64"* readonly, i1 zeroext, i8 zeroext, %"class.webrtc::VideoBitrateAllocation"* dereferenceable(168), %"struct.webrtc::SpatialLayer"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %9 = zext i1 %3 to i8
  %10 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %0, i64 0, i32 0
  %11 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo"* %0 to i64*
  store i64 -6148914691236517206, i64* %11, align 8
  %12 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %0, i64 0, i32 1
  %13 = bitcast %"class.std::__1::vector"* %12 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %13, i8 0, i64 24, i1 false) #14
  store i8 %9, i8* %10, align 8
  %14 = icmp eq %"class.std::__1::vector.64"* %2, null
  br i1 %14, label %29, label %15

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %2, i64 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %2, i64 0, i32 0, i32 1
  %19 = load i32*, i32** %18, align 8
  %20 = icmp eq i32* %17, %19
  br i1 %20, label %29, label %23

21:                                               ; preds = %23
  %22 = icmp eq i32* %27, %19
  br i1 %22, label %29, label %23

23:                                               ; preds = %15, %21
  %24 = phi i32* [ %27, %21 ], [ %17, %15 ]
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 3
  %27 = getelementptr inbounds i32, i32* %24, i64 1
  br i1 %26, label %28, label %21

28:                                               ; preds = %23
  store i8 1, i8* %10, align 8
  br label %29

29:                                               ; preds = %21, %15, %28, %8
  %30 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 9, i32 0, i32 0
  %31 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %30) #14
  %32 = icmp eq i8 %4, 0
  br i1 %32, label %33, label %35

33:                                               ; preds = %29
  %34 = bitcast %"class.std::__1::vector"* %12 to i64*
  br label %49

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 1, i32 1
  %37 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %38 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %37 to i64*
  %39 = bitcast %"class.std::__1::vector"* %36 to i64*
  %40 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %41 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %0, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %42 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %40 to i64*
  %43 = bitcast %"class.std::__1::vector"* %12 to i64*
  %44 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %41 to i64*
  %45 = zext i8 %4 to i64
  br label %65

46:                                               ; preds = %140
  %47 = load i64, i64* %42, align 8
  %48 = load i64, i64* %43, align 8
  br label %49

49:                                               ; preds = %33, %46
  %50 = phi i64* [ %34, %33 ], [ %43, %46 ]
  %51 = phi i64 [ 0, %33 ], [ %48, %46 ]
  %52 = phi i64 [ 0, %33 ], [ %47, %46 ]
  %53 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 1
  %54 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 1, i32 1
  %55 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 1, i32 1, i32 0, i32 1
  %56 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector"* %54 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = sub i64 %57, %59
  %61 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %0, i64 0, i32 1, i32 0, i32 1
  %62 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %61 to i64*
  %63 = sub i64 %52, %51
  %64 = icmp ult i64 %60, %63
  br i1 %64, label %143, label %144

65:                                               ; preds = %140, %35
  %66 = phi i64 [ 0, %35 ], [ %141, %140 ]
  %67 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %5, i64 %66, i64 0) #14
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %140, label %69

69:                                               ; preds = %65
  %70 = load i64, i64* %38, align 8
  %71 = load i64, i64* %39, align 8
  %72 = sub i64 %70, %71
  %73 = ashr exact i64 %72, 3
  %74 = icmp ugt i64 %73, %66
  br i1 %74, label %75, label %84

75:                                               ; preds = %69
  %76 = inttoptr i64 %71 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  %77 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %76, i64 %66, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = add nsw i32 %78, 1
  store i32 %79, i32* %77, align 4
  %80 = getelementptr inbounds %"struct.webrtc::SpatialLayer", %"struct.webrtc::SpatialLayer"* %6, i64 %66, i32 3
  %81 = load i8, i8* %80, align 4
  %82 = zext i8 %81 to i32
  %83 = srem i32 %79, %82
  br label %84

84:                                               ; preds = %69, %75
  %85 = phi i32 [ %83, %75 ], [ 0, %69 ]
  %86 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %40, align 8
  %87 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %41, align 8
  %88 = icmp ult %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %86, %87
  %89 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %87 to i64
  br i1 %88, label %90, label %95

90:                                               ; preds = %84
  %91 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %86, i64 0, i32 0
  store i32 0, i32* %91, align 4
  %92 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %86, i64 0, i32 1
  store i32 %85, i32* %92, align 4
  %93 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %86, i64 1
  %94 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %93 to i64
  store i64 %94, i64* %42, align 8
  br label %140

95:                                               ; preds = %84
  %96 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %86 to i64
  %97 = load i64, i64* %43, align 8
  %98 = sub i64 %96, %97
  %99 = ashr exact i64 %98, 3
  %100 = add nsw i64 %99, 1
  %101 = icmp ugt i64 %100, 2305843009213693951
  br i1 %101, label %102, label %104

102:                                              ; preds = %95
  %103 = bitcast %"class.std::__1::vector"* %12 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %103) #16
  unreachable

104:                                              ; preds = %95
  %105 = sub i64 %89, %97
  %106 = ashr exact i64 %105, 3
  %107 = icmp ult i64 %106, 1152921504606846975
  br i1 %107, label %108, label %116

108:                                              ; preds = %104
  %109 = ashr exact i64 %105, 2
  %110 = icmp ult i64 %109, %100
  %111 = select i1 %110, i64 %100, i64 %109
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %121, label %113

113:                                              ; preds = %108
  %114 = icmp ugt i64 %111, 2305843009213693951
  br i1 %114, label %115, label %116

115:                                              ; preds = %113
  tail call void @abort() #16
  unreachable

116:                                              ; preds = %113, %104
  %117 = phi i64 [ %111, %113 ], [ 2305843009213693951, %104 ]
  %118 = shl i64 %117, 3
  %119 = tail call i8* @_Znwm(i64 %118) #15
  %120 = bitcast i8* %119 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br label %121

121:                                              ; preds = %116, %108
  %122 = phi i64 [ %117, %116 ], [ 0, %108 ]
  %123 = phi i8* [ %119, %116 ], [ null, %108 ]
  %124 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %120, %116 ], [ null, %108 ]
  %125 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %124, i64 %99
  %126 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %124, i64 %122
  %127 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %126 to i64
  %128 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %125, i64 0, i32 0
  store i32 0, i32* %128, align 4
  %129 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %124, i64 %99, i32 1
  store i32 %85, i32* %129, align 4
  %130 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %125, i64 1
  %131 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %130 to i64
  %132 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %124 to i64
  %133 = icmp sgt i64 %98, 0
  br i1 %133, label %134, label %136

134:                                              ; preds = %121
  %135 = inttoptr i64 %97 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %123, i8* align 4 %135, i64 %98, i1 false) #14
  br label %136

136:                                              ; preds = %134, %121
  store i64 %132, i64* %43, align 8
  store i64 %131, i64* %42, align 8
  store i64 %127, i64* %44, align 8
  %137 = icmp eq i64 %97, 0
  br i1 %137, label %140, label %138

138:                                              ; preds = %136
  %139 = inttoptr i64 %97 to i8*
  tail call void @_ZdlPv(i8* %139) #15
  br label %140

140:                                              ; preds = %90, %136, %138, %65
  %141 = add nuw nsw i64 %66, 1
  %142 = icmp eq i64 %141, %45
  br i1 %142, label %46, label %65

143:                                              ; preds = %49
  store i8 1, i8* %10, align 8
  br label %144

144:                                              ; preds = %143, %49
  %145 = load i64, i64* %62, align 8
  %146 = load i64, i64* %50, align 8
  %147 = icmp eq i64 %145, %146
  %148 = inttoptr i64 %146 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br i1 %147, label %154, label %149

149:                                              ; preds = %144
  %150 = shl nsw i32 %7, 3
  %151 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 12
  br label %164

152:                                              ; preds = %216
  %153 = inttoptr i64 %220 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br label %154

154:                                              ; preds = %152, %144
  %155 = phi i64 [ %145, %144 ], [ %219, %152 ]
  %156 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %148, %144 ], [ %153, %152 ]
  %157 = load i8, i8* %10, align 8, !range !2
  %158 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo", %"struct.webrtc::test::FakeEncoder::FrameInfo"* %53, i64 0, i32 0
  store i8 %157, i8* %158, align 8
  %159 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo"* %53, %0
  br i1 %159, label %162, label %160

160:                                              ; preds = %154
  %161 = inttoptr i64 %155 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  tail call void @_ZNSt3__16vectorIN6webrtc4test11FakeEncoder9FrameInfo12SpatialLayerENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"* %54, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %156, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %161) #14
  br label %162

162:                                              ; preds = %154, %160
  %163 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %30) #14
  ret void

164:                                              ; preds = %149, %216
  %165 = phi %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* [ %148, %149 ], [ %224, %216 ]
  %166 = phi i64 [ 0, %149 ], [ %218, %216 ]
  %167 = phi i8 [ 0, %149 ], [ %217, %216 ]
  %168 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %165, i64 %166
  %169 = load i8, i8* %10, align 8, !range !2
  %170 = icmp eq i8 %169, 0
  %171 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %165, i64 %166, i32 1
  br i1 %170, label %190, label %172

172:                                              ; preds = %164
  store i32 0, i32* %171, align 4
  %173 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %5, i64 %166, i64 0) #14
  %174 = add i32 %173, 7
  %175 = load i64, i64* %62, align 8
  %176 = load i64, i64* %50, align 8
  %177 = sub i64 %175, %176
  %178 = ashr exact i64 %177, 3
  %179 = add nsw i64 %178, -1
  %180 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @_ZN6webrtc4test12_GLOBAL__N_124kTemporalLayerRateFactorE, i64 0, i64 %179, i64 %166
  %181 = load i32, i32* %180, align 4
  %182 = mul i32 %181, %174
  %183 = udiv i32 %182, %150
  %184 = zext i32 %183 to i64
  %185 = shl nuw nsw i64 %184, 2
  %186 = load i64, i64* %151, align 8
  %187 = add i64 %185, %186
  store i64 %187, i64* %151, align 8
  %188 = mul i32 %183, 5
  %189 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %168, i64 0, i32 0
  store i32 %188, i32* %189, align 4
  br label %216

190:                                              ; preds = %164
  %191 = load i32, i32* %171, align 4
  %192 = sext i32 %191 to i64
  %193 = tail call i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"* %5, i64 %166, i64 %192) #14
  %194 = add i32 %193, 7
  %195 = load i64, i64* %62, align 8
  %196 = load i64, i64* %50, align 8
  %197 = sub i64 %195, %196
  %198 = ashr exact i64 %197, 3
  %199 = add nsw i64 %198, -1
  %200 = getelementptr inbounds [4 x [4 x i32]], [4 x [4 x i32]]* @_ZN6webrtc4test12_GLOBAL__N_124kTemporalLayerRateFactorE, i64 0, i64 %199, i64 %166
  %201 = load i32, i32* %200, align 4
  %202 = mul i32 %201, %194
  %203 = udiv i32 %202, %150
  %204 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %168, i64 0, i32 0
  store i32 %203, i32* %204, align 4
  %205 = load i64, i64* %151, align 8
  %206 = icmp eq i64 %205, 0
  br i1 %206, label %216, label %207

207:                                              ; preds = %190
  %208 = lshr i32 %203, 1
  %209 = zext i32 %208 to i64
  %210 = icmp ult i64 %205, %209
  %211 = select i1 %210, i64 %205, i64 %209
  %212 = sub i64 %205, %211
  store i64 %212, i64* %151, align 8
  %213 = load i32, i32* %204, align 4
  %214 = trunc i64 %211 to i32
  %215 = sub i32 %213, %214
  store i32 %215, i32* %204, align 4
  br label %216

216:                                              ; preds = %207, %190, %172
  %217 = add i8 %167, 1
  %218 = zext i8 %217 to i64
  %219 = load i64, i64* %62, align 8
  %220 = load i64, i64* %50, align 8
  %221 = sub i64 %219, %220
  %222 = ashr exact i64 %221, 3
  %223 = icmp ugt i64 %222, %218
  %224 = inttoptr i64 %220 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br i1 %223, label %164, label %152
}

declare void @_ZN6webrtc18EncodedImageBuffer6CreateEm(%"class.rtc::scoped_refptr.71"* sret, i64) local_unnamed_addr #1

declare void @_ZN6webrtc12EncodedImageC1Ev(%"class.webrtc::EncodedImage"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN6webrtc17CodecSpecificInfoD1Ev(%"struct.webrtc::CodecSpecificInfo"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc12EncodedImageD1Ev(%"class.webrtc::EncodedImage"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEE(%"struct.webrtc::CodecSpecificInfo"* noalias sret, %"class.webrtc::test::FakeEncoder"* nocapture readnone, %"class.webrtc::EncodedImage"* nocapture readnone dereferenceable(272), %"class.rtc::scoped_refptr.71"* nocapture readnone) unnamed_addr #0 align 2 {
  %5 = bitcast %"struct.webrtc::CodecSpecificInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 -86, i64 1992, i1 false)
  tail call void @_ZN6webrtc17CodecSpecificInfoC1Ev(%"struct.webrtc::CodecSpecificInfo"* %0) #14
  %6 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 0
  store i32 0, i32* %6, align 8
  ret void
}

declare void @_ZN6webrtc17CodecSpecificInfoC1Ev(%"struct.webrtc::CodecSpecificInfo"*) unnamed_addr #1

declare i32 @_ZNK6webrtc22VideoBitrateAllocation10GetBitrateEmm(%"class.webrtc::VideoBitrateAllocation"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test11FakeEncoder30RegisterEncodeCompleteCallbackEPNS_20EncodedImageCallbackE(%"class.webrtc::test::FakeEncoder"*, %"class.webrtc::EncodedImageCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #14
  %5 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 4
  store %"class.webrtc::EncodedImageCallback"* %1, %"class.webrtc::EncodedImageCallback"** %5, align 8
  %6 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN6webrtc4test11FakeEncoder7ReleaseEv(%"class.webrtc::test::FakeEncoder"* nocapture readnone) unnamed_addr #3 align 2 {
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test11FakeEncoder8SetRatesERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::test::FakeEncoder"*, %"struct.webrtc::VideoEncoder::RateControlParameters"* nocapture readonly dereferenceable(360)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %3) #14
  tail call void @_ZN6webrtc4test11FakeEncoder14SetRatesLockedERKNS_12VideoEncoder21RateControlParametersE(%"class.webrtc::test::FakeEncoder"* %0, %"struct.webrtc::VideoEncoder::RateControlParameters"* dereferenceable(360) %1)
  %5 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %3) #14
  ret void
}

declare zeroext i1 @_ZNK6webrtc22VideoBitrateAllocation10HasBitrateEmm(%"class.webrtc::VideoBitrateAllocation"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK6webrtc4test11FakeEncoder14GetEncoderInfoEv(%"struct.webrtc::VideoEncoder::EncoderInfo"* noalias sret, %"class.webrtc::test::FakeEncoder"*) unnamed_addr #0 align 2 {
  %3 = alloca i8, align 1
  %4 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 240, i1 false)
  tail call void @_ZN6webrtc12VideoEncoder11EncoderInfoC1Ev(%"struct.webrtc::VideoEncoder::EncoderInfo"* %0) #14
  %5 = load i8*, i8** @_ZN6webrtc4test11FakeEncoder19kImplementationNameE, align 8
  %6 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 4
  %7 = load i8, i8* %5, align 1
  %8 = tail call i1 @llvm.is.constant.i8(i8 %7) #14
  br i1 %8, label %9, label %32

9:                                                ; preds = %2
  %10 = tail call i64 @strlen(i8* %5) #14
  %11 = icmp ult i64 %10, 23
  br i1 %11, label %12, label %30

12:                                               ; preds = %9
  %13 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %14 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %13, i64 0, i32 1, i32 0
  %15 = load i8, i8* %14, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %21

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  store i64 %10, i64* %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  br label %24

21:                                               ; preds = %12
  %22 = trunc i64 %10 to i8
  store i8 %22, i8* %14, align 1
  %23 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  br label %24

24:                                               ; preds = %21, %17
  %25 = phi i8* [ %20, %17 ], [ %23, %21 ]
  %26 = icmp eq i64 %10, 0
  br i1 %26, label %28, label %27

27:                                               ; preds = %24
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %25, i8* align 1 %5, i64 %10, i1 false) #14
  br label %28

28:                                               ; preds = %27, %24
  %29 = getelementptr inbounds i8, i8* %25, i64 %10
  store i8 0, i8* %29, align 1
  br label %34

30:                                               ; preds = %9
  %31 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"* %6, i8* %5, i64 %10) #14
  br label %34

32:                                               ; preds = %2
  %33 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"* %6, i8* %5) #14
  br label %34

34:                                               ; preds = %28, %30, %32
  %35 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 9, i32 0, i32 0
  %36 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %35) #14
  %37 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 3, i32 9
  %38 = load i8, i8* %37, align 8
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %64, %34
  %41 = call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %35) #14
  ret void

42:                                               ; preds = %34, %64
  %43 = phi i64 [ %65, %64 ], [ 0, %34 ]
  %44 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %1, i64 0, i32 3, i32 10, i64 %43, i32 3
  %45 = load i8, i8* %44, align 4
  %46 = zext i8 %45 to i32
  %47 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %43
  %48 = getelementptr inbounds %"class.absl::InlinedVector.139", %"class.absl::InlinedVector.139"* %47, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i64, i64* %48, align 8
  %50 = and i64 %49, 1
  %51 = icmp eq i64 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %43, i32 0, i32 1, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #15
  br label %55

55:                                               ; preds = %42, %52
  store i64 0, i64* %48, align 8
  %56 = icmp eq i8 %45, 0
  br i1 %56, label %64, label %57

57:                                               ; preds = %55
  %58 = getelementptr inbounds %"class.absl::InlinedVector.139", %"class.absl::InlinedVector.139"* %47, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %43, i32 0, i32 1, i32 0, i32 0
  %60 = bitcast i8** %59 to i64*
  %61 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %43, i32 0, i32 1, i32 0, i32 1
  %62 = getelementptr inbounds %"struct.webrtc::VideoEncoder::EncoderInfo", %"struct.webrtc::VideoEncoder::EncoderInfo"* %0, i64 0, i32 8, i64 %43, i32 0, i32 1
  %63 = ptrtoint %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %62 to i64
  br label %69

64:                                               ; preds = %92, %55
  %65 = add nuw nsw i64 %43, 1
  %66 = load i8, i8* %37, align 8
  %67 = zext i8 %66 to i64
  %68 = icmp ult i64 %65, %67
  br i1 %68, label %42, label %40

69:                                               ; preds = %95, %57
  %70 = phi i64 [ 0, %57 ], [ %96, %95 ]
  %71 = phi i32 [ 0, %57 ], [ %93, %95 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #14
  %72 = sub nsw i32 %46, %71
  %73 = sdiv i32 255, %72
  %74 = trunc i32 %73 to i8
  store i8 %74, i8* %3, align 1
  %75 = and i64 %70, 1
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %69
  %78 = load i64, i64* %60, align 8, !noalias !3
  %79 = load i64, i64* %61, align 8, !noalias !3
  br label %80

80:                                               ; preds = %69, %77
  %81 = phi i64 [ %78, %77 ], [ %63, %69 ]
  %82 = phi i64 [ %79, %77 ], [ 4, %69 ]
  %83 = lshr i64 %70, 1
  %84 = icmp eq i64 %83, %82
  br i1 %84, label %90, label %85, !prof !6

85:                                               ; preds = %80
  %86 = inttoptr i64 %81 to i8*
  %87 = getelementptr inbounds i8, i8* %86, i64 %83
  store i8 %74, i8* %87, align 1
  %88 = load i64, i64* %48, align 8
  %89 = add i64 %88, 2
  store i64 %89, i64* %48, align 8
  br label %92

90:                                               ; preds = %80
  %91 = call dereferenceable(1) i8* @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJhEEERhDpOT_(%"class.absl::inlined_vector_internal::Storage.140"* %58, i8* nonnull dereferenceable(1) %3) #14
  br label %92

92:                                               ; preds = %85, %90
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #14
  %93 = add nuw nsw i32 %71, 1
  %94 = icmp eq i32 %93, %46
  br i1 %94, label %64, label %95

95:                                               ; preds = %92
  %96 = load i64, i64* %48, align 8, !noalias !3
  br label %69
}

declare void @_ZN6webrtc12VideoEncoder11EncoderInfoC1Ev(%"struct.webrtc::VideoEncoder::EncoderInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK6webrtc4test11FakeEncoder27GetConfiguredInputFramerateEv(%"class.webrtc::test::FakeEncoder"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %3 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %2) #14
  %4 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5, i32 3
  %5 = load double, double* %4, align 8
  %6 = fadd double %5, 5.000000e-01
  %7 = fptosi double %6 to i32
  %8 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %2) #14
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test15FakeH264EncoderC2EPNS_5ClockE(%"class.webrtc::test::FakeH264Encoder"*, %"class.webrtc::Clock"*) unnamed_addr #0 align 2 {
  %3 = alloca %union.pthread_mutexattr_t, align 4
  %4 = alloca %union.pthread_mutexattr_t, align 4
  %5 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 1, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 2
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN6webrtc10VideoCodecC1Ev(%"class.webrtc::VideoCodec"* %9) #14
  %10 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 4
  store %"class.webrtc::EncodedImageCallback"* null, %"class.webrtc::EncodedImageCallback"** %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %11) #14
  %12 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 6
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 8
  store i32 0, i32* %14, align 8
  %15 = bitcast %union.pthread_mutexattr_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  %16 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %4, i64 0, i32 0
  store i32 -1431655766, i32* %16, align 4
  %17 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %4) #14
  %18 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %19 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %18, %union.pthread_mutexattr_t* nonnull %4) #14
  %20 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  %21 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 12
  store i64 0, i64* %22, align 8
  %23 = getelementptr %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 10, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 3, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test15FakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %24 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 1
  store i32 0, i32* %24, align 8
  %25 = bitcast %union.pthread_mutexattr_t* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %25) #14
  %26 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %3, i64 0, i32 0
  store i32 -1431655766, i32* %26, align 4
  %27 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %3) #14
  %28 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 2, i32 0, i32 0
  %29 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %28, %union.pthread_mutexattr_t* nonnull %3) #14
  %30 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %3) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %25) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test15FakeH264Encoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEE(%"struct.webrtc::CodecSpecificInfo"* noalias sret, %"class.webrtc::test::FakeH264Encoder"*, %"class.webrtc::EncodedImage"* nocapture readonly dereferenceable(272), %"class.rtc::scoped_refptr.71"* nocapture readonly) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %1, i64 0, i32 2, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_lock(%union.pthread_mutex_t* %5) #14
  %7 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %1, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add nsw i32 %8, 1
  store i32 %9, i32* %7, align 8
  %10 = tail call i32 @pthread_mutex_unlock(%union.pthread_mutex_t* %5) #14
  %11 = getelementptr inbounds %"class.webrtc::EncodedImage", %"class.webrtc::EncodedImage"* %2, i64 0, i32 12
  %12 = load i64, i64* %11, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.rtc::scoped_refptr.71", %"class.rtc::scoped_refptr.71"* %3, i64 0, i32 0
  br label %30

16:                                               ; preds = %30
  %17 = icmp ugt i64 %41, 29
  br label %18

18:                                               ; preds = %16, %4
  %19 = phi i1 [ false, %4 ], [ %17, %16 ]
  %20 = srem i32 %8, 10
  %21 = icmp eq i32 %20, 0
  %22 = and i1 %21, %19
  %23 = getelementptr inbounds %"class.rtc::scoped_refptr.71", %"class.rtc::scoped_refptr.71"* %3, i64 0, i32 0
  %24 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %23, align 8
  %25 = bitcast %"class.webrtc::EncodedImageBuffer"* %24 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %26 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %25, align 8
  %27 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %26, i64 5
  %28 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %27, align 8
  %29 = tail call i8* %28(%"class.webrtc::EncodedImageBuffer"* %24) #14
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %29, i8* align 1 getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN6webrtc4test15FakeH264Encoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEEE10kStartCode, i64 0, i32 0, i64 0), i64 3, i1 false)
  br i1 %22, label %43, label %49

30:                                               ; preds = %14, %30
  %31 = phi i64 [ 0, %14 ], [ %40, %30 ]
  %32 = trunc i64 %31 to i8
  %33 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %15, align 8
  %34 = bitcast %"class.webrtc::EncodedImageBuffer"* %33 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %35 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %34, align 8
  %36 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %35, i64 5
  %37 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %36, align 8
  %38 = tail call i8* %37(%"class.webrtc::EncodedImageBuffer"* %33) #14
  %39 = getelementptr inbounds i8, i8* %38, i64 %31
  store i8 %32, i8* %39, align 1
  %40 = add nuw i64 %31, 1
  %41 = load i64, i64* %11, align 8
  %42 = icmp ult i64 %40, %41
  br i1 %42, label %30, label %16

43:                                               ; preds = %18
  %44 = getelementptr inbounds i8, i8* %29, i64 3
  store i8 103, i8* %44, align 1
  %45 = getelementptr inbounds i8, i8* %29, i64 11
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %45, i8* align 1 getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN6webrtc4test15FakeH264Encoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEEE10kStartCode, i64 0, i32 0, i64 0), i64 3, i1 false)
  %46 = getelementptr inbounds i8, i8* %29, i64 14
  store i8 104, i8* %46, align 1
  %47 = getelementptr inbounds i8, i8* %29, i64 25
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %47, i8* align 1 getelementptr inbounds (%"struct.std::__1::array", %"struct.std::__1::array"* @_ZZN6webrtc4test15FakeH264Encoder10EncodeHookERNS_12EncodedImageEN3rtc13scoped_refptrINS_18EncodedImageBufferEEEE10kStartCode, i64 0, i32 0, i64 0), i64 3, i1 false)
  %48 = getelementptr inbounds i8, i8* %29, i64 28
  br label %57

49:                                               ; preds = %18
  %50 = load %"class.webrtc::EncodedImageBuffer"*, %"class.webrtc::EncodedImageBuffer"** %23, align 8
  %51 = bitcast %"class.webrtc::EncodedImageBuffer"* %50 to i8* (%"class.webrtc::EncodedImageBuffer"*)***
  %52 = load i8* (%"class.webrtc::EncodedImageBuffer"*)**, i8* (%"class.webrtc::EncodedImageBuffer"*)*** %51, align 8
  %53 = getelementptr inbounds i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %52, i64 5
  %54 = load i8* (%"class.webrtc::EncodedImageBuffer"*)*, i8* (%"class.webrtc::EncodedImageBuffer"*)** %53, align 8
  %55 = tail call i8* %54(%"class.webrtc::EncodedImageBuffer"* %50) #14
  %56 = getelementptr inbounds i8, i8* %55, i64 3
  br label %57

57:                                               ; preds = %49, %43
  %58 = phi i8* [ %56, %49 ], [ %48, %43 ]
  %59 = phi i8 [ 65, %49 ], [ 101, %43 ]
  store i8 %59, i8* %58, align 1
  %60 = bitcast %"struct.webrtc::CodecSpecificInfo"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 -86, i64 1992, i1 false)
  tail call void @_ZN6webrtc17CodecSpecificInfoC1Ev(%"struct.webrtc::CodecSpecificInfo"* %0) #14
  %61 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 0
  store i32 4, i32* %61, align 8
  %62 = getelementptr inbounds %"struct.webrtc::CodecSpecificInfo", %"struct.webrtc::CodecSpecificInfo"* %0, i64 0, i32 1
  %63 = bitcast %"union.webrtc::CodecSpecificInfoUnion"* %62 to i32*
  store i32 0, i32* %63, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test14DelayedEncoderC2EPNS_5ClockEi(%"class.webrtc::test::DelayedEncoder"*, %"class.webrtc::Clock"*, i32) unnamed_addr #0 align 2 {
  %4 = alloca %union.pthread_mutexattr_t, align 4
  %5 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 1, i32 1
  %7 = bitcast %"class.std::__1::vector"* %6 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %7, i8 0, i64 24, i1 false) #14
  %8 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 2
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %8, align 8
  %9 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 3
  tail call void @_ZN6webrtc10VideoCodecC1Ev(%"class.webrtc::VideoCodec"* %9) #14
  %10 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 4
  store %"class.webrtc::EncodedImageCallback"* null, %"class.webrtc::EncodedImageCallback"** %10, align 8
  %11 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %11) #14
  %12 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 6
  store i32 -1, i32* %12, align 8
  %13 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 7
  store i8 1, i8* %13, align 4
  %14 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 8
  store i32 0, i32* %14, align 8
  %15 = bitcast %union.pthread_mutexattr_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %15) #14
  %16 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %4, i64 0, i32 0
  store i32 -1431655766, i32* %16, align 4
  %17 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %4) #14
  %18 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %19 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %18, %union.pthread_mutexattr_t* nonnull %4) #14
  %20 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %15) #14
  %21 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %21, align 4
  %22 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 12
  store i64 0, i64* %22, align 8
  %23 = getelementptr %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 10, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %23, i8 0, i64 3, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test14DelayedEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %24 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 1
  store i32 %2, i32* %24, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable writeonly
define hidden void @_ZN6webrtc4test14DelayedEncoder8SetDelayEi(%"class.webrtc::test::DelayedEncoder"* nocapture, i32) local_unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 1
  store i32 %1, i32* %3, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test14DelayedEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::DelayedEncoder"*, %"class.webrtc::VideoFrame"* nocapture readonly dereferenceable(176), %"class.std::__1::vector.64"* readonly) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN6webrtc7SleepMsEi(i32 %5) #14
  %6 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0
  %7 = tail call i32 @_ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::FakeEncoder"* %6, %"class.webrtc::VideoFrame"* dereferenceable(176) %1, %"class.std::__1::vector.64"* %2)
  ret i32 %7
}

declare void @_ZN6webrtc7SleepMsEi(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN6webrtc4test28MultithreadedFakeH264EncoderC2EPNS_5ClockEPNS_16TaskQueueFactoryE(%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::Clock"*, %"class.webrtc::TaskQueueFactory"*) unnamed_addr #0 align 2 {
  %4 = alloca %union.pthread_mutexattr_t, align 4
  %5 = alloca %union.pthread_mutexattr_t, align 4
  %6 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 1
  %8 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 24, i1 false) #14
  %9 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 2
  store %"class.webrtc::Clock"* %1, %"class.webrtc::Clock"** %9, align 8
  %10 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 3
  tail call void @_ZN6webrtc10VideoCodecC1Ev(%"class.webrtc::VideoCodec"* %10) #14
  %11 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 4
  store %"class.webrtc::EncodedImageCallback"* null, %"class.webrtc::EncodedImageCallback"** %11, align 8
  %12 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersC1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %12) #14
  %13 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 6
  store i32 -1, i32* %13, align 8
  %14 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 7
  store i8 1, i8* %14, align 4
  %15 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 8
  store i32 0, i32* %15, align 8
  %16 = bitcast %union.pthread_mutexattr_t* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %16) #14
  %17 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %5, i64 0, i32 0
  store i32 -1431655766, i32* %17, align 4
  %18 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %5) #14
  %19 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 9, i32 0, i32 0
  %20 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %19, %union.pthread_mutexattr_t* nonnull %5) #14
  %21 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %5) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %16) #14
  %22 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 11, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %22, align 4
  %23 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 12
  store i64 0, i64* %23, align 8
  %24 = getelementptr %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 10, i64 0
  call void @llvm.memset.p0i8.i64(i8* align 1 %24, i8 0, i64 3, i1 false) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test15FakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %25 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 1
  store i32 0, i32* %25, align 8
  %26 = bitcast %union.pthread_mutexattr_t* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %26) #14
  %27 = getelementptr inbounds %union.pthread_mutexattr_t, %union.pthread_mutexattr_t* %4, i64 0, i32 0
  store i32 -1431655766, i32* %27, align 4
  %28 = call i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t* nonnull %4) #14
  %29 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %30 = call i32 @pthread_mutex_init(%union.pthread_mutex_t* %29, %union.pthread_mutexattr_t* nonnull %4) #14
  %31 = call i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t* nonnull %4) #14
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %26) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test28MultithreadedFakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %32 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 1
  store %"class.webrtc::TaskQueueFactory"* %2, %"class.webrtc::TaskQueueFactory"** %32, align 8
  %33 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 2
  store i32 0, i32* %33, align 8
  %34 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 4
  %35 = bitcast %"class.std::__1::unique_ptr"* %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test28MultithreadedFakeH264Encoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE(%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::VideoCodec"*, %"struct.webrtc::VideoEncoder::Settings"* nocapture readnone dereferenceable(16)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 1
  %5 = load %"class.webrtc::TaskQueueFactory"*, %"class.webrtc::TaskQueueFactory"** %4, align 8
  %6 = bitcast %"class.webrtc::TaskQueueFactory"* %5 to %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)***
  %7 = load %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)**, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*** %6, align 8
  %8 = getelementptr inbounds %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)** %7, i64 2
  %9 = load %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)** %8, align 8
  %10 = tail call %"class.webrtc::TaskQueueBase"* %9(%"class.webrtc::TaskQueueFactory"* %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.1, i64 0, i64 0), i64 7, i32 0) #14
  %11 = ptrtoint %"class.webrtc::TaskQueueBase"* %10 to i64
  %12 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 4
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %13, align 8
  %15 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  store i64 %11, i64* %15, align 8
  %16 = icmp eq %"class.webrtc::TaskQueueBase"* %14, null
  br i1 %16, label %21, label %17

17:                                               ; preds = %3
  %18 = bitcast %"class.webrtc::TaskQueueBase"* %14 to void (%"class.webrtc::TaskQueueBase"*)***
  %19 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %18, align 8
  %20 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %19, align 8
  tail call void %20(%"class.webrtc::TaskQueueBase"* nonnull %14) #14
  br label %21

21:                                               ; preds = %17, %3
  %22 = load %"class.webrtc::TaskQueueFactory"*, %"class.webrtc::TaskQueueFactory"** %4, align 8
  %23 = bitcast %"class.webrtc::TaskQueueFactory"* %22 to %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)***
  %24 = load %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)**, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*** %23, align 8
  %25 = getelementptr inbounds %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)** %24, i64 2
  %26 = load %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)*, %"class.webrtc::TaskQueueBase"* (%"class.webrtc::TaskQueueFactory"*, i8*, i64, i32)** %25, align 8
  %27 = tail call %"class.webrtc::TaskQueueBase"* %26(%"class.webrtc::TaskQueueFactory"* %22, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.2, i64 0, i64 0), i64 7, i32 0) #14
  %28 = ptrtoint %"class.webrtc::TaskQueueBase"* %27 to i64
  %29 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 5
  %30 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %29, i64 0, i32 0, i32 0, i32 0
  %31 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %30, align 8
  %32 = bitcast %"class.std::__1::unique_ptr"* %29 to i64*
  store i64 %28, i64* %32, align 8
  %33 = icmp eq %"class.webrtc::TaskQueueBase"* %31, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %21
  %35 = bitcast %"class.webrtc::TaskQueueBase"* %31 to void (%"class.webrtc::TaskQueueBase"*)***
  %36 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %35, align 8
  %37 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %36, align 8
  tail call void %37(%"class.webrtc::TaskQueueBase"* nonnull %31) #14
  br label %38

38:                                               ; preds = %34, %21
  %39 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0
  %40 = tail call i32 @_ZN6webrtc4test11FakeEncoder10InitEncodeEPKNS_10VideoCodecERKNS_12VideoEncoder8SettingsE(%"class.webrtc::test::FakeEncoder"* %39, %"class.webrtc::VideoCodec"* %1, %"struct.webrtc::VideoEncoder::Settings"* dereferenceable(16) undef)
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test28MultithreadedFakeH264Encoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::VideoFrame"* dereferenceable(176), %"class.std::__1::vector.64"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = add nsw i32 %5, 1
  store i32 %6, i32* %4, align 8
  %7 = and i32 %5, 1
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = select i1 %8, %"class.webrtc::TaskQueueBase"** %9, %"class.webrtc::TaskQueueBase"** %10
  %12 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %11, align 8
  %13 = icmp eq %"class.webrtc::TaskQueueBase"* %12, null
  br i1 %13, label %60, label %14

14:                                               ; preds = %3
  %15 = ptrtoint %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0 to i64
  %16 = tail call i8* @_Znwm(i64 216) #15
  %17 = bitcast i8* %16 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds i8, i8* %16, i64 8
  %19 = bitcast i8* %18 to i64*
  store i64 %15, i64* %19, align 8
  %20 = getelementptr inbounds i8, i8* %16, i64 16
  %21 = bitcast i8* %20 to %"class.webrtc::VideoFrame"*
  tail call void @_ZN6webrtc10VideoFrameC1ERKS0_(%"class.webrtc::VideoFrame"* %21, %"class.webrtc::VideoFrame"* dereferenceable(176) %1) #14
  %22 = getelementptr inbounds i8, i8* %16, i64 192
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #14
  %23 = getelementptr inbounds %"class.std::__1::vector.64", %"class.std::__1::vector.64"* %2, i64 0, i32 0, i32 1
  %24 = bitcast i32** %23 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = bitcast %"class.std::__1::vector.64"* %2 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = sub i64 %25, %27
  %29 = ashr exact i64 %28, 2
  %30 = icmp eq i64 %28, 0
  br i1 %30, label %54, label %31

31:                                               ; preds = %14
  %32 = icmp ugt i64 %29, 4611686018427387903
  br i1 %32, label %33, label %35

33:                                               ; preds = %31
  %34 = bitcast i8* %22 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %34) #16
  unreachable

35:                                               ; preds = %31
  %36 = tail call i8* @_Znwm(i64 %28) #15
  %37 = bitcast i8* %36 to i32*
  %38 = getelementptr inbounds i8, i8* %16, i64 200
  %39 = bitcast i8* %38 to i8**
  store i8* %36, i8** %39, align 8
  %40 = bitcast i8* %22 to i8**
  store i8* %36, i8** %40, align 8
  %41 = getelementptr inbounds i32, i32* %37, i64 %29
  %42 = getelementptr inbounds i8, i8* %16, i64 208
  %43 = bitcast i8* %42 to i32**
  store i32* %41, i32** %43, align 8
  %44 = bitcast i8* %38 to i64*
  %45 = ptrtoint i8* %36 to i64
  %46 = icmp sgt i64 %28, 0
  br i1 %46, label %47, label %52

47:                                               ; preds = %35
  %48 = lshr exact i64 %28, 2
  %49 = inttoptr i64 %27 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %36, i8* align 4 %49, i64 %28, i1 false) #14
  %50 = getelementptr inbounds i32, i32* %37, i64 %48
  %51 = ptrtoint i32* %50 to i64
  br label %52

52:                                               ; preds = %47, %35
  %53 = phi i64 [ %51, %47 ], [ %45, %35 ]
  store i64 %53, i64* %44, align 8
  br label %54

54:                                               ; preds = %52, %14
  %55 = bitcast i8* %16 to %"class.webrtc::QueuedTask"*
  %56 = bitcast %"class.webrtc::TaskQueueBase"* %12 to void (%"class.webrtc::TaskQueueBase"*, %"class.webrtc::QueuedTask"*)***
  %57 = load void (%"class.webrtc::TaskQueueBase"*, %"class.webrtc::QueuedTask"*)**, void (%"class.webrtc::TaskQueueBase"*, %"class.webrtc::QueuedTask"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.webrtc::TaskQueueBase"*, %"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::TaskQueueBase"*, %"class.webrtc::QueuedTask"*)** %57, i64 1
  %59 = load void (%"class.webrtc::TaskQueueBase"*, %"class.webrtc::QueuedTask"*)*, void (%"class.webrtc::TaskQueueBase"*, %"class.webrtc::QueuedTask"*)** %58, align 8
  tail call void %59(%"class.webrtc::TaskQueueBase"* nonnull %12, %"class.webrtc::QueuedTask"* nonnull %55) #14
  br label %60

60:                                               ; preds = %3, %54
  %61 = phi i32 [ 0, %54 ], [ -7, %3 ]
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test28MultithreadedFakeH264Encoder14EncodeCallbackERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::VideoFrame"* nocapture readonly dereferenceable(176), %"class.std::__1::vector.64"* readonly) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0
  %5 = tail call i32 @_ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::FakeEncoder"* %4, %"class.webrtc::VideoFrame"* dereferenceable(176) %1, %"class.std::__1::vector.64"* %2)
  ret i32 %5
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6webrtc4test28MultithreadedFakeH264Encoder7ReleaseEv(%"class.webrtc::test::MultithreadedFakeH264Encoder"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %2, align 8
  store %"class.webrtc::TaskQueueBase"* null, %"class.webrtc::TaskQueueBase"** %2, align 8
  %4 = icmp eq %"class.webrtc::TaskQueueBase"* %3, null
  br i1 %4, label %9, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.webrtc::TaskQueueBase"* %3 to void (%"class.webrtc::TaskQueueBase"*)***
  %7 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %6, align 8
  %8 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %7, align 8
  tail call void %8(%"class.webrtc::TaskQueueBase"* nonnull %3) #14
  br label %9

9:                                                ; preds = %1, %5
  %10 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %11 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %10, align 8
  store %"class.webrtc::TaskQueueBase"* null, %"class.webrtc::TaskQueueBase"** %10, align 8
  %12 = icmp eq %"class.webrtc::TaskQueueBase"* %11, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.webrtc::TaskQueueBase"* %11 to void (%"class.webrtc::TaskQueueBase"*)***
  %15 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %14, align 8
  %16 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %15, align 8
  tail call void %16(%"class.webrtc::TaskQueueBase"* nonnull %11) #14
  br label %17

17:                                               ; preds = %9, %13
  ret i32 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test11FakeEncoderD2Ev(%"class.webrtc::test::FakeEncoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #14
  %5 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %5) #14
  %6 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 18
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %1, %11
  %15 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %16 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %15, align 8
  %17 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16 to i64
  %20 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #15
  br label %23

23:                                               ; preds = %14, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test11FakeEncoderD0Ev(%"class.webrtc::test::FakeEncoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 9, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #14
  %5 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %5) #14
  %6 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 3, i32 18
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %11, %1
  %15 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 1, i32 0, i32 0
  %16 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %15, align 8
  %17 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16 to i64
  %20 = getelementptr inbounds %"class.webrtc::test::FakeEncoder", %"class.webrtc::test::FakeEncoder"* %0, i64 0, i32 1, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #15
  br label %23

23:                                               ; preds = %14, %18
  %24 = bitcast %"class.webrtc::test::FakeEncoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  ret void
}

declare i32 @_ZN6webrtc12VideoEncoder10InitEncodeEPKNS_10VideoCodecEim(%"class.webrtc::VideoEncoder"*, %"class.webrtc::VideoCodec"*, i32, i64) unnamed_addr #1

declare void @_ZN6webrtc12VideoEncoder22OnPacketLossRateUpdateEf(%"class.webrtc::VideoEncoder"*, float) unnamed_addr #1

declare void @_ZN6webrtc12VideoEncoder11OnRttUpdateEl(%"class.webrtc::VideoEncoder"*, i64) unnamed_addr #1

declare void @_ZN6webrtc12VideoEncoder18OnLossNotificationERKNS0_16LossNotificationE(%"class.webrtc::VideoEncoder"*, %"struct.webrtc::VideoEncoder::LossNotification"* dereferenceable(12)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test15FakeH264EncoderD2Ev(%"class.webrtc::test::FakeH264Encoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test15FakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %5) #14
  %7 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %7) #14
  %8 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 3, i32 18
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %13, %1
  %17 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %18 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %17, align 8
  %19 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %18 to i64
  %22 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 1
  %23 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %16, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test15FakeH264EncoderD0Ev(%"class.webrtc::test::FakeH264Encoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test15FakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 2, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %5 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %6 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %5) #14
  %7 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %7) #14
  %8 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 3, i32 18
  %9 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %13, label %16

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i8*, i8** %14, align 8
  tail call void @_ZdlPv(i8* %15) #15
  br label %16

16:                                               ; preds = %13, %1
  %17 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %18 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %17, align 8
  %19 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %18, null
  br i1 %19, label %25, label %20

20:                                               ; preds = %16
  %21 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %18 to i64
  %22 = getelementptr inbounds %"class.webrtc::test::FakeH264Encoder", %"class.webrtc::test::FakeH264Encoder"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 1
  %23 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %18 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  br label %25

25:                                               ; preds = %16, %20
  %26 = bitcast %"class.webrtc::test::FakeH264Encoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %26) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test14DelayedEncoderD0Ev(%"class.webrtc::test::DelayedEncoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 9, i32 0, i32 0
  %4 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %3) #14
  %5 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %5) #14
  %6 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 3, i32 18
  %7 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %8 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %7, i64 0, i32 1, i32 0
  %9 = load i8, i8* %8, align 1
  %10 = icmp slt i8 %9, 0
  br i1 %10, label %11, label %14

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  tail call void @_ZdlPv(i8* %13) #15
  br label %14

14:                                               ; preds = %11, %1
  %15 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %16 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %15, align 8
  %17 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16, null
  br i1 %17, label %23, label %18

18:                                               ; preds = %14
  %19 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16 to i64
  %20 = getelementptr inbounds %"class.webrtc::test::DelayedEncoder", %"class.webrtc::test::DelayedEncoder"* %0, i64 0, i32 0, i32 1, i32 1, i32 0, i32 1
  %21 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %20 to i64*
  store i64 %19, i64* %21, align 8
  %22 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16 to i8*
  tail call void @_ZdlPv(i8* %22) #15
  br label %23

23:                                               ; preds = %14, %18
  %24 = bitcast %"class.webrtc::test::DelayedEncoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %24) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test28MultithreadedFakeH264EncoderD2Ev(%"class.webrtc::test::MultithreadedFakeH264Encoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test28MultithreadedFakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %3, align 8
  store %"class.webrtc::TaskQueueBase"* null, %"class.webrtc::TaskQueueBase"** %3, align 8
  %5 = icmp eq %"class.webrtc::TaskQueueBase"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::TaskQueueBase"* %4 to void (%"class.webrtc::TaskQueueBase"*)***
  %8 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %7, align 8
  %9 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %8, align 8
  tail call void %9(%"class.webrtc::TaskQueueBase"* nonnull %4) #14
  br label %10

10:                                               ; preds = %1, %6
  %11 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %11, align 8
  store %"class.webrtc::TaskQueueBase"* null, %"class.webrtc::TaskQueueBase"** %11, align 8
  %13 = icmp eq %"class.webrtc::TaskQueueBase"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.webrtc::TaskQueueBase"* %12 to void (%"class.webrtc::TaskQueueBase"*)***
  %16 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %15, align 8
  %17 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %16, align 8
  tail call void %17(%"class.webrtc::TaskQueueBase"* nonnull %12) #14
  br label %18

18:                                               ; preds = %10, %14
  %19 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0
  tail call void @_ZN6webrtc4test15FakeH264EncoderD2Ev(%"class.webrtc::test::FakeH264Encoder"* %19) #14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test28MultithreadedFakeH264EncoderD0Ev(%"class.webrtc::test::MultithreadedFakeH264Encoder"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test28MultithreadedFakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 5, i32 0, i32 0, i32 0
  %4 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %3, align 8
  store %"class.webrtc::TaskQueueBase"* null, %"class.webrtc::TaskQueueBase"** %3, align 8
  %5 = icmp eq %"class.webrtc::TaskQueueBase"* %4, null
  br i1 %5, label %10, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.webrtc::TaskQueueBase"* %4 to void (%"class.webrtc::TaskQueueBase"*)***
  %8 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %7, align 8
  %9 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %8, align 8
  tail call void %9(%"class.webrtc::TaskQueueBase"* nonnull %4) #14
  br label %10

10:                                               ; preds = %6, %1
  %11 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %12 = load %"class.webrtc::TaskQueueBase"*, %"class.webrtc::TaskQueueBase"** %11, align 8
  store %"class.webrtc::TaskQueueBase"* null, %"class.webrtc::TaskQueueBase"** %11, align 8
  %13 = icmp eq %"class.webrtc::TaskQueueBase"* %12, null
  br i1 %13, label %18, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.webrtc::TaskQueueBase"* %12 to void (%"class.webrtc::TaskQueueBase"*)***
  %16 = load void (%"class.webrtc::TaskQueueBase"*)**, void (%"class.webrtc::TaskQueueBase"*)*** %15, align 8
  %17 = load void (%"class.webrtc::TaskQueueBase"*)*, void (%"class.webrtc::TaskQueueBase"*)** %16, align 8
  tail call void %17(%"class.webrtc::TaskQueueBase"* nonnull %12) #14
  br label %18

18:                                               ; preds = %10, %14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test15FakeH264EncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %19 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %20 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %19) #14
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN6webrtc4test11FakeEncoderE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %21 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 9, i32 0, i32 0
  %22 = tail call i32 @pthread_mutex_destroy(%union.pthread_mutex_t* %21) #14
  %23 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 5
  tail call void @_ZN6webrtc12VideoEncoder21RateControlParametersD1Ev(%"struct.webrtc::VideoEncoder::RateControlParameters"* %23) #14
  %24 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 3, i32 18
  %25 = bitcast %"class.std::__1::basic_string"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %29, label %32

29:                                               ; preds = %18
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load i8*, i8** %30, align 8
  tail call void @_ZdlPv(i8* %31) #15
  br label %32

32:                                               ; preds = %29, %18
  %33 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %34 = load %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %33, align 8
  %35 = icmp eq %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %34 to i64
  %38 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0, i64 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1
  %39 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %38 to i64*
  store i64 %37, i64* %39, align 8
  %40 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %34 to i8*
  tail call void @_ZdlPv(i8* %40) #15
  br label %41

41:                                               ; preds = %32, %36
  %42 = bitcast %"class.webrtc::test::MultithreadedFakeH264Encoder"* %0 to i8*
  tail call void @_ZdlPv(i8* %42) #15
  ret void
}

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_init(%union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_init(%union.pthread_mutex_t*, %union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutexattr_destroy(%union.pthread_mutexattr_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_lock(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind
declare i32 @pthread_mutex_unlock(%union.pthread_mutex_t*) local_unnamed_addr #4

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN6webrtc4test11FakeEncoder9FrameInfo12SpatialLayerENS_9allocatorIS5_EEE6assignIPS5_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS5_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %2 to i64
  %5 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 3
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  br i1 %15, label %49, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 3
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %1, i64 %22
  %25 = select i1 %23, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %24, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %2
  %26 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = ashr exact i64 %27, 3
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = inttoptr i64 %12 to i8*
  %32 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %1 to i8*
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 4 %31, i8* align 4 %32, i64 %27, i1 false) #14
  br label %33

33:                                               ; preds = %17, %30
  br i1 %23, label %34, label %47

34:                                               ; preds = %33
  %35 = load i64, i64* %19, align 8
  %36 = sub i64 %4, %26
  %37 = icmp sgt i64 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = lshr exact i64 %36, 3
  %40 = inttoptr i64 %35 to i8*
  %41 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %25 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %40, i8* align 4 %41, i64 %36, i1 false) #14
  %42 = inttoptr i64 %35 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  %43 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %42, i64 %39
  %44 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %43 to i64
  br label %45

45:                                               ; preds = %34, %38
  %46 = phi i64 [ %44, %38 ], [ %35, %34 ]
  store i64 %46, i64* %19, align 8
  br label %90

47:                                               ; preds = %33
  %48 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %16, i64 %28
  store %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %48, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %18, align 8
  br label %90

49:                                               ; preds = %3
  %50 = icmp eq i64 %12, 0
  br i1 %50, label %56, label %51

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %53 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %52 to i64*
  store i64 %12, i64* %53, align 8
  %54 = inttoptr i64 %12 to i8*
  tail call void @_ZdlPv(i8* %54) #15
  %55 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #14
  br label %56

56:                                               ; preds = %49, %51
  %57 = phi i64 [ %10, %49 ], [ 0, %51 ]
  %58 = icmp ugt i64 %7, 2305843009213693951
  br i1 %58, label %59, label %61

59:                                               ; preds = %56
  %60 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %60) #16
  unreachable

61:                                               ; preds = %56
  %62 = ashr exact i64 %57, 3
  %63 = icmp ult i64 %62, 1152921504606846975
  br i1 %63, label %64, label %71

64:                                               ; preds = %61
  %65 = ashr exact i64 %57, 2
  %66 = icmp ult i64 %65, %7
  br i1 %66, label %71, label %67

67:                                               ; preds = %64
  %68 = icmp ugt i64 %65, 2305843009213693951
  br i1 %68, label %69, label %71

69:                                               ; preds = %67
  %70 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %70) #16
  unreachable

71:                                               ; preds = %64, %61, %67
  %72 = phi i64 [ %65, %67 ], [ 2305843009213693951, %61 ], [ %7, %64 ]
  %73 = shl i64 %72, 3
  %74 = tail call i8* @_Znwm(i64 %73) #15
  %75 = bitcast i8* %74 to %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"*
  %76 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %77 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %76 to i8**
  store i8* %74, i8** %77, align 8
  %78 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %74, i8** %78, align 8
  %79 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %75, i64 %72
  store %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %79, %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %8, align 8
  %80 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"** %76 to i64*
  %81 = ptrtoint i8* %74 to i64
  %82 = icmp sgt i64 %6, 0
  br i1 %82, label %83, label %88

83:                                               ; preds = %71
  %84 = lshr exact i64 %6, 3
  %85 = bitcast %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %74, i8* align 4 %85, i64 %6, i1 false) #14
  %86 = getelementptr inbounds %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer", %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %75, i64 %84
  %87 = ptrtoint %"struct.webrtc::test::FakeEncoder::FrameInfo::SpatialLayer"* %86 to i64
  br label %88

88:                                               ; preds = %71, %83
  %89 = phi i64 [ %87, %83 ], [ %81, %71 ]
  store i64 %89, i64* %80, align 8
  br label %90

90:                                               ; preds = %45, %47, %88
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #10

; Function Attrs: nounwind
declare i32 @pthread_mutex_destroy(%union.pthread_mutex_t*) local_unnamed_addr #4

; Function Attrs: nounwind readnone
declare i1 @llvm.is.constant.i8(i8) #11

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_externalEPKc(%"class.std::__1::basic_string"*, i8*) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(1) i8* @_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15EmplaceBackSlowIJhEEERhDpOT_(%"class.absl::inlined_vector_internal::Storage.140"*, i8* dereferenceable(1)) local_unnamed_addr #12 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.140", %"class.absl::inlined_vector_internal::Storage.140"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i64, i64* %3, align 8, !noalias !7
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %14, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.140", %"class.absl::inlined_vector_internal::Storage.140"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = bitcast i8** %8 to i64*
  %10 = load i64, i64* %9, align 8, !noalias !7
  %11 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.140", %"class.absl::inlined_vector_internal::Storage.140"* %0, i64 0, i32 1, i32 0, i32 1
  %12 = load i64, i64* %11, align 8, !noalias !7
  %13 = shl i64 %12, 1
  br label %17

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.140", %"class.absl::inlined_vector_internal::Storage.140"* %0, i64 0, i32 1
  %16 = ptrtoint %"union.absl::inlined_vector_internal::Storage<unsigned char, 4, std::__1::allocator<unsigned char> >::Data"* %15 to i64
  br label %17

17:                                               ; preds = %7, %14
  %18 = phi i64 [ %16, %14 ], [ %10, %7 ]
  %19 = phi i64 [ 8, %14 ], [ %13, %7 ]
  %20 = lshr i64 %4, 1
  %21 = tail call i8* @_Znwm(i64 %19) #15
  %22 = ptrtoint i8* %21 to i64
  %23 = getelementptr inbounds i8, i8* %21, i64 %20
  %24 = load i8, i8* %1, align 1
  store i8 %24, i8* %23, align 1
  %25 = icmp eq i64 %20, 0
  br i1 %25, label %156, label %26

26:                                               ; preds = %17
  %27 = inttoptr i64 %18 to i8*
  %28 = icmp ult i64 %4, 64
  br i1 %28, label %115, label %29

29:                                               ; preds = %26
  %30 = getelementptr i8, i8* %21, i64 %20
  %31 = getelementptr i8, i8* %27, i64 %20
  %32 = icmp ult i8* %21, %31
  %33 = icmp ugt i8* %30, %27
  %34 = and i1 %32, %33
  br i1 %34, label %115, label %35

35:                                               ; preds = %29
  %36 = and i64 %20, 9223372036854775776
  %37 = getelementptr i8, i8* %27, i64 %36
  %38 = add nsw i64 %36, -32
  %39 = lshr exact i64 %38, 5
  %40 = add nuw nsw i64 %39, 1
  %41 = and i64 %40, 3
  %42 = icmp ult i64 %38, 96
  br i1 %42, label %94, label %43

43:                                               ; preds = %35
  %44 = sub nsw i64 %40, %41
  br label %45

45:                                               ; preds = %45, %43
  %46 = phi i64 [ 0, %43 ], [ %91, %45 ]
  %47 = phi i64 [ %44, %43 ], [ %92, %45 ]
  %48 = getelementptr i8, i8* %27, i64 %46
  %49 = getelementptr inbounds i8, i8* %21, i64 %46
  %50 = bitcast i8* %48 to <16 x i8>*
  %51 = load <16 x i8>, <16 x i8>* %50, align 1, !alias.scope !10
  %52 = getelementptr i8, i8* %48, i64 16
  %53 = bitcast i8* %52 to <16 x i8>*
  %54 = load <16 x i8>, <16 x i8>* %53, align 1, !alias.scope !10
  %55 = bitcast i8* %49 to <16 x i8>*
  store <16 x i8> %51, <16 x i8>* %55, align 1, !alias.scope !13, !noalias !10
  %56 = getelementptr inbounds i8, i8* %49, i64 16
  %57 = bitcast i8* %56 to <16 x i8>*
  store <16 x i8> %54, <16 x i8>* %57, align 1, !alias.scope !13, !noalias !10
  %58 = or i64 %46, 32
  %59 = getelementptr i8, i8* %27, i64 %58
  %60 = getelementptr inbounds i8, i8* %21, i64 %58
  %61 = bitcast i8* %59 to <16 x i8>*
  %62 = load <16 x i8>, <16 x i8>* %61, align 1, !alias.scope !10
  %63 = getelementptr i8, i8* %59, i64 16
  %64 = bitcast i8* %63 to <16 x i8>*
  %65 = load <16 x i8>, <16 x i8>* %64, align 1, !alias.scope !10
  %66 = bitcast i8* %60 to <16 x i8>*
  store <16 x i8> %62, <16 x i8>* %66, align 1, !alias.scope !13, !noalias !10
  %67 = getelementptr inbounds i8, i8* %60, i64 16
  %68 = bitcast i8* %67 to <16 x i8>*
  store <16 x i8> %65, <16 x i8>* %68, align 1, !alias.scope !13, !noalias !10
  %69 = or i64 %46, 64
  %70 = getelementptr i8, i8* %27, i64 %69
  %71 = getelementptr inbounds i8, i8* %21, i64 %69
  %72 = bitcast i8* %70 to <16 x i8>*
  %73 = load <16 x i8>, <16 x i8>* %72, align 1, !alias.scope !10
  %74 = getelementptr i8, i8* %70, i64 16
  %75 = bitcast i8* %74 to <16 x i8>*
  %76 = load <16 x i8>, <16 x i8>* %75, align 1, !alias.scope !10
  %77 = bitcast i8* %71 to <16 x i8>*
  store <16 x i8> %73, <16 x i8>* %77, align 1, !alias.scope !13, !noalias !10
  %78 = getelementptr inbounds i8, i8* %71, i64 16
  %79 = bitcast i8* %78 to <16 x i8>*
  store <16 x i8> %76, <16 x i8>* %79, align 1, !alias.scope !13, !noalias !10
  %80 = or i64 %46, 96
  %81 = getelementptr i8, i8* %27, i64 %80
  %82 = getelementptr inbounds i8, i8* %21, i64 %80
  %83 = bitcast i8* %81 to <16 x i8>*
  %84 = load <16 x i8>, <16 x i8>* %83, align 1, !alias.scope !10
  %85 = getelementptr i8, i8* %81, i64 16
  %86 = bitcast i8* %85 to <16 x i8>*
  %87 = load <16 x i8>, <16 x i8>* %86, align 1, !alias.scope !10
  %88 = bitcast i8* %82 to <16 x i8>*
  store <16 x i8> %84, <16 x i8>* %88, align 1, !alias.scope !13, !noalias !10
  %89 = getelementptr inbounds i8, i8* %82, i64 16
  %90 = bitcast i8* %89 to <16 x i8>*
  store <16 x i8> %87, <16 x i8>* %90, align 1, !alias.scope !13, !noalias !10
  %91 = add i64 %46, 128
  %92 = add i64 %47, -4
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %45, !llvm.loop !15

94:                                               ; preds = %45, %35
  %95 = phi i64 [ 0, %35 ], [ %91, %45 ]
  %96 = icmp eq i64 %41, 0
  br i1 %96, label %113, label %97

97:                                               ; preds = %94, %97
  %98 = phi i64 [ %110, %97 ], [ %95, %94 ]
  %99 = phi i64 [ %111, %97 ], [ %41, %94 ]
  %100 = getelementptr i8, i8* %27, i64 %98
  %101 = getelementptr inbounds i8, i8* %21, i64 %98
  %102 = bitcast i8* %100 to <16 x i8>*
  %103 = load <16 x i8>, <16 x i8>* %102, align 1, !alias.scope !10
  %104 = getelementptr i8, i8* %100, i64 16
  %105 = bitcast i8* %104 to <16 x i8>*
  %106 = load <16 x i8>, <16 x i8>* %105, align 1, !alias.scope !10
  %107 = bitcast i8* %101 to <16 x i8>*
  store <16 x i8> %103, <16 x i8>* %107, align 1, !alias.scope !13, !noalias !10
  %108 = getelementptr inbounds i8, i8* %101, i64 16
  %109 = bitcast i8* %108 to <16 x i8>*
  store <16 x i8> %106, <16 x i8>* %109, align 1, !alias.scope !13, !noalias !10
  %110 = add i64 %98, 32
  %111 = add i64 %99, -1
  %112 = icmp eq i64 %111, 0
  br i1 %112, label %113, label %97, !llvm.loop !17

113:                                              ; preds = %97, %94
  %114 = icmp eq i64 %20, %36
  br i1 %114, label %156, label %115

115:                                              ; preds = %113, %29, %26
  %116 = phi i8* [ %27, %29 ], [ %27, %26 ], [ %37, %113 ]
  %117 = phi i64 [ 0, %29 ], [ 0, %26 ], [ %36, %113 ]
  %118 = xor i64 %117, -1
  %119 = add nsw i64 %20, %118
  %120 = and i64 %20, 3
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %132, label %122

122:                                              ; preds = %115, %122
  %123 = phi i8* [ %128, %122 ], [ %116, %115 ]
  %124 = phi i64 [ %129, %122 ], [ %117, %115 ]
  %125 = phi i64 [ %130, %122 ], [ %120, %115 ]
  %126 = getelementptr inbounds i8, i8* %21, i64 %124
  %127 = load i8, i8* %123, align 1
  store i8 %127, i8* %126, align 1
  %128 = getelementptr inbounds i8, i8* %123, i64 1
  %129 = add nuw nsw i64 %124, 1
  %130 = add i64 %125, -1
  %131 = icmp eq i64 %130, 0
  br i1 %131, label %132, label %122, !llvm.loop !19

132:                                              ; preds = %122, %115
  %133 = phi i8* [ %116, %115 ], [ %128, %122 ]
  %134 = phi i64 [ %117, %115 ], [ %129, %122 ]
  %135 = icmp ult i64 %119, 3
  br i1 %135, label %156, label %136

136:                                              ; preds = %132, %136
  %137 = phi i8* [ %153, %136 ], [ %133, %132 ]
  %138 = phi i64 [ %154, %136 ], [ %134, %132 ]
  %139 = getelementptr inbounds i8, i8* %21, i64 %138
  %140 = load i8, i8* %137, align 1
  store i8 %140, i8* %139, align 1
  %141 = getelementptr inbounds i8, i8* %137, i64 1
  %142 = add nuw nsw i64 %138, 1
  %143 = getelementptr inbounds i8, i8* %21, i64 %142
  %144 = load i8, i8* %141, align 1
  store i8 %144, i8* %143, align 1
  %145 = getelementptr inbounds i8, i8* %137, i64 2
  %146 = add nuw nsw i64 %138, 2
  %147 = getelementptr inbounds i8, i8* %21, i64 %146
  %148 = load i8, i8* %145, align 1
  store i8 %148, i8* %147, align 1
  %149 = getelementptr inbounds i8, i8* %137, i64 3
  %150 = add nuw nsw i64 %138, 3
  %151 = getelementptr inbounds i8, i8* %21, i64 %150
  %152 = load i8, i8* %149, align 1
  store i8 %152, i8* %151, align 1
  %153 = getelementptr inbounds i8, i8* %137, i64 4
  %154 = add nuw nsw i64 %138, 4
  %155 = icmp eq i64 %154, %20
  br i1 %155, label %156, label %136, !llvm.loop !20

156:                                              ; preds = %132, %136, %113, %17
  br i1 %6, label %161, label %157

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.140", %"class.absl::inlined_vector_internal::Storage.140"* %0, i64 0, i32 1, i32 0, i32 0
  %159 = load i8*, i8** %158, align 8
  tail call void @_ZdlPv(i8* %159) #15
  %160 = load i64, i64* %3, align 8
  br label %161

161:                                              ; preds = %157, %156
  %162 = phi i64 [ %160, %157 ], [ %4, %156 ]
  %163 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.140", %"class.absl::inlined_vector_internal::Storage.140"* %0, i64 0, i32 1, i32 0, i32 0
  %164 = bitcast i8** %163 to i64*
  store i64 %22, i64* %164, align 8
  %165 = getelementptr inbounds %"class.absl::inlined_vector_internal::Storage.140", %"class.absl::inlined_vector_internal::Storage.140"* %0, i64 0, i32 1, i32 0, i32 1
  store i64 %19, i64* %165, align 8
  %166 = or i64 %162, 1
  %167 = add i64 %166, 2
  store i64 %167, i64* %3, align 8
  ret i8* %23
}

declare void @_ZN6webrtc10VideoFrameC1ERKS0_(%"class.webrtc::VideoFrame"*, %"class.webrtc::VideoFrame"* dereferenceable(176)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskD2Ev(%"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"*) unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* %12) #14
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskD0Ev(%"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"*) unnamed_addr #13 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint i32* %4 to i64
  %8 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 3, i32 0, i32 1
  %9 = bitcast i32** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast i32* %4 to i8*
  tail call void @_ZdlPv(i8* %10) #15
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 2
  tail call void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"* %12) #14
  %13 = bitcast %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #15
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN6webrtc4test28MultithreadedFakeH264Encoder10EncodeTask3RunEv(%"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 1
  %3 = load %"class.webrtc::test::MultithreadedFakeH264Encoder"*, %"class.webrtc::test::MultithreadedFakeH264Encoder"** %2, align 8
  %4 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask", %"class.webrtc::test::MultithreadedFakeH264Encoder::EncodeTask"* %0, i64 0, i32 3
  %6 = getelementptr inbounds %"class.webrtc::test::MultithreadedFakeH264Encoder", %"class.webrtc::test::MultithreadedFakeH264Encoder"* %3, i64 0, i32 0, i32 0
  %7 = tail call i32 @_ZN6webrtc4test11FakeEncoder6EncodeERKNS_10VideoFrameEPKNSt3__16vectorINS_14VideoFrameTypeENS5_9allocatorIS7_EEEE(%"class.webrtc::test::FakeEncoder"* %6, %"class.webrtc::VideoFrame"* dereferenceable(176) %4, %"class.std::__1::vector.64"* %5) #14
  ret i1 true
}

; Function Attrs: nounwind
declare void @_ZN6webrtc10VideoFrameD1Ev(%"class.webrtc::VideoFrame"*) unnamed_addr #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone }
attributes #12 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind }
attributes #15 = { builtin nounwind }
attributes #16 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv: argument 0"}
!5 = distinct !{!5, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv"}
!6 = !{!"branch_weights", i32 1, i32 2000}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv: argument 0"}
!9 = distinct !{!9, !"_ZN4absl23inlined_vector_internal7StorageIhLm4ENSt3__19allocatorIhEEE15MakeStorageViewEv"}
!10 = !{!11}
!11 = distinct !{!11, !12}
!12 = distinct !{!12, !"LVerDomain"}
!13 = !{!14}
!14 = distinct !{!14, !12}
!15 = distinct !{!15, !16}
!16 = !{!"llvm.loop.isvectorized", i32 1}
!17 = distinct !{!17, !18}
!18 = !{!"llvm.loop.unroll.disable"}
!19 = distinct !{!19, !18}
!20 = distinct !{!20, !16}
