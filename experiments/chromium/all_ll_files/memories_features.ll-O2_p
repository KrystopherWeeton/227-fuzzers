; ModuleID = '../../components/history_clusters/core/memories_features.cc'
source_filename = "../../components/history_clusters/core/memories_features.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::FeatureParam" = type { %"struct.base::Feature"*, i8*, i8* }
%"struct.base::Feature" = type { i8*, i32 }
%class.GURL = type { %"class.std::__1::basic_string", i8, %"struct.url::Parsed", %"class.std::__1::unique_ptr" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %class.GURL* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

@_ZN16history_clusters12_GLOBAL__N_120kRemoteModelEndpointE = internal constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN16history_clusters24kRemoteModelForDebuggingE, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.9, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0) }, align 8
@_ZN16history_clusters24kRemoteModelForDebuggingE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.8, i32 0, i32 0), i32 0 }, align 8
@.str = private unnamed_addr constant [42 x i8] c"MemoriesRemoteModelEndpointExperimentName\00", align 1
@.str.1 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@_ZN16history_clusters34kRemoteModelEndpointExperimentNameE = hidden local_unnamed_addr constant %"struct.base::FeatureParam" { %"struct.base::Feature"* @_ZN16history_clusters24kRemoteModelForDebuggingE, i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i32 0, i32 0), i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.1, i32 0, i32 0) }, align 8
@_ZN16history_clusters9kMemoriesE = hidden constant %"struct.base::Feature" { i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.6, i32 0, i32 0), i32 0 }, align 8
@.str.2 = private unnamed_addr constant [45 x i8] c"MemoriesPersistContextAnnotationsInHistoryDb\00", align 1
@_ZN16history_clusters37kPersistContextAnnotationsInHistoryDbE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i8 } { %"struct.base::Feature"* @_ZN16history_clusters9kMemoriesE, i8* getelementptr inbounds ([45 x i8], [45 x i8]* @.str.2, i32 0, i32 0), i8 0 }, align 8
@.str.3 = private unnamed_addr constant [27 x i8] c"MemoriesMaxVisitsToCluster\00", align 1
@_ZN16history_clusters19kMaxVisitsToClusterE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN16history_clusters9kMemoriesE, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.3, i32 0, i32 0), i32 10 }, align 8
@.str.4 = private unnamed_addr constant [25 x i8] c"MemoriesMaxDaysToCluster\00", align 1
@_ZN16history_clusters17kMaxDaysToClusterE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i32 } { %"struct.base::Feature"* @_ZN16history_clusters9kMemoriesE, i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.4, i32 0, i32 0), i32 9 }, align 8
@.str.5 = private unnamed_addr constant [35 x i8] c"MemoriesPersistClustersInHistoryDb\00", align 1
@_ZN16history_clusters27kPersistClustersInHistoryDbE = hidden local_unnamed_addr constant { %"struct.base::Feature"*, i8*, i8 } { %"struct.base::Feature"* @_ZN16history_clusters9kMemoriesE, i8* getelementptr inbounds ([35 x i8], [35 x i8]* @.str.5, i32 0, i32 0), i8 0 }, align 8
@.str.6 = private unnamed_addr constant [9 x i8] c"Memories\00", align 1
@.str.7 = private unnamed_addr constant [14 x i8] c"MemoriesDebug\00", align 1
@_ZN16history_clusters6kDebugE = hidden local_unnamed_addr constant %"struct.base::Feature" { i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.7, i32 0, i32 0), i32 0 }, align 8
@.str.8 = private unnamed_addr constant [32 x i8] c"MemoriesRemoteModelForDebugging\00", align 1
@.str.9 = private unnamed_addr constant [28 x i8] c"MemoriesRemoteModelEndpoint\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16history_clusters19RemoteModelEndpointEv(%class.GURL* noalias sret) local_unnamed_addr #0 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %3) #4
  call void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* nonnull sret %2, %"struct.base::FeatureParam"* nonnull @_ZN16history_clusters12_GLOBAL__N_120kRemoteModelEndpointE) #4
  %4 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = select i1 %7, i8* %9, i8* %3
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = load i64, i64* %11, align 8
  %13 = zext i8 %6 to i64
  %14 = select i1 %7, i64 %12, i64 %13
  call void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL* %0, i8* %10, i64 %14) #4
  %15 = load i8, i8* %5, align 1
  %16 = icmp slt i8 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %1
  %18 = load i8*, i8** %8, align 8
  call void @_ZdlPv(i8* %18) #5
  br label %19

19:                                               ; preds = %1, %17
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %3) #4
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZNK4base12FeatureParamINSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEELb0EE3GetEv(%"class.std::__1::basic_string"* sret, %"struct.base::FeatureParam"*) local_unnamed_addr #2

declare void @_ZN4GURLC1EN4base16BasicStringPieceIcNSt3__111char_traitsIcEEEE(%class.GURL*, i8*, i64) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
