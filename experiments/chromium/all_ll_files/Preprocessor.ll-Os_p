; ModuleID = '../../third_party/swiftshader/src/OpenGL/compiler/preprocessor/Preprocessor.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/compiler/preprocessor/Preprocessor.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.pp::Preprocessor" = type { %"struct.pp::PreprocessorImpl"* }
%"struct.pp::PreprocessorImpl" = type { %"class.pp::Diagnostics"*, %"class.std::__1::map", %"class.pp::Tokenizer", %"class.pp::DirectiveParser", %"class.pp::MacroExpander" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.pp::Tokenizer" = type { %"class.pp::Lexer", i8*, %"struct.pp::Tokenizer::Context", i64 }
%"class.pp::Lexer" = type { i32 (...)** }
%"struct.pp::Tokenizer::Context" = type <{ %"class.pp::Diagnostics"*, %"class.pp::Input", %"struct.pp::Input::Location", i8, i8, [6 x i8] }>
%"class.pp::Input" = type { i64, i8**, %"class.std::__1::vector", %"struct.pp::Input::Location" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i64*, i64*, %"class.std::__1::__compressed_pair.4" }
%"class.std::__1::__compressed_pair.4" = type { %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.5" = type { i64* }
%"struct.pp::Input::Location" = type { i64, i64 }
%"class.pp::DirectiveParser" = type { %"class.pp::Lexer", i8, i8, %"class.std::__1::vector.9", %"class.pp::Tokenizer"*, %"class.std::__1::map"*, %"class.pp::Diagnostics"*, %"class.pp::DirectiveHandler"*, i32, i32 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"struct.pp::DirectiveParser::ConditionalBlock"*, %"struct.pp::DirectiveParser::ConditionalBlock"*, %"class.std::__1::__compressed_pair.16" }
%"struct.pp::DirectiveParser::ConditionalBlock" = type <{ %"class.std::__1::basic_string", %"struct.pp::SourceLocation", i8, i8, i8, i8, [4 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"struct.pp::SourceLocation" = type { i32, i32 }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.pp::DirectiveParser::ConditionalBlock"* }
%"class.pp::MacroExpander" = type { %"class.pp::Lexer", %"class.pp::Lexer"*, %"class.std::__1::map"*, %"class.pp::Diagnostics"*, i8, %"class.std::__1::unique_ptr", %"class.std::__1::vector.24", i64, i32, i8, %"class.std::__1::vector.44" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.21" }
%"class.std::__1::__compressed_pair.21" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"struct.std::__1::__compressed_pair_elem.22" = type { %"struct.pp::Token"* }
%"struct.pp::Token" = type { i32, i32, %"struct.pp::SourceLocation", %"class.std::__1::basic_string" }
%"class.std::__1::vector.24" = type { %"class.std::__1::__vector_base.25" }
%"class.std::__1::__vector_base.25" = type { %"struct.pp::MacroExpander::MacroContext"**, %"struct.pp::MacroExpander::MacroContext"**, %"class.std::__1::__compressed_pair.39" }
%"struct.pp::MacroExpander::MacroContext" = type { %"class.std::__1::shared_ptr", i64, %"class.std::__1::vector.33" }
%"class.std::__1::shared_ptr" = type { %"struct.pp::Macro"*, %"class.std::__1::__shared_weak_count"* }
%"struct.pp::Macro" = type { i8, i8, i32, i32, %"class.std::__1::basic_string", %"class.std::__1::vector.26", %"class.std::__1::vector.33" }
%"class.std::__1::vector.26" = type { %"class.std::__1::__vector_base.27" }
%"class.std::__1::__vector_base.27" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.28" }
%"class.std::__1::__compressed_pair.28" = type { %"struct.std::__1::__compressed_pair_elem.29" }
%"struct.std::__1::__compressed_pair_elem.29" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::vector.33" = type { %"class.std::__1::__vector_base.34" }
%"class.std::__1::__vector_base.34" = type { %"struct.pp::Token"*, %"struct.pp::Token"*, %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.22" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.pp::MacroExpander::MacroContext"** }
%"class.std::__1::vector.44" = type { %"class.std::__1::__vector_base.45" }
%"class.std::__1::__vector_base.45" = type { %"class.std::__1::shared_ptr"*, %"class.std::__1::shared_ptr"*, %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.std::__1::shared_ptr"* }
%"class.pp::Diagnostics" = type { i32 (...)** }
%"class.pp::DirectiveHandler" = type opaque
%"struct.pp::PreprocessorSettings" = type { i32 }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair" }
%"struct.std::__1::pair" = type { %"class.std::__1::basic_string", %"class.std::__1::shared_ptr" }
%"class.std::__1::allocator" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }

$_ZN2pp16PreprocessorImplC2EPNS_11DiagnosticsEPNS_16DirectiveHandlerERKNS_20PreprocessorSettingsE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN2pp5MacroEEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE = comdat any

$_ZNSt3__116allocator_traitsINS_9allocatorINS_11__tree_nodeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10shared_ptrIN2pp5MacroEEEEEPvEEEEE7destroyINS_4pairIKS8_SC_EEvvEEvRSG_PT_ = comdat any

$_ZNSt3__110shared_ptrIN2pp5MacroEED2Ev = comdat any

@.str = private unnamed_addr constant [9 x i8] c"__LINE__\00", align 1
@.str.1 = private unnamed_addr constant [9 x i8] c"__FILE__\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"__VERSION__\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"GL_ES\00", align 1

@_ZN2pp12PreprocessorC1EPNS_11DiagnosticsEPNS_16DirectiveHandlerERKNS_20PreprocessorSettingsE = hidden unnamed_addr alias void (%"class.pp::Preprocessor"*, %"class.pp::Diagnostics"*, %"class.pp::DirectiveHandler"*, %"struct.pp::PreprocessorSettings"*), void (%"class.pp::Preprocessor"*, %"class.pp::Diagnostics"*, %"class.pp::DirectiveHandler"*, %"struct.pp::PreprocessorSettings"*)* @_ZN2pp12PreprocessorC2EPNS_11DiagnosticsEPNS_16DirectiveHandlerERKNS_20PreprocessorSettingsE
@_ZN2pp12PreprocessorD1Ev = hidden unnamed_addr alias void (%"class.pp::Preprocessor"*), void (%"class.pp::Preprocessor"*)* @_ZN2pp12PreprocessorD2Ev

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2pp12PreprocessorC2EPNS_11DiagnosticsEPNS_16DirectiveHandlerERKNS_20PreprocessorSettingsE(%"class.pp::Preprocessor"* nocapture, %"class.pp::Diagnostics"*, %"class.pp::DirectiveHandler"*, %"struct.pp::PreprocessorSettings"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %5 = tail call i8* @_Znwm(i64 336) #6
  %6 = bitcast i8* %5 to %"struct.pp::PreprocessorImpl"*
  tail call void @_ZN2pp16PreprocessorImplC2EPNS_11DiagnosticsEPNS_16DirectiveHandlerERKNS_20PreprocessorSettingsE(%"struct.pp::PreprocessorImpl"* nonnull %6, %"class.pp::Diagnostics"* %1, %"class.pp::DirectiveHandler"* %2, %"struct.pp::PreprocessorSettings"* dereferenceable(4) %3) #7
  %7 = bitcast %"class.pp::Preprocessor"* %0 to i8**
  store i8* %5, i8** %7, align 8
  ret void
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #1

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN2pp16PreprocessorImplC2EPNS_11DiagnosticsEPNS_16DirectiveHandlerERKNS_20PreprocessorSettingsE(%"struct.pp::PreprocessorImpl"*, %"class.pp::Diagnostics"*, %"class.pp::DirectiveHandler"*, %"struct.pp::PreprocessorSettings"* dereferenceable(4)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %0, i64 0, i32 0
  store %"class.pp::Diagnostics"* %1, %"class.pp::Diagnostics"** %5, align 8
  %6 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %6, i64 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::__tree_node_base"** %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 16, i1 false) #8
  store %"class.std::__1::__tree_end_node"* %8, %"class.std::__1::__tree_end_node"** %9, align 8
  %11 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %0, i64 0, i32 2
  tail call void @_ZN2pp9TokenizerC1EPNS_11DiagnosticsE(%"class.pp::Tokenizer"* %11, %"class.pp::Diagnostics"* %1) #9
  %12 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %0, i64 0, i32 3
  %13 = getelementptr inbounds %"struct.pp::PreprocessorSettings", %"struct.pp::PreprocessorSettings"* %3, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  tail call void @_ZN2pp15DirectiveParserC1EPNS_9TokenizerEPNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10shared_ptrINS_5MacroEEENS3_4lessISA_EENS8_INS3_4pairIKSA_SD_EEEEEEPNS_11DiagnosticsEPNS_16DirectiveHandlerEi(%"class.pp::DirectiveParser"* %12, %"class.pp::Tokenizer"* %11, %"class.std::__1::map"* %6, %"class.pp::Diagnostics"* %1, %"class.pp::DirectiveHandler"* %2, i32 %14) #9
  %15 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %0, i64 0, i32 4
  %16 = getelementptr inbounds %"class.pp::DirectiveParser", %"class.pp::DirectiveParser"* %12, i64 0, i32 0
  %17 = load i32, i32* %13, align 4
  tail call void @_ZN2pp13MacroExpanderC1EPNS_5LexerEPNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10shared_ptrINS_5MacroEEENS3_4lessISA_EENS8_INS3_4pairIKSA_SD_EEEEEEPNS_11DiagnosticsEbi(%"class.pp::MacroExpander"* %15, %"class.pp::Lexer"* %16, %"class.std::__1::map"* %6, %"class.pp::Diagnostics"* %1, i1 zeroext false, i32 %17) #9
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2pp12PreprocessorD2Ev(%"class.pp::Preprocessor"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.pp::Preprocessor", %"class.pp::Preprocessor"* %0, i64 0, i32 0
  %3 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %2, align 8
  %4 = icmp eq %"struct.pp::PreprocessorImpl"* %3, null
  br i1 %4, label %14, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %3, i64 0, i32 4
  tail call void @_ZN2pp13MacroExpanderD1Ev(%"class.pp::MacroExpander"* %6) #9
  %7 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %3, i64 0, i32 3
  tail call void @_ZN2pp15DirectiveParserD1Ev(%"class.pp::DirectiveParser"* %7) #9
  %8 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %3, i64 0, i32 2
  tail call void @_ZN2pp9TokenizerD1Ev(%"class.pp::Tokenizer"* %8) #9
  %9 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %3, i64 0, i32 1, i32 0
  %10 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %3, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.std::__1::__tree_node"**
  %12 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %11, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN2pp5MacroEEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %9, %"class.std::__1::__tree_node"* %12) #9
  %13 = bitcast %"struct.pp::PreprocessorImpl"* %3 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  br label %14

14:                                               ; preds = %5, %1
  ret void
}

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind optsize ssp uwtable
define hidden zeroext i1 @_ZN2pp12Preprocessor4initEmPKPKcPKi(%"class.pp::Preprocessor"* nocapture readonly, i64, i8**, i32*) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.pp::Preprocessor", %"class.pp::Preprocessor"* %0, i64 0, i32 0
  %6 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %5, align 8
  %7 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %6, i64 0, i32 1
  tail call void @_ZN2pp14PredefineMacroEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10shared_ptrINS_5MacroEEENS0_4lessIS7_EENS5_INS0_4pairIKS7_SA_EEEEEEPKci(%"class.std::__1::map"* %7, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0), i32 0) #9
  %8 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %5, align 8
  %9 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %8, i64 0, i32 1
  tail call void @_ZN2pp14PredefineMacroEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10shared_ptrINS_5MacroEEENS0_4lessIS7_EENS5_INS0_4pairIKS7_SA_EEEEEEPKci(%"class.std::__1::map"* %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.1, i64 0, i64 0), i32 0) #9
  %10 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %5, align 8
  %11 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %10, i64 0, i32 1
  tail call void @_ZN2pp14PredefineMacroEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10shared_ptrINS_5MacroEEENS0_4lessIS7_EENS5_INS0_4pairIKS7_SA_EEEEEEPKci(%"class.std::__1::map"* %11, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0), i32 100) #9
  %12 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %5, align 8
  %13 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %12, i64 0, i32 1
  tail call void @_ZN2pp14PredefineMacroEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10shared_ptrINS_5MacroEEENS0_4lessIS7_EENS5_INS0_4pairIKS7_SA_EEEEEEPKci(%"class.std::__1::map"* %13, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0), i32 1) #9
  %14 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %5, align 8
  %15 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %14, i64 0, i32 2
  %16 = tail call zeroext i1 @_ZN2pp9Tokenizer4initEmPKPKcPKi(%"class.pp::Tokenizer"* %15, i64 %1, i8** %2, i32* %3) #9
  ret i1 %16
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2pp12Preprocessor14predefineMacroEPKci(%"class.pp::Preprocessor"* nocapture readonly, i8*, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.pp::Preprocessor", %"class.pp::Preprocessor"* %0, i64 0, i32 0
  %5 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %4, align 8
  %6 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %5, i64 0, i32 1
  tail call void @_ZN2pp14PredefineMacroEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10shared_ptrINS_5MacroEEENS0_4lessIS7_EENS5_INS0_4pairIKS7_SA_EEEEEEPKci(%"class.std::__1::map"* %6, i8* %1, i32 %2) #9
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZN2pp9Tokenizer4initEmPKPKcPKi(%"class.pp::Tokenizer"*, i64, i8**, i32*) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2pp14PredefineMacroEPNSt3__13mapINS0_12basic_stringIcNS0_11char_traitsIcEENS0_9allocatorIcEEEENS0_10shared_ptrINS_5MacroEEENS0_4lessIS7_EENS5_INS0_4pairIKS7_SA_EEEEEEPKci(%"class.std::__1::map"*, i8*, i32) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2pp12Preprocessor3lexEPNS_5TokenE(%"class.pp::Preprocessor"* nocapture readonly, %"struct.pp::Token"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pp::Preprocessor", %"class.pp::Preprocessor"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"struct.pp::Token", %"struct.pp::Token"* %1, i64 0, i32 0
  %5 = getelementptr inbounds %"struct.pp::Token", %"struct.pp::Token"* %1, i64 0, i32 2
  %6 = getelementptr inbounds %"struct.pp::Token", %"struct.pp::Token"* %1, i64 0, i32 3
  br label %7

7:                                                ; preds = %17, %2
  %8 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %3, align 8
  %9 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %8, i64 0, i32 4
  tail call void @_ZN2pp13MacroExpander3lexEPNS_5TokenE(%"class.pp::MacroExpander"* %9, %"struct.pp::Token"* %1) #9
  %10 = load i32, i32* %4, align 8
  switch i32 %10, label %18 [
    i32 282, label %17
    i32 283, label %12
    i32 284, label %11
  ]

11:                                               ; preds = %7
  br label %12

12:                                               ; preds = %7, %11
  %13 = phi i32 [ 3, %11 ], [ 4, %7 ]
  %14 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %3, align 8
  %15 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %14, i64 0, i32 0
  %16 = load %"class.pp::Diagnostics"*, %"class.pp::Diagnostics"** %15, align 8
  tail call void @_ZN2pp11Diagnostics6reportENS0_2IDERKNS_14SourceLocationERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.pp::Diagnostics"* %16, i32 %13, %"struct.pp::SourceLocation"* dereferenceable(8) %5, %"class.std::__1::basic_string"* dereferenceable(24) %6) #9
  br label %17

17:                                               ; preds = %12, %7
  br label %7

18:                                               ; preds = %7
  ret void
}

; Function Attrs: optsize
declare void @_ZN2pp13MacroExpander3lexEPNS_5TokenE(%"class.pp::MacroExpander"*, %"struct.pp::Token"*) unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2pp11Diagnostics6reportENS0_2IDERKNS_14SourceLocationERKNSt3__112basic_stringIcNS5_11char_traitsIcEENS5_9allocatorIcEEEE(%"class.pp::Diagnostics"*, i32, %"struct.pp::SourceLocation"* dereferenceable(8), %"class.std::__1::basic_string"* dereferenceable(24)) local_unnamed_addr #3

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN2pp12Preprocessor15setMaxTokenSizeEm(%"class.pp::Preprocessor"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.pp::Preprocessor", %"class.pp::Preprocessor"* %0, i64 0, i32 0
  %4 = load %"struct.pp::PreprocessorImpl"*, %"struct.pp::PreprocessorImpl"** %3, align 8
  %5 = getelementptr inbounds %"struct.pp::PreprocessorImpl", %"struct.pp::PreprocessorImpl"* %4, i64 0, i32 2
  tail call void @_ZN2pp9Tokenizer15setMaxTokenSizeEm(%"class.pp::Tokenizer"* %5, i64 %1) #9
  ret void
}

; Function Attrs: optsize
declare void @_ZN2pp9Tokenizer15setMaxTokenSizeEm(%"class.pp::Tokenizer"*, i64) local_unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2pp9TokenizerC1EPNS_11DiagnosticsE(%"class.pp::Tokenizer"*, %"class.pp::Diagnostics"*) unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2pp15DirectiveParserC1EPNS_9TokenizerEPNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10shared_ptrINS_5MacroEEENS3_4lessISA_EENS8_INS3_4pairIKSA_SD_EEEEEEPNS_11DiagnosticsEPNS_16DirectiveHandlerEi(%"class.pp::DirectiveParser"*, %"class.pp::Tokenizer"*, %"class.std::__1::map"*, %"class.pp::Diagnostics"*, %"class.pp::DirectiveHandler"*, i32) unnamed_addr #3

; Function Attrs: optsize
declare void @_ZN2pp13MacroExpanderC1EPNS_5LexerEPNSt3__13mapINS3_12basic_stringIcNS3_11char_traitsIcEENS3_9allocatorIcEEEENS3_10shared_ptrINS_5MacroEEENS3_4lessISA_EENS8_INS3_4pairIKSA_SD_EEEEEEPNS_11DiagnosticsEbi(%"class.pp::MacroExpander"*, %"class.pp::Lexer"*, %"class.std::__1::map"*, %"class.pp::Diagnostics"*, i1 zeroext, i32) unnamed_addr #3

; Function Attrs: nounwind optsize
declare void @_ZN2pp13MacroExpanderD1Ev(%"class.pp::MacroExpander"*) unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @_ZN2pp15DirectiveParserD1Ev(%"class.pp::DirectiveParser"*) unnamed_addr #4

; Function Attrs: nounwind optsize
declare void @_ZN2pp9TokenizerD1Ev(%"class.pp::Tokenizer"*) unnamed_addr #4

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN2pp5MacroEEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %14, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN2pp5MacroEEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #9
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_10shared_ptrIN2pp5MacroEEEEENS_19__map_value_compareIS7_SC_NS_4lessIS7_EELb1EEENS5_ISC_EEE7destroyEPNS_11__tree_nodeISC_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #9
  %10 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1
  %11 = bitcast %"class.std::__1::__compressed_pair"* %10 to %"class.std::__1::allocator"*
  %12 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0
  tail call void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__tree_nodeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10shared_ptrIN2pp5MacroEEEEEPvEEEEE7destroyINS_4pairIKS8_SC_EEvvEEvRSG_PT_(%"class.std::__1::allocator"* dereferenceable(1) %11, %"struct.std::__1::pair"* %12) #7
  %13 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %13) #6
  ret void

14:                                               ; preds = %2
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__116allocator_traitsINS_9allocatorINS_11__tree_nodeINS_12__value_typeINS_12basic_stringIcNS_11char_traitsIcEENS1_IcEEEENS_10shared_ptrIN2pp5MacroEEEEEPvEEEEE7destroyINS_4pairIKS8_SC_EEvvEEvRSG_PT_(%"class.std::__1::allocator"* dereferenceable(1), %"struct.std::__1::pair"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 1
  tail call void @_ZNSt3__110shared_ptrIN2pp5MacroEED2Ev(%"class.std::__1::shared_ptr"* %3) #9
  %4 = bitcast %"struct.std::__1::pair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #6
  br label %11

11:                                               ; preds = %2, %8
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNSt3__110shared_ptrIN2pp5MacroEED2Ev(%"class.std::__1::shared_ptr"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.std::__1::shared_ptr", %"class.std::__1::shared_ptr"* %0, i64 0, i32 1
  %3 = load %"class.std::__1::__shared_weak_count"*, %"class.std::__1::__shared_weak_count"** %2, align 8
  %4 = icmp eq %"class.std::__1::__shared_weak_count"* %3, null
  br i1 %4, label %15, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0, i32 1
  %7 = atomicrmw add i64* %6, i64 -1 acq_rel
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.std::__1::__shared_weak_count", %"class.std::__1::__shared_weak_count"* %3, i64 0, i32 0
  %11 = bitcast %"class.std::__1::__shared_weak_count"* %3 to void (%"class.std::__1::__shared_count"*)***
  %12 = load void (%"class.std::__1::__shared_count"*)**, void (%"class.std::__1::__shared_count"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %12, i64 2
  %14 = load void (%"class.std::__1::__shared_count"*)*, void (%"class.std::__1::__shared_count"*)** %13, align 8
  tail call void %14(%"class.std::__1::__shared_count"* %10) #9
  tail call void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"* nonnull %3) #9
  br label %15

15:                                               ; preds = %9, %5, %1
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZNSt3__119__shared_weak_count14__release_weakEv(%"class.std::__1::__shared_weak_count"*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { builtin nounwind optsize }
attributes #7 = { optsize }
attributes #8 = { nounwind }
attributes #9 = { nounwind optsize }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
