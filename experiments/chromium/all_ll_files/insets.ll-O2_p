; ModuleID = '../../ui/gfx/geometry/insets.cc'
source_filename = "../../ui/gfx/geometry/insets.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.gfx::Insets" = type { i32, i32, i32, i32 }
%"class.gfx::Vector2d" = type { i32, i32 }
%"class.gfx::InsetsF" = type { float, float, float, float }

@.str = private unnamed_addr constant [12 x i8] c"%d,%d,%d,%d\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3gfx6Insets8ToStringEv(%"class.std::__1::basic_string"* noalias sret, %"class.gfx::Insets"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %1, i64 0, i32 3
  %10 = load i32, i32* %9, align 4
  tail call void (%"class.std::__1::basic_string"*, i8*, ...) @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret %0, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str, i64 0, i64 0), i32 %4, i32 %6, i32 %8, i32 %10) #5
  ret void
}

declare void @_ZN4base12StringPrintfEPKcz(%"class.std::__1::basic_string"* sret, i8*, ...) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden { i64, i64 } @_ZNK3gfx6Insets6OffsetERKNS_8Vector2dE(%"class.gfx::Insets"* nocapture readonly, %"class.gfx::Vector2d"* nocapture readonly dereferenceable(8)) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 4
  %7 = icmp slt i32 %6, 0
  %8 = select i1 %7, i32 -2147483648, i32 2147483647
  %9 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %4, i32 %6) #5
  %10 = extractvalue { i32, i1 } %9, 1
  %11 = extractvalue { i32, i1 } %9, 0
  %12 = select i1 %10, i32 %8, i32 %11, !prof !2
  %13 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  %15 = getelementptr inbounds %"class.gfx::Vector2d", %"class.gfx::Vector2d"* %1, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp slt i32 %16, 0
  %18 = select i1 %17, i32 -2147483648, i32 2147483647
  %19 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %14, i32 %16) #5
  %20 = extractvalue { i32, i1 } %19, 1
  %21 = extractvalue { i32, i1 } %19, 0
  %22 = select i1 %20, i32 %18, i32 %21, !prof !2
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = icmp sgt i32 %6, -1
  %26 = select i1 %25, i32 -2147483648, i32 2147483647
  %27 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %24, i32 %6) #5
  %28 = extractvalue { i32, i1 } %27, 1
  %29 = extractvalue { i32, i1 } %27, 0
  %30 = select i1 %28, i32 %26, i32 %29, !prof !2
  %31 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %32 = load i32, i32* %31, align 4
  %33 = icmp sgt i32 %16, -1
  %34 = select i1 %33, i32 -2147483648, i32 2147483647
  %35 = tail call { i32, i1 } @llvm.ssub.with.overflow.i32(i32 %32, i32 %16) #5
  %36 = extractvalue { i32, i1 } %35, 1
  %37 = extractvalue { i32, i1 } %35, 0
  %38 = select i1 %36, i32 %34, i32 %37, !prof !2
  %39 = icmp sgt i32 %12, 0
  %40 = icmp sgt i32 %30, 0
  %41 = and i1 %39, %40
  %42 = sub nuw nsw i32 2147483647, %12
  %43 = icmp ult i32 %42, %30
  %44 = and i1 %43, %41
  br i1 %44, label %52, label %45

45:                                               ; preds = %2
  %46 = and i32 %30, %12
  %47 = icmp slt i32 %46, 0
  %48 = sub nsw i32 -2147483648, %12
  %49 = icmp sgt i32 %48, %30
  %50 = and i1 %49, %47
  %51 = select i1 %50, i32 %48, i32 %30
  br label %52

52:                                               ; preds = %45, %2
  %53 = phi i32 [ %51, %45 ], [ %42, %2 ]
  %54 = icmp sgt i32 %22, 0
  %55 = icmp sgt i32 %38, 0
  %56 = and i1 %54, %55
  %57 = sub nuw nsw i32 2147483647, %22
  %58 = icmp ult i32 %57, %38
  %59 = and i1 %58, %56
  br i1 %59, label %67, label %60

60:                                               ; preds = %52
  %61 = and i32 %38, %22
  %62 = icmp slt i32 %61, 0
  %63 = sub nsw i32 -2147483648, %22
  %64 = icmp sgt i32 %63, %38
  %65 = and i1 %64, %62
  %66 = select i1 %65, i32 %63, i32 %38
  br label %67

67:                                               ; preds = %52, %60
  %68 = phi i32 [ %66, %60 ], [ %57, %52 ]
  %69 = zext i32 %22 to i64
  %70 = shl nuw i64 %69, 32
  %71 = zext i32 %12 to i64
  %72 = or i64 %70, %71
  %73 = insertvalue { i64, i64 } undef, i64 %72, 0
  %74 = zext i32 %68 to i64
  %75 = shl nuw i64 %74, 32
  %76 = zext i32 %53 to i64
  %77 = or i64 %75, %76
  %78 = insertvalue { i64, i64 } %73, i64 %77, 1
  ret { i64, i64 } %78
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx19ScaleToCeiledInsetsERKNS_6InsetsEff(%"class.gfx::Insets"* nocapture readonly dereferenceable(16), float, float) local_unnamed_addr #0 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = fcmp oeq float %1, 1.000000e+00
  %6 = fcmp oeq float %2, 1.000000e+00
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %"class.gfx::Insets"* %0 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %12 = bitcast i32* %11 to i64*
  %13 = load i64, i64* %12, align 4
  br label %42

14:                                               ; preds = %3
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::InsetsF"*
  %16 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = fmul float %19, %2
  %30 = fmul float %22, %1
  %31 = fmul float %25, %2
  %32 = fmul float %28, %1
  %33 = insertelement <2 x float> undef, float %29, i32 0
  %34 = insertelement <2 x float> %33, float %30, i32 1
  %35 = insertelement <2 x float> undef, float %31, i32 0
  %36 = insertelement <2 x float> %35, float %32, i32 1
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %34, <2 x float>* %37, align 8
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %36, <2 x float>* %38, align 8
  %39 = call { i64, i64 } @_ZN3gfx14ToCeiledInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nonnull dereferenceable(16) %15) #5
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #5
  br label %42

42:                                               ; preds = %14, %8
  %43 = phi i64 [ %10, %8 ], [ %40, %14 ]
  %44 = phi i64 [ %13, %8 ], [ %41, %14 ]
  %45 = insertvalue { i64, i64 } undef, i64 %43, 0
  %46 = insertvalue { i64, i64 } %45, i64 %44, 1
  ret { i64, i64 } %46
}

declare { i64, i64 } @_ZN3gfx14ToCeiledInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx19ScaleToCeiledInsetsERKNS_6InsetsEf(%"class.gfx::Insets"* nocapture readonly dereferenceable(16), float) local_unnamed_addr #0 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = fcmp oeq float %1, 1.000000e+00
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = bitcast %"class.gfx::Insets"* %0 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %9 = bitcast i32* %8 to i64*
  %10 = load i64, i64* %9, align 4
  br label %39

11:                                               ; preds = %2
  %12 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.gfx::InsetsF"*
  %13 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = fmul float %16, %1
  %27 = fmul float %19, %1
  %28 = fmul float %22, %1
  %29 = fmul float %25, %1
  %30 = insertelement <2 x float> undef, float %26, i32 0
  %31 = insertelement <2 x float> %30, float %27, i32 1
  %32 = insertelement <2 x float> undef, float %28, i32 0
  %33 = insertelement <2 x float> %32, float %29, i32 1
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %31, <2 x float>* %34, align 8
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %33, <2 x float>* %35, align 8
  %36 = call { i64, i64 } @_ZN3gfx14ToCeiledInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nonnull dereferenceable(16) %12) #5
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = extractvalue { i64, i64 } %36, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  br label %39

39:                                               ; preds = %11, %5
  %40 = phi i64 [ %7, %5 ], [ %37, %11 ]
  %41 = phi i64 [ %10, %5 ], [ %38, %11 ]
  %42 = insertvalue { i64, i64 } undef, i64 %40, 0
  %43 = insertvalue { i64, i64 } %42, i64 %41, 1
  ret { i64, i64 } %43
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx20ScaleToFlooredInsetsERKNS_6InsetsEff(%"class.gfx::Insets"* nocapture readonly dereferenceable(16), float, float) local_unnamed_addr #0 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = fcmp oeq float %1, 1.000000e+00
  %6 = fcmp oeq float %2, 1.000000e+00
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %"class.gfx::Insets"* %0 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %12 = bitcast i32* %11 to i64*
  %13 = load i64, i64* %12, align 4
  br label %42

14:                                               ; preds = %3
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::InsetsF"*
  %16 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = fmul float %19, %2
  %30 = fmul float %22, %1
  %31 = fmul float %25, %2
  %32 = fmul float %28, %1
  %33 = insertelement <2 x float> undef, float %29, i32 0
  %34 = insertelement <2 x float> %33, float %30, i32 1
  %35 = insertelement <2 x float> undef, float %31, i32 0
  %36 = insertelement <2 x float> %35, float %32, i32 1
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %34, <2 x float>* %37, align 8
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %36, <2 x float>* %38, align 8
  %39 = call { i64, i64 } @_ZN3gfx15ToFlooredInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nonnull dereferenceable(16) %15) #5
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #5
  br label %42

42:                                               ; preds = %14, %8
  %43 = phi i64 [ %10, %8 ], [ %40, %14 ]
  %44 = phi i64 [ %13, %8 ], [ %41, %14 ]
  %45 = insertvalue { i64, i64 } undef, i64 %43, 0
  %46 = insertvalue { i64, i64 } %45, i64 %44, 1
  ret { i64, i64 } %46
}

declare { i64, i64 } @_ZN3gfx15ToFlooredInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx20ScaleToFlooredInsetsERKNS_6InsetsEf(%"class.gfx::Insets"* nocapture readonly dereferenceable(16), float) local_unnamed_addr #0 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = fcmp oeq float %1, 1.000000e+00
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = bitcast %"class.gfx::Insets"* %0 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %9 = bitcast i32* %8 to i64*
  %10 = load i64, i64* %9, align 4
  br label %39

11:                                               ; preds = %2
  %12 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.gfx::InsetsF"*
  %13 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = fmul float %16, %1
  %27 = fmul float %19, %1
  %28 = fmul float %22, %1
  %29 = fmul float %25, %1
  %30 = insertelement <2 x float> undef, float %26, i32 0
  %31 = insertelement <2 x float> %30, float %27, i32 1
  %32 = insertelement <2 x float> undef, float %28, i32 0
  %33 = insertelement <2 x float> %32, float %29, i32 1
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %31, <2 x float>* %34, align 8
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %33, <2 x float>* %35, align 8
  %36 = call { i64, i64 } @_ZN3gfx15ToFlooredInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nonnull dereferenceable(16) %12) #5
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = extractvalue { i64, i64 } %36, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  br label %39

39:                                               ; preds = %11, %5
  %40 = phi i64 [ %7, %5 ], [ %37, %11 ]
  %41 = phi i64 [ %10, %5 ], [ %38, %11 ]
  %42 = insertvalue { i64, i64 } undef, i64 %40, 0
  %43 = insertvalue { i64, i64 } %42, i64 %41, 1
  ret { i64, i64 } %43
}

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx20ScaleToRoundedInsetsERKNS_6InsetsEff(%"class.gfx::Insets"* nocapture readonly dereferenceable(16), float, float) local_unnamed_addr #0 {
  %4 = alloca { <2 x float>, <2 x float> }, align 8
  %5 = fcmp oeq float %1, 1.000000e+00
  %6 = fcmp oeq float %2, 1.000000e+00
  %7 = and i1 %5, %6
  br i1 %7, label %8, label %14

8:                                                ; preds = %3
  %9 = bitcast %"class.gfx::Insets"* %0 to i64*
  %10 = load i64, i64* %9, align 4
  %11 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %12 = bitcast i32* %11 to i64*
  %13 = load i64, i64* %12, align 4
  br label %42

14:                                               ; preds = %3
  %15 = bitcast { <2 x float>, <2 x float> }* %4 to %"class.gfx::InsetsF"*
  %16 = bitcast { <2 x float>, <2 x float> }* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #5
  %17 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %27 = load i32, i32* %26, align 4
  %28 = sitofp i32 %27 to float
  %29 = fmul float %19, %2
  %30 = fmul float %22, %1
  %31 = fmul float %25, %2
  %32 = fmul float %28, %1
  %33 = insertelement <2 x float> undef, float %29, i32 0
  %34 = insertelement <2 x float> %33, float %30, i32 1
  %35 = insertelement <2 x float> undef, float %31, i32 0
  %36 = insertelement <2 x float> %35, float %32, i32 1
  %37 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 0
  store <2 x float> %34, <2 x float>* %37, align 8
  %38 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %4, i64 0, i32 1
  store <2 x float> %36, <2 x float>* %38, align 8
  %39 = call { i64, i64 } @_ZN3gfx15ToRoundedInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nonnull dereferenceable(16) %15) #5
  %40 = extractvalue { i64, i64 } %39, 0
  %41 = extractvalue { i64, i64 } %39, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #5
  br label %42

42:                                               ; preds = %14, %8
  %43 = phi i64 [ %10, %8 ], [ %40, %14 ]
  %44 = phi i64 [ %13, %8 ], [ %41, %14 ]
  %45 = insertvalue { i64, i64 } undef, i64 %43, 0
  %46 = insertvalue { i64, i64 } %45, i64 %44, 1
  ret { i64, i64 } %46
}

declare { i64, i64 } @_ZN3gfx15ToRoundedInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden { i64, i64 } @_ZN3gfx20ScaleToRoundedInsetsERKNS_6InsetsEf(%"class.gfx::Insets"* nocapture readonly dereferenceable(16), float) local_unnamed_addr #0 {
  %3 = alloca { <2 x float>, <2 x float> }, align 8
  %4 = fcmp oeq float %1, 1.000000e+00
  br i1 %4, label %5, label %11

5:                                                ; preds = %2
  %6 = bitcast %"class.gfx::Insets"* %0 to i64*
  %7 = load i64, i64* %6, align 4
  %8 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %9 = bitcast i32* %8 to i64*
  %10 = load i64, i64* %9, align 4
  br label %39

11:                                               ; preds = %2
  %12 = bitcast { <2 x float>, <2 x float> }* %3 to %"class.gfx::InsetsF"*
  %13 = bitcast { <2 x float>, <2 x float> }* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #5
  %14 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = sitofp i32 %15 to float
  %17 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = sitofp i32 %18 to float
  %20 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 2
  %21 = load i32, i32* %20, align 4
  %22 = sitofp i32 %21 to float
  %23 = getelementptr inbounds %"class.gfx::Insets", %"class.gfx::Insets"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 4
  %25 = sitofp i32 %24 to float
  %26 = fmul float %16, %1
  %27 = fmul float %19, %1
  %28 = fmul float %22, %1
  %29 = fmul float %25, %1
  %30 = insertelement <2 x float> undef, float %26, i32 0
  %31 = insertelement <2 x float> %30, float %27, i32 1
  %32 = insertelement <2 x float> undef, float %28, i32 0
  %33 = insertelement <2 x float> %32, float %29, i32 1
  %34 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 0
  store <2 x float> %31, <2 x float>* %34, align 8
  %35 = getelementptr inbounds { <2 x float>, <2 x float> }, { <2 x float>, <2 x float> }* %3, i64 0, i32 1
  store <2 x float> %33, <2 x float>* %35, align 8
  %36 = call { i64, i64 } @_ZN3gfx15ToRoundedInsetsERKNS_7InsetsFE(%"class.gfx::InsetsF"* nonnull dereferenceable(16) %12) #5
  %37 = extractvalue { i64, i64 } %36, 0
  %38 = extractvalue { i64, i64 } %36, 1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #5
  br label %39

39:                                               ; preds = %11, %5
  %40 = phi i64 [ %7, %5 ], [ %37, %11 ]
  %41 = phi i64 [ %10, %5 ], [ %38, %11 ]
  %42 = insertvalue { i64, i64 } undef, i64 %40, 0
  %43 = insertvalue { i64, i64 } %42, i64 %41, 1
  ret { i64, i64 } %43
}

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #4

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.ssub.with.overflow.i32(i32, i32) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
