; ModuleID = '../../third_party/crashpad/crashpad/util/linux/exception_handler_protocol.cc'
source_filename = "../../third_party/crashpad/crashpad/util/linux/exception_handler_protocol.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"struct.crashpad::ExceptionHandlerProtocol::ClientInformation" = type { i64, i64, i64 }
%"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage" = type { i32, i32, i64, %union.anon }
%union.anon = type { %"struct.crashpad::ExceptionHandlerProtocol::ClientInformation" }

@_ZN8crashpad24ExceptionHandlerProtocol17ClientInformationC1Ev = hidden unnamed_addr alias void (%"struct.crashpad::ExceptionHandlerProtocol::ClientInformation"*), void (%"struct.crashpad::ExceptionHandlerProtocol::ClientInformation"*)* @_ZN8crashpad24ExceptionHandlerProtocol17ClientInformationC2Ev
@_ZN8crashpad24ExceptionHandlerProtocol21ClientToServerMessageC1Ev = hidden unnamed_addr alias void (%"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage"*), void (%"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage"*)* @_ZN8crashpad24ExceptionHandlerProtocol21ClientToServerMessageC2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN8crashpad24ExceptionHandlerProtocol17ClientInformationC2Ev(%"struct.crashpad::ExceptionHandlerProtocol::ClientInformation"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"struct.crashpad::ExceptionHandlerProtocol::ClientInformation"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %2, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN8crashpad24ExceptionHandlerProtocol21ClientToServerMessageC2Ev(%"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage"* nocapture) unnamed_addr #1 align 2 {
  %2 = getelementptr inbounds %"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage", %"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage"* %0, i64 0, i32 0
  store i32 1, i32* %2, align 1
  %3 = getelementptr inbounds %"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage", %"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage"* %0, i64 0, i32 1
  store i32 1, i32* %3, align 1
  %4 = getelementptr inbounds %"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage", %"struct.crashpad::ExceptionHandlerProtocol::ClientToServerMessage"* %0, i64 0, i32 2
  %5 = bitcast i64* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %5, i8 0, i64 32, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
