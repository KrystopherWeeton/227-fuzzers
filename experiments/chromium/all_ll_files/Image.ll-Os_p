; ModuleID = '../../third_party/swiftshader/src/OpenGL/common/Image.cpp'
source_filename = "../../third_party/swiftshader/src/OpenGL/common/Image.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.egl::Image" = type { %"class.sw::Surface.base", [6 x i8], %"class.gl::Object.base", i32, i32, i32, i32, i8, %"class.egl::Texture"* }
%"class.sw::Surface.base" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8 }>
%"class.sw::Resource" = type { i64, %"class.sw::MutexLock", %"class.sw::Event", i32, i32, i32, i8, i8* }
%"class.sw::MutexLock" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.sw::Event" = type <{ %union.pthread_cond_t, %union.pthread_mutex_t, i8, [7 x i8] }>
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon, %union.anon.1, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon = type { i64 }
%union.anon.1 = type { i64 }
%"struct.sw::Surface::Buffer" = type <{ i8*, i32, i32, i32, i16, i16, i32, i32, i32, i32, i32, i32, %"class.sw::AtomicInt", i8, [3 x i8] }>
%"class.sw::AtomicInt" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.gl::Object.base" = type <{ i32 (...)**, i32 }>
%"class.egl::Texture" = type { %"class.gl::NamedObject" }
%"class.gl::NamedObject" = type { %"class.gl::Object.base", i32 }
%"struct.gl::PixelStorageModes" = type { i32, i32, i32, i32, i32, i32 }
%"class.sw::half" = type { i16 }
%"class.sw::R11G11B10F" = type { i32 }
%"class.sw::RGB9E5" = type { i32 }
%struct.D32FS8 = type { float, i32 }
%struct.D32FS8.0 = type { float, i32 }
%"class.egl::ClientBuffer" = type { i32, i32, i32, i8*, i64 }
%"class.egl::ClientBufferImage" = type { %"class.egl::Image", %"class.egl::ClientBuffer" }
%"class.gl::Object" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.sw::Surface" = type <{ i32 (...)**, %"class.sw::Resource"*, %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer", i8, i8, i8, i8, i32, i8, i8, [6 x i8] }>
%"struct.egl::Rectangle" = type { i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.egl::ImageImplementation" = type { %"class.egl::Image" }

$_ZNK2sw10R11G11B10F8toRGB16FEPNS_4halfE = comdat any

$_ZNK2sw6RGB9E58toRGB16FEPNS_4halfE = comdat any

$_ZN3egl17ClientBufferImageC2ERKNS_12ClientBufferE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE6EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE7EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE17EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE23EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE1EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE18EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE8EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE9EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE5EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE4EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE21EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE22EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE2EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE3EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE20EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE19EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE10EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE12EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE13EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE11EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE14EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE15EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZN3egl8TransferILNS_12TransferTypeE16EEEvPvPKvRKNS_9RectangleE = comdat any

$_ZNK2sw7Surface12requiresSyncEv = comdat any

$_ZN3egl5Image4lockEiiiN2sw4LockE = comdat any

$_ZN3egl5Image6unlockEv = comdat any

$_ZN3egl5Image13destroySharedEv = comdat any

$_ZN3egl5ImageC2EPNS_7TextureEiii = comdat any

$_ZN3egl19ImageImplementationD2Ev = comdat any

$_ZN3egl19ImageImplementationD0Ev = comdat any

$_ZN3egl19ImageImplementation12lockInternalEiiiN2sw4LockENS1_8AccessorE = comdat any

$_ZN3egl19ImageImplementation14unlockInternalEv = comdat any

$_ZN3egl19ImageImplementation7releaseEv = comdat any

$_ZThn200_N3egl19ImageImplementation7releaseEv = comdat any

$_ZThn200_N3egl19ImageImplementationD1Ev = comdat any

$_ZThn200_N3egl19ImageImplementationD0Ev = comdat any

$_ZN3egl5ImageC2EPNS_7TextureEiiiii = comdat any

$_ZN3egl5ImageC2Eiiii = comdat any

$_ZN3egl5ImageC2Eiiiib = comdat any

$_ZN3egl17ClientBufferImage29getClientBufferInternalFormatEN2sw6FormatE = comdat any

$_ZN3egl17ClientBufferImageD2Ev = comdat any

$_ZN3egl17ClientBufferImageD0Ev = comdat any

$_ZN3egl17ClientBufferImage12lockInternalEiiiN2sw4LockENS1_8AccessorE = comdat any

$_ZN3egl17ClientBufferImage14unlockInternalEv = comdat any

$_ZNK3egl17ClientBufferImage12requiresSyncEv = comdat any

$_ZN3egl17ClientBufferImage4lockEiiiN2sw4LockE = comdat any

$_ZN3egl17ClientBufferImage6unlockEv = comdat any

$_ZN3egl17ClientBufferImage7releaseEv = comdat any

$_ZThn200_N3egl17ClientBufferImage7releaseEv = comdat any

$_ZThn200_N3egl17ClientBufferImageD1Ev = comdat any

$_ZThn200_N3egl17ClientBufferImageD0Ev = comdat any

$_ZTVN3egl5ImageE = comdat any

$_ZTVN3egl19ImageImplementationE = comdat any

$_ZTVN3egl17ClientBufferImageE = comdat any

@_ZTVN3egl5ImageE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [6 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.sw::Surface"*)* @_ZNK2sw7Surface12requiresSyncEv to i8*), i8* bitcast (i8* (%"class.egl::Image"*, i32, i32, i32, i32)* @_ZN3egl5Image4lockEiiiN2sw4LockE to i8*), i8* bitcast (void (%"class.egl::Image"*)* @_ZN3egl5Image6unlockEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.egl::Image"*)* @_ZN3egl5Image13destroySharedEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN3egl19ImageImplementationE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [6 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::ImageImplementation"*)* @_ZN3egl19ImageImplementationD2Ev to i8*), i8* bitcast (void (%"class.egl::ImageImplementation"*)* @_ZN3egl19ImageImplementationD0Ev to i8*), i8* bitcast (i8* (%"class.egl::ImageImplementation"*, i32, i32, i32, i32, i32)* @_ZN3egl19ImageImplementation12lockInternalEiiiN2sw4LockENS1_8AccessorE to i8*), i8* bitcast (void (%"class.egl::ImageImplementation"*)* @_ZN3egl19ImageImplementation14unlockInternalEv to i8*), i8* bitcast (i1 (%"class.sw::Surface"*)* @_ZNK2sw7Surface12requiresSyncEv to i8*), i8* bitcast (i8* (%"class.egl::Image"*, i32, i32, i32, i32)* @_ZN3egl5Image4lockEiiiN2sw4LockE to i8*), i8* bitcast (void (%"class.egl::Image"*)* @_ZN3egl5Image6unlockEv to i8*), i8* bitcast (void (%"class.egl::ImageImplementation"*)* @_ZN3egl19ImageImplementation7releaseEv to i8*), i8* bitcast (void (%"class.egl::Image"*)* @_ZN3egl5Image13destroySharedEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::ImageImplementation"*)* @_ZThn200_N3egl19ImageImplementation7releaseEv to i8*), i8* bitcast (void (%"class.egl::ImageImplementation"*)* @_ZThn200_N3egl19ImageImplementationD1Ev to i8*), i8* bitcast (void (%"class.egl::ImageImplementation"*)* @_ZThn200_N3egl19ImageImplementationD0Ev to i8*)] }, comdat, align 8
@_ZTVN3egl17ClientBufferImageE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [6 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZN3egl17ClientBufferImageD2Ev to i8*), i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZN3egl17ClientBufferImageD0Ev to i8*), i8* bitcast (i8* (%"class.egl::ClientBufferImage"*, i32, i32, i32, i32, i32)* @_ZN3egl17ClientBufferImage12lockInternalEiiiN2sw4LockENS1_8AccessorE to i8*), i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZN3egl17ClientBufferImage14unlockInternalEv to i8*), i8* bitcast (i1 (%"class.egl::ClientBufferImage"*)* @_ZNK3egl17ClientBufferImage12requiresSyncEv to i8*), i8* bitcast (i8* (%"class.egl::ClientBufferImage"*, i32, i32, i32, i32)* @_ZN3egl17ClientBufferImage4lockEiiiN2sw4LockE to i8*), i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZN3egl17ClientBufferImage6unlockEv to i8*), i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZN3egl17ClientBufferImage7releaseEv to i8*), i8* bitcast (void (%"class.egl::Image"*)* @_ZN3egl5Image13destroySharedEv to i8*)], [6 x i8*] [i8* inttoptr (i64 -200 to i8*), i8* null, i8* bitcast (void (%"class.gl::Object"*)* @_ZN2gl6Object6addRefEv to i8*), i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZThn200_N3egl17ClientBufferImage7releaseEv to i8*), i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZThn200_N3egl17ClientBufferImageD1Ev to i8*), i8* bitcast (void (%"class.egl::ClientBufferImage"*)* @_ZThn200_N3egl17ClientBufferImageD0Ev to i8*)] }, comdat, align 8
@switch.table._ZN2gl22GetSizedInternalFormatEij = private unnamed_addr constant [6 x i32] [i32 36239, i32 36221, i32 36233, i32 36215, i32 36227, i32 36209], align 4
@switch.table._ZN2gl22GetSizedInternalFormatEij.1 = private unnamed_addr constant [4 x i32] [i32 33189, i32 0, i32 33191, i32 36012], align 4
@switch.table._ZN2gl16ComputePixelSizeEjj = private unnamed_addr constant [4 x i32] [i32 2, i32 0, i32 4, i32 4], align 4

@_ZN3egl5ImageD1Ev = hidden unnamed_addr alias void (%"class.egl::Image"*), void (%"class.egl::Image"*)* @_ZN3egl5ImageD2Ev

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden zeroext i1 @_ZN2gl23IsUnsizedInternalFormatEi(i32) local_unnamed_addr #0 {
  switch i32 %0, label %2 [
    i32 6406, label %3
    i32 6409, label %3
    i32 6410, label %3
    i32 6403, label %3
    i32 33319, label %3
    i32 6407, label %3
    i32 6408, label %3
    i32 36244, label %3
    i32 33320, label %3
    i32 36248, label %3
    i32 36249, label %3
    i32 32993, label %3
    i32 6402, label %3
    i32 34041, label %3
  ]

2:                                                ; preds = %1
  br label %3

3:                                                ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %2
  %4 = phi i1 [ false, %2 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ], [ true, %1 ]
  ret i1 %4
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2gl21GetBaseInternalFormatEi(i32) local_unnamed_addr #0 {
  switch i32 %0, label %58 [
    i32 33321, label %59
    i32 36756, label %59
    i32 33323, label %2
    i32 36757, label %3
    i32 32849, label %4
    i32 36758, label %5
    i32 36194, label %6
    i32 32854, label %7
    i32 32855, label %8
    i32 32856, label %9
    i32 36759, label %10
    i32 32857, label %11
    i32 36975, label %12
    i32 35905, label %13
    i32 35907, label %14
    i32 33325, label %59
    i32 33327, label %15
    i32 34843, label %16
    i32 34842, label %17
    i32 33326, label %59
    i32 33328, label %18
    i32 34837, label %19
    i32 34836, label %20
    i32 35898, label %21
    i32 35901, label %22
    i32 33329, label %59
    i32 33330, label %59
    i32 33331, label %59
    i32 33332, label %59
    i32 33333, label %59
    i32 33334, label %59
    i32 33335, label %23
    i32 33336, label %24
    i32 33337, label %25
    i32 33338, label %26
    i32 33339, label %27
    i32 33340, label %28
    i32 36239, label %29
    i32 36221, label %30
    i32 36233, label %31
    i32 36215, label %32
    i32 36227, label %33
    i32 36209, label %34
    i32 36238, label %35
    i32 36220, label %36
    i32 36232, label %37
    i32 36214, label %38
    i32 36226, label %39
    i32 36208, label %40
    i32 32828, label %41
    i32 32832, label %42
    i32 32837, label %43
    i32 34838, label %44
    i32 34840, label %45
    i32 34841, label %46
    i32 34844, label %47
    i32 34846, label %48
    i32 34847, label %49
    i32 37793, label %50
    i32 33190, label %51
    i32 33191, label %52
    i32 36012, label %53
    i32 33189, label %54
    i32 36013, label %55
    i32 35056, label %56
    i32 36168, label %57
  ]

2:                                                ; preds = %1
  br label %59

3:                                                ; preds = %1
  br label %59

4:                                                ; preds = %1
  br label %59

5:                                                ; preds = %1
  br label %59

6:                                                ; preds = %1
  br label %59

7:                                                ; preds = %1
  br label %59

8:                                                ; preds = %1
  br label %59

9:                                                ; preds = %1
  br label %59

10:                                               ; preds = %1
  br label %59

11:                                               ; preds = %1
  br label %59

12:                                               ; preds = %1
  br label %59

13:                                               ; preds = %1
  br label %59

14:                                               ; preds = %1
  br label %59

15:                                               ; preds = %1
  br label %59

16:                                               ; preds = %1
  br label %59

17:                                               ; preds = %1
  br label %59

18:                                               ; preds = %1
  br label %59

19:                                               ; preds = %1
  br label %59

20:                                               ; preds = %1
  br label %59

21:                                               ; preds = %1
  br label %59

22:                                               ; preds = %1
  br label %59

23:                                               ; preds = %1
  br label %59

24:                                               ; preds = %1
  br label %59

25:                                               ; preds = %1
  br label %59

26:                                               ; preds = %1
  br label %59

27:                                               ; preds = %1
  br label %59

28:                                               ; preds = %1
  br label %59

29:                                               ; preds = %1
  br label %59

30:                                               ; preds = %1
  br label %59

31:                                               ; preds = %1
  br label %59

32:                                               ; preds = %1
  br label %59

33:                                               ; preds = %1
  br label %59

34:                                               ; preds = %1
  br label %59

35:                                               ; preds = %1
  br label %59

36:                                               ; preds = %1
  br label %59

37:                                               ; preds = %1
  br label %59

38:                                               ; preds = %1
  br label %59

39:                                               ; preds = %1
  br label %59

40:                                               ; preds = %1
  br label %59

41:                                               ; preds = %1
  br label %59

42:                                               ; preds = %1
  br label %59

43:                                               ; preds = %1
  br label %59

44:                                               ; preds = %1
  br label %59

45:                                               ; preds = %1
  br label %59

46:                                               ; preds = %1
  br label %59

47:                                               ; preds = %1
  br label %59

48:                                               ; preds = %1
  br label %59

49:                                               ; preds = %1
  br label %59

50:                                               ; preds = %1
  br label %59

51:                                               ; preds = %1
  br label %59

52:                                               ; preds = %1
  br label %59

53:                                               ; preds = %1
  br label %59

54:                                               ; preds = %1
  br label %59

55:                                               ; preds = %1
  br label %59

56:                                               ; preds = %1
  br label %59

57:                                               ; preds = %1
  br label %59

58:                                               ; preds = %1
  br label %59

59:                                               ; preds = %1, %1, %1, %1, %1, %1, %1, %1, %1, %1, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %60 = phi i32 [ 0, %58 ], [ 6401, %57 ], [ 34041, %56 ], [ 34041, %55 ], [ 6402, %54 ], [ 6402, %53 ], [ 6402, %52 ], [ 6402, %51 ], [ 32993, %50 ], [ 6410, %49 ], [ 6409, %48 ], [ 6406, %47 ], [ 6410, %46 ], [ 6409, %45 ], [ 6406, %44 ], [ 6410, %43 ], [ 6409, %42 ], [ 6406, %41 ], [ 6408, %40 ], [ 6408, %39 ], [ 6408, %38 ], [ 6408, %37 ], [ 6408, %36 ], [ 6408, %35 ], [ 6407, %34 ], [ 6407, %33 ], [ 6407, %32 ], [ 6407, %31 ], [ 6407, %30 ], [ 6407, %29 ], [ 33319, %28 ], [ 33319, %27 ], [ 33319, %26 ], [ 33319, %25 ], [ 33319, %24 ], [ 33319, %23 ], [ 6407, %22 ], [ 6407, %21 ], [ 6408, %20 ], [ 6407, %19 ], [ 33319, %18 ], [ 6408, %17 ], [ 6407, %16 ], [ 33319, %15 ], [ 6408, %14 ], [ 6407, %13 ], [ 6408, %12 ], [ 6408, %11 ], [ 6408, %10 ], [ 6408, %9 ], [ 6408, %8 ], [ 6408, %7 ], [ 6407, %6 ], [ 6407, %5 ], [ 6407, %4 ], [ 33319, %3 ], [ 33319, %2 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ], [ 6403, %1 ]
  ret i32 %60
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2gl22GetSizedInternalFormatEij(i32, i32) local_unnamed_addr #0 {
  %3 = tail call zeroext i1 @_ZN2gl23IsUnsizedInternalFormatEi(i32 %0) #11
  br i1 %3, label %4, label %90

4:                                                ; preds = %2
  switch i32 %0, label %90 [
    i32 6408, label %5
    i32 36249, label %14
    i32 6407, label %22
    i32 36248, label %31
    i32 33319, label %34
    i32 33320, label %40
    i32 6403, label %43
    i32 36244, label %49
    i32 6410, label %52
    i32 6409, label %57
    i32 6406, label %62
    i32 32993, label %67
    i32 6402, label %70
    i32 34041, label %73
  ]

5:                                                ; preds = %4
  switch i32 %1, label %13 [
    i32 5121, label %90
    i32 5120, label %6
    i32 32819, label %7
    i32 32820, label %8
    i32 33640, label %9
    i32 5126, label %10
    i32 5131, label %11
    i32 36193, label %12
  ]

6:                                                ; preds = %5
  br label %90

7:                                                ; preds = %5
  br label %90

8:                                                ; preds = %5
  br label %90

9:                                                ; preds = %5
  br label %90

10:                                               ; preds = %5
  br label %90

11:                                               ; preds = %5
  br label %90

12:                                               ; preds = %5
  br label %90

13:                                               ; preds = %5
  br label %90

14:                                               ; preds = %4
  switch i32 %1, label %21 [
    i32 5121, label %90
    i32 5120, label %15
    i32 5123, label %16
    i32 5122, label %17
    i32 5125, label %18
    i32 5124, label %19
    i32 33640, label %20
  ]

15:                                               ; preds = %14
  br label %90

16:                                               ; preds = %14
  br label %90

17:                                               ; preds = %14
  br label %90

18:                                               ; preds = %14
  br label %90

19:                                               ; preds = %14
  br label %90

20:                                               ; preds = %14
  br label %90

21:                                               ; preds = %14
  br label %90

22:                                               ; preds = %4
  switch i32 %1, label %30 [
    i32 5121, label %90
    i32 5120, label %23
    i32 33635, label %24
    i32 35899, label %25
    i32 35902, label %26
    i32 5126, label %27
    i32 5131, label %28
    i32 36193, label %29
  ]

23:                                               ; preds = %22
  br label %90

24:                                               ; preds = %22
  br label %90

25:                                               ; preds = %22
  br label %90

26:                                               ; preds = %22
  br label %90

27:                                               ; preds = %22
  br label %90

28:                                               ; preds = %22
  br label %90

29:                                               ; preds = %22
  br label %90

30:                                               ; preds = %22
  br label %90

31:                                               ; preds = %4
  %32 = add i32 %1, -5120
  %33 = icmp ult i32 %32, 6
  br i1 %33, label %78, label %90

34:                                               ; preds = %4
  switch i32 %1, label %39 [
    i32 5121, label %90
    i32 5120, label %35
    i32 5126, label %36
    i32 5131, label %37
    i32 36193, label %38
  ]

35:                                               ; preds = %34
  br label %90

36:                                               ; preds = %34
  br label %90

37:                                               ; preds = %34
  br label %90

38:                                               ; preds = %34
  br label %90

39:                                               ; preds = %34
  br label %90

40:                                               ; preds = %4
  %41 = add i32 %1, -5120
  %42 = icmp ult i32 %41, 6
  br i1 %42, label %82, label %90

43:                                               ; preds = %4
  switch i32 %1, label %48 [
    i32 5121, label %90
    i32 5120, label %44
    i32 5126, label %45
    i32 5131, label %46
    i32 36193, label %47
  ]

44:                                               ; preds = %43
  br label %90

45:                                               ; preds = %43
  br label %90

46:                                               ; preds = %43
  br label %90

47:                                               ; preds = %43
  br label %90

48:                                               ; preds = %43
  br label %90

49:                                               ; preds = %4
  %50 = add i32 %1, -5120
  %51 = icmp ult i32 %50, 6
  br i1 %51, label %84, label %90

52:                                               ; preds = %4
  switch i32 %1, label %56 [
    i32 5121, label %90
    i32 5126, label %53
    i32 5131, label %54
    i32 36193, label %55
  ]

53:                                               ; preds = %52
  br label %90

54:                                               ; preds = %52
  br label %90

55:                                               ; preds = %52
  br label %90

56:                                               ; preds = %52
  br label %90

57:                                               ; preds = %4
  switch i32 %1, label %61 [
    i32 5121, label %90
    i32 5126, label %58
    i32 5131, label %59
    i32 36193, label %60
  ]

58:                                               ; preds = %57
  br label %90

59:                                               ; preds = %57
  br label %90

60:                                               ; preds = %57
  br label %90

61:                                               ; preds = %57
  br label %90

62:                                               ; preds = %4
  switch i32 %1, label %66 [
    i32 5121, label %90
    i32 5126, label %63
    i32 5131, label %64
    i32 36193, label %65
  ]

63:                                               ; preds = %62
  br label %90

64:                                               ; preds = %62
  br label %90

65:                                               ; preds = %62
  br label %90

66:                                               ; preds = %62
  br label %90

67:                                               ; preds = %4
  %68 = icmp eq i32 %1, 5121
  %69 = select i1 %68, i32 37793, i32 0
  br label %90

70:                                               ; preds = %4
  %71 = add i32 %1, -5123
  %72 = icmp ult i32 %71, 4
  br i1 %72, label %86, label %90

73:                                               ; preds = %4
  %74 = icmp eq i32 %1, 36269
  %75 = select i1 %74, i32 36013, i32 0
  %76 = icmp eq i32 %1, 34042
  %77 = select i1 %76, i32 35056, i32 %75
  br label %90

78:                                               ; preds = %31
  %79 = sext i32 %32 to i64
  %80 = getelementptr inbounds [6 x i32], [6 x i32]* @switch.table._ZN2gl22GetSizedInternalFormatEij, i64 0, i64 %79
  %81 = load i32, i32* %80, align 4
  ret i32 %81

82:                                               ; preds = %40
  %83 = add i32 %1, 28215
  ret i32 %83

84:                                               ; preds = %49
  %85 = add i32 %1, 28209
  ret i32 %85

86:                                               ; preds = %70
  %87 = sext i32 %71 to i64
  %88 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN2gl22GetSizedInternalFormatEij.1, i64 0, i64 %87
  %89 = load i32, i32* %88, align 4
  ret i32 %89

90:                                               ; preds = %70, %49, %40, %31, %4, %73, %67, %62, %57, %52, %43, %34, %22, %14, %5, %2, %66, %65, %64, %63, %61, %60, %59, %58, %56, %55, %54, %53, %48, %47, %46, %45, %44, %39, %38, %37, %36, %35, %30, %29, %28, %27, %26, %25, %24, %23, %21, %20, %19, %18, %17, %16, %15, %13, %12, %11, %10, %9, %8, %7, %6
  %91 = phi i32 [ 0, %66 ], [ 34844, %65 ], [ 34844, %64 ], [ 34838, %63 ], [ 0, %61 ], [ 34846, %60 ], [ 34846, %59 ], [ 34840, %58 ], [ 0, %56 ], [ 34847, %55 ], [ 34847, %54 ], [ 34841, %53 ], [ 0, %48 ], [ 33325, %47 ], [ 33325, %46 ], [ 33326, %45 ], [ 36756, %44 ], [ 0, %39 ], [ 33327, %38 ], [ 33327, %37 ], [ 33328, %36 ], [ 36757, %35 ], [ 0, %30 ], [ 34843, %29 ], [ 34843, %28 ], [ 34837, %27 ], [ 35901, %26 ], [ 35898, %25 ], [ 36194, %24 ], [ 36758, %23 ], [ 0, %21 ], [ 36975, %20 ], [ 36226, %19 ], [ 36208, %18 ], [ 36232, %17 ], [ 36214, %16 ], [ 36238, %15 ], [ 0, %13 ], [ 34842, %12 ], [ 34842, %11 ], [ 34836, %10 ], [ 32857, %9 ], [ 32855, %8 ], [ 32854, %7 ], [ 36759, %6 ], [ %0, %2 ], [ 32856, %5 ], [ 36220, %14 ], [ 32849, %22 ], [ 33323, %34 ], [ 33321, %43 ], [ 32837, %52 ], [ 32832, %57 ], [ 32828, %62 ], [ %69, %67 ], [ %77, %73 ], [ 0, %4 ], [ 0, %31 ], [ 0, %40 ], [ 0, %49 ], [ 0, %70 ]
  ret i32 %91
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2gl20SelectInternalFormatEi(i32) local_unnamed_addr #0 {
  switch i32 %0, label %83 [
    i32 32854, label %84
    i32 32855, label %84
    i32 32856, label %84
    i32 36194, label %2
    i32 32849, label %3
    i32 36012, label %4
    i32 33189, label %5
    i32 33190, label %6
    i32 33191, label %7
    i32 35056, label %8
    i32 36013, label %9
    i32 36168, label %10
    i32 33321, label %11
    i32 33323, label %12
    i32 33329, label %13
    i32 33335, label %14
    i32 36239, label %15
    i32 36238, label %16
    i32 33330, label %17
    i32 33336, label %18
    i32 36221, label %19
    i32 36220, label %20
    i32 33331, label %21
    i32 33337, label %22
    i32 36233, label %23
    i32 36232, label %24
    i32 33332, label %25
    i32 33338, label %26
    i32 36215, label %27
    i32 36214, label %28
    i32 33333, label %29
    i32 33339, label %30
    i32 36227, label %31
    i32 36226, label %32
    i32 33334, label %33
    i32 33340, label %34
    i32 36209, label %35
    i32 36208, label %36
    i32 33325, label %37
    i32 33327, label %38
    i32 35898, label %39
    i32 34843, label %40
    i32 34842, label %41
    i32 33326, label %42
    i32 33328, label %43
    i32 34837, label %44
    i32 34836, label %45
    i32 32857, label %46
    i32 36975, label %47
    i32 35905, label %48
    i32 35907, label %49
    i32 36196, label %50
    i32 37488, label %51
    i32 37489, label %52
    i32 37490, label %53
    i32 37491, label %54
    i32 37492, label %55
    i32 37493, label %56
    i32 37494, label %57
    i32 37495, label %58
    i32 37496, label %59
    i32 37497, label %60
    i32 33776, label %61
    i32 33777, label %62
    i32 33778, label %63
    i32 33779, label %64
    i32 34838, label %65
    i32 34840, label %66
    i32 34841, label %67
    i32 35901, label %68
    i32 34844, label %69
    i32 34846, label %70
    i32 34847, label %71
    i32 36756, label %72
    i32 36757, label %73
    i32 36758, label %74
    i32 36759, label %75
    i32 32832, label %76
    i32 32837, label %77
    i32 37793, label %78
    i32 32828, label %79
    i32 842094169, label %80
    i32 1211192921, label %81
    i32 1244747353, label %82
  ]

2:                                                ; preds = %1
  br label %84

3:                                                ; preds = %1
  br label %84

4:                                                ; preds = %1
  br label %84

5:                                                ; preds = %1
  br label %84

6:                                                ; preds = %1
  br label %84

7:                                                ; preds = %1
  br label %84

8:                                                ; preds = %1
  br label %84

9:                                                ; preds = %1
  br label %84

10:                                               ; preds = %1
  br label %84

11:                                               ; preds = %1
  br label %84

12:                                               ; preds = %1
  br label %84

13:                                               ; preds = %1
  br label %84

14:                                               ; preds = %1
  br label %84

15:                                               ; preds = %1
  br label %84

16:                                               ; preds = %1
  br label %84

17:                                               ; preds = %1
  br label %84

18:                                               ; preds = %1
  br label %84

19:                                               ; preds = %1
  br label %84

20:                                               ; preds = %1
  br label %84

21:                                               ; preds = %1
  br label %84

22:                                               ; preds = %1
  br label %84

23:                                               ; preds = %1
  br label %84

24:                                               ; preds = %1
  br label %84

25:                                               ; preds = %1
  br label %84

26:                                               ; preds = %1
  br label %84

27:                                               ; preds = %1
  br label %84

28:                                               ; preds = %1
  br label %84

29:                                               ; preds = %1
  br label %84

30:                                               ; preds = %1
  br label %84

31:                                               ; preds = %1
  br label %84

32:                                               ; preds = %1
  br label %84

33:                                               ; preds = %1
  br label %84

34:                                               ; preds = %1
  br label %84

35:                                               ; preds = %1
  br label %84

36:                                               ; preds = %1
  br label %84

37:                                               ; preds = %1
  br label %84

38:                                               ; preds = %1
  br label %84

39:                                               ; preds = %1
  br label %84

40:                                               ; preds = %1
  br label %84

41:                                               ; preds = %1
  br label %84

42:                                               ; preds = %1
  br label %84

43:                                               ; preds = %1
  br label %84

44:                                               ; preds = %1
  br label %84

45:                                               ; preds = %1
  br label %84

46:                                               ; preds = %1
  br label %84

47:                                               ; preds = %1
  br label %84

48:                                               ; preds = %1
  br label %84

49:                                               ; preds = %1
  br label %84

50:                                               ; preds = %1
  br label %84

51:                                               ; preds = %1
  br label %84

52:                                               ; preds = %1
  br label %84

53:                                               ; preds = %1
  br label %84

54:                                               ; preds = %1
  br label %84

55:                                               ; preds = %1
  br label %84

56:                                               ; preds = %1
  br label %84

57:                                               ; preds = %1
  br label %84

58:                                               ; preds = %1
  br label %84

59:                                               ; preds = %1
  br label %84

60:                                               ; preds = %1
  br label %84

61:                                               ; preds = %1
  br label %84

62:                                               ; preds = %1
  br label %84

63:                                               ; preds = %1
  br label %84

64:                                               ; preds = %1
  br label %84

65:                                               ; preds = %1
  br label %84

66:                                               ; preds = %1
  br label %84

67:                                               ; preds = %1
  br label %84

68:                                               ; preds = %1
  br label %84

69:                                               ; preds = %1
  br label %84

70:                                               ; preds = %1
  br label %84

71:                                               ; preds = %1
  br label %84

72:                                               ; preds = %1
  br label %84

73:                                               ; preds = %1
  br label %84

74:                                               ; preds = %1
  br label %84

75:                                               ; preds = %1
  br label %84

76:                                               ; preds = %1
  br label %84

77:                                               ; preds = %1
  br label %84

78:                                               ; preds = %1
  br label %84

79:                                               ; preds = %1
  br label %84

80:                                               ; preds = %1
  br label %84

81:                                               ; preds = %1
  br label %84

82:                                               ; preds = %1
  br label %84

83:                                               ; preds = %1
  br label %84

84:                                               ; preds = %1, %1, %1, %83, %82, %81, %80, %79, %78, %77, %76, %75, %74, %73, %72, %71, %70, %69, %68, %67, %66, %65, %64, %63, %62, %61, %60, %59, %58, %57, %56, %55, %54, %53, %52, %51, %50, %49, %48, %47, %46, %45, %44, %43, %42, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %30, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %19, %18, %17, %16, %15, %14, %13, %12, %11, %10, %9, %8, %7, %6, %5, %4, %3, %2
  %85 = phi i32 [ 0, %83 ], [ 123, %82 ], [ 122, %81 ], [ 121, %80 ], [ 1, %79 ], [ 19, %78 ], [ 97, %77 ], [ 94, %76 ], [ 26, %75 ], [ 22, %74 ], [ 35, %73 ], [ 4, %72 ], [ 99, %71 ], [ 98, %70 ], [ 72, %69 ], [ 78, %68 ], [ 101, %67 ], [ 100, %66 ], [ 79, %65 ], [ 58, %64 ], [ 57, %63 ], [ 56, %62 ], [ 56, %61 ], [ 71, %60 ], [ 70, %59 ], [ 69, %58 ], [ 68, %57 ], [ 67, %56 ], [ 66, %55 ], [ 65, %54 ], [ 64, %53 ], [ 63, %52 ], [ 62, %51 ], [ 61, %50 ], [ 29, %49 ], [ 28, %48 ], [ 44, %47 ], [ 43, %46 ], [ 84, %45 ], [ 83, %44 ], [ 81, %43 ], [ 80, %42 ], [ 77, %41 ], [ 76, %40 ], [ 78, %39 ], [ 74, %38 ], [ 73, %37 ], [ 53, %36 ], [ 51, %35 ], [ 41, %34 ], [ 9, %33 ], [ 52, %32 ], [ 50, %31 ], [ 40, %30 ], [ 8, %29 ], [ 49, %28 ], [ 47, %27 ], [ 39, %26 ], [ 7, %25 ], [ 48, %24 ], [ 46, %23 ], [ 38, %22 ], [ 6, %21 ], [ 25, %20 ], [ 21, %19 ], [ 34, %18 ], [ 3, %17 ], [ 24, %16 ], [ 20, %15 ], [ 33, %14 ], [ 2, %13 ], [ 36, %12 ], [ 5, %11 ], [ 118, %10 ], [ 112, %9 ], [ 112, %8 ], [ 111, %7 ], [ 111, %6 ], [ 111, %5 ], [ 111, %4 ], [ 23, %3 ], [ 15, %2 ], [ 27, %1 ], [ 27, %1 ], [ 27, %1 ]
  ret i32 %85
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2gl16ComputePixelSizeEjj(i32, i32) local_unnamed_addr #0 {
  switch i32 %0, label %50 [
    i32 6403, label %3
    i32 36244, label %3
    i32 6406, label %3
    i32 6409, label %3
    i32 33319, label %11
    i32 33320, label %11
    i32 6410, label %11
    i32 6407, label %19
    i32 36248, label %19
    i32 6408, label %30
    i32 36249, label %30
    i32 32993, label %30
    i32 6402, label %42
    i32 34041, label %45
  ]

3:                                                ; preds = %2, %2, %2, %2
  switch i32 %1, label %50 [
    i32 5120, label %55
    i32 5121, label %55
    i32 5126, label %4
    i32 5131, label %5
    i32 36193, label %6
    i32 5122, label %7
    i32 5123, label %8
    i32 5124, label %9
    i32 5125, label %10
  ]

4:                                                ; preds = %3
  br label %55

5:                                                ; preds = %3
  br label %55

6:                                                ; preds = %3
  br label %55

7:                                                ; preds = %3
  br label %55

8:                                                ; preds = %3
  br label %55

9:                                                ; preds = %3
  br label %55

10:                                               ; preds = %3
  br label %55

11:                                               ; preds = %2, %2, %2
  switch i32 %1, label %50 [
    i32 5120, label %55
    i32 5121, label %55
    i32 5126, label %12
    i32 5131, label %13
    i32 36193, label %14
    i32 5122, label %15
    i32 5123, label %16
    i32 5124, label %17
    i32 5125, label %18
  ]

12:                                               ; preds = %11
  br label %55

13:                                               ; preds = %11
  br label %55

14:                                               ; preds = %11
  br label %55

15:                                               ; preds = %11
  br label %55

16:                                               ; preds = %11
  br label %55

17:                                               ; preds = %11
  br label %55

18:                                               ; preds = %11
  br label %55

19:                                               ; preds = %2, %2
  switch i32 %1, label %50 [
    i32 5120, label %55
    i32 5121, label %55
    i32 33635, label %20
    i32 35899, label %21
    i32 35902, label %22
    i32 5126, label %23
    i32 5131, label %24
    i32 36193, label %25
    i32 5122, label %26
    i32 5123, label %27
    i32 5124, label %28
    i32 5125, label %29
  ]

20:                                               ; preds = %19
  br label %55

21:                                               ; preds = %19
  br label %55

22:                                               ; preds = %19
  br label %55

23:                                               ; preds = %19
  br label %55

24:                                               ; preds = %19
  br label %55

25:                                               ; preds = %19
  br label %55

26:                                               ; preds = %19
  br label %55

27:                                               ; preds = %19
  br label %55

28:                                               ; preds = %19
  br label %55

29:                                               ; preds = %19
  br label %55

30:                                               ; preds = %2, %2, %2
  switch i32 %1, label %50 [
    i32 5120, label %55
    i32 5121, label %55
    i32 32819, label %31
    i32 33637, label %32
    i32 32820, label %33
    i32 33638, label %34
    i32 33640, label %55
    i32 5126, label %35
    i32 5131, label %36
    i32 36193, label %37
    i32 5122, label %38
    i32 5123, label %39
    i32 5124, label %40
    i32 5125, label %41
  ]

31:                                               ; preds = %30
  br label %55

32:                                               ; preds = %30
  br label %55

33:                                               ; preds = %30
  br label %55

34:                                               ; preds = %30
  br label %55

35:                                               ; preds = %30
  br label %55

36:                                               ; preds = %30
  br label %55

37:                                               ; preds = %30
  br label %55

38:                                               ; preds = %30
  br label %55

39:                                               ; preds = %30
  br label %55

40:                                               ; preds = %30
  br label %55

41:                                               ; preds = %30
  br label %55

42:                                               ; preds = %2
  %43 = add i32 %1, -5123
  %44 = icmp ult i32 %43, 4
  br i1 %44, label %51, label %50

45:                                               ; preds = %2
  %46 = icmp eq i32 %1, 36269
  %47 = select i1 %46, i32 8, i32 0
  %48 = icmp eq i32 %1, 34042
  %49 = select i1 %48, i32 4, i32 %47
  br label %55

50:                                               ; preds = %42, %2, %30, %19, %11, %3
  br label %55

51:                                               ; preds = %42
  %52 = sext i32 %43 to i64
  %53 = getelementptr inbounds [4 x i32], [4 x i32]* @switch.table._ZN2gl16ComputePixelSizeEjj, i64 0, i64 %52
  %54 = load i32, i32* %53, align 4
  ret i32 %54

55:                                               ; preds = %45, %30, %30, %30, %19, %19, %11, %11, %3, %3, %50, %41, %40, %39, %38, %37, %36, %35, %34, %33, %32, %31, %29, %28, %27, %26, %25, %24, %23, %22, %21, %20, %18, %17, %16, %15, %14, %13, %12, %10, %9, %8, %7, %6, %5, %4
  %56 = phi i32 [ 0, %50 ], [ 16, %41 ], [ 16, %40 ], [ 8, %39 ], [ 8, %38 ], [ 8, %37 ], [ 8, %36 ], [ 16, %35 ], [ 2, %34 ], [ 2, %33 ], [ 2, %32 ], [ 2, %31 ], [ 12, %29 ], [ 12, %28 ], [ 6, %27 ], [ 6, %26 ], [ 6, %25 ], [ 6, %24 ], [ 12, %23 ], [ 4, %22 ], [ 4, %21 ], [ 2, %20 ], [ 8, %18 ], [ 8, %17 ], [ 4, %16 ], [ 4, %15 ], [ 4, %14 ], [ 4, %13 ], [ 8, %12 ], [ 4, %10 ], [ 4, %9 ], [ 2, %8 ], [ 2, %7 ], [ 2, %6 ], [ 2, %5 ], [ 4, %4 ], [ 1, %3 ], [ 1, %3 ], [ 2, %11 ], [ 2, %11 ], [ 3, %19 ], [ 3, %19 ], [ 4, %30 ], [ 4, %30 ], [ 4, %30 ], [ %49, %45 ]
  ret i32 %56
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2gl12ComputePitchEijji(i32, i32, i32, i32) local_unnamed_addr #0 {
  %5 = tail call i32 @_ZN2gl16ComputePixelSizeEjj(i32 %1, i32 %2) #11
  %6 = mul nsw i32 %5, %0
  %7 = add i32 %3, -1
  %8 = add i32 %7, %6
  %9 = sub i32 0, %3
  %10 = and i32 %8, %9
  ret i32 %10
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZN2gl20ComputePackingOffsetEjjiiRKNS_17PixelStorageModesE(i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* nocapture readonly dereferenceable(24)) local_unnamed_addr #2 {
  %6 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %4, i64 0, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = tail call i32 @_ZN2gl16ComputePixelSizeEjj(i32 %0, i32 %1) #12
  %9 = mul nsw i32 %8, %2
  %10 = add i32 %7, -1
  %11 = add i32 %10, %9
  %12 = sub i32 0, %7
  %13 = and i32 %11, %12
  %14 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %4, i64 0, i32 5
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, %3
  %17 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %4, i64 0, i32 1
  %18 = load i32, i32* %17, align 4
  %19 = add nsw i32 %16, %18
  %20 = mul nsw i32 %19, %13
  %21 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %4, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = mul nsw i32 %8, %22
  %24 = add nsw i32 %23, %20
  %25 = sext i32 %24 to i64
  ret i64 %25
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden i32 @_ZN2gl21ComputeCompressedSizeEiij(i32, i32, i32) local_unnamed_addr #0 {
  switch i32 %2, label %18 [
    i32 33776, label %4
    i32 33777, label %4
    i32 36196, label %4
    i32 37488, label %4
    i32 37489, label %4
    i32 37492, label %4
    i32 37493, label %4
    i32 37494, label %4
    i32 37495, label %4
    i32 33778, label %11
    i32 33779, label %11
    i32 37490, label %11
    i32 37491, label %11
    i32 37496, label %11
    i32 37497, label %11
  ]

4:                                                ; preds = %3, %3, %3, %3, %3, %3, %3, %3, %3
  %5 = add i32 %0, 3
  %6 = sdiv i32 %5, 4
  %7 = add i32 %1, 3
  %8 = sdiv i32 %7, 4
  %9 = shl i32 %6, 3
  %10 = mul i32 %9, %8
  br label %18

11:                                               ; preds = %3, %3, %3, %3, %3, %3
  %12 = add i32 %0, 3
  %13 = sdiv i32 %12, 4
  %14 = add i32 %1, 3
  %15 = sdiv i32 %14, 4
  %16 = shl i32 %13, 4
  %17 = mul i32 %16, %15
  br label %18

18:                                               ; preds = %3, %11, %4
  %19 = phi i32 [ %17, %11 ], [ %10, %4 ], [ 0, %3 ]
  ret i32 %19
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE0EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %5 = mul nsw i32 %3, %2
  %6 = sext i32 %5 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %0, i8* align 1 %1, i64 %6, i1 false)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE1EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %8

6:                                                ; preds = %4
  %7 = zext i32 %2 to i64
  br label %9

8:                                                ; preds = %9, %4
  ret void

9:                                                ; preds = %9, %6
  %10 = phi i64 [ 0, %6 ], [ %36, %9 ]
  %11 = trunc i64 %10 to i32
  %12 = mul nsw i32 %11, 3
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds i8, i8* %1, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = shl nsw i32 %11, 2
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %0, i64 %17
  store i8 %15, i8* %18, align 1
  %19 = add nuw nsw i32 %12, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %1, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = or i32 %16, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %0, i64 %24
  store i8 %22, i8* %25, align 1
  %26 = add nuw nsw i32 %12, 2
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds i8, i8* %1, i64 %27
  %29 = load i8, i8* %28, align 1
  %30 = or i32 %16, 2
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i8, i8* %0, i64 %31
  store i8 %29, i8* %32, align 1
  %33 = or i32 %16, 3
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds i8, i8* %0, i64 %34
  store i8 -1, i8* %35, align 1
  %36 = add nuw nsw i64 %10, 1
  %37 = icmp eq i64 %36, %7
  br i1 %37, label %8, label %9
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE2EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i16*
  %6 = bitcast i8* %0 to i16*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %38, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = mul nsw i32 %13, 3
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i16, i16* %5, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = shl nsw i32 %13, 2
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  store i16 %17, i16* %20, align 2
  %21 = add nuw nsw i32 %14, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %5, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = or i32 %18, 1
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %6, i64 %26
  store i16 %24, i16* %27, align 2
  %28 = add nuw nsw i32 %14, 2
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i16, i16* %5, i64 %29
  %31 = load i16, i16* %30, align 2
  %32 = or i32 %18, 2
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %6, i64 %33
  store i16 %31, i16* %34, align 2
  %35 = or i32 %18, 3
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %6, i64 %36
  store i16 -1, i16* %37, align 2
  %38 = add nuw nsw i64 %12, 1
  %39 = icmp eq i64 %38, %9
  br i1 %39, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE3EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i32*
  %6 = bitcast i8* %0 to i32*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %38, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = mul nsw i32 %13, 3
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i32, i32* %5, i64 %15
  %17 = load i32, i32* %16, align 4
  %18 = shl nsw i32 %13, 2
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i32, i32* %6, i64 %19
  store i32 %17, i32* %20, align 4
  %21 = add nuw nsw i32 %14, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i32, i32* %5, i64 %22
  %24 = load i32, i32* %23, align 4
  %25 = or i32 %18, 1
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %6, i64 %26
  store i32 %24, i32* %27, align 4
  %28 = add nuw nsw i32 %14, 2
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i32, i32* %5, i64 %29
  %31 = load i32, i32* %30, align 4
  %32 = or i32 %18, 2
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i32, i32* %6, i64 %33
  store i32 %31, i32* %34, align 4
  %35 = or i32 %18, 3
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i32, i32* %6, i64 %36
  store i32 -1, i32* %37, align 4
  %38 = add nuw nsw i64 %12, 1
  %39 = icmp eq i64 %38, %9
  br i1 %39, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE4EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to float*
  %6 = bitcast i8* %0 to float*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %44, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = mul nsw i32 %13, 3
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds float, float* %5, i64 %15
  %17 = bitcast float* %16 to i32*
  %18 = load i32, i32* %17, align 4
  %19 = shl nsw i32 %13, 2
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds float, float* %6, i64 %20
  %22 = bitcast float* %21 to i32*
  store i32 %18, i32* %22, align 4
  %23 = add nuw nsw i32 %14, 1
  %24 = zext i32 %23 to i64
  %25 = getelementptr inbounds float, float* %5, i64 %24
  %26 = bitcast float* %25 to i32*
  %27 = load i32, i32* %26, align 4
  %28 = or i32 %19, 1
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds float, float* %6, i64 %29
  %31 = bitcast float* %30 to i32*
  store i32 %27, i32* %31, align 4
  %32 = add nuw nsw i32 %14, 2
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds float, float* %5, i64 %33
  %35 = bitcast float* %34 to i32*
  %36 = load i32, i32* %35, align 4
  %37 = or i32 %19, 2
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds float, float* %6, i64 %38
  %40 = bitcast float* %39 to i32*
  store i32 %36, i32* %40, align 4
  %41 = or i32 %19, 3
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds float, float* %6, i64 %42
  store float 1.000000e+00, float* %43, align 4
  %44 = add nuw nsw i64 %12, 1
  %45 = icmp eq i64 %44, %9
  br i1 %45, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE5EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i16*
  %6 = bitcast i8* %0 to i16*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %38, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = mul nsw i32 %13, 3
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds i16, i16* %5, i64 %15
  %17 = load i16, i16* %16, align 2
  %18 = shl nsw i32 %13, 2
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds i16, i16* %6, i64 %19
  store i16 %17, i16* %20, align 2
  %21 = add nuw nsw i32 %14, 1
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i16, i16* %5, i64 %22
  %24 = load i16, i16* %23, align 2
  %25 = or i32 %18, 1
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i16, i16* %6, i64 %26
  store i16 %24, i16* %27, align 2
  %28 = add nuw nsw i32 %14, 2
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i16, i16* %5, i64 %29
  %31 = load i16, i16* %30, align 2
  %32 = or i32 %18, 2
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds i16, i16* %6, i64 %33
  store i16 %31, i16* %34, align 2
  %35 = or i32 %18, 3
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %6, i64 %36
  store i16 15360, i16* %37, align 2
  %38 = add nuw nsw i64 %12, 1
  %39 = icmp eq i64 %38, %9
  br i1 %39, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE6EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i16*
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = zext i32 %2 to i64
  br label %10

9:                                                ; preds = %10, %4
  ret void

10:                                               ; preds = %10, %7
  %11 = phi i64 [ 0, %7 ], [ %46, %10 ]
  %12 = getelementptr inbounds i16, i16* %5, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = lshr i32 %14, 8
  %16 = and i32 %15, 240
  %17 = lshr i32 %14, 12
  %18 = or i32 %16, %17
  %19 = trunc i32 %18 to i8
  %20 = trunc i64 %11 to i32
  %21 = shl nsw i32 %20, 2
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %0, i64 %22
  store i8 %19, i8* %23, align 1
  %24 = and i32 %14, 3840
  %25 = lshr exact i32 %24, 4
  %26 = lshr exact i32 %24, 8
  %27 = or i32 %25, %26
  %28 = trunc i32 %27 to i8
  %29 = or i32 %21, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  store i8 %28, i8* %31, align 1
  %32 = and i32 %14, 240
  %33 = lshr exact i32 %32, 4
  %34 = or i32 %33, %32
  %35 = trunc i32 %34 to i8
  %36 = or i32 %21, 2
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i8, i8* %0, i64 %37
  store i8 %35, i8* %38, align 1
  %39 = and i32 %14, 15
  %40 = shl nuw nsw i32 %14, 4
  %41 = or i32 %40, %39
  %42 = trunc i32 %41 to i8
  %43 = or i32 %21, 3
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  store i8 %42, i8* %45, align 1
  %46 = add nuw nsw i64 %11, 1
  %47 = icmp eq i64 %46, %8
  br i1 %47, label %9, label %10
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE7EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i16*
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = zext i32 %2 to i64
  br label %10

9:                                                ; preds = %10, %4
  ret void

10:                                               ; preds = %10, %7
  %11 = phi i64 [ 0, %7 ], [ %46, %10 ]
  %12 = getelementptr inbounds i16, i16* %5, i64 %11
  %13 = load i16, i16* %12, align 2
  %14 = zext i16 %13 to i32
  %15 = lshr i32 %14, 8
  %16 = and i32 %15, 248
  %17 = lshr i32 %14, 13
  %18 = or i32 %16, %17
  %19 = trunc i32 %18 to i8
  %20 = trunc i64 %11 to i32
  %21 = shl nsw i32 %20, 2
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds i8, i8* %0, i64 %22
  store i8 %19, i8* %23, align 1
  %24 = and i32 %14, 1984
  %25 = lshr exact i32 %24, 3
  %26 = lshr i32 %24, 8
  %27 = or i32 %25, %26
  %28 = trunc i32 %27 to i8
  %29 = or i32 %21, 1
  %30 = zext i32 %29 to i64
  %31 = getelementptr inbounds i8, i8* %0, i64 %30
  store i8 %28, i8* %31, align 1
  %32 = and i32 %14, 62
  %33 = shl nuw nsw i32 %32, 2
  %34 = lshr i32 %32, 3
  %35 = or i32 %33, %34
  %36 = trunc i32 %35 to i8
  %37 = or i32 %21, 2
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds i8, i8* %0, i64 %38
  store i8 %36, i8* %39, align 1
  %40 = shl i32 %14, 31
  %41 = ashr exact i32 %40, 31
  %42 = trunc i32 %41 to i8
  %43 = or i32 %21, 3
  %44 = zext i32 %43 to i64
  %45 = getelementptr inbounds i8, i8* %0, i64 %44
  store i8 %42, i8* %45, align 1
  %46 = add nuw nsw i64 %11, 1
  %47 = icmp eq i64 %46, %8
  br i1 %47, label %9, label %10
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE17EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i32*
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = zext i32 %2 to i64
  br label %10

9:                                                ; preds = %73, %4
  ret void

10:                                               ; preds = %73, %7
  %11 = phi i64 [ 0, %7 ], [ %79, %73 ]
  %12 = getelementptr inbounds i32, i32* %5, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = and i32 %13, 1023
  %15 = uitofp i32 %14 to float
  %16 = fmul float %15, 0x3F50040100000000
  %17 = fcmp ult float %16, 1.000000e+00
  br i1 %17, label %18, label %24

18:                                               ; preds = %10
  %19 = fcmp ugt float %16, 0.000000e+00
  br i1 %19, label %20, label %24

20:                                               ; preds = %18
  %21 = fmul float %16, 2.550000e+02
  %22 = fadd float %21, 5.000000e-01
  %23 = fptoui float %22 to i32
  br label %24

24:                                               ; preds = %10, %18, %20
  %25 = phi i32 [ %23, %20 ], [ 255, %10 ], [ 0, %18 ]
  %26 = trunc i32 %25 to i8
  %27 = trunc i64 %11 to i32
  %28 = shl nsw i32 %27, 2
  %29 = zext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  store i8 %26, i8* %30, align 1
  %31 = and i32 %13, 1047552
  %32 = uitofp i32 %31 to float
  %33 = fmul float %32, 0x3EB0040100000000
  %34 = fcmp ult float %33, 1.000000e+00
  br i1 %34, label %35, label %41

35:                                               ; preds = %24
  %36 = fcmp ugt float %33, 0.000000e+00
  br i1 %36, label %37, label %41

37:                                               ; preds = %35
  %38 = fmul float %33, 2.550000e+02
  %39 = fadd float %38, 5.000000e-01
  %40 = fptoui float %39 to i32
  br label %41

41:                                               ; preds = %24, %35, %37
  %42 = phi i32 [ %40, %37 ], [ 255, %24 ], [ 0, %35 ]
  %43 = trunc i32 %42 to i8
  %44 = or i32 %28, 1
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %0, i64 %45
  store i8 %43, i8* %46, align 1
  %47 = and i32 %13, 1072693248
  %48 = uitofp i32 %47 to float
  %49 = fmul float %48, 0x3E10040100000000
  %50 = fcmp ult float %49, 1.000000e+00
  br i1 %50, label %51, label %57

51:                                               ; preds = %41
  %52 = fcmp ugt float %49, 0.000000e+00
  br i1 %52, label %53, label %57

53:                                               ; preds = %51
  %54 = fmul float %49, 2.550000e+02
  %55 = fadd float %54, 5.000000e-01
  %56 = fptoui float %55 to i32
  br label %57

57:                                               ; preds = %41, %51, %53
  %58 = phi i32 [ %56, %53 ], [ 255, %41 ], [ 0, %51 ]
  %59 = trunc i32 %58 to i8
  %60 = or i32 %28, 2
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i8, i8* %0, i64 %61
  store i8 %59, i8* %62, align 1
  %63 = and i32 %13, -1073741824
  %64 = uitofp i32 %63 to float
  %65 = fmul float %64, 0x3DF5555560000000
  %66 = fcmp ult float %65, 1.000000e+00
  br i1 %66, label %67, label %73

67:                                               ; preds = %57
  %68 = fcmp ugt float %65, 0.000000e+00
  br i1 %68, label %69, label %73

69:                                               ; preds = %67
  %70 = fmul float %65, 2.550000e+02
  %71 = fadd float %70, 5.000000e-01
  %72 = fptoui float %71 to i32
  br label %73

73:                                               ; preds = %57, %67, %69
  %74 = phi i32 [ %72, %69 ], [ 255, %57 ], [ 0, %67 ]
  %75 = trunc i32 %74 to i8
  %76 = or i32 %28, 3
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %0, i64 %77
  store i8 %75, i8* %78, align 1
  %79 = add nuw nsw i64 %11, 1
  %80 = icmp eq i64 %79, %8
  br i1 %80, label %9, label %10
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE18EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %0 to i16*
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = zext i32 %2 to i64
  br label %10

9:                                                ; preds = %59, %4
  ret void

10:                                               ; preds = %59, %7
  %11 = phi i64 [ 0, %7 ], [ %64, %59 ]
  %12 = trunc i64 %11 to i32
  %13 = mul nsw i32 %12, 3
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds i8, i8* %1, i64 %14
  %16 = load i8, i8* %15, align 1
  %17 = uitofp i8 %16 to float
  %18 = fmul float %17, 0x3F70101020000000
  %19 = add nuw nsw i32 %13, 1
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %1, i64 %20
  %22 = load i8, i8* %21, align 1
  %23 = uitofp i8 %22 to float
  %24 = fmul float %23, 0x3F70101020000000
  %25 = add nuw nsw i32 %13, 2
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i8, i8* %1, i64 %26
  %28 = load i8, i8* %27, align 1
  %29 = uitofp i8 %28 to float
  %30 = fmul float %29, 0x3F70101020000000
  %31 = fcmp ult float %18, 1.000000e+00
  br i1 %31, label %32, label %38

32:                                               ; preds = %10
  %33 = fcmp ugt float %18, 0.000000e+00
  br i1 %33, label %34, label %38

34:                                               ; preds = %32
  %35 = fmul float %18, 3.100000e+01
  %36 = fadd float %35, 5.000000e-01
  %37 = fptoui float %36 to i32
  br label %38

38:                                               ; preds = %10, %32, %34
  %39 = phi i32 [ %37, %34 ], [ 31, %10 ], [ 0, %32 ]
  %40 = shl i32 %39, 11
  %41 = fcmp ult float %24, 1.000000e+00
  br i1 %41, label %42, label %48

42:                                               ; preds = %38
  %43 = fcmp ugt float %24, 0.000000e+00
  br i1 %43, label %44, label %48

44:                                               ; preds = %42
  %45 = fmul float %24, 6.300000e+01
  %46 = fadd float %45, 5.000000e-01
  %47 = fptoui float %46 to i32
  br label %48

48:                                               ; preds = %38, %42, %44
  %49 = phi i32 [ %47, %44 ], [ 63, %38 ], [ 0, %42 ]
  %50 = shl i32 %49, 5
  %51 = or i32 %50, %40
  %52 = fcmp ult float %30, 1.000000e+00
  br i1 %52, label %53, label %59

53:                                               ; preds = %48
  %54 = fcmp ugt float %30, 0.000000e+00
  br i1 %54, label %55, label %59

55:                                               ; preds = %53
  %56 = fmul float %30, 3.100000e+01
  %57 = fadd float %56, 5.000000e-01
  %58 = fptoui float %57 to i32
  br label %59

59:                                               ; preds = %48, %53, %55
  %60 = phi i32 [ %58, %55 ], [ 31, %48 ], [ 0, %53 ]
  %61 = or i32 %51, %60
  %62 = trunc i32 %61 to i16
  %63 = getelementptr inbounds i16, i16* %5, i64 %11
  store i16 %62, i16* %63, align 2
  %64 = add nuw nsw i64 %11, 1
  %65 = icmp eq i64 %64, %8
  br i1 %65, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE8EEEvPhPKhii(i8*, i8*, i32, i32) local_unnamed_addr #3 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = bitcast i8* %0 to %"class.sw::half"*
  %8 = bitcast i8* %1 to %"class.sw::R11G11B10F"*
  br label %10

9:                                                ; preds = %10, %4
  ret void

10:                                               ; preds = %10, %6
  %11 = phi i32 [ %16, %10 ], [ 0, %6 ]
  %12 = phi %"class.sw::half"* [ %18, %10 ], [ %7, %6 ]
  %13 = phi %"class.sw::R11G11B10F"* [ %17, %10 ], [ %8, %6 ]
  tail call void @_ZNK2sw10R11G11B10F8toRGB16FEPNS_4halfE(%"class.sw::R11G11B10F"* %13, %"class.sw::half"* %12) #11
  %14 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %12, i64 3
  %15 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %14, float 1.000000e+00) #12
  %16 = add nuw nsw i32 %11, 1
  %17 = getelementptr inbounds %"class.sw::R11G11B10F", %"class.sw::R11G11B10F"* %13, i64 1
  %18 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %12, i64 4
  %19 = icmp eq i32 %16, %2
  br i1 %19, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK2sw10R11G11B10F8toRGB16FEPNS_4halfE(%"class.sw::R11G11B10F"*, %"class.sw::half"*) local_unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.sw::R11G11B10F", %"class.sw::R11G11B10F"* %0, i64 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = trunc i32 %4 to i16
  %6 = shl i16 %5, 4
  %7 = and i16 %6, 32752
  %8 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSES0_(%"class.sw::half"* %1, i16 %7) #12
  %9 = load i32, i32* %3, align 4
  %10 = lshr i32 %9, 7
  %11 = trunc i32 %10 to i16
  %12 = and i16 %11, 32752
  %13 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %1, i64 1
  %14 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSES0_(%"class.sw::half"* %13, i16 %12) #12
  %15 = load i32, i32* %3, align 4
  %16 = lshr i32 %15, 17
  %17 = trunc i32 %16 to i16
  %18 = and i16 %17, 32736
  %19 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %1, i64 2
  %20 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSES0_(%"class.sw::half"* %19, i16 %18) #12
  ret void
}

; Function Attrs: optsize
declare dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"*, float) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE9EEEvPhPKhii(i8*, i8*, i32, i32) local_unnamed_addr #3 {
  %5 = icmp sgt i32 %2, 0
  br i1 %5, label %6, label %9

6:                                                ; preds = %4
  %7 = bitcast i8* %0 to %"class.sw::half"*
  %8 = bitcast i8* %1 to %"class.sw::RGB9E5"*
  br label %10

9:                                                ; preds = %10, %4
  ret void

10:                                               ; preds = %10, %6
  %11 = phi i32 [ %16, %10 ], [ 0, %6 ]
  %12 = phi %"class.sw::half"* [ %18, %10 ], [ %7, %6 ]
  %13 = phi %"class.sw::RGB9E5"* [ %17, %10 ], [ %8, %6 ]
  tail call void @_ZNK2sw6RGB9E58toRGB16FEPNS_4halfE(%"class.sw::RGB9E5"* %13, %"class.sw::half"* %12) #11
  %14 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %12, i64 3
  %15 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %14, float 1.000000e+00) #12
  %16 = add nuw nsw i32 %11, 1
  %17 = getelementptr inbounds %"class.sw::RGB9E5", %"class.sw::RGB9E5"* %13, i64 1
  %18 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %12, i64 4
  %19 = icmp eq i32 %16, %2
  br i1 %19, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZNK2sw6RGB9E58toRGB16FEPNS_4halfE(%"class.sw::RGB9E5"*, %"class.sw::half"*) local_unnamed_addr #3 comdat align 2 {
  %3 = alloca %"class.sw::half", align 2
  %4 = alloca %"class.sw::half", align 2
  %5 = alloca %"class.sw::half", align 2
  %6 = getelementptr inbounds %"class.sw::RGB9E5", %"class.sw::RGB9E5"* %0, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = lshr i32 %7, 27
  %9 = shl i32 1, %8
  %10 = uitofp i32 %9 to float
  %11 = fmul float %10, 0x3E70000000000000
  %12 = and i32 %7, 511
  %13 = sitofp i32 %12 to float
  %14 = fmul float %11, %13
  call void @_ZN2sw4halfC1Ef(%"class.sw::half"* nonnull %3, float %14) #12
  %15 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %3, i64 0, i32 0
  %16 = load i16, i16* %15, align 2
  %17 = call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSES0_(%"class.sw::half"* %1, i16 %16) #12
  %18 = load i32, i32* %6, align 4
  %19 = lshr i32 %18, 9
  %20 = and i32 %19, 511
  %21 = sitofp i32 %20 to float
  %22 = fmul float %11, %21
  call void @_ZN2sw4halfC1Ef(%"class.sw::half"* nonnull %4, float %22) #12
  %23 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %1, i64 1
  %24 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %4, i64 0, i32 0
  %25 = load i16, i16* %24, align 2
  %26 = call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSES0_(%"class.sw::half"* %23, i16 %25) #12
  %27 = load i32, i32* %6, align 4
  %28 = lshr i32 %27, 18
  %29 = and i32 %28, 511
  %30 = sitofp i32 %29 to float
  %31 = fmul float %11, %30
  call void @_ZN2sw4halfC1Ef(%"class.sw::half"* nonnull %5, float %31) #12
  %32 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %1, i64 2
  %33 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %5, i64 0, i32 0
  %34 = load i16, i16* %33, align 2
  %35 = call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSES0_(%"class.sw::half"* %32, i16 %34) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE19EEEvPhPKhii(i8*, i8* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %5 = bitcast i8* %1 to float*
  %6 = bitcast i8* %0 to %"class.sw::half"*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %17, %11 ]
  %13 = getelementptr inbounds float, float* %5, i64 %12
  %14 = load float, float* %13, align 4
  %15 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %12
  %16 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %15, float %14) #12
  %17 = add nuw nsw i64 %12, 1
  %18 = icmp eq i64 %17, %9
  br i1 %18, label %10, label %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE20EEEvPhPKhii(i8*, i8* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %5 = bitcast i8* %1 to float*
  %6 = bitcast i8* %0 to %"class.sw::half"*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %23, %11 ]
  %13 = shl nuw nsw i64 %12, 1
  %14 = getelementptr inbounds float, float* %5, i64 %13
  %15 = load float, float* %14, align 4
  %16 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %13
  %17 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %16, float %15) #12
  %18 = or i64 %13, 1
  %19 = getelementptr inbounds float, float* %5, i64 %18
  %20 = load float, float* %19, align 4
  %21 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %18
  %22 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %21, float %20) #12
  %23 = add nuw nsw i64 %12, 1
  %24 = icmp eq i64 %23, %9
  br i1 %24, label %10, label %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE21EEEvPhPKhii(i8*, i8* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %5 = bitcast i8* %1 to float*
  %6 = bitcast i8* %0 to %"class.sw::half"*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %42, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = mul nsw i32 %13, 3
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds float, float* %5, i64 %15
  %17 = load float, float* %16, align 4
  %18 = shl nsw i32 %13, 2
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %19
  %21 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %20, float %17) #12
  %22 = add nuw nsw i32 %14, 1
  %23 = zext i32 %22 to i64
  %24 = getelementptr inbounds float, float* %5, i64 %23
  %25 = load float, float* %24, align 4
  %26 = or i32 %18, 1
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %27
  %29 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %28, float %25) #12
  %30 = add nuw nsw i32 %14, 2
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds float, float* %5, i64 %31
  %33 = load float, float* %32, align 4
  %34 = or i32 %18, 2
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %35
  %37 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %36, float %33) #12
  %38 = or i32 %18, 3
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %39
  %41 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %40, float 1.000000e+00) #12
  %42 = add nuw nsw i64 %12, 1
  %43 = icmp eq i64 %42, %9
  br i1 %43, label %10, label %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE22EEEvPhPKhii(i8*, i8* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %5 = bitcast i8* %1 to float*
  %6 = bitcast i8* %0 to %"class.sw::half"*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %48, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = mul nsw i32 %13, 3
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds float, float* %5, i64 %15
  %17 = load float, float* %16, align 4
  %18 = fcmp olt float %17, 0.000000e+00
  %19 = select i1 %18, float 0.000000e+00, float %17
  %20 = shl nsw i32 %13, 2
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %21
  %23 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %22, float %19) #12
  %24 = add nuw nsw i32 %14, 1
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds float, float* %5, i64 %25
  %27 = load float, float* %26, align 4
  %28 = fcmp olt float %27, 0.000000e+00
  %29 = select i1 %28, float 0.000000e+00, float %27
  %30 = or i32 %20, 1
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %31
  %33 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %32, float %29) #12
  %34 = add nuw nsw i32 %14, 2
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds float, float* %5, i64 %35
  %37 = load float, float* %36, align 4
  %38 = fcmp olt float %37, 0.000000e+00
  %39 = select i1 %38, float 0.000000e+00, float %37
  %40 = or i32 %20, 2
  %41 = zext i32 %40 to i64
  %42 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %41
  %43 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %42, float %39) #12
  %44 = or i32 %20, 3
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %45
  %47 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %46, float 1.000000e+00) #12
  %48 = add nuw nsw i64 %12, 1
  %49 = icmp eq i64 %48, %9
  br i1 %49, label %10, label %11
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE23EEEvPhPKhii(i8*, i8* nocapture readonly, i32, i32) local_unnamed_addr #3 {
  %5 = bitcast i8* %1 to float*
  %6 = bitcast i8* %0 to %"class.sw::half"*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %38, %11 ]
  %13 = trunc i64 %12 to i32
  %14 = shl nsw i32 %13, 2
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds float, float* %5, i64 %15
  %17 = load float, float* %16, align 4
  %18 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %15
  %19 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %18, float %17) #12
  %20 = or i32 %14, 1
  %21 = zext i32 %20 to i64
  %22 = getelementptr inbounds float, float* %5, i64 %21
  %23 = load float, float* %22, align 4
  %24 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %21
  %25 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %24, float %23) #12
  %26 = or i32 %14, 2
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds float, float* %5, i64 %27
  %29 = load float, float* %28, align 4
  %30 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %27
  %31 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %30, float %29) #12
  %32 = or i32 %14, 3
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds float, float* %5, i64 %33
  %35 = load float, float* %34, align 4
  %36 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %6, i64 %33
  %37 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %36, float %35) #12
  %38 = add nuw nsw i64 %12, 1
  %39 = icmp eq i64 %38, %9
  br i1 %39, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE10EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i16*
  %6 = bitcast i8* %0 to float*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %18, %11 ]
  %13 = getelementptr inbounds i16, i16* %5, i64 %12
  %14 = load i16, i16* %13, align 2
  %15 = uitofp i16 %14 to float
  %16 = fdiv float %15, 6.553500e+04
  %17 = getelementptr inbounds float, float* %6, i64 %12
  store float %16, float* %17, align 4
  %18 = add nuw nsw i64 %12, 1
  %19 = icmp eq i64 %18, %9
  br i1 %19, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE11EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i32*
  %6 = bitcast i8* %0 to float*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %19, %11 ]
  %13 = getelementptr inbounds i32, i32* %5, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = and i32 %14, -256
  %16 = uitofp i32 %15 to float
  %17 = fdiv float %16, 0x41EFFFFFE0000000
  %18 = getelementptr inbounds float, float* %6, i64 %12
  store float %17, float* %18, align 4
  %19 = add nuw nsw i64 %12, 1
  %20 = icmp eq i64 %19, %9
  br i1 %20, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE12EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i32*
  %6 = bitcast i8* %0 to float*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %18, %11 ]
  %13 = getelementptr inbounds i32, i32* %5, i64 %12
  %14 = load i32, i32* %13, align 4
  %15 = uitofp i32 %14 to float
  %16 = fmul float %15, 0x3DF0000000000000
  %17 = getelementptr inbounds float, float* %6, i64 %12
  store float %16, float* %17, align 4
  %18 = add nuw nsw i64 %12, 1
  %19 = icmp eq i64 %18, %9
  br i1 %19, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE13EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to float*
  %6 = bitcast i8* %0 to float*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %20, %11 ]
  %13 = getelementptr inbounds float, float* %5, i64 %12
  %14 = load float, float* %13, align 4
  %15 = fcmp olt float %14, 0.000000e+00
  %16 = select i1 %15, float 0.000000e+00, float %14
  %17 = fcmp ogt float %16, 1.000000e+00
  %18 = select i1 %17, float 1.000000e+00, float %16
  %19 = getelementptr inbounds float, float* %6, i64 %12
  store float %18, float* %19, align 4
  %20 = add nuw nsw i64 %12, 1
  %21 = icmp eq i64 %20, %9
  br i1 %21, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE14EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to %struct.D32FS8*
  %6 = bitcast i8* %0 to float*
  %7 = icmp sgt i32 %2, 0
  br i1 %7, label %8, label %10

8:                                                ; preds = %4
  %9 = zext i32 %2 to i64
  br label %11

10:                                               ; preds = %11, %4
  ret void

11:                                               ; preds = %11, %8
  %12 = phi i64 [ 0, %8 ], [ %20, %11 ]
  %13 = getelementptr inbounds %struct.D32FS8, %struct.D32FS8* %5, i64 %12, i32 0
  %14 = load float, float* %13, align 4
  %15 = fcmp olt float %14, 0.000000e+00
  %16 = select i1 %15, float 0.000000e+00, float %14
  %17 = fcmp ogt float %16, 1.000000e+00
  %18 = select i1 %17, float 1.000000e+00, float %16
  %19 = getelementptr inbounds float, float* %6, i64 %12
  store float %18, float* %19, align 4
  %20 = add nuw nsw i64 %12, 1
  %21 = icmp eq i64 %20, %9
  br i1 %21, label %10, label %11
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE15EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to i32*
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = zext i32 %2 to i64
  br label %10

9:                                                ; preds = %10, %4
  ret void

10:                                               ; preds = %10, %7
  %11 = phi i64 [ 0, %7 ], [ %16, %10 ]
  %12 = getelementptr inbounds i32, i32* %5, i64 %11
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds i8, i8* %0, i64 %11
  store i8 %14, i8* %15, align 1
  %16 = add nuw nsw i64 %11, 1
  %17 = icmp eq i64 %16, %8
  br i1 %17, label %9, label %10
}

; Function Attrs: nofree norecurse nounwind optsize ssp uwtable
define hidden void @_ZN3egl11TransferRowILNS_12TransferTypeE16EEEvPhPKhii(i8* nocapture, i8* nocapture readonly, i32, i32) local_unnamed_addr #4 {
  %5 = bitcast i8* %1 to %struct.D32FS8.0*
  %6 = icmp sgt i32 %2, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = zext i32 %2 to i64
  br label %10

9:                                                ; preds = %10, %4
  ret void

10:                                               ; preds = %10, %7
  %11 = phi i64 [ 0, %7 ], [ %16, %10 ]
  %12 = getelementptr inbounds %struct.D32FS8.0, %struct.D32FS8.0* %5, i64 %11, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = trunc i32 %13 to i8
  %15 = getelementptr inbounds i8, i8* %0, i64 %11
  store i8 %14, i8* %15, align 1
  %16 = add nuw nsw i64 %11, 1
  %17 = icmp eq i64 %16, %8
  br i1 %17, label %9, label %10
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiii(%"class.egl::Texture"*, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %3) #12
  %6 = tail call i64 @_ZN2sw7Surface4sizeEiiiiiNS_6FormatE(i32 %1, i32 %2, i32 1, i32 0, i32 1, i32 %5) #12
  %7 = icmp ugt i64 %6, 1073741828
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 240) #13
  %10 = bitcast i8* %9 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageC2EPNS_7TextureEiii(%"class.egl::Image"* nonnull %10, %"class.egl::Texture"* %0, i32 %1, i32 %2, i32 %3) #12
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 200
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  br label %14

14:                                               ; preds = %4, %8
  %15 = phi %"class.egl::Image"* [ %10, %8 ], [ null, %4 ]
  ret %"class.egl::Image"* %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i64 @_ZN3egl5Image4sizeEiiiiii(i32, i32, i32, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %7 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %5) #11
  %8 = tail call i64 @_ZN2sw7Surface4sizeEiiiiiNS_6FormatE(i32 %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %7) #12
  ret i64 %8
}

; Function Attrs: nobuiltin nofree optsize
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3egl5Image6createEPNS_7TextureEiiiii(%"class.egl::Texture"*, i32, i32, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %7 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %5) #12
  %8 = tail call i64 @_ZN2sw7Surface4sizeEiiiiiNS_6FormatE(i32 %1, i32 %2, i32 %3, i32 %4, i32 1, i32 %7) #12
  %9 = icmp ugt i64 %8, 1073741828
  br i1 %9, label %16, label %10

10:                                               ; preds = %6
  %11 = tail call i8* @_Znwm(i64 240) #13
  %12 = bitcast i8* %11 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageC2EPNS_7TextureEiiiii(%"class.egl::Image"* nonnull %12, %"class.egl::Texture"* %0, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #12
  %13 = bitcast i8* %11 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds i8, i8* %11, i64 200
  %15 = bitcast i8* %14 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  br label %16

16:                                               ; preds = %6, %10
  %17 = phi %"class.egl::Image"* [ %12, %10 ], [ null, %6 ]
  ret %"class.egl::Image"* %17
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3egl5Image6createEiiii(i32, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %2) #12
  %6 = tail call i64 @_ZN2sw7Surface4sizeEiiiiiNS_6FormatE(i32 %3, i32 %1, i32 1, i32 0, i32 1, i32 %5) #12
  %7 = icmp ugt i64 %6, 1073741828
  br i1 %7, label %14, label %8

8:                                                ; preds = %4
  %9 = tail call i8* @_Znwm(i64 240) #13
  %10 = bitcast i8* %9 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageC2Eiiii(%"class.egl::Image"* nonnull %10, i32 %0, i32 %1, i32 %2, i32 %3) #12
  %11 = bitcast i8* %9 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds i8, i8* %9, i64 200
  %13 = bitcast i8* %12 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  br label %14

14:                                               ; preds = %4, %8
  %15 = phi %"class.egl::Image"* [ %10, %8 ], [ null, %4 ]
  ret %"class.egl::Image"* %15
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden %"class.egl::Image"* @_ZN3egl5Image6createEiiiib(i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #3 align 2 {
  %6 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %2) #12
  %7 = tail call i64 @_ZN2sw7Surface4sizeEiiiiiNS_6FormatE(i32 %0, i32 %1, i32 1, i32 0, i32 %3, i32 %6) #12
  %8 = icmp ugt i64 %7, 1073741828
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = tail call i8* @_Znwm(i64 240) #13
  %11 = bitcast i8* %10 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageC2Eiiiib(%"class.egl::Image"* nonnull %11, i32 %0, i32 %1, i32 %2, i32 %3, i1 zeroext %4) #12
  %12 = bitcast i8* %10 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 200
  %14 = bitcast i8* %13 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  br label %15

15:                                               ; preds = %5, %9
  %16 = phi %"class.egl::Image"* [ %11, %9 ], [ null, %5 ]
  ret %"class.egl::Image"* %16
}

; Function Attrs: optsize
declare i64 @_ZN2sw7Surface4sizeEiiiiiNS_6FormatE(i32, i32, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3egl12ClientBuffer8getWidthEv(%"class.egl::ClientBuffer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3egl12ClientBuffer9getHeightEv(%"class.egl::ClientBuffer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 1
  %3 = load i32, i32* %2, align 4
  ret i32 %3
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i32 @_ZNK3egl12ClientBuffer9getFormatEv(%"class.egl::ClientBuffer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  ret i32 %3
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden i64 @_ZNK3egl12ClientBuffer8getPlaneEv(%"class.egl::ClientBuffer"* nocapture readonly) local_unnamed_addr #2 align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 4
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i32 @_ZNK3egl12ClientBuffer6pitchPEv(%"class.egl::ClientBuffer"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 0
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = tail call i32 @_ZN2sw7Surface6pitchPEiiNS_6FormatEb(i32 %3, i32 0, i32 %5, i1 zeroext false) #12
  ret i32 %6
}

; Function Attrs: optsize
declare i32 @_ZN2sw7Surface6pitchPEiiNS_6FormatEb(i32, i32, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3egl12ClientBuffer6retainEv(%"class.egl::ClientBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3egl12ClientBuffer7releaseEv(%"class.egl::ClientBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3egl12ClientBuffer4lockEiii(%"class.egl::ClientBuffer"* nocapture readonly, i32, i32, i32) local_unnamed_addr #3 align 2 {
  %5 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 2
  %6 = load i32, i32* %5, align 8
  %7 = tail call i32 @_ZN2sw7Surface5bytesENS_6FormatE(i32 %6) #12
  %8 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 0
  %9 = load i32, i32* %8, align 8
  %10 = load i32, i32* %5, align 8
  %11 = tail call i32 @_ZN2sw7Surface6pitchBEiiNS_6FormatEb(i32 %9, i32 0, i32 %10, i1 zeroext false) #12
  %12 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %0, i64 0, i32 3
  %15 = load i8*, i8** %14, align 8
  %16 = mul nsw i32 %7, %1
  %17 = sext i32 %16 to i64
  %18 = getelementptr inbounds i8, i8* %15, i64 %17
  %19 = mul nsw i32 %11, %2
  %20 = sext i32 %19 to i64
  %21 = getelementptr inbounds i8, i8* %18, i64 %20
  %22 = mul i32 %11, %3
  %23 = mul i32 %22, %13
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %21, i64 %24
  ret i8* %25
}

; Function Attrs: optsize
declare i32 @_ZN2sw7Surface5bytesENS_6FormatE(i32) local_unnamed_addr #5

; Function Attrs: optsize
declare i32 @_ZN2sw7Surface6pitchBEiiNS_6FormatEb(i32, i32, i32, i1 zeroext) local_unnamed_addr #5

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden void @_ZN3egl12ClientBuffer6unlockEv(%"class.egl::ClientBuffer"* nocapture) local_unnamed_addr #0 align 2 {
  ret void
}

; Function Attrs: norecurse nounwind optsize readnone ssp uwtable
define hidden zeroext i1 @_ZNK3egl12ClientBuffer12requiresSyncEv(%"class.egl::ClientBuffer"* nocapture readnone) local_unnamed_addr #0 align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden nonnull %"class.egl::Image"* @_ZN3egl5Image6createERKNS_12ClientBufferE(%"class.egl::ClientBuffer"* dereferenceable(32)) local_unnamed_addr #3 align 2 {
  %2 = tail call i8* @_Znwm(i64 272) #13
  %3 = bitcast i8* %2 to %"class.egl::ClientBufferImage"*
  tail call void @_ZN3egl17ClientBufferImageC2ERKNS_12ClientBufferE(%"class.egl::ClientBufferImage"* nonnull %3, %"class.egl::ClientBuffer"* dereferenceable(32) %0) #11
  %4 = bitcast i8* %2 to %"class.egl::Image"*
  ret %"class.egl::Image"* %4
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl17ClientBufferImageC2ERKNS_12ClientBufferE(%"class.egl::ClientBufferImage"*, %"class.egl::ClientBuffer"* dereferenceable(32)) unnamed_addr #3 comdat align 2 {
  %3 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0
  %4 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %1, i64 0, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %1, i64 0, i32 1
  %7 = load i32, i32* %6, align 4
  %8 = getelementptr inbounds %"class.egl::ClientBuffer", %"class.egl::ClientBuffer"* %1, i64 0, i32 2
  %9 = load i32, i32* %8, align 8
  %10 = tail call i32 @_ZN3egl17ClientBufferImage29getClientBufferInternalFormatEN2sw6FormatE(i32 %9) #11
  %11 = load i32, i32* %4, align 8
  %12 = load i32, i32* %8, align 8
  %13 = tail call i32 @_ZN2sw7Surface6pitchPEiiNS_6FormatEb(i32 %11, i32 0, i32 %12, i1 zeroext false) #12
  tail call void @_ZN3egl5ImageC2Eiiii(%"class.egl::Image"* %3, i32 %5, i32 %7, i32 %10, i32 %13) #11
  %14 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %14, align 8
  %15 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 1
  %17 = bitcast %"class.egl::ClientBuffer"* %16 to i8*
  %18 = bitcast %"class.egl::ClientBuffer"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %17, i8* align 8 %18, i64 32, i1 false)
  %19 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0, i32 7
  store i8 0, i8* %19, align 4
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5ImageD2Ev(%"class.egl::Image"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.gl::Object.base", %"class.gl::Object.base"* %3, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  %6 = load %"class.egl::Texture"*, %"class.egl::Texture"** %5, align 8
  %7 = icmp eq %"class.egl::Texture"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.egl::Texture"* %6 to void (%"class.egl::Texture"*)***
  %10 = load void (%"class.egl::Texture"*)**, void (%"class.egl::Texture"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %10, i64 1
  %12 = load void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %11, align 8
  tail call void %12(%"class.egl::Texture"* nonnull %6) #12
  br label %13

13:                                               ; preds = %1, %8
  %14 = bitcast %"class.gl::Object.base"* %3 to %"class.gl::Object"*
  tail call void @_ZN2gl6ObjectD2Ev(%"class.gl::Object"* %14) #12
  %15 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7SurfaceD2Ev(%"class.sw::Surface"* %15) #12
  ret void
}

; Function Attrs: nounwind optsize
declare void @_ZN2gl6ObjectD2Ev(%"class.gl::Object"*) unnamed_addr #7

; Function Attrs: nounwind optsize
declare void @_ZN2sw7SurfaceD2Ev(%"class.sw::Surface"*) unnamed_addr #7

; Function Attrs: noreturn nounwind optsize ssp uwtable
define hidden void @_ZN3egl5ImageD0Ev(%"class.egl::Image"* nocapture readnone) unnamed_addr #8 align 2 {
  tail call void @llvm.trap() #14
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #9

; Function Attrs: nounwind optsize ssp uwtable
define hidden i8* @_ZN3egl5Image12lockInternalEiiiN2sw4LockENS1_8AccessorE(%"class.egl::Image"*, i32, i32, i32, i32, i32) unnamed_addr #3 align 2 {
  %7 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  %8 = tail call i8* @_ZN2sw7Surface12lockInternalEiiiNS_4LockENS_8AccessorE(%"class.sw::Surface"* %7, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #12
  ret i8* %8
}

; Function Attrs: optsize
declare i8* @_ZN2sw7Surface12lockInternalEiiiNS_4LockENS_8AccessorE(%"class.sw::Surface"*, i32, i32, i32, i32, i32) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5Image14unlockInternalEv(%"class.egl::Image"*) unnamed_addr #3 align 2 {
  %2 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface14unlockInternalEv(%"class.sw::Surface"* %2) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7Surface14unlockInternalEv(%"class.sw::Surface"*) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5Image7releaseEv(%"class.egl::Image"*) unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 2
  %3 = bitcast %"class.gl::Object.base"* %2 to %"class.gl::Object"*
  %4 = tail call i32 @_ZN2gl6Object11dereferenceEv(%"class.gl::Object"* %3) #12
  %5 = icmp sgt i32 %4, 0
  br i1 %5, label %6, label %15

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  %8 = load %"class.egl::Texture"*, %"class.egl::Texture"** %7, align 8
  %9 = icmp eq %"class.egl::Texture"* %8, null
  br i1 %9, label %22, label %10

10:                                               ; preds = %6
  %11 = bitcast %"class.egl::Texture"* %8 to void (%"class.egl::Texture"*)***
  %12 = load void (%"class.egl::Texture"*)**, void (%"class.egl::Texture"*)*** %11, align 8
  %13 = getelementptr inbounds void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %12, i64 6
  %14 = load void (%"class.egl::Texture"*)*, void (%"class.egl::Texture"*)** %13, align 8
  tail call void %14(%"class.egl::Texture"* nonnull %8) #12
  br label %22

15:                                               ; preds = %1
  %16 = icmp eq %"class.egl::Image"* %0, null
  br i1 %16, label %22, label %17

17:                                               ; preds = %15
  %18 = bitcast %"class.egl::Image"* %0 to void (%"class.egl::Image"*)***
  %19 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %19, i64 1
  %21 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %20, align 8
  tail call void %21(%"class.egl::Image"* nonnull %0) #12
  br label %22

22:                                               ; preds = %6, %15, %17, %10
  ret void
}

; Function Attrs: optsize
declare i32 @_ZN2gl6Object11dereferenceEv(%"class.gl::Object"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5Image6unbindEPKNS_7TextureE(%"class.egl::Image"*, %"class.egl::Texture"* readnone) local_unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  %4 = load %"class.egl::Texture"*, %"class.egl::Texture"** %3, align 8
  %5 = icmp eq %"class.egl::Texture"* %4, %1
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store %"class.egl::Texture"* null, %"class.egl::Texture"** %3, align 8
  br label %7

7:                                                ; preds = %6, %2
  %8 = bitcast %"class.egl::Image"* %0 to void (%"class.egl::Image"*)***
  %9 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %9, i64 7
  %11 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %10, align 8
  tail call void %11(%"class.egl::Image"* %0) #12
  ret void
}

; Function Attrs: norecurse nounwind optsize readonly ssp uwtable
define hidden zeroext i1 @_ZNK3egl5Image9isChildOfEPKNS_7TextureE(%"class.egl::Image"* nocapture readonly, %"class.egl::Texture"* readnone) local_unnamed_addr #2 align 2 {
  %3 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  %4 = load %"class.egl::Texture"*, %"class.egl::Texture"** %3, align 8
  %5 = icmp eq %"class.egl::Texture"* %4, %1
  ret i1 %5
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5Image13loadImageDataEiiiiijjPKvPv(%"class.egl::Image"* readonly, i32, i32, i32, i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #3 align 2 {
  %11 = alloca %"struct.egl::Rectangle", align 4
  %12 = bitcast %"struct.egl::Rectangle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 6
  %20 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 7
  %21 = tail call i32 @_ZN2gl16ComputePixelSizeEjj(i32 %6, i32 %7) #11
  store i32 %21, i32* %13, align 4
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  store i32 %3, i32* %16, align 4
  store i32 %4, i32* %17, align 4
  store i32 %5, i32* %18, align 4
  %22 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 7
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %19, align 4
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 9
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %20, align 4
  switch i32 %6, label %451 [
    i32 6408, label %26
    i32 36249, label %92
    i32 32993, label %156
    i32 6407, label %166
    i32 36248, label %240
    i32 33319, label %295
    i32 33320, label %302
    i32 6403, label %357
    i32 36244, label %364
    i32 6402, label %419
    i32 34041, label %423
    i32 6410, label %426
    i32 6409, label %438
    i32 6406, label %438
  ]

26:                                               ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %30
    i32 5120, label %27
    i32 32819, label %47
    i32 32820, label %56
    i32 33640, label %65
    i32 5131, label %78
    i32 36193, label %78
    i32 5126, label %87
    i32 5123, label %111
    i32 5122, label %120
    i32 5125, label %129
    i32 5124, label %138
    i32 33635, label %182
    i32 35899, label %191
    i32 35902, label %200
    i32 34042, label %424
    i32 36269, label %425
  ]

27:                                               ; preds = %26
  %28 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %29 = load i32, i32* %28, align 8
  br label %39

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %32 = load i32, i32* %31, align 8
  switch i32 %32, label %39 [
    i32 32856, label %33
    i32 35907, label %33
    i32 32855, label %34
    i32 32854, label %34
  ]

33:                                               ; preds = %30, %30
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

34:                                               ; preds = %30, %30
  %35 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 27
  br i1 %37, label %38, label %451

38:                                               ; preds = %34
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

39:                                               ; preds = %27, %30
  %40 = phi i32 [ %29, %27 ], [ %32, %30 ]
  %41 = icmp eq i32 %40, 36759
  br i1 %41, label %42, label %451

42:                                               ; preds = %39
  %43 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 26
  br i1 %45, label %46, label %451

46:                                               ; preds = %42
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

47:                                               ; preds = %26
  %48 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 32854
  br i1 %50, label %51, label %451

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %53 = load i32, i32* %52, align 4
  %54 = icmp eq i32 %53, 27
  br i1 %54, label %55, label %451

55:                                               ; preds = %51
  call void @_ZN3egl8TransferILNS_12TransferTypeE6EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

56:                                               ; preds = %26
  %57 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 32855
  br i1 %59, label %60, label %451

60:                                               ; preds = %56
  %61 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 27
  br i1 %63, label %64, label %451

64:                                               ; preds = %60
  call void @_ZN3egl8TransferILNS_12TransferTypeE7EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

65:                                               ; preds = %26
  %66 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %67 = load i32, i32* %66, align 8
  switch i32 %67, label %78 [
    i32 32857, label %68
    i32 32855, label %73
  ]

68:                                               ; preds = %65
  %69 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %70 = load i32, i32* %69, align 4
  %71 = icmp eq i32 %70, 43
  br i1 %71, label %72, label %451

72:                                               ; preds = %68
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

73:                                               ; preds = %65
  %74 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %75 = load i32, i32* %74, align 4
  %76 = icmp eq i32 %75, 27
  br i1 %76, label %77, label %451

77:                                               ; preds = %73
  call void @_ZN3egl8TransferILNS_12TransferTypeE17EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

78:                                               ; preds = %26, %26, %65
  %79 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %80 = load i32, i32* %79, align 8
  %81 = icmp eq i32 %80, 34842
  br i1 %81, label %82, label %451

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 77
  br i1 %85, label %86, label %451

86:                                               ; preds = %82
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

87:                                               ; preds = %26
  %88 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %89 = load i32, i32* %88, align 8
  switch i32 %89, label %222 [
    i32 34836, label %90
    i32 34842, label %91
  ]

90:                                               ; preds = %87
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

91:                                               ; preds = %87
  call void @_ZN3egl8TransferILNS_12TransferTypeE23EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

92:                                               ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %93
    i32 5120, label %102
    i32 5123, label %111
    i32 5122, label %120
    i32 5125, label %129
    i32 5124, label %138
    i32 33640, label %147
    i32 33635, label %182
    i32 35899, label %191
    i32 35902, label %200
    i32 5131, label %209
    i32 36193, label %209
    i32 5126, label %222
    i32 34042, label %424
    i32 36269, label %425
  ]

93:                                               ; preds = %92
  %94 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %95 = load i32, i32* %94, align 8
  %96 = icmp eq i32 %95, 36220
  br i1 %96, label %97, label %451

97:                                               ; preds = %93
  %98 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 25
  br i1 %100, label %101, label %451

101:                                              ; preds = %97
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

102:                                              ; preds = %92
  %103 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %104 = load i32, i32* %103, align 8
  %105 = icmp eq i32 %104, 36238
  br i1 %105, label %106, label %451

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 24
  br i1 %109, label %110, label %451

110:                                              ; preds = %106
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

111:                                              ; preds = %26, %92
  %112 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %113 = load i32, i32* %112, align 8
  %114 = icmp eq i32 %113, 36214
  br i1 %114, label %115, label %451

115:                                              ; preds = %111
  %116 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %117 = load i32, i32* %116, align 4
  %118 = icmp eq i32 %117, 49
  br i1 %118, label %119, label %451

119:                                              ; preds = %115
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

120:                                              ; preds = %26, %92
  %121 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %122 = load i32, i32* %121, align 8
  %123 = icmp eq i32 %122, 36232
  br i1 %123, label %124, label %451

124:                                              ; preds = %120
  %125 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 48
  br i1 %127, label %128, label %451

128:                                              ; preds = %124
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

129:                                              ; preds = %26, %92
  %130 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %131 = load i32, i32* %130, align 8
  %132 = icmp eq i32 %131, 36208
  br i1 %132, label %133, label %451

133:                                              ; preds = %129
  %134 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %135 = load i32, i32* %134, align 4
  %136 = icmp eq i32 %135, 53
  br i1 %136, label %137, label %451

137:                                              ; preds = %133
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

138:                                              ; preds = %26, %92
  %139 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %140 = load i32, i32* %139, align 8
  %141 = icmp eq i32 %140, 36226
  br i1 %141, label %142, label %451

142:                                              ; preds = %138
  %143 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 52
  br i1 %145, label %146, label %451

146:                                              ; preds = %142
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

147:                                              ; preds = %92
  %148 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %149 = load i32, i32* %148, align 8
  %150 = icmp eq i32 %149, 36975
  br i1 %150, label %151, label %451

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %153 = load i32, i32* %152, align 4
  %154 = icmp eq i32 %153, 44
  br i1 %154, label %155, label %451

155:                                              ; preds = %151
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

156:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %157
    i32 5120, label %173
    i32 33635, label %182
    i32 35899, label %191
    i32 35902, label %200
    i32 5131, label %209
    i32 36193, label %209
    i32 5126, label %222
    i32 5123, label %259
    i32 5122, label %268
    i32 5125, label %277
    i32 5124, label %286
    i32 34042, label %424
    i32 36269, label %425
  ]

157:                                              ; preds = %156
  %158 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %159 = load i32, i32* %158, align 8
  %160 = icmp eq i32 %159, 37793
  br i1 %160, label %161, label %451

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %163 = load i32, i32* %162, align 4
  %164 = icmp eq i32 %163, 19
  br i1 %164, label %165, label %451

165:                                              ; preds = %161
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

166:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %167
    i32 5120, label %173
    i32 33635, label %182
    i32 35899, label %191
    i32 35902, label %200
    i32 5131, label %209
    i32 36193, label %209
    i32 5126, label %222
    i32 5123, label %259
    i32 5122, label %268
    i32 5125, label %277
    i32 5124, label %286
    i32 34042, label %424
    i32 36269, label %425
  ]

167:                                              ; preds = %166
  %168 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %169 = load i32, i32* %168, align 8
  switch i32 %169, label %173 [
    i32 32849, label %170
    i32 35905, label %171
    i32 36194, label %172
  ]

170:                                              ; preds = %167
  call void @_ZN3egl8TransferILNS_12TransferTypeE1EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

171:                                              ; preds = %167
  call void @_ZN3egl8TransferILNS_12TransferTypeE1EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

172:                                              ; preds = %167
  call void @_ZN3egl8TransferILNS_12TransferTypeE18EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

173:                                              ; preds = %156, %166, %167
  %174 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %175 = load i32, i32* %174, align 8
  %176 = icmp eq i32 %175, 36758
  br i1 %176, label %177, label %451

177:                                              ; preds = %173
  %178 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %179 = load i32, i32* %178, align 4
  %180 = icmp eq i32 %179, 22
  br i1 %180, label %181, label %451

181:                                              ; preds = %177
  call void @_ZN3egl8TransferILNS_12TransferTypeE1EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

182:                                              ; preds = %26, %92, %156, %166
  %183 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %184 = load i32, i32* %183, align 8
  %185 = icmp eq i32 %184, 36194
  br i1 %185, label %186, label %451

186:                                              ; preds = %182
  %187 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %188 = load i32, i32* %187, align 4
  %189 = icmp eq i32 %188, 15
  br i1 %189, label %190, label %451

190:                                              ; preds = %186
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

191:                                              ; preds = %26, %92, %156, %166
  %192 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %193 = load i32, i32* %192, align 8
  %194 = icmp eq i32 %193, 35898
  br i1 %194, label %195, label %451

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %197 = load i32, i32* %196, align 4
  %198 = icmp eq i32 %197, 78
  br i1 %198, label %199, label %451

199:                                              ; preds = %195
  call void @_ZN3egl8TransferILNS_12TransferTypeE8EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

200:                                              ; preds = %26, %92, %156, %166
  %201 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %202 = load i32, i32* %201, align 8
  %203 = icmp eq i32 %202, 35901
  br i1 %203, label %204, label %451

204:                                              ; preds = %200
  %205 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %206 = load i32, i32* %205, align 4
  %207 = icmp eq i32 %206, 78
  br i1 %207, label %208, label %451

208:                                              ; preds = %204
  call void @_ZN3egl8TransferILNS_12TransferTypeE9EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

209:                                              ; preds = %92, %92, %156, %156, %166, %166
  %210 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %211 = load i32, i32* %210, align 8
  switch i32 %211, label %222 [
    i32 34843, label %212
    i32 35898, label %217
    i32 35901, label %217
  ]

212:                                              ; preds = %209
  %213 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %214 = load i32, i32* %213, align 4
  %215 = icmp eq i32 %214, 76
  br i1 %215, label %216, label %451

216:                                              ; preds = %212
  call void @_ZN3egl8TransferILNS_12TransferTypeE5EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

217:                                              ; preds = %209, %209
  %218 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %219 = load i32, i32* %218, align 4
  %220 = icmp eq i32 %219, 78
  br i1 %220, label %221, label %451

221:                                              ; preds = %217
  call void @_ZN3egl8TransferILNS_12TransferTypeE5EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

222:                                              ; preds = %87, %92, %156, %166, %209
  %223 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %224 = load i32, i32* %223, align 8
  switch i32 %224, label %240 [
    i32 34837, label %225
    i32 34843, label %230
    i32 35898, label %235
    i32 35901, label %235
  ]

225:                                              ; preds = %222
  %226 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %227 = load i32, i32* %226, align 4
  %228 = icmp eq i32 %227, 83
  br i1 %228, label %229, label %451

229:                                              ; preds = %225
  call void @_ZN3egl8TransferILNS_12TransferTypeE4EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

230:                                              ; preds = %222
  %231 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %232 = load i32, i32* %231, align 4
  %233 = icmp eq i32 %232, 76
  br i1 %233, label %234, label %451

234:                                              ; preds = %230
  call void @_ZN3egl8TransferILNS_12TransferTypeE21EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

235:                                              ; preds = %222, %222
  %236 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %237 = load i32, i32* %236, align 4
  %238 = icmp eq i32 %237, 78
  br i1 %238, label %239, label %451

239:                                              ; preds = %235
  call void @_ZN3egl8TransferILNS_12TransferTypeE22EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

240:                                              ; preds = %222, %10
  switch i32 %7, label %451 [
    i32 5121, label %241
    i32 5120, label %250
    i32 5123, label %259
    i32 5122, label %268
    i32 5125, label %277
    i32 5124, label %286
    i32 5131, label %296
    i32 36193, label %296
    i32 5126, label %297
    i32 34042, label %424
    i32 36269, label %425
  ]

241:                                              ; preds = %240
  %242 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %243 = load i32, i32* %242, align 8
  %244 = icmp eq i32 %243, 36221
  br i1 %244, label %245, label %451

245:                                              ; preds = %241
  %246 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %247 = load i32, i32* %246, align 4
  %248 = icmp eq i32 %247, 21
  br i1 %248, label %249, label %451

249:                                              ; preds = %245
  call void @_ZN3egl8TransferILNS_12TransferTypeE1EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

250:                                              ; preds = %240
  %251 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %252 = load i32, i32* %251, align 8
  %253 = icmp eq i32 %252, 36239
  br i1 %253, label %254, label %451

254:                                              ; preds = %250
  %255 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %256 = load i32, i32* %255, align 4
  %257 = icmp eq i32 %256, 20
  br i1 %257, label %258, label %451

258:                                              ; preds = %254
  call void @_ZN3egl8TransferILNS_12TransferTypeE1EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

259:                                              ; preds = %156, %166, %240
  %260 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %261 = load i32, i32* %260, align 8
  %262 = icmp eq i32 %261, 36215
  br i1 %262, label %263, label %451

263:                                              ; preds = %259
  %264 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %265 = load i32, i32* %264, align 4
  %266 = icmp eq i32 %265, 47
  br i1 %266, label %267, label %451

267:                                              ; preds = %263
  call void @_ZN3egl8TransferILNS_12TransferTypeE2EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

268:                                              ; preds = %156, %166, %240
  %269 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %270 = load i32, i32* %269, align 8
  %271 = icmp eq i32 %270, 36233
  br i1 %271, label %272, label %451

272:                                              ; preds = %268
  %273 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %274 = load i32, i32* %273, align 4
  %275 = icmp eq i32 %274, 46
  br i1 %275, label %276, label %451

276:                                              ; preds = %272
  call void @_ZN3egl8TransferILNS_12TransferTypeE2EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

277:                                              ; preds = %156, %166, %240
  %278 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %279 = load i32, i32* %278, align 8
  %280 = icmp eq i32 %279, 36209
  br i1 %280, label %281, label %451

281:                                              ; preds = %277
  %282 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %283 = load i32, i32* %282, align 4
  %284 = icmp eq i32 %283, 51
  br i1 %284, label %285, label %451

285:                                              ; preds = %281
  call void @_ZN3egl8TransferILNS_12TransferTypeE3EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

286:                                              ; preds = %156, %166, %240
  %287 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %288 = load i32, i32* %287, align 8
  %289 = icmp eq i32 %288, 36227
  br i1 %289, label %290, label %451

290:                                              ; preds = %286
  %291 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %292 = load i32, i32* %291, align 4
  %293 = icmp eq i32 %292, 50
  br i1 %293, label %294, label %451

294:                                              ; preds = %290
  call void @_ZN3egl8TransferILNS_12TransferTypeE3EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

295:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %296
    i32 5120, label %296
    i32 5131, label %296
    i32 36193, label %296
    i32 5126, label %297
    i32 5123, label %321
    i32 5122, label %330
    i32 5125, label %339
    i32 5124, label %348
    i32 34042, label %424
    i32 36269, label %425
  ]

296:                                              ; preds = %240, %240, %295, %295, %295, %295
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

297:                                              ; preds = %240, %295
  %298 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %299 = load i32, i32* %298, align 8
  switch i32 %299, label %359 [
    i32 33328, label %300
    i32 33327, label %301
  ]

300:                                              ; preds = %297
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

301:                                              ; preds = %297
  call void @_ZN3egl8TransferILNS_12TransferTypeE20EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

302:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %303
    i32 5120, label %312
    i32 5123, label %321
    i32 5122, label %330
    i32 5125, label %339
    i32 5124, label %348
    i32 5131, label %358
    i32 36193, label %358
    i32 5126, label %359
    i32 34042, label %424
    i32 36269, label %425
  ]

303:                                              ; preds = %302
  %304 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %305 = load i32, i32* %304, align 8
  %306 = icmp eq i32 %305, 33336
  br i1 %306, label %307, label %451

307:                                              ; preds = %303
  %308 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %309 = load i32, i32* %308, align 4
  %310 = icmp eq i32 %309, 34
  br i1 %310, label %311, label %451

311:                                              ; preds = %307
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

312:                                              ; preds = %302
  %313 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %314 = load i32, i32* %313, align 8
  %315 = icmp eq i32 %314, 33335
  br i1 %315, label %316, label %451

316:                                              ; preds = %312
  %317 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %318 = load i32, i32* %317, align 4
  %319 = icmp eq i32 %318, 33
  br i1 %319, label %320, label %451

320:                                              ; preds = %316
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

321:                                              ; preds = %295, %302
  %322 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %323 = load i32, i32* %322, align 8
  %324 = icmp eq i32 %323, 33338
  br i1 %324, label %325, label %451

325:                                              ; preds = %321
  %326 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %327 = load i32, i32* %326, align 4
  %328 = icmp eq i32 %327, 39
  br i1 %328, label %329, label %451

329:                                              ; preds = %325
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

330:                                              ; preds = %295, %302
  %331 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %332 = load i32, i32* %331, align 8
  %333 = icmp eq i32 %332, 33337
  br i1 %333, label %334, label %451

334:                                              ; preds = %330
  %335 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %336 = load i32, i32* %335, align 4
  %337 = icmp eq i32 %336, 38
  br i1 %337, label %338, label %451

338:                                              ; preds = %334
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

339:                                              ; preds = %295, %302
  %340 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %341 = load i32, i32* %340, align 8
  %342 = icmp eq i32 %341, 33340
  br i1 %342, label %343, label %451

343:                                              ; preds = %339
  %344 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %345 = load i32, i32* %344, align 4
  %346 = icmp eq i32 %345, 41
  br i1 %346, label %347, label %451

347:                                              ; preds = %343
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

348:                                              ; preds = %295, %302
  %349 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %350 = load i32, i32* %349, align 8
  %351 = icmp eq i32 %350, 33339
  br i1 %351, label %352, label %451

352:                                              ; preds = %348
  %353 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %354 = load i32, i32* %353, align 4
  %355 = icmp eq i32 %354, 40
  br i1 %355, label %356, label %451

356:                                              ; preds = %352
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

357:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %358
    i32 5120, label %358
    i32 5131, label %358
    i32 36193, label %358
    i32 5126, label %359
    i32 5123, label %383
    i32 5122, label %392
    i32 5125, label %401
    i32 5124, label %410
    i32 34042, label %424
    i32 36269, label %425
  ]

358:                                              ; preds = %302, %302, %357, %357, %357, %357
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

359:                                              ; preds = %297, %302, %357
  %360 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %361 = load i32, i32* %360, align 8
  switch i32 %361, label %422 [
    i32 33326, label %362
    i32 33325, label %363
  ]

362:                                              ; preds = %359
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

363:                                              ; preds = %359
  call void @_ZN3egl8TransferILNS_12TransferTypeE19EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

364:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %365
    i32 5120, label %374
    i32 5123, label %383
    i32 5122, label %392
    i32 5125, label %401
    i32 5124, label %410
    i32 5126, label %422
    i32 34042, label %424
    i32 36269, label %425
    i32 5131, label %433
    i32 36193, label %433
  ]

365:                                              ; preds = %364
  %366 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %367 = load i32, i32* %366, align 8
  %368 = icmp eq i32 %367, 33330
  br i1 %368, label %369, label %451

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %371 = load i32, i32* %370, align 4
  %372 = icmp eq i32 %371, 3
  br i1 %372, label %373, label %451

373:                                              ; preds = %369
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

374:                                              ; preds = %364
  %375 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %376 = load i32, i32* %375, align 8
  %377 = icmp eq i32 %376, 33329
  br i1 %377, label %378, label %451

378:                                              ; preds = %374
  %379 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %380 = load i32, i32* %379, align 4
  %381 = icmp eq i32 %380, 2
  br i1 %381, label %382, label %451

382:                                              ; preds = %378
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

383:                                              ; preds = %357, %364
  %384 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %385 = load i32, i32* %384, align 8
  %386 = icmp eq i32 %385, 33332
  br i1 %386, label %387, label %451

387:                                              ; preds = %383
  %388 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %389 = load i32, i32* %388, align 4
  %390 = icmp eq i32 %389, 7
  br i1 %390, label %391, label %451

391:                                              ; preds = %387
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

392:                                              ; preds = %357, %364
  %393 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %394 = load i32, i32* %393, align 8
  %395 = icmp eq i32 %394, 33331
  br i1 %395, label %396, label %451

396:                                              ; preds = %392
  %397 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %398 = load i32, i32* %397, align 4
  %399 = icmp eq i32 %398, 6
  br i1 %399, label %400, label %451

400:                                              ; preds = %396
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

401:                                              ; preds = %357, %364
  %402 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %403 = load i32, i32* %402, align 8
  %404 = icmp eq i32 %403, 33334
  br i1 %404, label %405, label %451

405:                                              ; preds = %401
  %406 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %407 = load i32, i32* %406, align 4
  %408 = icmp eq i32 %407, 9
  br i1 %408, label %409, label %451

409:                                              ; preds = %405
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

410:                                              ; preds = %357, %364
  %411 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %412 = load i32, i32* %411, align 8
  %413 = icmp eq i32 %412, 33333
  br i1 %413, label %414, label %451

414:                                              ; preds = %410
  %415 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 11
  %416 = load i32, i32* %415, align 4
  %417 = icmp eq i32 %416, 8
  br i1 %417, label %418, label %451

418:                                              ; preds = %414
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

419:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5123, label %420
    i32 5125, label %421
    i32 5126, label %422
    i32 34042, label %424
    i32 36269, label %425
    i32 5121, label %427
    i32 5131, label %433
    i32 36193, label %433
  ]

420:                                              ; preds = %419
  call void @_ZN3egl8TransferILNS_12TransferTypeE10EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

421:                                              ; preds = %419
  call void @_ZN3egl8TransferILNS_12TransferTypeE12EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

422:                                              ; preds = %359, %364, %419
  call void @_ZN3egl8TransferILNS_12TransferTypeE13EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

423:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 34042, label %424
    i32 36269, label %425
    i32 5121, label %427
    i32 5126, label %428
    i32 5131, label %433
    i32 36193, label %433
  ]

424:                                              ; preds = %26, %92, %156, %166, %240, %295, %302, %357, %364, %419, %423
  call void @_ZN3egl8TransferILNS_12TransferTypeE11EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

425:                                              ; preds = %26, %92, %156, %166, %240, %295, %302, %357, %364, %419, %423
  call void @_ZN3egl8TransferILNS_12TransferTypeE14EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

426:                                              ; preds = %10
  switch i32 %7, label %451 [
    i32 5121, label %427
    i32 5126, label %428
    i32 5131, label %433
    i32 36193, label %433
  ]

427:                                              ; preds = %419, %423, %426
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

428:                                              ; preds = %423, %426
  %429 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %430 = load i32, i32* %429, align 8
  switch i32 %430, label %433 [
    i32 34841, label %431
    i32 34847, label %432
  ]

431:                                              ; preds = %428
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

432:                                              ; preds = %428
  call void @_ZN3egl8TransferILNS_12TransferTypeE20EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

433:                                              ; preds = %364, %364, %419, %419, %423, %423, %426, %426, %428
  %434 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %435 = load i32, i32* %434, align 8
  %436 = icmp eq i32 %435, 34847
  br i1 %436, label %437, label %451

437:                                              ; preds = %433
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

438:                                              ; preds = %10, %10
  switch i32 %7, label %451 [
    i32 5121, label %439
    i32 5126, label %440
    i32 5131, label %447
    i32 36193, label %447
  ]

439:                                              ; preds = %438
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

440:                                              ; preds = %438
  %441 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %442 = load i32, i32* %441, align 8
  switch i32 %442, label %447 [
    i32 34840, label %443
    i32 34846, label %444
    i32 34838, label %445
    i32 34844, label %446
  ]

443:                                              ; preds = %440
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

444:                                              ; preds = %440
  call void @_ZN3egl8TransferILNS_12TransferTypeE19EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

445:                                              ; preds = %440
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

446:                                              ; preds = %440
  call void @_ZN3egl8TransferILNS_12TransferTypeE19EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

447:                                              ; preds = %438, %438, %440
  %448 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %449 = load i32, i32* %448, align 8
  switch i32 %449, label %451 [
    i32 34846, label %450
    i32 34844, label %450
  ]

450:                                              ; preds = %447, %447
  call void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %451

451:                                              ; preds = %438, %10, %426, %423, %419, %364, %357, %302, %295, %240, %166, %156, %92, %26, %447, %433, %410, %414, %401, %405, %392, %396, %383, %387, %374, %378, %365, %369, %348, %352, %339, %343, %330, %334, %321, %325, %312, %316, %303, %307, %286, %290, %277, %281, %268, %272, %259, %263, %250, %254, %241, %245, %235, %230, %225, %217, %212, %200, %204, %191, %195, %182, %186, %173, %177, %157, %161, %147, %151, %138, %142, %129, %133, %120, %124, %111, %115, %102, %106, %93, %97, %78, %82, %73, %68, %56, %60, %47, %51, %39, %42, %34, %450, %446, %445, %444, %443, %439, %437, %432, %431, %427, %425, %424, %422, %421, %420, %418, %409, %400, %391, %382, %373, %363, %362, %358, %356, %347, %338, %329, %320, %311, %301, %300, %296, %294, %285, %276, %267, %258, %249, %239, %234, %229, %221, %216, %208, %199, %190, %181, %172, %171, %170, %165, %155, %146, %137, %128, %119, %110, %101, %91, %90, %86, %77, %72, %64, %55, %46, %38, %33
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE0EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %16

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 0
  %15 = load i32, i32* %11, align 4
  br label %17

16:                                               ; preds = %34, %3
  ret void

17:                                               ; preds = %7, %34
  %18 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %19 = phi i32 [ %15, %7 ], [ %36, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %37, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %39, label %34

32:                                               ; preds = %39
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %17
  %35 = phi i32 [ %33, %32 ], [ %18, %17 ]
  %36 = phi i32 [ %54, %32 ], [ %19, %17 ]
  %37 = add nuw nsw i32 %20, 1
  %38 = icmp slt i32 %37, %35
  br i1 %38, label %17, label %16

39:                                               ; preds = %17, %56
  %40 = phi i32 [ %57, %56 ], [ %21, %17 ]
  %41 = phi i32 [ %53, %56 ], [ 0, %17 ]
  %42 = mul nsw i32 %40, %41
  %43 = sext i32 %42 to i64
  %44 = getelementptr inbounds i8, i8* %26, i64 %43
  %45 = load i32, i32* %12, align 4
  %46 = mul nsw i32 %45, %41
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %30, i64 %47
  %49 = load i32, i32* %13, align 4
  %50 = load i32, i32* %14, align 4
  %51 = mul nsw i32 %50, %49
  %52 = sext i32 %51 to i64
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %48, i8* align 1 %44, i64 %52, i1 false) #15
  %53 = add nuw nsw i32 %41, 1
  %54 = load i32, i32* %11, align 4
  %55 = icmp slt i32 %53, %54
  br i1 %55, label %56, label %32

56:                                               ; preds = %39
  %57 = load i32, i32* %8, align 4
  br label %39
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE6EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE6EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE6EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE7EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE7EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE7EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE17EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE17EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE17EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE23EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE23EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE23EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE1EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %86
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %87, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %87, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %90
  %41 = phi i32 [ %87, %90 ], [ %18, %16 ]
  %42 = phi i32 [ %91, %90 ], [ %21, %16 ]
  %43 = phi i32 [ %88, %90 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = icmp sgt i32 %51, 0
  br i1 %52, label %53, label %86

53:                                               ; preds = %40
  %54 = zext i32 %51 to i64
  br label %55

55:                                               ; preds = %55, %53
  %56 = phi i64 [ 0, %53 ], [ %82, %55 ]
  %57 = trunc i64 %56 to i32
  %58 = mul nsw i32 %57, 3
  %59 = zext i32 %58 to i64
  %60 = getelementptr inbounds i8, i8* %46, i64 %59
  %61 = load i8, i8* %60, align 1
  %62 = shl nsw i32 %57, 2
  %63 = zext i32 %62 to i64
  %64 = getelementptr inbounds i8, i8* %50, i64 %63
  store i8 %61, i8* %64, align 1
  %65 = add nuw nsw i32 %58, 1
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds i8, i8* %46, i64 %66
  %68 = load i8, i8* %67, align 1
  %69 = or i32 %62, 1
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %50, i64 %70
  store i8 %68, i8* %71, align 1
  %72 = add nuw nsw i32 %58, 2
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds i8, i8* %46, i64 %73
  %75 = load i8, i8* %74, align 1
  %76 = or i32 %62, 2
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds i8, i8* %50, i64 %77
  store i8 %75, i8* %78, align 1
  %79 = or i32 %62, 3
  %80 = zext i32 %79 to i64
  %81 = getelementptr inbounds i8, i8* %50, i64 %80
  store i8 -1, i8* %81, align 1
  %82 = add nuw nsw i64 %56, 1
  %83 = icmp eq i64 %82, %54
  br i1 %83, label %84, label %55

84:                                               ; preds = %55
  %85 = load i32, i32* %11, align 4
  br label %86

86:                                               ; preds = %84, %40
  %87 = phi i32 [ %85, %84 ], [ %41, %40 ]
  %88 = add nuw nsw i32 %43, 1
  %89 = icmp slt i32 %88, %87
  br i1 %89, label %90, label %32

90:                                               ; preds = %86
  %91 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE18EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE18EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE18EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE8EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE8EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE8EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE9EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE9EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE9EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE5EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %88
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %89, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %89, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %92
  %41 = phi i32 [ %89, %92 ], [ %18, %16 ]
  %42 = phi i32 [ %93, %92 ], [ %21, %16 ]
  %43 = phi i32 [ %90, %92 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to i16*
  %53 = bitcast i8* %50 to i16*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %88

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %84, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = mul nsw i32 %59, 3
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i16, i16* %52, i64 %61
  %63 = load i16, i16* %62, align 2
  %64 = shl nsw i32 %59, 2
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %53, i64 %65
  store i16 %63, i16* %66, align 2
  %67 = add nuw nsw i32 %60, 1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %52, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = or i32 %64, 1
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %53, i64 %72
  store i16 %70, i16* %73, align 2
  %74 = add nuw nsw i32 %60, 2
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %52, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = or i32 %64, 2
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i16, i16* %53, i64 %79
  store i16 %77, i16* %80, align 2
  %81 = or i32 %64, 3
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i16, i16* %53, i64 %82
  store i16 15360, i16* %83, align 2
  %84 = add nuw nsw i64 %58, 1
  %85 = icmp eq i64 %84, %56
  br i1 %85, label %86, label %57

86:                                               ; preds = %57
  %87 = load i32, i32* %11, align 4
  br label %88

88:                                               ; preds = %86, %40
  %89 = phi i32 [ %87, %86 ], [ %41, %40 ]
  %90 = add nuw nsw i32 %43, 1
  %91 = icmp slt i32 %90, %89
  br i1 %91, label %92, label %32

92:                                               ; preds = %88
  %93 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE4EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %94
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %95, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %95, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %98
  %41 = phi i32 [ %95, %98 ], [ %18, %16 ]
  %42 = phi i32 [ %99, %98 ], [ %21, %16 ]
  %43 = phi i32 [ %96, %98 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to float*
  %53 = bitcast i8* %50 to float*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %94

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %90, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = mul nsw i32 %59, 3
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds float, float* %52, i64 %61
  %63 = bitcast float* %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = shl nsw i32 %59, 2
  %66 = zext i32 %65 to i64
  %67 = getelementptr inbounds float, float* %53, i64 %66
  %68 = bitcast float* %67 to i32*
  store i32 %64, i32* %68, align 4
  %69 = add nuw nsw i32 %60, 1
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds float, float* %52, i64 %70
  %72 = bitcast float* %71 to i32*
  %73 = load i32, i32* %72, align 4
  %74 = or i32 %65, 1
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds float, float* %53, i64 %75
  %77 = bitcast float* %76 to i32*
  store i32 %73, i32* %77, align 4
  %78 = add nuw nsw i32 %60, 2
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds float, float* %52, i64 %79
  %81 = bitcast float* %80 to i32*
  %82 = load i32, i32* %81, align 4
  %83 = or i32 %65, 2
  %84 = zext i32 %83 to i64
  %85 = getelementptr inbounds float, float* %53, i64 %84
  %86 = bitcast float* %85 to i32*
  store i32 %82, i32* %86, align 4
  %87 = or i32 %65, 3
  %88 = zext i32 %87 to i64
  %89 = getelementptr inbounds float, float* %53, i64 %88
  store float 1.000000e+00, float* %89, align 4
  %90 = add nuw nsw i64 %58, 1
  %91 = icmp eq i64 %90, %56
  br i1 %91, label %92, label %57

92:                                               ; preds = %57
  %93 = load i32, i32* %11, align 4
  br label %94

94:                                               ; preds = %92, %40
  %95 = phi i32 [ %93, %92 ], [ %41, %40 ]
  %96 = add nuw nsw i32 %43, 1
  %97 = icmp slt i32 %96, %95
  br i1 %97, label %98, label %32

98:                                               ; preds = %94
  %99 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE21EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE21EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE21EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE22EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE22EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE22EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE2EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %88
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %89, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %89, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %92
  %41 = phi i32 [ %89, %92 ], [ %18, %16 ]
  %42 = phi i32 [ %93, %92 ], [ %21, %16 ]
  %43 = phi i32 [ %90, %92 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to i16*
  %53 = bitcast i8* %50 to i16*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %88

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %84, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = mul nsw i32 %59, 3
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i16, i16* %52, i64 %61
  %63 = load i16, i16* %62, align 2
  %64 = shl nsw i32 %59, 2
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i16, i16* %53, i64 %65
  store i16 %63, i16* %66, align 2
  %67 = add nuw nsw i32 %60, 1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i16, i16* %52, i64 %68
  %70 = load i16, i16* %69, align 2
  %71 = or i32 %64, 1
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i16, i16* %53, i64 %72
  store i16 %70, i16* %73, align 2
  %74 = add nuw nsw i32 %60, 2
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i16, i16* %52, i64 %75
  %77 = load i16, i16* %76, align 2
  %78 = or i32 %64, 2
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i16, i16* %53, i64 %79
  store i16 %77, i16* %80, align 2
  %81 = or i32 %64, 3
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i16, i16* %53, i64 %82
  store i16 -1, i16* %83, align 2
  %84 = add nuw nsw i64 %58, 1
  %85 = icmp eq i64 %84, %56
  br i1 %85, label %86, label %57

86:                                               ; preds = %57
  %87 = load i32, i32* %11, align 4
  br label %88

88:                                               ; preds = %86, %40
  %89 = phi i32 [ %87, %86 ], [ %41, %40 ]
  %90 = add nuw nsw i32 %43, 1
  %91 = icmp slt i32 %90, %89
  br i1 %91, label %92, label %32

92:                                               ; preds = %88
  %93 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE3EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %88
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %89, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %89, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %92
  %41 = phi i32 [ %89, %92 ], [ %18, %16 ]
  %42 = phi i32 [ %93, %92 ], [ %21, %16 ]
  %43 = phi i32 [ %90, %92 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to i32*
  %53 = bitcast i8* %50 to i32*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %88

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %84, %57 ]
  %59 = trunc i64 %58 to i32
  %60 = mul nsw i32 %59, 3
  %61 = zext i32 %60 to i64
  %62 = getelementptr inbounds i32, i32* %52, i64 %61
  %63 = load i32, i32* %62, align 4
  %64 = shl nsw i32 %59, 2
  %65 = zext i32 %64 to i64
  %66 = getelementptr inbounds i32, i32* %53, i64 %65
  store i32 %63, i32* %66, align 4
  %67 = add nuw nsw i32 %60, 1
  %68 = zext i32 %67 to i64
  %69 = getelementptr inbounds i32, i32* %52, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = or i32 %64, 1
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds i32, i32* %53, i64 %72
  store i32 %70, i32* %73, align 4
  %74 = add nuw nsw i32 %60, 2
  %75 = zext i32 %74 to i64
  %76 = getelementptr inbounds i32, i32* %52, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = or i32 %64, 2
  %79 = zext i32 %78 to i64
  %80 = getelementptr inbounds i32, i32* %53, i64 %79
  store i32 %77, i32* %80, align 4
  %81 = or i32 %64, 3
  %82 = zext i32 %81 to i64
  %83 = getelementptr inbounds i32, i32* %53, i64 %82
  store i32 -1, i32* %83, align 4
  %84 = add nuw nsw i64 %58, 1
  %85 = icmp eq i64 %84, %56
  br i1 %85, label %86, label %57

86:                                               ; preds = %57
  %87 = load i32, i32* %11, align 4
  br label %88

88:                                               ; preds = %86, %40
  %89 = phi i32 [ %87, %86 ], [ %41, %40 ]
  %90 = add nuw nsw i32 %43, 1
  %91 = icmp slt i32 %90, %89
  br i1 %91, label %92, label %32

92:                                               ; preds = %88
  %93 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE20EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %38, %3
  ret void

16:                                               ; preds = %7, %38
  %17 = phi i32 [ %5, %7 ], [ %39, %38 ]
  %18 = phi i32 [ %14, %7 ], [ %40, %38 ]
  %19 = phi i32 [ 0, %7 ], [ %41, %38 ]
  %20 = load i32, i32* %8, align 4
  %21 = mul nsw i32 %20, %19
  %22 = load i32, i32* %9, align 4
  %23 = mul nsw i32 %21, %22
  %24 = sext i32 %23 to i64
  %25 = getelementptr inbounds i8, i8* %1, i64 %24
  %26 = load i32, i32* %10, align 4
  %27 = mul nsw i32 %26, %19
  %28 = sext i32 %27 to i64
  %29 = getelementptr inbounds i8, i8* %0, i64 %28
  %30 = icmp sgt i32 %18, 0
  br i1 %30, label %31, label %38

31:                                               ; preds = %16
  %32 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE20EEEvPhPKhii(i8* %29, i8* %25, i32 %32, i32 undef) #11
  %33 = load i32, i32* %11, align 4
  %34 = icmp sgt i32 %33, 1
  br i1 %34, label %43, label %35

35:                                               ; preds = %43, %31
  %36 = phi i32 [ %33, %31 ], [ %55, %43 ]
  %37 = load i32, i32* %4, align 4
  br label %38

38:                                               ; preds = %35, %16
  %39 = phi i32 [ %37, %35 ], [ %17, %16 ]
  %40 = phi i32 [ %36, %35 ], [ %18, %16 ]
  %41 = add nuw nsw i32 %19, 1
  %42 = icmp slt i32 %41, %39
  br i1 %42, label %16, label %15

43:                                               ; preds = %31, %43
  %44 = phi i32 [ %54, %43 ], [ 1, %31 ]
  %45 = load i32, i32* %8, align 4
  %46 = mul nsw i32 %45, %44
  %47 = sext i32 %46 to i64
  %48 = getelementptr inbounds i8, i8* %25, i64 %47
  %49 = load i32, i32* %12, align 4
  %50 = mul nsw i32 %49, %44
  %51 = sext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %29, i64 %51
  %53 = load i32, i32* %13, align 4
  tail call void @_ZN3egl11TransferRowILNS_12TransferTypeE20EEEvPhPKhii(i8* %52, i8* %48, i32 %53, i32 undef) #11
  %54 = add nuw nsw i32 %44, 1
  %55 = load i32, i32* %11, align 4
  %56 = icmp slt i32 %54, %55
  br i1 %56, label %43, label %35
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE19EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %67
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %68, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %68, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %71
  %41 = phi i32 [ %68, %71 ], [ %18, %16 ]
  %42 = phi i32 [ %72, %71 ], [ %21, %16 ]
  %43 = phi i32 [ %69, %71 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to float*
  %53 = bitcast i8* %50 to %"class.sw::half"*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %63, %57 ]
  %59 = getelementptr inbounds float, float* %52, i64 %58
  %60 = load float, float* %59, align 4
  %61 = getelementptr inbounds %"class.sw::half", %"class.sw::half"* %53, i64 %58
  %62 = tail call dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSEf(%"class.sw::half"* %61, float %60) #12
  %63 = add nuw nsw i64 %58, 1
  %64 = icmp eq i64 %63, %56
  br i1 %64, label %65, label %57

65:                                               ; preds = %57
  %66 = load i32, i32* %11, align 4
  br label %67

67:                                               ; preds = %65, %40
  %68 = phi i32 [ %66, %65 ], [ %41, %40 ]
  %69 = add nuw nsw i32 %43, 1
  %70 = icmp slt i32 %69, %68
  br i1 %70, label %71, label %32

71:                                               ; preds = %67
  %72 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE10EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %68
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %69, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %69, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %72
  %41 = phi i32 [ %69, %72 ], [ %18, %16 ]
  %42 = phi i32 [ %73, %72 ], [ %21, %16 ]
  %43 = phi i32 [ %70, %72 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to i16*
  %53 = bitcast i8* %50 to float*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %68

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %64, %57 ]
  %59 = getelementptr inbounds i16, i16* %52, i64 %58
  %60 = load i16, i16* %59, align 2
  %61 = uitofp i16 %60 to float
  %62 = fdiv float %61, 6.553500e+04
  %63 = getelementptr inbounds float, float* %53, i64 %58
  store float %62, float* %63, align 4
  %64 = add nuw nsw i64 %58, 1
  %65 = icmp eq i64 %64, %56
  br i1 %65, label %66, label %57

66:                                               ; preds = %57
  %67 = load i32, i32* %11, align 4
  br label %68

68:                                               ; preds = %66, %40
  %69 = phi i32 [ %67, %66 ], [ %41, %40 ]
  %70 = add nuw nsw i32 %43, 1
  %71 = icmp slt i32 %70, %69
  br i1 %71, label %72, label %32

72:                                               ; preds = %68
  %73 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE12EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %68
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %69, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %69, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %72
  %41 = phi i32 [ %69, %72 ], [ %18, %16 ]
  %42 = phi i32 [ %73, %72 ], [ %21, %16 ]
  %43 = phi i32 [ %70, %72 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to i32*
  %53 = bitcast i8* %50 to float*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %68

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %64, %57 ]
  %59 = getelementptr inbounds i32, i32* %52, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = uitofp i32 %60 to float
  %62 = fmul float %61, 0x3DF0000000000000
  %63 = getelementptr inbounds float, float* %53, i64 %58
  store float %62, float* %63, align 4
  %64 = add nuw nsw i64 %58, 1
  %65 = icmp eq i64 %64, %56
  br i1 %65, label %66, label %57

66:                                               ; preds = %57
  %67 = load i32, i32* %11, align 4
  br label %68

68:                                               ; preds = %66, %40
  %69 = phi i32 [ %67, %66 ], [ %41, %40 ]
  %70 = add nuw nsw i32 %43, 1
  %71 = icmp slt i32 %70, %69
  br i1 %71, label %72, label %32

72:                                               ; preds = %68
  %73 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE13EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %70
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %71, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %71, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %74
  %41 = phi i32 [ %71, %74 ], [ %18, %16 ]
  %42 = phi i32 [ %75, %74 ], [ %21, %16 ]
  %43 = phi i32 [ %72, %74 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to float*
  %53 = bitcast i8* %50 to float*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %70

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %66, %57 ]
  %59 = getelementptr inbounds float, float* %52, i64 %58
  %60 = load float, float* %59, align 4
  %61 = fcmp olt float %60, 0.000000e+00
  %62 = select i1 %61, float 0.000000e+00, float %60
  %63 = fcmp ogt float %62, 1.000000e+00
  %64 = select i1 %63, float 1.000000e+00, float %62
  %65 = getelementptr inbounds float, float* %53, i64 %58
  store float %64, float* %65, align 4
  %66 = add nuw nsw i64 %58, 1
  %67 = icmp eq i64 %66, %56
  br i1 %67, label %68, label %57

68:                                               ; preds = %57
  %69 = load i32, i32* %11, align 4
  br label %70

70:                                               ; preds = %68, %40
  %71 = phi i32 [ %69, %68 ], [ %41, %40 ]
  %72 = add nuw nsw i32 %43, 1
  %73 = icmp slt i32 %72, %71
  br i1 %73, label %74, label %32

74:                                               ; preds = %70
  %75 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE11EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %69
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %70, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %70, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %73
  %41 = phi i32 [ %70, %73 ], [ %18, %16 ]
  %42 = phi i32 [ %74, %73 ], [ %21, %16 ]
  %43 = phi i32 [ %71, %73 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to i32*
  %53 = bitcast i8* %50 to float*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %69

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %65, %57 ]
  %59 = getelementptr inbounds i32, i32* %52, i64 %58
  %60 = load i32, i32* %59, align 4
  %61 = and i32 %60, -256
  %62 = uitofp i32 %61 to float
  %63 = fdiv float %62, 0x41EFFFFFE0000000
  %64 = getelementptr inbounds float, float* %53, i64 %58
  store float %63, float* %64, align 4
  %65 = add nuw nsw i64 %58, 1
  %66 = icmp eq i64 %65, %56
  br i1 %66, label %67, label %57

67:                                               ; preds = %57
  %68 = load i32, i32* %11, align 4
  br label %69

69:                                               ; preds = %67, %40
  %70 = phi i32 [ %68, %67 ], [ %41, %40 ]
  %71 = add nuw nsw i32 %43, 1
  %72 = icmp slt i32 %71, %70
  br i1 %72, label %73, label %32

73:                                               ; preds = %69
  %74 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE14EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %70
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %71, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %71, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %74
  %41 = phi i32 [ %71, %74 ], [ %18, %16 ]
  %42 = phi i32 [ %75, %74 ], [ %21, %16 ]
  %43 = phi i32 [ %72, %74 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to %struct.D32FS8*
  %53 = bitcast i8* %50 to float*
  %54 = icmp sgt i32 %51, 0
  br i1 %54, label %55, label %70

55:                                               ; preds = %40
  %56 = zext i32 %51 to i64
  br label %57

57:                                               ; preds = %57, %55
  %58 = phi i64 [ 0, %55 ], [ %66, %57 ]
  %59 = getelementptr inbounds %struct.D32FS8, %struct.D32FS8* %52, i64 %58, i32 0
  %60 = load float, float* %59, align 4
  %61 = fcmp olt float %60, 0.000000e+00
  %62 = select i1 %61, float 0.000000e+00, float %60
  %63 = fcmp ogt float %62, 1.000000e+00
  %64 = select i1 %63, float 1.000000e+00, float %62
  %65 = getelementptr inbounds float, float* %53, i64 %58
  store float %64, float* %65, align 4
  %66 = add nuw nsw i64 %58, 1
  %67 = icmp eq i64 %66, %56
  br i1 %67, label %68, label %57

68:                                               ; preds = %57
  %69 = load i32, i32* %11, align 4
  br label %70

70:                                               ; preds = %68, %40
  %71 = phi i32 [ %69, %68 ], [ %41, %40 ]
  %72 = add nuw nsw i32 %43, 1
  %73 = icmp slt i32 %72, %71
  br i1 %73, label %74, label %32

74:                                               ; preds = %70
  %75 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5Image15loadStencilDataEiiiiijjPKvPv(%"class.egl::Image"* nocapture readonly, i32, i32, i32, i32, i32, i32, i32, i8*, i8*) local_unnamed_addr #3 align 2 {
  %11 = alloca %"struct.egl::Rectangle", align 4
  %12 = bitcast %"struct.egl::Rectangle"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #15
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 0
  %14 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 1
  %15 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 2
  %16 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 3
  %17 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 4
  %18 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 5
  %19 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 6
  %20 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %11, i64 0, i32 7
  %21 = tail call i32 @_ZN2gl16ComputePixelSizeEjj(i32 %6, i32 %7) #11
  store i32 %21, i32* %13, align 4
  store i32 %1, i32* %14, align 4
  store i32 %2, i32* %15, align 4
  store i32 %3, i32* %16, align 4
  store i32 %4, i32* %17, align 4
  store i32 %5, i32* %18, align 4
  %22 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 4, i32 7
  %23 = load i32, i32* %22, align 4
  store i32 %23, i32* %19, align 4
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 4, i32 9
  %25 = load i32, i32* %24, align 4
  store i32 %25, i32* %20, align 4
  switch i32 %7, label %28 [
    i32 34042, label %26
    i32 36269, label %27
  ]

26:                                               ; preds = %10
  call void @_ZN3egl8TransferILNS_12TransferTypeE15EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %28

27:                                               ; preds = %10
  call void @_ZN3egl8TransferILNS_12TransferTypeE16EEEvPvPKvRKNS_9RectangleE(i8* %9, i8* %8, %"struct.egl::Rectangle"* nonnull dereferenceable(32) %11) #11
  br label %28

28:                                               ; preds = %10, %27, %26
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #15
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE15EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %66
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %67, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %67, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %70
  %41 = phi i32 [ %67, %70 ], [ %18, %16 ]
  %42 = phi i32 [ %71, %70 ], [ %21, %16 ]
  %43 = phi i32 [ %68, %70 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to i32*
  %53 = icmp sgt i32 %51, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %40
  %55 = zext i32 %51 to i64
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ 0, %54 ], [ %62, %56 ]
  %58 = getelementptr inbounds i32, i32* %52, i64 %57
  %59 = load i32, i32* %58, align 4
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, i8* %50, i64 %57
  store i8 %60, i8* %61, align 1
  %62 = add nuw nsw i64 %57, 1
  %63 = icmp eq i64 %62, %55
  br i1 %63, label %64, label %56

64:                                               ; preds = %56
  %65 = load i32, i32* %11, align 4
  br label %66

66:                                               ; preds = %64, %40
  %67 = phi i32 [ %65, %64 ], [ %41, %40 ]
  %68 = add nuw nsw i32 %43, 1
  %69 = icmp slt i32 %68, %67
  br i1 %69, label %70, label %32

70:                                               ; preds = %66
  %71 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl8TransferILNS_12TransferTypeE16EEEvPvPKvRKNS_9RectangleE(i8*, i8*, %"struct.egl::Rectangle"* dereferenceable(32)) local_unnamed_addr #3 comdat {
  %4 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 3
  %5 = load i32, i32* %4, align 4
  %6 = icmp sgt i32 %5, 0
  br i1 %6, label %7, label %15

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 4
  %9 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 5
  %10 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 7
  %11 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 2
  %12 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 6
  %13 = getelementptr inbounds %"struct.egl::Rectangle", %"struct.egl::Rectangle"* %2, i64 0, i32 1
  %14 = load i32, i32* %11, align 4
  br label %16

15:                                               ; preds = %34, %3
  ret void

16:                                               ; preds = %7, %34
  %17 = phi i32 [ %5, %7 ], [ %35, %34 ]
  %18 = phi i32 [ %14, %7 ], [ %36, %34 ]
  %19 = phi i32 [ %14, %7 ], [ %37, %34 ]
  %20 = phi i32 [ 0, %7 ], [ %38, %34 ]
  %21 = load i32, i32* %8, align 4
  %22 = mul nsw i32 %21, %20
  %23 = load i32, i32* %9, align 4
  %24 = mul nsw i32 %22, %23
  %25 = sext i32 %24 to i64
  %26 = getelementptr inbounds i8, i8* %1, i64 %25
  %27 = load i32, i32* %10, align 4
  %28 = mul nsw i32 %27, %20
  %29 = sext i32 %28 to i64
  %30 = getelementptr inbounds i8, i8* %0, i64 %29
  %31 = icmp sgt i32 %19, 0
  br i1 %31, label %40, label %34

32:                                               ; preds = %66
  %33 = load i32, i32* %4, align 4
  br label %34

34:                                               ; preds = %32, %16
  %35 = phi i32 [ %33, %32 ], [ %17, %16 ]
  %36 = phi i32 [ %67, %32 ], [ %18, %16 ]
  %37 = phi i32 [ %67, %32 ], [ %19, %16 ]
  %38 = add nuw nsw i32 %20, 1
  %39 = icmp slt i32 %38, %35
  br i1 %39, label %16, label %15

40:                                               ; preds = %16, %70
  %41 = phi i32 [ %67, %70 ], [ %18, %16 ]
  %42 = phi i32 [ %71, %70 ], [ %21, %16 ]
  %43 = phi i32 [ %68, %70 ], [ 0, %16 ]
  %44 = mul nsw i32 %42, %43
  %45 = sext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %26, i64 %45
  %47 = load i32, i32* %12, align 4
  %48 = mul nsw i32 %47, %43
  %49 = sext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %30, i64 %49
  %51 = load i32, i32* %13, align 4
  %52 = bitcast i8* %46 to %struct.D32FS8.0*
  %53 = icmp sgt i32 %51, 0
  br i1 %53, label %54, label %66

54:                                               ; preds = %40
  %55 = zext i32 %51 to i64
  br label %56

56:                                               ; preds = %56, %54
  %57 = phi i64 [ 0, %54 ], [ %62, %56 ]
  %58 = getelementptr inbounds %struct.D32FS8.0, %struct.D32FS8.0* %52, i64 %57, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = trunc i32 %59 to i8
  %61 = getelementptr inbounds i8, i8* %50, i64 %57
  store i8 %60, i8* %61, align 1
  %62 = add nuw nsw i64 %57, 1
  %63 = icmp eq i64 %62, %55
  br i1 %63, label %64, label %56

64:                                               ; preds = %56
  %65 = load i32, i32* %11, align 4
  br label %66

66:                                               ; preds = %64, %40
  %67 = phi i32 [ %65, %64 ], [ %41, %40 ]
  %68 = add nuw nsw i32 %43, 1
  %69 = icmp slt i32 %68, %67
  br i1 %69, label %70, label %32

70:                                               ; preds = %66
  %71 = load i32, i32* %8, align 4
  br label %40
}

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5Image13loadImageDataEiiiiiijjRKN2gl17PixelStorageModesEPKv(%"class.egl::Image"*, i32, i32, i32, i32, i32, i32, i32, i32, %"struct.gl::PixelStorageModes"* nocapture readonly dereferenceable(24), i8*) local_unnamed_addr #3 align 2 {
  %12 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %9, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = select i1 %14, i32 %4, i32 %13
  %16 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %9, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = tail call i32 @_ZN2gl16ComputePixelSizeEjj(i32 %7, i32 %8) #12
  %19 = mul nsw i32 %18, %15
  %20 = add i32 %17, -1
  %21 = add i32 %20, %19
  %22 = sub i32 0, %17
  %23 = and i32 %21, %22
  %24 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %9, i64 0, i32 4
  %25 = load i32, i32* %24, align 4
  %26 = icmp eq i32 %25, 0
  %27 = select i1 %26, i32 %5, i32 %25
  %28 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %9, i64 0, i32 5
  %29 = load i32, i32* %28, align 4
  %30 = mul nsw i32 %27, %29
  %31 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %9, i64 0, i32 1
  %32 = load i32, i32* %31, align 4
  %33 = add nsw i32 %30, %32
  %34 = mul nsw i32 %33, %23
  %35 = getelementptr inbounds %"struct.gl::PixelStorageModes", %"struct.gl::PixelStorageModes"* %9, i64 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = mul nsw i32 %36, %18
  %38 = add nsw i32 %34, %37
  %39 = sext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %10, i64 %39
  %41 = bitcast %"class.egl::Image"* %0 to i8* (%"class.egl::Image"*, i32, i32, i32, i32)***
  %42 = load i8* (%"class.egl::Image"*, i32, i32, i32, i32)**, i8* (%"class.egl::Image"*, i32, i32, i32, i32)*** %41, align 8
  %43 = getelementptr inbounds i8* (%"class.egl::Image"*, i32, i32, i32, i32)*, i8* (%"class.egl::Image"*, i32, i32, i32, i32)** %42, i64 5
  %44 = load i8* (%"class.egl::Image"*, i32, i32, i32, i32)*, i8* (%"class.egl::Image"*, i32, i32, i32, i32)** %43, align 8
  %45 = tail call i8* %44(%"class.egl::Image"* %0, i32 %1, i32 %2, i32 %3, i32 2) #12
  %46 = icmp eq i8* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %11
  tail call void @_ZN3egl5Image13loadImageDataEiiiiijjPKvPv(%"class.egl::Image"* %0, i32 %4, i32 %5, i32 %6, i32 %23, i32 %27, i32 %7, i32 %8, i8* %40, i8* nonnull %45) #11
  br label %48

48:                                               ; preds = %11, %47
  %49 = bitcast %"class.egl::Image"* %0 to void (%"class.egl::Image"*)***
  %50 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %50, i64 6
  %52 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %51, align 8
  tail call void %52(%"class.egl::Image"* %0) #12
  %53 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  %54 = tail call zeroext i1 @_ZNK2sw7Surface10hasStencilEv(%"class.sw::Surface"* %53) #12
  br i1 %54, label %55, label %60

55:                                               ; preds = %48
  %56 = tail call i8* @_ZN2sw7Surface11lockStencilEiiiNS_8AccessorE(%"class.sw::Surface"* %53, i32 %1, i32 %2, i32 %3, i32 0) #12
  %57 = icmp eq i8* %56, null
  br i1 %57, label %59, label %58

58:                                               ; preds = %55
  tail call void @_ZN3egl5Image15loadStencilDataEiiiiijjPKvPv(%"class.egl::Image"* %0, i32 %4, i32 %5, i32 %6, i32 %23, i32 %27, i32 %7, i32 %8, i8* %40, i8* nonnull %56) #11
  br label %59

59:                                               ; preds = %55, %58
  tail call void @_ZN2sw7Surface13unlockStencilEv(%"class.sw::Surface"* %53) #12
  br label %60

60:                                               ; preds = %59, %48
  ret void
}

; Function Attrs: optsize
declare zeroext i1 @_ZNK2sw7Surface10hasStencilEv(%"class.sw::Surface"*) local_unnamed_addr #5

; Function Attrs: optsize
declare i8* @_ZN2sw7Surface11lockStencilEiiiNS_8AccessorE(%"class.sw::Surface"*, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw7Surface13unlockStencilEv(%"class.sw::Surface"*) local_unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define hidden void @_ZN3egl5Image18loadCompressedDataEiiiiiiiPKv(%"class.egl::Image"*, i32, i32, i32, i32, i32, i32, i32, i8* nocapture readonly) local_unnamed_addr #3 align 2 {
  %10 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  %11 = load i32, i32* %10, align 8
  %12 = tail call i32 @_ZN2gl21ComputeCompressedSizeEiij(i32 %4, i32 1, i32 %11) #12
  %13 = sdiv i32 %7, %6
  %14 = sdiv i32 %13, %12
  %15 = bitcast %"class.egl::Image"* %0 to i8* (%"class.egl::Image"*, i32, i32, i32, i32)***
  %16 = load i8* (%"class.egl::Image"*, i32, i32, i32, i32)**, i8* (%"class.egl::Image"*, i32, i32, i32, i32)*** %15, align 8
  %17 = getelementptr inbounds i8* (%"class.egl::Image"*, i32, i32, i32, i32)*, i8* (%"class.egl::Image"*, i32, i32, i32, i32)** %16, i64 5
  %18 = load i8* (%"class.egl::Image"*, i32, i32, i32, i32)*, i8* (%"class.egl::Image"*, i32, i32, i32, i32)** %17, align 8
  %19 = tail call i8* %18(%"class.egl::Image"* %0, i32 %1, i32 %2, i32 %3, i32 2) #12
  %20 = icmp ne i8* %19, null
  %21 = icmp sgt i32 %6, 0
  %22 = and i1 %20, %21
  br i1 %22, label %23, label %55

23:                                               ; preds = %9
  %24 = icmp sgt i32 %14, 0
  %25 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 7
  %26 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 2, i32 9
  %27 = sext i32 %12 to i64
  %28 = sext i32 %13 to i64
  %29 = zext i32 %6 to i64
  %30 = zext i32 %14 to i64
  br label %31

31:                                               ; preds = %37, %23
  %32 = phi i64 [ 0, %23 ], [ %38, %37 ]
  br i1 %24, label %33, label %37

33:                                               ; preds = %31
  %34 = mul nsw i64 %32, %28
  %35 = trunc i64 %32 to i32
  %36 = getelementptr inbounds i8, i8* %8, i64 %34
  br label %40

37:                                               ; preds = %40, %31
  %38 = add nuw nsw i64 %32, 1
  %39 = icmp eq i64 %38, %29
  br i1 %39, label %55, label %31

40:                                               ; preds = %40, %33
  %41 = phi i64 [ 0, %33 ], [ %53, %40 ]
  %42 = load i32, i32* %25, align 4
  %43 = trunc i64 %41 to i32
  %44 = mul i32 %42, %43
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds i8, i8* %19, i64 %45
  %47 = load i32, i32* %26, align 4
  %48 = mul i32 %47, %35
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %46, i64 %49
  %51 = mul nsw i64 %41, %27
  %52 = getelementptr inbounds i8, i8* %36, i64 %51
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %50, i8* align 1 %52, i64 %27, i1 false)
  %53 = add nuw nsw i64 %41, 1
  %54 = icmp eq i64 %53, %30
  br i1 %54, label %37, label %40

55:                                               ; preds = %37, %9
  %56 = bitcast %"class.egl::Image"* %0 to void (%"class.egl::Image"*)***
  %57 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %57, i64 6
  %59 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %58, align 8
  tail call void %59(%"class.egl::Image"* %0) #12
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK2sw7Surface12requiresSyncEv(%"class.sw::Surface"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8* @_ZN3egl5Image4lockEiiiN2sw4LockE(%"class.egl::Image"*, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %6 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  %7 = tail call i8* @_ZN2sw7Surface12lockExternalEiiiNS_4LockENS_8AccessorE(%"class.sw::Surface"* %6, i32 %1, i32 %2, i32 %3, i32 %4, i32 0) #12
  ret i8* %7
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl5Image6unlockEv(%"class.egl::Image"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface14unlockExternalEv(%"class.sw::Surface"* %2) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl5Image13destroySharedEv(%"class.egl::Image"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 7
  store i8 0, i8* %2, align 4
  %3 = bitcast %"class.egl::Image"* %0 to void (%"class.egl::Image"*)***
  %4 = load void (%"class.egl::Image"*)**, void (%"class.egl::Image"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %4, i64 7
  %6 = load void (%"class.egl::Image"*)*, void (%"class.egl::Image"*)** %5, align 8
  tail call void %6(%"class.egl::Image"* %0) #12
  ret void
}

; Function Attrs: optsize
declare void @_ZN2gl6Object6addRefEv(%"class.gl::Object"*) unnamed_addr #5

; Function Attrs: optsize
declare dereferenceable(2) %"class.sw::half"* @_ZN2sw4halfaSES0_(%"class.sw::half"*, i16) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw4halfC1Ef(%"class.sw::half"*, float) unnamed_addr #5

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl5ImageC2EPNS_7TextureEiii(%"class.egl::Image"*, %"class.egl::Texture"*, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %6 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  %7 = bitcast %"class.egl::Texture"* %1 to %"class.sw::Resource"* (%"class.egl::Texture"*)***
  %8 = load %"class.sw::Resource"* (%"class.egl::Texture"*)**, %"class.sw::Resource"* (%"class.egl::Texture"*)*** %7, align 8
  %9 = getelementptr inbounds %"class.sw::Resource"* (%"class.egl::Texture"*)*, %"class.sw::Resource"* (%"class.egl::Texture"*)** %8, i64 5
  %10 = load %"class.sw::Resource"* (%"class.egl::Texture"*)*, %"class.sw::Resource"* (%"class.egl::Texture"*)** %9, align 8
  %11 = tail call %"class.sw::Resource"* %10(%"class.egl::Texture"* %1) #12
  %12 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %4) #11
  tail call void @_ZN2sw7SurfaceC2EPNS_8ResourceEiiiiiNS_6FormatEbbi(%"class.sw::Surface"* %6, %"class.sw::Resource"* %11, i32 %2, i32 %3, i32 1, i32 0, i32 1, i32 %12, i1 zeroext true, i1 zeroext true, i32 0) #12
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 2
  %14 = bitcast %"class.gl::Object.base"* %13 to %"class.gl::Object"*
  tail call void @_ZN2gl6ObjectC2Ev(%"class.gl::Object"* %14) #12
  %15 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %15, align 8
  %16 = getelementptr inbounds %"class.gl::Object.base", %"class.gl::Object.base"* %13, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %16, align 8
  %17 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 3
  store i32 %2, i32* %17, align 4
  %18 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 4
  store i32 %3, i32* %18, align 8
  %19 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 5
  store i32 1, i32* %19, align 4
  %20 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  store i32 %4, i32* %20, align 8
  %21 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  store %"class.egl::Texture"* %1, %"class.egl::Texture"** %21, align 8
  %22 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 7
  store i8 0, i8* %22, align 4
  tail call void @_ZN2gl6Object6addRefEv(%"class.gl::Object"* %14) #12
  %23 = bitcast %"class.egl::Texture"* %1 to %"class.gl::Object"*
  %24 = bitcast %"class.egl::Texture"* %1 to void (%"class.gl::Object"*)***
  %25 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %24, align 8
  %26 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %25, align 8
  tail call void %26(%"class.gl::Object"* %23) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl19ImageImplementationD2Ev(%"class.egl::ImageImplementation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ImageImplementation", %"class.egl::ImageImplementation"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.egl::ImageImplementation", %"class.egl::ImageImplementation"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.egl::ImageImplementation"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface4syncEv(%"class.sw::Surface"* %4) #12
  %5 = getelementptr inbounds %"class.egl::ImageImplementation", %"class.egl::ImageImplementation"* %0, i64 0, i32 0
  tail call void @_ZN3egl5ImageD2Ev(%"class.egl::Image"* %5) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl19ImageImplementationD0Ev(%"class.egl::ImageImplementation"*) unnamed_addr #3 comdat align 2 {
  tail call void @_ZN3egl19ImageImplementationD2Ev(%"class.egl::ImageImplementation"* %0) #12
  %2 = bitcast %"class.egl::ImageImplementation"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8* @_ZN3egl19ImageImplementation12lockInternalEiiiN2sw4LockENS1_8AccessorE(%"class.egl::ImageImplementation"*, i32, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %7 = bitcast %"class.egl::ImageImplementation"* %0 to %"class.sw::Surface"*
  %8 = tail call i8* @_ZN2sw7Surface12lockInternalEiiiNS_4LockENS_8AccessorE(%"class.sw::Surface"* %7, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #12
  ret i8* %8
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl19ImageImplementation14unlockInternalEv(%"class.egl::ImageImplementation"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.egl::ImageImplementation"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface14unlockInternalEv(%"class.sw::Surface"* %2) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl19ImageImplementation7releaseEv(%"class.egl::ImageImplementation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ImageImplementation", %"class.egl::ImageImplementation"* %0, i64 0, i32 0
  tail call void @_ZN3egl5Image7releaseEv(%"class.egl::Image"* %2) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZThn200_N3egl19ImageImplementation7releaseEv(%"class.egl::ImageImplementation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ImageImplementation", %"class.egl::ImageImplementation"* %0, i64 -1, i32 0, i32 0, i32 2, i32 6
  %3 = bitcast i32* %2 to %"class.egl::Image"*
  tail call void @_ZN3egl5Image7releaseEv(%"class.egl::Image"* %3) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZThn200_N3egl19ImageImplementationD1Ev(%"class.egl::ImageImplementation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ImageImplementation", %"class.egl::ImageImplementation"* %0, i64 -1, i32 0, i32 0, i32 2, i32 6
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 50
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast i32* %2 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface4syncEv(%"class.sw::Surface"* %6) #12
  %7 = bitcast i32* %2 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageD2Ev(%"class.egl::Image"* %7) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZThn200_N3egl19ImageImplementationD0Ev(%"class.egl::ImageImplementation"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ImageImplementation", %"class.egl::ImageImplementation"* %0, i64 -1, i32 0, i32 0, i32 2, i32 6
  %3 = bitcast i32* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds i32, i32* %2, i64 50
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl19ImageImplementationE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast i32* %2 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface4syncEv(%"class.sw::Surface"* %6) #12
  %7 = bitcast i32* %2 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageD2Ev(%"class.egl::Image"* %7) #12
  %8 = bitcast i32* %2 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: optsize
declare void @_ZN2sw7SurfaceC2EPNS_8ResourceEiiiiiNS_6FormatEbbi(%"class.sw::Surface"*, %"class.sw::Resource"*, i32, i32, i32, i32, i32, i32, i1 zeroext, i1 zeroext, i32) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2gl6ObjectC2Ev(%"class.gl::Object"*) unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw7Surface4syncEv(%"class.sw::Surface"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nounwind optsize
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl5ImageC2EPNS_7TextureEiiiii(%"class.egl::Image"*, %"class.egl::Texture"*, i32, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %8 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  %9 = bitcast %"class.egl::Texture"* %1 to %"class.sw::Resource"* (%"class.egl::Texture"*)***
  %10 = load %"class.sw::Resource"* (%"class.egl::Texture"*)**, %"class.sw::Resource"* (%"class.egl::Texture"*)*** %9, align 8
  %11 = getelementptr inbounds %"class.sw::Resource"* (%"class.egl::Texture"*)*, %"class.sw::Resource"* (%"class.egl::Texture"*)** %10, i64 5
  %12 = load %"class.sw::Resource"* (%"class.egl::Texture"*)*, %"class.sw::Resource"* (%"class.egl::Texture"*)** %11, align 8
  %13 = tail call %"class.sw::Resource"* %12(%"class.egl::Texture"* %1) #12
  %14 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %6) #11
  tail call void @_ZN2sw7SurfaceC2EPNS_8ResourceEiiiiiNS_6FormatEbbi(%"class.sw::Surface"* %8, %"class.sw::Resource"* %13, i32 %2, i32 %3, i32 %4, i32 %5, i32 1, i32 %14, i1 zeroext true, i1 zeroext true, i32 0) #12
  %15 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 2
  %16 = bitcast %"class.gl::Object.base"* %15 to %"class.gl::Object"*
  tail call void @_ZN2gl6ObjectC2Ev(%"class.gl::Object"* %16) #12
  %17 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %17, align 8
  %18 = getelementptr inbounds %"class.gl::Object.base", %"class.gl::Object.base"* %15, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 3
  store i32 %2, i32* %19, align 4
  %20 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 4
  store i32 %3, i32* %20, align 8
  %21 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 5
  store i32 %4, i32* %21, align 4
  %22 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  store i32 %6, i32* %22, align 8
  %23 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  store %"class.egl::Texture"* %1, %"class.egl::Texture"** %23, align 8
  %24 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 7
  store i8 0, i8* %24, align 4
  tail call void @_ZN2gl6Object6addRefEv(%"class.gl::Object"* %16) #12
  %25 = bitcast %"class.egl::Texture"* %1 to %"class.gl::Object"*
  %26 = bitcast %"class.egl::Texture"* %1 to void (%"class.gl::Object"*)***
  %27 = load void (%"class.gl::Object"*)**, void (%"class.gl::Object"*)*** %26, align 8
  %28 = load void (%"class.gl::Object"*)*, void (%"class.gl::Object"*)** %27, align 8
  tail call void %28(%"class.gl::Object"* %25) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl5ImageC2Eiiii(%"class.egl::Image"*, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %6 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  %7 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %3) #11
  tail call void @_ZN2sw7SurfaceC2EPNS_8ResourceEiiiiiNS_6FormatEbbi(%"class.sw::Surface"* %6, %"class.sw::Resource"* null, i32 %1, i32 %2, i32 1, i32 0, i32 1, i32 %7, i1 zeroext true, i1 zeroext true, i32 %4) #12
  %8 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 2
  %9 = bitcast %"class.gl::Object.base"* %8 to %"class.gl::Object"*
  tail call void @_ZN2gl6ObjectC2Ev(%"class.gl::Object"* %9) #12
  %10 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %10, align 8
  %11 = getelementptr inbounds %"class.gl::Object.base", %"class.gl::Object.base"* %8, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 3
  store i32 %1, i32* %12, align 4
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 4
  store i32 %2, i32* %13, align 8
  %14 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 5
  store i32 1, i32* %14, align 4
  %15 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  store i32 %3, i32* %15, align 8
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  store %"class.egl::Texture"* null, %"class.egl::Texture"** %16, align 8
  %17 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 7
  store i8 1, i8* %17, align 4
  tail call void @_ZN2gl6Object6addRefEv(%"class.gl::Object"* %9) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl5ImageC2Eiiiib(%"class.egl::Image"*, i32, i32, i32, i32, i1 zeroext) unnamed_addr #3 comdat align 2 {
  %7 = bitcast %"class.egl::Image"* %0 to %"class.sw::Surface"*
  %8 = tail call i32 @_ZN2gl20SelectInternalFormatEi(i32 %3) #11
  tail call void @_ZN2sw7SurfaceC2EPNS_8ResourceEiiiiiNS_6FormatEbbi(%"class.sw::Surface"* %7, %"class.sw::Resource"* null, i32 %1, i32 %2, i32 1, i32 0, i32 %4, i32 %8, i1 zeroext %5, i1 zeroext true, i32 0) #12
  %9 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 2
  %10 = bitcast %"class.gl::Object.base"* %9 to %"class.gl::Object"*
  tail call void @_ZN2gl6ObjectC2Ev(%"class.gl::Object"* %10) #12
  %11 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %11, align 8
  %12 = getelementptr inbounds %"class.gl::Object.base", %"class.gl::Object.base"* %9, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl5ImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %12, align 8
  %13 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 3
  store i32 %1, i32* %13, align 4
  %14 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 4
  store i32 %2, i32* %14, align 8
  %15 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 5
  store i32 1, i32* %15, align 4
  %16 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 6
  store i32 %3, i32* %16, align 8
  %17 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 8
  store %"class.egl::Texture"* null, %"class.egl::Texture"** %17, align 8
  %18 = getelementptr inbounds %"class.egl::Image", %"class.egl::Image"* %0, i64 0, i32 7
  store i8 0, i8* %18, align 4
  tail call void @_ZN2gl6Object6addRefEv(%"class.gl::Object"* %10) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i32 @_ZN3egl17ClientBufferImage29getClientBufferInternalFormatEN2sw6FormatE(i32) local_unnamed_addr #3 comdat align 2 {
  switch i32 %0, label %7 [
    i32 5, label %8
    i32 36, label %2
    i32 18, label %3
    i32 19, label %4
    i32 7, label %5
    i32 77, label %6
  ]

2:                                                ; preds = %1
  br label %8

3:                                                ; preds = %1
  br label %8

4:                                                ; preds = %1
  br label %8

5:                                                ; preds = %1
  br label %8

6:                                                ; preds = %1
  br label %8

7:                                                ; preds = %1
  br label %8

8:                                                ; preds = %1, %7, %6, %5, %4, %3, %2
  %9 = phi i32 [ 0, %7 ], [ 34842, %6 ], [ 33332, %5 ], [ 37793, %4 ], [ 32849, %3 ], [ 33323, %2 ], [ 33321, %1 ]
  ret i32 %9
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl17ClientBufferImageD2Ev(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0, i32 2, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = bitcast %"class.egl::ClientBufferImage"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface4syncEv(%"class.sw::Surface"* %4) #12
  %5 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0
  tail call void @_ZN3egl5ImageD2Ev(%"class.egl::Image"* %5) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl17ClientBufferImageD0Ev(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  tail call void @_ZN3egl17ClientBufferImageD2Ev(%"class.egl::ClientBufferImage"* %0) #12
  %2 = bitcast %"class.egl::ClientBufferImage"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #13
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8* @_ZN3egl17ClientBufferImage12lockInternalEiiiN2sw4LockENS1_8AccessorE(%"class.egl::ClientBufferImage"*, i32, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %7 = bitcast %"class.egl::ClientBufferImage"* %0 to %"class.sw::Surface"*
  %8 = tail call i8* @_ZN2sw7Surface12lockInternalEiiiNS_4LockENS_8AccessorE(%"class.sw::Surface"* %7, i32 %1, i32 %2, i32 %3, i32 %4, i32 %5) #12
  %9 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 1
  %10 = tail call i8* @_ZN3egl12ClientBuffer4lockEiii(%"class.egl::ClientBuffer"* %9, i32 %1, i32 %2, i32 %3) #11
  ret i8* %10
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl17ClientBufferImage14unlockInternalEv(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.egl::ClientBufferImage"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface14unlockInternalEv(%"class.sw::Surface"* %2) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3egl17ClientBufferImage12requiresSyncEv(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden i8* @_ZN3egl17ClientBufferImage4lockEiiiN2sw4LockE(%"class.egl::ClientBufferImage"*, i32, i32, i32, i32) unnamed_addr #3 comdat align 2 {
  %6 = bitcast %"class.egl::ClientBufferImage"* %0 to %"class.sw::Surface"*
  %7 = tail call i8* @_ZN2sw7Surface12lockExternalEiiiNS_4LockENS_8AccessorE(%"class.sw::Surface"* %6, i32 %1, i32 %2, i32 %3, i32 %4, i32 0) #12
  %8 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 1
  %9 = tail call i8* @_ZN3egl12ClientBuffer4lockEiii(%"class.egl::ClientBuffer"* %8, i32 %1, i32 %2, i32 %3) #11
  ret i8* %9
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl17ClientBufferImage6unlockEv(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  %2 = bitcast %"class.egl::ClientBufferImage"* %0 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface14unlockExternalEv(%"class.sw::Surface"* %2) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZN3egl17ClientBufferImage7releaseEv(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 0, i32 0
  tail call void @_ZN3egl5Image7releaseEv(%"class.egl::Image"* %2) #11
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZThn200_N3egl17ClientBufferImage7releaseEv(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"struct.sw::Surface::Buffer"* %2 to %"class.egl::Image"*
  tail call void @_ZN3egl5Image7releaseEv(%"class.egl::Image"* %3) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZThn200_N3egl17ClientBufferImageD1Ev(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"struct.sw::Surface::Buffer"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer"* %2, i64 3, i32 8
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %"struct.sw::Surface::Buffer"* %2 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface4syncEv(%"class.sw::Surface"* %6) #12
  %7 = bitcast %"struct.sw::Surface::Buffer"* %2 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageD2Ev(%"class.egl::Image"* %7) #12
  ret void
}

; Function Attrs: nounwind optsize ssp uwtable
define linkonce_odr hidden void @_ZThn200_N3egl17ClientBufferImageD0Ev(%"class.egl::ClientBufferImage"*) unnamed_addr #3 comdat align 2 {
  %2 = getelementptr inbounds %"class.egl::ClientBufferImage", %"class.egl::ClientBufferImage"* %0, i64 -1, i32 0, i32 0, i32 3
  %3 = bitcast %"struct.sw::Surface::Buffer"* %2 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"struct.sw::Surface::Buffer", %"struct.sw::Surface::Buffer"* %2, i64 3, i32 8
  %5 = bitcast i32* %4 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [6 x i8*] }, { [11 x i8*], [6 x i8*] }* @_ZTVN3egl17ClientBufferImageE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = bitcast %"struct.sw::Surface::Buffer"* %2 to %"class.sw::Surface"*
  tail call void @_ZN2sw7Surface4syncEv(%"class.sw::Surface"* %6) #12
  %7 = bitcast %"struct.sw::Surface::Buffer"* %2 to %"class.egl::Image"*
  tail call void @_ZN3egl5ImageD2Ev(%"class.egl::Image"* %7) #12
  %8 = bitcast %"struct.sw::Surface::Buffer"* %2 to i8*
  tail call void @_ZdlPv(i8* %8) #13
  ret void
}

; Function Attrs: optsize
declare i8* @_ZN2sw7Surface12lockExternalEiiiNS_4LockENS_8AccessorE(%"class.sw::Surface"*, i32, i32, i32, i32, i32) local_unnamed_addr #5

; Function Attrs: optsize
declare void @_ZN2sw7Surface14unlockExternalEv(%"class.sw::Surface"*) local_unnamed_addr #5

attributes #0 = { norecurse nounwind optsize readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { norecurse nounwind optsize readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind optsize ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { cold noreturn nounwind }
attributes #10 = { nobuiltin nounwind optsize "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { optsize }
attributes #12 = { nounwind optsize }
attributes #13 = { builtin nounwind optsize }
attributes #14 = { noreturn nounwind }
attributes #15 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
