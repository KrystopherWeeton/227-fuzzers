; ModuleID = '../../third_party/pdfium/core/fpdfapi/page/cpdf_pathobject.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/page/cpdf_pathobject.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_PathObject = type { %class.CPDF_PageObject, i8, i8, %class.CPDF_Path, %class.CFX_Matrix }
%class.CPDF_PageObject = type { %class.CPDF_GraphicStates, %class.CFX_FloatRect, %class.CPDF_ContentMarks, i8, i32 }
%class.CPDF_GraphicStates = type { i32 (...)**, %class.CPDF_ClipPath, %class.CFX_GraphState, %class.CPDF_ColorState, %class.CPDF_TextState, %class.CPDF_GeneralState }
%class.CPDF_ClipPath = type { %"class.fxcrt::SharedCopyOnWrite" }
%"class.fxcrt::SharedCopyOnWrite" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.CPDF_ClipPath::PathData"* }
%"class.CPDF_ClipPath::PathData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector", %"class.std::__1::vector.3" }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.0" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.0" = type { %"struct.std::__1::__compressed_pair_elem.1" }
%"struct.std::__1::__compressed_pair_elem.1" = type { %"struct.std::__1::pair"* }
%"class.std::__1::vector.3" = type { %"class.std::__1::__vector_base.4" }
%"class.std::__1::__vector_base.4" = type { %"class.std::__1::unique_ptr.5"*, %"class.std::__1::unique_ptr.5"*, %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::unique_ptr.5" = type opaque
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.std::__1::unique_ptr.5"* }
%class.CFX_GraphState = type { %"class.fxcrt::SharedCopyOnWrite.12" }
%"class.fxcrt::SharedCopyOnWrite.12" = type { %"class.fxcrt::RetainPtr.13" }
%"class.fxcrt::RetainPtr.13" = type { %"class.std::__1::unique_ptr.14" }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %class.CFX_RetainableGraphStateData* }
%class.CFX_RetainableGraphStateData = type { %"class.fxcrt::Retainable", %class.CFX_GraphStateData }
%class.CFX_GraphStateData = type { i8, i8, float, float, float, %"class.std::__1::vector.17" }
%"class.std::__1::vector.17" = type { %"class.std::__1::__vector_base.18" }
%"class.std::__1::__vector_base.18" = type { float*, float*, %"class.std::__1::__compressed_pair.19" }
%"class.std::__1::__compressed_pair.19" = type { %"struct.std::__1::__compressed_pair_elem.20" }
%"struct.std::__1::__compressed_pair_elem.20" = type { float* }
%class.CPDF_ColorState = type { %"class.fxcrt::SharedCopyOnWrite.26" }
%"class.fxcrt::SharedCopyOnWrite.26" = type { %"class.fxcrt::RetainPtr.27" }
%"class.fxcrt::RetainPtr.27" = type { %"class.std::__1::unique_ptr.28" }
%"class.std::__1::unique_ptr.28" = type { %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { %"class.CPDF_ColorState::ColorData"* }
%"class.CPDF_ColorState::ColorData" = type { %"class.fxcrt::Retainable", i32, i32, %class.CPDF_Color, %class.CPDF_Color }
%class.CPDF_Color = type { %"class.std::__1::vector.17", %"class.std::__1::unique_ptr.31", %"class.fxcrt::RetainPtr.35" }
%"class.std::__1::unique_ptr.31" = type { %"class.std::__1::__compressed_pair.32" }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %class.PatternValue* }
%class.PatternValue = type opaque
%"class.fxcrt::RetainPtr.35" = type { %"class.std::__1::unique_ptr.36" }
%"class.std::__1::unique_ptr.36" = type { %"class.std::__1::__compressed_pair.37" }
%"class.std::__1::__compressed_pair.37" = type { %"struct.std::__1::__compressed_pair_elem.38" }
%"struct.std::__1::__compressed_pair_elem.38" = type { %class.CPDF_ColorSpace* }
%class.CPDF_ColorSpace = type opaque
%class.CPDF_TextState = type { %"class.fxcrt::SharedCopyOnWrite.43" }
%"class.fxcrt::SharedCopyOnWrite.43" = type { %"class.fxcrt::RetainPtr.44" }
%"class.fxcrt::RetainPtr.44" = type { %"class.std::__1::unique_ptr.45" }
%"class.std::__1::unique_ptr.45" = type { %"class.std::__1::__compressed_pair.46" }
%"class.std::__1::__compressed_pair.46" = type { %"struct.std::__1::__compressed_pair_elem.47" }
%"struct.std::__1::__compressed_pair_elem.47" = type { %"class.CPDF_TextState::TextData"* }
%"class.CPDF_TextState::TextData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::RetainPtr.48", %"class.fxcrt::UnownedPtr", float, float, float, i32, [4 x float], [4 x float] }
%"class.fxcrt::RetainPtr.48" = type { %"class.std::__1::unique_ptr.49" }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.CPDF_Font* }
%class.CPDF_Font = type opaque
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type opaque
%class.CPDF_GeneralState = type { %"class.fxcrt::SharedCopyOnWrite.56" }
%"class.fxcrt::SharedCopyOnWrite.56" = type { %"class.fxcrt::RetainPtr.57" }
%"class.fxcrt::RetainPtr.57" = type { %"class.std::__1::unique_ptr.58" }
%"class.std::__1::unique_ptr.58" = type { %"class.std::__1::__compressed_pair.59" }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"class.CPDF_GeneralState::StateData"* }
%"class.CPDF_GeneralState::StateData" = type { %"class.fxcrt::Retainable", %"class.fxcrt::ByteString", i32, %"class.fxcrt::RetainPtr.67", %class.CFX_Matrix, float, float, %"class.fxcrt::RetainPtr.73", %"class.fxcrt::RetainPtr.79", %class.CFX_Matrix, i32, i8, i8, i8, i8, i8, i32, %"class.fxcrt::RetainPtr.73", %"class.fxcrt::RetainPtr.73", %"class.fxcrt::RetainPtr.73", float, float }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.61" }
%"class.fxcrt::RetainPtr.61" = type { %"class.std::__1::unique_ptr.62" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.fxcrt::RetainPtr.67" = type { %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.CPDF_Object* }
%class.CPDF_Object = type opaque
%"class.fxcrt::RetainPtr.79" = type { %"class.std::__1::unique_ptr.80" }
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.CPDF_TransferFunc* }
%class.CPDF_TransferFunc = type opaque
%"class.fxcrt::RetainPtr.73" = type { %"class.std::__1::unique_ptr.74" }
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_Object* }
%class.CFX_FloatRect = type { float, float, float, float }
%class.CPDF_ContentMarks = type { %"class.fxcrt::RetainPtr.87" }
%"class.fxcrt::RetainPtr.87" = type { %"class.std::__1::unique_ptr.88" }
%"class.std::__1::unique_ptr.88" = type { %"class.std::__1::__compressed_pair.89" }
%"class.std::__1::__compressed_pair.89" = type { %"struct.std::__1::__compressed_pair_elem.90" }
%"struct.std::__1::__compressed_pair_elem.90" = type { %"class.CPDF_ContentMarks::MarkData"* }
%"class.CPDF_ContentMarks::MarkData" = type { %"class.fxcrt::Retainable", %"class.std::__1::vector.91" }
%"class.std::__1::vector.91" = type { %"class.std::__1::__vector_base.92" }
%"class.std::__1::__vector_base.92" = type { %"class.fxcrt::RetainPtr.93"*, %"class.fxcrt::RetainPtr.93"*, %"class.std::__1::__compressed_pair.94" }
%"class.fxcrt::RetainPtr.93" = type opaque
%"class.std::__1::__compressed_pair.94" = type { %"struct.std::__1::__compressed_pair_elem.95" }
%"struct.std::__1::__compressed_pair_elem.95" = type { %"class.fxcrt::RetainPtr.93"* }
%class.CPDF_Path = type { %"class.fxcrt::SharedCopyOnWrite.101" }
%"class.fxcrt::SharedCopyOnWrite.101" = type { %"class.fxcrt::RetainPtr.102" }
%"class.fxcrt::RetainPtr.102" = type { %"class.std::__1::unique_ptr.103" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %class.CFX_RetainablePathData* }
%class.CFX_RetainablePathData = type { %"class.fxcrt::Retainable", %class.CFX_PathData }
%class.CFX_PathData = type { %"class.std::__1::vector.106" }
%"class.std::__1::vector.106" = type { %"class.std::__1::__vector_base.107" }
%"class.std::__1::__vector_base.107" = type { %class.FX_PATHPOINT*, %class.FX_PATHPOINT*, %"class.std::__1::__compressed_pair.108" }
%class.FX_PATHPOINT = type <{ %class.CFX_PTemplate, i8, i8, [2 x i8] }>
%class.CFX_PTemplate = type { float, float }
%"class.std::__1::__compressed_pair.108" = type { %"struct.std::__1::__compressed_pair_elem.109" }
%"struct.std::__1::__compressed_pair_elem.109" = type { %class.FX_PATHPOINT* }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%class.CPDF_TextObject = type opaque
%class.CPDF_ImageObject = type opaque
%class.CPDF_ShadingObject = type opaque
%class.CPDF_FormObject = type opaque

@_ZTV15CPDF_PathObject = hidden unnamed_addr constant { [21 x i8*] } { [21 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_PathObject*)* @_ZN15CPDF_PathObjectD2Ev to i8*), i8* bitcast (void (%class.CPDF_PathObject*)* @_ZN15CPDF_PathObjectD0Ev to i8*), i8* bitcast (i32 (%class.CPDF_PathObject*)* @_ZNK15CPDF_PathObject7GetTypeEv to i8*), i8* bitcast (void (%class.CPDF_PathObject*, %class.CFX_Matrix*)* @_ZN15CPDF_PathObject9TransformERK10CFX_Matrix to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsTextEv to i8*), i8* bitcast (i1 (%class.CPDF_PathObject*)* @_ZNK15CPDF_PathObject6IsPathEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7IsImageEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9IsShadingEv to i8*), i8* bitcast (i1 (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6IsFormEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_TextObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsTextEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PathObject*)* @_ZN15CPDF_PathObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_PathObject* (%class.CPDF_PathObject*)* @_ZNK15CPDF_PathObject6AsPathEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ImageObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject7AsImageEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_ShadingObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject9AsShadingEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZN15CPDF_PageObject6AsFormEv to i8*), i8* bitcast (%class.CPDF_FormObject* (%class.CPDF_PageObject*)* @_ZNK15CPDF_PageObject6AsFormEv to i8*)] }, align 8

@_ZN15CPDF_PathObjectC1Ei = hidden unnamed_addr alias void (%class.CPDF_PathObject*, i32), void (%class.CPDF_PathObject*, i32)* @_ZN15CPDF_PathObjectC2Ei
@_ZN15CPDF_PathObjectC1Ev = hidden unnamed_addr alias void (%class.CPDF_PathObject*), void (%class.CPDF_PathObject*)* @_ZN15CPDF_PathObjectC2Ev
@_ZN15CPDF_PathObjectD1Ev = hidden unnamed_addr alias void (%class.CPDF_PathObject*), void (%class.CPDF_PathObject*)* @_ZN15CPDF_PathObjectD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PathObjectC2Ei(%class.CPDF_PathObject*, i32) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* %3, i32 %1) #6
  %4 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_PathObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %4, align 8
  %5 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 1
  store i8 0, i8* %5, align 8
  %6 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 2
  store i8 0, i8* %6, align 1
  %7 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 3
  tail call void @_ZN9CPDF_PathC1Ev(%class.CPDF_Path* %7) #6
  %8 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 0
  %9 = bitcast float* %8 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %9, align 4
  %10 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 4
  store float 0.000000e+00, float* %10, align 4
  %11 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 5
  store float 0.000000e+00, float* %11, align 4
  ret void
}

declare void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject*, i32) unnamed_addr #1

declare void @_ZN9CPDF_PathC1Ev(%class.CPDF_Path*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PathObjectC2Ev(%class.CPDF_PathObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectC2Ei(%class.CPDF_PageObject* %2, i32 -1) #6
  %3 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_PathObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 1
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 2
  store i8 0, i8* %5, align 1
  %6 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 3
  tail call void @_ZN9CPDF_PathC1Ev(%class.CPDF_Path* %6) #6
  %7 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 0
  %8 = bitcast float* %7 to <4 x float>*
  store <4 x float> <float 1.000000e+00, float 0.000000e+00, float 0.000000e+00, float 1.000000e+00>, <4 x float>* %8, align 4
  %9 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 4
  store float 0.000000e+00, float* %9, align 4
  %10 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 5
  store float 0.000000e+00, float* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PathObjectD2Ev(%class.CPDF_PathObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_PathObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 3
  tail call void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path* %3) #6
  %4 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject* %4) #6
  ret void
}

; Function Attrs: nounwind
declare void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PathObjectD0Ev(%class.CPDF_PathObject*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [21 x i8*] }, { [21 x i8*] }* @_ZTV15CPDF_PathObject, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 3
  tail call void @_ZN9CPDF_PathD1Ev(%class.CPDF_Path* %3) #6
  %4 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0
  tail call void @_ZN15CPDF_PageObjectD2Ev(%class.CPDF_PageObject* %4) #6
  %5 = bitcast %class.CPDF_PathObject* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #7
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK15CPDF_PathObject7GetTypeEv(%class.CPDF_PathObject* nocapture readnone) unnamed_addr #4 align 2 {
  ret i32 2
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PathObject9TransformERK10CFX_Matrix(%class.CPDF_PathObject*, %class.CFX_Matrix* nocapture readonly dereferenceable(24)) unnamed_addr #0 align 2 {
  %3 = alloca %class.CFX_FloatRect, align 8
  %4 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4
  %5 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %4, i64 0, i32 0
  %6 = load float, float* %5, align 4, !noalias !2
  %7 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 1
  %8 = load float, float* %7, align 4, !noalias !2
  %9 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 2
  %10 = bitcast %class.CFX_Matrix* %1 to <2 x float>*
  %11 = load <2 x float>, <2 x float>* %10, align 4, !noalias !2
  %12 = shufflevector <2 x float> %11, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %13 = bitcast float* %9 to <2 x float>*
  %14 = load <2 x float>, <2 x float>* %13, align 4, !noalias !2
  %15 = shufflevector <2 x float> %14, <2 x float> undef, <4 x i32> <i32 0, i32 1, i32 undef, i32 undef>
  %16 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 2
  %17 = load float, float* %16, align 4, !noalias !2
  %18 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 3
  %19 = load float, float* %18, align 4, !noalias !2
  %20 = insertelement <4 x float> undef, float %6, i32 0
  %21 = shufflevector <4 x float> %20, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %22 = extractelement <2 x float> %11, i32 0
  %23 = extractelement <2 x float> %11, i32 1
  %24 = shufflevector <4 x float> %21, <4 x float> %12, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %25 = insertelement <4 x float> undef, float %22, i32 0
  %26 = insertelement <4 x float> %25, float %23, i32 1
  %27 = insertelement <4 x float> %26, float %17, i32 2
  %28 = insertelement <4 x float> %27, float %17, i32 3
  %29 = fmul <4 x float> %24, %28
  %30 = insertelement <4 x float> undef, float %8, i32 0
  %31 = shufflevector <4 x float> %30, <4 x float> undef, <4 x i32> <i32 0, i32 0, i32 undef, i32 undef>
  %32 = extractelement <2 x float> %14, i32 0
  %33 = extractelement <2 x float> %14, i32 1
  %34 = shufflevector <4 x float> %31, <4 x float> %15, <4 x i32> <i32 0, i32 1, i32 4, i32 5>
  %35 = insertelement <4 x float> undef, float %32, i32 0
  %36 = insertelement <4 x float> %35, float %33, i32 1
  %37 = insertelement <4 x float> %36, float %19, i32 2
  %38 = insertelement <4 x float> %37, float %19, i32 3
  %39 = fmul <4 x float> %34, %38
  %40 = fadd <4 x float> %29, %39
  %41 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 4
  %42 = load float, float* %41, align 4, !noalias !2
  %43 = fmul float %22, %42
  %44 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4, i32 5
  %45 = load float, float* %44, align 4, !noalias !2
  %46 = fmul float %32, %45
  %47 = fadd float %43, %46
  %48 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 4
  %49 = load float, float* %48, align 4, !noalias !2
  %50 = fadd float %49, %47
  %51 = fmul float %23, %42
  %52 = fmul float %33, %45
  %53 = fadd float %51, %52
  %54 = getelementptr inbounds %class.CFX_Matrix, %class.CFX_Matrix* %1, i64 0, i32 5
  %55 = load float, float* %54, align 4, !noalias !2
  %56 = fadd float %53, %55
  %57 = bitcast %class.CFX_Matrix* %4 to <4 x float>*
  store <4 x float> %40, <4 x float>* %57, align 4
  store float %50, float* %41, align 4
  store float %56, float* %44, align 4
  %58 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 3
  %59 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %58, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %59, align 8
  %61 = icmp eq %class.CFX_RetainablePathData* %60, null
  br i1 %61, label %99, label %62

62:                                               ; preds = %2
  %63 = bitcast %class.CFX_FloatRect* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %63) #6
  %64 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %3, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 0, i64 16, i1 false) #6
  %65 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 0, i32 2
  %66 = tail call float @_ZNK14CFX_GraphState12GetLineWidthEv(%class.CFX_GraphState* %65) #6
  %67 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 1
  %68 = load i8, i8* %67, align 8, !range !5
  %69 = icmp ne i8 %68, 0
  %70 = fcmp une float %66, 0.000000e+00
  %71 = and i1 %70, %69
  br i1 %71, label %72, label %79

72:                                               ; preds = %62
  %73 = tail call float @_ZNK14CFX_GraphState13GetMiterLimitEv(%class.CFX_GraphState* %65) #6
  %74 = tail call { <2 x float>, <2 x float> } @_ZNK9CPDF_Path27GetBoundingBoxForStrokePathEff(%class.CPDF_Path* %58, float %66, float %73) #6
  %75 = extractvalue { <2 x float>, <2 x float> } %74, 0
  %76 = extractvalue { <2 x float>, <2 x float> } %74, 1
  %77 = bitcast %class.CFX_FloatRect* %3 to <2 x float>*
  store <2 x float> %75, <2 x float>* %77, align 8
  %78 = bitcast float* %64 to <2 x float>*
  store <2 x float> %76, <2 x float>* %78, align 8
  br label %85

79:                                               ; preds = %62
  %80 = tail call { <2 x float>, <2 x float> } @_ZNK9CPDF_Path14GetBoundingBoxEv(%class.CPDF_Path* %58) #6
  %81 = extractvalue { <2 x float>, <2 x float> } %80, 0
  %82 = extractvalue { <2 x float>, <2 x float> } %80, 1
  %83 = bitcast %class.CFX_FloatRect* %3 to <2 x float>*
  store <2 x float> %81, <2 x float>* %83, align 8
  %84 = bitcast float* %64 to <2 x float>*
  store <2 x float> %82, <2 x float>* %84, align 8
  br label %85

85:                                               ; preds = %79, %72
  %86 = phi <2 x float>* [ %84, %79 ], [ %78, %72 ]
  %87 = phi <2 x float>* [ %83, %79 ], [ %77, %72 ]
  %88 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %4, %class.CFX_FloatRect* nonnull dereferenceable(16) %3) #6
  %89 = extractvalue { <2 x float>, <2 x float> } %88, 0
  %90 = extractvalue { <2 x float>, <2 x float> } %88, 1
  store <2 x float> %89, <2 x float>* %87, align 8
  store <2 x float> %90, <2 x float>* %86, align 8
  %91 = fcmp oeq float %66, 0.000000e+00
  br i1 %91, label %92, label %96

92:                                               ; preds = %85
  %93 = load i8, i8* %67, align 8, !range !5
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* nonnull %3, float 5.000000e-01, float 5.000000e-01) #6
  br label %96

96:                                               ; preds = %95, %92, %85
  %97 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 1
  %98 = bitcast %class.CFX_FloatRect* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %98, i8* nonnull align 8 %63, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %63) #6
  br label %99

99:                                               ; preds = %2, %96
  %100 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 3
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN15CPDF_PathObject15CalcBoundingBoxEv(%class.CPDF_PathObject*) local_unnamed_addr #0 align 2 {
  %2 = alloca %class.CFX_FloatRect, align 8
  %3 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 3
  %4 = getelementptr inbounds %class.CPDF_Path, %class.CPDF_Path* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CFX_RetainablePathData*, %class.CFX_RetainablePathData** %4, align 8
  %6 = icmp eq %class.CFX_RetainablePathData* %5, null
  br i1 %6, label %45, label %7

7:                                                ; preds = %1
  %8 = bitcast %class.CFX_FloatRect* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %8) #6
  %9 = getelementptr inbounds %class.CFX_FloatRect, %class.CFX_FloatRect* %2, i64 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 0, i64 16, i1 false) #6
  %10 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 0, i32 2
  %11 = tail call float @_ZNK14CFX_GraphState12GetLineWidthEv(%class.CFX_GraphState* %10) #6
  %12 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 1
  %13 = load i8, i8* %12, align 8, !range !5
  %14 = icmp ne i8 %13, 0
  %15 = fcmp une float %11, 0.000000e+00
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %24

17:                                               ; preds = %7
  %18 = tail call float @_ZNK14CFX_GraphState13GetMiterLimitEv(%class.CFX_GraphState* %10) #6
  %19 = tail call { <2 x float>, <2 x float> } @_ZNK9CPDF_Path27GetBoundingBoxForStrokePathEff(%class.CPDF_Path* %3, float %11, float %18) #6
  %20 = extractvalue { <2 x float>, <2 x float> } %19, 0
  %21 = extractvalue { <2 x float>, <2 x float> } %19, 1
  %22 = bitcast %class.CFX_FloatRect* %2 to <2 x float>*
  store <2 x float> %20, <2 x float>* %22, align 8
  %23 = bitcast float* %9 to <2 x float>*
  store <2 x float> %21, <2 x float>* %23, align 8
  br label %30

24:                                               ; preds = %7
  %25 = tail call { <2 x float>, <2 x float> } @_ZNK9CPDF_Path14GetBoundingBoxEv(%class.CPDF_Path* %3) #6
  %26 = extractvalue { <2 x float>, <2 x float> } %25, 0
  %27 = extractvalue { <2 x float>, <2 x float> } %25, 1
  %28 = bitcast %class.CFX_FloatRect* %2 to <2 x float>*
  store <2 x float> %26, <2 x float>* %28, align 8
  %29 = bitcast float* %9 to <2 x float>*
  store <2 x float> %27, <2 x float>* %29, align 8
  br label %30

30:                                               ; preds = %24, %17
  %31 = phi <2 x float>* [ %29, %24 ], [ %23, %17 ]
  %32 = phi <2 x float>* [ %28, %24 ], [ %22, %17 ]
  %33 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 4
  %34 = call { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix* %33, %class.CFX_FloatRect* nonnull dereferenceable(16) %2) #6
  %35 = extractvalue { <2 x float>, <2 x float> } %34, 0
  %36 = extractvalue { <2 x float>, <2 x float> } %34, 1
  store <2 x float> %35, <2 x float>* %32, align 8
  store <2 x float> %36, <2 x float>* %31, align 8
  %37 = fcmp oeq float %11, 0.000000e+00
  br i1 %37, label %38, label %42

38:                                               ; preds = %30
  %39 = load i8, i8* %12, align 8, !range !5
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  call void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect* nonnull %2, float 5.000000e-01, float 5.000000e-01) #6
  br label %42

42:                                               ; preds = %38, %41, %30
  %43 = getelementptr inbounds %class.CPDF_PathObject, %class.CPDF_PathObject* %0, i64 0, i32 0, i32 1
  %44 = bitcast %class.CFX_FloatRect* %43 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %44, i8* nonnull align 8 %8, i64 16, i1 false) #6
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %8) #6
  br label %45

45:                                               ; preds = %1, %42
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK15CPDF_PathObject6IsPathEv(%class.CPDF_PathObject* nocapture readnone) unnamed_addr #4 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_PathObject* @_ZN15CPDF_PathObject6AsPathEv(%class.CPDF_PathObject* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_PathObject* %0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden %class.CPDF_PathObject* @_ZNK15CPDF_PathObject6AsPathEv(%class.CPDF_PathObject* readnone returned) unnamed_addr #4 align 2 {
  ret %class.CPDF_PathObject* %0
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #5

declare float @_ZNK14CFX_GraphState12GetLineWidthEv(%class.CFX_GraphState*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK9CPDF_Path27GetBoundingBoxForStrokePathEff(%class.CPDF_Path*, float, float) local_unnamed_addr #1

declare float @_ZNK14CFX_GraphState13GetMiterLimitEv(%class.CFX_GraphState*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #5

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #5

declare { <2 x float>, <2 x float> } @_ZNK9CPDF_Path14GetBoundingBoxEv(%class.CPDF_Path*) local_unnamed_addr #1

declare { <2 x float>, <2 x float> } @_ZNK10CFX_Matrix13TransformRectERK13CFX_FloatRect(%class.CFX_Matrix*, %class.CFX_FloatRect* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN13CFX_FloatRect7InflateEff(%class.CFX_FloatRect*, float, float) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject7IsImageEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject9IsShadingEv(%class.CPDF_PageObject*) unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_PageObject6IsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_TextObject* @_ZN15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_TextObject* @_ZNK15CPDF_PageObject6AsTextEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ImageObject* @_ZN15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ImageObject* @_ZNK15CPDF_PageObject7AsImageEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ShadingObject* @_ZN15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_ShadingObject* @_ZNK15CPDF_PageObject9AsShadingEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_FormObject* @_ZN15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

declare %class.CPDF_FormObject* @_ZNK15CPDF_PageObject6AsFormEv(%class.CPDF_PageObject*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #5

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nounwind }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNK10CFX_MatrixmlERKS_: argument 0"}
!4 = distinct !{!4, !"_ZNK10CFX_MatrixmlERKS_"}
!5 = !{i8 0, i8 2}
