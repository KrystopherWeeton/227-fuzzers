; ModuleID = '../../components/webcrypto/algorithms/asymmetric_key_util.cc'
source_filename = "../../components/webcrypto/algorithms/asymmetric_key_util.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.webcrypto::Status" = type { i32, i32, %"class.std::__1::basic_string" }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.3 }
%union.anon.3 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%struct.evp_pkey_st = type { i32, i32, %union.anon, %struct.evp_pkey_asn1_method_st* }
%union.anon = type { i8* }
%struct.evp_pkey_asn1_method_st = type opaque
%"class.blink::WebCryptoKeyAlgorithm" = type opaque
%"class.blink::WebCryptoKey" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.crypto::OpenSSLErrStackTracer" = type { %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.bssl::internal::StackAllocated" = type { %struct.cbb_st }
%struct.cbb_st = type { %struct.cbb_buffer_st*, %struct.cbb_st*, i64, i8, i8, i8 }
%struct.cbb_buffer_st = type { i8*, i64, i64, i8, i8 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { i8*, i8*, %"class.std::__1::__compressed_pair.5" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem.6" }
%"struct.std::__1::__compressed_pair_elem.6" = type { i8* }
%"class.blink::WebCryptoKeyHandle" = type { i32 (...)** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.webcrypto::CryptoData" = type <{ i8*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %struct.evp_pkey_st* }
%struct.cbs_st = type { i8*, i64 }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_ = comdat any

@.str = private unnamed_addr constant [29 x i8] c"ImportUnverifiedPkeyFromSpki\00", align 1
@.str.1 = private unnamed_addr constant [61 x i8] c"../../components/webcrypto/algorithms/asymmetric_key_util.cc\00", align 1
@.str.2 = private unnamed_addr constant [30 x i8] c"ImportUnverifiedPkeyFromPkcs8\00", align 1
@.str.3 = private unnamed_addr constant [15 x i8] c"ExportPKeySpki\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"ExportPKeyPkcs8\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto24CreateWebCryptoPublicKeyENSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS2_EEEERKN5blink21WebCryptoKeyAlgorithmEbiPNS8_12WebCryptoKeyE(%"class.webcrypto::Status"* noalias sret, %struct.evp_pkey_st*, %"class.blink::WebCryptoKeyAlgorithm"*, i1 zeroext, i32, %"class.blink::WebCryptoKey"*) local_unnamed_addr #0 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.bssl::internal::StackAllocated", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.webcrypto::Status", align 8
  %14 = alloca %"class.blink::WebCryptoKey", align 8
  %15 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #6
  %18 = bitcast %"class.webcrypto::Status"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #6
  %19 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  %20 = bitcast %"class.webcrypto::Status"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false) #6, !noalias !2
  %21 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #6, !noalias !2
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 26) #6, !noalias !2
  %22 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %22, %"class.base::Location"* nonnull dereferenceable(32) %8) #6, !noalias !2
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #6, !noalias !2
  %23 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6, !noalias !2
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8, !noalias !2
  %24 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6, !noalias !2
  store i64 -6148914691236517206, i64* %10, align 8, !noalias !2
  %25 = bitcast %"class.bssl::internal::StackAllocated"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #6, !noalias !2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #6, !noalias !2
  %26 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %11, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %26) #6, !noalias !2
  %27 = call i32 @CBB_init(%struct.cbb_st* nonnull %26, i64 0) #6, !noalias !2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %6
  %30 = call i32 @EVP_marshal_public_key(%struct.cbb_st* nonnull %26, %struct.evp_pkey_st* %1) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = call i32 @CBB_finish(%struct.cbb_st* nonnull %26, i8** nonnull %9, i64* nonnull %10) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32, %29, %6
  call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* nonnull sret %13) #6
  br label %41

36:                                               ; preds = %32
  %37 = load i8*, i8** %9, align 8, !noalias !2
  %38 = load i64, i64* %10, align 8, !noalias !2
  %39 = getelementptr inbounds i8, i8* %37, i64 %38
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* nonnull %12, i8* %37, i8* %39) #6
  %40 = load i8*, i8** %9, align 8, !noalias !2
  call void @OPENSSL_free(i8* %40) #6
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* nonnull sret %13) #6
  br label %41

41:                                               ; preds = %35, %36
  call void @CBB_cleanup(%struct.cbb_st* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #6, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6, !noalias !2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6, !noalias !2
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %22) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6, !noalias !2
  %42 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %13) #6
  br i1 %42, label %43, label %51

43:                                               ; preds = %41
  %44 = bitcast %"class.webcrypto::Status"* %13 to i64*
  %45 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %13, i64 0, i32 2
  %49 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #6
  br label %62

51:                                               ; preds = %41
  %52 = bitcast %"class.blink::WebCryptoKey"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #6
  %53 = call %"class.blink::WebCryptoKeyHandle"* @_ZN9webcrypto25CreateAsymmetricKeyHandleENSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS2_EEEERKNS0_6vectorIhNS0_9allocatorIhEEEE(%struct.evp_pkey_st* %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #6
  call void @_ZN5blink12WebCryptoKey6CreateEPNS_18WebCryptoKeyHandleENS_16WebCryptoKeyTypeEbRKNS_21WebCryptoKeyAlgorithmEi(%"class.blink::WebCryptoKey"* nonnull sret %14, %"class.blink::WebCryptoKeyHandle"* %53, i32 1, i1 zeroext %3, %"class.blink::WebCryptoKeyAlgorithm"* %2, i32 %4) #6
  call void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"* %5, %"class.blink::WebCryptoKey"* nonnull dereferenceable(8) %14) #6
  call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #6
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  %54 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %13, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #7
  br label %62

62:                                               ; preds = %43, %51, %59
  %63 = phi %struct.evp_pkey_st* [ %1, %43 ], [ null, %51 ], [ null, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #6
  %64 = load i8*, i8** %16, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = ptrtoint i8* %64 to i64
  %68 = bitcast i8** %17 to i64*
  store i64 %67, i64* %68, align 8
  call void @_ZdlPv(i8* nonnull %64) #7
  br label %69

69:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6
  %70 = icmp eq %struct.evp_pkey_st* %63, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %69
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %63) #6
  br label %72

72:                                               ; preds = %69, %71
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"*) local_unnamed_addr #2

declare void @_ZN5blink12WebCryptoKey6CreateEPNS_18WebCryptoKeyHandleENS_16WebCryptoKeyTypeEbRKNS_21WebCryptoKeyAlgorithmEi(%"class.blink::WebCryptoKey"* sret, %"class.blink::WebCryptoKeyHandle"*, i32, i1 zeroext, %"class.blink::WebCryptoKeyAlgorithm"*, i32) local_unnamed_addr #2

declare %"class.blink::WebCryptoKeyHandle"* @_ZN9webcrypto25CreateAsymmetricKeyHandleENSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS2_EEEERKNS0_6vectorIhNS0_9allocatorIhEEEE(%struct.evp_pkey_st*, %"class.std::__1::vector"* dereferenceable(24)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto25CreateWebCryptoPrivateKeyENSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS2_EEEERKN5blink21WebCryptoKeyAlgorithmEbiPNS8_12WebCryptoKeyE(%"class.webcrypto::Status"* noalias sret, %struct.evp_pkey_st*, %"class.blink::WebCryptoKeyAlgorithm"*, i1 zeroext, i32, %"class.blink::WebCryptoKey"*) local_unnamed_addr #0 {
  %7 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %8 = alloca %"class.base::Location", align 8
  %9 = alloca i8*, align 8
  %10 = alloca i64, align 8
  %11 = alloca %"class.bssl::internal::StackAllocated", align 8
  %12 = alloca %"class.std::__1::vector", align 8
  %13 = alloca %"class.webcrypto::Status", align 8
  %14 = alloca %"class.blink::WebCryptoKey", align 8
  %15 = bitcast %"class.std::__1::vector"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #6
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %12, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 0, i64 24, i1 false) #6
  %18 = bitcast %"class.webcrypto::Status"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %18) #6
  %19 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %7 to i8*
  %20 = bitcast %"class.webcrypto::Status"* %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %19) #6, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 32, i1 false) #6, !noalias !5
  %21 = bitcast %"class.base::Location"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #6, !noalias !5
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %8, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 42) #6, !noalias !5
  %22 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %7, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %22, %"class.base::Location"* nonnull dereferenceable(32) %8) #6, !noalias !5
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #6, !noalias !5
  %23 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %23) #6, !noalias !5
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8, !noalias !5
  %24 = bitcast i64* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #6, !noalias !5
  store i64 -6148914691236517206, i64* %10, align 8, !noalias !5
  %25 = bitcast %"class.bssl::internal::StackAllocated"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %25) #6, !noalias !5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 32, i1 false) #6, !noalias !5
  %26 = getelementptr inbounds %"class.bssl::internal::StackAllocated", %"class.bssl::internal::StackAllocated"* %11, i64 0, i32 0
  call void @CBB_zero(%struct.cbb_st* nonnull %26) #6, !noalias !5
  %27 = call i32 @CBB_init(%struct.cbb_st* nonnull %26, i64 0) #6, !noalias !5
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %6
  %30 = call i32 @EVP_marshal_private_key(%struct.cbb_st* nonnull %26, %struct.evp_pkey_st* %1) #6
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %35, label %32

32:                                               ; preds = %29
  %33 = call i32 @CBB_finish(%struct.cbb_st* nonnull %26, i8** nonnull %9, i64* nonnull %10) #6
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32, %29, %6
  call void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* nonnull sret %13) #6
  br label %41

36:                                               ; preds = %32
  %37 = load i8*, i8** %9, align 8, !noalias !5
  %38 = load i64, i64* %10, align 8, !noalias !5
  %39 = getelementptr inbounds i8, i8* %37, i64 %38
  call void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"* nonnull %12, i8* %37, i8* %39) #6
  %40 = load i8*, i8** %9, align 8, !noalias !5
  call void @OPENSSL_free(i8* %40) #6
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* nonnull sret %13) #6
  br label %41

41:                                               ; preds = %35, %36
  call void @CBB_cleanup(%struct.cbb_st* nonnull %26) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %25) #6, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #6, !noalias !5
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %23) #6, !noalias !5
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %22) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %19) #6, !noalias !5
  %42 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %13) #6
  br i1 %42, label %43, label %51

43:                                               ; preds = %41
  %44 = bitcast %"class.webcrypto::Status"* %13 to i64*
  %45 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %48 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %13, i64 0, i32 2
  %49 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  %50 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %50, i8 0, i64 24, i1 false) #6
  br label %62

51:                                               ; preds = %41
  %52 = bitcast %"class.blink::WebCryptoKey"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #6
  %53 = call %"class.blink::WebCryptoKeyHandle"* @_ZN9webcrypto25CreateAsymmetricKeyHandleENSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS2_EEEERKNS0_6vectorIhNS0_9allocatorIhEEEE(%struct.evp_pkey_st* %1, %"class.std::__1::vector"* nonnull dereferenceable(24) %12) #6
  call void @_ZN5blink12WebCryptoKey6CreateEPNS_18WebCryptoKeyHandleENS_16WebCryptoKeyTypeEbRKNS_21WebCryptoKeyAlgorithmEi(%"class.blink::WebCryptoKey"* nonnull sret %14, %"class.blink::WebCryptoKeyHandle"* %53, i32 2, i1 zeroext %3, %"class.blink::WebCryptoKeyAlgorithm"* %2, i32 %4) #6
  call void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"* %5, %"class.blink::WebCryptoKey"* nonnull dereferenceable(8) %14) #6
  call void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"* nonnull %14) #6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #6
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  %54 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %13, i64 0, i32 2
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %51
  %60 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %13, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #7
  br label %62

62:                                               ; preds = %43, %51, %59
  %63 = phi %struct.evp_pkey_st* [ %1, %43 ], [ null, %51 ], [ null, %59 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %18) #6
  %64 = load i8*, i8** %16, align 8
  %65 = icmp eq i8* %64, null
  br i1 %65, label %69, label %66

66:                                               ; preds = %62
  %67 = ptrtoint i8* %64 to i64
  %68 = bitcast i8** %17 to i64*
  store i64 %67, i64* %68, align 8
  call void @_ZdlPv(i8* nonnull %64) #7
  br label %69

69:                                               ; preds = %62, %66
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #6
  %70 = icmp eq %struct.evp_pkey_st* %63, null
  br i1 %70, label %72, label %71

71:                                               ; preds = %69
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %63) #6
  br label %72

72:                                               ; preds = %69, %71
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto28ImportUnverifiedPkeyFromSpkiERKNS_10CryptoDataEiPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS5_EEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), i32, %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([29 x i8], [29 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 99) #6
  %10 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %5, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %10, %"class.base::Location"* nonnull dereferenceable(32) %6) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6
  %11 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %1, i64 0, i32 0
  %13 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  %15 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  call void @CBS_init(%struct.cbs_st* nonnull %7, i8* %14, i64 %17) #6
  %18 = call %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st* nonnull %7) #6
  %19 = ptrtoint %struct.evp_pkey_st* %18 to i64
  %20 = icmp eq %struct.evp_pkey_st* %18, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %4
  call void @_ZN9webcrypto6Status9DataErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %36

22:                                               ; preds = %4
  %23 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #6
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %22
  %26 = call i32 @EVP_PKEY_id(%struct.evp_pkey_st* nonnull %18) #6
  %27 = icmp eq i32 %26, %2
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %19, i64* %31, align 8
  %32 = icmp eq %struct.evp_pkey_st* %30, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %30) #6
  br label %34

34:                                               ; preds = %33, %28
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  br label %36

35:                                               ; preds = %22, %25
  call void @_ZN9webcrypto6Status9DataErrorEv(%"class.webcrypto::Status"* sret %0) #6
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %18) #6
  br label %36

36:                                               ; preds = %21, %34, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @CBS_init(%struct.cbs_st*, i8*, i64) local_unnamed_addr #2

declare %struct.evp_pkey_st* @EVP_parse_public_key(%struct.cbs_st*) local_unnamed_addr #2

declare i64 @CBS_len(%struct.cbs_st*) local_unnamed_addr #2

declare void @_ZN9webcrypto6Status9DataErrorEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #2

declare i32 @EVP_PKEY_id(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto29ImportUnverifiedPkeyFromPkcs8ERKNS_10CryptoDataEiPNSt3__110unique_ptrI11evp_pkey_stN4bssl8internal7DeleterIS5_EEEE(%"class.webcrypto::Status"* noalias sret, %"class.webcrypto::CryptoData"* nocapture readonly dereferenceable(16), i32, %"class.std::__1::unique_ptr"* nocapture) local_unnamed_addr #0 {
  %5 = alloca %"class.crypto::OpenSSLErrStackTracer", align 8
  %6 = alloca %"class.base::Location", align 8
  %7 = alloca %struct.cbs_st, align 8
  %8 = bitcast %"class.crypto::OpenSSLErrStackTracer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = bitcast %"class.base::Location"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #6
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %6, i8* getelementptr inbounds ([30 x i8], [30 x i8]* @.str.2, i64 0, i64 0), i8* getelementptr inbounds ([61 x i8], [61 x i8]* @.str.1, i64 0, i64 0), i32 117) #6
  %10 = getelementptr inbounds %"class.crypto::OpenSSLErrStackTracer", %"class.crypto::OpenSSLErrStackTracer"* %5, i64 0, i32 0
  call void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"* nonnull %10, %"class.base::Location"* nonnull dereferenceable(32) %6) #6
  call void @_ZN6crypto17EnsureOpenSSLInitEv() #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #6
  %11 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #6
  %12 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %1, i64 0, i32 0
  %13 = bitcast %struct.cbs_st* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  %15 = getelementptr inbounds %"class.webcrypto::CryptoData", %"class.webcrypto::CryptoData"* %1, i64 0, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = zext i32 %16 to i64
  call void @CBS_init(%struct.cbs_st* nonnull %7, i8* %14, i64 %17) #6
  %18 = call %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st* nonnull %7) #6
  %19 = ptrtoint %struct.evp_pkey_st* %18 to i64
  %20 = icmp eq %struct.evp_pkey_st* %18, null
  br i1 %20, label %21, label %22

21:                                               ; preds = %4
  call void @_ZN9webcrypto6Status9DataErrorEv(%"class.webcrypto::Status"* sret %0) #6
  br label %36

22:                                               ; preds = %4
  %23 = call i64 @CBS_len(%struct.cbs_st* nonnull %7) #6
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %25, label %35

25:                                               ; preds = %22
  %26 = call i32 @EVP_PKEY_id(%struct.evp_pkey_st* nonnull %18) #6
  %27 = icmp eq i32 %26, %2
  br i1 %27, label %28, label %35

28:                                               ; preds = %25
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = load %struct.evp_pkey_st*, %struct.evp_pkey_st** %29, align 8
  %31 = bitcast %"class.std::__1::unique_ptr"* %3 to i64*
  store i64 %19, i64* %31, align 8
  %32 = icmp eq %struct.evp_pkey_st* %30, null
  br i1 %32, label %34, label %33

33:                                               ; preds = %28
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %30) #6
  br label %34

34:                                               ; preds = %33, %28
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  br label %36

35:                                               ; preds = %22, %25
  call void @_ZN9webcrypto6Status9DataErrorEv(%"class.webcrypto::Status"* sret %0) #6
  call void @EVP_PKEY_free(%struct.evp_pkey_st* nonnull %18) #6
  br label %36

36:                                               ; preds = %21, %34, %35
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #6
  call void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* nonnull dereferenceable(32) %10) #6
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

declare %struct.evp_pkey_st* @EVP_parse_private_key(%struct.cbs_st*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9webcrypto33GetUsagesForGenerateAsymmetricKeyEiiiPiS0_(%"class.webcrypto::Status"* noalias sret, i32, i32, i32, i32* nocapture, i32* nocapture) local_unnamed_addr #0 {
  %7 = alloca %"class.webcrypto::Status", align 8
  %8 = bitcast %"class.webcrypto::Status"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #6
  %9 = or i32 %3, %2
  %10 = bitcast %"class.webcrypto::Status"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false)
  call void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* nonnull sret %7, i32 %9, i32 %1) #6
  %11 = call zeroext i1 @_ZNK9webcrypto6Status7IsErrorEv(%"class.webcrypto::Status"* nonnull %7) #6
  br i1 %11, label %12, label %20

12:                                               ; preds = %6
  %13 = bitcast %"class.webcrypto::Status"* %7 to i64*
  %14 = bitcast %"class.webcrypto::Status"* %0 to i64*
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %0, i64 0, i32 2
  %17 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #6
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #6
  br label %31

20:                                               ; preds = %6
  %21 = and i32 %2, %1
  store i32 %21, i32* %4, align 4
  %22 = and i32 %3, %1
  store i32 %22, i32* %5, align 4
  call void @_ZN9webcrypto6Status7SuccessEv(%"class.webcrypto::Status"* sret %0) #6
  %23 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %20
  %29 = getelementptr inbounds %"class.webcrypto::Status", %"class.webcrypto::Status"* %7, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #7
  br label %31

31:                                               ; preds = %12, %20, %28
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #6
  ret void
}

declare void @_ZN9webcrypto22CheckKeyCreationUsagesEii(%"class.webcrypto::Status"* sret, i32, i32) local_unnamed_addr #2

declare i32 @CBB_init(%struct.cbb_st*, i64) local_unnamed_addr #2

declare i32 @EVP_marshal_public_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare i32 @CBB_finish(%struct.cbb_st*, i8**, i64*) local_unnamed_addr #2

declare void @_ZN9webcrypto6Status15ErrorUnexpectedEv(%"class.webcrypto::Status"* sret) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIhNS_9allocatorIhEEE6assignIPhEENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIhNS_15iterator_traitsIS7_E9referenceEEE5valueEvE4typeES7_S7_(%"class.std::__1::vector"*, i8*, i8*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint i8* %2 to i64
  %5 = ptrtoint i8* %1 to i64
  %6 = sub i64 %4, %5
  %7 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %8 = bitcast i8** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector"* %0 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = icmp ugt i64 %6, %12
  %14 = inttoptr i64 %11 to i8*
  br i1 %13, label %40, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %17 = bitcast i8** %16 to i64*
  %18 = load i64, i64* %17, align 8
  %19 = sub i64 %18, %11
  %20 = icmp ugt i64 %6, %19
  %21 = getelementptr inbounds i8, i8* %1, i64 %19
  %22 = select i1 %20, i8* %21, i8* %2
  %23 = ptrtoint i8* %22 to i64
  %24 = sub i64 %23, %5
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %15
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 1 %14, i8* align 1 %1, i64 %24, i1 false) #6
  br label %27

27:                                               ; preds = %15, %26
  br i1 %20, label %28, label %38

28:                                               ; preds = %27
  %29 = load i64, i64* %17, align 8
  %30 = sub i64 %4, %23
  %31 = icmp sgt i64 %30, 0
  br i1 %31, label %32, label %36

32:                                               ; preds = %28
  %33 = inttoptr i64 %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %33, i8* align 1 %22, i64 %30, i1 false) #6
  %34 = getelementptr inbounds i8, i8* %33, i64 %30
  %35 = ptrtoint i8* %34 to i64
  br label %36

36:                                               ; preds = %28, %32
  %37 = phi i64 [ %35, %32 ], [ %29, %28 ]
  store i64 %37, i64* %17, align 8
  br label %66

38:                                               ; preds = %27
  %39 = getelementptr inbounds i8, i8* %14, i64 %24
  store i8* %39, i8** %16, align 8
  br label %66

40:                                               ; preds = %3
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %42 = icmp eq i64 %11, 0
  br i1 %42, label %47, label %43

43:                                               ; preds = %40
  %44 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %45 = bitcast i8** %44 to i64*
  store i64 %11, i64* %45, align 8
  tail call void @_ZdlPv(i8* nonnull %14) #7
  %46 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #6
  br label %47

47:                                               ; preds = %40, %43
  %48 = phi i64 [ %9, %40 ], [ 0, %43 ]
  %49 = icmp slt i64 %6, 0
  br i1 %49, label %50, label %52

50:                                               ; preds = %47
  %51 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %51) #8
  unreachable

52:                                               ; preds = %47
  %53 = icmp ult i64 %48, 4611686018427387903
  br i1 %53, label %54, label %58

54:                                               ; preds = %52
  %55 = shl i64 %48, 1
  %56 = icmp ult i64 %55, %6
  %57 = select i1 %56, i64 %6, i64 %55
  br label %58

58:                                               ; preds = %54, %52
  %59 = phi i64 [ %57, %54 ], [ 9223372036854775807, %52 ]
  %60 = tail call i8* @_Znwm(i64 %59) #7
  %61 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  store i8* %60, i8** %61, align 8
  store i8* %60, i8** %41, align 8
  %62 = getelementptr inbounds i8, i8* %60, i64 %59
  store i8* %62, i8** %7, align 8
  %63 = bitcast i8** %61 to i64*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %60, i8* align 1 %1, i64 %6, i1 false) #6
  %64 = getelementptr inbounds i8, i8* %60, i64 %6
  %65 = ptrtoint i8* %64 to i64
  store i64 %65, i64* %63, align 8
  br label %66

66:                                               ; preds = %36, %38, %58
  ret void
}

declare void @OPENSSL_free(i8*) local_unnamed_addr #2

declare void @CBB_zero(%struct.cbb_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

declare void @CBB_cleanup(%struct.cbb_st*) local_unnamed_addr #2

declare void @_ZN5blink12WebCryptoKey6AssignERKS0_(%"class.blink::WebCryptoKey"*, %"class.blink::WebCryptoKey"* dereferenceable(8)) local_unnamed_addr #2

declare void @_ZN5blink12WebCryptoKey5ResetEv(%"class.blink::WebCryptoKey"*) local_unnamed_addr #2

declare i32 @EVP_marshal_private_key(%struct.cbb_st*, %struct.evp_pkey_st*) local_unnamed_addr #2

declare void @_ZN4base8LocationC1ERKS0_(%"class.base::Location"*, %"class.base::Location"* dereferenceable(32)) unnamed_addr #2

declare void @_ZN6crypto17EnsureOpenSSLInitEv() local_unnamed_addr #2

declare void @_ZN6crypto20ClearOpenSSLERRStackERKN4base8LocationE(%"class.base::Location"* dereferenceable(32)) local_unnamed_addr #2

declare void @EVP_PKEY_free(%struct.evp_pkey_st*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind }
attributes #7 = { builtin nounwind }
attributes #8 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZN9webcrypto12_GLOBAL__N_114ExportPKeySpkiEP11evp_pkey_stPNSt3__16vectorIhNS3_9allocatorIhEEEE: argument 0"}
!4 = distinct !{!4, !"_ZN9webcrypto12_GLOBAL__N_114ExportPKeySpkiEP11evp_pkey_stPNSt3__16vectorIhNS3_9allocatorIhEEEE"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN9webcrypto12_GLOBAL__N_115ExportPKeyPkcs8EP11evp_pkey_stPNSt3__16vectorIhNS3_9allocatorIhEEEE: argument 0"}
!7 = distinct !{!7, !"_ZN9webcrypto12_GLOBAL__N_115ExportPKeyPkcs8EP11evp_pkey_stPNSt3__16vectorIhNS3_9allocatorIhEEEE"}
