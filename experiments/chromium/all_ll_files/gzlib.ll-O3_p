; ModuleID = '../../third_party/zlib/gzlib.c'
source_filename = "../../third_party/zlib/gzlib.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.gzFile_s = type { i32, i8*, i64 }
%struct.gz_state = type { %struct.gzFile_s, i32, i32, i8*, i32, i32, i8*, i8*, i32, i32, i64, i32, i32, i32, i32, i64, i32, i32, i8*, %struct.z_stream_s }
%struct.z_stream_s = type { i8*, i32, i64, i8*, i32, i64, i8*, %struct.internal_state*, i8* (i8*, i32, i32)*, void (i8*, i8*)*, i8*, i32, i64, i64 }
%struct.internal_state = type opaque

@.str = private unnamed_addr constant [8 x i8] c"<fd:%d>\00", align 1
@.str.1 = private unnamed_addr constant [14 x i8] c"out of memory\00", align 1
@.str.2 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.3 = private unnamed_addr constant [7 x i8] c"%s%s%s\00", align 1
@.str.4 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.5 = private unnamed_addr constant [3 x i8] c"%s\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.gzFile_s* @Cr_z_gzopen(i8*, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call fastcc %struct.gzFile_s* @gz_open(i8* %0, i32 -1, i8* %1)
  ret %struct.gzFile_s* %3
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc noalias %struct.gzFile_s* @gz_open(i8*, i32, i8* nocapture readonly) unnamed_addr #0 {
  %4 = icmp eq i8* %0, null
  br i1 %4, label %141, label %5

5:                                                ; preds = %3
  %6 = tail call noalias i8* @malloc(i64 232) #7
  %7 = icmp eq i8* %6, null
  br i1 %7, label %141, label %8

8:                                                ; preds = %5
  %9 = getelementptr inbounds i8, i8* %6, i64 40
  %10 = bitcast i8* %9 to i32*
  store i32 0, i32* %10, align 8
  %11 = getelementptr inbounds i8, i8* %6, i64 44
  %12 = bitcast i8* %11 to i32*
  store i32 8192, i32* %12, align 4
  %13 = getelementptr inbounds i8, i8* %6, i64 112
  %14 = bitcast i8* %13 to i8**
  store i8* null, i8** %14, align 8
  %15 = getelementptr inbounds i8, i8* %6, i64 24
  %16 = bitcast i8* %15 to i32*
  store i32 0, i32* %16, align 8
  %17 = getelementptr inbounds i8, i8* %6, i64 88
  %18 = bitcast i8* %17 to i32*
  store i32 -1, i32* %18, align 8
  %19 = getelementptr inbounds i8, i8* %6, i64 92
  %20 = bitcast i8* %19 to i32*
  store i32 0, i32* %20, align 4
  %21 = getelementptr inbounds i8, i8* %6, i64 64
  %22 = bitcast i8* %21 to i32*
  store i32 0, i32* %22, align 8
  %23 = load i8, i8* %2, align 1
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %58, label %25

25:                                               ; preds = %8, %49
  %26 = phi i32 [ %50, %49 ], [ 0, %8 ]
  %27 = phi i32 [ %51, %49 ], [ 0, %8 ]
  %28 = phi i8 [ %55, %49 ], [ %23, %8 ]
  %29 = phi i32 [ %53, %49 ], [ 0, %8 ]
  %30 = phi i32 [ %52, %49 ], [ 0, %8 ]
  %31 = phi i8* [ %54, %49 ], [ %2, %8 ]
  %32 = sext i8 %28 to i32
  %33 = add i8 %28, -48
  %34 = icmp ult i8 %33, 10
  br i1 %34, label %35, label %37

35:                                               ; preds = %25
  %36 = add nsw i32 %32, -48
  store i32 %36, i32* %18, align 8
  br label %49

37:                                               ; preds = %25
  switch i32 %32, label %49 [
    i32 114, label %38
    i32 119, label %39
    i32 97, label %40
    i32 43, label %41
    i32 84, label %48
    i32 101, label %42
    i32 120, label %43
    i32 102, label %44
    i32 104, label %45
    i32 82, label %46
    i32 70, label %47
  ]

38:                                               ; preds = %37
  store i32 7247, i32* %16, align 8
  br label %49

39:                                               ; preds = %37
  store i32 31153, i32* %16, align 8
  br label %49

40:                                               ; preds = %37
  store i32 1, i32* %16, align 8
  br label %49

41:                                               ; preds = %37
  tail call void @free(i8* %6) #7
  br label %141

42:                                               ; preds = %37
  br label %49

43:                                               ; preds = %37
  br label %49

44:                                               ; preds = %37
  store i32 1, i32* %20, align 4
  br label %49

45:                                               ; preds = %37
  store i32 2, i32* %20, align 4
  br label %49

46:                                               ; preds = %37
  store i32 3, i32* %20, align 4
  br label %49

47:                                               ; preds = %37
  store i32 4, i32* %20, align 4
  br label %49

48:                                               ; preds = %37
  store i32 1, i32* %22, align 8
  br label %49

49:                                               ; preds = %38, %39, %40, %42, %43, %44, %45, %46, %47, %48, %37, %35
  %50 = phi i32 [ %26, %35 ], [ %26, %37 ], [ %26, %47 ], [ %26, %46 ], [ %26, %45 ], [ %26, %44 ], [ %26, %43 ], [ %26, %42 ], [ 1, %48 ], [ %26, %40 ], [ %26, %39 ], [ %26, %38 ]
  %51 = phi i32 [ %27, %35 ], [ %27, %37 ], [ %27, %47 ], [ %27, %46 ], [ %27, %45 ], [ %27, %44 ], [ %27, %43 ], [ %27, %42 ], [ %27, %48 ], [ 1, %40 ], [ 31153, %39 ], [ 7247, %38 ]
  %52 = phi i32 [ %30, %35 ], [ %30, %37 ], [ %30, %47 ], [ %30, %46 ], [ %30, %45 ], [ %30, %44 ], [ %30, %43 ], [ 1, %42 ], [ %30, %48 ], [ %30, %40 ], [ %30, %39 ], [ %30, %38 ]
  %53 = phi i32 [ %29, %35 ], [ %29, %37 ], [ %29, %47 ], [ %29, %46 ], [ %29, %45 ], [ %29, %44 ], [ 1, %43 ], [ %29, %42 ], [ %29, %48 ], [ %29, %40 ], [ %29, %39 ], [ %29, %38 ]
  %54 = getelementptr inbounds i8, i8* %31, i64 1
  %55 = load i8, i8* %54, align 1
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %57, label %25

57:                                               ; preds = %49
  switch i32 %51, label %63 [
    i32 0, label %58
    i32 7247, label %59
  ]

58:                                               ; preds = %8, %57
  tail call void @free(i8* %6) #7
  br label %141

59:                                               ; preds = %57
  %60 = icmp eq i32 %50, 0
  br i1 %60, label %62, label %61

61:                                               ; preds = %59
  tail call void @free(i8* %6) #7
  br label %141

62:                                               ; preds = %59
  store i32 1, i32* %22, align 8
  br label %63

63:                                               ; preds = %57, %62
  %64 = tail call i64 @strlen(i8* nonnull %0) #8
  %65 = add i64 %64, 1
  %66 = tail call noalias i8* @malloc(i64 %65) #7
  %67 = getelementptr inbounds i8, i8* %6, i64 32
  %68 = bitcast i8* %67 to i8**
  store i8* %66, i8** %68, align 8
  %69 = icmp eq i8* %66, null
  br i1 %69, label %70, label %71

70:                                               ; preds = %63
  tail call void @free(i8* %6) #7
  br label %141

71:                                               ; preds = %63
  %72 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %66, i64 %65, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.5, i64 0, i64 0), i8* nonnull %0) #7
  %73 = icmp eq i32 %52, 0
  %74 = select i1 %73, i32 0, i32 524288
  %75 = icmp eq i32 %51, 7247
  br i1 %75, label %82, label %76

76:                                               ; preds = %71
  %77 = icmp eq i32 %53, 0
  %78 = select i1 %77, i32 65, i32 193
  %79 = icmp eq i32 %51, 31153
  %80 = select i1 %79, i32 512, i32 1024
  %81 = or i32 %80, %78
  br label %82

82:                                               ; preds = %71, %76
  %83 = phi i32 [ %81, %76 ], [ 0, %71 ]
  %84 = icmp sgt i32 %1, -1
  br i1 %84, label %85, label %88

85:                                               ; preds = %82
  %86 = getelementptr inbounds i8, i8* %6, i64 28
  %87 = bitcast i8* %86 to i32*
  store i32 %1, i32* %87, align 4
  br label %95

88:                                               ; preds = %82
  %89 = or i32 %83, %74
  %90 = tail call i32 (i8*, i32, ...) @open(i8* nonnull %0, i32 %89, i32 438) #7
  %91 = getelementptr inbounds i8, i8* %6, i64 28
  %92 = bitcast i8* %91 to i32*
  store i32 %90, i32* %92, align 4
  %93 = icmp eq i32 %90, -1
  br i1 %93, label %94, label %95

94:                                               ; preds = %88
  tail call void @free(i8* nonnull %66) #7
  tail call void @free(i8* %6) #7
  br label %141

95:                                               ; preds = %85, %88
  %96 = phi i32 [ %1, %85 ], [ %90, %88 ]
  %97 = icmp eq i32 %51, 1
  br i1 %97, label %98, label %100

98:                                               ; preds = %95
  %99 = tail call i64 @lseek64(i32 %96, i64 0, i32 2) #7
  store i32 31153, i32* %16, align 8
  br label %103

100:                                              ; preds = %95
  %101 = load i32, i32* %16, align 8
  %102 = icmp eq i32 %101, 7247
  br i1 %102, label %105, label %103

103:                                              ; preds = %98, %100
  %104 = bitcast i8* %6 to i32*
  store i32 0, i32* %104, align 8
  br label %121

105:                                              ; preds = %100
  %106 = tail call i64 @lseek64(i32 %96, i64 0, i32 1) #7
  %107 = getelementptr inbounds i8, i8* %6, i64 72
  %108 = bitcast i8* %107 to i64*
  %109 = icmp eq i64 %106, -1
  %110 = select i1 %109, i64 0, i64 %106
  store i64 %110, i64* %108, align 8
  %111 = load i32, i32* %16, align 8
  %112 = bitcast i8* %6 to i32*
  store i32 0, i32* %112, align 8
  %113 = icmp eq i32 %111, 7247
  br i1 %113, label %114, label %121

114:                                              ; preds = %105
  %115 = getelementptr inbounds i8, i8* %6, i64 80
  %116 = bitcast i8* %115 to i32*
  store i32 0, i32* %116, align 8
  %117 = getelementptr inbounds i8, i8* %6, i64 84
  %118 = bitcast i8* %117 to i32*
  store i32 0, i32* %118, align 4
  %119 = getelementptr inbounds i8, i8* %6, i64 68
  %120 = bitcast i8* %119 to i32*
  store i32 0, i32* %120, align 4
  br label %121

121:                                              ; preds = %103, %114, %105
  %122 = getelementptr inbounds i8, i8* %6, i64 104
  %123 = bitcast i8* %122 to i32*
  store i32 0, i32* %123, align 8
  %124 = load i8*, i8** %14, align 8
  %125 = icmp eq i8* %124, null
  br i1 %125, label %133, label %126

126:                                              ; preds = %121
  %127 = getelementptr inbounds i8, i8* %6, i64 108
  %128 = bitcast i8* %127 to i32*
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, -4
  br i1 %130, label %132, label %131

131:                                              ; preds = %126
  tail call void @free(i8* nonnull %124) #7
  br label %132

132:                                              ; preds = %131, %126
  store i8* null, i8** %14, align 8
  br label %133

133:                                              ; preds = %121, %132
  %134 = getelementptr inbounds i8, i8* %6, i64 108
  %135 = bitcast i8* %134 to i32*
  store i32 0, i32* %135, align 4
  %136 = getelementptr inbounds i8, i8* %6, i64 16
  %137 = bitcast i8* %136 to i64*
  store i64 0, i64* %137, align 8
  %138 = getelementptr inbounds i8, i8* %6, i64 128
  %139 = bitcast i8* %138 to i32*
  store i32 0, i32* %139, align 8
  %140 = bitcast i8* %6 to %struct.gzFile_s*
  br label %141

141:                                              ; preds = %5, %3, %133, %94, %70, %61, %58, %41
  %142 = phi %struct.gzFile_s* [ null, %41 ], [ null, %58 ], [ null, %61 ], [ null, %70 ], [ null, %94 ], [ %140, %133 ], [ null, %3 ], [ null, %5 ]
  ret %struct.gzFile_s* %142
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.gzFile_s* @Cr_z_gzopen64(i8*, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = tail call fastcc %struct.gzFile_s* @gz_open(i8* %0, i32 -1, i8* %1)
  ret %struct.gzFile_s* %3
}

; Function Attrs: nounwind ssp uwtable
define hidden noalias %struct.gzFile_s* @Cr_z_gzdopen(i32, i8* nocapture readonly) local_unnamed_addr #0 {
  %3 = icmp eq i32 %0, -1
  br i1 %3, label %10, label %4

4:                                                ; preds = %2
  %5 = tail call noalias i8* @malloc(i64 19) #7
  %6 = icmp eq i8* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %4
  %8 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %5, i64 19, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str, i64 0, i64 0), i32 %0) #7
  %9 = tail call fastcc %struct.gzFile_s* @gz_open(i8* nonnull %5, i32 %0, i8* %1)
  tail call void @free(i8* nonnull %5) #7
  br label %10

10:                                               ; preds = %2, %4, %7
  %11 = phi %struct.gzFile_s* [ %9, %7 ], [ null, %4 ], [ null, %2 ]
  ret %struct.gzFile_s* %11
}

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @snprintf(i8* nocapture, i64, i8* nocapture readonly, ...) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i32 @Cr_z_gzbuffer(%struct.gzFile_s*, i32) local_unnamed_addr #3 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %20 [
    i32 7247, label %8
    i32 31153, label %8
  ]

8:                                                ; preds = %4, %4
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 2
  %10 = bitcast i64* %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp ne i32 %11, 0
  %13 = shl i32 %1, 1
  %14 = icmp ult i32 %13, %1
  %15 = or i1 %14, %12
  br i1 %15, label %20, label %16

16:                                               ; preds = %8
  %17 = icmp ugt i32 %1, 2
  %18 = select i1 %17, i32 %1, i32 2
  %19 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 5
  store i32 %18, i32* %19, align 4
  br label %20

20:                                               ; preds = %8, %4, %2, %16
  %21 = phi i32 [ 0, %16 ], [ -1, %2 ], [ -1, %4 ], [ -1, %8 ]
  ret i32 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @Cr_z_gzrewind(%struct.gzFile_s*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %44, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %6, 7247
  br i1 %7, label %8, label %44

8:                                                ; preds = %3
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 17
  %10 = load i32, i32* %9, align 4
  switch i32 %10, label %44 [
    i32 0, label %11
    i32 -5, label %11
  ]

11:                                               ; preds = %8, %8
  %12 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3
  %15 = bitcast %struct.gzFile_s* %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = tail call i64 @lseek64(i32 %13, i64 %16, i32 0) #7
  %18 = icmp eq i64 %17, -1
  br i1 %18, label %44, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  store i32 0, i32* %20, align 8
  %21 = load i32, i32* %5, align 8
  %22 = icmp eq i32 %21, 7247
  br i1 %22, label %23, label %28

23:                                               ; preds = %19
  %24 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %25 = bitcast i8** %24 to i32*
  store i32 0, i32* %25, align 8
  %26 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 12
  store i32 0, i32* %26, align 4
  %27 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 9
  store i32 0, i32* %27, align 4
  br label %28

28:                                               ; preds = %23, %19
  %29 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %30 = bitcast i8** %29 to i32*
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %32 = bitcast i64* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %40, label %35

35:                                               ; preds = %28
  %36 = load i32, i32* %9, align 4
  %37 = icmp eq i32 %36, -4
  br i1 %37, label %39, label %38

38:                                               ; preds = %35
  tail call void @free(i8* nonnull %33) #7
  br label %39

39:                                               ; preds = %38, %35
  store i8* null, i8** %32, align 8
  br label %40

40:                                               ; preds = %28, %39
  store i32 0, i32* %9, align 4
  %41 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %43 = bitcast i8** %42 to i32*
  store i32 0, i32* %43, align 8
  br label %44

44:                                               ; preds = %11, %3, %8, %1, %40
  %45 = phi i32 [ 0, %40 ], [ -1, %1 ], [ -1, %8 ], [ -1, %3 ], [ -1, %11 ]
  ret i32 %45
}

; Function Attrs: nounwind
declare i64 @lseek64(i32, i64, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i64 @Cr_z_gzseek64(%struct.gzFile_s*, i64, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.gzFile_s* %0, null
  br i1 %4, label %143, label %5

5:                                                ; preds = %3
  %6 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %8 = load i32, i32* %7, align 8
  switch i32 %8, label %143 [
    i32 7247, label %9
    i32 31153, label %9
  ]

9:                                                ; preds = %5, %5
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 17
  %11 = load i32, i32* %10, align 4
  switch i32 %11, label %143 [
    i32 0, label %12
    i32 -5, label %12
  ]

12:                                               ; preds = %9, %9
  %13 = icmp ugt i32 %2, 1
  br i1 %13, label %143, label %14

14:                                               ; preds = %12
  %15 = icmp eq i32 %2, 0
  br i1 %15, label %16, label %20

16:                                               ; preds = %14
  %17 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %18 = load i64, i64* %17, align 8
  %19 = sub nsw i64 %1, %18
  br label %30

20:                                               ; preds = %14
  %21 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %22 = bitcast i8** %21 to i32*
  %23 = load i32, i32* %22, align 8
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %30, label %25

25:                                               ; preds = %20
  %26 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %27 = bitcast %struct.gzFile_s* %26 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = add nsw i64 %28, %1
  br label %30

30:                                               ; preds = %20, %25, %16
  %31 = phi i64 [ %19, %16 ], [ %29, %25 ], [ %1, %20 ]
  %32 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %33 = bitcast i8** %32 to i32*
  store i32 0, i32* %33, align 8
  %34 = icmp eq i32 %8, 7247
  br i1 %34, label %35, label %71

35:                                               ; preds = %30
  %36 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 9
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %39, label %71

39:                                               ; preds = %35
  %40 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %41 = load i64, i64* %40, align 8
  %42 = add nsw i64 %41, %31
  %43 = icmp sgt i64 %42, -1
  br i1 %43, label %44, label %71

44:                                               ; preds = %39
  %45 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = sub nsw i64 %31, %49
  %51 = tail call i64 @lseek64(i32 %46, i64 %50, i32 1) #7
  %52 = icmp eq i64 %51, -1
  br i1 %52, label %143, label %53

53:                                               ; preds = %44
  store i32 0, i32* %47, align 8
  %54 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %55 = bitcast i8** %54 to i32*
  store i32 0, i32* %55, align 8
  %56 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 12
  store i32 0, i32* %56, align 4
  store i32 0, i32* %33, align 8
  %57 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %58 = bitcast i64* %57 to i8**
  %59 = load i8*, i8** %58, align 8
  %60 = icmp eq i8* %59, null
  br i1 %60, label %66, label %61

61:                                               ; preds = %53
  %62 = load i32, i32* %10, align 4
  %63 = icmp eq i32 %62, -4
  br i1 %63, label %65, label %64

64:                                               ; preds = %61
  tail call void @free(i8* nonnull %59) #7
  br label %65

65:                                               ; preds = %64, %61
  store i8* null, i8** %58, align 8
  br label %66

66:                                               ; preds = %53, %65
  store i32 0, i32* %10, align 4
  %67 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %68 = bitcast i8** %67 to i32*
  store i32 0, i32* %68, align 8
  %69 = load i64, i64* %40, align 8
  %70 = add nsw i64 %69, %31
  store i64 %70, i64* %40, align 8
  br label %143

71:                                               ; preds = %39, %35, %30
  %72 = icmp slt i64 %31, 0
  br i1 %72, label %73, label %113

73:                                               ; preds = %71
  br i1 %34, label %74, label %143

74:                                               ; preds = %73
  %75 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %76 = load i64, i64* %75, align 8
  %77 = add nsw i64 %76, %31
  %78 = icmp slt i64 %77, 0
  br i1 %78, label %143, label %79

79:                                               ; preds = %74
  switch i32 %11, label %143 [
    i32 0, label %80
    i32 -5, label %80
  ]

80:                                               ; preds = %79, %79
  %81 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3
  %84 = bitcast %struct.gzFile_s* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = tail call i64 @lseek64(i32 %82, i64 %85, i32 0) #7
  %87 = icmp eq i64 %86, -1
  br i1 %87, label %143, label %88

88:                                               ; preds = %80
  %89 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  store i32 0, i32* %89, align 8
  %90 = load i32, i32* %7, align 8
  %91 = icmp eq i32 %90, 7247
  br i1 %91, label %92, label %97

92:                                               ; preds = %88
  %93 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %94 = bitcast i8** %93 to i32*
  store i32 0, i32* %94, align 8
  %95 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 12
  store i32 0, i32* %95, align 4
  %96 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %6, i64 0, i32 9
  store i32 0, i32* %96, align 4
  br label %97

97:                                               ; preds = %92, %88
  store i32 0, i32* %33, align 8
  %98 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %99 = bitcast i64* %98 to i8**
  %100 = load i8*, i8** %99, align 8
  %101 = icmp eq i8* %100, null
  br i1 %101, label %109, label %102

102:                                              ; preds = %97
  %103 = load i32, i32* %10, align 4
  %104 = icmp eq i32 %103, -4
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  tail call void @free(i8* nonnull %100) #7
  %106 = load i32, i32* %7, align 8
  br label %107

107:                                              ; preds = %105, %102
  %108 = phi i32 [ %106, %105 ], [ %90, %102 ]
  store i8* null, i8** %99, align 8
  br label %109

109:                                              ; preds = %97, %107
  %110 = phi i32 [ %90, %97 ], [ %108, %107 ]
  store i32 0, i32* %10, align 4
  store i64 0, i64* %75, align 8
  %111 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %112 = bitcast i8** %111 to i32*
  store i32 0, i32* %112, align 8
  br label %113

113:                                              ; preds = %109, %71
  %114 = phi i32 [ %110, %109 ], [ %8, %71 ]
  %115 = phi i64 [ %77, %109 ], [ %31, %71 ]
  %116 = icmp eq i32 %114, 7247
  br i1 %116, label %117, label %133

117:                                              ; preds = %113
  %118 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 0
  %119 = load i32, i32* %118, align 8
  %120 = zext i32 %119 to i64
  %121 = icmp slt i64 %115, %120
  %122 = trunc i64 %115 to i32
  %123 = select i1 %121, i32 %122, i32 %119
  %124 = sub i32 %119, %123
  store i32 %124, i32* %118, align 8
  %125 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 1
  %126 = load i8*, i8** %125, align 8
  %127 = zext i32 %123 to i64
  %128 = getelementptr inbounds i8, i8* %126, i64 %127
  store i8* %128, i8** %125, align 8
  %129 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %130 = load i64, i64* %129, align 8
  %131 = add nsw i64 %130, %127
  store i64 %131, i64* %129, align 8
  %132 = sub nsw i64 %115, %127
  br label %133

133:                                              ; preds = %117, %113
  %134 = phi i64 [ %132, %117 ], [ %115, %113 ]
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %139, label %136

136:                                              ; preds = %133
  store i32 1, i32* %33, align 8
  %137 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %138 = bitcast %struct.gzFile_s* %137 to i64*
  store i64 %134, i64* %138, align 8
  br label %139

139:                                              ; preds = %133, %136
  %140 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %141 = load i64, i64* %140, align 8
  %142 = add nsw i64 %141, %134
  br label %143

143:                                              ; preds = %80, %79, %74, %73, %44, %12, %9, %5, %3, %139, %66
  %144 = phi i64 [ %70, %66 ], [ %142, %139 ], [ -1, %3 ], [ -1, %5 ], [ -1, %9 ], [ -1, %12 ], [ -1, %44 ], [ -1, %73 ], [ -1, %74 ], [ -1, %79 ], [ -1, %80 ]
  ret i64 %144
}

; Function Attrs: nounwind ssp uwtable
define hidden void @Cr_z_gz_error(%struct.gz_state* nocapture, i32, i8*) local_unnamed_addr #0 {
  %4 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 18
  %5 = load i8*, i8** %4, align 8
  %6 = icmp eq i8* %5, null
  br i1 %6, label %13, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 17
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, -4
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @free(i8* nonnull %5) #7
  br label %12

12:                                               ; preds = %7, %11
  store i8* null, i8** %4, align 8
  br label %13

13:                                               ; preds = %3, %12
  switch i32 %1, label %14 [
    i32 -5, label %16
    i32 0, label %16
  ]

14:                                               ; preds = %13
  %15 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 0, i32 0
  store i32 0, i32* %15, align 8
  br label %16

16:                                               ; preds = %13, %13, %14
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 17
  store i32 %1, i32* %17, align 4
  %18 = icmp eq i8* %2, null
  %19 = icmp eq i32 %1, -4
  %20 = or i1 %19, %18
  br i1 %20, label %37, label %21

21:                                               ; preds = %16
  %22 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %0, i64 0, i32 3
  %23 = load i8*, i8** %22, align 8
  %24 = tail call i64 @strlen(i8* %23) #8
  %25 = tail call i64 @strlen(i8* nonnull %2) #8
  %26 = add i64 %24, 3
  %27 = add i64 %26, %25
  %28 = tail call noalias i8* @malloc(i64 %27) #7
  store i8* %28, i8** %4, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %30, label %31

30:                                               ; preds = %21
  store i32 -4, i32* %17, align 4
  br label %37

31:                                               ; preds = %21
  %32 = tail call i64 @strlen(i8* %23) #8
  %33 = tail call i64 @strlen(i8* nonnull %2) #8
  %34 = add i64 %32, 3
  %35 = add i64 %34, %33
  %36 = tail call i32 (i8*, i64, i8*, ...) @snprintf(i8* nonnull %28, i64 %35, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.3, i64 0, i64 0), i8* %23, i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.4, i64 0, i64 0), i8* nonnull %2) #7
  br label %37

37:                                               ; preds = %16, %31, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @Cr_z_gzseek(%struct.gzFile_s*, i64, i32) local_unnamed_addr #0 {
  %4 = tail call i64 @Cr_z_gzseek64(%struct.gzFile_s* %0, i64 %1, i32 %2)
  ret i64 %4
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @Cr_z_gztell64(%struct.gzFile_s* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %20 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %10 = bitcast i8** %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %15 = bitcast %struct.gzFile_s* %14 to i64*
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %6, %13
  %18 = phi i64 [ %16, %13 ], [ 0, %6 ]
  %19 = add nsw i64 %18, %8
  br label %20

20:                                               ; preds = %3, %1, %17
  %21 = phi i64 [ %19, %17 ], [ -1, %1 ], [ -1, %3 ]
  ret i64 %21
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @Cr_z_gztell(%struct.gzFile_s* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %20, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %20 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 0, i32 2
  %8 = load i64, i64* %7, align 8
  %9 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 1
  %10 = bitcast i8** %9 to i32*
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %17, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4
  %15 = bitcast %struct.gzFile_s* %14 to i64*
  %16 = load i64, i64* %15, align 8
  br label %17

17:                                               ; preds = %13, %6
  %18 = phi i64 [ %16, %13 ], [ 0, %6 ]
  %19 = add nsw i64 %18, %8
  br label %20

20:                                               ; preds = %1, %3, %17
  %21 = phi i64 [ %19, %17 ], [ -1, %1 ], [ -1, %3 ]
  ret i64 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @Cr_z_gzoffset64(%struct.gzFile_s* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %21 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = tail call i64 @lseek64(i32 %9, i64 0, i32 1) #7
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = load i32, i32* %4, align 8
  %14 = icmp eq i32 %13, 7247
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %17 = bitcast i8** %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = sub nsw i64 %10, %19
  br label %21

21:                                               ; preds = %12, %15, %6, %3, %1
  %22 = phi i64 [ -1, %1 ], [ -1, %3 ], [ -1, %6 ], [ %20, %15 ], [ %10, %12 ]
  ret i64 %22
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @Cr_z_gzoffset(%struct.gzFile_s* readonly) local_unnamed_addr #0 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %21, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8
  switch i32 %5, label %21 [
    i32 7247, label %6
    i32 31153, label %6
  ]

6:                                                ; preds = %3, %3
  %7 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %8 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %7, i64 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = tail call i64 @lseek64(i32 %9, i64 0, i32 1) #7
  %11 = icmp eq i64 %10, -1
  br i1 %11, label %21, label %12

12:                                               ; preds = %6
  %13 = load i32, i32* %4, align 8
  %14 = icmp eq i32 %13, 7247
  br i1 %14, label %15, label %21

15:                                               ; preds = %12
  %16 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 5, i32 1
  %17 = bitcast i8** %16 to i32*
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = sub nsw i64 %10, %19
  br label %21

21:                                               ; preds = %1, %3, %6, %12, %15
  %22 = phi i64 [ -1, %1 ], [ -1, %3 ], [ -1, %6 ], [ %20, %15 ], [ %10, %12 ]
  ret i64 %22
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @Cr_z_gzeof(%struct.gzFile_s* readonly) local_unnamed_addr #4 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %11, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %5 = load i32, i32* %4, align 8
  %6 = icmp eq i32 %5, 7247
  br i1 %6, label %7, label %11

7:                                                ; preds = %3
  %8 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %9 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %8, i64 0, i32 12
  %10 = load i32, i32* %9, align 4
  br label %11

11:                                               ; preds = %3, %7, %1
  %12 = phi i32 [ 0, %1 ], [ %10, %7 ], [ 0, %3 ]
  ret i32 %12
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @Cr_z_gzerror(%struct.gzFile_s* readonly, i32*) local_unnamed_addr #3 {
  %3 = icmp eq %struct.gzFile_s* %0, null
  br i1 %3, label %23, label %4

4:                                                ; preds = %2
  %5 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %6 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %7 = load i32, i32* %6, align 8
  switch i32 %7, label %23 [
    i32 7247, label %8
    i32 31153, label %8
  ]

8:                                                ; preds = %4, %4
  %9 = icmp eq i32* %1, null
  br i1 %9, label %13, label %10

10:                                               ; preds = %8
  %11 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 17
  %12 = load i32, i32* %11, align 4
  store i32 %12, i32* %1, align 4
  br label %13

13:                                               ; preds = %8, %10
  %14 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %5, i64 0, i32 17
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, -4
  br i1 %16, label %23, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %19 = bitcast i64* %18 to i8**
  %20 = load i8*, i8** %19, align 8
  %21 = icmp eq i8* %20, null
  %22 = select i1 %21, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.2, i64 0, i64 0), i8* %20
  ret i8* %22

23:                                               ; preds = %13, %4, %2
  %24 = phi i8* [ null, %2 ], [ null, %4 ], [ getelementptr inbounds ([14 x i8], [14 x i8]* @.str.1, i64 0, i64 0), %13 ]
  ret i8* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @Cr_z_gzclearerr(%struct.gzFile_s*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.gzFile_s* %0, null
  br i1 %2, label %24, label %3

3:                                                ; preds = %1
  %4 = bitcast %struct.gzFile_s* %0 to %struct.gz_state*
  %5 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 1, i32 0
  %6 = load i32, i32* %5, align 8
  switch i32 %6, label %24 [
    i32 7247, label %7
    i32 31153, label %11
  ]

7:                                                ; preds = %3
  %8 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 3, i32 1
  %9 = bitcast i8** %8 to i32*
  store i32 0, i32* %9, align 8
  %10 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 12
  store i32 0, i32* %10, align 4
  br label %11

11:                                               ; preds = %3, %7
  %12 = getelementptr inbounds %struct.gzFile_s, %struct.gzFile_s* %0, i64 4, i32 2
  %13 = bitcast i64* %12 to i8**
  %14 = load i8*, i8** %13, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 17
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, -4
  br i1 %19, label %21, label %20

20:                                               ; preds = %16
  tail call void @free(i8* nonnull %14) #7
  br label %21

21:                                               ; preds = %20, %16
  store i8* null, i8** %13, align 8
  br label %22

22:                                               ; preds = %11, %21
  %23 = getelementptr inbounds %struct.gz_state, %struct.gz_state* %4, i64 0, i32 17
  store i32 0, i32* %23, align 4
  br label %24

24:                                               ; preds = %3, %1, %22
  ret void
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #5

; Function Attrs: nofree
declare i32 @open(i8* nocapture readonly, i32, ...) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { nounwind readonly }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
