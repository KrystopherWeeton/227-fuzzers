; ModuleID = '../../third_party/boringssl/src/crypto/bio/socket_helper.c'
source_filename = "../../third_party/boringssl/src/crypto/bio/socket_helper.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver fmemopen, fmemopen@GLIBC_2.2.5"
module asm ".symver glob, glob@GLIBC_2.2.5"
module asm ".symver glob64, glob64@GLIBC_2.2.5"
module asm ".symver quick_exit, quick_exit@GLIBC_2.10"

%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.addrinfo = type { i32, i32, i32, i32, i32, %struct.sockaddr*, i8*, %struct.addrinfo* }
%struct.sockaddr = type { i16, [14 x i8] }

@.str = private unnamed_addr constant [59 x i8] c"../../third_party/boringssl/src/crypto/bio/socket_helper.c\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @bio_ip_and_port_to_socket_and_addr(i32* nocapture, %struct.sockaddr_storage* nocapture, i32* nocapture, i8*, i8*) local_unnamed_addr #0 {
  %6 = alloca %struct.addrinfo, align 8
  %7 = alloca %struct.addrinfo*, align 8
  %8 = bitcast %struct.addrinfo* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %8) #5
  %9 = bitcast %struct.addrinfo** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #5
  store %struct.addrinfo* inttoptr (i64 -6148914691236517206 to %struct.addrinfo*), %struct.addrinfo** %7, align 8
  store i32 -1, i32* %0, align 4
  %10 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %6, i64 0, i32 2
  %11 = bitcast %struct.addrinfo* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 48, i1 false)
  store i32 1, i32* %10, align 8
  %12 = call i32 @getaddrinfo(i8* %3, i8* %4, %struct.addrinfo* nonnull %6, %struct.addrinfo** nonnull %7) #5
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %17

14:                                               ; preds = %5
  %15 = load %struct.addrinfo*, %struct.addrinfo** %7, align 8
  %16 = icmp eq %struct.addrinfo* %15, null
  br i1 %16, label %50, label %19

17:                                               ; preds = %5
  call void @ERR_put_error(i32 2, i32 0, i32 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 57) #5
  %18 = call i8* @gai_strerror(i32 %12) #5
  call void (i32, ...) @ERR_add_error_data(i32 1, i8* %18) #5
  br label %53

19:                                               ; preds = %14, %46
  %20 = phi %struct.addrinfo* [ %48, %46 ], [ %15, %14 ]
  %21 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i64 0, i32 4
  %22 = load i32, i32* %21, align 8
  %23 = icmp ugt i32 %22, 128
  br i1 %23, label %46, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i64 0, i32 4
  %26 = bitcast %struct.sockaddr_storage* %1 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 1 %26, i8 0, i64 128, i1 false) #5
  %27 = load i32, i32* %25, align 8
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = zext i32 %27 to i64
  %31 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i64 0, i32 5
  %32 = bitcast %struct.sockaddr** %31 to i8**
  %33 = load i8*, i8** %32, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %26, i8* align 1 %33, i64 %30, i1 false) #5
  %34 = load i32, i32* %25, align 8
  br label %35

35:                                               ; preds = %24, %29
  %36 = phi i32 [ 0, %24 ], [ %34, %29 ]
  store i32 %36, i32* %2, align 4
  %37 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i64 0, i32 2
  %40 = load i32, i32* %39, align 8
  %41 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i64 0, i32 3
  %42 = load i32, i32* %41, align 4
  %43 = call i32 @socket(i32 %38, i32 %40, i32 %42) #5
  store i32 %43, i32* %0, align 4
  %44 = icmp slt i32 %43, 0
  br i1 %44, label %45, label %50

45:                                               ; preds = %35
  call void @ERR_put_error(i32 2, i32 0, i32 0, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str, i64 0, i64 0), i32 78) #5
  br label %50

46:                                               ; preds = %19
  %47 = getelementptr inbounds %struct.addrinfo, %struct.addrinfo* %20, i64 0, i32 7
  %48 = load %struct.addrinfo*, %struct.addrinfo** %47, align 8
  %49 = icmp eq %struct.addrinfo* %48, null
  br i1 %49, label %50, label %19

50:                                               ; preds = %46, %14, %35, %45
  %51 = phi i32 [ 0, %45 ], [ 1, %35 ], [ 0, %14 ], [ 0, %46 ]
  %52 = load %struct.addrinfo*, %struct.addrinfo** %7, align 8
  call void @freeaddrinfo(%struct.addrinfo* %52) #5
  br label %53

53:                                               ; preds = %50, %17
  %54 = phi i32 [ 0, %17 ], [ %51, %50 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #5
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %8) #5
  ret i32 %54
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare i32 @getaddrinfo(i8*, i8*, %struct.addrinfo*, %struct.addrinfo**) local_unnamed_addr #2

declare void @ERR_put_error(i32, i32, i32, i8*, i32) local_unnamed_addr #2

declare void @ERR_add_error_data(i32, ...) local_unnamed_addr #2

; Function Attrs: nounwind
declare i8* @gai_strerror(i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare i32 @socket(i32, i32, i32) local_unnamed_addr #3

; Function Attrs: nounwind
declare void @freeaddrinfo(%struct.addrinfo*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @bio_socket_nbio(i32, i32) local_unnamed_addr #0 {
  %3 = tail call i32 (i32, i32, ...) @fcntl(i32 %0, i32 3, i32 0) #5
  %4 = icmp slt i32 %3, 0
  br i1 %4, label %13, label %5

5:                                                ; preds = %2
  %6 = icmp eq i32 %1, 0
  %7 = or i32 %3, 2048
  %8 = and i32 %3, -2049
  %9 = select i1 %6, i32 %8, i32 %7
  %10 = tail call i32 (i32, i32, ...) @fcntl(i32 %0, i32 4, i32 %9) #5
  %11 = icmp eq i32 %10, 0
  %12 = zext i1 %11 to i32
  br label %13

13:                                               ; preds = %2, %5
  %14 = phi i32 [ %12, %5 ], [ 0, %2 ]
  ret i32 %14
}

declare i32 @fcntl(i32, i32, ...) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @bio_clear_socket_error() local_unnamed_addr #4 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @bio_sock_error(i32) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = alloca i32, align 4
  %4 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %4) #5
  store i32 -1431655766, i32* %2, align 4
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #5
  store i32 4, i32* %3, align 4
  %6 = call i32 @getsockopt(i32 %0, i32 1, i32 4, i8* nonnull %4, i32* nonnull %3) #5
  %7 = icmp slt i32 %6, 0
  %8 = load i32, i32* %2, align 4
  %9 = select i1 %7, i32 1, i32 %8
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %4) #5
  ret i32 %9
}

; Function Attrs: nounwind
declare i32 @getsockopt(i32, i32, i32, i8*, i32*) local_unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
