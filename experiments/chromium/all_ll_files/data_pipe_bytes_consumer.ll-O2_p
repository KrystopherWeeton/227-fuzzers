; ModuleID = '../../third_party/blink/renderer/platform/loader/fetch/data_pipe_bytes_consumer.cc'
source_filename = "../../third_party/blink/renderer/platform/loader/fetch/data_pipe_bytes_consumer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr", i32, [4 x i8], %"class.std::__1::unique_ptr.148", %"class.std::__1::unique_ptr.148", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.158", %"class.std::__1::unique_ptr.164", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.176", %"class.std::__1::unique_ptr.182", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.189", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.22", %"class.std::__1::unique_ptr.26", %"class.std::__1::unique_ptr.32", %"class.std::__1::unique_ptr.38", %"class.std::__1::unique_ptr.44", %"class.std::__1::unique_ptr.50", %"class.std::__1::unique_ptr.61", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.75", %"class.std::__1::unique_ptr.82", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.89", %"class.std::__1::unique_ptr.96", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.133", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.22" = type { %"class.std::__1::__compressed_pair.23" }
%"class.std::__1::__compressed_pair.23" = type { %"struct.std::__1::__compressed_pair_elem.24" }
%"struct.std::__1::__compressed_pair_elem.24" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.26" = type { %"class.std::__1::__compressed_pair.27" }
%"class.std::__1::__compressed_pair.27" = type { %"struct.std::__1::__compressed_pair_elem.28" }
%"struct.std::__1::__compressed_pair_elem.28" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.32" = type { %"class.std::__1::__compressed_pair.33" }
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.38" = type { %"class.std::__1::__compressed_pair.39" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.44" = type { %"class.std::__1::__compressed_pair.45" }
%"class.std::__1::__compressed_pair.45" = type { %"struct.std::__1::__compressed_pair_elem.46" }
%"struct.std::__1::__compressed_pair_elem.46" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.50" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.53" = type { %"struct.std::__1::__atomic_base.54" }
%"struct.std::__1::__atomic_base.54" = type { %"struct.std::__1::__atomic_base.55" }
%"struct.std::__1::__atomic_base.55" = type { %"struct.std::__1::__cxx_atomic_impl.56" }
%"struct.std::__1::__cxx_atomic_impl.56" = type { %"struct.std::__1::__cxx_atomic_base_impl.57" }
%"struct.std::__1::__cxx_atomic_base_impl.57" = type { i64 }
%"class.std::__1::unique_ptr.61" = type { %"class.std::__1::__compressed_pair.62" }
%"class.std::__1::__compressed_pair.62" = type { %"struct.std::__1::__compressed_pair_elem.63" }
%"struct.std::__1::__compressed_pair_elem.63" = type { %"class.blink::Worklist.64"* }
%"class.blink::Worklist.64" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::Worklist.71"* }
%"class.blink::Worklist.71" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.75" = type { %"class.std::__1::__compressed_pair.76" }
%"class.std::__1::__compressed_pair.76" = type { %"struct.std::__1::__compressed_pair_elem.77" }
%"struct.std::__1::__compressed_pair_elem.77" = type { %"class.blink::Worklist.78"* }
%"class.blink::Worklist.78" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.82" = type { %"class.std::__1::__compressed_pair.83" }
%"class.std::__1::__compressed_pair.83" = type { %"struct.std::__1::__compressed_pair_elem.84" }
%"struct.std::__1::__compressed_pair_elem.84" = type { %"class.blink::Worklist.85"* }
%"class.blink::Worklist.85" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.89" = type { %"class.std::__1::__compressed_pair.90" }
%"class.std::__1::__compressed_pair.90" = type { %"struct.std::__1::__compressed_pair_elem.91" }
%"struct.std::__1::__compressed_pair_elem.91" = type { %"class.blink::Worklist.92"* }
%"class.blink::Worklist.92" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.96" = type { %"class.std::__1::__compressed_pair.97" }
%"class.std::__1::__compressed_pair.97" = type { %"struct.std::__1::__compressed_pair_elem.98" }
%"struct.std::__1::__compressed_pair_elem.98" = type { %"class.blink::Worklist.99"* }
%"class.blink::Worklist.99" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.53" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.120", %"class.std::__1::__compressed_pair.125", %"class.std::__1::__compressed_pair.127", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.116" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.116" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.117" }
%"class.std::__1::__compressed_pair.117" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"struct.std::__1::__compressed_pair_elem.118" = type { i64 }
%"class.std::__1::__compressed_pair.120" = type { %"struct.std::__1::__compressed_pair_elem.121" }
%"struct.std::__1::__compressed_pair_elem.121" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.118" }
%"class.std::__1::__compressed_pair.127" = type { %"struct.std::__1::__compressed_pair_elem.128" }
%"struct.std::__1::__compressed_pair_elem.128" = type { float }
%"class.std::__1::unique_ptr.133" = type { %"class.std::__1::__compressed_pair.134" }
%"class.std::__1::__compressed_pair.134" = type { %"struct.std::__1::__compressed_pair_elem.135" }
%"struct.std::__1::__compressed_pair_elem.135" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.136", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.136" = type { %"class.std::__1::__compressed_pair.137" }
%"class.std::__1::__compressed_pair.137" = type { %"struct.std::__1::__compressed_pair_elem.138" }
%"struct.std::__1::__compressed_pair_elem.138" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.148" = type { %"class.std::__1::__compressed_pair.149" }
%"class.std::__1::__compressed_pair.149" = type { %"struct.std::__1::__compressed_pair_elem.150" }
%"struct.std::__1::__compressed_pair_elem.150" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.156" }
%"class.WTF::VectorBuffer.156" = type { %"class.WTF::VectorBufferBase.157" }
%"class.WTF::VectorBufferBase.157" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.158" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.170" }
%"class.std::__1::unique_ptr.170" = type { %"class.std::__1::__compressed_pair.171" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.64"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.71"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.78"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.85"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.92"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector", i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.193" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.193" = type { %"struct.std::__1::__compressed_pair_elem.194" }
%"struct.std::__1::__compressed_pair_elem.194" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.176" = type { %"class.std::__1::__compressed_pair.177" }
%"class.std::__1::__compressed_pair.177" = type { %"struct.std::__1::__compressed_pair_elem.178" }
%"struct.std::__1::__compressed_pair_elem.178" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.188 }
%class.scoped_refptr.188 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.189" = type { %"struct.std::__1::__atomic_base.190" }
%"struct.std::__1::__atomic_base.190" = type { %"struct.std::__1::__cxx_atomic_impl.191" }
%"struct.std::__1::__cxx_atomic_impl.191" = type { %"struct.std::__1::__cxx_atomic_base_impl.192" }
%"struct.std::__1::__cxx_atomic_base_impl.192" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.blink::DataPipeBytesConsumer" = type <{ %"class.blink::BytesConsumer", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %class.scoped_refptr, %"class.mojo::ScopedHandleBase", [4 x i8], %"class.mojo::SimpleWatcher", %"class.blink::Member", i32, [4 x i8], %"class.blink::BytesConsumer::Error", i64, %"class.absl::optional", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::BytesConsumer" = type { i32 (...)** }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%class.scoped_refptr = type { %"class.base::SingleThreadTaskRunner"* }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::DataPipeConsumerHandle" }
%"class.mojo::DataPipeConsumerHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.3, i8, %"class.mojo::ScopedHandleBase.4", %class.scoped_refptr.5, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback", i8*, %"class.base::WeakPtrFactory" }
%class.scoped_refptr.3 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe" }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"class.mojo::ScopedHandleBase.4" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.5 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.7", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.7" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.8 }
%class.scoped_refptr.8 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.9", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.9" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.10" }
%"struct.std::__1::atomic.10" = type { %"struct.std::__1::__atomic_base.11" }
%"struct.std::__1::__atomic_base.11" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl.13" }
%"struct.std::__1::__cxx_atomic_impl.13" = type { %"struct.std::__1::__cxx_atomic_base_impl.14" }
%"struct.std::__1::__cxx_atomic_base_impl.14" = type { i8 }
%"class.blink::Member" = type { %"class.blink::MemberBase.15" }
%"class.blink::MemberBase.15" = type { %"class.blink::BytesConsumer::Client"* }
%"class.blink::BytesConsumer::Client" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::BytesConsumer::Error" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.16 }
%class.scoped_refptr.16 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic.17" }
%"struct.std::__1::atomic.17" = type { %"struct.std::__1::__atomic_base.18" }
%"struct.std::__1::__atomic_base.18" = type { %"struct.std::__1::__atomic_base.19" }
%"struct.std::__1::__atomic_base.19" = type { %"struct.std::__1::__cxx_atomic_impl.20" }
%"struct.std::__1::__cxx_atomic_impl.20" = type { %"struct.std::__1::__cxx_atomic_base_impl.21" }
%"struct.std::__1::__cxx_atomic_base_impl.21" = type { i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { i64 }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::DataPipeBytesConsumer::CompletionNotifier" = type { %"class.blink::WeakMember" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::DataPipeBytesConsumer"* }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::RepeatingCallback.198" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DataPipeBytesConsumer"*, %"class.blink::PersistentNodePtr" }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"struct.base::internal::BindState.251" = type { %"class.base::internal::BindStateBase", { i64, i64 }, %"class.std::__1::tuple.252" }
%"class.std::__1::tuple.252" = type { %"struct.std::__1::__tuple_impl.253" }
%"struct.std::__1::__tuple_impl.253" = type { %"class.std::__1::__tuple_leaf.254" }
%"class.std::__1::__tuple_leaf.254" = type { %"class.blink::Persistent" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.base::TaskRunner" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%struct.MojoBeginReadDataOptions = type { i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%struct.MojoEndReadDataOptions = type { i32, i32 }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.236", %"class.blink::FreeList", %"class.WTF::Vector.241" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array" }
%"struct.std::__1::array" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.236" = type { %"class.WTF::VectorBuffer.237" }
%"class.WTF::VectorBuffer.237" = type { %"class.WTF::VectorBufferBase.238" }
%"class.WTF::VectorBufferBase.238" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.241" = type { %"class.WTF::VectorBuffer.242" }
%"class.WTF::VectorBuffer.242" = type { %"class.WTF::VectorBufferBase.243" }
%"class.WTF::VectorBufferBase.243" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::BlobDataHandle" = type { %"class.WTF::ThreadSafeRefCounted", %"class.WTF::String", %"class.WTF::String", i64, i8, %"class.mojo::PendingRemote", %"class.WTF::Mutex" }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.200" }
%"class.base::RefCountedThreadSafe.200" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase.201", i32 }
%"class.mojo::ScopedHandleBase.201" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.blink::EncodedFormData" = type <{ %"class.WTF::RefCounted", [4 x i8], %"class.WTF::Vector.203", i64, %"class.WTF::Vector.206", i8, [7 x i8] }>
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.WTF::Vector.203" = type { %"class.WTF::VectorBuffer.204" }
%"class.WTF::VectorBuffer.204" = type { %"class.WTF::VectorBufferBase.205" }
%"class.WTF::VectorBufferBase.205" = type { %"class.blink::FormDataElement"*, i32, i32 }
%"class.blink::FormDataElement" = type { i32, %"class.WTF::Vector.206", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.199, i64, i64, %"class.absl::optional.211", %class.scoped_refptr.217 }
%class.scoped_refptr.199 = type { %"class.blink::BlobDataHandle"* }
%"class.absl::optional.211" = type { %"class.absl::optional_internal::optional_data.212" }
%"class.absl::optional_internal::optional_data.212" = type { %"class.absl::optional_internal::optional_data_base.213" }
%"class.absl::optional_internal::optional_data_base.213" = type { %"class.absl::optional_internal::optional_data_dtor_base.214" }
%"class.absl::optional_internal::optional_data_dtor_base.214" = type { i8, %union.anon.215 }
%union.anon.215 = type { %"class.base::Time" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.216" }
%"class.base::time_internal::TimeBase.216" = type { i64 }
%class.scoped_refptr.217 = type { %"class.blink::WrappedDataPipeGetter"* }
%"class.blink::WrappedDataPipeGetter" = type opaque
%"class.WTF::Vector.206" = type { %"class.WTF::VectorBuffer.207" }
%"class.WTF::VectorBuffer.207" = type { %"class.WTF::VectorBufferBase.208" }
%"class.WTF::VectorBufferBase.208" = type { i8*, i32, i32 }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.222" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem.223" }
%"struct.std::__1::__compressed_pair_elem.223" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.224 }
%union.anon.224 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_21DataPipeBytesConsumerEEC2EPS2_ = comdat any

$_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE = comdat any

$_ZN5blink13BytesConsumer15DrainAsFormDataEv = comdat any

$_ZNK5blink21DataPipeBytesConsumer8GetErrorEv = comdat any

$_ZNK5blink21DataPipeBytesConsumer9DebugNameEv = comdat any

$_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ = comdat any

$_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN5blink21DataPipeBytesConsumer18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZN5blink7Visitor14HandleWeakCellINS_21DataPipeBytesConsumerEEEvRKNS_14LivenessBrokerEPKv = comdat any

$_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21DataPipeBytesConsumer18CompletionNotifierEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE7GetNameEPKv = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj = comdat any

$_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEEEC2IRS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_ = comdat any

$_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZZN5blink11GCInfoTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink21DataPipeBytesConsumerE = hidden unnamed_addr constant { [16 x i8*] } { [16 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::DataPipeBytesConsumer"*)* @_ZN5blink21DataPipeBytesConsumerD2Ev to i8*), i8* bitcast (void (%"class.blink::DataPipeBytesConsumer"*)* @_ZN5blink21DataPipeBytesConsumerD0Ev to i8*), i8* bitcast (i32 (%"class.blink::DataPipeBytesConsumer"*, i8**, i64*)* @_ZN5blink21DataPipeBytesConsumer9BeginReadEPPKcPm to i8*), i8* bitcast (i32 (%"class.blink::DataPipeBytesConsumer"*, i64)* @_ZN5blink21DataPipeBytesConsumer7EndReadEm to i8*), i8* bitcast (%"class.blink::BlobDataHandle"* (%"class.blink::BytesConsumer"*, i32)* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE to i8*), i8* bitcast (%"class.blink::EncodedFormData"* (%"class.blink::BytesConsumer"*)* @_ZN5blink13BytesConsumer15DrainAsFormDataEv to i8*), i8* bitcast (void (%"class.mojo::ScopedHandleBase"*, %"class.blink::DataPipeBytesConsumer"*)* @_ZN5blink21DataPipeBytesConsumer15DrainAsDataPipeEv to i8*), i8* bitcast (void (%"class.blink::DataPipeBytesConsumer"*, %"class.blink::BytesConsumer::Client"*)* @_ZN5blink21DataPipeBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE to i8*), i8* bitcast (void (%"class.blink::DataPipeBytesConsumer"*)* @_ZN5blink21DataPipeBytesConsumer11ClearClientEv to i8*), i8* bitcast (void (%"class.blink::DataPipeBytesConsumer"*)* @_ZN5blink21DataPipeBytesConsumer6CancelEv to i8*), i8* bitcast (i32 (%"class.blink::DataPipeBytesConsumer"*)* @_ZNK5blink21DataPipeBytesConsumer14GetPublicStateEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::DataPipeBytesConsumer"*)* @_ZNK5blink21DataPipeBytesConsumer8GetErrorEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::DataPipeBytesConsumer"*)* @_ZNK5blink21DataPipeBytesConsumer9DebugNameEv to i8*), i8* bitcast (void (%"class.blink::DataPipeBytesConsumer"*, %"class.blink::Visitor"*)* @_ZNK5blink21DataPipeBytesConsumer5TraceEPNS_7VisitorE to i8*)] }, align 8
@.str = private unnamed_addr constant [22 x i8] c"DataPipeBytesConsumer\00", align 1
@.str.1 = private unnamed_addr constant [83 x i8] c"../../third_party/blink/renderer/platform/loader/fetch/data_pipe_bytes_consumer.cc\00", align 1
@.str.2 = private unnamed_addr constant [6 x i8] c"error\00", align 1
@.str.3 = private unnamed_addr constant [8 x i8] c"EndRead\00", align 1
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.4 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.5 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@.str.6 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.7 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.8 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4

@_ZN5blink21DataPipeBytesConsumerC1E13scoped_refptrIN4base22SingleThreadTaskRunnerEEN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPPNS0_18CompletionNotifierE = hidden unnamed_addr alias void (%"class.blink::DataPipeBytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::ScopedHandleBase"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"**), void (%"class.blink::DataPipeBytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::ScopedHandleBase"*, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"**)* @_ZN5blink21DataPipeBytesConsumerC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEEN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPPNS0_18CompletionNotifierE
@_ZN5blink21DataPipeBytesConsumerD1Ev = hidden unnamed_addr alias void (%"class.blink::DataPipeBytesConsumer"*), void (%"class.blink::DataPipeBytesConsumer"*)* @_ZN5blink21DataPipeBytesConsumerD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier14SignalCompleteEv(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer::CompletionNotifier", %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %0, i64 0, i32 0, i32 0, i32 0
  %3 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %2, align 8
  %4 = icmp eq %"class.blink::DataPipeBytesConsumer"* %3, null
  br i1 %4, label %40, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 8
  %7 = load i32, i32* %6, align 8
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %9, label %40

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 15
  %11 = load i8, i8* %10, align 2, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %40

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 16
  %15 = load i8, i8* %14, align 1, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %40

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 13
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %22, label %21

21:                                               ; preds = %17
  store i8 1, i8* %10, align 2
  br label %40

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 17
  store i8 1, i8* %23, align 4
  %24 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 7, i32 0, i32 0
  %25 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 4, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %38

29:                                               ; preds = %22
  store i32 2, i32* %6, align 8
  %30 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 7
  %31 = bitcast %"class.blink::Member"* %30 to i64*
  store atomic i64 0, i64* %31 monotonic, align 8
  %32 = icmp eq %"class.blink::BytesConsumer::Client"* %25, null
  br i1 %32, label %40, label %33

33:                                               ; preds = %29
  %34 = bitcast %"class.blink::BytesConsumer::Client"* %25 to void (%"class.blink::BytesConsumer::Client"*)***
  %35 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %34, align 8
  %36 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %35, i64 3
  %37 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %36, align 8
  tail call void %37(%"class.blink::BytesConsumer::Client"* nonnull %25) #10
  br label %40

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %3, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %39) #10
  br label %40

40:                                               ; preds = %1, %38, %33, %29, %21, %13, %9, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer14SignalCompleteEv(%"class.blink::DataPipeBytesConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 2
  br i1 %4, label %5, label %36

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 15
  %7 = load i8, i8* %6, align 2, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %9, label %36

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 16
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %13, label %36

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %13
  store i8 1, i8* %6, align 2
  br label %36

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  store i8 1, i8* %19, align 4
  %20 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %34

25:                                               ; preds = %18
  store i32 2, i32* %2, align 8
  %26 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %27 = bitcast %"class.blink::Member"* %26 to i64*
  store atomic i64 0, i64* %27 monotonic, align 8
  %28 = icmp eq %"class.blink::BytesConsumer::Client"* %21, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %25
  %30 = bitcast %"class.blink::BytesConsumer::Client"* %21 to void (%"class.blink::BytesConsumer::Client"*)***
  %31 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %31, i64 3
  %33 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %32, align 8
  tail call void %33(%"class.blink::BytesConsumer::Client"* nonnull %21) #10
  br label %36

34:                                               ; preds = %18
  %35 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %35) #10
  br label %36

36:                                               ; preds = %34, %25, %29, %9, %5, %1, %17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier10SignalSizeEm(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer::CompletionNotifier", %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %3, align 8
  %5 = icmp eq %"class.blink::DataPipeBytesConsumer"* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink21DataPipeBytesConsumer10SignalSizeEm(%"class.blink::DataPipeBytesConsumer"* nonnull %4, i64 %1)
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer10SignalSizeEm(%"class.blink::DataPipeBytesConsumer"*, i64) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BytesConsumer::Error", align 8
  %4 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %81

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 15
  %9 = load i8, i8* %8, align 2, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %81

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 16
  %13 = load i8, i8* %12, align 1, !range !2
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %15, label %81

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %16, align 8
  %17 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  store i64 %1, i64* %17, align 8
  %18 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %42

21:                                               ; preds = %15
  %22 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 11
  %23 = load i64, i64* %22, align 8
  %24 = icmp ult i64 %23, %1
  br i1 %24, label %25, label %42

25:                                               ; preds = %21
  %26 = bitcast %"class.blink::BytesConsumer::Error"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #10
  %27 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  %29 = load i8, i8* %28, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %32, label %31

31:                                               ; preds = %25
  store i8 1, i8* %12, align 1
  br label %41

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %34 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %33, align 8
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %3) #10
  %35 = icmp eq %"class.blink::BytesConsumer::Client"* %34, null
  br i1 %35, label %41, label %36

36:                                               ; preds = %32
  %37 = bitcast %"class.blink::BytesConsumer::Client"* %34 to void (%"class.blink::BytesConsumer::Client"*)***
  %38 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %37, align 8
  %39 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %38, i64 3
  %40 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %39, align 8
  tail call void %40(%"class.blink::BytesConsumer::Client"* nonnull %34) #10
  br label %41

41:                                               ; preds = %36, %32, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #10
  br label %81

42:                                               ; preds = %15, %21
  %43 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  %44 = load i8, i8* %43, align 8, !range !2
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %81

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 11
  %48 = load i64, i64* %47, align 8
  %49 = icmp eq i64 %48, %1
  br i1 %49, label %50, label %81

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %51) #10
  %52 = load i32, i32* %18, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = tail call i32 @MojoClose(i32 %52) #10
  br label %56

56:                                               ; preds = %50, %54
  store i32 0, i32* %18, align 4
  %57 = load i32, i32* %4, align 8
  %58 = icmp ult i32 %57, 2
  br i1 %58, label %59, label %81

59:                                               ; preds = %56
  %60 = load i8, i8* %8, align 2, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %62, label %81

62:                                               ; preds = %59
  %63 = load i8, i8* %12, align 1, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %81

65:                                               ; preds = %62
  %66 = load i8, i8* %43, align 8, !range !2
  %67 = icmp eq i8 %66, 0
  br i1 %67, label %69, label %68

68:                                               ; preds = %65
  store i8 1, i8* %8, align 2
  br label %81

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  store i8 1, i8* %70, align 4
  %71 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %72 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %71, align 8
  store i32 2, i32* %4, align 8
  %73 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %74 = bitcast %"class.blink::Member"* %73 to i64*
  store atomic i64 0, i64* %74 monotonic, align 8
  %75 = icmp eq %"class.blink::BytesConsumer::Client"* %72, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %69
  %77 = bitcast %"class.blink::BytesConsumer::Client"* %72 to void (%"class.blink::BytesConsumer::Client"*)***
  %78 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %78, i64 3
  %80 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %79, align 8
  tail call void %80(%"class.blink::BytesConsumer::Client"* nonnull %72) #10
  br label %81

81:                                               ; preds = %76, %69, %68, %62, %59, %56, %42, %11, %7, %2, %41, %46
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer18CompletionNotifier11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"* nocapture readonly, %"class.blink::BytesConsumer::Error"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer::CompletionNotifier", %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %0, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %3, align 8
  %5 = icmp eq %"class.blink::DataPipeBytesConsumer"* %4, null
  br i1 %5, label %32, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %4, i64 0, i32 8
  %8 = load i32, i32* %7, align 8
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %10, label %32

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %4, i64 0, i32 15
  %12 = load i8, i8* %11, align 2, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %32

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %4, i64 0, i32 16
  %16 = load i8, i8* %15, align 1, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %32

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %4, i64 0, i32 13
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %18
  store i8 1, i8* %15, align 1
  br label %32

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %4, i64 0, i32 7, i32 0, i32 0
  %25 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %24, align 8
  tail call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* nonnull %4, %"class.blink::BytesConsumer::Error"* dereferenceable(8) %1) #10
  %26 = icmp eq %"class.blink::BytesConsumer::Client"* %25, null
  br i1 %26, label %32, label %27

27:                                               ; preds = %23
  %28 = bitcast %"class.blink::BytesConsumer::Client"* %25 to void (%"class.blink::BytesConsumer::Client"*)***
  %29 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %28, align 8
  %30 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %29, i64 3
  %31 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %30, align 8
  tail call void %31(%"class.blink::BytesConsumer::Client"* nonnull %25) #10
  br label %32

32:                                               ; preds = %2, %27, %23, %22, %14, %10, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer11SignalErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"*, %"class.blink::BytesConsumer::Error"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %28

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 15
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %10, label %28

10:                                               ; preds = %6
  %11 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 16
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %28

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  %16 = load i8, i8* %15, align 8, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %19, label %18

18:                                               ; preds = %14
  store i8 1, i8* %11, align 1
  br label %28

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %21 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %20, align 8
  tail call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* dereferenceable(8) %1)
  %22 = icmp eq %"class.blink::BytesConsumer::Client"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.blink::BytesConsumer::Client"* %21 to void (%"class.blink::BytesConsumer::Client"*)***
  %25 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %25, i64 3
  %27 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %26, align 8
  tail call void %27(%"class.blink::BytesConsumer::Client"* nonnull %21) #10
  br label %28

28:                                               ; preds = %23, %19, %10, %6, %2, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21DataPipeBytesConsumer18CompletionNotifier5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer::CompletionNotifier"*, %"class.blink::Visitor"*) local_unnamed_addr #0 align 2 {
  %3 = bitcast %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %0 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %13, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::DataPipeBytesConsumer::CompletionNotifier"* %0 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, i64 6
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %7, i8* %8, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_21DataPipeBytesConsumerEEEvRKNS_14LivenessBrokerEPKv) #10
  br label %13

13:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumerC2E13scoped_refptrIN4base22SingleThreadTaskRunnerEEN4mojo16ScopedHandleBaseINS5_22DataPipeConsumerHandleEEEPPNS0_18CompletionNotifierE(%"class.blink::DataPipeBytesConsumer"*, %"class.base::SingleThreadTaskRunner"*, %"class.mojo::ScopedHandleBase"* nocapture, %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** nocapture) unnamed_addr #0 align 2 {
  %5 = alloca <2 x i64>, align 16
  %6 = bitcast <2 x i64>* %5 to { i64, i64 }*
  %7 = alloca %"class.mojo::Handle", align 4
  %8 = alloca %"class.base::RepeatingCallback", align 8
  %9 = alloca %"class.base::Location", align 8
  %10 = alloca %"class.base::RepeatingCallback.198", align 8
  %11 = alloca %"class.blink::Persistent", align 8
  %12 = ptrtoint %"class.base::SingleThreadTaskRunner"* %1 to i64
  %13 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21DataPipeBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 1
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_21DataPipeBytesConsumerEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %14, %"class.blink::DataPipeBytesConsumer"* %0)
  %15 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 3
  %16 = bitcast %class.scoped_refptr* %15 to i64*
  store i64 %12, i64* %16, align 8
  %17 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %2, i64 0, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4, !noalias !3
  store i32 %19, i32* %17, align 4, !alias.scope !3
  store i32 0, i32* %18, align 4, !noalias !3
  %20 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  %21 = bitcast %"class.base::Location"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %9, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1, i64 0, i64 0), i32 44) #10
  %22 = bitcast %class.scoped_refptr* %15 to %"class.base::SequencedTaskRunner"**
  %23 = load %"class.base::SequencedTaskRunner"*, %"class.base::SequencedTaskRunner"** %22, align 8
  %24 = icmp eq %"class.base::SequencedTaskRunner"* %23, null
  br i1 %24, label %28, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %"class.base::SequencedTaskRunner", %"class.base::SequencedTaskRunner"* %23, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 1 monotonic
  br label %28

28:                                               ; preds = %4, %25
  call void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"* %20, %"class.base::Location"* nonnull dereferenceable(32) %9, i32 1, %"class.base::SequencedTaskRunner"* %23, i8* null) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #10
  %29 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::BytesConsumer::Client"* null, %"class.blink::BytesConsumer::Client"** %29, align 8
  %30 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  store i32 1, i32* %30, align 8
  %31 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  %33 = ptrtoint %"class.blink::DataPipeBytesConsumer"* %0 to i64
  %34 = bitcast %"class.WTF::StringImpl"** %31 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %34, i8 0, i64 17, i1 false)
  call void @llvm.memset.p0i8.i64(i8* align 8 %32, i8 0, i64 5, i1 false)
  %35 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_21DataPipeBytesConsumer18CompletionNotifierEEEPhm(i64 8) #10
  %36 = bitcast i8* %35 to i64*
  store i64 %33, i64* %36, align 8
  %37 = getelementptr inbounds i8, i8* %35, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = bitcast %"class.blink::DataPipeBytesConsumer::CompletionNotifier"** %3 to i8**
  store i8* %35, i8** %41, align 8
  %42 = load i32, i32* %17, align 4
  %43 = bitcast %"class.blink::Persistent"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %43) #10
  %44 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %11, i64 0, i32 0
  %45 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %11, i64 0, i32 0, i32 0
  store %"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::DataPipeBytesConsumer"** %45, align 8, !alias.scope !6
  %46 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %11, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %46, align 8, !alias.scope !6
  switch i64 %33, label %47 [
    i64 0, label %73
    i64 -1, label %73
  ]

47:                                               ; preds = %28
  %48 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !6
  %49 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %48, i64 0, i32 1
  %50 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %49) #10, !noalias !6
  %51 = icmp eq i8* %50, null
  br i1 %51, label %52, label %54, !prof !9

52:                                               ; preds = %47
  %53 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %49, i8* %53) #10
  br label %54

54:                                               ; preds = %52, %47
  %55 = phi i8* [ %53, %52 ], [ %50, %47 ]
  %56 = bitcast i8* %55 to %"class.blink::ThreadState"**
  %57 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %56, align 8, !noalias !6
  %58 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %57, i64 0, i32 3, i32 0, i32 0, i32 0
  %59 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %58, align 8, !noalias !6
  %60 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %59, i64 0, i32 0, i32 0
  %61 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %60, align 8, !noalias !6
  %62 = icmp eq %"class.blink::PersistentNode"* %61, null
  br i1 %62, label %63, label %66, !prof !9

63:                                               ; preds = %54
  %64 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %59, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %64) #10
  %65 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %60, align 8
  br label %66

66:                                               ; preds = %63, %54
  %67 = phi %"class.blink::PersistentNode"* [ %65, %63 ], [ %61, %54 ]
  %68 = bitcast %"class.blink::PersistentNode"* %67 to i64*
  %69 = load i64, i64* %68, align 8, !noalias !6
  %70 = bitcast %"class.blink::PersistentRegion"* %59 to i64*
  store i64 %69, i64* %70, align 8, !noalias !6
  %71 = bitcast %"class.blink::PersistentNode"* %67 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %44, %"class.blink::PersistentBase"** %71, align 8, !noalias !6
  %72 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %67, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %72, align 8
  store %"class.blink::PersistentNode"* %67, %"class.blink::PersistentNode"** %46, align 8, !alias.scope !6
  br label %73

73:                                               ; preds = %28, %28, %66
  %74 = bitcast <2 x i64>* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74)
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DataPipeBytesConsumer"*, i32)* @_ZN5blink21DataPipeBytesConsumer6NotifyEj to i64), i64 0>, <2 x i64>* %5, align 16, !noalias !10
  %75 = call i8* @_Znwm(i64 64) #11, !noalias !13
  %76 = bitcast i8* %75 to %"struct.base::internal::BindState.251"*
  call void @_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEEEC2IRS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.251"* nonnull %76, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj to void ()*), { i64, i64 }* nonnull dereferenceable(16) %6, %"class.blink::Persistent"* nonnull dereferenceable(16) %11) #10, !noalias !13
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74)
  %77 = bitcast %"class.mojo::Handle"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77)
  %78 = bitcast %"class.base::RepeatingCallback"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78)
  %79 = getelementptr inbounds %"class.mojo::Handle", %"class.mojo::Handle"* %7, i64 0, i32 0
  store i32 %42, i32* %79, align 4
  %80 = call i8* @_Znwm(i64 48) #11, !noalias !18
  %81 = bitcast i8* %80 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %81, void ()* bitcast (void (%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_ to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !18
  %82 = getelementptr inbounds i8, i8* %80, i64 32
  %83 = bitcast i8* %82 to i64*
  store i64 ptrtoint (void (%"class.base::RepeatingCallback.198"*, i32, %"struct.mojo::HandleSignalsState"*)* @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE to i64), i64* %83, align 8, !noalias !18
  %84 = getelementptr inbounds i8, i8* %80, i64 40
  %85 = getelementptr inbounds %"class.base::RepeatingCallback.198", %"class.base::RepeatingCallback.198"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %86 = ptrtoint i8* %75 to i64
  %87 = bitcast i8* %84 to i64*
  store i64 %86, i64* %87, align 8, !noalias !18
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %85, align 8, !noalias !18
  %88 = bitcast %"class.base::RepeatingCallback"* %8 to i8**
  store i8* %80, i8** %88, align 8, !alias.scope !18
  %89 = call i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"* %20, %"class.mojo::Handle"* nonnull %7, i32 5, i32 1, %"class.base::RepeatingCallback"* nonnull %8) #10
  %90 = getelementptr inbounds %"class.base::RepeatingCallback", %"class.base::RepeatingCallback"* %8, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %90) #10
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78)
  %91 = getelementptr inbounds %"class.base::RepeatingCallback.198", %"class.base::RepeatingCallback.198"* %10, i64 0, i32 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %91) #10
  %92 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %46, align 8
  %93 = icmp eq %"class.blink::PersistentNode"* %92, null
  br i1 %93, label %113, label %94

94:                                               ; preds = %73
  %95 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %96 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %95, i64 0, i32 1
  %97 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %96) #10
  %98 = icmp eq i8* %97, null
  br i1 %98, label %99, label %101, !prof !9

99:                                               ; preds = %94
  %100 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %96, i8* %100) #10
  br label %101

101:                                              ; preds = %99, %94
  %102 = phi i8* [ %100, %99 ], [ %97, %94 ]
  %103 = bitcast i8* %102 to %"class.blink::ThreadState"**
  %104 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %103, align 8
  %105 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %104, i64 0, i32 3, i32 0, i32 0, i32 0
  %106 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %105, align 8
  %107 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %46, align 8
  %108 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %106, i64 0, i32 0, i32 0
  %109 = bitcast %"class.blink::PersistentRegion"* %106 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = bitcast %"class.blink::PersistentNode"* %107 to i64*
  store i64 %110, i64* %111, align 8
  %112 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %107, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %112, align 8
  store %"class.blink::PersistentNode"* %107, %"class.blink::PersistentNode"** %108, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %46, align 8
  br label %113

113:                                              ; preds = %101, %73
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %43) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_21DataPipeBytesConsumerEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::DataPipeBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::DataPipeBytesConsumer"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #10
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !9

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #10
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #10
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink21DataPipeBytesConsumer18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* sret, i8*, i8*, i32) local_unnamed_addr #2

declare void @_ZN4mojo13SimpleWatcherC1ERKN4base8LocationENS0_12ArmingPolicyE13scoped_refptrINS1_19SequencedTaskRunnerEEPKc(%"class.mojo::SimpleWatcher"*, %"class.base::Location"* dereferenceable(32), i32, %"class.base::SequencedTaskRunner"*, i8*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer6NotifyEj(%"class.blink::DataPipeBytesConsumer"*, i32) #0 align 2 {
  %3 = alloca i64, align 8
  %4 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, 2
  br i1 %6, label %7, label %60

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 14
  store i8 1, i8* %12, align 1
  br label %60

13:                                               ; preds = %7
  %14 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14)
  %15 = bitcast i64* %3 to %"struct.mojo::HandleSignalsState"*
  %16 = bitcast i64* %3 to i32*
  %17 = getelementptr inbounds %"struct.mojo::HandleSignalsState", %"struct.mojo::HandleSignalsState"* %15, i64 0, i32 0, i32 1
  store i32 0, i32* %16, align 8
  store i32 0, i32* %17, align 4
  %18 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = bitcast i64* %3 to %struct.MojoHandleSignalsState*
  %21 = call i32 @MojoQueryHandleSignalsState(i32 %19, %struct.MojoHandleSignalsState* nonnull %20) #10
  %22 = load i64, i64* %3, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14)
  %23 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %24 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %23, align 8
  %25 = and i64 %22, 4294967296
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %27, label %48

27:                                               ; preds = %13
  %28 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %28) #10
  %29 = load i32, i32* %18, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %27
  %32 = call i32 @MojoClose(i32 %29) #10
  br label %33

33:                                               ; preds = %27, %31
  store i32 0, i32* %18, align 4
  %34 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  %35 = load i8, i8* %34, align 4, !range !2
  %36 = icmp ne i8 %35, 0
  %37 = load i32, i32* %4, align 8
  %38 = icmp ult i32 %37, 2
  %39 = and i1 %36, %38
  br i1 %39, label %40, label %43

40:                                               ; preds = %33
  store i32 2, i32* %4, align 8
  %41 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %42 = bitcast %"class.blink::Member"* %41 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  br label %43

43:                                               ; preds = %33, %40
  %44 = phi i32 [ 2, %40 ], [ %37, %33 ]
  %45 = icmp ult i32 %44, 2
  %46 = icmp eq %"class.blink::BytesConsumer::Client"* %24, null
  %47 = or i1 %46, %45
  br i1 %47, label %60, label %55

48:                                               ; preds = %13
  %49 = and i64 %22, 1
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %51, label %53

51:                                               ; preds = %48
  %52 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %52) #10
  br label %60

53:                                               ; preds = %48
  %54 = icmp eq %"class.blink::BytesConsumer::Client"* %24, null
  br i1 %54, label %60, label %55

55:                                               ; preds = %43, %53
  %56 = bitcast %"class.blink::BytesConsumer::Client"* %24 to void (%"class.blink::BytesConsumer::Client"*)***
  %57 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %56, align 8
  %58 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %57, i64 3
  %59 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %58, align 8
  call void %59(%"class.blink::BytesConsumer::Client"* nonnull %24) #10
  br label %60

60:                                               ; preds = %51, %43, %53, %55, %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumerD2Ev(%"class.blink::DataPipeBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21DataPipeBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %20) #10
  %21 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @MojoClose(i32 %22) #10
  br label %26

26:                                               ; preds = %19, %24
  %27 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 3, i32 0
  %28 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %27, align 8
  %29 = icmp eq %"class.base::SingleThreadTaskRunner"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %28, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %37) #10
  br label %38

38:                                               ; preds = %26, %30, %35
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumerD0Ev(%"class.blink::DataPipeBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [16 x i8*] }, { [16 x i8*] }* @_ZTVN5blink21DataPipeBytesConsumerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #10
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcherD1Ev(%"class.mojo::SimpleWatcher"* %20) #10
  %21 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %26, label %24

24:                                               ; preds = %19
  %25 = tail call i32 @MojoClose(i32 %22) #10
  br label %26

26:                                               ; preds = %24, %19
  %27 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 3, i32 0
  %28 = load %"class.base::SingleThreadTaskRunner"*, %"class.base::SingleThreadTaskRunner"** %27, align 8
  %29 = icmp eq %"class.base::SingleThreadTaskRunner"* %28, null
  br i1 %29, label %38, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.base::SingleThreadTaskRunner", %"class.base::SingleThreadTaskRunner"* %28, i64 0, i32 0, i32 0, i32 1
  %32 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = atomicrmw sub i32* %32, i32 1 acq_rel
  %34 = icmp eq i32 %33, 1
  br i1 %34, label %35, label %38

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.base::RefCountedThreadSafe", %"class.base::RefCountedThreadSafe"* %31, i64 -2
  %37 = bitcast %"class.base::RefCountedThreadSafe"* %36 to %"class.base::TaskRunner"*
  tail call void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"* %37) #10
  br label %38

38:                                               ; preds = %26, %30, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21DataPipeBytesConsumer9BeginReadEPPKcPm(%"class.blink::DataPipeBytesConsumer"*, i8**, i64* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %struct.MojoBeginReadDataOptions, align 8
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::BytesConsumer::Error", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.blink::BytesConsumer::Error", align 8
  %9 = alloca %"class.WTF::String", align 8
  store i8* null, i8** %1, align 8
  store i64 0, i64* %2, align 8
  %10 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  switch i32 %11, label %13 [
    i32 2, label %168
    i32 3, label %12
  ]

12:                                               ; preds = %3
  br label %168

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %168, label %17

17:                                               ; preds = %13
  %18 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %18) #10
  store i32 0, i32* %5, align 4
  %19 = bitcast %struct.MojoBeginReadDataOptions* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #10
  %20 = getelementptr inbounds %struct.MojoBeginReadDataOptions, %struct.MojoBeginReadDataOptions* %4, i64 0, i32 0
  %21 = getelementptr inbounds %struct.MojoBeginReadDataOptions, %struct.MojoBeginReadDataOptions* %4, i64 0, i32 1
  store i32 8, i32* %20, align 8
  store i32 0, i32* %21, align 4
  %22 = call i32 @MojoBeginReadData(i32 %15, %struct.MojoBeginReadDataOptions* nonnull %4, i8** %1, i32* nonnull %5) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #10
  switch i32 %22, label %112 [
    i32 0, label %23
    i32 17, label %27
    i32 9, label %29
  ]

23:                                               ; preds = %17
  %24 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  store i8 1, i8* %24, align 8
  %25 = load i32, i32* %5, align 4
  %26 = zext i32 %25 to i64
  store i64 %26, i64* %2, align 8
  br label %166

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %28) #10
  br label %166

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %30) #10
  %31 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %29
  %35 = call i32 @MojoClose(i32 %32) #10
  br label %36

36:                                               ; preds = %29, %34
  store i32 0, i32* %31, align 4
  %37 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 8, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %100, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 11
  %42 = load i64, i64* %41, align 8
  %43 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %44 = load i64, i64* %43, align 8
  %45 = icmp ult i64 %42, %44
  br i1 %45, label %46, label %100

46:                                               ; preds = %40
  %47 = bitcast %"class.blink::BytesConsumer::Error"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #10
  %48 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #10
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %50, %"class.WTF::StringImpl"** %51, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %50, null
  br i1 %52, label %70, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %71

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #10
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %68, !prof !9

67:                                               ; preds = %58
  call void @llvm.trap() #10
  unreachable

68:                                               ; preds = %58
  %69 = trunc i33 %64 to i32
  store i32 %69, i32* %59, align 4
  br label %71

70:                                               ; preds = %46
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %6)
  br label %83

71:                                               ; preds = %53, %68
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %6)
  %72 = load atomic i32, i32* %54 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %50, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %71
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %71
  %80 = phi i32 [ %78, %77 ], [ %76, %71 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %50) #10
  br label %83

83:                                               ; preds = %70, %79, %82
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %83
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #10
  br label %99

99:                                               ; preds = %83, %95, %98
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #10
  br label %166

100:                                              ; preds = %36, %40
  %101 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  %102 = load i8, i8* %101, align 4, !range !2
  %103 = icmp eq i8 %102, 0
  %104 = load i32, i32* %10, align 8
  %105 = icmp ult i32 %104, 2
  br i1 %103, label %110, label %106

106:                                              ; preds = %100
  br i1 %105, label %107, label %166

107:                                              ; preds = %106
  store i32 2, i32* %10, align 8
  %108 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %109 = bitcast %"class.blink::Member"* %108 to i64*
  store atomic i64 0, i64* %109 monotonic, align 8
  br label %166

110:                                              ; preds = %100
  %111 = select i1 %105, i32 1, i32 2
  br label %166

112:                                              ; preds = %17
  %113 = bitcast %"class.blink::BytesConsumer::Error"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %113) #10
  %114 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #10
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %116, %"class.WTF::StringImpl"** %117, align 8
  %118 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %118, label %136, label %119

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load atomic i32, i32* %120 monotonic, align 4
  %122 = and i32 %121, 2
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %137

124:                                              ; preds = %119
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %126 = load i32, i32* %125, align 4
  %127 = zext i32 %126 to i33
  %128 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %127, i33 1) #10
  %129 = extractvalue { i33, i1 } %128, 1
  %130 = extractvalue { i33, i1 } %128, 0
  %131 = icmp slt i33 %130, 0
  %132 = or i1 %129, %131
  br i1 %132, label %133, label %134, !prof !9

133:                                              ; preds = %124
  call void @llvm.trap() #10
  unreachable

134:                                              ; preds = %124
  %135 = trunc i33 %130 to i32
  store i32 %135, i32* %125, align 4
  br label %137

136:                                              ; preds = %112
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %8)
  br label %149

137:                                              ; preds = %119, %134
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %8)
  %138 = load atomic i32, i32* %120 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %137
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %137
  %146 = phi i32 [ %144, %143 ], [ %142, %137 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #10
  br label %149

149:                                              ; preds = %136, %145, %148
  %150 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %151 = icmp eq %"class.WTF::StringImpl"* %150, null
  br i1 %151, label %165, label %152

152:                                              ; preds = %149
  %153 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %154 = load atomic i32, i32* %153 monotonic, align 4
  %155 = and i32 %154, 2
  %156 = icmp eq i32 %155, 0
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %150, i64 0, i32 0
  %158 = load i32, i32* %157, align 4
  br i1 %156, label %159, label %161

159:                                              ; preds = %152
  %160 = add i32 %158, -1
  store i32 %160, i32* %157, align 4
  br label %161

161:                                              ; preds = %159, %152
  %162 = phi i32 [ %160, %159 ], [ %158, %152 ]
  %163 = icmp eq i32 %162, 0
  br i1 %163, label %164, label %165

164:                                              ; preds = %161
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %150) #10
  br label %165

165:                                              ; preds = %149, %161, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %113) #10
  br label %166

166:                                              ; preds = %110, %107, %106, %165, %99, %27, %23
  %167 = phi i32 [ 3, %165 ], [ 3, %99 ], [ 1, %27 ], [ 0, %23 ], [ 2, %106 ], [ 2, %107 ], [ %111, %110 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %18) #10
  br label %168

168:                                              ; preds = %13, %3, %166, %12
  %169 = phi i32 [ 3, %12 ], [ %167, %166 ], [ %11, %3 ], [ 1, %13 ]
  ret i32 %169
}

declare void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer13ClearDataPipeEv(%"class.blink::DataPipeBytesConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %2) #10
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = tail call i32 @MojoClose(i32 %4) #10
  br label %8

8:                                                ; preds = %1, %6
  store i32 0, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"*, %"class.blink::BytesConsumer::Error"* nocapture readonly dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %57

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %7) #10
  %8 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %13, label %11

11:                                               ; preds = %6
  %12 = tail call i32 @MojoClose(i32 %9) #10
  br label %13

13:                                               ; preds = %6, %11
  store i32 0, i32* %8, align 4
  store i32 3, i32* %3, align 8
  %14 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 10
  %15 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %1, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %35, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %35

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i33
  %27 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %26, i33 1) #10
  %28 = extractvalue { i33, i1 } %27, 1
  %29 = extractvalue { i33, i1 } %27, 0
  %30 = icmp slt i33 %29, 0
  %31 = or i1 %28, %30
  br i1 %31, label %32, label %33, !prof !9

32:                                               ; preds = %23
  tail call void @llvm.trap() #10
  unreachable

33:                                               ; preds = %23
  %34 = trunc i33 %29 to i32
  store i32 %34, i32* %24, align 4
  br label %35

35:                                               ; preds = %33, %18, %13
  %36 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  %37 = bitcast %"class.blink::BytesConsumer::Error"* %14 to i64*
  %38 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %14, i64 0, i32 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  store i64 %36, i64* %37, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #10
  br label %54

54:                                               ; preds = %35, %50, %53
  %55 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %56 = bitcast %"class.blink::Member"* %55 to i64*
  store atomic i64 0, i64* %56 monotonic, align 8
  br label %57

57:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer10MaybeCloseEv(%"class.blink::DataPipeBytesConsumer"* nocapture) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  %3 = load i8, i8* %2, align 4, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %11 = load i32, i32* %10, align 8
  %12 = icmp ult i32 %11, 2
  br i1 %12, label %13, label %16

13:                                               ; preds = %9
  store i32 2, i32* %10, align 8
  %14 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %15 = bitcast %"class.blink::Member"* %14 to i64*
  store atomic i64 0, i64* %15 monotonic, align 8
  br label %16

16:                                               ; preds = %5, %1, %9, %13
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK5blink21DataPipeBytesConsumer19IsReadableOrWaitingEv(%"class.blink::DataPipeBytesConsumer"* nocapture readonly) local_unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp ult i32 %3, 2
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21DataPipeBytesConsumer7EndReadEm(%"class.blink::DataPipeBytesConsumer"*, i64) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::BytesConsumer::Error", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.blink::BytesConsumer::Error", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.base::Location", align 8
  %8 = alloca %"class.base::OnceCallback", align 8
  %9 = alloca %"class.blink::Persistent", align 8
  %10 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  store i8 0, i8* %10, align 8
  %11 = icmp ult i64 %1, 4294967296
  br i1 %11, label %13, label %12, !prof !23

12:                                               ; preds = %2
  tail call void @llvm.trap() #10
  unreachable

13:                                               ; preds = %2
  %14 = trunc i64 %1 to i32
  %15 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = tail call i32 @MojoEndReadData(i32 %16, i32 %14, %struct.MojoEndReadDataOptions* null) #10
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %73, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.blink::BytesConsumer::Error"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #10
  %21 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #10
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %23 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %3, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %23, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %23, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %19
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #10
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !9

40:                                               ; preds = %31
  call void @llvm.trap() #10
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %19
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %3)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %3)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %23) #10
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %22, align 8
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #10
  br label %72

72:                                               ; preds = %56, %68, %71
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #10
  br label %328

73:                                               ; preds = %13
  %74 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 11
  %75 = load i64, i64* %74, align 8
  %76 = add i64 %75, %1
  store i64 %76, i64* %74, align 8
  %77 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 15
  %78 = load i8, i8* %77, align 2, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %109, label %80

80:                                               ; preds = %73
  store i8 0, i8* %77, align 2
  %81 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %82 = load i32, i32* %81, align 8
  %83 = icmp ult i32 %82, 2
  br i1 %83, label %84, label %328

84:                                               ; preds = %80
  %85 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 16
  %86 = load i8, i8* %85, align 1, !range !2
  %87 = icmp eq i8 %86, 0
  br i1 %87, label %88, label %328

88:                                               ; preds = %84
  %89 = load i8, i8* %10, align 8, !range !2
  %90 = icmp eq i8 %89, 0
  br i1 %90, label %92, label %91

91:                                               ; preds = %88
  store i8 1, i8* %77, align 2
  br label %328

92:                                               ; preds = %88
  %93 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  store i8 1, i8* %93, align 4
  %94 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %95 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %94, align 8
  %96 = load i32, i32* %15, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %107

98:                                               ; preds = %92
  store i32 2, i32* %81, align 8
  %99 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %100 = bitcast %"class.blink::Member"* %99 to i64*
  store atomic i64 0, i64* %100 monotonic, align 8
  %101 = icmp eq %"class.blink::BytesConsumer::Client"* %95, null
  br i1 %101, label %328, label %102

102:                                              ; preds = %98
  %103 = bitcast %"class.blink::BytesConsumer::Client"* %95 to void (%"class.blink::BytesConsumer::Client"*)***
  %104 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %103, align 8
  %105 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %104, i64 3
  %106 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %105, align 8
  tail call void %106(%"class.blink::BytesConsumer::Client"* nonnull %95) #10
  br label %328

107:                                              ; preds = %92
  %108 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher11ArmOrNotifyEv(%"class.mojo::SimpleWatcher"* %108) #10
  br label %328

109:                                              ; preds = %73
  %110 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 16
  %111 = load i8, i8* %110, align 1, !range !2
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %191, label %113

113:                                              ; preds = %109
  store i8 0, i8* %110, align 1
  %114 = bitcast %"class.blink::BytesConsumer::Error"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %114) #10
  %115 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %115) #10
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.2, i64 0, i64 0), i64 5) #10
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %117 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::BytesConsumer::Error", %"class.blink::BytesConsumer::Error"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %117, %"class.WTF::StringImpl"** %118, align 8
  %119 = icmp eq %"class.WTF::StringImpl"* %117, null
  br i1 %119, label %137, label %120

120:                                              ; preds = %113
  %121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %122 = load atomic i32, i32* %121 monotonic, align 4
  %123 = and i32 %122, 2
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %137

125:                                              ; preds = %120
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = zext i32 %127 to i33
  %129 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %128, i33 1) #10
  %130 = extractvalue { i33, i1 } %129, 1
  %131 = extractvalue { i33, i1 } %129, 0
  %132 = icmp slt i33 %131, 0
  %133 = or i1 %130, %132
  br i1 %133, label %134, label %135, !prof !9

134:                                              ; preds = %125
  call void @llvm.trap() #10
  unreachable

135:                                              ; preds = %125
  %136 = trunc i33 %131 to i32
  store i32 %136, i32* %126, align 4
  br label %137

137:                                              ; preds = %113, %120, %135
  %138 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %139 = load i32, i32* %138, align 8
  %140 = icmp ult i32 %139, 2
  br i1 %140, label %141, label %160

141:                                              ; preds = %137
  %142 = load i8, i8* %77, align 2, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %144, label %160

144:                                              ; preds = %141
  %145 = load i8, i8* %110, align 1, !range !2
  %146 = icmp eq i8 %145, 0
  br i1 %146, label %147, label %160

147:                                              ; preds = %144
  %148 = load i8, i8* %10, align 8, !range !2
  %149 = icmp eq i8 %148, 0
  br i1 %149, label %151, label %150

150:                                              ; preds = %147
  store i8 1, i8* %110, align 1
  br label %160

151:                                              ; preds = %147
  %152 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %153 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %152, align 8
  call void @_ZN5blink21DataPipeBytesConsumer8SetErrorERKNS_13BytesConsumer5ErrorE(%"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::BytesConsumer::Error"* nonnull dereferenceable(8) %5) #10
  %154 = icmp eq %"class.blink::BytesConsumer::Client"* %153, null
  br i1 %154, label %160, label %155

155:                                              ; preds = %151
  %156 = bitcast %"class.blink::BytesConsumer::Client"* %153 to void (%"class.blink::BytesConsumer::Client"*)***
  %157 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %156, align 8
  %158 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %157, i64 3
  %159 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %158, align 8
  call void %159(%"class.blink::BytesConsumer::Client"* nonnull %153) #10
  br label %160

160:                                              ; preds = %137, %141, %144, %150, %151, %155
  br i1 %119, label %174, label %161

161:                                              ; preds = %160
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %117, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %117) #10
  br label %174

174:                                              ; preds = %160, %170, %173
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %190, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %179 = load atomic i32, i32* %178 monotonic, align 4
  %180 = and i32 %179, 2
  %181 = icmp eq i32 %180, 0
  %182 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %175, i64 0, i32 0
  %183 = load i32, i32* %182, align 4
  br i1 %181, label %184, label %186

184:                                              ; preds = %177
  %185 = add i32 %183, -1
  store i32 %185, i32* %182, align 4
  br label %186

186:                                              ; preds = %184, %177
  %187 = phi i32 [ %185, %184 ], [ %183, %177 ]
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %189, label %190

189:                                              ; preds = %186
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %175) #10
  br label %190

190:                                              ; preds = %174, %186, %189
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %115) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %114) #10
  br label %328

191:                                              ; preds = %109
  %192 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %193 = load i8, i8* %192, align 8, !range !2
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %223, label %195

195:                                              ; preds = %191
  %196 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %197 = load i64, i64* %196, align 8
  %198 = icmp eq i64 %197, %76
  br i1 %198, label %199, label %223

199:                                              ; preds = %195
  %200 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %200) #10
  %201 = load i32, i32* %15, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %205, label %203

203:                                              ; preds = %199
  %204 = tail call i32 @MojoClose(i32 %201) #10
  br label %205

205:                                              ; preds = %199, %203
  store i32 0, i32* %15, align 4
  %206 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %207 = bitcast %"class.blink::Member"* %206 to i64*
  store atomic i64 0, i64* %207 monotonic, align 8
  %208 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %209 = load i32, i32* %208, align 8
  %210 = icmp ult i32 %209, 2
  br i1 %210, label %211, label %328

211:                                              ; preds = %205
  %212 = load i8, i8* %77, align 2, !range !2
  %213 = icmp eq i8 %212, 0
  br i1 %213, label %214, label %328

214:                                              ; preds = %211
  %215 = load i8, i8* %110, align 1, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %217, label %328

217:                                              ; preds = %214
  %218 = load i8, i8* %10, align 8, !range !2
  %219 = icmp eq i8 %218, 0
  br i1 %219, label %221, label %220

220:                                              ; preds = %217
  store i8 1, i8* %77, align 2
  br label %328

221:                                              ; preds = %217
  %222 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  store i8 1, i8* %222, align 4
  store i32 2, i32* %208, align 8
  store atomic i64 0, i64* %207 monotonic, align 8
  br label %328

223:                                              ; preds = %191, %195
  %224 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 14
  %225 = load i8, i8* %224, align 1, !range !2
  %226 = icmp eq i8 %225, 0
  br i1 %226, label %328, label %227

227:                                              ; preds = %223
  store i8 0, i8* %224, align 1
  %228 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 3, i32 0
  %229 = bitcast %"class.base::SingleThreadTaskRunner"** %228 to %"class.base::TaskRunner"**
  %230 = load %"class.base::TaskRunner"*, %"class.base::TaskRunner"** %229, align 8
  %231 = bitcast %"class.base::Location"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %231) #10
  call void @_ZN4base8Location7CurrentEPKcS2_i(%"class.base::Location"* nonnull sret %7, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.3, i64 0, i64 0), i8* getelementptr inbounds ([83 x i8], [83 x i8]* @.str.1, i64 0, i64 0), i32 134) #10
  %232 = bitcast %"class.blink::Persistent"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %232) #10
  %233 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %9, i64 0, i32 0
  %234 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %9, i64 0, i32 0, i32 0
  store %"class.blink::DataPipeBytesConsumer"* %0, %"class.blink::DataPipeBytesConsumer"** %234, align 8, !alias.scope !24
  %235 = getelementptr inbounds %"class.blink::Persistent", %"class.blink::Persistent"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %235, align 8, !alias.scope !24
  %236 = ptrtoint %"class.blink::DataPipeBytesConsumer"* %0 to i64
  switch i64 %236, label %237 [
    i64 0, label %263
    i64 -1, label %263
  ]

237:                                              ; preds = %227
  %238 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !24
  %239 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %238, i64 0, i32 1
  %240 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %239) #10, !noalias !24
  %241 = icmp eq i8* %240, null
  br i1 %241, label %242, label %244, !prof !9

242:                                              ; preds = %237
  %243 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %239, i8* %243) #10
  br label %244

244:                                              ; preds = %242, %237
  %245 = phi i8* [ %243, %242 ], [ %240, %237 ]
  %246 = bitcast i8* %245 to %"class.blink::ThreadState"**
  %247 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %246, align 8, !noalias !24
  %248 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %247, i64 0, i32 3, i32 0, i32 0, i32 0
  %249 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %248, align 8, !noalias !24
  %250 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %249, i64 0, i32 0, i32 0
  %251 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %250, align 8, !noalias !24
  %252 = icmp eq %"class.blink::PersistentNode"* %251, null
  br i1 %252, label %253, label %256, !prof !9

253:                                              ; preds = %244
  %254 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %249, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %254) #10
  %255 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %250, align 8
  br label %256

256:                                              ; preds = %253, %244
  %257 = phi %"class.blink::PersistentNode"* [ %255, %253 ], [ %251, %244 ]
  %258 = bitcast %"class.blink::PersistentNode"* %257 to i64*
  %259 = load i64, i64* %258, align 8, !noalias !24
  %260 = bitcast %"class.blink::PersistentRegion"* %249 to i64*
  store i64 %259, i64* %260, align 8, !noalias !24
  %261 = bitcast %"class.blink::PersistentNode"* %257 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %233, %"class.blink::PersistentBase"** %261, align 8, !noalias !24
  %262 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %257, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %262, align 8
  store %"class.blink::PersistentNode"* %257, %"class.blink::PersistentNode"** %235, align 8, !alias.scope !24
  br label %263

263:                                              ; preds = %227, %227, %256
  %264 = call i8* @_Znwm(i64 72) #11, !noalias !27
  %265 = bitcast i8* %264 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %265, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE) #10, !noalias !27
  %266 = getelementptr inbounds i8, i8* %264, i64 32
  %267 = bitcast i8* %266 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::DataPipeBytesConsumer"*, i32)* @_ZN5blink21DataPipeBytesConsumer6NotifyEj to i64), i64 0>, <2 x i64>* %267, align 8, !noalias !27
  %268 = getelementptr inbounds i8, i8* %264, i64 48
  %269 = bitcast %"class.blink::Persistent"* %9 to i64*
  %270 = load i64, i64* %269, align 8
  %271 = bitcast i8* %268 to i64*
  store i64 %270, i64* %271, align 8
  %272 = getelementptr inbounds i8, i8* %264, i64 56
  %273 = bitcast i8* %272 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %273, align 8
  switch i64 %270, label %274 [
    i64 0, label %300
    i64 -1, label %300
  ]

274:                                              ; preds = %263
  %275 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %276 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %275, i64 0, i32 1
  %277 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %276) #10
  %278 = icmp eq i8* %277, null
  br i1 %278, label %279, label %281, !prof !9

279:                                              ; preds = %274
  %280 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %276, i8* %280) #10
  br label %281

281:                                              ; preds = %279, %274
  %282 = phi i8* [ %280, %279 ], [ %277, %274 ]
  %283 = bitcast i8* %282 to %"class.blink::ThreadState"**
  %284 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %283, align 8
  %285 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %284, i64 0, i32 3, i32 0, i32 0, i32 0
  %286 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %285, align 8
  %287 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %286, i64 0, i32 0, i32 0
  %288 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %287, align 8
  %289 = icmp eq %"class.blink::PersistentNode"* %288, null
  br i1 %289, label %290, label %293, !prof !9

290:                                              ; preds = %281
  %291 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %286, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %291) #10
  %292 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %287, align 8
  br label %293

293:                                              ; preds = %290, %281
  %294 = phi %"class.blink::PersistentNode"* [ %292, %290 ], [ %288, %281 ]
  %295 = bitcast %"class.blink::PersistentNode"* %294 to i64*
  %296 = load i64, i64* %295, align 8
  %297 = bitcast %"class.blink::PersistentRegion"* %286 to i64*
  store i64 %296, i64* %297, align 8
  %298 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %294, i64 0, i32 0
  store i8* %268, i8** %298, align 8
  %299 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %294, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %299, align 8
  store %"class.blink::PersistentNode"* %294, %"class.blink::PersistentNode"** %273, align 8
  br label %300

300:                                              ; preds = %263, %263, %293
  %301 = getelementptr inbounds i8, i8* %264, i64 64
  %302 = bitcast i8* %301 to i32*
  store i32 0, i32* %302, align 4
  %303 = bitcast %"class.base::OnceCallback"* %8 to i8**
  store i8* %264, i8** %303, align 8, !alias.scope !27
  %304 = call zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"* %230, %"class.base::Location"* nonnull dereferenceable(32) %7, %"class.base::OnceCallback"* nonnull %8) #10
  %305 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %8, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %305) #10
  %306 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %235, align 8
  %307 = icmp eq %"class.blink::PersistentNode"* %306, null
  br i1 %307, label %327, label %308

308:                                              ; preds = %300
  %309 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %310 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %309, i64 0, i32 1
  %311 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %310) #10
  %312 = icmp eq i8* %311, null
  br i1 %312, label %313, label %315, !prof !9

313:                                              ; preds = %308
  %314 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %310, i8* %314) #10
  br label %315

315:                                              ; preds = %313, %308
  %316 = phi i8* [ %314, %313 ], [ %311, %308 ]
  %317 = bitcast i8* %316 to %"class.blink::ThreadState"**
  %318 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %317, align 8
  %319 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %318, i64 0, i32 3, i32 0, i32 0, i32 0
  %320 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %319, align 8
  %321 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %235, align 8
  %322 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %320, i64 0, i32 0, i32 0
  %323 = bitcast %"class.blink::PersistentRegion"* %320 to i64*
  %324 = load i64, i64* %323, align 8
  %325 = bitcast %"class.blink::PersistentNode"* %321 to i64*
  store i64 %324, i64* %325, align 8
  %326 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %321, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %326, align 8
  store %"class.blink::PersistentNode"* %321, %"class.blink::PersistentNode"** %322, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %235, align 8
  br label %327

327:                                              ; preds = %300, %315
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %232) #10
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %231) #10
  br label %328

328:                                              ; preds = %221, %220, %214, %211, %205, %107, %102, %98, %91, %84, %80, %327, %223, %190, %72
  %329 = phi i32 [ 3, %72 ], [ 3, %190 ], [ 0, %223 ], [ 0, %327 ], [ 0, %80 ], [ 0, %84 ], [ 0, %91 ], [ 0, %98 ], [ 0, %102 ], [ 0, %107 ], [ 2, %205 ], [ 2, %211 ], [ 2, %214 ], [ 2, %220 ], [ 2, %221 ]
  ret i32 %329
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer11ClearClientEv(%"class.blink::DataPipeBytesConsumer"* nocapture) unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %3 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  ret void
}

declare zeroext i1 @_ZN4base10TaskRunner8PostTaskERKNS_8LocationENS_12OnceCallbackIFvvEEE(%"class.base::TaskRunner"*, %"class.base::Location"* dereferenceable(32), %"class.base::OnceCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer15DrainAsDataPipeEv(%"class.mojo::ScopedHandleBase"* noalias nocapture sret, %"class.blink::DataPipeBytesConsumer"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %1, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %3) #10
  %4 = getelementptr inbounds %"class.mojo::ScopedHandleBase", %"class.mojo::ScopedHandleBase"* %0, i64 0, i32 0, i32 0, i32 0
  %5 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %1, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4, !noalias !34
  store i32 %6, i32* %4, align 4, !alias.scope !34
  store i32 0, i32* %5, align 4, !noalias !34
  %7 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %1, i64 0, i32 17
  %8 = load i8, i8* %7, align 4, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %1, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %14, label %17

14:                                               ; preds = %10
  store i32 2, i32* %11, align 8
  %15 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %1, i64 0, i32 7
  %16 = bitcast %"class.blink::Member"* %15 to i64*
  store atomic i64 0, i64* %16 monotonic, align 8
  br label %17

17:                                               ; preds = %2, %10, %14
  ret void
}

declare void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer9SetClientEPNS_13BytesConsumer6ClientE(%"class.blink::DataPipeBytesConsumer"* nocapture, %"class.blink::BytesConsumer::Client"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %4 = load i32, i32* %3, align 8
  %5 = icmp ult i32 %4, 2
  br i1 %5, label %6, label %15

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %8 = ptrtoint %"class.blink::BytesConsumer::Client"* %1 to i64
  %9 = bitcast %"class.blink::Member"* %7 to i64*
  store atomic i64 %8, i64* %9 monotonic, align 8
  %10 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %6
  %13 = bitcast %"class.blink::BytesConsumer::Client"* %1 to i8*
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %13) #10
  br label %15

15:                                               ; preds = %12, %6, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer6CancelEv(%"class.blink::DataPipeBytesConsumer"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %3 = bitcast %"class.blink::Member"* %2 to i64*
  store atomic i64 0, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %4) #10
  %5 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call i32 @MojoClose(i32 %6) #10
  br label %10

10:                                               ; preds = %1, %8
  store i32 0, i32* %5, align 4
  %11 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %12 = load i32, i32* %11, align 8
  %13 = icmp ult i32 %12, 2
  br i1 %13, label %14, label %37

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 15
  %16 = load i8, i8* %15, align 2, !range !2
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %37

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 16
  %20 = load i8, i8* %19, align 1, !range !2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %37

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 13
  %24 = load i8, i8* %23, align 8, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  store i8 1, i8* %15, align 2
  br label %37

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 17
  store i8 1, i8* %28, align 4
  %29 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7, i32 0, i32 0
  %30 = load %"class.blink::BytesConsumer::Client"*, %"class.blink::BytesConsumer::Client"** %29, align 8
  store i32 2, i32* %11, align 8
  store atomic i64 0, i64* %3 monotonic, align 8
  %31 = icmp eq %"class.blink::BytesConsumer::Client"* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %27
  %33 = bitcast %"class.blink::BytesConsumer::Client"* %30 to void (%"class.blink::BytesConsumer::Client"*)***
  %34 = load void (%"class.blink::BytesConsumer::Client"*)**, void (%"class.blink::BytesConsumer::Client"*)*** %33, align 8
  %35 = getelementptr inbounds void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %34, i64 3
  %36 = load void (%"class.blink::BytesConsumer::Client"*)*, void (%"class.blink::BytesConsumer::Client"*)** %35, align 8
  tail call void %36(%"class.blink::BytesConsumer::Client"* nonnull %30) #10
  br label %37

37:                                               ; preds = %10, %14, %18, %26, %27, %32
  ret void
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK5blink21DataPipeBytesConsumer14GetPublicStateEv(%"class.blink::DataPipeBytesConsumer"* nocapture readonly) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 8
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 2
  %5 = zext i1 %4 to i32
  %6 = icmp eq i32 %3, 3
  %7 = select i1 %6, i32 2, i32 %5
  ret i32 %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21DataPipeBytesConsumer5TraceEPNS_7VisitorE(%"class.blink::DataPipeBytesConsumer"* nocapture readonly, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 7
  %4 = bitcast %"class.blink::Member"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #10, !range !37
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #10
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21DataPipeBytesConsumer7DisposeEv(%"class.blink::DataPipeBytesConsumer"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 6
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %2) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::BlobDataHandle"* @_ZN5blink13BytesConsumer21DrainAsBlobDataHandleENS0_14BlobSizePolicyE(%"class.blink::BytesConsumer"*, i32) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::BlobDataHandle"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EncodedFormData"* @_ZN5blink13BytesConsumer15DrainAsFormDataEv(%"class.blink::BytesConsumer"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EncodedFormData"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21DataPipeBytesConsumer8GetErrorEv(%"class.blink::DataPipeBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %0, i64 0, i32 10, i32 0, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #10
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !9

19:                                               ; preds = %10
  tail call void @llvm.trap() #10
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21DataPipeBytesConsumer9DebugNameEv(%"class.blink::DataPipeBytesConsumer"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str, i64 0, i64 0), i64 21) #10
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare i32 @_ZN4mojo13SimpleWatcher5WatchENS_6HandleEjjN4base17RepeatingCallbackIFvjRKNS_18HandleSignalsStateEEEE(%"class.mojo::SimpleWatcher"*, %"class.mojo::Handle"*, i32, i32, %"class.base::RepeatingCallback"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4mojo13SimpleWatcher17DiscardReadyStateERKN4base17RepeatingCallbackIFvjEEEjRKNS_18HandleSignalsStateE(%"class.base::RepeatingCallback.198"* dereferenceable(8), i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::RepeatingCallback.198", %"class.base::RepeatingCallback.198"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.base::internal::BindStateBase"*, %"class.base::internal::BindStateBase"** %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %5, i64 0, i32 1
  %7 = bitcast void ()** %6 to void (%"class.base::internal::BindStateBase"*, i32)**
  %8 = load void (%"class.base::internal::BindStateBase"*, i32)*, void (%"class.base::internal::BindStateBase"*, i32)** %7, align 8
  tail call void %8(%"class.base::internal::BindStateBase"* %5, i32 %1) #10
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS5_EEEFvjSB_EE3RunEPNS0_13BindStateBaseEjSB_(%"class.base::internal::BindStateBase"*, i32, %"struct.mojo::HandleSignalsState"* dereferenceable(8)) #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to void (%"class.base::RepeatingCallback.198"*, i32, %"struct.mojo::HandleSignalsState"*)**
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to %"class.base::RepeatingCallback.198"*
  %8 = load void (%"class.base::RepeatingCallback.198"*, i32, %"struct.mojo::HandleSignalsState"*)*, void (%"class.base::RepeatingCallback.198"*, i32, %"struct.mojo::HandleSignalsState"*)** %5, align 8
  tail call void %8(%"class.base::RepeatingCallback.198"* dereferenceable(8) %7, i32 %1, %"struct.mojo::HandleSignalsState"* dereferenceable(8) %2) #10
  ret void
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %7, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %5 = bitcast void ()** %4 to %"class.base::internal::CallbackBase"*
  tail call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* %5) #10
  %6 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %6) #11
  br label %7

7:                                                ; preds = %3, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #2

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #2

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #2

declare i32 @MojoBeginReadData(i32, %struct.MojoBeginReadDataOptions*, i8**, i32*) local_unnamed_addr #2

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #9

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #2

declare i32 @MojoEndReadData(i32, i32, %struct.MojoEndReadDataOptions*) local_unnamed_addr #2

declare i32 @MojoQueryHandleSignalsState(i32, %struct.MojoHandleSignalsState*) local_unnamed_addr #2

declare i32 @MojoClose(i32) local_unnamed_addr #2

declare void @_ZN4base16TaskRunnerTraits8DestructEPKNS_10TaskRunnerE(%"class.base::TaskRunner"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink21DataPipeBytesConsumer18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %25, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !9

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %9, %4
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %25, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds i8, i8* %1, i64 -2
  %18 = bitcast i8* %17 to i16*
  %19 = load i16, i16* %18, align 2
  %20 = and i16 %19, 1
  %21 = icmp eq i16 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %16
  %23 = getelementptr inbounds i8, i8* %1, i64 32
  %24 = bitcast i8* %23 to %"class.mojo::SimpleWatcher"*
  tail call void @_ZN4mojo13SimpleWatcher6CancelEv(%"class.mojo::SimpleWatcher"* %24) #10
  br label %25

25:                                               ; preds = %16, %11, %2, %22
  %26 = phi i1 [ true, %22 ], [ false, %16 ], [ false, %2 ], [ false, %11 ]
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #10
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #10
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #10
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair"* %28, null
  %30 = icmp ne %"struct.std::__1::pair"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !23

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #10
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !23

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #10
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair"*, %"struct.std::__1::pair"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair"* %60, null
  %62 = icmp ne %"struct.std::__1::pair"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !23

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair", %"struct.std::__1::pair"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #10
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #10
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.4, i64 0, i64 0), i8* %11, i8* %12) #10
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.5, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #10
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #10
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #10
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #10
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #2

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #2

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #2

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #2

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #2

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink7Visitor14HandleWeakCellINS_21DataPipeBytesConsumerEEEvRKNS_14LivenessBrokerEPKv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::DataPipeBytesConsumer"**
  %4 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %3, align 8
  %5 = ptrtoint %"class.blink::DataPipeBytesConsumer"* %4 to i64
  switch i64 %5, label %6 [
    i64 0, label %27
    i64 -1, label %27
  ]

6:                                                ; preds = %2
  %7 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %8 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %7, i64 0, i32 1
  %9 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %8) #10
  %10 = icmp eq i8* %9, null
  br i1 %10, label %11, label %13, !prof !9

11:                                               ; preds = %6
  %12 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %8, i8* %12) #10
  br label %13

13:                                               ; preds = %11, %6
  %14 = phi i8* [ %12, %11 ], [ %9, %6 ]
  %15 = bitcast i8* %14 to %"class.blink::ThreadState"**
  %16 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %15, align 8
  %17 = icmp eq %"class.blink::ThreadState"* %16, null
  br i1 %17, label %27, label %18

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.blink::DataPipeBytesConsumer", %"class.blink::DataPipeBytesConsumer"* %4, i64 -1, i32 13
  %20 = getelementptr inbounds i8, i8* %19, i64 6
  %21 = bitcast i8* %20 to i16*
  %22 = load i16, i16* %21, align 2
  %23 = and i16 %22, 1
  %24 = icmp eq i16 %23, 0
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = bitcast i8* %1 to i64*
  store atomic i64 0, i64* %26 monotonic, align 8
  br label %27

27:                                               ; preds = %18, %2, %2, %13, %25
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = getelementptr inbounds i8, i8* %1, i64 104
  %4 = bitcast i8* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %73, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = and i64 %5, -131072
  %10 = inttoptr i64 %9 to i8*
  %11 = getelementptr inbounds i8, i8* %10, i64 4138
  %12 = load i8, i8* %11, align 2
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %16

14:                                               ; preds = %7
  %15 = getelementptr inbounds i8, i8* %10, i64 4160
  br label %54

16:                                               ; preds = %7
  %17 = getelementptr inbounds i8, i8* %10, i64 4096
  %18 = bitcast i8* %17 to %"class.blink::NormalPage"*
  %19 = getelementptr inbounds i8, i8* %10, i64 4400
  %20 = bitcast i8* %19 to i8**
  %21 = bitcast i8* %19 to i64*
  %22 = load i64, i64* %21, align 16
  %23 = sub i64 %5, %22
  %24 = lshr i64 %23, 3
  %25 = lshr i64 %23, 6
  %26 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %25
  %27 = load atomic i8, i8* %26 acquire, align 1
  %28 = trunc i64 %24 to i32
  %29 = and i32 %28, 7
  %30 = shl i32 2, %29
  %31 = trunc i32 %30 to i8
  %32 = add i8 %31, -1
  %33 = and i8 %32, %27
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %35, label %41

35:                                               ; preds = %16, %35
  %36 = phi i64 [ %37, %35 ], [ %25, %16 ]
  %37 = add i64 %36, -1
  %38 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %18, i64 0, i32 2, i32 0, i32 1, i64 %37
  %39 = load atomic i8, i8* %38 acquire, align 1
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %35, label %41

41:                                               ; preds = %35, %16
  %42 = phi i64 [ %25, %16 ], [ %37, %35 ]
  %43 = phi i8 [ %33, %16 ], [ %39, %35 ]
  %44 = zext i8 %43 to i32
  %45 = tail call i32 @llvm.ctlz.i32(i32 %44, i1 true) #10, !range !37
  %46 = add nsw i32 %45, -24
  %47 = shl i64 %42, 3
  %48 = or i64 %47, 7
  %49 = sext i32 %46 to i64
  %50 = sub i64 %48, %49
  %51 = shl i64 %50, 3
  %52 = load i8*, i8** %20, align 16
  %53 = getelementptr inbounds i8, i8* %52, i64 %51
  br label %54

54:                                               ; preds = %41, %14
  %55 = phi i8* [ %15, %14 ], [ %53, %41 ]
  %56 = getelementptr inbounds i8, i8* %55, i64 8
  %57 = getelementptr inbounds i8, i8* %55, i64 4
  %58 = bitcast i8* %57 to i16*
  %59 = load atomic i16, i16* %58 acquire, align 2
  %60 = lshr i16 %59, 2
  %61 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %62 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %61, i64 0, i32 0
  %63 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %62, align 8
  %64 = zext i16 %60 to i64
  %65 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %63, i64 %64
  %66 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %65, align 8
  %67 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %66, i64 0, i32 0
  %68 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %67, align 8
  %69 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %8, i8* %56, void (%"class.blink::Visitor"*, i8*)* %68) #10
  br label %73

73:                                               ; preds = %2, %54
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21DataPipeBytesConsumer18CompletionNotifierEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #10
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !9

9:                                                ; preds = %1
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #10
  br label %11

11:                                               ; preds = %1, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %1 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %15, align 8
  %17 = icmp ult i64 %0, 64
  %18 = icmp ugt i64 %0, 31
  %19 = zext i1 %18 to i64
  %20 = icmp ult i64 %0, 128
  %21 = select i1 %20, i64 2, i64 3
  %22 = select i1 %17, i64 %19, i64 %21
  %23 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %28

25:                                               ; preds = %11
  %26 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %27 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %26, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic.17"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic.17"*)) #10
  br label %28

28:                                               ; preds = %11, %25
  %29 = phi i32 [ %23, %11 ], [ %27, %25 ]
  %30 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %16, i64 0, i32 19, i64 %22
  %31 = bitcast %"class.blink::BaseArena"** %30 to %"class.blink::NormalPageArena"**
  %32 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %31, align 8
  %33 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #10
  %34 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %34, align 8
  %35 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #10
  %36 = icmp ult i64 %0, -8
  br i1 %36, label %37, label %38

37:                                               ; preds = %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* null, i8** %34, align 8
  br label %48

38:                                               ; preds = %28
  %39 = add nsw i64 %0, 8
  %40 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %39) #10
  %41 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #10
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.6, i64 0, i64 0), i8* %40, i8* %41) #10
  %42 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #10
  store i8* %43, i8** %34, align 8
  %44 = icmp eq i8* %43, null
  br i1 %44, label %48, label %45

45:                                               ; preds = %38
  %46 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #10
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.7, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %3) #10
  %47 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #10
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #10
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #10
  br label %48

48:                                               ; preds = %37, %38, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #10
  %49 = add i64 %0, 15
  %50 = and i64 %49, -8
  %51 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 4
  %52 = load i64, i64* %51, align 8
  %53 = icmp ult i64 %52, %50
  br i1 %53, label %86, label %54, !prof !9

54:                                               ; preds = %48
  %55 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %32, i64 0, i32 3
  %56 = load i8*, i8** %55, align 8
  %57 = getelementptr inbounds i8, i8* %56, i64 %50
  store i8* %57, i8** %55, align 8
  %58 = sub i64 %52, %50
  store i64 %58, i64* %51, align 8
  %59 = bitcast i8* %56 to i32*
  store i32 0, i32* %59, align 4
  %60 = getelementptr inbounds i8, i8* %56, i64 4
  %61 = bitcast i8* %60 to i16*
  %62 = trunc i32 %29 to i16
  %63 = shl i16 %62, 2
  store atomic i16 %63, i16* %61 monotonic, align 2
  %64 = lshr exact i64 %50, 1
  %65 = trunc i64 %64 to i16
  %66 = getelementptr inbounds i8, i8* %56, i64 6
  %67 = bitcast i8* %66 to i16*
  store i16 %65, i16* %67, align 2
  %68 = ptrtoint i8* %56 to i64
  %69 = and i64 %68, -131072
  %70 = inttoptr i64 %69 to i8*
  %71 = getelementptr inbounds i8, i8* %70, i64 4400
  %72 = bitcast i8* %71 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %73 = bitcast i8* %71 to i64*
  %74 = load i64, i64* %73, align 16
  %75 = sub i64 %68, %74
  %76 = lshr i64 %75, 3
  %77 = lshr i64 %75, 6
  %78 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %72, i64 0, i32 0, i32 1, i64 %77
  %79 = load i8, i8* %78, align 1
  %80 = trunc i64 %76 to i32
  %81 = and i32 %80, 7
  %82 = shl i32 1, %81
  %83 = trunc i32 %82 to i8
  %84 = or i8 %79, %83
  store atomic i8 %84, i8* %78 release, align 1
  %85 = getelementptr inbounds i8, i8* %56, i64 8
  br label %89

86:                                               ; preds = %48
  %87 = zext i32 %29 to i64
  %88 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %32, i64 %50, i64 %87) #10
  br label %89

89:                                               ; preds = %54, %86
  %90 = phi i8* [ %85, %54 ], [ %88, %86 ]
  ret i8* %90
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %12, label %6

6:                                                ; preds = %2
  %7 = inttoptr i64 %4 to i8*
  %8 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)***
  %9 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %9, i64 6
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::LivenessBroker"*, i8*)*)** %10, align 8
  tail call void %11(%"class.blink::Visitor"* %0, i8* nonnull %7, i8* %1, i8* %7, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv, void (%"class.blink::LivenessBroker"*, i8*)* nonnull @_ZN5blink7Visitor14HandleWeakCellINS_21DataPipeBytesConsumerEEEvRKNS_14LivenessBrokerEPKv) #10
  br label %12

12:                                               ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21DataPipeBytesConsumer18CompletionNotifierEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.8, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic.17"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::DataPipeBytesConsumer"**
  %5 = load %"class.blink::DataPipeBytesConsumer"*, %"class.blink::DataPipeBytesConsumer"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #10
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #10
  %7 = icmp eq %"class.blink::DataPipeBytesConsumer"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::DataPipeBytesConsumer"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21DataPipeBytesConsumerEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #10
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #10
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #2

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEEEEFvjEE3RunEPNS0_13BindStateBaseEj(%"class.base::internal::BindStateBase"*, i32) #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %8 = bitcast void ()** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i8**
  %11 = load i8*, i8** %10, align 8
  %12 = getelementptr inbounds i8, i8* %11, i64 %9
  %13 = bitcast i8* %12 to %"class.blink::DataPipeBytesConsumer"*
  %14 = and i64 %6, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %2
  %17 = bitcast i8* %12 to i8**
  %18 = load i8*, i8** %17, align 8
  %19 = add i64 %6, -1
  %20 = getelementptr i8, i8* %18, i64 %19
  %21 = bitcast i8* %20 to void (%"class.blink::DataPipeBytesConsumer"*, i32)**
  %22 = load void (%"class.blink::DataPipeBytesConsumer"*, i32)*, void (%"class.blink::DataPipeBytesConsumer"*, i32)** %21, align 8
  br label %25

23:                                               ; preds = %2
  %24 = inttoptr i64 %6 to void (%"class.blink::DataPipeBytesConsumer"*, i32)*
  br label %25

25:                                               ; preds = %16, %23
  %26 = phi void (%"class.blink::DataPipeBytesConsumer"*, i32)* [ %22, %16 ], [ %24, %23 ]
  tail call void %26(%"class.blink::DataPipeBytesConsumer"* %13, i32 %1) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEEEC2IRS5_JS7_EEENSt3__117integral_constantIbLb0EEEPFvvEOT_DpOT0_(%"struct.base::internal::BindState.251"*, void ()*, { i64, i64 }* dereferenceable(16), %"class.blink::Persistent"* dereferenceable(16)) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"struct.base::internal::BindState.251", %"struct.base::internal::BindState.251"* %0, i64 0, i32 0
  tail call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* %5, void ()* %1, void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE) #10
  %6 = bitcast { i64, i64 }* %2 to <2 x i64>*
  %7 = load <2 x i64>, <2 x i64>* %6, align 8
  %8 = getelementptr inbounds %"struct.base::internal::BindState.251", %"struct.base::internal::BindState.251"* %0, i64 0, i32 1, i32 0
  %9 = bitcast i64* %8 to <2 x i64>*
  store <2 x i64> %7, <2 x i64>* %9, align 8
  %10 = getelementptr inbounds %"struct.base::internal::BindState.251", %"struct.base::internal::BindState.251"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.std::__1::tuple.252", %"class.std::__1::tuple.252"* %10, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = bitcast %"class.blink::Persistent"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::tuple.252"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"struct.base::internal::BindState.251", %"struct.base::internal::BindState.251"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %15, align 8
  switch i64 %13, label %16 [
    i64 0, label %42
    i64 -1, label %42
  ]

16:                                               ; preds = %4
  %17 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %18 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %17, i64 0, i32 1
  %19 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %18) #10
  %20 = icmp eq i8* %19, null
  br i1 %20, label %21, label %23, !prof !9

21:                                               ; preds = %16
  %22 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %18, i8* %22) #10
  br label %23

23:                                               ; preds = %21, %16
  %24 = phi i8* [ %22, %21 ], [ %19, %16 ]
  %25 = bitcast i8* %24 to %"class.blink::ThreadState"**
  %26 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %26, i64 0, i32 3, i32 0, i32 0, i32 0
  %28 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  %31 = icmp eq %"class.blink::PersistentNode"* %30, null
  br i1 %31, label %32, label %35, !prof !9

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %28, i64 0, i32 0
  tail call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %33) #10
  %34 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %29, align 8
  br label %35

35:                                               ; preds = %32, %23
  %36 = phi %"class.blink::PersistentNode"* [ %34, %32 ], [ %30, %23 ]
  %37 = bitcast %"class.blink::PersistentNode"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = bitcast %"class.blink::PersistentRegion"* %28 to i64*
  store i64 %38, i64* %39, align 8
  %40 = bitcast %"class.blink::PersistentNode"* %36 to %"class.blink::PersistentBase"**
  store %"class.blink::PersistentBase"* %11, %"class.blink::PersistentBase"** %40, align 8
  %41 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %36, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_21DataPipeBytesConsumerELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %41, align 8
  store %"class.blink::PersistentNode"* %36, %"class.blink::PersistentNode"** %15, align 8
  br label %42

42:                                               ; preds = %4, %4, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !9

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEjEEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %5 = bitcast void (%"class.base::internal::BindStateBase"*)** %4 to i32*
  %6 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %9 = bitcast void ()** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = getelementptr inbounds i8, i8* %12, i64 %10
  %14 = bitcast i8* %13 to %"class.blink::DataPipeBytesConsumer"*
  %15 = and i64 %7, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %24, label %17

17:                                               ; preds = %1
  %18 = bitcast i8* %13 to i8**
  %19 = load i8*, i8** %18, align 8
  %20 = add i64 %7, -1
  %21 = getelementptr i8, i8* %19, i64 %20
  %22 = bitcast i8* %21 to void (%"class.blink::DataPipeBytesConsumer"*, i32)**
  %23 = load void (%"class.blink::DataPipeBytesConsumer"*, i32)*, void (%"class.blink::DataPipeBytesConsumer"*, i32)** %22, align 8
  br label %26

24:                                               ; preds = %1
  %25 = inttoptr i64 %7 to void (%"class.blink::DataPipeBytesConsumer"*, i32)*
  br label %26

26:                                               ; preds = %17, %24
  %27 = phi void (%"class.blink::DataPipeBytesConsumer"*, i32)* [ %23, %17 ], [ %25, %24 ]
  %28 = load i32, i32* %5, align 4
  tail call void %27(%"class.blink::DataPipeBytesConsumer"* %14, i32 %28) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink21DataPipeBytesConsumerEFvjEJNS2_10PersistentIS3_EEjEE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %29, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %5 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %4 to %"class.blink::PersistentNode"**
  %6 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %7 = icmp eq %"class.blink::PersistentNode"* %6, null
  br i1 %7, label %27, label %8

8:                                                ; preds = %3
  %9 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %10 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %9, i64 0, i32 1
  %11 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %10) #10
  %12 = icmp eq i8* %11, null
  br i1 %12, label %13, label %15, !prof !9

13:                                               ; preds = %8
  %14 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #10
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %10, i8* %14) #10
  br label %15

15:                                               ; preds = %13, %8
  %16 = phi i8* [ %14, %13 ], [ %11, %8 ]
  %17 = bitcast i8* %16 to %"class.blink::ThreadState"**
  %18 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %18, i64 0, i32 3, i32 0, i32 0, i32 0
  %20 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %19, align 8
  %21 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %5, align 8
  %22 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %20, i64 0, i32 0, i32 0
  %23 = bitcast %"class.blink::PersistentRegion"* %20 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = bitcast %"class.blink::PersistentNode"* %21 to i64*
  store i64 %24, i64* %25, align 8
  %26 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %21, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %26, align 8
  store %"class.blink::PersistentNode"* %21, %"class.blink::PersistentNode"** %22, align 8
  br label %27

27:                                               ; preds = %3, %15
  %28 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %28) #11
  br label %29

29:                                               ; preds = %27, %1
  ret void
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #2

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readnone speculatable }
attributes #10 = { nounwind }
attributes #11 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4}
!4 = distinct !{!4, !5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!5 = distinct !{!5, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!6 = !{!7}
!7 = distinct !{!7, !8, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumerEEENS_10PersistentIT_EEPS3_: argument 0"}
!8 = distinct !{!8, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumerEEENS_10PersistentIT_EEPS3_"}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZN3WTF13BindRepeatingIMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EEEFvjEEEN4base17RepeatingCallbackIT1_EET_DpOT0_: argument 0"}
!12 = distinct !{!12, !"_ZN3WTF13BindRepeatingIMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EEEFvjEEEN4base17RepeatingCallbackIT1_EET_DpOT0_"}
!13 = !{!14, !16, !11}
!14 = distinct !{!14, !15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_: argument 0"}
!15 = distinct !{!15, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackERMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EEEEEDcOT0_DpOT1_"}
!16 = distinct !{!16, !17, !"_ZN4base13BindRepeatingIRMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_: argument 0"}
!17 = distinct !{!17, !"_ZN4base13BindRepeatingIRMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EEEEENS_17RepeatingCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSB_DpOSC_"}
!18 = !{!19, !21}
!19 = distinct !{!19, !20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_: argument 0"}
!20 = distinct !{!20, !"_ZN4base8internal8BindImplINS_17RepeatingCallbackEPFvRKNS2_IFvjEEEjRKN4mojo18HandleSignalsStateEEJS4_EEEDcOT0_DpOT1_"}
!21 = distinct !{!21, !22, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_: argument 0"}
!22 = distinct !{!22, !"_ZN4base13BindRepeatingIPFvRKNS_17RepeatingCallbackIFvjEEEjRKN4mojo18HandleSignalsStateEEJS3_EEENS1_INS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSE_DpOSF_"}
!23 = !{!"branch_weights", i32 2000, i32 1}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumerEEENS_10PersistentIT_EEPS3_: argument 0"}
!26 = distinct !{!26, !"_ZN5blink22WrapPersistentInternalINS_21DataPipeBytesConsumerEEENS_10PersistentIT_EEPS3_"}
!27 = !{!28, !30, !32}
!28 = distinct !{!28, !29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EERKjEEEDcOT0_DpOT1_: argument 0"}
!29 = distinct !{!29, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink21DataPipeBytesConsumerEFvjEJNS3_10PersistentIS4_EERKjEEEDcOT0_DpOT1_"}
!30 = distinct !{!30, !31, !"_ZN4base8BindOnceIMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EERKjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_: argument 0"}
!31 = distinct !{!31, !"_ZN4base8BindOnceIMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EERKjEEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSC_DpOSD_"}
!32 = distinct !{!32, !33, !"_ZN3WTF4BindIMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EERKjEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!33 = distinct !{!33, !"_ZN3WTF4BindIMN5blink21DataPipeBytesConsumerEFvjEJNS1_10PersistentIS2_EERKjEFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!34 = !{!35}
!35 = distinct !{!35, !36, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv: argument 0"}
!36 = distinct !{!36, !"_ZN4mojo16ScopedHandleBaseINS_22DataPipeConsumerHandleEE7releaseEv"}
!37 = !{i32 24, i32 33}
