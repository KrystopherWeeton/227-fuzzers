; ModuleID = '../../third_party/skia/src/gpu/GrProcessorSet.cpp'
source_filename = "../../third_party/skia/src/gpu/GrProcessorSet.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.GrProcessorSet = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", %"union.GrProcessorSet::XP", i8, [7 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.GrFragmentProcessor* }
%class.GrFragmentProcessor = type <{ %class.GrProcessor, %class.SkSTArray, %class.GrFragmentProcessor*, i32, %"struct.SkSL::SampleUsage", [4 x i8] }>
%class.GrProcessor = type { i32 (...)**, i32, i32 }
%class.SkSTArray = type { %class.SkAlignedSTStorage, %class.SkTArray }
%class.SkAlignedSTStorage = type { [8 x i8] }
%class.SkTArray = type { %"class.std::__1::unique_ptr"*, i64 }
%"struct.SkSL::SampleUsage" = type <{ i32, i8, [3 x i8] }>
%"union.GrProcessorSet::XP" = type { %class.GrXPFactory* }
%class.GrXPFactory = type { i32 (...)** }
%class.GrPaint = type <{ %class.GrXPFactory*, %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr", i8, [3 x i8], %struct.SkRGBA4f, [4 x i8] }>
%struct.SkRGBA4f = type { float, float, float, float }
%class.GrXferProcessor = type <{ %class.GrProcessor, %class.GrNonAtomicRef, i8, i8, [2 x i8] }>
%class.GrNonAtomicRef = type { i32 }
%class.GrProcessorAnalysisColor = type { i32, %struct.SkRGBA4f }
%class.GrAppliedClip = type { %class.GrAppliedHardClip, %"class.std::__1::unique_ptr" }
%class.GrAppliedHardClip = type <{ %class.GrScissorState, %class.GrWindowRectsState, i32, [4 x i8] }>
%class.GrScissorState = type { %struct.SkISize, %struct.SkIRect }
%struct.SkISize = type { i32, i32 }
%struct.SkIRect = type { i32, i32, i32, i32 }
%class.GrWindowRectsState = type { i8, %class.GrWindowRectangles }
%class.GrWindowRectangles = type { i32, %union.anon }
%union.anon = type { %"struct.GrWindowRectangles::Rec"*, [8 x i8] }
%"struct.GrWindowRectangles::Rec" = type { %class.GrNonAtomicRef.1, [8 x %struct.SkIRect] }
%class.GrNonAtomicRef.1 = type { i32 }
%struct.GrUserStencilSettings = type { [2 x i16], %struct.GrTStencilFaceSettings, [2 x i16], %struct.GrTStencilFaceSettings }
%struct.GrTStencilFaceSettings = type { i16, i16, i16, i8, i8, i16 }
%class.GrCaps = type <{ %class.SkRefCnt.base, [4 x i8], %class.sk_sp, i48, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, [4 x i8], i64, %class.GrDriverBugWorkarounds, i8, i8 }>
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.sk_sp = type { %class.GrShaderCaps* }
%class.GrShaderCaps = type <{ %class.SkRefCnt.base, i32, i56, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i32, i32, i32, [4 x i8] }>
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.GrColorFragmentProcessorAnalysis = type { i8, i8, i8, i8, i32, %struct.SkRGBA4f }
%class.sk_sp.3 = type { %class.GrXferProcessor* }
%"class.std::__1::function" = type opaque

@_ZZN14GrProcessorSet8EmptySetEvE6gEmpty = internal global %class.GrProcessorSet zeroinitializer, align 8
@_ZGVZN14GrProcessorSet8EmptySetEvE6gEmpty = internal global i64 0, align 8
@__dso_handle = external hidden global i8

@_ZN14GrProcessorSetC1EO7GrPaint = hidden unnamed_addr alias void (%class.GrProcessorSet*, %class.GrPaint*), void (%class.GrProcessorSet*, %class.GrPaint*)* @_ZN14GrProcessorSetC2EO7GrPaint
@_ZN14GrProcessorSetC1E11SkBlendMode = hidden unnamed_addr alias void (%class.GrProcessorSet*, i32), void (%class.GrProcessorSet*, i32)* @_ZN14GrProcessorSetC2E11SkBlendMode
@_ZN14GrProcessorSetC1ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE = hidden unnamed_addr alias void (%class.GrProcessorSet*, %class.GrFragmentProcessor*), void (%class.GrProcessorSet*, %class.GrFragmentProcessor*)* @_ZN14GrProcessorSetC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE
@_ZN14GrProcessorSetC1EOS_ = hidden unnamed_addr alias void (%class.GrProcessorSet*, %class.GrProcessorSet*), void (%class.GrProcessorSet*, %class.GrProcessorSet*)* @_ZN14GrProcessorSetC2EOS_
@_ZN14GrProcessorSetD1Ev = hidden unnamed_addr alias void (%class.GrProcessorSet*), void (%class.GrProcessorSet*)* @_ZN14GrProcessorSetD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden nonnull dereferenceable(32) %class.GrProcessorSet* @_ZN14GrProcessorSet8EmptySetEv() local_unnamed_addr #0 align 2 {
  %1 = load atomic i8, i8* bitcast (i64* @_ZGVZN14GrProcessorSet8EmptySetEvE6gEmpty to i8*) acquire, align 8
  %2 = icmp eq i8 %1, 0
  br i1 %2, label %3, label %8, !prof !2

3:                                                ; preds = %0
  %4 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN14GrProcessorSet8EmptySetEvE6gEmpty) #5
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %3
  tail call void @llvm.memset.p0i8.i64(i8* align 8 bitcast (%class.GrProcessorSet* @_ZZN14GrProcessorSet8EmptySetEvE6gEmpty to i8*), i8 0, i64 24, i1 false) #5
  store i8 1, i8* getelementptr inbounds (%class.GrProcessorSet, %class.GrProcessorSet* @_ZZN14GrProcessorSet8EmptySetEvE6gEmpty, i64 0, i32 3), align 8
  %7 = tail call i32 @__cxa_atexit(void (i8*)* bitcast (void (%class.GrProcessorSet*)* @_ZN14GrProcessorSetD2Ev to void (i8*)*), i8* bitcast (%class.GrProcessorSet* @_ZZN14GrProcessorSet8EmptySetEvE6gEmpty to i8*), i8* nonnull @__dso_handle) #5
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN14GrProcessorSet8EmptySetEvE6gEmpty) #5
  br label %8

8:                                                ; preds = %3, %6, %0
  ret %class.GrProcessorSet* @_ZZN14GrProcessorSet8EmptySetEvE6gEmpty
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_atexit(void (i8*)*, i8*, i8*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrProcessorSet12MakeEmptySetEv(%class.GrProcessorSet* noalias nocapture sret) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 3
  %3 = bitcast %class.GrProcessorSet* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 24, i1 false) #5
  store i8 1, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrProcessorSetC2EO7GrPaint(%class.GrProcessorSet* nocapture, %class.GrPaint* nocapture dereferenceable(48)) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrProcessorSet* %0 to i64*
  %4 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 1
  %5 = bitcast %"class.std::__1::unique_ptr"* %4 to i64*
  %6 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 2
  %7 = bitcast %class.GrPaint* %1 to i64*
  %8 = bitcast %class.GrProcessorSet* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %8, i8 0, i64 16, i1 false)
  %9 = load i64, i64* %7, align 8
  %10 = bitcast %"union.GrProcessorSet::XP"* %6 to i64*
  store i64 %9, i64* %10, align 8
  %11 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 3
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 1
  %13 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = bitcast %"class.std::__1::unique_ptr"* %12 to i64*
  %15 = load i64, i64* %14, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %13, align 8
  %16 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %16, align 8
  store i64 %15, i64* %3, align 8
  %18 = icmp eq %class.GrFragmentProcessor* %17, null
  br i1 %18, label %24, label %19

19:                                               ; preds = %2
  %20 = bitcast %class.GrFragmentProcessor* %17 to void (%class.GrFragmentProcessor*)***
  %21 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %21, i64 1
  %23 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %22, align 8
  tail call void %23(%class.GrFragmentProcessor* nonnull %17) #5
  br label %24

24:                                               ; preds = %2, %19
  %25 = getelementptr inbounds %class.GrPaint, %class.GrPaint* %1, i64 0, i32 2
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %25, i64 0, i32 0, i32 0, i32 0
  %27 = bitcast %"class.std::__1::unique_ptr"* %25 to i64*
  %28 = load i64, i64* %27, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %26, align 8
  %29 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %4, i64 0, i32 0, i32 0, i32 0
  %30 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %29, align 8
  store i64 %28, i64* %5, align 8
  %31 = icmp eq %class.GrFragmentProcessor* %30, null
  br i1 %31, label %37, label %32

32:                                               ; preds = %24
  %33 = bitcast %class.GrFragmentProcessor* %30 to void (%class.GrFragmentProcessor*)***
  %34 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %33, align 8
  %35 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %34, i64 1
  %36 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %35, align 8
  tail call void %36(%class.GrFragmentProcessor* nonnull %30) #5
  br label %37

37:                                               ; preds = %24, %32
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrProcessorSetC2E11SkBlendMode(%class.GrProcessorSet* nocapture, i32) unnamed_addr #0 align 2 {
  %3 = bitcast %class.GrProcessorSet* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 16, i1 false)
  %4 = tail call %class.GrXPFactory* @_Z23SkBlendMode_AsXPFactory11SkBlendMode(i32 %1) #5
  %5 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 2, i32 0
  store %class.GrXPFactory* %4, %class.GrXPFactory** %5, align 8
  %6 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 3
  store i8 0, i8* %6, align 8
  ret void
}

declare %class.GrXPFactory* @_Z23SkBlendMode_AsXPFactory11SkBlendMode(i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrProcessorSetC2ENSt3__110unique_ptrI19GrFragmentProcessorNS0_14default_deleteIS2_EEEE(%class.GrProcessorSet* nocapture, %class.GrFragmentProcessor*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %class.GrFragmentProcessor* %1 to i64
  %4 = bitcast %class.GrProcessorSet* %0 to i64*
  %5 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 17, i1 false)
  store i64 %3, i64* %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN14GrProcessorSetC2EOS_(%class.GrProcessorSet* nocapture, %class.GrProcessorSet* nocapture dereferenceable(32)) unnamed_addr #3 align 2 {
  %3 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = bitcast %class.GrProcessorSet* %1 to i64*
  %5 = load i64, i64* %4, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %3, align 8
  %6 = bitcast %class.GrProcessorSet* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 1
  %8 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 1
  %9 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %8, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.std::__1::unique_ptr"* %8 to i64*
  %11 = load i64, i64* %10, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %9, align 8
  %12 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  store i64 %11, i64* %12, align 8
  %13 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 2
  %14 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 2
  %15 = bitcast %"union.GrProcessorSet::XP"* %14 to %class.GrXferProcessor**
  %16 = bitcast %"union.GrProcessorSet::XP"* %14 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast %"union.GrProcessorSet::XP"* %13 to i64*
  store i64 %17, i64* %18, align 8
  store %class.GrXferProcessor* null, %class.GrXferProcessor** %15, align 8
  %19 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 3
  %20 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 3
  %21 = load i8, i8* %20, align 8
  store i8 %21, i8* %19, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN14GrProcessorSetD2Ev(%class.GrProcessorSet* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 3
  %3 = load i8, i8* %2, align 8
  %4 = and i8 %3, 1
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %24, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 2
  %8 = bitcast %"union.GrProcessorSet::XP"* %7 to %class.GrXferProcessor**
  %9 = load %class.GrXferProcessor*, %class.GrXferProcessor** %8, align 8
  %10 = icmp eq %class.GrXferProcessor* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %6
  %12 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %9, i64 0, i32 1
  %13 = getelementptr inbounds %class.GrNonAtomicRef, %class.GrNonAtomicRef* %12, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = add nsw i32 %14, -1
  store i32 %15, i32* %13, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %24

17:                                               ; preds = %11
  %18 = getelementptr inbounds %class.GrNonAtomicRef, %class.GrNonAtomicRef* %12, i64 -4
  %19 = bitcast %class.GrNonAtomicRef* %18 to %class.GrXferProcessor*
  %20 = bitcast %class.GrNonAtomicRef* %18 to void (%class.GrXferProcessor*)***
  %21 = load void (%class.GrXferProcessor*)**, void (%class.GrXferProcessor*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.GrXferProcessor*)*, void (%class.GrXferProcessor*)** %21, i64 1
  %23 = load void (%class.GrXferProcessor*)*, void (%class.GrXferProcessor*)** %22, align 8
  tail call void %23(%class.GrXferProcessor* nonnull %19) #5
  br label %24

24:                                               ; preds = %1, %17, %11, %6
  %25 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %26 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %25, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %25, align 8
  %27 = icmp eq %class.GrFragmentProcessor* %26, null
  br i1 %27, label %33, label %28

28:                                               ; preds = %24
  %29 = bitcast %class.GrFragmentProcessor* %26 to void (%class.GrFragmentProcessor*)***
  %30 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %29, align 8
  %31 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %30, i64 1
  %32 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %31, align 8
  tail call void %32(%class.GrFragmentProcessor* nonnull %26) #5
  br label %33

33:                                               ; preds = %24, %28
  %34 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %35 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %34, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %34, align 8
  %36 = icmp eq %class.GrFragmentProcessor* %35, null
  br i1 %36, label %42, label %37

37:                                               ; preds = %33
  %38 = bitcast %class.GrFragmentProcessor* %35 to void (%class.GrFragmentProcessor*)***
  %39 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %38, align 8
  %40 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %39, i64 1
  %41 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %40, align 8
  tail call void %41(%class.GrFragmentProcessor* nonnull %35) #5
  br label %42

42:                                               ; preds = %33, %37
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK14GrProcessorSeteqERKS_(%class.GrProcessorSet* nocapture readonly, %class.GrProcessorSet* nocapture readonly dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 3
  %4 = load i8, i8* %3, align 8
  %5 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 3
  %6 = load i8, i8* %5, align 8
  %7 = xor i8 %6, %4
  %8 = icmp ugt i8 %7, 1
  br i1 %8, label %81, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %10, align 8
  %12 = icmp ne %class.GrFragmentProcessor* %11, null
  %13 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %13, align 8
  %15 = icmp ne %class.GrFragmentProcessor* %14, null
  %16 = xor i1 %12, %15
  br i1 %16, label %81, label %17

17:                                               ; preds = %9
  %18 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %19 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  %20 = icmp ne %class.GrFragmentProcessor* %19, null
  %21 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 1, i32 0, i32 0, i32 0
  %22 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %21, align 8
  %23 = icmp ne %class.GrFragmentProcessor* %22, null
  %24 = xor i1 %20, %23
  br i1 %24, label %81, label %25

25:                                               ; preds = %17
  br i1 %12, label %26, label %30

26:                                               ; preds = %25
  %27 = tail call zeroext i1 @_ZNK19GrFragmentProcessor7isEqualERKS_(%class.GrFragmentProcessor* nonnull %11, %class.GrFragmentProcessor* dereferenceable(64) %14) #5
  br i1 %27, label %28, label %81

28:                                               ; preds = %26
  %29 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %18, align 8
  br label %30

30:                                               ; preds = %28, %25
  %31 = phi %class.GrFragmentProcessor* [ %29, %28 ], [ %19, %25 ]
  %32 = icmp eq %class.GrFragmentProcessor* %31, null
  br i1 %32, label %36, label %33

33:                                               ; preds = %30
  %34 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %21, align 8
  %35 = tail call zeroext i1 @_ZNK19GrFragmentProcessor7isEqualERKS_(%class.GrFragmentProcessor* nonnull %31, %class.GrFragmentProcessor* dereferenceable(64) %34) #5
  br i1 %35, label %36, label %81

36:                                               ; preds = %30, %33
  %37 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 2
  %38 = bitcast %"union.GrProcessorSet::XP"* %37 to %class.GrXferProcessor**
  %39 = load %class.GrXferProcessor*, %class.GrXferProcessor** %38, align 8
  %40 = icmp eq %class.GrXferProcessor* %39, null
  br i1 %40, label %41, label %48

41:                                               ; preds = %36
  %42 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 2
  %43 = bitcast %"union.GrProcessorSet::XP"* %42 to %class.GrXferProcessor**
  %44 = load %class.GrXferProcessor*, %class.GrXferProcessor** %43, align 8
  %45 = icmp eq %class.GrXferProcessor* %44, null
  br i1 %45, label %81, label %46

46:                                               ; preds = %41
  %47 = tail call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #5
  br label %48

48:                                               ; preds = %36, %46
  %49 = phi %class.GrXferProcessor* [ %47, %46 ], [ %39, %36 ]
  %50 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %1, i64 0, i32 2
  %51 = bitcast %"union.GrProcessorSet::XP"* %50 to %class.GrXferProcessor**
  %52 = load %class.GrXferProcessor*, %class.GrXferProcessor** %51, align 8
  %53 = icmp eq %class.GrXferProcessor* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %48
  %55 = tail call dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() #5
  br label %56

56:                                               ; preds = %48, %54
  %57 = phi %class.GrXferProcessor* [ %55, %54 ], [ %52, %48 ]
  %58 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %49, i64 0, i32 0, i32 1
  %59 = load i32, i32* %58, align 8
  %60 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %57, i64 0, i32 0, i32 1
  %61 = load i32, i32* %60, align 8
  %62 = icmp eq i32 %59, %61
  br i1 %62, label %63, label %81

63:                                               ; preds = %56
  %64 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %49, i64 0, i32 2
  %65 = load i8, i8* %64, align 4, !range !3
  %66 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %57, i64 0, i32 2
  %67 = load i8, i8* %66, align 4, !range !3
  %68 = icmp eq i8 %65, %67
  br i1 %68, label %69, label %81

69:                                               ; preds = %63
  %70 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %49, i64 0, i32 3
  %71 = load i8, i8* %70, align 1, !range !3
  %72 = getelementptr inbounds %class.GrXferProcessor, %class.GrXferProcessor* %57, i64 0, i32 3
  %73 = load i8, i8* %72, align 1, !range !3
  %74 = icmp eq i8 %71, %73
  br i1 %74, label %75, label %81

75:                                               ; preds = %69
  %76 = bitcast %class.GrXferProcessor* %49 to i1 (%class.GrXferProcessor*, %class.GrXferProcessor*)***
  %77 = load i1 (%class.GrXferProcessor*, %class.GrXferProcessor*)**, i1 (%class.GrXferProcessor*, %class.GrXferProcessor*)*** %76, align 8
  %78 = getelementptr inbounds i1 (%class.GrXferProcessor*, %class.GrXferProcessor*)*, i1 (%class.GrXferProcessor*, %class.GrXferProcessor*)** %77, i64 8
  %79 = load i1 (%class.GrXferProcessor*, %class.GrXferProcessor*)*, i1 (%class.GrXferProcessor*, %class.GrXferProcessor*)** %78, align 8
  %80 = tail call zeroext i1 %79(%class.GrXferProcessor* %49, %class.GrXferProcessor* dereferenceable(24) %57) #5
  br label %81

81:                                               ; preds = %75, %69, %63, %56, %41, %33, %26, %2, %9, %17
  %82 = phi i1 [ false, %17 ], [ false, %9 ], [ false, %2 ], [ false, %26 ], [ false, %33 ], [ true, %41 ], [ %80, %75 ], [ false, %56 ], [ false, %63 ], [ false, %69 ]
  ret i1 %82
}

declare zeroext i1 @_ZNK19GrFragmentProcessor7isEqualERKS_(%class.GrFragmentProcessor*, %class.GrFragmentProcessor* dereferenceable(64)) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

declare dereferenceable(24) %class.GrXferProcessor* @_ZN21GrPorterDuffXPFactory15SimpleSrcOverXPEv() local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN14GrProcessorSet8finalizeERK24GrProcessorAnalysisColor27GrProcessorAnalysisCoveragePK13GrAppliedClipPK21GrUserStencilSettingsRK6GrCaps11GrClampTypeP8SkRGBA4fIL11SkAlphaType2EE(%class.GrProcessorSet*, %class.GrProcessorAnalysisColor* dereferenceable(20), i32, %class.GrAppliedClip* readonly, %struct.GrUserStencilSettings* nocapture readnone, %class.GrCaps* dereferenceable(232), i32, %struct.SkRGBA4f* nocapture) local_unnamed_addr #0 align 2 {
  %9 = alloca %class.GrColorFragmentProcessorAnalysis, align 8
  %10 = alloca i32, align 4
  %11 = alloca %class.GrProcessorAnalysisColor, align 4
  %12 = alloca %class.sk_sp.3, align 8
  %13 = alloca %class.GrProcessorAnalysisColor, align 4
  %14 = icmp ne i32 %2, 2
  %15 = zext i1 %14 to i16
  %16 = shl nuw nsw i16 %15, 1
  %17 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #5
  %18 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 1
  %19 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 2
  %20 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 3
  %21 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 4
  %22 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 5, i32 0
  %23 = bitcast %class.GrColorFragmentProcessorAnalysis* %9 to i64*
  store i64 -6148914691236517206, i64* %23, align 8
  %24 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 5, i32 3
  %25 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 0
  %26 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = bitcast float* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %27, i8 -1, i64 16, i1 false)
  %28 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %26, align 8
  %29 = icmp ne %class.GrFragmentProcessor* %28, null
  %30 = zext i1 %29 to i32
  call void @_ZN32GrColorFragmentProcessorAnalysisC1ERK24GrProcessorAnalysisColorPKNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEi(%class.GrColorFragmentProcessorAnalysis* nonnull %9, %class.GrProcessorAnalysisColor* dereferenceable(20) %1, %"class.std::__1::unique_ptr"* %25, i32 %30) #5
  %31 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %32 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %31, align 8
  %33 = icmp ne %class.GrFragmentProcessor* %32, null
  br i1 %33, label %34, label %46

34:                                               ; preds = %8
  %35 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %32, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, 1
  %38 = icmp eq i32 %37, 0
  %39 = select i1 %38, i16 0, i16 %16
  %40 = and i32 %36, 24
  %41 = icmp ne i32 %40, 0
  %42 = and i32 %36, 32
  %43 = icmp eq i32 %42, 0
  %44 = and i1 %43, %41
  %45 = zext i1 %44 to i8
  br label %46

46:                                               ; preds = %34, %8
  %47 = phi i16 [ %39, %34 ], [ %16, %8 ]
  %48 = phi i8 [ %45, %34 ], [ 0, %8 ]
  %49 = icmp eq %class.GrAppliedClip* %3, null
  br i1 %49, label %68, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %class.GrAppliedClip, %class.GrAppliedClip* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  %52 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %51, align 8
  %53 = icmp eq %class.GrFragmentProcessor* %52, null
  br i1 %53, label %68, label %54

54:                                               ; preds = %50
  %55 = getelementptr inbounds %class.GrFragmentProcessor, %class.GrFragmentProcessor* %52, i64 0, i32 3
  %56 = load i32, i32* %55, align 8
  %57 = trunc i32 %56 to i16
  %58 = shl i16 %57, 1
  %59 = or i16 %58, -3
  %60 = and i16 %59, %47
  %61 = and i32 %56, 24
  %62 = icmp ne i32 %61, 0
  %63 = and i32 %56, 32
  %64 = icmp eq i32 %63, 0
  %65 = and i1 %64, %62
  %66 = zext i1 %65 to i8
  %67 = or i8 %48, %66
  br label %68

68:                                               ; preds = %50, %46, %54
  %69 = phi i16 [ %47, %46 ], [ %47, %50 ], [ %60, %54 ]
  %70 = phi i8 [ %48, %46 ], [ %48, %50 ], [ %67, %54 ]
  %71 = phi i1 [ %33, %46 ], [ %33, %50 ], [ true, %54 ]
  %72 = load i32, i32* %21, align 4
  %73 = icmp sgt i32 %72, 0
  br i1 %73, label %74, label %78

74:                                               ; preds = %68
  %75 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 5
  %76 = bitcast %struct.SkRGBA4f* %7 to i8*
  %77 = bitcast %struct.SkRGBA4f* %75 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %76, i8* align 8 %77, i64 16, i1 false) #5
  br label %78

78:                                               ; preds = %68, %74
  %79 = icmp ne i32 %72, 0
  %80 = zext i1 %79 to i16
  %81 = shl nuw nsw i16 %80, 8
  %82 = and i16 %69, -973
  %83 = or i16 %81, %82
  %84 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %84) #5
  store i32 -1431655766, i32* %10, align 4
  %85 = icmp eq i32 %2, 2
  br i1 %85, label %86, label %87

86:                                               ; preds = %78
  store i32 2, i32* %10, align 4
  br label %92

87:                                               ; preds = %78
  %88 = icmp eq i32 %2, 1
  %89 = or i1 %88, %71
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  store i32 1, i32* %10, align 4
  br label %92

91:                                               ; preds = %87
  store i32 0, i32* %10, align 4
  br label %92

92:                                               ; preds = %90, %91, %86
  %93 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 2, i32 0
  %94 = load %class.GrXPFactory*, %class.GrXPFactory** %93, align 8
  %95 = bitcast %class.GrProcessorAnalysisColor* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %95) #5
  %96 = load i8, i8* %20, align 1, !range !3, !noalias !4
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %106, label %98

98:                                               ; preds = %92
  %99 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 5
  %100 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %11, i64 0, i32 1
  %101 = bitcast %struct.SkRGBA4f* %100 to i8*
  %102 = bitcast %struct.SkRGBA4f* %99 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %101, i8* align 8 %102, i64 16, i1 false) #5
  %103 = load float, float* %24, align 4, !noalias !4
  %104 = fcmp oeq float %103, 1.000000e+00
  %105 = select i1 %104, i32 3, i32 1
  br label %112

106:                                              ; preds = %92
  %107 = load i8, i8* %17, align 8, !range !3, !noalias !4
  %108 = icmp eq i8 %107, 1
  %109 = select i1 %108, i32 2, i32 0
  %110 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %11, i64 0, i32 1
  %111 = bitcast %struct.SkRGBA4f* %110 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %111, i8 0, i64 16, i1 false) #5, !alias.scope !4
  br label %112

112:                                              ; preds = %98, %106
  %113 = phi i32 [ %109, %106 ], [ %105, %98 ]
  %114 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %11, i64 0, i32 0
  store i32 %113, i32* %114, align 4, !alias.scope !4
  %115 = call i32 @_ZN11GrXPFactory21GetAnalysisPropertiesEPKS_RK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.GrXPFactory* %94, %class.GrProcessorAnalysisColor* nonnull dereferenceable(20) %11, i32* nonnull dereferenceable(4) %10, %class.GrCaps* dereferenceable(232) %5, i32 %6) #5
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %95) #5
  %116 = lshr i32 %115, 2
  %117 = trunc i32 %116 to i16
  %118 = and i16 %117, 4
  %119 = or i16 %83, %118
  %120 = trunc i32 %115 to i16
  %121 = or i16 %120, -715
  %122 = and i16 %117, 8
  %123 = and i16 %119, %121
  %124 = and i16 %120, 192
  %125 = or i16 %124, %122
  %126 = or i16 %125, %123
  %127 = and i32 %115, 4
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %138, label %129

129:                                              ; preds = %112
  %130 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %26, align 8
  %131 = icmp ne %class.GrFragmentProcessor* %130, null
  %132 = zext i1 %131 to i32
  %133 = and i16 %126, -770
  %134 = and i8 %70, 1
  %135 = zext i8 %134 to i16
  %136 = or i16 %133, %135
  %137 = or i16 %136, 512
  br label %149

138:                                              ; preds = %112
  %139 = load i8, i8* %18, align 1, !range !3
  %140 = shl nuw nsw i8 %139, 1
  %141 = zext i8 %140 to i16
  %142 = or i16 %141, -4
  %143 = and i16 %142, %126
  %144 = load i8, i8* %19, align 2, !range !3
  %145 = and i8 %70, 1
  %146 = or i8 %144, %145
  %147 = zext i8 %146 to i16
  %148 = or i16 %143, %147
  br label %149

149:                                              ; preds = %138, %129
  %150 = phi i16 [ %148, %138 ], [ %137, %129 ]
  %151 = phi i32 [ %72, %138 ], [ %132, %129 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %161, label %153

153:                                              ; preds = %149
  %154 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %26, align 8
  store %class.GrFragmentProcessor* null, %class.GrFragmentProcessor** %26, align 8
  %155 = icmp eq %class.GrFragmentProcessor* %154, null
  br i1 %155, label %161, label %156

156:                                              ; preds = %153
  %157 = bitcast %class.GrFragmentProcessor* %154 to void (%class.GrFragmentProcessor*)***
  %158 = load void (%class.GrFragmentProcessor*)**, void (%class.GrFragmentProcessor*)*** %157, align 8
  %159 = getelementptr inbounds void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %158, i64 1
  %160 = load void (%class.GrFragmentProcessor*)*, void (%class.GrFragmentProcessor*)** %159, align 8
  call void %160(%class.GrFragmentProcessor* nonnull %154) #5
  br label %161

161:                                              ; preds = %156, %153, %149
  %162 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %26, align 8
  %163 = icmp ne %class.GrFragmentProcessor* %162, null
  %164 = zext i1 %163 to i16
  %165 = shl nuw nsw i16 %164, 4
  %166 = and i16 %150, -49
  %167 = bitcast %class.sk_sp.3* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %167) #5
  %168 = getelementptr inbounds %class.sk_sp.3, %class.sk_sp.3* %12, i64 0, i32 0
  store %class.GrXferProcessor* inttoptr (i64 -6148914691236517206 to %class.GrXferProcessor*), %class.GrXferProcessor** %168, align 8
  %169 = load %class.GrXPFactory*, %class.GrXPFactory** %93, align 8
  %170 = bitcast %class.GrProcessorAnalysisColor* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 20, i8* nonnull %170) #5
  %171 = load i8, i8* %20, align 1, !range !3, !noalias !7
  %172 = icmp eq i8 %171, 0
  br i1 %172, label %181, label %173

173:                                              ; preds = %161
  %174 = getelementptr inbounds %class.GrColorFragmentProcessorAnalysis, %class.GrColorFragmentProcessorAnalysis* %9, i64 0, i32 5
  %175 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %13, i64 0, i32 1
  %176 = bitcast %struct.SkRGBA4f* %175 to i8*
  %177 = bitcast %struct.SkRGBA4f* %174 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %176, i8* align 8 %177, i64 16, i1 false) #5
  %178 = load float, float* %24, align 4, !noalias !7
  %179 = fcmp oeq float %178, 1.000000e+00
  %180 = select i1 %179, i32 3, i32 1
  br label %187

181:                                              ; preds = %161
  %182 = load i8, i8* %17, align 8, !range !3, !noalias !7
  %183 = icmp eq i8 %182, 1
  %184 = select i1 %183, i32 2, i32 0
  %185 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %13, i64 0, i32 1
  %186 = bitcast %struct.SkRGBA4f* %185 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %186, i8 0, i64 16, i1 false) #5, !alias.scope !7
  br label %187

187:                                              ; preds = %181, %173
  %188 = phi i32 [ %184, %181 ], [ %180, %173 ]
  %189 = getelementptr inbounds %class.GrProcessorAnalysisColor, %class.GrProcessorAnalysisColor* %13, i64 0, i32 0
  store i32 %188, i32* %189, align 4, !alias.scope !7
  %190 = load i32, i32* %10, align 4
  call void @_ZN11GrXPFactory17MakeXferProcessorEPKS_RK24GrProcessorAnalysisColor27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.sk_sp.3* nonnull sret %12, %class.GrXPFactory* %169, %class.GrProcessorAnalysisColor* nonnull dereferenceable(20) %13, i32 %190, %class.GrCaps* dereferenceable(232) %5, i32 %6) #5
  call void @llvm.lifetime.end.p0i8(i64 20, i8* nonnull %170) #5
  %191 = bitcast %class.sk_sp.3* %12 to i64*
  %192 = load i64, i64* %191, align 8
  %193 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 2
  %194 = bitcast %"union.GrProcessorSet::XP"* %193 to i64*
  store i64 %192, i64* %194, align 8
  %195 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 3
  %196 = load i8, i8* %195, align 8
  %197 = or i8 %196, 1
  store i8 %197, i8* %195, align 8
  %198 = or i16 %166, %165
  %199 = or i16 %198, 32
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %167) #5
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %84) #5
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #5
  %200 = zext i16 %199 to i32
  ret i32 %200
}

declare void @_ZN32GrColorFragmentProcessorAnalysisC1ERK24GrProcessorAnalysisColorPKNSt3__110unique_ptrI19GrFragmentProcessorNS3_14default_deleteIS5_EEEEi(%class.GrColorFragmentProcessorAnalysis*, %class.GrProcessorAnalysisColor* dereferenceable(20), %"class.std::__1::unique_ptr"*, i32) unnamed_addr #2

declare i32 @_ZN11GrXPFactory21GetAnalysisPropertiesEPKS_RK24GrProcessorAnalysisColorRK27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.GrXPFactory*, %class.GrProcessorAnalysisColor* dereferenceable(20), i32* dereferenceable(4), %class.GrCaps* dereferenceable(232), i32) local_unnamed_addr #2

declare void @_ZN11GrXPFactory17MakeXferProcessorEPKS_RK24GrProcessorAnalysisColor27GrProcessorAnalysisCoverageRK6GrCaps11GrClampType(%class.sk_sp.3* sret, %class.GrXPFactory*, %class.GrProcessorAnalysisColor* dereferenceable(20), i32, %class.GrCaps* dereferenceable(232), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK14GrProcessorSet12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrProcessorSet* nocapture readonly, %"class.std::__1::function"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %3, align 8
  %5 = icmp eq %class.GrFragmentProcessor* %4, null
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZNK19GrFragmentProcessor12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrFragmentProcessor* nonnull %4, %"class.std::__1::function"* %1) #5
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %class.GrProcessorSet, %class.GrProcessorSet* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %9 = load %class.GrFragmentProcessor*, %class.GrFragmentProcessor** %8, align 8
  %10 = icmp eq %class.GrFragmentProcessor* %9, null
  br i1 %10, label %12, label %11

11:                                               ; preds = %7
  tail call void @_ZNK19GrFragmentProcessor12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrFragmentProcessor* nonnull %9, %"class.std::__1::function"* %1) #5
  br label %12

12:                                               ; preds = %7, %11
  ret void
}

declare void @_ZNK19GrFragmentProcessor12visitProxiesERKNSt3__18functionIFvP14GrSurfaceProxy11GrMipmappedEEE(%class.GrFragmentProcessor*, %"class.std::__1::function"*) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nofree nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 1048575}
!3 = !{i8 0, i8 2}
!4 = !{!5}
!5 = distinct !{!5, !6, !"_ZNK32GrColorFragmentProcessorAnalysis11outputColorEv: argument 0"}
!6 = distinct !{!6, !"_ZNK32GrColorFragmentProcessorAnalysis11outputColorEv"}
!7 = !{!8}
!8 = distinct !{!8, !9, !"_ZNK32GrColorFragmentProcessorAnalysis11outputColorEv: argument 0"}
!9 = distinct !{!9, !"_ZNK32GrColorFragmentProcessorAnalysis11outputColorEv"}
