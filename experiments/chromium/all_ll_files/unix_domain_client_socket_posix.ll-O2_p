; ModuleID = '../../net/socket/unix_domain_client_socket_posix.cc'
source_filename = "../../net/socket/unix_domain_client_socket_posix.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.net::UnixDomainClientSocket" = type { %"class.net::StreamSocket", %"class.std::__1::basic_string", i8, %"class.std::__1::unique_ptr", %"class.net::NetLogWithSource" }
%"class.net::StreamSocket" = type { %"class.net::Socket" }
%"class.net::Socket" = type { i32 (...)**, %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"class.std::__1::basic_string"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { %"class.net::SocketPosix"* }
%"class.net::SocketPosix" = type <{ %"class.base::WatchableIOMessagePumpPosix::FdWatcher", i32, [4 x i8], %"class.base::MessagePumpLibevent::FdWatchController", %"class.std::__1::unique_ptr"*, %"class.base::OnceCallback", %"class.base::MessagePumpLibevent::FdWatchController", %class.scoped_refptr.13, i32, [4 x i8], %"class.base::OnceCallback", %"class.base::OnceCallback", %"class.base::MessagePumpLibevent::FdWatchController", %class.scoped_refptr.13, i32, [4 x i8], %"class.base::OnceCallback", i8, [7 x i8], %"class.std::__1::unique_ptr.14", %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::WatchableIOMessagePumpPosix::FdWatcher" = type { i32 (...)** }
%"class.base::MessagePumpLibevent::FdWatchController" = type { %"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface", %"class.std::__1::unique_ptr.8", %"class.base::MessagePumpLibevent"*, %"class.base::WatchableIOMessagePumpPosix::FdWatcher"*, i8* }
%"class.base::WatchableIOMessagePumpPosix::FdWatchControllerInterface" = type { i32 (...)**, %"class.base::Location" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %struct.event* }
%struct.event = type opaque
%"class.base::MessagePumpLibevent" = type <{ %"class.base::MessagePump", %"struct.base::MessagePumpLibevent::RunState"*, i8, [7 x i8], %struct.event_base*, i32, i32, %struct.event*, %"class.base::ThreadChecker", [7 x i8] }>
%"class.base::MessagePump" = type { i32 (...)** }
%"struct.base::MessagePumpLibevent::RunState" = type <{ %"class.base::MessagePump::Delegate"*, i8, [7 x i8] }>
%"class.base::MessagePump::Delegate" = type { i32 (...)** }
%struct.event_base = type opaque
%class.scoped_refptr.13 = type { %"class.net::IOBuffer"* }
%"class.net::IOBuffer" = type opaque
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.12" }
%"struct.std::__1::__atomic_base.12" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.14" = type { %"class.std::__1::__compressed_pair.15" }
%"class.std::__1::__compressed_pair.15" = type { %"struct.std::__1::__compressed_pair_elem.16" }
%"struct.std::__1::__compressed_pair_elem.16" = type { %"struct.net::SockaddrStorage"* }
%"struct.net::SockaddrStorage" = type { %struct.sockaddr_storage, i32, %struct.sockaddr* }
%struct.sockaddr_storage = type { i16, [118 x i8], i64 }
%struct.sockaddr = type { i16, [14 x i8] }
%"class.base::ThreadChecker" = type { i8 }
%"class.net::NetLogWithSource" = type { %"struct.net::NetLogSource", %"class.net::NetLog"* }
%"struct.net::NetLogSource" = type { i32, i32, %"class.base::TimeTicks" }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.net::NetLog" = type { i32 (...)**, %"class.base::Lock", i32, i32, %"class.std::__1::vector.23", %"class.std::__1::vector.30" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::vector.23" = type { %"class.std::__1::__vector_base.24" }
%"class.std::__1::__vector_base.24" = type { %"class.net::NetLog::ThreadSafeObserver"**, %"class.net::NetLog::ThreadSafeObserver"**, %"class.std::__1::__compressed_pair.25" }
%"class.net::NetLog::ThreadSafeObserver" = type { i32 (...)**, i32, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.25" = type { %"struct.std::__1::__compressed_pair_elem.26" }
%"struct.std::__1::__compressed_pair_elem.26" = type { %"class.net::NetLog::ThreadSafeObserver"** }
%"class.std::__1::vector.30" = type { %"class.std::__1::__vector_base.31" }
%"class.std::__1::__vector_base.31" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.net::NetLog::ThreadSafeCaptureModeObserver"**, %"class.std::__1::__compressed_pair.32" }
%"class.net::NetLog::ThreadSafeCaptureModeObserver" = type { i32 (...)**, %"class.net::NetLog"* }
%"class.std::__1::__compressed_pair.32" = type { %"struct.std::__1::__compressed_pair_elem.33" }
%"struct.std::__1::__compressed_pair_elem.33" = type { %"class.net::NetLog::ThreadSafeCaptureModeObserver"** }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%struct.sockaddr_un = type { i16, [108 x i8] }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.net::SSLInfo" = type opaque
%"class.std::__1::vector.37" = type { %"class.std::__1::__vector_base.38" }
%"class.std::__1::__vector_base.38" = type { %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"*, %"class.std::__1::__compressed_pair.39" }
%"struct.net::ConnectionAttempt" = type { %"class.net::IPEndPoint", i32 }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem.40" }
%"struct.std::__1::__compressed_pair_elem.40" = type { %"struct.net::ConnectionAttempt"* }
%"class.net::SocketTag" = type opaque
%"struct.net::NetworkTrafficAnnotationTag" = type { i32 }
%"class.base::RepeatingCallback" = type opaque
%"class.net::SSLCertRequestInfo" = type opaque
%"struct.net::StreamSocket::SocketMemoryStats" = type { i64, i64, i64, i64 }

$_ZN3net22UnixDomainClientSocket23ClearConnectionAttemptsEv = comdat any

$_ZN3net22UnixDomainClientSocket21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE = comdat any

$_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE = comdat any

@_ZTVN3net22UnixDomainClientSocketE = hidden unnamed_addr constant { [33 x i8*] } { [33 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.net::UnixDomainClientSocket"*)* @_ZN3net22UnixDomainClientSocketD2Ev to i8*), i8* bitcast (void (%"class.net::UnixDomainClientSocket"*)* @_ZN3net22UnixDomainClientSocketD0Ev to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net22UnixDomainClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*)* @_ZN3net6Socket11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::Socket"*)* @_ZN3net6Socket17CancelReadIfReadyEv to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"*)* @_ZN3net22UnixDomainClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*, i32)* @_ZN3net22UnixDomainClientSocket20SetReceiveBufferSizeEi to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*, i32)* @_ZN3net22UnixDomainClientSocket17SetSendBufferSizeEi to i8*), i8* bitcast (void (%"class.net::Socket"*, %"class.std::__1::vector"*)* @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE to i8*), i8* bitcast (%"class.std::__1::vector"* (%"class.net::Socket"*)* @_ZNK3net6Socket13GetDnsAliasesEv to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"class.base::RepeatingCallback"*)* @_ZN3net12StreamSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*, %"class.base::OnceCallback"*)* @_ZN3net22UnixDomainClientSocket7ConnectEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (i32 (%"class.net::StreamSocket"*, %"class.base::OnceCallback"*)* @_ZN3net12StreamSocket16ConfirmHandshakeEN4base12OnceCallbackIFviEEE to i8*), i8* bitcast (void (%"class.net::UnixDomainClientSocket"*)* @_ZN3net22UnixDomainClientSocket10DisconnectEv to i8*), i8* bitcast (i1 (%"class.net::UnixDomainClientSocket"*)* @_ZNK3net22UnixDomainClientSocket11IsConnectedEv to i8*), i8* bitcast (i1 (%"class.net::UnixDomainClientSocket"*)* @_ZNK3net22UnixDomainClientSocket18IsConnectedAndIdleEv to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net22UnixDomainClientSocket14GetPeerAddressEPNS_10IPEndPointE to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*, %"class.net::IPEndPoint"*)* @_ZNK3net22UnixDomainClientSocket15GetLocalAddressEPNS_10IPEndPointE to i8*), i8* bitcast (%"class.net::NetLogWithSource"* (%"class.net::UnixDomainClientSocket"*)* @_ZNK3net22UnixDomainClientSocket6NetLogEv to i8*), i8* bitcast (i1 (%"class.net::UnixDomainClientSocket"*)* @_ZNK3net22UnixDomainClientSocket11WasEverUsedEv to i8*), i8* bitcast (i1 (%"class.net::UnixDomainClientSocket"*)* @_ZNK3net22UnixDomainClientSocket17WasAlpnNegotiatedEv to i8*), i8* bitcast (i32 (%"class.net::UnixDomainClientSocket"*)* @_ZNK3net22UnixDomainClientSocket21GetNegotiatedProtocolEv to i8*), i8* bitcast (void ()* @_ZNK3net12StreamSocket26GetPeerApplicationSettingsEv to i8*), i8* bitcast (i1 (%"class.net::UnixDomainClientSocket"*, %"class.net::SSLInfo"*)* @_ZN3net22UnixDomainClientSocket10GetSSLInfoEPNS_7SSLInfoE to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*)* @_ZNK3net12StreamSocket21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE to i8*), i8* bitcast (void (%"class.net::UnixDomainClientSocket"*, %"class.std::__1::vector.37"*)* @_ZNK3net22UnixDomainClientSocket21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (void (%"class.net::UnixDomainClientSocket"*)* @_ZN3net22UnixDomainClientSocket23ClearConnectionAttemptsEv to i8*), i8* bitcast (void (%"class.net::UnixDomainClientSocket"*, %"class.std::__1::vector.37"*)* @_ZN3net22UnixDomainClientSocket21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE to i8*), i8* bitcast (i64 (%"class.net::UnixDomainClientSocket"*)* @_ZNK3net22UnixDomainClientSocket21GetTotalReceivedBytesEv to i8*), i8* bitcast (void (%"class.net::StreamSocket"*, %"struct.net::StreamSocket::SocketMemoryStats"*)* @_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE to i8*), i8* bitcast (void (%"class.net::UnixDomainClientSocket"*, %"class.net::SocketTag"*)* @_ZN3net22UnixDomainClientSocket14ApplySocketTagERKNS_9SocketTagE to i8*)] }, align 8

@_ZN3net22UnixDomainClientSocketC1ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb = hidden unnamed_addr alias void (%"class.net::UnixDomainClientSocket"*, %"class.std::__1::basic_string"*, i1), void (%"class.net::UnixDomainClientSocket"*, %"class.std::__1::basic_string"*, i1)* @_ZN3net22UnixDomainClientSocketC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb
@_ZN3net22UnixDomainClientSocketC1ENSt3__110unique_ptrINS_11SocketPosixENS1_14default_deleteIS3_EEEE = hidden unnamed_addr alias void (%"class.net::UnixDomainClientSocket"*, %"class.net::SocketPosix"*), void (%"class.net::UnixDomainClientSocket"*, %"class.net::SocketPosix"*)* @_ZN3net22UnixDomainClientSocketC2ENSt3__110unique_ptrINS_11SocketPosixENS1_14default_deleteIS3_EEEE
@_ZN3net22UnixDomainClientSocketD1Ev = hidden unnamed_addr alias void (%"class.net::UnixDomainClientSocket"*), void (%"class.net::UnixDomainClientSocket"*)* @_ZN3net22UnixDomainClientSocketD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22UnixDomainClientSocketC2ERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEb(%"class.net::UnixDomainClientSocket"*, %"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext) unnamed_addr #0 align 2 {
  %4 = zext i1 %2 to i8
  %5 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net6SocketC2Ev(%"class.net::Socket"* %5) #8
  %6 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN3net22UnixDomainClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %15, label %12

12:                                               ; preds = %3
  %13 = bitcast %"class.std::__1::basic_string"* %7 to i8*
  %14 = bitcast %"class.std::__1::basic_string"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %13, i8* align 8 %14, i64 24, i1 false) #8
  br label %20

15:                                               ; preds = %3
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load i8*, i8** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %7, i8* %17, i64 %19) #8
  br label %20

20:                                               ; preds = %12, %15
  %21 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 2
  store i8 %4, i8* %21, align 8
  %22 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3
  %23 = bitcast %"class.std::__1::unique_ptr"* %22 to i64*
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 4
  tail call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* %24) #8
  ret void
}

declare void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22UnixDomainClientSocketC2ENSt3__110unique_ptrINS_11SocketPosixENS1_14default_deleteIS3_EEEE(%"class.net::UnixDomainClientSocket"*, %"class.net::SocketPosix"*) unnamed_addr #0 align 2 {
  %3 = ptrtoint %"class.net::SocketPosix"* %1 to i64
  %4 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net6SocketC2Ev(%"class.net::Socket"* %4) #8
  %5 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN3net22UnixDomainClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 1
  %7 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3
  %8 = bitcast %"class.std::__1::unique_ptr"* %7 to i64*
  %9 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 0, i64 25, i1 false)
  store i64 %3, i64* %8, align 8
  %10 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 4
  tail call void @_ZN3net16NetLogWithSourceC1Ev(%"class.net::NetLogWithSource"* %10) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22UnixDomainClientSocketD2Ev(%"class.net::UnixDomainClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN3net22UnixDomainClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %3, align 8
  store %"class.net::SocketPosix"* null, %"class.net::SocketPosix"** %3, align 8
  %5 = icmp eq %"class.net::SocketPosix"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::SocketPosix"* %4 to void (%"class.net::SocketPosix"*)***
  %8 = load void (%"class.net::SocketPosix"*)**, void (%"class.net::SocketPosix"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %8, i64 3
  %10 = load void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %9, align 8
  tail call void %10(%"class.net::SocketPosix"* nonnull %4) #8
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 4
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %12) #8
  %13 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %3, align 8
  store %"class.net::SocketPosix"* null, %"class.net::SocketPosix"** %3, align 8
  %14 = icmp eq %"class.net::SocketPosix"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.net::SocketPosix"* %13 to void (%"class.net::SocketPosix"*)***
  %17 = load void (%"class.net::SocketPosix"*)**, void (%"class.net::SocketPosix"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %17, i64 3
  %19 = load void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %18, align 8
  tail call void %19(%"class.net::SocketPosix"* nonnull %13) #8
  br label %20

20:                                               ; preds = %11, %15
  %21 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %30) #8
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN3net6SocketD2Ev(%"class.net::Socket"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22UnixDomainClientSocketD0Ev(%"class.net::UnixDomainClientSocket"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [33 x i8*] }, { [33 x i8*] }* @_ZTVN3net22UnixDomainClientSocketE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %3, align 8
  store %"class.net::SocketPosix"* null, %"class.net::SocketPosix"** %3, align 8
  %5 = icmp eq %"class.net::SocketPosix"* %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.net::SocketPosix"* %4 to void (%"class.net::SocketPosix"*)***
  %8 = load void (%"class.net::SocketPosix"*)**, void (%"class.net::SocketPosix"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %8, i64 3
  %10 = load void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %9, align 8
  tail call void %10(%"class.net::SocketPosix"* nonnull %4) #8
  br label %11

11:                                               ; preds = %6, %1
  %12 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 4
  tail call void @_ZN3net16NetLogWithSourceD1Ev(%"class.net::NetLogWithSource"* %12) #8
  %13 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %3, align 8
  store %"class.net::SocketPosix"* null, %"class.net::SocketPosix"** %3, align 8
  %14 = icmp eq %"class.net::SocketPosix"* %13, null
  br i1 %14, label %20, label %15

15:                                               ; preds = %11
  %16 = bitcast %"class.net::SocketPosix"* %13 to void (%"class.net::SocketPosix"*)***
  %17 = load void (%"class.net::SocketPosix"*)**, void (%"class.net::SocketPosix"*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %17, i64 3
  %19 = load void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %18, align 8
  tail call void %19(%"class.net::SocketPosix"* nonnull %13) #8
  br label %20

20:                                               ; preds = %15, %11
  %21 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %29

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  tail call void @_ZdlPv(i8* %28) #9
  br label %29

29:                                               ; preds = %20, %26
  %30 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net6SocketD2Ev(%"class.net::Socket"* %30) #8
  %31 = bitcast %"class.net::UnixDomainClientSocket"* %0 to i8*
  tail call void @_ZdlPv(i8* %31) #9
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN3net22UnixDomainClientSocket11FillAddressERKNSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEEbPNS_15SockaddrStorageE(%"class.std::__1::basic_string"* nocapture readonly dereferenceable(24), i1 zeroext, %"struct.net::SockaddrStorage"* nocapture) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"class.std::__1::basic_string"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  %8 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = zext i8 %6 to i64
  %11 = select i1 %7, i64 %9, i64 %10
  %12 = icmp eq i64 %11, 0
  br i1 %12, label %50, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %2, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = add nsw i64 %16, -2
  %18 = add i64 %11, 1
  %19 = icmp ugt i64 %18, %17
  br i1 %19, label %50, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %2, i64 0, i32 2
  %22 = bitcast %struct.sockaddr** %21 to %struct.sockaddr_un**
  %23 = load %struct.sockaddr_un*, %struct.sockaddr_un** %22, align 8
  %24 = bitcast %struct.sockaddr_un* %23 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 2 %24, i8 0, i64 %16, i1 false)
  %25 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %23, i64 0, i32 0
  store i16 1, i16* %25, align 2
  %26 = trunc i64 %11 to i32
  %27 = add i32 %26, 3
  store i32 %27, i32* %14, align 8
  br i1 %1, label %39, label %28

28:                                               ; preds = %20
  %29 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %23, i64 0, i32 1, i64 0
  %30 = load i8, i8* %5, align 1
  %31 = icmp slt i8 %30, 0
  %32 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load i8*, i8** %32, align 8
  %34 = load i64, i64* %8, align 8
  %35 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %36 = zext i8 %30 to i64
  %37 = select i1 %31, i8* %33, i8* %35
  %38 = select i1 %31, i64 %34, i64 %36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %29, i8* align 1 %37, i64 %38, i1 false)
  br label %50

39:                                               ; preds = %20
  %40 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %23, i64 0, i32 1, i64 1
  %41 = load i8, i8* %5, align 1
  %42 = icmp slt i8 %41, 0
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  %45 = load i64, i64* %8, align 8
  %46 = bitcast %"class.std::__1::basic_string"* %0 to i8*
  %47 = zext i8 %41 to i64
  %48 = select i1 %42, i8* %44, i8* %46
  %49 = select i1 %42, i64 %45, i64 %47
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %40, i8* align 1 %48, i64 %49, i1 false)
  br label %50

50:                                               ; preds = %13, %39, %28, %3
  %51 = phi i1 [ false, %3 ], [ false, %13 ], [ true, %39 ], [ true, %28 ]
  ret i1 %51
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net22UnixDomainClientSocket7ConnectEN4base12OnceCallbackIFviEEE(%"class.net::UnixDomainClientSocket"*, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %3 = alloca %"struct.net::SockaddrStorage", align 8
  %4 = alloca %"class.base::OnceCallback", align 8
  %5 = bitcast %"class.net::UnixDomainClientSocket"* %0 to i1 (%"class.net::UnixDomainClientSocket"*)***
  %6 = load i1 (%"class.net::UnixDomainClientSocket"*)**, i1 (%"class.net::UnixDomainClientSocket"*)*** %5, align 8
  %7 = getelementptr inbounds i1 (%"class.net::UnixDomainClientSocket"*)*, i1 (%"class.net::UnixDomainClientSocket"*)** %6, i64 14
  %8 = load i1 (%"class.net::UnixDomainClientSocket"*)*, i1 (%"class.net::UnixDomainClientSocket"*)** %7, align 8
  %9 = tail call zeroext i1 %8(%"class.net::UnixDomainClientSocket"* %0) #8
  br i1 %9, label %92, label %10

10:                                               ; preds = %2
  %11 = bitcast %"struct.net::SockaddrStorage"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 144, i8* nonnull %11) #8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 144, i1 false)
  call void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"* nonnull %3) #8
  %12 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 1
  %13 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 2
  %14 = load i8, i8* %13, align 8, !range !2
  %15 = icmp eq i8 %14, 0
  %16 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  %18 = load i8, i8* %17, align 1
  %19 = icmp slt i8 %18, 0
  %20 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = zext i8 %18 to i64
  %23 = select i1 %19, i64 %21, i64 %22
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %90, label %25

25:                                               ; preds = %10
  %26 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 1
  %27 = load i32, i32* %26, align 8
  %28 = zext i32 %27 to i64
  %29 = add nsw i64 %28, -2
  %30 = add i64 %23, 1
  %31 = icmp ugt i64 %30, %29
  br i1 %31, label %90, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"struct.net::SockaddrStorage", %"struct.net::SockaddrStorage"* %3, i64 0, i32 2
  %34 = bitcast %struct.sockaddr** %33 to %struct.sockaddr_un**
  %35 = load %struct.sockaddr_un*, %struct.sockaddr_un** %34, align 8
  %36 = bitcast %struct.sockaddr_un* %35 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 2 %36, i8 0, i64 %28, i1 false) #8
  %37 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %35, i64 0, i32 0
  store i16 1, i16* %37, align 2
  %38 = trunc i64 %23 to i32
  %39 = add i32 %38, 3
  store i32 %39, i32* %26, align 8
  br i1 %15, label %40, label %51

40:                                               ; preds = %32
  %41 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %35, i64 0, i32 1, i64 0
  %42 = load i8, i8* %17, align 1
  %43 = icmp slt i8 %42, 0
  %44 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load i8*, i8** %44, align 8
  %46 = load i64, i64* %20, align 8
  %47 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %48 = zext i8 %42 to i64
  %49 = select i1 %43, i8* %45, i8* %47
  %50 = select i1 %43, i64 %46, i64 %48
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 2 %41, i8* align 1 %49, i64 %50, i1 false) #8
  br label %62

51:                                               ; preds = %32
  %52 = getelementptr inbounds %struct.sockaddr_un, %struct.sockaddr_un* %35, i64 0, i32 1, i64 1
  %53 = load i8, i8* %17, align 1
  %54 = icmp slt i8 %53, 0
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  %57 = load i64, i64* %20, align 8
  %58 = bitcast %"class.std::__1::basic_string"* %12 to i8*
  %59 = zext i8 %53 to i64
  %60 = select i1 %54, i8* %56, i8* %58
  %61 = select i1 %54, i64 %57, i64 %59
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %52, i8* align 1 %60, i64 %61, i1 false) #8
  br label %62

62:                                               ; preds = %51, %40
  %63 = call i8* @_Znwm(i64 328) #9
  %64 = bitcast i8* %63 to %"class.net::SocketPosix"*
  call void @_ZN3net11SocketPosixC1Ev(%"class.net::SocketPosix"* nonnull %64) #8
  %65 = ptrtoint i8* %63 to i64
  %66 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3
  %67 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %66, i64 0, i32 0, i32 0, i32 0
  %68 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %67, align 8
  %69 = bitcast %"class.std::__1::unique_ptr"* %66 to i64*
  store i64 %65, i64* %69, align 8
  %70 = icmp eq %"class.net::SocketPosix"* %68, null
  %71 = bitcast i8* %63 to %"class.net::SocketPosix"*
  br i1 %70, label %78, label %72

72:                                               ; preds = %62
  %73 = bitcast %"class.net::SocketPosix"* %68 to void (%"class.net::SocketPosix"*)***
  %74 = load void (%"class.net::SocketPosix"*)**, void (%"class.net::SocketPosix"*)*** %73, align 8
  %75 = getelementptr inbounds void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %74, i64 3
  %76 = load void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %75, align 8
  call void %76(%"class.net::SocketPosix"* nonnull %68) #8
  %77 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %67, align 8
  br label %78

78:                                               ; preds = %72, %62
  %79 = phi %"class.net::SocketPosix"* [ %77, %72 ], [ %71, %62 ]
  %80 = call i32 @_ZN3net11SocketPosix4OpenEi(%"class.net::SocketPosix"* %79, i32 1) #8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %90

82:                                               ; preds = %78
  %83 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %67, align 8
  %84 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %1, i64 0, i32 0, i32 0, i32 0
  %85 = bitcast %"class.base::OnceCallback"* %1 to i64*
  %86 = load i64, i64* %85, align 8
  %87 = bitcast %"class.base::OnceCallback"* %4 to i64*
  store i64 %86, i64* %87, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %84, align 8
  %88 = call i32 @_ZN3net11SocketPosix7ConnectERKNS_15SockaddrStorageEN4base12OnceCallbackIFviEEE(%"class.net::SocketPosix"* %83, %"struct.net::SockaddrStorage"* nonnull dereferenceable(144) %3, %"class.base::OnceCallback"* nonnull %4) #8
  %89 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %4, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %89) #8
  br label %90

90:                                               ; preds = %25, %10, %82, %78
  %91 = phi i32 [ %88, %82 ], [ %80, %78 ], [ -108, %10 ], [ -108, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 144, i8* nonnull %11) #8
  br label %92

92:                                               ; preds = %2, %90
  %93 = phi i32 [ %91, %90 ], [ 0, %2 ]
  ret i32 %93
}

declare void @_ZN3net15SockaddrStorageC1Ev(%"struct.net::SockaddrStorage"*) unnamed_addr #1

declare i32 @_ZN3net11SocketPosix4OpenEi(%"class.net::SocketPosix"*, i32) local_unnamed_addr #1

declare i32 @_ZN3net11SocketPosix7ConnectERKNS_15SockaddrStorageEN4base12OnceCallbackIFviEEE(%"class.net::SocketPosix"*, %"struct.net::SockaddrStorage"* dereferenceable(144), %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net22UnixDomainClientSocket10DisconnectEv(%"class.net::UnixDomainClientSocket"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %2, align 8
  store %"class.net::SocketPosix"* null, %"class.net::SocketPosix"** %2, align 8
  %4 = icmp eq %"class.net::SocketPosix"* %3, null
  br i1 %4, label %10, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.net::SocketPosix"* %3 to void (%"class.net::SocketPosix"*)***
  %7 = load void (%"class.net::SocketPosix"*)**, void (%"class.net::SocketPosix"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %7, i64 3
  %9 = load void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %8, align 8
  tail call void %9(%"class.net::SocketPosix"* nonnull %3) #8
  br label %10

10:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net22UnixDomainClientSocket11IsConnectedEv(%"class.net::UnixDomainClientSocket"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %2, align 8
  %4 = icmp eq %"class.net::SocketPosix"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK3net11SocketPosix11IsConnectedEv(%"class.net::SocketPosix"* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK3net11SocketPosix11IsConnectedEv(%"class.net::SocketPosix"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net22UnixDomainClientSocket18IsConnectedAndIdleEv(%"class.net::UnixDomainClientSocket"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %2, align 8
  %4 = icmp eq %"class.net::SocketPosix"* %3, null
  br i1 %4, label %7, label %5

5:                                                ; preds = %1
  %6 = tail call zeroext i1 @_ZNK3net11SocketPosix18IsConnectedAndIdleEv(%"class.net::SocketPosix"* nonnull %3) #8
  br label %7

7:                                                ; preds = %1, %5
  %8 = phi i1 [ false, %1 ], [ %6, %5 ]
  ret i1 %8
}

declare zeroext i1 @_ZNK3net11SocketPosix18IsConnectedAndIdleEv(%"class.net::SocketPosix"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK3net22UnixDomainClientSocket14GetPeerAddressEPNS_10IPEndPointE(%"class.net::UnixDomainClientSocket"*, %"class.net::IPEndPoint"* nocapture readnone) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::UnixDomainClientSocket"* %0 to i1 (%"class.net::UnixDomainClientSocket"*)***
  %4 = load i1 (%"class.net::UnixDomainClientSocket"*)**, i1 (%"class.net::UnixDomainClientSocket"*)*** %3, align 8
  %5 = getelementptr inbounds i1 (%"class.net::UnixDomainClientSocket"*)*, i1 (%"class.net::UnixDomainClientSocket"*)** %4, i64 14
  %6 = load i1 (%"class.net::UnixDomainClientSocket"*)*, i1 (%"class.net::UnixDomainClientSocket"*)** %5, align 8
  %7 = tail call zeroext i1 %6(%"class.net::UnixDomainClientSocket"* %0) #8
  %8 = select i1 %7, i32 -108, i32 -15
  ret i32 %8
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i32 @_ZNK3net22UnixDomainClientSocket15GetLocalAddressEPNS_10IPEndPointE(%"class.net::UnixDomainClientSocket"* nocapture readonly, %"class.net::IPEndPoint"* nocapture readnone) unnamed_addr #5 align 2 {
  %3 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %4 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %3, align 8
  %5 = icmp eq %"class.net::SocketPosix"* %4, null
  %6 = select i1 %5, i32 -15, i32 -108
  ret i32 %6
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden dereferenceable(24) %"class.net::NetLogWithSource"* @_ZNK3net22UnixDomainClientSocket6NetLogEv(%"class.net::UnixDomainClientSocket"* readnone) unnamed_addr #6 align 2 {
  %2 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 4
  ret %"class.net::NetLogWithSource"* %2
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net22UnixDomainClientSocket11WasEverUsedEv(%"class.net::UnixDomainClientSocket"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK3net22UnixDomainClientSocket17WasAlpnNegotiatedEv(%"class.net::UnixDomainClientSocket"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK3net22UnixDomainClientSocket21GetNegotiatedProtocolEv(%"class.net::UnixDomainClientSocket"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i32 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZN3net22UnixDomainClientSocket10GetSSLInfoEPNS_7SSLInfoE(%"class.net::UnixDomainClientSocket"* nocapture readnone, %"class.net::SSLInfo"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net22UnixDomainClientSocket21GetConnectionAttemptsEPNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE(%"class.net::UnixDomainClientSocket"* nocapture readnone, %"class.std::__1::vector.37"* nocapture) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 0
  %4 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.37", %"class.std::__1::vector.37"* %1, i64 0, i32 0, i32 1
  %6 = load %"struct.net::ConnectionAttempt"*, %"struct.net::ConnectionAttempt"** %5, align 8
  %7 = icmp eq %"struct.net::ConnectionAttempt"* %6, %4
  br i1 %7, label %13, label %8

8:                                                ; preds = %2, %8
  %9 = phi %"struct.net::ConnectionAttempt"* [ %10, %8 ], [ %6, %2 ]
  %10 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %9, i64 -1
  %11 = getelementptr inbounds %"struct.net::ConnectionAttempt", %"struct.net::ConnectionAttempt"* %10, i64 0, i32 0
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %11) #8
  %12 = icmp eq %"struct.net::ConnectionAttempt"* %10, %4
  br i1 %12, label %13, label %8

13:                                               ; preds = %8, %2
  store %"struct.net::ConnectionAttempt"* %4, %"struct.net::ConnectionAttempt"** %5, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i64 @_ZNK3net22UnixDomainClientSocket21GetTotalReceivedBytesEv(%"class.net::UnixDomainClientSocket"* nocapture readnone) unnamed_addr #6 align 2 {
  ret i64 0
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN3net22UnixDomainClientSocket14ApplySocketTagERKNS_9SocketTagE(%"class.net::UnixDomainClientSocket"* nocapture, %"class.net::SocketTag"* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net22UnixDomainClientSocket4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::UnixDomainClientSocket"* nocapture readonly, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.base::OnceCallback", align 8
  %6 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %7 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %6, align 8
  %8 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %9 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.base::OnceCallback"* %5 to i64*
  store i64 %10, i64* %11, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %8, align 8
  %12 = call i32 @_ZN3net11SocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::SocketPosix"* %7, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %5) #8
  %13 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %5, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %13) #8
  ret i32 %12
}

declare i32 @_ZN3net11SocketPosix4ReadEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::SocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net22UnixDomainClientSocket5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::UnixDomainClientSocket"* nocapture readonly, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"* nocapture, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %8 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %7, align 8
  %9 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %10 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %11, i64* %12, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %9, align 8
  %13 = call i32 @_ZN3net11SocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::SocketPosix"* %8, %"class.net::IOBuffer"* %1, i32 %2, %"class.base::OnceCallback"* nonnull %6, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4) %4) #8
  %14 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %14) #8
  ret i32 %13
}

declare i32 @_ZN3net11SocketPosix5WriteEPNS_8IOBufferEiN4base12OnceCallbackIFviEEERKNS_27NetworkTrafficAnnotationTagE(%"class.net::SocketPosix"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*, %"struct.net::NetworkTrafficAnnotationTag"* dereferenceable(4)) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net22UnixDomainClientSocket20SetReceiveBufferSizeEi(%"class.net::UnixDomainClientSocket"* nocapture readnone, i32) unnamed_addr #6 align 2 {
  ret i32 -11
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZN3net22UnixDomainClientSocket17SetSendBufferSizeEi(%"class.net::UnixDomainClientSocket"* nocapture readnone, i32) unnamed_addr #6 align 2 {
  ret i32 -11
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN3net22UnixDomainClientSocket22ReleaseConnectedSocketEv(%"class.net::UnixDomainClientSocket"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::UnixDomainClientSocket", %"class.net::UnixDomainClientSocket"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %3 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %2, align 8
  %4 = tail call i32 @_ZN3net11SocketPosix22ReleaseConnectedSocketEv(%"class.net::SocketPosix"* %3) #8
  %5 = load %"class.net::SocketPosix"*, %"class.net::SocketPosix"** %2, align 8
  store %"class.net::SocketPosix"* null, %"class.net::SocketPosix"** %2, align 8
  %6 = icmp eq %"class.net::SocketPosix"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = bitcast %"class.net::SocketPosix"* %5 to void (%"class.net::SocketPosix"*)***
  %9 = load void (%"class.net::SocketPosix"*)**, void (%"class.net::SocketPosix"*)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %9, i64 3
  %11 = load void (%"class.net::SocketPosix"*)*, void (%"class.net::SocketPosix"*)** %10, align 8
  tail call void %11(%"class.net::SocketPosix"* nonnull %5) #8
  br label %12

12:                                               ; preds = %1, %7
  ret i32 %4
}

declare i32 @_ZN3net11SocketPosix22ReleaseConnectedSocketEv(%"class.net::SocketPosix"*) local_unnamed_addr #1

declare i32 @_ZN3net6Socket11ReadIfReadyEPNS_8IOBufferEiN4base12OnceCallbackIFviEEE(%"class.net::Socket"*, %"class.net::IOBuffer"*, i32, %"class.base::OnceCallback"*) unnamed_addr #1

declare i32 @_ZN3net6Socket17CancelReadIfReadyEv(%"class.net::Socket"*) unnamed_addr #1

declare void @_ZN3net6Socket13SetDnsAliasesENSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEE(%"class.net::Socket"*, %"class.std::__1::vector"*) unnamed_addr #1

declare dereferenceable(24) %"class.std::__1::vector"* @_ZNK3net6Socket13GetDnsAliasesEv(%"class.net::Socket"*) unnamed_addr #1

declare void @_ZN3net12StreamSocket24SetBeforeConnectCallbackERKN4base17RepeatingCallbackIFivEEE(%"class.net::StreamSocket"*, %"class.base::RepeatingCallback"*) unnamed_addr #1

declare i32 @_ZN3net12StreamSocket16ConfirmHandshakeEN4base12OnceCallbackIFviEEE(%"class.net::StreamSocket"*, %"class.base::OnceCallback"*) unnamed_addr #1

declare void @_ZNK3net12StreamSocket26GetPeerApplicationSettingsEv() unnamed_addr

declare void @_ZNK3net12StreamSocket21GetSSLCertRequestInfoEPNS_18SSLCertRequestInfoE(%"class.net::StreamSocket"*, %"class.net::SSLCertRequestInfo"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net22UnixDomainClientSocket23ClearConnectionAttemptsEv(%"class.net::UnixDomainClientSocket"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3net22UnixDomainClientSocket21AddConnectionAttemptsERKNSt3__16vectorINS_17ConnectionAttemptENS1_9allocatorIS3_EEEE(%"class.net::UnixDomainClientSocket"*, %"class.std::__1::vector.37"* dereferenceable(24)) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3net12StreamSocket15DumpMemoryStatsEPNS0_17SocketMemoryStatsE(%"class.net::StreamSocket"*, %"struct.net::StreamSocket::SocketMemoryStats"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN3net6SocketC2Ev(%"class.net::Socket"*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #7

declare void @_ZN3net11SocketPosixC1Ev(%"class.net::SocketPosix"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #2

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
