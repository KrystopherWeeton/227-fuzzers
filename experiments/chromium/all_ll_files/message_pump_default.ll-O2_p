; ModuleID = '../../base/message_loop/message_pump_default.cc'
source_filename = "../../base/message_loop/message_pump_default.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.base::MessagePumpDefault" = type { %"class.base::MessagePump", i8, [7 x i8], %"class.base::WaitableEvent" }
%"class.base::MessagePump" = type { i32 (...)** }
%"class.base::WaitableEvent" = type <{ %class.scoped_refptr, i8, [7 x i8] }>
%class.scoped_refptr = type { %"struct.base::WaitableEvent::WaitableEventKernel"* }
%"struct.base::WaitableEvent::WaitableEventKernel" = type { %"class.base::RefCountedThreadSafe", %"class.base::Lock", i8, i8, %"class.std::__1::list" }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { i64 }
%"class.base::MessagePump::Delegate" = type { i32 (...)** }
%"class.base::TimeDelta" = type { i64 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }

@_ZTVN4base18MessagePumpDefaultE = hidden unnamed_addr constant { [9 x i8*] } { [9 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.base::MessagePumpDefault"*)* @_ZN4base18MessagePumpDefaultD2Ev to i8*), i8* bitcast (void (%"class.base::MessagePumpDefault"*)* @_ZN4base18MessagePumpDefaultD0Ev to i8*), i8* bitcast (void (%"class.base::MessagePumpDefault"*, %"class.base::MessagePump::Delegate"*)* @_ZN4base18MessagePumpDefault3RunEPNS_11MessagePump8DelegateE to i8*), i8* bitcast (void (%"class.base::MessagePumpDefault"*)* @_ZN4base18MessagePumpDefault4QuitEv to i8*), i8* bitcast (void (%"class.base::MessagePumpDefault"*)* @_ZN4base18MessagePumpDefault12ScheduleWorkEv to i8*), i8* bitcast (void (%"class.base::MessagePumpDefault"*, %"class.base::TimeTicks"*)* @_ZN4base18MessagePumpDefault19ScheduleDelayedWorkERKNS_9TimeTicksE to i8*), i8* bitcast (void (%"class.base::MessagePump"*, i32)* @_ZN4base11MessagePump13SetTimerSlackENS_10TimerSlackE to i8*)] }, align 8

@_ZN4base18MessagePumpDefaultC1Ev = hidden unnamed_addr alias void (%"class.base::MessagePumpDefault"*), void (%"class.base::MessagePumpDefault"*)* @_ZN4base18MessagePumpDefaultC2Ev
@_ZN4base18MessagePumpDefaultD1Ev = hidden unnamed_addr alias void (%"class.base::MessagePumpDefault"*), void (%"class.base::MessagePumpDefault"*)* @_ZN4base18MessagePumpDefaultD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18MessagePumpDefaultC2Ev(%"class.base::MessagePumpDefault"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 0
  tail call void @_ZN4base11MessagePumpC2Ev(%"class.base::MessagePump"* %2) #7
  %3 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4base18MessagePumpDefaultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 1
  store i8 1, i8* %4, align 8
  %5 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 3
  tail call void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"* %5, i32 1, i32 1) #7
  %6 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 3, i32 1
  store i8 0, i8* %6, align 8
  ret void
}

declare void @_ZN4base11MessagePumpC2Ev(%"class.base::MessagePump"*) unnamed_addr #1

declare void @_ZN4base13WaitableEventC1ENS0_11ResetPolicyENS0_12InitialStateE(%"class.base::WaitableEvent"*, i32, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18MessagePumpDefaultD2Ev(%"class.base::MessagePumpDefault"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4base18MessagePumpDefaultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 3
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %3) #7
  %4 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 0
  tail call void @_ZN4base11MessagePumpD2Ev(%"class.base::MessagePump"* %4) #7
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"*) unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN4base11MessagePumpD2Ev(%"class.base::MessagePump"*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18MessagePumpDefaultD0Ev(%"class.base::MessagePumpDefault"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN4base18MessagePumpDefaultE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 3
  tail call void @_ZN4base13WaitableEventD1Ev(%"class.base::WaitableEvent"* %3) #7
  %4 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 0
  tail call void @_ZN4base11MessagePumpD2Ev(%"class.base::MessagePump"* %4) #7
  %5 = bitcast %"class.base::MessagePumpDefault"* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18MessagePumpDefault3RunEPNS_11MessagePump8DelegateE(%"class.base::MessagePumpDefault"*, %"class.base::MessagePump::Delegate"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.base::TimeDelta", align 8
  %4 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 1
  %5 = load i8, i8* %4, align 1, !range !2
  store i8 1, i8* %4, align 1
  %6 = bitcast %"class.base::MessagePump::Delegate"* %1 to i1 (%"class.base::MessagePump::Delegate"*)***
  %7 = bitcast %"class.base::MessagePump::Delegate"* %1 to { i64, i64 } (%"class.base::MessagePump::Delegate"*)***
  %8 = load { i64, i64 } (%"class.base::MessagePump::Delegate"*)**, { i64, i64 } (%"class.base::MessagePump::Delegate"*)*** %7, align 8
  %9 = getelementptr inbounds { i64, i64 } (%"class.base::MessagePump::Delegate"*)*, { i64, i64 } (%"class.base::MessagePump::Delegate"*)** %8, i64 2
  %10 = load { i64, i64 } (%"class.base::MessagePump::Delegate"*)*, { i64, i64 } (%"class.base::MessagePump::Delegate"*)** %9, align 8
  %11 = call { i64, i64 } %10(%"class.base::MessagePump::Delegate"* %1) #7
  %12 = load i8, i8* %4, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %47, label %14

14:                                               ; preds = %2
  %15 = extractvalue { i64, i64 } %11, 1
  %16 = extractvalue { i64, i64 } %11, 0
  %17 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 3
  %18 = bitcast %"class.base::TimeDelta"* %3 to i8*
  %19 = getelementptr inbounds %"class.base::TimeDelta", %"class.base::TimeDelta"* %3, i64 0, i32 0
  br label %20

20:                                               ; preds = %14, %38
  %21 = phi i64 [ %15, %14 ], [ %44, %38 ]
  %22 = phi i64 [ %16, %14 ], [ %43, %38 ]
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %38, label %24

24:                                               ; preds = %20
  %25 = load i1 (%"class.base::MessagePump::Delegate"*)**, i1 (%"class.base::MessagePump::Delegate"*)*** %6, align 8
  %26 = getelementptr inbounds i1 (%"class.base::MessagePump::Delegate"*)*, i1 (%"class.base::MessagePump::Delegate"*)** %25, i64 3
  %27 = load i1 (%"class.base::MessagePump::Delegate"*)*, i1 (%"class.base::MessagePump::Delegate"*)** %26, align 8
  %28 = call zeroext i1 %27(%"class.base::MessagePump::Delegate"* %1) #7
  %29 = load i8, i8* %4, align 8, !range !2
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %47, label %31

31:                                               ; preds = %24
  br i1 %28, label %38, label %32

32:                                               ; preds = %31
  %33 = icmp eq i64 %22, 9223372036854775807
  br i1 %33, label %34, label %35

34:                                               ; preds = %32
  notail call void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"* %17) #7
  br label %38

35:                                               ; preds = %32
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #7
  %36 = sub nsw i64 %22, %21
  store i64 %36, i64* %19, align 8
  %37 = notail call zeroext i1 @_ZN4base13WaitableEvent9TimedWaitERKNS_9TimeDeltaE(%"class.base::WaitableEvent"* %17, %"class.base::TimeDelta"* nonnull dereferenceable(8) %3) #7
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #7
  br label %38

38:                                               ; preds = %31, %35, %34, %20
  %39 = load { i64, i64 } (%"class.base::MessagePump::Delegate"*)**, { i64, i64 } (%"class.base::MessagePump::Delegate"*)*** %7, align 8
  %40 = getelementptr inbounds { i64, i64 } (%"class.base::MessagePump::Delegate"*)*, { i64, i64 } (%"class.base::MessagePump::Delegate"*)** %39, i64 2
  %41 = load { i64, i64 } (%"class.base::MessagePump::Delegate"*)*, { i64, i64 } (%"class.base::MessagePump::Delegate"*)** %40, align 8
  %42 = call { i64, i64 } %41(%"class.base::MessagePump::Delegate"* %1) #7
  %43 = extractvalue { i64, i64 } %42, 0
  %44 = extractvalue { i64, i64 } %42, 1
  %45 = load i8, i8* %4, align 8, !range !2
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %47, label %20

47:                                               ; preds = %38, %24, %2
  %48 = icmp eq i8* %4, null
  br i1 %48, label %50, label %49

49:                                               ; preds = %47
  store i8 %5, i8* %4, align 1
  br label %50

50:                                               ; preds = %47, %49
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

declare void @_ZN4base13WaitableEvent4WaitEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

declare zeroext i1 @_ZN4base13WaitableEvent9TimedWaitERKNS_9TimeDeltaE(%"class.base::WaitableEvent"*, %"class.base::TimeDelta"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN4base18MessagePumpDefault4QuitEv(%"class.base::MessagePumpDefault"* nocapture) unnamed_addr #5 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 1
  store i8 0, i8* %2, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN4base18MessagePumpDefault12ScheduleWorkEv(%"class.base::MessagePumpDefault"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.base::MessagePumpDefault", %"class.base::MessagePumpDefault"* %0, i64 0, i32 3
  tail call void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"* %2) #7
  ret void
}

declare void @_ZN4base13WaitableEvent6SignalEv(%"class.base::WaitableEvent"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN4base18MessagePumpDefault19ScheduleDelayedWorkERKNS_9TimeTicksE(%"class.base::MessagePumpDefault"* nocapture, %"class.base::TimeTicks"* nocapture dereferenceable(8)) unnamed_addr #6 align 2 {
  ret void
}

declare void @_ZN4base11MessagePump13SetTimerSlackENS_10TimerSlackE(%"class.base::MessagePump"*, i32) unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
