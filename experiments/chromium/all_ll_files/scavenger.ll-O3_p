; ModuleID = '../../v8/src/heap/scavenger.cc'
source_filename = "../../v8/src/heap/scavenger.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"struct.std::__1::__function::__policy" = type { i8* (i8*)*, void (i8*)*, i8, %"class.std::type_info"* }
%"class.std::type_info" = type { i32 (...)**, i8* }
%"class.v8::internal::ScavengerCollector::JobTask" = type { %"class.v8::JobTask", %"class.v8::internal::ScavengerCollector"*, %"class.std::__1::vector.1172"*, %"class.std::__1::vector.1193", %"struct.std::__1::atomic.19", %"class.v8::internal::IndexGenerator", %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Scavenger::PromotionList"* }
%"class.v8::JobTask" = type { i32 (...)** }
%"class.std::__1::vector.1193" = type { %"class.std::__1::__vector_base.1194" }
%"class.std::__1::__vector_base.1194" = type { %"struct.std::__1::pair.1195"*, %"struct.std::__1::pair.1195"*, %"class.std::__1::__compressed_pair.1196" }
%"struct.std::__1::pair.1195" = type { %"class.v8::internal::ParallelWorkItem", %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::ParallelWorkItem" = type { i8 }
%"class.v8::internal::MemoryChunk" = type { %"class.v8::internal::BasicMemoryChunk", [2 x %"class.v8::internal::SlotSet"*], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.24", %"class.v8::internal::SlotSet"*, [2 x %"class.v8::internal::TypedSlotSet"*], [2 x %"class.std::__1::set"*], %"class.v8::base::Mutex"*, %"struct.std::__1::atomic.86", %"class.v8::base::Mutex"*, i64, [2 x %"struct.std::__1::atomic.19"], %"class.v8::internal::heap::ListNode", %"class.v8::internal::FreeListCategory"**, %"struct.std::__1::atomic.24", %"class.v8::internal::Bitmap"*, %"class.v8::internal::CodeObjectRegistry"*, %"class.v8::internal::PossiblyEmptyBuckets" }
%"class.v8::internal::BasicMemoryChunk" = type { i64, i64, %"class.v8::internal::Heap"*, i64, i64, i64, i64, %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.68", %"class.v8::internal::VirtualMemory" }
%"class.v8::internal::Heap" = type { %"class.std::__1::unordered_map", %"struct.std::__1::atomic.19", %"class.v8::internal::Heap::ExternalMemoryAccounting", %"class.v8::internal::Isolate"*, i64, i64, i64, i64, %"struct.std::__1::atomic.19", i64, i64, i64, i64, i64, i8, i64, i64, %"struct.std::__1::atomic.19", i64, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.29", %"class.std::__1::vector", i32, %"class.v8::internal::NewSpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::CodeSpace"*, %"class.v8::internal::MapSpace"*, %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::ReadOnlySpace"*, %"class.v8::internal::OldSpace"*, %"class.v8::internal::MapSpace"*, %"class.std::__1::unique_ptr.146", %"class.std::__1::unique_ptr.146", [8 x %"class.v8::internal::Space"*], %"class.v8::internal::LocalHeap"*, %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i8, i64, %"struct.std::__1::atomic.161", i32, i32, i32, i32, %"class.v8::internal::AllocationObserver"*, %"class.v8::internal::StressScavengeObserver"*, double, i32, i32, i32, i64, i32, [128 x i64], %"struct.std::__1::atomic.19", i64, i8, %"struct.std::__1::atomic.19", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.v8::internal::Object", %"class.std::__1::vector.165", %"class.std::__1::vector.165", i64 ()*, [113 x i32], i64, double, double, i64, i64, double, i32, i32, i32, i32, double, double, double, %"class.std::__1::unique_ptr.172", %"class.std::__1::unique_ptr.180", %"class.v8::internal::MinorMarkCompactCollector"*, %"class.std::__1::unique_ptr.311", %"class.std::__1::unique_ptr.317", %"class.std::__1::unique_ptr.330", %"class.std::__1::unique_ptr.369", %"class.std::__1::unique_ptr.408", %"class.std::__1::unique_ptr.438", %"class.std::__1::unique_ptr.444", %"class.std::__1::unique_ptr.454", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.460", %"class.std::__1::unique_ptr.466", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.472", %"class.std::__1::unique_ptr.478", %"class.std::__1::unique_ptr.484", %"class.std::__1::shared_ptr.490", %"class.v8::CppHeap"*, %"class.v8::EmbedderRootsHandler"*, %"class.v8::internal::StrongRootsEntry"*, %"class.v8::base::Mutex", i8, i64, i64, i64, i64, %"class.std::__1::unordered_map.513", %"class.std::__1::unique_ptr.539", [512 x i8], i8, i8, i64, i8, i32, i32, %"class.std::__1::unique_ptr.545", i8, %"class.v8::internal::Heap::ExternalStringTable", %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.558", i32, i8, i8, i8, i8, i8, %"class.v8::internal::HeapObject", %"class.v8::base::SharedMutex", %"class.v8::base::Mutex", %"class.std::__1::unordered_set.340", i8, [7 x i8], %"class.std::__1::unordered_map.564", %"class.std::__1::unordered_map.590", %"class.std::__1::unordered_map.564", %"class.std::__1::unordered_map.614", %"class.std::__1::vector.642", i8, %"class.std::__1::unique_ptr.649", i32, i32 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.2", %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.14", %"class.std::__1::__compressed_pair.16", [4 x i8] }>
%"class.std::__1::unique_ptr.2" = type { %"class.std::__1::__compressed_pair.3" }
%"class.std::__1::__compressed_pair.3" = type { %"struct.std::__1::__compressed_pair_elem.4", %"struct.std::__1::__compressed_pair_elem.5" }
%"struct.std::__1::__compressed_pair_elem.4" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.5" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.6" }
%"class.std::__1::__compressed_pair.6" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::__compressed_pair_elem.7" = type { i64 }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { float }
%"class.v8::internal::Heap::ExternalMemoryAccounting" = type { %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24", %"struct.std::__1::atomic.24" }
%"class.v8::internal::Isolate" = type { %"class.v8::internal::IsolateData", %"class.std::__1::unique_ptr", %"class.v8::internal::Heap", %"class.v8::internal::ReadOnlyHeap"*, %"class.std::__1::shared_ptr.655", %"class.std::__1::unique_ptr.676", i32, %"class.v8::internal::Isolate::EntryStackItem"*, i32, %"class.v8::internal::StringStream"*, [13 x i64], %"class.v8::internal::Bootstrapper"*, %"class.v8::internal::RuntimeProfiler"*, %"class.v8::internal::CompilationCache"*, %"class.std::__1::shared_ptr.686", %"class.v8::base::RecursiveMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::base::SharedMutex", %"class.v8::internal::Logger"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::StubCache"*, %"class.v8::internal::Deoptimizer"*, i8, %"class.v8::internal::MaterializedObjectStore"*, i8, i32, i32, %"class.v8::internal::DescriptorLookupCache"*, %"struct.v8::internal::HandleScopeData", %"class.v8::internal::HandleScopeImplementer"*, %"class.v8::internal::UnicodeCache"*, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::InnerPointerToCodeCache"*, %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::EternalHandles"*, %"class.v8::internal::ThreadManager"*, %"class.v8::bigint::Processor"*, %"class.v8::internal::RuntimeState", %"class.v8::internal::Builtins", %"class.v8::internal::SetupIsolateDelegate"*, %"class.v8::internal::RegExpStack"*, %"class.std::__1::vector.834", %"class.v8::internal::DateCache"*, %"class.v8::base::RandomNumberGenerator"*, %"class.v8::base::RandomNumberGenerator"*, %"struct.std::__1::atomic.847", void (i32, %"class.v8::SharedArrayBuffer"*, i64, i64, double, %"class.v8::Isolate::AtomicsWaitWakeHandle"*, i8*)*, i8*, void (i32, %"class.v8::Promise"*, %"class.v8::Value"*)*, {}*, {}*, %"struct.std::__1::atomic.857", void (%"class.v8::Context"*, %"class.v8::Module"*, %"class.v8::Object"*)*, %"class.v8::base::Mutex", double, %"class.std::__1::basic_string", %"class.std::__1::unordered_map.869", %"struct.std::__1::atomic.152", i8, i8, i8, i8, i8, i8, double, %"class.v8::internal::Debug"*, %"class.v8::internal::HeapProfiler"*, %"class.std::__1::unique_ptr.944", %"class.v8::internal::AstStringConstants"*, %"class.v8::internal::interpreter::Interpreter"*, %"class.v8::internal::compiler::PerIsolateCompilerCache"*, %"class.v8::internal::Zone"*, %"class.v8::internal::CompilerDispatcher"*, %"class.std::__1::queue", void (i8*, i8*)*, void (i8*, i1)*, void (i8*, i32)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*)*, { i8, %"class.v8::String"* } (%"class.v8::Context"*, %"class.v8::Value"*, i1)*, i1 (%"class.v8::Context"*, %"class.v8::String"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::FunctionCallbackInfo"*)*, i1 (%"class.v8::Context"*)*, void (%"class.v8::FunctionCallbackInfo"*)*, %"class.v8::String"* (%"class.v8::Isolate"*, i8*)*, i1 (%"class.v8::Context"*)*, i1 (%"class.v8::Context"*)*, %"class.v8::internal::Relocatable"*, %"class.std::__1::vector.987"*, %"class.v8::internal::Object", i64*, %"class.v8::internal::AddressToIndexHashMap"*, %"class.v8::internal::HeapObjectToIndexHashMap"*, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::CompilationStatistics"*, %"class.v8::internal::CodeTracer"*, i32, void (%"class.v8::PromiseRejectMessage"*)*, %"class.v8::StartupData"*, i32, i32, i32, i64, i8, i8, i32, i8, i32, %"class.v8_inspector::V8Inspector"*, i8, i8, i8, i32, i32, %"class.v8::internal::compiler::NodeObserver"*, i8, [128 x i32], [256 x i32], [251 x i32], [251 x i32], %"class.v8::internal::OptimizingCompileDispatcher"*, %"class.std::__1::unique_ptr.999", i32, i8, i8, i32, i32, %"class.std::__1::vector.1005", %"class.std::__1::vector.1005", void (%"class.v8::Isolate"*, i32)*, %"class.std::__1::shared_ptr.1012", i64, %"class.std::__1::unordered_map.1013", i64, %"struct.v8::metrics::LongTaskStats", %"class.std::__1::vector.551", %"class.v8::internal::BuiltinsConstantsTableBuilder"*, i8*, i32, i8*, i32, %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::shared_ptr.160", %"class.v8::internal::FutexWaitListNode", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::debug::ConsoleDelegate"*, %"class.v8::debug::AsyncEventDelegate"*, i32, i32, %"class.std::__1::unique_ptr.1065", i1 (%"class.v8::Isolate"*)*, i8, %"class.v8::base::Mutex", %"struct.v8::internal::ManagedPtrDestructor"*, i64, i64, %"class.v8::internal::wasm::WasmEngine"*, %"class.std::__1::unique_ptr.1103", %"class.v8::internal::EmbeddedFileWriterInterface"*, %"class.v8::Context::BackupIncumbentScope"*, %"class.v8::Value"* (%"class.v8::Context"*, %"class.v8::Value"*, %"class.v8::Array"*)*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate::ThreadDataTable", i8, %"class.v8::internal::Isolate"*, %"class.v8::base::Mutex", %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"*, %"struct.std::__1::atomic.1137", %"class.std::__1::vector.1141", %"class.std::__1::vector.1141", void (i32, %"class.std::__1::basic_string"*)* }
%"class.v8::internal::IsolateData" = type { [4 x i8*], i64, i64, i64, i64, i64, %"class.v8::internal::StackGuard", %"class.v8::internal::RootsTable", %"class.v8::internal::ExternalReferenceTable", %"class.v8::internal::ThreadLocalTop", [1711 x i64], [1711 x i64], i8, [15 x i8] }
%"class.v8::internal::StackGuard" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::StackGuard::ThreadLocal" }
%"class.v8::internal::StackGuard::ThreadLocal" = type { i64, i64, i64, i64, %"class.v8::internal::InterruptsScope"*, i64 }
%"class.v8::internal::InterruptsScope" = type { i32 (...)**, %"class.v8::internal::StackGuard"*, i64, i64, i32, %"class.v8::internal::InterruptsScope"* }
%"class.v8::internal::RootsTable" = type { [669 x i64] }
%"class.v8::internal::ExternalReferenceTable" = type { [1042 x i64], i32, i32 }
%"class.v8::internal::ThreadLocalTop" = type { %"class.v8::TryCatch"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Context", %"struct.std::__1::atomic", %"class.v8::internal::Object", %"class.v8::internal::Context", i64, i64, i64, i64, i64, %"class.v8::internal::Object", i8, i8, %"class.v8::internal::Object", i64, i64, i64, %"class.v8::internal::PromiseOnStack"*, %"class.v8::internal::Simulator"*, i64, %"class.v8::internal::ExternalCallbackScope"*, i32, void (%"class.v8::Object"*, i32, %"class.v8::Value"*)*, i64 }
%"class.v8::TryCatch" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::TryCatch"*, i8*, i8*, i8*, i8, [7 x i8] }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { %"class.v8::internal::ThreadId" }
%"class.v8::internal::ThreadId" = type { i32 }
%"class.v8::internal::Context" = type { %"class.v8::internal::TorqueGeneratedContext" }
%"class.v8::internal::TorqueGeneratedContext" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::PromiseOnStack" = type { %"class.v8::internal::Handle", %"class.v8::internal::PromiseOnStack"* }
%"class.v8::internal::Handle" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HandleBase" = type { i64* }
%"class.v8::internal::Simulator" = type opaque
%"class.v8::internal::ExternalCallbackScope" = type opaque
%"class.v8::Object" = type { i8 }
%"class.v8::Value" = type { i8 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.v8::internal::IsolateAllocator"* }
%"class.v8::internal::IsolateAllocator" = type { i8*, %"class.v8::PageAllocator"* }
%"class.v8::PageAllocator" = type { i32 (...)** }
%"class.v8::internal::ReadOnlyHeap" = type { i32 (...)**, i8, %"class.v8::internal::ReadOnlySpace"*, %"class.std::__1::vector.551" }
%"class.std::__1::shared_ptr.655" = type { %"class.v8::internal::ReadOnlyArtifacts"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::ReadOnlyArtifacts" = type { i32 (...)**, %"class.std::__1::vector.139", %"class.v8::internal::AllocationStats", %"class.std::__1::unique_ptr.656", %"class.std::__1::unique_ptr.670" }
%"class.std::__1::vector.139" = type { %"class.std::__1::__vector_base.140" }
%"class.std::__1::__vector_base.140" = type { %"class.v8::internal::ReadOnlyPage"**, %"class.v8::internal::ReadOnlyPage"**, %"class.std::__1::__compressed_pair.141" }
%"class.v8::internal::ReadOnlyPage" = type { %"class.v8::internal::BasicMemoryChunk" }
%"class.std::__1::__compressed_pair.141" = type { %"struct.std::__1::__compressed_pair_elem.142" }
%"struct.std::__1::__compressed_pair_elem.142" = type { %"class.v8::internal::ReadOnlyPage"** }
%"class.v8::internal::AllocationStats" = type { %"struct.std::__1::atomic.19", i64, %"struct.std::__1::atomic.19" }
%"class.std::__1::unique_ptr.656" = type { %"class.std::__1::__compressed_pair.657" }
%"class.std::__1::__compressed_pair.657" = type { %"struct.std::__1::__compressed_pair_elem.658" }
%"struct.std::__1::__compressed_pair_elem.658" = type { %"class.v8::internal::SharedReadOnlySpace"* }
%"class.v8::internal::SharedReadOnlySpace" = type { %"class.v8::internal::ReadOnlySpace", %"class.std::__1::vector.659" }
%"class.v8::internal::ReadOnlySpace" = type { %"class.v8::internal::BaseSpace", i8, %"class.v8::internal::AllocationStats", %"class.std::__1::vector.139", i64, i64, i8, i64, i64 }
%"class.v8::internal::BaseSpace" = type { i32 (...)**, %"class.v8::internal::Heap"*, i32, %"struct.std::__1::atomic.19", i64 }
%"class.std::__1::vector.659" = type { %"class.std::__1::__vector_base.660" }
%"class.std::__1::__vector_base.660" = type { %"class.std::__1::unique_ptr.661"*, %"class.std::__1::unique_ptr.661"*, %"class.std::__1::__compressed_pair.662" }
%"class.std::__1::unique_ptr.661" = type { %"class.std::__1::__compressed_pair.1289" }
%"class.std::__1::__compressed_pair.1289" = type { %"struct.std::__1::__compressed_pair_elem.1290" }
%"struct.std::__1::__compressed_pair_elem.1290" = type { %"class.v8::PageAllocator::SharedMemoryMapping"* }
%"class.v8::PageAllocator::SharedMemoryMapping" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.662" = type { %"struct.std::__1::__compressed_pair_elem.663" }
%"struct.std::__1::__compressed_pair_elem.663" = type { %"class.std::__1::unique_ptr.661"* }
%"class.std::__1::unique_ptr.670" = type { %"class.std::__1::__compressed_pair.671" }
%"class.std::__1::__compressed_pair.671" = type { %"struct.std::__1::__compressed_pair_elem.672" }
%"struct.std::__1::__compressed_pair_elem.672" = type { %"class.v8::internal::ReadOnlyHeap"* }
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.std::__1::unique_ptr.676" = type { %"class.std::__1::__compressed_pair.677" }
%"class.std::__1::__compressed_pair.677" = type { %"struct.std::__1::__compressed_pair_elem.678" }
%"struct.std::__1::__compressed_pair_elem.678" = type { %"class.v8::internal::StringTable"* }
%"class.v8::internal::StringTable" = type { %"struct.std::__1::atomic.679", %"class.v8::base::Mutex" }
%"struct.std::__1::atomic.679" = type { %"struct.std::__1::__atomic_base.680" }
%"struct.std::__1::__atomic_base.680" = type { %"struct.std::__1::__cxx_atomic_impl.681" }
%"struct.std::__1::__cxx_atomic_impl.681" = type { %"struct.std::__1::__cxx_atomic_base_impl.682" }
%"struct.std::__1::__cxx_atomic_base_impl.682" = type { %"class.v8::internal::StringTable::Data"* }
%"class.v8::internal::StringTable::Data" = type opaque
%"class.v8::internal::Isolate::EntryStackItem" = type { i32, %"class.v8::internal::Isolate::PerIsolateThreadData"*, %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate::EntryStackItem"* }
%"class.v8::internal::Isolate::PerIsolateThreadData" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::ThreadId", i64, %"class.v8::internal::ThreadState"* }
%"class.v8::internal::ThreadState" = type opaque
%"class.v8::internal::StringStream" = type opaque
%"class.v8::internal::Bootstrapper" = type { %"class.v8::internal::Isolate"*, i32, %"class.v8::internal::SourceCodeCache" }
%"class.v8::internal::SourceCodeCache" = type { i32, %"class.v8::internal::FixedArray" }
%"class.v8::internal::FixedArray" = type { %"class.v8::internal::TorqueGeneratedFixedArray" }
%"class.v8::internal::TorqueGeneratedFixedArray" = type { %"class.v8::internal::FixedArrayBase" }
%"class.v8::internal::FixedArrayBase" = type { %"class.v8::internal::TorqueGeneratedFixedArrayBase" }
%"class.v8::internal::TorqueGeneratedFixedArrayBase" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RuntimeProfiler" = type opaque
%"class.v8::internal::CompilationCache" = type opaque
%"class.std::__1::shared_ptr.686" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::Counters" = type { %"class.std::__1::enable_shared_from_this", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::HistogramTimer", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::TimedHistogram", %"class.v8::internal::AggregatableHistogramTimer", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::Histogram", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounterThreadSafe", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::StatsCounter", %"class.v8::internal::RuntimeCallStats", %"class.v8::internal::WorkerThreadRuntimeCallStats", %"class.v8::internal::Isolate"*, %"class.v8::internal::StatsTable" }
%"class.std::__1::enable_shared_from_this" = type { %"class.std::__1::weak_ptr" }
%"class.std::__1::weak_ptr" = type { %"class.v8::internal::Counters"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::HistogramTimer" = type { %"class.v8::internal::TimedHistogram.base", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::TimedHistogram.base" = type <{ %"class.v8::internal::Histogram", i32 }>
%"class.v8::base::ElapsedTimer" = type { %"class.v8::base::TimeTicks" }
%"class.v8::base::TimeTicks" = type { %"class.v8::base::time_internal::TimeBase" }
%"class.v8::base::time_internal::TimeBase" = type { i64 }
%"class.v8::internal::TimedHistogram" = type <{ %"class.v8::internal::Histogram", i32, [4 x i8] }>
%"class.v8::internal::AggregatableHistogramTimer" = type { %"class.v8::internal::Histogram", %"class.v8::base::TimeDelta" }
%"class.v8::base::TimeDelta" = type { i64 }
%"class.v8::internal::Histogram" = type { i8*, i32, i32, i32, i8*, %"class.v8::internal::Counters"* }
%"class.v8::internal::StatsCounterThreadSafe" = type { %"class.v8::internal::StatsCounterBase", %"class.v8::base::Mutex" }
%"class.v8::internal::StatsCounterBase" = type { %"class.v8::internal::Counters"*, i8*, i32* }
%"class.v8::internal::StatsCounter" = type <{ %"class.v8::internal::StatsCounterBase", i8, [7 x i8] }>
%"class.v8::internal::RuntimeCallStats" = type { %"class.v8::base::AtomicValue", %"class.v8::base::AtomicValue.687", i8, i32, %"class.v8::internal::ThreadId", [1370 x %"class.v8::internal::RuntimeCallCounter"] }
%"class.v8::base::AtomicValue" = type { i64 }
%"class.v8::base::AtomicValue.687" = type { i64 }
%"class.v8::internal::RuntimeCallCounter" = type { i8*, i64, i64 }
%"class.v8::internal::WorkerThreadRuntimeCallStats" = type <{ %"class.v8::base::Mutex", %"class.std::__1::vector.688", %"class.v8::base::Optional.696", %"class.v8::internal::ThreadId", [4 x i8] }>
%"class.std::__1::vector.688" = type { %"class.std::__1::__vector_base.689" }
%"class.std::__1::__vector_base.689" = type { %"class.std::__1::unique_ptr.690"*, %"class.std::__1::unique_ptr.690"*, %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::unique_ptr.690" = type opaque
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.std::__1::unique_ptr.690"* }
%"class.v8::base::Optional.696" = type { %"class.v8::base::internal::OptionalBase.697" }
%"class.v8::base::internal::OptionalBase.697" = type { %"struct.v8::base::internal::OptionalStorage.698" }
%"struct.v8::base::internal::OptionalStorage.698" = type { %"struct.v8::base::internal::OptionalStorageBase.699" }
%"struct.v8::base::internal::OptionalStorageBase.699" = type { i8, %union.anon.700 }
%union.anon.700 = type { i32 }
%"class.v8::internal::StatsTable" = type { i32* (i8*)*, i8* (i8*, i32, i32, i64)*, void (i8*, i32)* }
%"class.v8::base::RecursiveMutex" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"class.v8::internal::Logger" = type { %"class.v8::internal::CodeEventListener", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.705", %"class.std::__1::unique_ptr.711", %"struct.std::__1::atomic.152", %"class.std::__1::unique_ptr.717", %"class.std::__1::unique_ptr.723", %"class.std::__1::unique_ptr.729", %"class.std::__1::unique_ptr.735", %"class.std::__1::unique_ptr.741", %"class.std::__1::set.747", i32, i8, %"class.v8::internal::ExistingCodeLogger", %"class.v8::base::ElapsedTimer" }
%"class.v8::internal::CodeEventListener" = type { i32 (...)** }
%"class.std::__1::unique_ptr.705" = type { %"class.std::__1::__compressed_pair.706" }
%"class.std::__1::__compressed_pair.706" = type { %"struct.std::__1::__compressed_pair_elem.707" }
%"struct.std::__1::__compressed_pair_elem.707" = type { %"class.v8::internal::Ticker"* }
%"class.v8::internal::Ticker" = type opaque
%"class.std::__1::unique_ptr.711" = type { %"class.std::__1::__compressed_pair.712" }
%"class.std::__1::__compressed_pair.712" = type { %"struct.std::__1::__compressed_pair_elem.713" }
%"struct.std::__1::__compressed_pair_elem.713" = type { %"class.v8::internal::Profiler"* }
%"class.v8::internal::Profiler" = type opaque
%"class.std::__1::unique_ptr.717" = type { %"class.std::__1::__compressed_pair.718" }
%"class.std::__1::__compressed_pair.718" = type { %"struct.std::__1::__compressed_pair_elem.719" }
%"struct.std::__1::__compressed_pair_elem.719" = type { %"class.v8::internal::Log"* }
%"class.v8::internal::Log" = type opaque
%"class.std::__1::unique_ptr.723" = type { %"class.std::__1::__compressed_pair.724" }
%"class.std::__1::__compressed_pair.724" = type { %"struct.std::__1::__compressed_pair_elem.725" }
%"struct.std::__1::__compressed_pair_elem.725" = type { %"class.v8::internal::PerfBasicLogger"* }
%"class.v8::internal::PerfBasicLogger" = type opaque
%"class.std::__1::unique_ptr.729" = type { %"class.std::__1::__compressed_pair.730" }
%"class.std::__1::__compressed_pair.730" = type { %"struct.std::__1::__compressed_pair_elem.731" }
%"struct.std::__1::__compressed_pair_elem.731" = type { %"class.v8::internal::PerfJitLogger"* }
%"class.v8::internal::PerfJitLogger" = type opaque
%"class.std::__1::unique_ptr.735" = type { %"class.std::__1::__compressed_pair.736" }
%"class.std::__1::__compressed_pair.736" = type { %"struct.std::__1::__compressed_pair_elem.737" }
%"struct.std::__1::__compressed_pair_elem.737" = type { %"class.v8::internal::LowLevelLogger"* }
%"class.v8::internal::LowLevelLogger" = type opaque
%"class.std::__1::unique_ptr.741" = type { %"class.std::__1::__compressed_pair.742" }
%"class.std::__1::__compressed_pair.742" = type { %"struct.std::__1::__compressed_pair_elem.743" }
%"struct.std::__1::__compressed_pair_elem.743" = type { %"class.v8::internal::JitLogger"* }
%"class.v8::internal::JitLogger" = type opaque
%"class.std::__1::set.747" = type { %"class.std::__1::__tree.748" }
%"class.std::__1::__tree.748" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.749", %"class.std::__1::__compressed_pair.753" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.749" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"struct.std::__1::__compressed_pair_elem.80" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.753" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ExistingCodeLogger" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::CodeEventListener"* }
%"class.v8::internal::StubCache" = type { [2048 x %"struct.v8::internal::StubCache::Entry"], [512 x %"struct.v8::internal::StubCache::Entry"], %"class.v8::internal::Isolate"* }
%"struct.v8::internal::StubCache::Entry" = type { %"class.v8::internal::StrongTaggedValue", %"class.v8::internal::TaggedValue", %"class.v8::internal::StrongTaggedValue" }
%"class.v8::internal::TaggedValue" = type { %"class.v8::internal::TaggedImpl.756" }
%"class.v8::internal::TaggedImpl.756" = type { i32 }
%"class.v8::internal::StrongTaggedValue" = type { %"class.v8::internal::TaggedImpl.755" }
%"class.v8::internal::TaggedImpl.755" = type { i32 }
%"class.v8::internal::Deoptimizer" = type opaque
%"class.v8::internal::MaterializedObjectStore" = type opaque
%"class.v8::internal::DescriptorLookupCache" = type { [64 x %"struct.v8::internal::DescriptorLookupCache::Key"], [64 x i32] }
%"struct.v8::internal::DescriptorLookupCache::Key" = type { %"class.v8::internal::Map", %"class.v8::internal::Name" }
%"class.v8::internal::Map" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Name" = type { %"class.v8::internal::TorqueGeneratedName" }
%"class.v8::internal::TorqueGeneratedName" = type { %"class.v8::internal::PrimitiveHeapObject" }
%"class.v8::internal::PrimitiveHeapObject" = type { %"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" }
%"class.v8::internal::TorqueGeneratedPrimitiveHeapObject" = type { %"class.v8::internal::HeapObject" }
%"struct.v8::internal::HandleScopeData" = type { i64*, i64*, i32, i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::CanonicalHandleScope" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::OptimizedCompilationInfo"*, %"class.v8::internal::Zone"*, %"class.v8::internal::RootIndexMap"*, %"class.std::__1::unique_ptr.763", i32, %"class.v8::internal::CanonicalHandleScope"* }
%"class.v8::internal::OptimizedCompilationInfo" = type opaque
%"class.v8::internal::RootIndexMap" = type opaque
%"class.std::__1::unique_ptr.763" = type { %"class.std::__1::__compressed_pair.764" }
%"class.std::__1::__compressed_pair.764" = type { %"struct.std::__1::__compressed_pair_elem.765" }
%"struct.std::__1::__compressed_pair_elem.765" = type { %"class.v8::internal::IdentityMap"* }
%"class.v8::internal::IdentityMap" = type opaque
%"class.v8::internal::HandleScopeImplementer" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::DetachableVector", %"class.v8::internal::DetachableVector.769", %"class.v8::internal::DetachableVector.770", %"class.v8::internal::DetachableVector.769", i64*, i64*, %"struct.v8::internal::HandleScopeData" }
%"class.v8::internal::DetachableVector" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVectorBase" = type { i8*, i64, i64 }
%"class.v8::internal::DetachableVector.770" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::DetachableVector.769" = type { %"class.v8::internal::DetachableVectorBase" }
%"class.v8::internal::UnicodeCache" = type opaque
%"class.v8::internal::AccountingAllocator" = type { i32 (...)**, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.std::__1::unique_ptr.757", %"class.std::__1::unique_ptr.491" }
%"class.std::__1::unique_ptr.757" = type { %"class.std::__1::__compressed_pair.758" }
%"class.std::__1::__compressed_pair.758" = type { %"struct.std::__1::__compressed_pair_elem.759" }
%"struct.std::__1::__compressed_pair_elem.759" = type { %"class.v8::internal::VirtualMemory"* }
%"class.std::__1::unique_ptr.491" = type { %"class.std::__1::__compressed_pair.492" }
%"class.std::__1::__compressed_pair.492" = type { %"struct.std::__1::__compressed_pair_elem.493" }
%"struct.std::__1::__compressed_pair_elem.493" = type { %"class.v8::base::BoundedPageAllocator"* }
%"class.v8::base::BoundedPageAllocator" = type { %"class.v8::PageAllocator", %"class.v8::base::Mutex", i64, i64, %"class.v8::PageAllocator"*, %"class.v8::base::RegionAllocator" }
%"class.v8::base::RegionAllocator" = type { %"class.v8::base::RegionAllocator::Region", i64, i64, i64, i64, %"class.std::__1::set.494", %"class.std::__1::set.502" }
%"class.v8::base::RegionAllocator::Region" = type <{ %"class.v8::base::AddressRegion", i32, [4 x i8] }>
%"class.v8::base::AddressRegion" = type { i64, i64 }
%"class.std::__1::set.494" = type { %"class.std::__1::__tree.495" }
%"class.std::__1::__tree.495" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.500" }
%"class.std::__1::__compressed_pair.496" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.500" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::set.502" = type { %"class.std::__1::__tree.503" }
%"class.std::__1::__tree.503" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.496", %"class.std::__1::__compressed_pair.504" }
%"class.std::__1::__compressed_pair.504" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::InnerPointerToCodeCache" = type opaque
%"class.v8::internal::GlobalHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.771", %"class.std::__1::vector.777", %"class.std::__1::unique_ptr.784", %"class.std::__1::vector.791", %"class.std::__1::unique_ptr.798", i64, %"class.std::__1::vector.804", %"class.std::__1::vector.812", %"class.std::__1::vector.820", i8, i8, i32 }
%"class.std::__1::unique_ptr.771" = type { %"class.std::__1::__compressed_pair.772" }
%"class.std::__1::__compressed_pair.772" = type { %"struct.std::__1::__compressed_pair_elem.773" }
%"struct.std::__1::__compressed_pair_elem.773" = type { %"class.v8::internal::GlobalHandles::NodeSpace"* }
%"class.v8::internal::GlobalHandles::NodeSpace" = type opaque
%"class.std::__1::vector.777" = type { %"class.std::__1::__vector_base.778" }
%"class.std::__1::__vector_base.778" = type { %"class.v8::internal::GlobalHandles::Node"**, %"class.v8::internal::GlobalHandles::Node"**, %"class.std::__1::__compressed_pair.779" }
%"class.v8::internal::GlobalHandles::Node" = type opaque
%"class.std::__1::__compressed_pair.779" = type { %"struct.std::__1::__compressed_pair_elem.780" }
%"struct.std::__1::__compressed_pair_elem.780" = type { %"class.v8::internal::GlobalHandles::Node"** }
%"class.std::__1::unique_ptr.784" = type { %"class.std::__1::__compressed_pair.785" }
%"class.std::__1::__compressed_pair.785" = type { %"struct.std::__1::__compressed_pair_elem.786" }
%"struct.std::__1::__compressed_pair_elem.786" = type { %"class.v8::internal::GlobalHandles::NodeSpace.787"* }
%"class.v8::internal::GlobalHandles::NodeSpace.787" = type opaque
%"class.std::__1::vector.791" = type { %"class.std::__1::__vector_base.792" }
%"class.std::__1::__vector_base.792" = type { %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.v8::internal::GlobalHandles::TracedNode"**, %"class.std::__1::__compressed_pair.793" }
%"class.v8::internal::GlobalHandles::TracedNode" = type opaque
%"class.std::__1::__compressed_pair.793" = type { %"struct.std::__1::__compressed_pair_elem.794" }
%"struct.std::__1::__compressed_pair_elem.794" = type { %"class.v8::internal::GlobalHandles::TracedNode"** }
%"class.std::__1::unique_ptr.798" = type { %"class.std::__1::__compressed_pair.799" }
%"class.std::__1::__compressed_pair.799" = type { %"struct.std::__1::__compressed_pair_elem.800" }
%"struct.std::__1::__compressed_pair_elem.800" = type { %"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace"* }
%"class.v8::internal::GlobalHandles::OnStackTracedNodeSpace" = type opaque
%"class.std::__1::vector.804" = type { %"class.std::__1::__vector_base.805" }
%"class.std::__1::__vector_base.805" = type { %"struct.std::__1::pair.806"*, %"struct.std::__1::pair.806"*, %"class.std::__1::__compressed_pair.807" }
%"struct.std::__1::pair.806" = type opaque
%"class.std::__1::__compressed_pair.807" = type { %"struct.std::__1::__compressed_pair_elem.808" }
%"struct.std::__1::__compressed_pair_elem.808" = type { %"struct.std::__1::pair.806"* }
%"class.std::__1::vector.812" = type { %"class.std::__1::__vector_base.813" }
%"class.std::__1::__vector_base.813" = type { %"struct.std::__1::pair.814"*, %"struct.std::__1::pair.814"*, %"class.std::__1::__compressed_pair.815" }
%"struct.std::__1::pair.814" = type opaque
%"class.std::__1::__compressed_pair.815" = type { %"struct.std::__1::__compressed_pair_elem.816" }
%"struct.std::__1::__compressed_pair_elem.816" = type { %"struct.std::__1::pair.814"* }
%"class.std::__1::vector.820" = type { %"class.std::__1::__vector_base.821" }
%"class.std::__1::__vector_base.821" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.v8::internal::GlobalHandles::PendingPhantomCallback"*, %"class.std::__1::__compressed_pair.822" }
%"class.v8::internal::GlobalHandles::PendingPhantomCallback" = type { void (%"class.v8::WeakCallbackInfo"*)*, i8*, [2 x i8*] }
%"class.v8::WeakCallbackInfo" = type { %"class.v8::Isolate"*, i8*, {}**, [2 x i8*] }
%"class.v8::Isolate" = type { i8 }
%"class.std::__1::__compressed_pair.822" = type { %"struct.std::__1::__compressed_pair_elem.823" }
%"struct.std::__1::__compressed_pair_elem.823" = type { %"class.v8::internal::GlobalHandles::PendingPhantomCallback"* }
%"class.v8::internal::EternalHandles" = type { i32, %"class.std::__1::vector.827", %"class.std::__1::vector.834" }
%"class.std::__1::vector.827" = type { %"class.std::__1::__vector_base.828" }
%"class.std::__1::__vector_base.828" = type { i64**, i64**, %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.829" = type { %"struct.std::__1::__compressed_pair_elem.830" }
%"struct.std::__1::__compressed_pair_elem.830" = type { i64** }
%"class.v8::internal::ThreadManager" = type opaque
%"class.v8::bigint::Processor" = type opaque
%"class.v8::internal::RuntimeState" = type { %"class.std::__1::unique_ptr.841" }
%"class.std::__1::unique_ptr.841" = type { %"class.std::__1::__compressed_pair.842" }
%"class.std::__1::__compressed_pair.842" = type { %"struct.std::__1::__compressed_pair_elem.843" }
%"struct.std::__1::__compressed_pair_elem.843" = type { %"struct.v8::internal::Runtime::Function"* }
%"struct.v8::internal::Runtime::Function" = type { i32, i32, i8*, i64, i8, i8 }
%"class.v8::internal::Builtins" = type { %"class.v8::internal::Isolate"*, i8, i32 }
%"class.v8::internal::SetupIsolateDelegate" = type opaque
%"class.v8::internal::RegExpStack" = type opaque
%"class.std::__1::vector.834" = type { %"class.std::__1::__vector_base.835" }
%"class.std::__1::__vector_base.835" = type { i32*, i32*, %"class.std::__1::__compressed_pair.836" }
%"class.std::__1::__compressed_pair.836" = type { %"struct.std::__1::__compressed_pair_elem.837" }
%"struct.std::__1::__compressed_pair_elem.837" = type { i32* }
%"class.v8::internal::DateCache" = type opaque
%"class.v8::base::RandomNumberGenerator" = type { i64, i64, i64 }
%"struct.std::__1::atomic.847" = type { %"struct.std::__1::__atomic_base.848" }
%"struct.std::__1::__atomic_base.848" = type { %"struct.std::__1::__cxx_atomic_impl.849" }
%"struct.std::__1::__cxx_atomic_impl.849" = type { %"struct.std::__1::__cxx_atomic_base_impl.850" }
%"struct.std::__1::__cxx_atomic_base_impl.850" = type { i32 }
%"class.v8::SharedArrayBuffer" = type { i8 }
%"class.v8::Isolate::AtomicsWaitWakeHandle" = type { i8 }
%"class.v8::Promise" = type { i8 }
%"struct.std::__1::atomic.857" = type { %"struct.std::__1::__atomic_base.858" }
%"struct.std::__1::__atomic_base.858" = type { %"struct.std::__1::__cxx_atomic_impl.859" }
%"struct.std::__1::__cxx_atomic_impl.859" = type { %"struct.std::__1::__cxx_atomic_base_impl.860" }
%"struct.std::__1::__cxx_atomic_base_impl.860" = type { i32 }
%"class.v8::Context" = type { i8 }
%"class.v8::Module" = type { i8 }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.862" }
%"class.std::__1::__compressed_pair.862" = type { %"struct.std::__1::__compressed_pair_elem.863" }
%"struct.std::__1::__compressed_pair_elem.863" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.864 }
%union.anon.864 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map.869" = type { %"class.std::__1::__hash_table.870" }
%"class.std::__1::__hash_table.870" = type <{ %"class.std::__1::unique_ptr.871", %"class.std::__1::__compressed_pair.881", %"class.std::__1::__compressed_pair.886", %"class.std::__1::__compressed_pair.889", [4 x i8] }>
%"class.std::__1::unique_ptr.871" = type { %"class.std::__1::__compressed_pair.872" }
%"class.std::__1::__compressed_pair.872" = type { %"struct.std::__1::__compressed_pair_elem.873", %"struct.std::__1::__compressed_pair_elem.875" }
%"struct.std::__1::__compressed_pair_elem.873" = type { %"struct.std::__1::__hash_node_base.874"** }
%"struct.std::__1::__hash_node_base.874" = type { %"struct.std::__1::__hash_node_base.874"* }
%"struct.std::__1::__compressed_pair_elem.875" = type { %"class.std::__1::__bucket_list_deallocator.876" }
%"class.std::__1::__bucket_list_deallocator.876" = type { %"class.std::__1::__compressed_pair.877" }
%"class.std::__1::__compressed_pair.877" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.881" = type { %"struct.std::__1::__compressed_pair_elem.882" }
%"struct.std::__1::__compressed_pair_elem.882" = type { %"struct.std::__1::__hash_node_base.874" }
%"class.std::__1::__compressed_pair.886" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.889" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.152" = type { %"struct.std::__1::__atomic_base.153" }
%"struct.std::__1::__atomic_base.153" = type { %"struct.std::__1::__cxx_atomic_impl.154" }
%"struct.std::__1::__cxx_atomic_impl.154" = type { %"struct.std::__1::__cxx_atomic_base_impl.155" }
%"struct.std::__1::__cxx_atomic_base_impl.155" = type { i8 }
%"class.v8::internal::Debug" = type { %"class.v8::debug::DebugDelegate"*, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.v8::internal::DebugInfoListNode"*, %"class.std::__1::unique_ptr.895", %"class.v8::internal::Handle.901", %"class.v8::internal::DebugFeatureTracker", %"class.v8::internal::Debug::ThreadLocal", %"class.v8::internal::Handle.902", %"class.v8::internal::Isolate"* }
%"class.v8::debug::DebugDelegate" = type { i32 (...)** }
%"class.v8::internal::DebugInfoListNode" = type { i64*, %"class.v8::internal::DebugInfoListNode"* }
%"class.std::__1::unique_ptr.895" = type { %"class.std::__1::__compressed_pair.896" }
%"class.std::__1::__compressed_pair.896" = type { %"struct.std::__1::__compressed_pair_elem.897" }
%"struct.std::__1::__compressed_pair_elem.897" = type { %"class.v8::internal::Debug::TemporaryObjectsTracker"* }
%"class.v8::internal::Debug::TemporaryObjectsTracker" = type opaque
%"class.v8::internal::Handle.901" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::DebugFeatureTracker" = type <{ %"class.v8::internal::Isolate"*, i32, [4 x i8] }>
%"class.v8::internal::Debug::ThreadLocal" = type <{ i64, i32, i8, [3 x i8], %"class.v8::internal::Object", i8, [3 x i8], i32, i32, i32, %"class.v8::internal::Object", %"class.v8::internal::Object", i32, i8, [3 x i8] }>
%"class.v8::internal::Handle.902" = type { %"class.v8::internal::HandleBase" }
%"class.v8::internal::HeapProfiler" = type { %"class.v8::internal::HeapObjectAllocationTracker", %"class.std::__1::unique_ptr.903", %"class.std::__1::vector.909", %"class.std::__1::unique_ptr.917", %"class.std::__1::unique_ptr.923", i8, i8, %"class.v8::base::Mutex", %"class.std::__1::unique_ptr.929", %"class.std::__1::vector.935", %"struct.std::__1::pair.943" }
%"class.v8::internal::HeapObjectAllocationTracker" = type { i32 (...)** }
%"class.std::__1::unique_ptr.903" = type { %"class.std::__1::__compressed_pair.904" }
%"class.std::__1::__compressed_pair.904" = type { %"struct.std::__1::__compressed_pair_elem.905" }
%"struct.std::__1::__compressed_pair_elem.905" = type { %"class.v8::internal::HeapObjectsMap"* }
%"class.v8::internal::HeapObjectsMap" = type opaque
%"class.std::__1::vector.909" = type { %"class.std::__1::__vector_base.910" }
%"class.std::__1::__vector_base.910" = type { %"class.std::__1::unique_ptr.911"*, %"class.std::__1::unique_ptr.911"*, %"class.std::__1::__compressed_pair.912" }
%"class.std::__1::unique_ptr.911" = type opaque
%"class.std::__1::__compressed_pair.912" = type { %"struct.std::__1::__compressed_pair_elem.913" }
%"struct.std::__1::__compressed_pair_elem.913" = type { %"class.std::__1::unique_ptr.911"* }
%"class.std::__1::unique_ptr.917" = type { %"class.std::__1::__compressed_pair.918" }
%"class.std::__1::__compressed_pair.918" = type { %"struct.std::__1::__compressed_pair_elem.919" }
%"struct.std::__1::__compressed_pair_elem.919" = type { %"class.v8::internal::StringsStorage"* }
%"class.v8::internal::StringsStorage" = type opaque
%"class.std::__1::unique_ptr.923" = type { %"class.std::__1::__compressed_pair.924" }
%"class.std::__1::__compressed_pair.924" = type { %"struct.std::__1::__compressed_pair_elem.925" }
%"struct.std::__1::__compressed_pair_elem.925" = type { %"class.v8::internal::AllocationTracker"* }
%"class.v8::internal::AllocationTracker" = type opaque
%"class.std::__1::unique_ptr.929" = type { %"class.std::__1::__compressed_pair.930" }
%"class.std::__1::__compressed_pair.930" = type { %"struct.std::__1::__compressed_pair_elem.931" }
%"struct.std::__1::__compressed_pair_elem.931" = type { %"class.v8::internal::SamplingHeapProfiler"* }
%"class.v8::internal::SamplingHeapProfiler" = type opaque
%"class.std::__1::vector.935" = type { %"class.std::__1::__vector_base.936" }
%"class.std::__1::__vector_base.936" = type { %"struct.std::__1::pair.937"*, %"struct.std::__1::pair.937"*, %"class.std::__1::__compressed_pair.938" }
%"struct.std::__1::pair.937" = type opaque
%"class.std::__1::__compressed_pair.938" = type { %"struct.std::__1::__compressed_pair_elem.939" }
%"struct.std::__1::__compressed_pair_elem.939" = type { %"struct.std::__1::pair.937"* }
%"struct.std::__1::pair.943" = type { i8 (%"class.v8::Isolate"*, %"class.v8::Local.0"*, i16, i8*)*, i8* }
%"class.v8::Local.0" = type { %"class.v8::Value"* }
%"class.std::__1::unique_ptr.944" = type { %"class.std::__1::__compressed_pair.945" }
%"class.std::__1::__compressed_pair.945" = type { %"struct.std::__1::__compressed_pair_elem.946" }
%"struct.std::__1::__compressed_pair_elem.946" = type { %"class.v8::internal::CodeEventDispatcher"* }
%"class.v8::internal::CodeEventDispatcher" = type { %"class.v8::internal::CodeEventListener", %"class.std::__1::unordered_set.947", %"class.v8::base::Mutex" }
%"class.std::__1::unordered_set.947" = type { %"class.std::__1::__hash_table.948" }
%"class.std::__1::__hash_table.948" = type <{ %"class.std::__1::unique_ptr.949", %"class.std::__1::__compressed_pair.959", %"class.std::__1::__compressed_pair.964", %"class.std::__1::__compressed_pair.968", [4 x i8] }>
%"class.std::__1::unique_ptr.949" = type { %"class.std::__1::__compressed_pair.950" }
%"class.std::__1::__compressed_pair.950" = type { %"struct.std::__1::__compressed_pair_elem.951", %"struct.std::__1::__compressed_pair_elem.953" }
%"struct.std::__1::__compressed_pair_elem.951" = type { %"struct.std::__1::__hash_node_base.952"** }
%"struct.std::__1::__hash_node_base.952" = type { %"struct.std::__1::__hash_node_base.952"* }
%"struct.std::__1::__compressed_pair_elem.953" = type { %"class.std::__1::__bucket_list_deallocator.954" }
%"class.std::__1::__bucket_list_deallocator.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.959" = type { %"struct.std::__1::__compressed_pair_elem.960" }
%"struct.std::__1::__compressed_pair_elem.960" = type { %"struct.std::__1::__hash_node_base.952" }
%"class.std::__1::__compressed_pair.964" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.968" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::AstStringConstants" = type opaque
%"class.v8::internal::interpreter::Interpreter" = type opaque
%"class.v8::internal::compiler::PerIsolateCompilerCache" = type opaque
%"class.v8::internal::Zone" = type <{ i64, i64, i64, i64, %"class.v8::internal::AccountingAllocator"*, %"class.v8::internal::Segment"*, i8*, i8, i8, [6 x i8] }>
%"class.v8::internal::Segment" = type { %"class.v8::internal::Zone"*, %"class.v8::internal::Segment"*, i64 }
%"class.v8::internal::CompilerDispatcher" = type opaque
%"class.std::__1::queue" = type { %"class.std::__1::deque" }
%"class.std::__1::deque" = type { %"class.std::__1::__deque_base" }
%"class.std::__1::__deque_base" = type { %"struct.std::__1::__split_buffer", i64, %"class.std::__1::__compressed_pair.982" }
%"struct.std::__1::__split_buffer" = type { %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"**, %"struct.std::__1::pair.976"**, %"class.std::__1::__compressed_pair.977" }
%"struct.std::__1::pair.976" = type opaque
%"class.std::__1::__compressed_pair.977" = type { %"struct.std::__1::__compressed_pair_elem.978" }
%"struct.std::__1::__compressed_pair_elem.978" = type { %"struct.std::__1::pair.976"** }
%"class.std::__1::__compressed_pair.982" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::String" = type { i8 }
%"class.v8::FunctionCallbackInfo" = type <{ i64*, i64*, i32, [4 x i8] }>
%"class.v8::internal::Relocatable" = type { i32 (...)**, %"class.v8::internal::Isolate"*, %"class.v8::internal::Relocatable"* }
%"class.std::__1::vector.987" = type { %"class.std::__1::__vector_base.988" }
%"class.std::__1::__vector_base.988" = type { %"class.v8::internal::Handle.989"*, %"class.v8::internal::Handle.989"*, %"class.std::__1::__compressed_pair.990" }
%"class.v8::internal::Handle.989" = type { %"class.v8::internal::HandleBase" }
%"class.std::__1::__compressed_pair.990" = type { %"struct.std::__1::__compressed_pair_elem.991" }
%"struct.std::__1::__compressed_pair_elem.991" = type { %"class.v8::internal::Handle.989"* }
%"class.v8::internal::AddressToIndexHashMap" = type opaque
%"class.v8::internal::HeapObjectToIndexHashMap" = type opaque
%"class.v8::internal::MicrotaskQueue" = type { %"class.v8::MicrotaskQueue", i64, i64, i64, i64*, i64, %"class.v8::internal::MicrotaskQueue"*, %"class.v8::internal::MicrotaskQueue"*, i32, i32, i32, i8, %"class.std::__1::vector.995" }
%"class.v8::MicrotaskQueue" = type { i32 (...)** }
%"class.std::__1::vector.995" = type { %"class.std::__1::__vector_base.996" }
%"class.std::__1::__vector_base.996" = type { %"struct.std::__1::pair.976"*, %"struct.std::__1::pair.976"*, %"class.std::__1::__compressed_pair.997" }
%"class.std::__1::__compressed_pair.997" = type { %"struct.std::__1::__compressed_pair_elem.998" }
%"struct.std::__1::__compressed_pair_elem.998" = type { %"struct.std::__1::pair.976"* }
%"class.v8::internal::CompilationStatistics" = type opaque
%"class.v8::internal::CodeTracer" = type <{ %"class.v8::internal::EmbeddedVector", %struct._IO_FILE*, i32, [4 x i8] }>
%"class.v8::internal::EmbeddedVector" = type { %"class.v8::internal::Vector", [128 x i8] }
%"class.v8::internal::Vector" = type { i8*, i64 }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque
%"class.v8::PromiseRejectMessage" = type { %"class.v8::Local.852", i32, %"class.v8::Local.0" }
%"class.v8::Local.852" = type { %"class.v8::Promise"* }
%"class.v8::StartupData" = type { i8*, i32 }
%"class.v8_inspector::V8Inspector" = type opaque
%"class.v8::internal::compiler::NodeObserver" = type opaque
%"class.v8::internal::OptimizingCompileDispatcher" = type opaque
%"class.std::__1::unique_ptr.999" = type { %"class.std::__1::__compressed_pair.1000" }
%"class.std::__1::__compressed_pair.1000" = type { %"struct.std::__1::__compressed_pair_elem.1001" }
%"struct.std::__1::__compressed_pair_elem.1001" = type { %"class.v8::internal::PersistentHandlesList"* }
%"class.v8::internal::PersistentHandlesList" = type { %"class.v8::base::Mutex", %"class.v8::internal::PersistentHandles"* }
%"class.v8::internal::PersistentHandles" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::vector.827", i64*, i64*, %"class.v8::internal::PersistentHandles"*, %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1005" = type { %"class.std::__1::__vector_base.1006" }
%"class.std::__1::__vector_base.1006" = type { void (%"class.v8::Isolate"*)**, void (%"class.v8::Isolate"*)**, %"class.std::__1::__compressed_pair.1007" }
%"class.std::__1::__compressed_pair.1007" = type { %"struct.std::__1::__compressed_pair_elem.1008" }
%"struct.std::__1::__compressed_pair_elem.1008" = type { void (%"class.v8::Isolate"*)** }
%"class.std::__1::shared_ptr.1012" = type { %"class.v8::internal::metrics::Recorder"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::metrics::Recorder" = type opaque
%"class.std::__1::unordered_map.1013" = type { %"class.std::__1::__hash_table.1014" }
%"class.std::__1::__hash_table.1014" = type <{ %"class.std::__1::unique_ptr.1015", %"class.std::__1::__compressed_pair.1025", %"class.std::__1::__compressed_pair.1030", %"class.std::__1::__compressed_pair.1033", [4 x i8] }>
%"class.std::__1::unique_ptr.1015" = type { %"class.std::__1::__compressed_pair.1016" }
%"class.std::__1::__compressed_pair.1016" = type { %"struct.std::__1::__compressed_pair_elem.1017", %"struct.std::__1::__compressed_pair_elem.1019" }
%"struct.std::__1::__compressed_pair_elem.1017" = type { %"struct.std::__1::__hash_node_base.1018"** }
%"struct.std::__1::__hash_node_base.1018" = type { %"struct.std::__1::__hash_node_base.1018"* }
%"struct.std::__1::__compressed_pair_elem.1019" = type { %"class.std::__1::__bucket_list_deallocator.1020" }
%"class.std::__1::__bucket_list_deallocator.1020" = type { %"class.std::__1::__compressed_pair.1021" }
%"class.std::__1::__compressed_pair.1021" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1025" = type { %"struct.std::__1::__compressed_pair_elem.1026" }
%"struct.std::__1::__compressed_pair_elem.1026" = type { %"struct.std::__1::__hash_node_base.1018" }
%"class.std::__1::__compressed_pair.1030" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1033" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.v8::metrics::LongTaskStats" = type { i64, i64, i64 }
%"class.std::__1::vector.551" = type { %"class.std::__1::__vector_base.552" }
%"class.std::__1::__vector_base.552" = type { %"class.v8::internal::Object"*, %"class.v8::internal::Object"*, %"class.std::__1::__compressed_pair.553" }
%"class.std::__1::__compressed_pair.553" = type { %"struct.std::__1::__compressed_pair_elem.554" }
%"struct.std::__1::__compressed_pair_elem.554" = type { %"class.v8::internal::Object"* }
%"class.v8::internal::BuiltinsConstantsTableBuilder" = type opaque
%"class.v8::ArrayBuffer::Allocator" = type { i32 (...)** }
%"class.std::__1::shared_ptr.160" = type { %"class.v8::ArrayBuffer::Allocator"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::FutexWaitListNode" = type { %"class.v8::internal::Isolate"*, %"class.std::__1::shared_ptr.1037", %"class.v8::internal::CancelableTaskManager"*, %"class.v8::base::ConditionVariable", %"class.v8::internal::FutexWaitListNode"*, %"class.v8::internal::FutexWaitListNode"*, %"class.std::__1::weak_ptr.1062", i64, i8*, i8, i8, %"class.v8::Global", %"class.v8::Global.1063", %"class.v8::base::TimeTicks", i64 }
%"class.std::__1::shared_ptr.1037" = type { %"class.v8::TaskRunner"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::TaskRunner" = type { i32 (...)** }
%"class.v8::base::ConditionVariable" = type { %union.pthread_cond_t }
%union.pthread_cond_t = type { %struct.__pthread_cond_s }
%struct.__pthread_cond_s = type { %union.anon.324, %union.anon.325, [2 x i32], [2 x i32], i32, i32, [2 x i32] }
%union.anon.324 = type { i64 }
%union.anon.325 = type { i64 }
%"class.std::__1::weak_ptr.1062" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::BackingStore" = type <{ i8*, %"struct.std::__1::atomic.19", i64, %"union.v8::internal::BackingStore::TypeSpecificData", i16, [6 x i8] }>
%"union.v8::internal::BackingStore::TypeSpecificData" = type { %"class.std::__1::shared_ptr.160" }
%"class.v8::Global" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Promise"* }
%"class.v8::Global.1063" = type { %"class.v8::PersistentBase.1064" }
%"class.v8::PersistentBase.1064" = type { %"class.v8::Context"* }
%"class.v8::internal::CancelableTaskManager" = type <{ i64, %"class.std::__1::unordered_map.1038", %"class.v8::base::ConditionVariable", %"class.v8::base::Mutex", i8, [7 x i8] }>
%"class.std::__1::unordered_map.1038" = type { %"class.std::__1::__hash_table.1039" }
%"class.std::__1::__hash_table.1039" = type <{ %"class.std::__1::unique_ptr.1040", %"class.std::__1::__compressed_pair.1050", %"class.std::__1::__compressed_pair.1055", %"class.std::__1::__compressed_pair.1058", [4 x i8] }>
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042", %"struct.std::__1::__compressed_pair_elem.1044" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"struct.std::__1::__hash_node_base.1043"** }
%"struct.std::__1::__hash_node_base.1043" = type { %"struct.std::__1::__hash_node_base.1043"* }
%"struct.std::__1::__compressed_pair_elem.1044" = type { %"class.std::__1::__bucket_list_deallocator.1045" }
%"class.std::__1::__bucket_list_deallocator.1045" = type { %"class.std::__1::__compressed_pair.1046" }
%"class.std::__1::__compressed_pair.1046" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1050" = type { %"struct.std::__1::__compressed_pair_elem.1051" }
%"struct.std::__1::__compressed_pair_elem.1051" = type { %"struct.std::__1::__hash_node_base.1043" }
%"class.std::__1::__compressed_pair.1055" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1058" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::debug::ConsoleDelegate" = type { i32 (...)** }
%"class.v8::debug::AsyncEventDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.v8::internal::LocalIsolate"* }
%"class.v8::internal::LocalIsolate" = type { %"class.v8::internal::HiddenLocalFactory", %"class.v8::internal::LocalHeap", %"class.v8::internal::Isolate"*, %"class.std::__1::unique_ptr.1094", %"class.v8::internal::ThreadId", i64, %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::HiddenLocalFactory" = type { %"class.v8::internal::LocalFactory" }
%"class.v8::internal::LocalFactory" = type { %"class.v8::internal::ReadOnlyRoots" }
%"class.v8::internal::ReadOnlyRoots" = type { i64* }
%"class.v8::internal::LocalHeap" = type { %"class.v8::internal::Heap"*, i8, %"struct.std::__1::atomic.1070", i8, i8, %"class.v8::internal::LocalHeap"*, %"class.v8::internal::LocalHeap"*, %"class.std::__1::unique_ptr.1074", %"class.std::__1::unique_ptr.1080", %"class.std::__1::unique_ptr.484", %"class.std::__1::vector.1086", %"class.v8::internal::ConcurrentAllocator" }
%"struct.std::__1::atomic.1070" = type { %"struct.std::__1::__atomic_base.1071" }
%"struct.std::__1::__atomic_base.1071" = type { %"struct.std::__1::__cxx_atomic_impl.1072" }
%"struct.std::__1::__cxx_atomic_impl.1072" = type { %"struct.std::__1::__cxx_atomic_base_impl.1073" }
%"struct.std::__1::__cxx_atomic_base_impl.1073" = type { i32 }
%"class.std::__1::unique_ptr.1074" = type { %"class.std::__1::__compressed_pair.1075" }
%"class.std::__1::__compressed_pair.1075" = type { %"struct.std::__1::__compressed_pair_elem.1076" }
%"struct.std::__1::__compressed_pair_elem.1076" = type { %"class.v8::internal::LocalHandles"* }
%"class.v8::internal::LocalHandles" = type { %"struct.v8::internal::HandleScopeData", %"class.std::__1::vector.827" }
%"class.std::__1::unique_ptr.1080" = type { %"class.std::__1::__compressed_pair.1081" }
%"class.std::__1::__compressed_pair.1081" = type { %"struct.std::__1::__compressed_pair_elem.1082" }
%"struct.std::__1::__compressed_pair_elem.1082" = type { %"class.v8::internal::PersistentHandles"* }
%"class.std::__1::vector.1086" = type { %"class.std::__1::__vector_base.1087" }
%"class.std::__1::__vector_base.1087" = type { %"struct.std::__1::pair.1088"*, %"struct.std::__1::pair.1088"*, %"class.std::__1::__compressed_pair.1089" }
%"struct.std::__1::pair.1088" = type opaque
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.std::__1::pair.1088"* }
%"class.v8::internal::ConcurrentAllocator" = type { %"class.v8::internal::LocalHeap"*, %"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalAllocationBuffer" }
%"class.v8::internal::PagedSpace" = type { %"class.v8::internal::SpaceWithLinearArea", i32, i32, i64, %"class.v8::internal::AllocationStats", %"class.v8::base::Mutex", i64, i64 }
%"class.v8::internal::SpaceWithLinearArea" = type { %"class.v8::internal::Space", %"class.v8::internal::LinearAllocationArea", [3 x i64] }
%"class.v8::internal::Space" = type { %"class.v8::internal::BaseSpace", %"class.v8::internal::AllocationCounter", %"class.v8::internal::heap::List", %"struct.std::__1::atomic.19"*, %"class.std::__1::unique_ptr.97" }
%"class.v8::internal::AllocationCounter" = type <{ %"class.std::__1::vector.38", %"class.std::__1::vector.38", %"class.std::__1::unordered_set", i8, [7 x i8], i64, i64, i8, [7 x i8] }>
%"class.std::__1::vector.38" = type { %"class.std::__1::__vector_base.39" }
%"class.std::__1::__vector_base.39" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"class.std::__1::__compressed_pair.40" }
%"struct.v8::internal::AllocationCounter::AllocationObserverCounter" = type { %"class.v8::internal::AllocationObserver"*, i64, i64 }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table.45" }
%"class.std::__1::__hash_table.45" = type <{ %"class.std::__1::unique_ptr.46", %"class.std::__1::__compressed_pair.56", %"class.std::__1::__compressed_pair.61", %"class.std::__1::__compressed_pair.63", [4 x i8] }>
%"class.std::__1::unique_ptr.46" = type { %"class.std::__1::__compressed_pair.47" }
%"class.std::__1::__compressed_pair.47" = type { %"struct.std::__1::__compressed_pair_elem.48", %"struct.std::__1::__compressed_pair_elem.50" }
%"struct.std::__1::__compressed_pair_elem.48" = type { %"struct.std::__1::__hash_node_base.49"** }
%"struct.std::__1::__hash_node_base.49" = type { %"struct.std::__1::__hash_node_base.49"* }
%"struct.std::__1::__compressed_pair_elem.50" = type { %"class.std::__1::__bucket_list_deallocator.51" }
%"class.std::__1::__bucket_list_deallocator.51" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.57" }
%"struct.std::__1::__compressed_pair_elem.57" = type { %"struct.std::__1::__hash_node_base.49" }
%"class.std::__1::__compressed_pair.61" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::heap::List" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.std::__1::unique_ptr.97" = type { %"class.std::__1::__compressed_pair.98" }
%"class.std::__1::__compressed_pair.98" = type { %"struct.std::__1::__compressed_pair_elem.99" }
%"struct.std::__1::__compressed_pair_elem.99" = type { %"class.v8::internal::FreeList"* }
%"class.v8::internal::FreeList" = type { i32 (...)**, i32, i32, i64, %"struct.std::__1::atomic.19", %"class.v8::internal::FreeListCategory"**, i64 }
%"class.v8::internal::LinearAllocationArea" = type { i64, i64, i64 }
%"class.v8::internal::LocalAllocationBuffer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea" }
%"class.std::__1::unique_ptr.1094" = type { %"class.std::__1::__compressed_pair.1095" }
%"class.std::__1::__compressed_pair.1095" = type { %"struct.std::__1::__compressed_pair_elem.1096" }
%"struct.std::__1::__compressed_pair_elem.1096" = type { %"class.v8::internal::LocalLogger"* }
%"class.v8::internal::LocalLogger" = type opaque
%"struct.v8::internal::ManagedPtrDestructor" = type { i64, %"struct.v8::internal::ManagedPtrDestructor"*, %"struct.v8::internal::ManagedPtrDestructor"*, i8*, void (i8*)*, i64* }
%"class.v8::internal::wasm::WasmEngine" = type opaque
%"class.std::__1::unique_ptr.1103" = type { %"class.std::__1::__compressed_pair.1104" }
%"class.std::__1::__compressed_pair.1104" = type { %"struct.std::__1::__compressed_pair_elem.1105" }
%"struct.std::__1::__compressed_pair_elem.1105" = type { %"class.v8::internal::TracingCpuProfilerImpl"* }
%"class.v8::internal::TracingCpuProfilerImpl" = type opaque
%"class.v8::internal::EmbeddedFileWriterInterface" = type opaque
%"class.v8::Context::BackupIncumbentScope" = type { %"class.v8::Local.853", i64, %"class.v8::Context::BackupIncumbentScope"* }
%"class.v8::Local.853" = type { %"class.v8::Context"* }
%"class.v8::Array" = type { i8 }
%"class.v8::internal::Isolate::ThreadDataTable" = type { %"class.std::__1::unordered_map.1111" }
%"class.std::__1::unordered_map.1111" = type { %"class.std::__1::__hash_table.1112" }
%"class.std::__1::__hash_table.1112" = type <{ %"class.std::__1::unique_ptr.1113", %"class.std::__1::__compressed_pair.1123", %"class.std::__1::__compressed_pair.1128", %"class.std::__1::__compressed_pair.1131", [4 x i8] }>
%"class.std::__1::unique_ptr.1113" = type { %"class.std::__1::__compressed_pair.1114" }
%"class.std::__1::__compressed_pair.1114" = type { %"struct.std::__1::__compressed_pair_elem.1115", %"struct.std::__1::__compressed_pair_elem.1117" }
%"struct.std::__1::__compressed_pair_elem.1115" = type { %"struct.std::__1::__hash_node_base.1116"** }
%"struct.std::__1::__hash_node_base.1116" = type { %"struct.std::__1::__hash_node_base.1116"* }
%"struct.std::__1::__compressed_pair_elem.1117" = type { %"class.std::__1::__bucket_list_deallocator.1118" }
%"class.std::__1::__bucket_list_deallocator.1118" = type { %"class.std::__1::__compressed_pair.1119" }
%"class.std::__1::__compressed_pair.1119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1123" = type { %"struct.std::__1::__compressed_pair_elem.1124" }
%"struct.std::__1::__compressed_pair_elem.1124" = type { %"struct.std::__1::__hash_node_base.1116" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1131" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::atomic.1137" = type { %"struct.std::__1::__atomic_base.1138" }
%"struct.std::__1::__atomic_base.1138" = type { %"struct.std::__1::__cxx_atomic_impl.1139" }
%"struct.std::__1::__cxx_atomic_impl.1139" = type { %"struct.std::__1::__cxx_atomic_base_impl.1140" }
%"struct.std::__1::__cxx_atomic_base_impl.1140" = type { %"class.std::__1::vector.1141"* }
%"class.std::__1::vector.1141" = type { %"class.std::__1::__vector_base.1142" }
%"class.std::__1::__vector_base.1142" = type { %"struct.v8::MemoryRange"*, %"struct.v8::MemoryRange"*, %"class.std::__1::__compressed_pair.1143" }
%"struct.v8::MemoryRange" = type { i8*, i64 }
%"class.std::__1::__compressed_pair.1143" = type { %"struct.std::__1::__compressed_pair_elem.1144" }
%"struct.std::__1::__compressed_pair_elem.1144" = type { %"struct.v8::MemoryRange"* }
%"struct.std::__1::atomic.29" = type { %"struct.std::__1::__atomic_base.30" }
%"struct.std::__1::__atomic_base.30" = type { %"struct.std::__1::__cxx_atomic_impl.31" }
%"struct.std::__1::__cxx_atomic_impl.31" = type { %"struct.std::__1::__cxx_atomic_base_impl.32" }
%"struct.std::__1::__cxx_atomic_base_impl.32" = type { i32 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.33" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.33" = type { %"struct.std::__1::__compressed_pair_elem.34" }
%"struct.std::__1::__compressed_pair_elem.34" = type { %"struct.std::__1::pair"* }
%"class.v8::internal::NewSpace" = type { %"class.v8::internal::SpaceWithLinearArea", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace", %"class.v8::internal::VirtualMemory", %"class.std::__1::vector.103" }
%"class.v8::internal::SemiSpace" = type { %"class.v8::internal::Space", i64, i64, i64, i64, i64, i32, %"class.v8::internal::Page"* }
%"class.v8::internal::Page" = type { %"class.v8::internal::MemoryChunk" }
%"class.std::__1::vector.103" = type { %"class.std::__1::__vector_base.104" }
%"class.std::__1::__vector_base.104" = type { %"struct.std::__1::pair.105"*, %"struct.std::__1::pair.105"*, %"class.std::__1::__compressed_pair.106" }
%"struct.std::__1::pair.105" = type { i32, i64 }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"struct.std::__1::pair.105"* }
%"class.v8::internal::CodeSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::OldLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace" }
%"class.v8::internal::LargeObjectSpace" = type { %"class.v8::internal::Space", %"struct.std::__1::atomic.19", i32, %"struct.std::__1::atomic.19", %"class.v8::base::Mutex", %"struct.std::__1::atomic.19" }
%"class.v8::internal::CodeLargeObjectSpace" = type { %"class.v8::internal::OldLargeObjectSpace", %"class.std::__1::unordered_map.111" }
%"class.std::__1::unordered_map.111" = type { %"class.std::__1::__hash_table.112" }
%"class.std::__1::__hash_table.112" = type <{ %"class.std::__1::unique_ptr.113", %"class.std::__1::__compressed_pair.123", %"class.std::__1::__compressed_pair.128", %"class.std::__1::__compressed_pair.133", [4 x i8] }>
%"class.std::__1::unique_ptr.113" = type { %"class.std::__1::__compressed_pair.114" }
%"class.std::__1::__compressed_pair.114" = type { %"struct.std::__1::__compressed_pair_elem.115", %"struct.std::__1::__compressed_pair_elem.117" }
%"struct.std::__1::__compressed_pair_elem.115" = type { %"struct.std::__1::__hash_node_base.116"** }
%"struct.std::__1::__hash_node_base.116" = type { %"struct.std::__1::__hash_node_base.116"* }
%"struct.std::__1::__compressed_pair_elem.117" = type { %"class.std::__1::__bucket_list_deallocator.118" }
%"class.std::__1::__bucket_list_deallocator.118" = type { %"class.std::__1::__compressed_pair.119" }
%"class.std::__1::__compressed_pair.119" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.123" = type { %"struct.std::__1::__compressed_pair_elem.124" }
%"struct.std::__1::__compressed_pair_elem.124" = type { %"struct.std::__1::__hash_node_base.116" }
%"class.std::__1::__compressed_pair.128" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.133" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NewLargeObjectSpace" = type { %"class.v8::internal::LargeObjectSpace", i64 }
%"class.v8::internal::OldSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.v8::internal::MapSpace" = type { %"class.v8::internal::PagedSpace" }
%"class.std::__1::unique_ptr.146" = type { %"class.std::__1::__compressed_pair.147" }
%"class.std::__1::__compressed_pair.147" = type { %"struct.std::__1::__compressed_pair_elem.148" }
%"struct.std::__1::__compressed_pair_elem.148" = type { %"class.v8::internal::ConcurrentAllocator"* }
%"class.v8::internal::ArrayBufferExtension" = type { %"struct.std::__1::atomic.152", %"struct.std::__1::atomic.156", %"class.std::__1::shared_ptr", %"class.v8::internal::ArrayBufferExtension"*, %"struct.std::__1::atomic.19" }
%"struct.std::__1::atomic.156" = type { %"struct.std::__1::__atomic_base.157" }
%"struct.std::__1::__atomic_base.157" = type { %"struct.std::__1::__cxx_atomic_impl.158" }
%"struct.std::__1::__cxx_atomic_impl.158" = type { %"struct.std::__1::__cxx_atomic_base_impl.159" }
%"struct.std::__1::__cxx_atomic_base_impl.159" = type { i8 }
%"class.std::__1::shared_ptr" = type { %"class.v8::internal::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"struct.std::__1::atomic.161" = type { %"struct.std::__1::__atomic_base.162" }
%"struct.std::__1::__atomic_base.162" = type { %"struct.std::__1::__cxx_atomic_impl.163" }
%"struct.std::__1::__cxx_atomic_impl.163" = type { %"struct.std::__1::__cxx_atomic_base_impl.164" }
%"struct.std::__1::__cxx_atomic_base_impl.164" = type { i32 }
%"class.v8::internal::AllocationObserver" = type { i32 (...)**, i64 }
%"class.v8::internal::StressScavengeObserver" = type opaque
%"class.v8::internal::Object" = type { %"class.v8::internal::TaggedImpl" }
%"class.v8::internal::TaggedImpl" = type { i64 }
%"class.std::__1::vector.165" = type { %"class.std::__1::__vector_base.166" }
%"class.std::__1::__vector_base.166" = type { %"struct.v8::internal::Heap::GCCallbackTuple"*, %"struct.v8::internal::Heap::GCCallbackTuple"*, %"class.std::__1::__compressed_pair.167" }
%"struct.v8::internal::Heap::GCCallbackTuple" = type { void (%"class.v8::Isolate"*, i32, i32, i8*)*, i32, i8* }
%"class.std::__1::__compressed_pair.167" = type { %"struct.std::__1::__compressed_pair_elem.168" }
%"struct.std::__1::__compressed_pair_elem.168" = type { %"struct.v8::internal::Heap::GCCallbackTuple"* }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %"class.v8::internal::GCTracer"* }
%"class.v8::internal::GCTracer" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::GCTracer::Event", %"class.v8::internal::GCTracer::Event", i64, double, double, double, double, double, [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"], double, i64, i64, i64, double, i64, i64, i64, double, i32, double, double, double, double, %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer", %"class.v8::base::RingBuffer.176", %"class.v8::base::Mutex", [124 x %"struct.v8::internal::GCTracer::BackgroundCounter"] }
%"class.v8::internal::GCTracer::Event" = type { i32, i32, i8*, double, double, i8, i64, i64, i64, i64, i64, i64, i64, i64, i64, double, [124 x double], [10 x %"struct.v8::internal::GCTracer::IncrementalMarkingInfos"] }
%"struct.v8::internal::GCTracer::IncrementalMarkingInfos" = type <{ double, double, i32, [4 x i8] }>
%"class.v8::base::RingBuffer" = type { [10 x %"struct.std::__1::pair.175"], i32, i32 }
%"struct.std::__1::pair.175" = type { i64, double }
%"class.v8::base::RingBuffer.176" = type { [10 x double], i32, i32 }
%"struct.v8::internal::GCTracer::BackgroundCounter" = type { double }
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.v8::internal::MarkCompactCollector"* }
%"class.v8::internal::MarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::base::Mutex", %"class.v8::base::Semaphore", i8, i8, i8, i8, i8, i8, [2 x i8], %"class.v8::internal::MarkingWorklists", %"class.v8::internal::WeakObjects", %"struct.v8::internal::EphemeronMarking", %"class.std::__1::unique_ptr.222", %"class.std::__1::unique_ptr.228", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.std::__1::vector.289", %"class.v8::internal::Sweeper"*, %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", [2 x i8], i32, i32, [4 x i8] }>
%"class.v8::internal::MarkCompactCollectorBase" = type { i32 (...)**, %"class.v8::internal::Heap"* }
%"class.v8::base::Semaphore" = type { %union.sem_t }
%union.sem_t = type { i64, [24 x i8] }
%"class.v8::internal::MarkingWorklists" = type { %"class.heap::base::Worklist", %"class.heap::base::Worklist", %"class.heap::base::Worklist.183", %"class.std::__1::vector.184", %"class.std::__1::vector.191", %"class.heap::base::Worklist" }
%"class.heap::base::Worklist.183" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Segment"*, [16 x %"class.v8::internal::HeapObject"] }
%"class.heap::base::internal::SegmentBase" = type { i16, i16 }
%"class.std::__1::vector.184" = type { %"class.std::__1::__vector_base.185" }
%"class.std::__1::__vector_base.185" = type { %"struct.v8::internal::ContextWorklistPair"*, %"struct.v8::internal::ContextWorklistPair"*, %"class.std::__1::__compressed_pair.186" }
%"struct.v8::internal::ContextWorklistPair" = type { i64, %"class.heap::base::Worklist"* }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"struct.v8::internal::ContextWorklistPair"* }
%"class.std::__1::vector.191" = type { %"class.std::__1::__vector_base.192" }
%"class.std::__1::__vector_base.192" = type { %"class.std::__1::unique_ptr.193"*, %"class.std::__1::unique_ptr.193"*, %"class.std::__1::__compressed_pair.194" }
%"class.std::__1::unique_ptr.193" = type opaque
%"class.std::__1::__compressed_pair.194" = type { %"struct.std::__1::__compressed_pair_elem.195" }
%"struct.std::__1::__compressed_pair_elem.195" = type { %"class.std::__1::unique_ptr.193"* }
%"class.heap::base::Worklist" = type { %"class.v8::base::Mutex", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.heap::base::internal::SegmentBase", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::WeakObjects" = type { %"class.v8::internal::Worklist", %"class.v8::internal::Worklist.199", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.201", %"class.v8::internal::Worklist.203", %"class.v8::internal::Worklist.205", %"class.v8::internal::Worklist.207", %"class.v8::internal::Worklist.209", %"class.v8::internal::Worklist.211", %"class.v8::internal::Worklist.213" }
%"class.v8::internal::Worklist" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::TransitionArray, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, i64, [64 x %"class.v8::internal::TransitionArray"] }
%"class.v8::internal::TransitionArray" = type { %"class.v8::internal::WeakFixedArray" }
%"class.v8::internal::WeakFixedArray" = type { %"class.v8::internal::TorqueGeneratedWeakFixedArray" }
%"class.v8::internal::TorqueGeneratedWeakFixedArray" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::TransitionArray, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.199" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.201" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Ephemeron, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Ephemeron, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.203" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::CompressedHeapObjectSlot>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.205" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, v8::internal::Code>, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.207" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSWeakRef, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.209" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::WeakCell, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::WeakCell, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.211" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::SharedFunctionInfo, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Worklist.213" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::JSFunction, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment" = type opaque
%"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::JSFunction, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"struct.v8::internal::EphemeronMarking" = type { %"class.std::__1::vector.215", i8, i64 }
%"class.std::__1::vector.215" = type { %"class.std::__1::__vector_base.216" }
%"class.std::__1::__vector_base.216" = type { %"class.v8::internal::HeapObject"*, %"class.v8::internal::HeapObject"*, %"class.std::__1::__compressed_pair.217" }
%"class.std::__1::__compressed_pair.217" = type { %"struct.std::__1::__compressed_pair_elem.218" }
%"struct.std::__1::__compressed_pair_elem.218" = type { %"class.v8::internal::HeapObject"* }
%"class.std::__1::unique_ptr.222" = type { %"class.std::__1::__compressed_pair.223" }
%"class.std::__1::__compressed_pair.223" = type { %"struct.std::__1::__compressed_pair_elem.224" }
%"struct.std::__1::__compressed_pair_elem.224" = type { %"class.v8::internal::MainMarkingVisitor"* }
%"class.v8::internal::MainMarkingVisitor" = type opaque
%"class.std::__1::unique_ptr.228" = type { %"class.std::__1::__compressed_pair.229" }
%"class.std::__1::__compressed_pair.229" = type { %"struct.std::__1::__compressed_pair_elem.230" }
%"struct.std::__1::__compressed_pair_elem.230" = type { %"class.v8::internal::MarkingWorklists::Local"* }
%"class.v8::internal::MarkingWorklists::Local" = type { %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local", %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local", i64, %"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local"*, i8, [7 x i8], %"class.std::__1::unordered_map.231" }
%"class.heap::base::Worklist<v8::internal::HeapObject, 16>::Local" = type { %"class.heap::base::Worklist.183"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.heap::base::Worklist<v8::internal::HeapObject, 64>::Local" = type { %"class.heap::base::Worklist"*, %"class.heap::base::internal::SegmentBase"*, %"class.heap::base::internal::SegmentBase"* }
%"class.std::__1::unordered_map.231" = type { %"class.std::__1::__hash_table.232" }
%"class.std::__1::__hash_table.232" = type <{ %"class.std::__1::unique_ptr.233", %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.248", %"class.std::__1::__compressed_pair.251", [4 x i8] }>
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235", %"struct.std::__1::__compressed_pair_elem.237" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"struct.std::__1::__hash_node_base.236"** }
%"struct.std::__1::__hash_node_base.236" = type { %"struct.std::__1::__hash_node_base.236"* }
%"struct.std::__1::__compressed_pair_elem.237" = type { %"class.std::__1::__bucket_list_deallocator.238" }
%"class.std::__1::__bucket_list_deallocator.238" = type { %"class.std::__1::__compressed_pair.239" }
%"class.std::__1::__compressed_pair.239" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem.244" }
%"struct.std::__1::__compressed_pair_elem.244" = type { %"struct.std::__1::__hash_node_base.236" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.251" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.v8::internal::NativeContextInferrer" = type { i8 }
%"class.v8::internal::NativeContextStats" = type { %"class.std::__1::unordered_map.258" }
%"class.std::__1::unordered_map.258" = type { %"class.std::__1::__hash_table.259" }
%"class.std::__1::__hash_table.259" = type <{ %"class.std::__1::unique_ptr.260", %"class.std::__1::__compressed_pair.270", %"class.std::__1::__compressed_pair.275", %"class.std::__1::__compressed_pair.278", [4 x i8] }>
%"class.std::__1::unique_ptr.260" = type { %"class.std::__1::__compressed_pair.261" }
%"class.std::__1::__compressed_pair.261" = type { %"struct.std::__1::__compressed_pair_elem.262", %"struct.std::__1::__compressed_pair_elem.264" }
%"struct.std::__1::__compressed_pair_elem.262" = type { %"struct.std::__1::__hash_node_base.263"** }
%"struct.std::__1::__hash_node_base.263" = type { %"struct.std::__1::__hash_node_base.263"* }
%"struct.std::__1::__compressed_pair_elem.264" = type { %"class.std::__1::__bucket_list_deallocator.265" }
%"class.std::__1::__bucket_list_deallocator.265" = type { %"class.std::__1::__compressed_pair.266" }
%"class.std::__1::__compressed_pair.266" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.270" = type { %"struct.std::__1::__compressed_pair_elem.271" }
%"struct.std::__1::__compressed_pair_elem.271" = type { %"struct.std::__1::__hash_node_base.263" }
%"class.std::__1::__compressed_pair.275" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.278" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.282" = type { %"class.std::__1::__vector_base.283" }
%"class.std::__1::__vector_base.283" = type { %"class.v8::internal::Page"**, %"class.v8::internal::Page"**, %"class.std::__1::__compressed_pair.284" }
%"class.std::__1::__compressed_pair.284" = type { %"struct.std::__1::__compressed_pair_elem.285" }
%"struct.std::__1::__compressed_pair_elem.285" = type { %"class.v8::internal::Page"** }
%"class.std::__1::vector.289" = type { %"class.std::__1::__vector_base.290" }
%"class.std::__1::__vector_base.290" = type { %"struct.std::__1::pair.291"*, %"struct.std::__1::pair.291"*, %"class.std::__1::__compressed_pair.292" }
%"struct.std::__1::pair.291" = type opaque
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.293" }
%"struct.std::__1::__compressed_pair_elem.293" = type { %"struct.std::__1::pair.291"* }
%"class.v8::internal::Sweeper" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::MajorNonAtomicMarkingState"*, %"class.std::__1::unique_ptr.297", %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.282"], [3 x %"class.std::__1::vector.282"], i8, %"struct.std::__1::atomic.152", [6 x i8], %"class.std::__1::vector.282", i64, %"class.v8::base::Semaphore", i8, i8, i8, [5 x i8] }>
%"class.std::__1::unique_ptr.297" = type { %"class.std::__1::__compressed_pair.298" }
%"class.std::__1::__compressed_pair.298" = type { %"struct.std::__1::__compressed_pair_elem.299" }
%"struct.std::__1::__compressed_pair_elem.299" = type { %"class.v8::JobHandle"* }
%"class.v8::JobHandle" = type { i32 (...)** }
%"class.v8::internal::MajorMarkingState" = type { i8 }
%"class.v8::internal::MajorNonAtomicMarkingState" = type { i8 }
%"class.v8::internal::MinorMarkCompactCollector" = type <{ %"class.v8::internal::MarkCompactCollectorBase", %"class.v8::internal::Worklist.307"*, %"class.v8::internal::YoungGenerationMarkingVisitor"*, %"class.v8::base::Semaphore", %"class.std::__1::vector.282", %"class.std::__1::vector.282", %"class.v8::internal::MinorMarkingState", %"class.v8::internal::MinorNonAtomicMarkingState", [6 x i8] }>
%"class.v8::internal::Worklist.307" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::HeapObject, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, i64, [64 x %"class.v8::internal::HeapObject"] }
%"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::HeapObject, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::YoungGenerationMarkingVisitor" = type opaque
%"class.v8::internal::MinorMarkingState" = type { i8 }
%"class.v8::internal::MinorNonAtomicMarkingState" = type { i8 }
%"class.std::__1::unique_ptr.311" = type { %"class.std::__1::__compressed_pair.312" }
%"class.std::__1::__compressed_pair.312" = type { %"struct.std::__1::__compressed_pair_elem.313" }
%"struct.std::__1::__compressed_pair_elem.313" = type { %"class.v8::internal::ScavengerCollector"* }
%"class.std::__1::unique_ptr.317" = type { %"class.std::__1::__compressed_pair.318" }
%"class.std::__1::__compressed_pair.318" = type { %"struct.std::__1::__compressed_pair_elem.319" }
%"struct.std::__1::__compressed_pair_elem.319" = type { %"class.v8::internal::ArrayBufferSweeper"* }
%"class.v8::internal::ArrayBufferSweeper" = type { %"class.v8::base::Optional", %"class.v8::internal::Heap"*, i8, %"class.v8::base::Mutex", %"class.v8::base::ConditionVariable", %"struct.std::__1::atomic.19", %"struct.v8::internal::ArrayBufferList", %"struct.v8::internal::ArrayBufferList", i64, i64 }
%"class.v8::base::Optional" = type { %"class.v8::base::internal::OptionalBase" }
%"class.v8::base::internal::OptionalBase" = type { %"struct.v8::base::internal::OptionalStorage" }
%"struct.v8::base::internal::OptionalStorage" = type { %"struct.v8::base::internal::OptionalStorageBase" }
%"struct.v8::base::internal::OptionalStorageBase" = type { i8, [7 x i8], %union.anon }
%union.anon = type { %"struct.v8::internal::ArrayBufferSweeper::SweepingJob" }
%"struct.v8::internal::ArrayBufferSweeper::SweepingJob" = type <{ %"class.v8::internal::ArrayBufferSweeper"*, i64, %"struct.std::__1::atomic.320", [4 x i8], %"struct.v8::internal::ArrayBufferList", %"struct.v8::internal::ArrayBufferList", i32, [4 x i8] }>
%"struct.std::__1::atomic.320" = type { %"struct.std::__1::__atomic_base.321" }
%"struct.std::__1::__atomic_base.321" = type { %"struct.std::__1::__cxx_atomic_impl.322" }
%"struct.std::__1::__cxx_atomic_impl.322" = type { %"struct.std::__1::__cxx_atomic_base_impl.323" }
%"struct.std::__1::__cxx_atomic_base_impl.323" = type { i32 }
%"struct.v8::internal::ArrayBufferList" = type { %"class.v8::internal::ArrayBufferExtension"*, %"class.v8::internal::ArrayBufferExtension"*, i64 }
%"class.std::__1::unique_ptr.330" = type { %"class.std::__1::__compressed_pair.331" }
%"class.std::__1::__compressed_pair.331" = type { %"struct.std::__1::__compressed_pair_elem.332" }
%"struct.std::__1::__compressed_pair_elem.332" = type { %"class.v8::internal::MemoryAllocator"* }
%"class.v8::internal::MemoryAllocator" = type { %"class.v8::internal::Isolate"*, %"class.v8::PageAllocator"*, %"class.v8::PageAllocator"*, i64, %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.19", %"class.v8::internal::VirtualMemory", %"class.v8::internal::MemoryAllocator::Unmapper", %"class.std::__1::unordered_set.340", %"class.v8::base::Mutex" }
%"class.v8::internal::MemoryAllocator::Unmapper" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MemoryAllocator"*, %"class.v8::base::Mutex", [3 x %"class.std::__1::vector.333"], %"class.std::__1::unique_ptr.297" }
%"class.std::__1::vector.333" = type { %"class.std::__1::__vector_base.334" }
%"class.std::__1::__vector_base.334" = type { %"class.v8::internal::MemoryChunk"**, %"class.v8::internal::MemoryChunk"**, %"class.std::__1::__compressed_pair.335" }
%"class.std::__1::__compressed_pair.335" = type { %"struct.std::__1::__compressed_pair_elem.336" }
%"struct.std::__1::__compressed_pair_elem.336" = type { %"class.v8::internal::MemoryChunk"** }
%"class.std::__1::unique_ptr.369" = type { %"class.std::__1::__compressed_pair.370" }
%"class.std::__1::__compressed_pair.370" = type { %"struct.std::__1::__compressed_pair_elem.371" }
%"struct.std::__1::__compressed_pair_elem.371" = type { %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::IncrementalMarking" = type { %"class.v8::internal::Heap"*, %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::WeakObjects"*, double, double, i64, i64, i64, i64, double, i64, %"struct.std::__1::atomic.372", i8, i8, i8, i8, [3 x i8], %"class.v8::internal::IncrementalMarkingJob", %"struct.std::__1::atomic.376", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::IncrementalMarking::Observer", %"class.v8::internal::MajorMarkingState", %"class.v8::internal::MajorAtomicMarkingState", %"class.v8::internal::MajorNonAtomicMarkingState", %"class.v8::base::Mutex", %"class.std::__1::unordered_map.381" }
%"struct.std::__1::atomic.372" = type { %"struct.std::__1::__atomic_base.373" }
%"struct.std::__1::__atomic_base.373" = type { %"struct.std::__1::__cxx_atomic_impl.374" }
%"struct.std::__1::__cxx_atomic_impl.374" = type { %"struct.std::__1::__cxx_atomic_base_impl.375" }
%"struct.std::__1::__cxx_atomic_base_impl.375" = type { i8 }
%"class.v8::internal::IncrementalMarkingJob" = type <{ %"class.v8::base::Mutex", double, i8, i8, [6 x i8] }>
%"struct.std::__1::atomic.376" = type { %"struct.std::__1::__atomic_base.377" }
%"struct.std::__1::__atomic_base.377" = type { %"struct.std::__1::__cxx_atomic_impl.378" }
%"struct.std::__1::__cxx_atomic_impl.378" = type { %"struct.std::__1::__cxx_atomic_base_impl.379" }
%"struct.std::__1::__cxx_atomic_base_impl.379" = type { i32 }
%"class.v8::internal::IncrementalMarking::Observer" = type { %"class.v8::internal::AllocationObserver", %"class.v8::internal::IncrementalMarking"* }
%"class.v8::internal::MajorAtomicMarkingState" = type { i8 }
%"class.std::__1::unordered_map.381" = type { %"class.std::__1::__hash_table.382" }
%"class.std::__1::__hash_table.382" = type <{ %"class.std::__1::unique_ptr.383", %"class.std::__1::__compressed_pair.393", %"class.std::__1::__compressed_pair.398", %"class.std::__1::__compressed_pair.401", [4 x i8] }>
%"class.std::__1::unique_ptr.383" = type { %"class.std::__1::__compressed_pair.384" }
%"class.std::__1::__compressed_pair.384" = type { %"struct.std::__1::__compressed_pair_elem.385", %"struct.std::__1::__compressed_pair_elem.387" }
%"struct.std::__1::__compressed_pair_elem.385" = type { %"struct.std::__1::__hash_node_base.386"** }
%"struct.std::__1::__hash_node_base.386" = type { %"struct.std::__1::__hash_node_base.386"* }
%"struct.std::__1::__compressed_pair_elem.387" = type { %"class.std::__1::__bucket_list_deallocator.388" }
%"class.std::__1::__bucket_list_deallocator.388" = type { %"class.std::__1::__compressed_pair.389" }
%"class.std::__1::__compressed_pair.389" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.393" = type { %"struct.std::__1::__compressed_pair_elem.394" }
%"struct.std::__1::__compressed_pair_elem.394" = type { %"struct.std::__1::__hash_node_base.386" }
%"class.std::__1::__compressed_pair.398" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.408" = type { %"class.std::__1::__compressed_pair.409" }
%"class.std::__1::__compressed_pair.409" = type { %"struct.std::__1::__compressed_pair_elem.410" }
%"struct.std::__1::__compressed_pair_elem.410" = type { %"class.v8::internal::ConcurrentMarking"* }
%"class.v8::internal::ConcurrentMarking" = type <{ %"class.std::__1::unique_ptr.297", %"class.v8::internal::Heap"*, %"class.v8::internal::MarkingWorklists"*, %"class.v8::internal::WeakObjects"*, [8 x %"struct.v8::internal::ConcurrentMarking::TaskState"], %"struct.std::__1::atomic.19", %"struct.std::__1::atomic.152", [7 x i8] }>
%"struct.v8::internal::ConcurrentMarking::TaskState" = type { i64, %"class.std::__1::unordered_map.411", %"class.v8::internal::NativeContextInferrer", [7 x i8], %"class.v8::internal::NativeContextStats", [64 x i8] }
%"class.std::__1::unordered_map.411" = type { %"class.std::__1::__hash_table.412" }
%"class.std::__1::__hash_table.412" = type <{ %"class.std::__1::unique_ptr.413", %"class.std::__1::__compressed_pair.423", %"class.std::__1::__compressed_pair.428", %"class.std::__1::__compressed_pair.431", [4 x i8] }>
%"class.std::__1::unique_ptr.413" = type { %"class.std::__1::__compressed_pair.414" }
%"class.std::__1::__compressed_pair.414" = type { %"struct.std::__1::__compressed_pair_elem.415", %"struct.std::__1::__compressed_pair_elem.417" }
%"struct.std::__1::__compressed_pair_elem.415" = type { %"struct.std::__1::__hash_node_base.416"** }
%"struct.std::__1::__hash_node_base.416" = type { %"struct.std::__1::__hash_node_base.416"* }
%"struct.std::__1::__compressed_pair_elem.417" = type { %"class.std::__1::__bucket_list_deallocator.418" }
%"class.std::__1::__bucket_list_deallocator.418" = type { %"class.std::__1::__compressed_pair.419" }
%"class.std::__1::__compressed_pair.419" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.423" = type { %"struct.std::__1::__compressed_pair_elem.424" }
%"struct.std::__1::__compressed_pair_elem.424" = type { %"struct.std::__1::__hash_node_base.416" }
%"class.std::__1::__compressed_pair.428" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.438" = type { %"class.std::__1::__compressed_pair.439" }
%"class.std::__1::__compressed_pair.439" = type { %"struct.std::__1::__compressed_pair_elem.440" }
%"struct.std::__1::__compressed_pair_elem.440" = type { %"class.v8::internal::GCIdleTimeHandler"* }
%"class.v8::internal::GCIdleTimeHandler" = type opaque
%"class.std::__1::unique_ptr.444" = type { %"class.std::__1::__compressed_pair.445" }
%"class.std::__1::__compressed_pair.445" = type { %"struct.std::__1::__compressed_pair_elem.446" }
%"struct.std::__1::__compressed_pair_elem.446" = type { %"class.v8::internal::MemoryMeasurement"* }
%"class.v8::internal::MemoryMeasurement" = type { %"class.std::__1::list", %"class.std::__1::list", %"class.std::__1::list", %"class.v8::internal::Isolate"*, i8, i8, i8, %"class.v8::base::RandomNumberGenerator" }
%"class.std::__1::list" = type { %"class.std::__1::__list_imp" }
%"class.std::__1::__list_imp" = type { %"struct.std::__1::__list_node_base", %"class.std::__1::__compressed_pair.447" }
%"struct.std::__1::__list_node_base" = type { %"struct.std::__1::__list_node_base"*, %"struct.std::__1::__list_node_base"* }
%"class.std::__1::__compressed_pair.447" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::unique_ptr.454" = type { %"class.std::__1::__compressed_pair.455" }
%"class.std::__1::__compressed_pair.455" = type { %"struct.std::__1::__compressed_pair_elem.456" }
%"struct.std::__1::__compressed_pair_elem.456" = type { %"class.v8::internal::MemoryReducer"* }
%"class.v8::internal::MemoryReducer" = type opaque
%"class.std::__1::unique_ptr.460" = type { %"class.std::__1::__compressed_pair.461" }
%"class.std::__1::__compressed_pair.461" = type { %"struct.std::__1::__compressed_pair_elem.462" }
%"struct.std::__1::__compressed_pair_elem.462" = type { %"class.v8::internal::ObjectStats"* }
%"class.v8::internal::ObjectStats" = type opaque
%"class.std::__1::unique_ptr.466" = type { %"class.std::__1::__compressed_pair.467" }
%"class.std::__1::__compressed_pair.467" = type { %"struct.std::__1::__compressed_pair_elem.468" }
%"struct.std::__1::__compressed_pair_elem.468" = type { %"class.v8::internal::ScavengeJob"* }
%"class.v8::internal::ScavengeJob" = type opaque
%"class.std::__1::unique_ptr.472" = type { %"class.std::__1::__compressed_pair.473" }
%"class.std::__1::__compressed_pair.473" = type { %"struct.std::__1::__compressed_pair_elem.474" }
%"struct.std::__1::__compressed_pair_elem.474" = type { %"class.v8::internal::AllocationObserver"* }
%"class.std::__1::unique_ptr.478" = type { %"class.std::__1::__compressed_pair.479" }
%"class.std::__1::__compressed_pair.479" = type { %"struct.std::__1::__compressed_pair_elem.480" }
%"struct.std::__1::__compressed_pair_elem.480" = type { %"class.v8::internal::LocalEmbedderHeapTracer"* }
%"class.v8::internal::LocalEmbedderHeapTracer" = type <{ %"class.v8::internal::Isolate"*, %"class.v8::EmbedderHeapTracer"*, %"class.v8::internal::DefaultEmbedderRootsHandler", i32, i8, [3 x i8], %"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics", %"struct.v8::WrapperDescriptor", [4 x i8] }>
%"class.v8::EmbedderHeapTracer" = type { i32 (...)**, %"class.v8::Isolate"* }
%"class.v8::internal::DefaultEmbedderRootsHandler" = type { %"class.v8::EmbedderRootsHandler", %"class.v8::EmbedderHeapTracer"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.v8::internal::LocalEmbedderHeapTracer::RemoteStatistics" = type { i64, i64, i64 }
%"struct.v8::WrapperDescriptor" = type <{ i32, i32, i16, [2 x i8] }>
%"class.std::__1::unique_ptr.484" = type { %"class.std::__1::__compressed_pair.485" }
%"class.std::__1::__compressed_pair.485" = type { %"struct.std::__1::__compressed_pair_elem.486" }
%"struct.std::__1::__compressed_pair_elem.486" = type { %"class.v8::internal::MarkingBarrier"* }
%"class.v8::internal::MarkingBarrier" = type opaque
%"class.std::__1::shared_ptr.490" = type { %"class.v8::internal::CodeRange"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::CodeRange" = type { %"class.v8::internal::VirtualMemoryCage", %"struct.std::__1::atomic.509", %"class.v8::base::Mutex" }
%"class.v8::internal::VirtualMemoryCage" = type { i32 (...)**, i64, %"class.std::__1::unique_ptr.491", %"class.v8::internal::VirtualMemory" }
%"struct.std::__1::atomic.509" = type { %"struct.std::__1::__atomic_base.510" }
%"struct.std::__1::__atomic_base.510" = type { %"struct.std::__1::__cxx_atomic_impl.511" }
%"struct.std::__1::__cxx_atomic_impl.511" = type { %"struct.std::__1::__cxx_atomic_base_impl.512" }
%"struct.std::__1::__cxx_atomic_base_impl.512" = type { i8* }
%"class.v8::CppHeap" = type { i32 (...)** }
%"class.v8::internal::StrongRootsEntry" = type { %"class.v8::internal::FullObjectSlot", %"class.v8::internal::FullObjectSlot", %"class.v8::internal::StrongRootsEntry"*, %"class.v8::internal::StrongRootsEntry"* }
%"class.v8::internal::FullObjectSlot" = type { %"class.v8::internal::SlotBase" }
%"class.v8::internal::SlotBase" = type { i64 }
%"class.std::__1::unordered_map.513" = type { %"class.std::__1::__hash_table.514" }
%"class.std::__1::__hash_table.514" = type <{ %"class.std::__1::unique_ptr.515", %"class.std::__1::__compressed_pair.525", %"class.std::__1::__compressed_pair.530", %"class.std::__1::__compressed_pair.533", [4 x i8] }>
%"class.std::__1::unique_ptr.515" = type { %"class.std::__1::__compressed_pair.516" }
%"class.std::__1::__compressed_pair.516" = type { %"struct.std::__1::__compressed_pair_elem.517", %"struct.std::__1::__compressed_pair_elem.519" }
%"struct.std::__1::__compressed_pair_elem.517" = type { %"struct.std::__1::__hash_node_base.518"** }
%"struct.std::__1::__hash_node_base.518" = type { %"struct.std::__1::__hash_node_base.518"* }
%"struct.std::__1::__compressed_pair_elem.519" = type { %"class.std::__1::__bucket_list_deallocator.520" }
%"class.std::__1::__bucket_list_deallocator.520" = type { %"class.std::__1::__compressed_pair.521" }
%"class.std::__1::__compressed_pair.521" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.525" = type { %"struct.std::__1::__compressed_pair_elem.526" }
%"struct.std::__1::__compressed_pair_elem.526" = type { %"struct.std::__1::__hash_node_base.518" }
%"class.std::__1::__compressed_pair.530" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.533" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unique_ptr.539" = type { %"class.std::__1::__compressed_pair.540" }
%"class.std::__1::__compressed_pair.540" = type { %"struct.std::__1::__compressed_pair_elem.541" }
%"struct.std::__1::__compressed_pair_elem.541" = type { %"class.v8::internal::GlobalHandleVector"* }
%"class.v8::internal::GlobalHandleVector" = type opaque
%"class.std::__1::unique_ptr.545" = type { %"class.std::__1::__compressed_pair.546" }
%"class.std::__1::__compressed_pair.546" = type { %"struct.std::__1::__compressed_pair_elem.547" }
%"struct.std::__1::__compressed_pair_elem.547" = type { %"class.v8::internal::GlobalSafepoint"* }
%"class.v8::internal::GlobalSafepoint" = type opaque
%"class.v8::internal::Heap::ExternalStringTable" = type { %"class.v8::internal::Heap"*, %"class.std::__1::vector.551", %"class.std::__1::vector.551" }
%"class.std::__1::unique_ptr.558" = type { %"class.std::__1::__compressed_pair.559" }
%"class.std::__1::__compressed_pair.559" = type { %"struct.std::__1::__compressed_pair_elem.560" }
%"struct.std::__1::__compressed_pair_elem.560" = type { %"class.v8::internal::CollectionBarrier"* }
%"class.v8::internal::CollectionBarrier" = type opaque
%"class.v8::internal::HeapObject" = type { %"class.v8::internal::Object" }
%"class.v8::base::SharedMutex" = type { %union.pthread_rwlock_t }
%union.pthread_rwlock_t = type { %struct.__pthread_rwlock_arch_t }
%struct.__pthread_rwlock_arch_t = type { i32, i32, i32, i32, i32, i32, i32, i32, i8, [7 x i8], i64, i32 }
%"class.v8::base::Mutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set.340" = type { %"class.std::__1::__hash_table.341" }
%"class.std::__1::__hash_table.341" = type <{ %"class.std::__1::unique_ptr.342", %"class.std::__1::__compressed_pair.352", %"class.std::__1::__compressed_pair.357", %"class.std::__1::__compressed_pair.361", [4 x i8] }>
%"class.std::__1::unique_ptr.342" = type { %"class.std::__1::__compressed_pair.343" }
%"class.std::__1::__compressed_pair.343" = type { %"struct.std::__1::__compressed_pair_elem.344", %"struct.std::__1::__compressed_pair_elem.346" }
%"struct.std::__1::__compressed_pair_elem.344" = type { %"struct.std::__1::__hash_node_base.345"** }
%"struct.std::__1::__hash_node_base.345" = type { %"struct.std::__1::__hash_node_base.345"* }
%"struct.std::__1::__compressed_pair_elem.346" = type { %"class.std::__1::__bucket_list_deallocator.347" }
%"class.std::__1::__bucket_list_deallocator.347" = type { %"class.std::__1::__compressed_pair.348" }
%"class.std::__1::__compressed_pair.348" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %"struct.std::__1::__hash_node_base.345" }
%"class.std::__1::__compressed_pair.357" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.590" = type { %"class.std::__1::__hash_table.591" }
%"class.std::__1::__hash_table.591" = type <{ %"class.std::__1::unique_ptr.592", %"class.std::__1::__compressed_pair.602", %"class.std::__1::__compressed_pair.607", %"class.std::__1::__compressed_pair.610", [4 x i8] }>
%"class.std::__1::unique_ptr.592" = type { %"class.std::__1::__compressed_pair.593" }
%"class.std::__1::__compressed_pair.593" = type { %"struct.std::__1::__compressed_pair_elem.594", %"struct.std::__1::__compressed_pair_elem.596" }
%"struct.std::__1::__compressed_pair_elem.594" = type { %"struct.std::__1::__hash_node_base.595"** }
%"struct.std::__1::__hash_node_base.595" = type { %"struct.std::__1::__hash_node_base.595"* }
%"struct.std::__1::__compressed_pair_elem.596" = type { %"class.std::__1::__bucket_list_deallocator.597" }
%"class.std::__1::__bucket_list_deallocator.597" = type { %"class.std::__1::__compressed_pair.598" }
%"class.std::__1::__compressed_pair.598" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.602" = type { %"struct.std::__1::__compressed_pair_elem.603" }
%"struct.std::__1::__compressed_pair_elem.603" = type { %"struct.std::__1::__hash_node_base.595" }
%"class.std::__1::__compressed_pair.607" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.610" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.564" = type { %"class.std::__1::__hash_table.565" }
%"class.std::__1::__hash_table.565" = type <{ %"class.std::__1::unique_ptr.566", %"class.std::__1::__compressed_pair.576", %"class.std::__1::__compressed_pair.581", %"class.std::__1::__compressed_pair.584", [4 x i8] }>
%"class.std::__1::unique_ptr.566" = type { %"class.std::__1::__compressed_pair.567" }
%"class.std::__1::__compressed_pair.567" = type { %"struct.std::__1::__compressed_pair_elem.568", %"struct.std::__1::__compressed_pair_elem.570" }
%"struct.std::__1::__compressed_pair_elem.568" = type { %"struct.std::__1::__hash_node_base.569"** }
%"struct.std::__1::__hash_node_base.569" = type { %"struct.std::__1::__hash_node_base.569"* }
%"struct.std::__1::__compressed_pair_elem.570" = type { %"class.std::__1::__bucket_list_deallocator.571" }
%"class.std::__1::__bucket_list_deallocator.571" = type { %"class.std::__1::__compressed_pair.572" }
%"class.std::__1::__compressed_pair.572" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.576" = type { %"struct.std::__1::__compressed_pair_elem.577" }
%"struct.std::__1::__compressed_pair_elem.577" = type { %"struct.std::__1::__hash_node_base.569" }
%"class.std::__1::__compressed_pair.581" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.584" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::unordered_map.614" = type { %"class.std::__1::__hash_table.615" }
%"class.std::__1::__hash_table.615" = type <{ %"class.std::__1::unique_ptr.616", %"class.std::__1::__compressed_pair.626", %"class.std::__1::__compressed_pair.631", %"class.std::__1::__compressed_pair.636", [4 x i8] }>
%"class.std::__1::unique_ptr.616" = type { %"class.std::__1::__compressed_pair.617" }
%"class.std::__1::__compressed_pair.617" = type { %"struct.std::__1::__compressed_pair_elem.618", %"struct.std::__1::__compressed_pair_elem.620" }
%"struct.std::__1::__compressed_pair_elem.618" = type { %"struct.std::__1::__hash_node_base.619"** }
%"struct.std::__1::__hash_node_base.619" = type { %"struct.std::__1::__hash_node_base.619"* }
%"struct.std::__1::__compressed_pair_elem.620" = type { %"class.std::__1::__bucket_list_deallocator.621" }
%"class.std::__1::__bucket_list_deallocator.621" = type { %"class.std::__1::__compressed_pair.622" }
%"class.std::__1::__compressed_pair.622" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.626" = type { %"struct.std::__1::__compressed_pair_elem.627" }
%"struct.std::__1::__compressed_pair_elem.627" = type { %"struct.std::__1::__hash_node_base.619" }
%"class.std::__1::__compressed_pair.631" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.636" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.642" = type { %"class.std::__1::__vector_base.643" }
%"class.std::__1::__vector_base.643" = type { %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.v8::internal::HeapObjectAllocationTracker"**, %"class.std::__1::__compressed_pair.644" }
%"class.std::__1::__compressed_pair.644" = type { %"struct.std::__1::__compressed_pair_elem.645" }
%"struct.std::__1::__compressed_pair_elem.645" = type { %"class.v8::internal::HeapObjectAllocationTracker"** }
%"class.std::__1::unique_ptr.649" = type { %"class.std::__1::__compressed_pair.650" }
%"class.std::__1::__compressed_pair.650" = type { %"struct.std::__1::__compressed_pair_elem.651" }
%"struct.std::__1::__compressed_pair_elem.651" = type { %"class.v8::internal::third_party_heap::Heap"* }
%"class.v8::internal::third_party_heap::Heap" = type { i8 }
%"struct.std::__1::atomic.68" = type { %"struct.std::__1::__atomic_base.69" }
%"struct.std::__1::__atomic_base.69" = type { %"struct.std::__1::__cxx_atomic_impl.70" }
%"struct.std::__1::__cxx_atomic_impl.70" = type { %"struct.std::__1::__cxx_atomic_base_impl.71" }
%"struct.std::__1::__cxx_atomic_base_impl.71" = type { %"class.v8::internal::BaseSpace"* }
%"class.v8::internal::VirtualMemory" = type { %"class.v8::PageAllocator"*, %"class.v8::base::AddressRegion" }
%"class.v8::internal::SlotSet" = type { i8 }
%"class.v8::internal::TypedSlotSet" = type { %"class.v8::internal::TypedSlots", i64 }
%"class.v8::internal::TypedSlots" = type { i32 (...)**, %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"* }
%"struct.v8::internal::TypedSlots::Chunk" = type { %"struct.v8::internal::TypedSlots::Chunk"*, %"class.std::__1::vector.72" }
%"class.std::__1::vector.72" = type { %"class.std::__1::__vector_base.73" }
%"class.std::__1::__vector_base.73" = type { %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"*, %"class.std::__1::__compressed_pair.74" }
%"struct.v8::internal::TypedSlots::TypedSlot" = type { i32 }
%"class.std::__1::__compressed_pair.74" = type { %"struct.std::__1::__compressed_pair_elem.75" }
%"struct.std::__1::__compressed_pair_elem.75" = type { %"struct.v8::internal::TypedSlots::TypedSlot"* }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.79", %"class.std::__1::__compressed_pair.84" }
%"class.std::__1::__compressed_pair.79" = type { %"struct.std::__1::__compressed_pair_elem.80" }
%"class.std::__1::__compressed_pair.84" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"struct.std::__1::atomic.86" = type { %"struct.std::__1::__atomic_base.87" }
%"struct.std::__1::__atomic_base.87" = type { %"struct.std::__1::__cxx_atomic_impl.88" }
%"struct.std::__1::__cxx_atomic_impl.88" = type { %"struct.std::__1::__cxx_atomic_base_impl.89" }
%"struct.std::__1::__cxx_atomic_base_impl.89" = type { i64 }
%"class.v8::internal::heap::ListNode" = type { %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"* }
%"class.v8::internal::FreeListCategory" = type { i32, i32, %"class.v8::internal::FreeSpace", %"class.v8::internal::FreeListCategory"*, %"class.v8::internal::FreeListCategory"* }
%"class.v8::internal::FreeSpace" = type { %"class.v8::internal::TorqueGeneratedFreeSpace" }
%"class.v8::internal::TorqueGeneratedFreeSpace" = type { %"class.v8::internal::HeapObject" }
%"struct.std::__1::atomic.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__atomic_base.26" }
%"struct.std::__1::__atomic_base.26" = type { %"struct.std::__1::__cxx_atomic_impl.27" }
%"struct.std::__1::__cxx_atomic_impl.27" = type { %"struct.std::__1::__cxx_atomic_base_impl.28" }
%"struct.std::__1::__cxx_atomic_base_impl.28" = type { i64 }
%"class.v8::internal::Bitmap" = type { i8 }
%"class.v8::internal::CodeObjectRegistry" = type <{ %"class.std::__1::vector.90", i8, [7 x i8] }>
%"class.std::__1::vector.90" = type { %"class.std::__1::__vector_base.91" }
%"class.std::__1::__vector_base.91" = type { i64*, i64*, %"class.std::__1::__compressed_pair.92" }
%"class.std::__1::__compressed_pair.92" = type { %"struct.std::__1::__compressed_pair_elem.93" }
%"struct.std::__1::__compressed_pair_elem.93" = type { i64* }
%"class.v8::internal::PossiblyEmptyBuckets" = type { i64 }
%"class.std::__1::__compressed_pair.1196" = type { %"struct.std::__1::__compressed_pair_elem.1197" }
%"struct.std::__1::__compressed_pair_elem.1197" = type { %"struct.std::__1::pair.1195"* }
%"struct.std::__1::atomic.19" = type { %"struct.std::__1::__atomic_base.20" }
%"struct.std::__1::__atomic_base.20" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl.22" }
%"struct.std::__1::__cxx_atomic_impl.22" = type { %"struct.std::__1::__cxx_atomic_base_impl.23" }
%"struct.std::__1::__cxx_atomic_base_impl.23" = type { i64 }
%"class.v8::internal::IndexGenerator" = type { %"class.v8::base::Mutex", %"class.std::__1::stack", %"class.std::__1::queue.1205", i64 }
%"class.std::__1::stack" = type { %"class.std::__1::deque.1201" }
%"class.std::__1::deque.1201" = type { %"class.std::__1::__deque_base.1202" }
%"class.std::__1::__deque_base.1202" = type { %"struct.std::__1::__split_buffer.1203", i64, %"class.std::__1::__compressed_pair.1204" }
%"struct.std::__1::__split_buffer.1203" = type { i64**, i64**, i64**, %"class.std::__1::__compressed_pair.829" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::queue.1205" = type { %"class.std::__1::deque.1206" }
%"class.std::__1::deque.1206" = type { %"class.std::__1::__deque_base.1207" }
%"class.std::__1::__deque_base.1207" = type { %"struct.std::__1::__split_buffer.1208", i64, %"class.std::__1::__compressed_pair.1215" }
%"struct.std::__1::__split_buffer.1208" = type { %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"**, %"class.std::__1::__compressed_pair.1210" }
%"struct.std::__1::pair.1209" = type { i64, i64 }
%"class.std::__1::__compressed_pair.1210" = type { %"struct.std::__1::__compressed_pair_elem.1211" }
%"struct.std::__1::__compressed_pair_elem.1211" = type { %"struct.std::__1::pair.1209"** }
%"class.std::__1::__compressed_pair.1215" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.v8::internal::ScavengerCollector" = type { %"class.v8::internal::Isolate"*, %"class.v8::internal::Heap"*, %"class.std::__1::unordered_map.1148" }
%"class.std::__1::unordered_map.1148" = type { %"class.std::__1::__hash_table.1149" }
%"class.std::__1::__hash_table.1149" = type <{ %"class.std::__1::unique_ptr.1150", %"class.std::__1::__compressed_pair.1160", %"class.std::__1::__compressed_pair.1165", %"class.std::__1::__compressed_pair.1168", [4 x i8] }>
%"class.std::__1::unique_ptr.1150" = type { %"class.std::__1::__compressed_pair.1151" }
%"class.std::__1::__compressed_pair.1151" = type { %"struct.std::__1::__compressed_pair_elem.1152", %"struct.std::__1::__compressed_pair_elem.1154" }
%"struct.std::__1::__compressed_pair_elem.1152" = type { %"struct.std::__1::__hash_node_base.1153"** }
%"struct.std::__1::__hash_node_base.1153" = type { %"struct.std::__1::__hash_node_base.1153"* }
%"struct.std::__1::__compressed_pair_elem.1154" = type { %"class.std::__1::__bucket_list_deallocator.1155" }
%"class.std::__1::__bucket_list_deallocator.1155" = type { %"class.std::__1::__compressed_pair.1156" }
%"class.std::__1::__compressed_pair.1156" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1160" = type { %"struct.std::__1::__compressed_pair_elem.1161" }
%"struct.std::__1::__compressed_pair_elem.1161" = type { %"struct.std::__1::__hash_node_base.1153" }
%"class.std::__1::__compressed_pair.1165" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1168" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"class.std::__1::vector.1172" = type { %"class.std::__1::__vector_base.1173" }
%"class.std::__1::__vector_base.1173" = type { %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::__compressed_pair.1188" }
%"class.std::__1::unique_ptr.1174" = type { %"class.std::__1::__compressed_pair.1175" }
%"class.std::__1::__compressed_pair.1175" = type { %"struct.std::__1::__compressed_pair_elem.1176" }
%"struct.std::__1::__compressed_pair_elem.1176" = type { %"class.v8::internal::Scavenger"* }
%"class.v8::internal::Scavenger" = type <{ %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::Heap"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::View", %"class.v8::internal::Scavenger::PromotionList::View", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::View", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::View", %"class.std::__1::unordered_map.513", i64, i64, %"class.v8::internal::EvacuationAllocator", %"class.std::__1::unordered_map.1148", %"class.std::__1::unordered_map", i8, i8, i8, [5 x i8] }>
%"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::View" = type <{ %"class.v8::internal::Worklist.1177"*, i32, [4 x i8] }>
%"class.v8::internal::Worklist.1177" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, i64, [64 x %"class.v8::internal::MemoryChunk"*] }
%"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Scavenger::PromotionList::View" = type <{ %"class.v8::internal::Scavenger::PromotionList"*, i32, [4 x i8] }>
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::View" = type <{ %"class.v8::internal::Worklist.1179"*, i32, [4 x i8] }>
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::View" = type <{ %"class.v8::internal::Worklist.1183"*, i32, [4 x i8] }>
%"class.v8::internal::Worklist.1183" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, i64, [128 x %"class.v8::internal::EphemeronHashTable"] }
%"class.v8::internal::EphemeronHashTable" = type { %"class.v8::internal::ObjectHashTableBase" }
%"class.v8::internal::ObjectHashTableBase" = type { %"class.v8::internal::HashTable" }
%"class.v8::internal::HashTable" = type { %"class.v8::internal::HashTableBase" }
%"class.v8::internal::HashTableBase" = type { %"class.v8::internal::FixedArray" }
%"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::EvacuationAllocator" = type <{ %"class.v8::internal::Heap"*, %"class.v8::internal::NewSpace"*, %"class.v8::internal::CompactionSpaceCollection", %"class.v8::internal::LocalAllocationBuffer", i8, [7 x i8] }>
%"class.v8::internal::CompactionSpaceCollection" = type { [8 x i8], %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace" }
%"class.v8::internal::CompactionSpace" = type { %"class.v8::internal::LocalSpace" }
%"class.v8::internal::LocalSpace" = type { %"class.v8::internal::PagedSpace", %"class.std::__1::vector.282" }
%"class.std::__1::__compressed_pair.1188" = type { %"struct.std::__1::__compressed_pair_elem.1189" }
%"struct.std::__1::__compressed_pair_elem.1189" = type { %"class.std::__1::unique_ptr.1174"* }
%"class.v8::internal::Worklist.1179" = type <{ [8 x %"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment" = type { %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, i64, [256 x %"struct.std::__1::pair.1282"] }
%"struct.std::__1::pair.1282" = type <{ %"class.v8::internal::HeapObject", i32, [4 x i8] }>
%"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::Scavenger::PromotionList" = type { %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1181" }
%"class.v8::internal::Worklist.1181" = type <{ [8 x %"struct.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::PrivateSegmentHolder"], %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::GlobalPool", i32, [4 x i8] }>
%"struct.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::PrivateSegmentHolder" = type { %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, [64 x i8] }
%"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment" = type { %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, i64, [4 x %"struct.v8::internal::Scavenger::PromotionListEntry"] }
%"struct.v8::internal::Scavenger::PromotionListEntry" = type <{ %"class.v8::internal::HeapObject", %"class.v8::internal::Map", i32, [4 x i8] }>
%"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::GlobalPool" = type { %"class.v8::base::Mutex", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"struct.std::__1::atomic.19" }
%"class.v8::internal::RootScavengeVisitor" = type { %"class.v8::internal::RootVisitor", %"class.v8::internal::Scavenger"* }
%"class.v8::internal::RootVisitor" = type { i32 (...)** }
%"class.v8::internal::ScavengeVisitor" = type { %"class.v8::internal::NewSpaceVisitor", %"class.v8::internal::Scavenger"* }
%"class.v8::internal::NewSpaceVisitor" = type { %"class.v8::internal::HeapVisitor" }
%"class.v8::internal::HeapVisitor" = type { %"class.v8::internal::ObjectVisitor" }
%"class.v8::internal::ObjectVisitor" = type { i32 (...)** }
%"class.v8::JobDelegate" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1300" = type { %"class.std::__1::__compressed_pair.1301" }
%"class.std::__1::__compressed_pair.1301" = type { %"struct.std::__1::__compressed_pair_elem.1302" }
%"struct.std::__1::__compressed_pair_elem.1302" = type { %"class.v8::ConvertableToTraceFormat"* }
%"class.v8::ConvertableToTraceFormat" = type { i32 (...)** }
%"class.v8::internal::GCTracer::Scope" = type { %"class.v8::internal::GCTracer"*, i32, i32, double, %"class.v8::internal::RuntimeCallTimer", %"class.v8::internal::RuntimeCallStats"*, %"class.v8::base::Optional.1219" }
%"class.v8::internal::RuntimeCallTimer" = type { %"class.v8::internal::RuntimeCallCounter"*, %"class.v8::base::AtomicValue", %"class.v8::base::TimeTicks", %"class.v8::base::TimeDelta" }
%"class.v8::base::Optional.1219" = type { %"class.v8::base::internal::OptionalBase.1220" }
%"class.v8::base::internal::OptionalBase.1220" = type { %"struct.v8::base::internal::OptionalStorage.1221" }
%"struct.v8::base::internal::OptionalStorage.1221" = type { %"struct.v8::base::internal::OptionalStorageBase.1222" }
%"struct.v8::base::internal::OptionalStorageBase.1222" = type { i8, %union.anon.1223 }
%union.anon.1223 = type { %"class.v8::internal::WorkerThreadRuntimeCallStatsScope" }
%"class.v8::internal::WorkerThreadRuntimeCallStatsScope" = type { %"class.v8::internal::RuntimeCallStats"* }
%"class.v8::internal::tracing::ScopedTracer" = type { %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data" }
%"struct.v8::internal::tracing::ScopedTracer::Data" = type { i8*, i8*, i64 }
%"class.v8::TracingController" = type { i32 (...)** }
%"class.v8::Platform" = type { i32 (...)** }
%"class.v8::internal::JSArrayBuffer" = type { %"class.v8::internal::TorqueGeneratedJSArrayBuffer" }
%"class.v8::internal::TorqueGeneratedJSArrayBuffer" = type { %"class.v8::internal::JSObject" }
%"class.v8::internal::JSObject" = type { %"class.v8::internal::TorqueGeneratedJSObject" }
%"class.v8::internal::TorqueGeneratedJSObject" = type { %"class.v8::internal::JSReceiver" }
%"class.v8::internal::JSReceiver" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::RelocIterator" = type { i8*, i8*, %"class.v8::internal::RelocInfo", i8, i32 }
%"class.v8::internal::RelocInfo" = type { i64, i8, i64, %"class.v8::internal::Code", i64 }
%"class.v8::internal::Code" = type { %"class.v8::internal::HeapObject" }
%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor" = type <{ %"class.v8::internal::ObjectVisitor", %"class.v8::internal::Scavenger"*, i8, [7 x i8] }>
%"class.v8::internal::wasm::ArrayType" = type <{ %"class.v8::internal::wasm::ValueType", i8, [3 x i8] }>
%"class.v8::internal::wasm::ValueType" = type { i32 }
%"class.v8::internal::wasm::StructType" = type { i32, i32*, %"class.v8::internal::wasm::ValueType"*, i8* }
%"class.v8::internal::InvalidatedSlotsFilter" = type { %"class.std::__1::__tree_const_iterator", %"class.std::__1::__tree_const_iterator", i64, i64, i64, i32, %"class.std::__1::set" }
%"class.std::__1::__tree_const_iterator" = type { %"class.std::__1::__tree_end_node"* }
%"class.v8::internal::SlotSet::Bucket" = type { [32 x i32] }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"class.v8::internal::HeapObject" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"class.v8::internal::ScavengeWeakObjectRetainer" = type { %"class.v8::internal::WeakObjectRetainer" }
%"class.v8::internal::WeakObjectRetainer" = type { i32 (...)** }
%"class.v8::internal::Sweeper::PauseOrCompleteScope" = type { %"class.v8::internal::Sweeper"* }
%"class.v8::internal::Sweeper::FilterSweepingPagesScope" = type <{ %"class.v8::internal::Sweeper"*, %"class.std::__1::vector.282", %"class.v8::internal::Sweeper::PauseOrCompleteScope"*, i8, [7 x i8] }>
%"class.std::__1::function" = type { %"class.std::__1::__function::__policy_func" }
%"class.std::__1::__function::__policy_func" = type { %"union.std::__1::__function::__policy_storage", %"struct.std::__1::__function::__policy_invoker", %"struct.std::__1::__function::__policy"* }
%"union.std::__1::__function::__policy_storage" = type { i8*, [8 x i8] }
%"struct.std::__1::__function::__policy_invoker" = type { i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::HeapObject"*)* }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon.865 }
%struct.anon.865 = type { i8 }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.v8::internal::LargePage" = type { %"class.v8::internal::MemoryChunk" }
%"struct.std::__1::__hash_node" = type { %"struct.std::__1::__hash_node_base.1153", i64, %"struct.std::__1::__hash_value_type" }
%"struct.std::__1::__hash_value_type" = type { %"struct.std::__1::pair.1246" }
%"struct.std::__1::pair.1246" = type { %"class.v8::internal::HeapObject", %"class.v8::internal::Map" }
%"struct.std::__1::pair.1245" = type { %"class.v8::internal::HeapObject", %"class.v8::internal::Map" }
%"struct.std::__1::pair.1253" = type { %"class.v8::internal::EphemeronHashTable", %"class.std::__1::unordered_set.1254" }
%"class.std::__1::unordered_set.1254" = type { %"class.std::__1::__hash_table.1255" }
%"class.std::__1::__hash_table.1255" = type <{ %"class.std::__1::unique_ptr.1256", %"class.std::__1::__compressed_pair.1266", %"class.std::__1::__compressed_pair.1271", %"class.std::__1::__compressed_pair.1273", [4 x i8] }>
%"class.std::__1::unique_ptr.1256" = type { %"class.std::__1::__compressed_pair.1257" }
%"class.std::__1::__compressed_pair.1257" = type { %"struct.std::__1::__compressed_pair_elem.1258", %"struct.std::__1::__compressed_pair_elem.1260" }
%"struct.std::__1::__compressed_pair_elem.1258" = type { %"struct.std::__1::__hash_node_base.1259"** }
%"struct.std::__1::__hash_node_base.1259" = type { %"struct.std::__1::__hash_node_base.1259"* }
%"struct.std::__1::__compressed_pair_elem.1260" = type { %"class.std::__1::__bucket_list_deallocator.1261" }
%"class.std::__1::__bucket_list_deallocator.1261" = type { %"class.std::__1::__compressed_pair.1262" }
%"class.std::__1::__compressed_pair.1262" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1266" = type { %"struct.std::__1::__compressed_pair_elem.1267" }
%"struct.std::__1::__compressed_pair_elem.1267" = type { %"struct.std::__1::__hash_node_base.1259" }
%"class.std::__1::__compressed_pair.1271" = type { %"struct.std::__1::__compressed_pair_elem.7" }
%"class.std::__1::__compressed_pair.1273" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__hash_node.1343" = type { %"struct.std::__1::__hash_node_base", i64, %"struct.std::__1::__hash_value_type.1344" }
%"struct.std::__1::__hash_value_type.1344" = type { %"struct.std::__1::pair.1253" }
%"struct.std::__1::__hash_node.1339" = type <{ %"struct.std::__1::__hash_node_base.1259", i64, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1371" = type { %"class.std::__1::__compressed_pair.1372" }
%"class.std::__1::__compressed_pair.1372" = type { %"struct.std::__1::__compressed_pair_elem.1373", %"struct.std::__1::__compressed_pair_elem.1374" }
%"struct.std::__1::__compressed_pair_elem.1373" = type { %"struct.std::__1::__hash_node.1339"* }
%"struct.std::__1::__compressed_pair_elem.1374" = type { %"class.std::__1::__hash_node_destructor.1375" }
%"class.std::__1::__hash_node_destructor.1375" = type <{ %"class.std::__1::allocator.1269"*, i8, [7 x i8] }>
%"class.std::__1::allocator.1269" = type { i8 }
%"class.std::__1::unique_ptr.1362" = type { %"class.std::__1::__compressed_pair.1363" }
%"class.std::__1::__compressed_pair.1363" = type { %"struct.std::__1::__compressed_pair_elem.1364", %"struct.std::__1::__compressed_pair_elem.1365" }
%"struct.std::__1::__compressed_pair_elem.1364" = type { %"struct.std::__1::__hash_node.1343"* }
%"struct.std::__1::__compressed_pair_elem.1365" = type { %"class.std::__1::__hash_node_destructor.1366" }
%"class.std::__1::__hash_node_destructor.1366" = type <{ %"class.std::__1::allocator.12"*, i8, [7 x i8] }>
%"class.std::__1::allocator.12" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.v8::internal::AllocationSite"* }
%"class.v8::internal::AllocationSite" = type { %"class.v8::internal::Struct" }
%"class.v8::internal::Struct" = type { %"class.v8::internal::TorqueGeneratedStruct" }
%"class.v8::internal::TorqueGeneratedStruct" = type { %"class.v8::internal::HeapObject" }
%"class.std::__1::tuple.1327" = type { i8 }

$_ZN2v88internal9Scavenger13PromotionListC2Ei = comdat any

$_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EE3PopEiPS3_ = comdat any

$_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi128EED2Ev = comdat any

$_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EED2Ev = comdat any

$_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EED2Ev = comdat any

$_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE = comdat any

$_ZN2v88internal18ScavengerCollector7JobTaskD2Ev = comdat any

$_ZN2v88internal18ScavengerCollector7JobTaskD0Ev = comdat any

$_ZN2v88internal19RootScavengeVisitorD0Ev = comdat any

$_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ = comdat any

$_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE = comdat any

$_ZN2v88internal15ScavengeVisitorD0Ev = comdat any

$_ZN2v88internal15ScavengeVisitor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal15ScavengeVisitor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_ = comdat any

$_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE = comdat any

$_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal15ScavengeVisitor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal15ScavengeVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm = comdat any

$_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal11HeapVisitorIiNS0_15ScavengeVisitorEE15VisitMapPointerENS0_10HeapObjectE = comdat any

$_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EED2Ev = comdat any

$_ZN2v88internal40IterateAndScavengePromotedObjectsVisitorD0Ev = comdat any

$_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_ = comdat any

$_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ = comdat any

$_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE = comdat any

$_ZN2v88internal13ObjectVisitor15VisitMapPointerENS0_10HeapObjectE = comdat any

$_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE = comdat any

$_ZN2v88internal9Scavenger18EvacuateThinStringINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ThinStringEi = comdat any

$_ZN2v88internal9Scavenger25EvacuateShortcutCandidateINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ConsStringEi = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm = comdat any

$_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE = comdat any

$_ZN2v88internal19EvacuationAllocator24NewLocalAllocationBufferEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm = comdat any

$_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE = comdat any

$_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE3PopEiPS5_ = comdat any

$_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE3PopEiPS3_ = comdat any

$_ZN2v88internal26ScavengeWeakObjectRetainerD0Ev = comdat any

$_ZN2v88internal26ScavengeWeakObjectRetainer8RetainAsENS0_6ObjectE = comdat any

$_ZN2v88internal18WeakObjectRetainerD2Ev = comdat any

$_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE13FlushToGlobalEi = comdat any

$_ZN2v88internal11RootVisitorD2Ev = comdat any

$_ZN2v88internal13ObjectVisitorD2Ev = comdat any

$_ZN2v88internal14IndexGeneratorD2Ev = comdat any

$_ZN2v88internal9ScavengerD2Ev = comdat any

$_ZN2v88internal10LocalSpaceD2Ev = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN2v88internal9ScavengerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJPS4_EEEvDpOT_ = comdat any

$_ZN2v88internal7SlotSet25CheckPossiblyEmptyBucketsEmPNS0_20PossiblyEmptyBucketsE = comdat any

$_ZN2v88internal7SlotSet6Bucket7IsEmptyEv = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRNS_4pairIS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_40IterateAndScavengePromotedObjectsVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_ = comdat any

$_ZN2v88internal15CallIterateBody5applyINS0_13JSArrayBuffer14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_ = comdat any

$_ZN2v88internal15CallIterateBody5applyINS0_10JSDataView14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_ = comdat any

$_ZN2v88internal15CallIterateBody5applyINS0_12JSTypedArray14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_ = comdat any

$_ZN2v88internal15CallIterateBody5applyINS0_9JSWeakRef14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_ = comdat any

$_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_ = comdat any

$_ZN2v88internal18BodyDescriptorBase16IterateEphemeronINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiiPT_ = comdat any

$_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_ = comdat any

$_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_ = comdat any

$_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_SC_EEEEENSO_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE8__rehashEm = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_ = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEm = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm = comdat any

$_ZN2v88internal22InvalidatedSlotsFilter7IsValidEm = comdat any

$_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_ = comdat any

$_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_ = comdat any

$_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIiPvEEEE = comdat any

$_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEE = comdat any

$_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EE13FlushToGlobalEi = comdat any

$_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi128EE13FlushToGlobalEi = comdat any

$_ZN2v88internal9Scavenger18EvacuateThinStringINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ThinStringEi = comdat any

$_ZN2v88internal9Scavenger25EvacuateShortcutCandidateINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ConsStringEi = comdat any

$_ZTVN2v88internal15ScavengeVisitorE = comdat any

$_ZTVN2v88internal40IterateAndScavengePromotedObjectsVisitorE = comdat any

$_ZTVN2v88internal26ScavengeWeakObjectRetainerE = comdat any

@_ZTVN2v88internal18ScavengerCollector7JobTaskE = hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ScavengerCollector::JobTask"*)* @_ZN2v88internal18ScavengerCollector7JobTaskD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ScavengerCollector::JobTask"*)* @_ZN2v88internal18ScavengerCollector7JobTaskD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::ScavengerCollector::JobTask"*, %"class.v8::JobDelegate"*)* @_ZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateE to i8*), i8* bitcast (i64 (%"class.v8::internal::ScavengerCollector::JobTask"*, i64)* @_ZNK2v88internal18ScavengerCollector7JobTask17GetMaxConcurrencyEm to i8*)] }, align 8
@_ZZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic182 = internal global i64 0, align 8
@.str = private unnamed_addr constant [44 x i8] c"devtools.timeline,disabled-by-default-v8.gc\00", align 1
@_ZZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic187 = internal global i64 0, align 8
@.str.1 = private unnamed_addr constant [6 x i8] c"epoch\00", align 1
@_ZN2v88internal28FLAG_trace_parallel_scavengeE = external local_unnamed_addr global i8, align 1
@.str.2 = private unnamed_addr constant [49 x i8] c"scavenge[%p]: time=%.2f copied=%zu promoted=%zu\0A\00", align 1
@_ZN2v88internal24FLAG_concurrent_sweepingE = external local_unnamed_addr global i8, align 1
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic308 = internal global i64 0, align 8
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic314 = internal global i64 0, align 8
@_ZN2v88internal37FLAG_scavenge_separate_stack_scanningE = external local_unnamed_addr global i8, align 1
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic331 = internal global i64 0, align 8
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic352 = internal global i64 0, align 8
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic367 = internal global i64 0, align 8
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic382 = internal global i64 0, align 8
@_ZN2v88internal25FLAG_track_retaining_pathE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal23FLAG_concurrent_markingE = external local_unnamed_addr global i8, align 1
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic413 = internal global i64 0, align 8
@_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic435 = internal global i64 0, align 8
@_ZZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEiE28trace_event_unique_atomic450 = internal global i64 0, align 8
@_ZZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEiE28trace_event_unique_atomic466 = internal global i64 0, align 8
@.str.3 = private unnamed_addr constant [26 x i8] c"disabled-by-default-v8.gc\00", align 1
@.str.4 = private unnamed_addr constant [28 x i8] c"V8.GCScavengerStackScanning\00", align 1
@.str.5 = private unnamed_addr constant [22 x i8] c"survived_bytes_before\00", align 1
@.str.6 = private unnamed_addr constant [21 x i8] c"survived_bytes_after\00", align 1
@_ZN2v88internal21FLAG_trace_gc_verboseE = external local_unnamed_addr global i8, align 1
@_ZN2v88internal30FLAG_trace_gc_ignore_scavengerE = external local_unnamed_addr global i8, align 1
@.str.7 = private unnamed_addr constant [85 x i8] c"Scavenge stack scanning: survived_before=%4zuKB, survived_after=%4zuKB delta=%.1f%%\0A\00", align 1
@_ZN2v88internal22FLAG_parallel_scavengeE = external local_unnamed_addr global i8, align 1
@_ZZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEvE9num_cores = internal unnamed_addr global i32 0, align 4
@_ZGVZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEvE9num_cores = internal global i64 0, align 8
@_ZTVN2v88internal19RootScavengeVisitorE = hidden unnamed_addr constant { [8 x i8*] } { [8 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::RootVisitor"*)* @_ZN2v88internal11RootVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::RootScavengeVisitor"*)* @_ZN2v88internal19RootScavengeVisitorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::RootScavengeVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal19RootScavengeVisitor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootScavengeVisitor"*, i32, i8*, i64)* @_ZN2v88internal19RootScavengeVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64)* @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_ to i8*), i8* bitcast (void (%"class.v8::internal::RootVisitor"*, i32)* @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE to i8*)] }, align 8
@_ZTVN2v88internal15ScavengeVisitorE = linkonce_odr hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*)* @_ZN2v88internal13ObjectVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ScavengeVisitor"*)* @_ZN2v88internal15ScavengeVisitorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::ScavengeVisitor"*, i64, i64, i64)* @_ZN2v88internal15ScavengeVisitor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ScavengeVisitor"*, i64, i64, i64)* @_ZN2v88internal15ScavengeVisitor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)* @_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64)* @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ScavengeVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal15ScavengeVisitor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ScavengeVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal15ScavengeVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)* @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE to i8*), i8* bitcast (void (%"class.v8::internal::HeapVisitor"*, i64)* @_ZN2v88internal11HeapVisitorIiNS0_15ScavengeVisitorEE15VisitMapPointerENS0_10HeapObjectE to i8*)] }, comdat, align 8
@.str.10 = private unnamed_addr constant [18 x i8] c"Check failed: %s.\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"IsEmpty()\00", align 1
@_ZTVN2v88internal15CompactionSpaceE = external unnamed_addr constant { [25 x i8*] }, align 8
@_ZTVN2v88internal10LocalSpaceE = external unnamed_addr constant { [25 x i8*] }, align 8
@_ZTVN2v88internal40IterateAndScavengePromotedObjectsVisitorE = linkonce_odr hidden unnamed_addr constant { [20 x i8*] } { [20 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*)* @_ZN2v88internal13ObjectVisitorD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*)* @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitorD0Ev to i8*), i8* bitcast (void (%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, i64, i64)* @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, i64, i64)* @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)* @_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64)* @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE to i8*), i8* bitcast (void (%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, i32, i64, i64)* @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_ to i8*), i8* bitcast (void (%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, i64*)* @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*)* @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*)* @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE to i8*), i8* bitcast (void (%"class.v8::internal::ObjectVisitor"*, i64)* @_ZN2v88internal13ObjectVisitor15VisitMapPointerENS0_10HeapObjectE to i8*)] }, comdat, align 8
@.str.13 = private unnamed_addr constant [27 x i8] c"Scavenger: semi-space copy\00", align 1
@.str.14 = private unnamed_addr constant [17 x i8] c"unreachable code\00", align 1
@_ZN2v88internal30FLAG_trace_allocations_originsE = external local_unnamed_addr global i8, align 1
@.str.15 = private unnamed_addr constant [16 x i8] c"!object.IsSmi()\00", align 1
@.str.16 = private unnamed_addr constant [22 x i8] c"!allocation.IsRetry()\00", align 1
@_ZN2v88internal32FLAG_allocation_site_pretenuringE = external local_unnamed_addr global i8, align 1
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1
@.str.17 = private unnamed_addr constant [34 x i8] c"address < start || address >= end\00", align 1
@.str.18 = private unnamed_addr constant [17 x i8] c"!host_.is_null()\00", align 1
@_ZN2v88internal12FLAG_jitlessE = external local_unnamed_addr global i8, align 1
@_ZTVN2v88internal26ScavengeWeakObjectRetainerE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.v8::internal::WeakObjectRetainer"*)* @_ZN2v88internal18WeakObjectRetainerD2Ev to i8*), i8* bitcast (void (%"class.v8::internal::ScavengeWeakObjectRetainer"*)* @_ZN2v88internal26ScavengeWeakObjectRetainerD0Ev to i8*), i8* bitcast (i64 (%"class.v8::internal::ScavengeWeakObjectRetainer"*, i64)* @_ZN2v88internal26ScavengeWeakObjectRetainer8RetainAsENS0_6ObjectE to i8*)] }, comdat, align 8
@_ZTVN2v88internal10PagedSpaceE = external unnamed_addr constant { [25 x i8*] }, align 8
@_ZTVN2v88internal5SpaceE = external unnamed_addr constant { [18 x i8*] }, align 8
@"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal18ScavengerCollector14CollectGarbageEvE3$_2FbNS5_10HeapObjectEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_" = internal constant %"struct.std::__1::__function::__policy" zeroinitializer, align 8
@.str.19 = private unnamed_addr constant [18 x i8] c"Unknown type: %d\0A\00", align 1
@_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize = internal unnamed_addr constant [13 x i8] c"\FF\04\08\04\08\10\01\02\04\04\04\04\FF", align 1

@_ZN2v88internal18ScavengerCollector7JobTaskC1EPS1_PNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEENS5_INS4_4pairINS0_16ParallelWorkItemEPNS0_11MemoryChunkEEENSB_ISJ_EEEEPNS0_8WorklistINSF_INS0_10HeapObjectEiEELi256EEEPNS7_13PromotionListE = hidden unnamed_addr alias void (%"class.v8::internal::ScavengerCollector::JobTask"*, %"class.v8::internal::ScavengerCollector"*, %"class.std::__1::vector.1172"*, %"class.std::__1::vector.1193"*, %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Scavenger::PromotionList"*), void (%"class.v8::internal::ScavengerCollector::JobTask"*, %"class.v8::internal::ScavengerCollector"*, %"class.std::__1::vector.1172"*, %"class.std::__1::vector.1193"*, %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Scavenger::PromotionList"*)* @_ZN2v88internal18ScavengerCollector7JobTaskC2EPS1_PNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEENS5_INS4_4pairINS0_16ParallelWorkItemEPNS0_11MemoryChunkEEENSB_ISJ_EEEEPNS0_8WorklistINSF_INS0_10HeapObjectEiEELi256EEEPNS7_13PromotionListE
@_ZN2v88internal18ScavengerCollectorC1EPNS0_4HeapE = hidden unnamed_addr alias void (%"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::Heap"*), void (%"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::Heap"*)* @_ZN2v88internal18ScavengerCollectorC2EPNS0_4HeapE
@_ZN2v88internal9ScavengerC1EPNS0_18ScavengerCollectorEPNS0_4HeapEbPNS0_8WorklistIPNS0_11MemoryChunkELi64EEEPNS6_INSt3__14pairINS0_10HeapObjectEiEELi256EEEPNS1_13PromotionListEPNS6_INS0_18EphemeronHashTableELi128EEEi = hidden unnamed_addr alias void (%"class.v8::internal::Scavenger"*, %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::Heap"*, i1, %"class.v8::internal::Worklist.1177"*, %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Worklist.1183"*, i32), void (%"class.v8::internal::Scavenger"*, %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::Heap"*, i1, %"class.v8::internal::Worklist.1177"*, %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Worklist.1183"*, i32)* @_ZN2v88internal9ScavengerC2EPNS0_18ScavengerCollectorEPNS0_4HeapEbPNS0_8WorklistIPNS0_11MemoryChunkELi64EEEPNS6_INSt3__14pairINS0_10HeapObjectEiEELi256EEEPNS1_13PromotionListEPNS6_INS0_18EphemeronHashTableELi128EEEi
@_ZN2v88internal19RootScavengeVisitorC1EPNS0_9ScavengerE = hidden unnamed_addr alias void (%"class.v8::internal::RootScavengeVisitor"*, %"class.v8::internal::Scavenger"*), void (%"class.v8::internal::RootScavengeVisitor"*, %"class.v8::internal::Scavenger"*)* @_ZN2v88internal19RootScavengeVisitorC2EPNS0_9ScavengerE
@_ZN2v88internal15ScavengeVisitorC1EPNS0_9ScavengerE = hidden unnamed_addr alias void (%"class.v8::internal::ScavengeVisitor"*, %"class.v8::internal::Scavenger"*), void (%"class.v8::internal::ScavengeVisitor"*, %"class.v8::internal::Scavenger"*)* @_ZN2v88internal15ScavengeVisitorC2EPNS0_9ScavengerE

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector7JobTaskC2EPS1_PNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEENS5_INS4_4pairINS0_16ParallelWorkItemEPNS0_11MemoryChunkEEENSB_ISJ_EEEEPNS0_8WorklistINSF_INS0_10HeapObjectEiEELi256EEEPNS7_13PromotionListE(%"class.v8::internal::ScavengerCollector::JobTask"*, %"class.v8::internal::ScavengerCollector"*, %"class.std::__1::vector.1172"*, %"class.std::__1::vector.1193"* nocapture, %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Scavenger::PromotionList"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal18ScavengerCollector7JobTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 1
  store %"class.v8::internal::ScavengerCollector"* %1, %"class.v8::internal::ScavengerCollector"** %8, align 8
  %9 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 2
  store %"class.std::__1::vector.1172"* %2, %"class.std::__1::vector.1172"** %9, align 8
  %10 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3
  %11 = bitcast %"class.std::__1::vector.1193"* %10 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 24, i1 false) #12
  %12 = bitcast %"class.std::__1::vector.1193"* %3 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector.1193"* %10 to i64*
  store i64 %13, i64* %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::vector.1193", %"class.std::__1::vector.1193"* %3, i64 0, i32 0, i32 1
  %16 = bitcast %"struct.std::__1::pair.1195"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 1
  %19 = bitcast %"struct.std::__1::pair.1195"** %18 to i64*
  store i64 %17, i64* %19, align 8
  %20 = getelementptr inbounds %"class.std::__1::vector.1193", %"class.std::__1::vector.1193"* %3, i64 0, i32 0, i32 2, i32 0, i32 0
  %21 = bitcast %"struct.std::__1::pair.1195"** %20 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 2, i32 0, i32 0
  %24 = bitcast %"struct.std::__1::pair.1195"** %23 to i64*
  store i64 %22, i64* %24, align 8
  %25 = bitcast %"class.std::__1::vector.1193"* %3 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #12
  %26 = load i64, i64* %19, align 8
  %27 = load i64, i64* %14, align 8
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 4
  %30 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 5
  tail call void @_ZN2v88internal14IndexGeneratorC1Em(%"class.v8::internal::IndexGenerator"* %31, i64 %29) #12
  %32 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 6
  store %"class.v8::internal::Worklist.1179"* %4, %"class.v8::internal::Worklist.1179"** %32, align 8
  %33 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 7
  store %"class.v8::internal::Scavenger::PromotionList"* %5, %"class.v8::internal::Scavenger::PromotionList"** %33, align 8
  ret void
}

declare void @_ZN2v88internal14IndexGeneratorC1Em(%"class.v8::internal::IndexGenerator"*, i64) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateE(%"class.v8::internal::ScavengerCollector::JobTask"*, %"class.v8::JobDelegate"*) unnamed_addr #0 align 2 {
  %3 = alloca [2 x %"class.std::__1::unique_ptr.1300"], align 16
  %4 = alloca i8*, align 8
  %5 = alloca i8, align 1
  %6 = alloca i64, align 8
  %7 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %8 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %9 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %10 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %11 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 2
  %12 = load %"class.std::__1::vector.1172"*, %"class.std::__1::vector.1172"** %11, align 8
  %13 = bitcast %"class.v8::JobDelegate"* %1 to i8 (%"class.v8::JobDelegate"*)***
  %14 = load i8 (%"class.v8::JobDelegate"*)**, i8 (%"class.v8::JobDelegate"*)*** %13, align 8
  %15 = getelementptr inbounds i8 (%"class.v8::JobDelegate"*)*, i8 (%"class.v8::JobDelegate"*)** %14, i64 2
  %16 = load i8 (%"class.v8::JobDelegate"*)*, i8 (%"class.v8::JobDelegate"*)** %15, align 8
  %17 = tail call zeroext i8 %16(%"class.v8::JobDelegate"* %1) #12
  %18 = zext i8 %17 to i64
  %19 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %12, i64 0, i32 0, i32 0
  %20 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %19, align 8
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %20, i64 %18, i32 0, i32 0, i32 0
  %22 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %21, align 8
  %23 = bitcast %"class.v8::JobDelegate"* %1 to i1 (%"class.v8::JobDelegate"*)***
  %24 = load i1 (%"class.v8::JobDelegate"*)**, i1 (%"class.v8::JobDelegate"*)*** %23, align 8
  %25 = getelementptr inbounds i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %24, i64 3
  %26 = load i1 (%"class.v8::JobDelegate"*)*, i1 (%"class.v8::JobDelegate"*)** %25, align 8
  %27 = tail call zeroext i1 %26(%"class.v8::JobDelegate"* %1) #12
  br i1 %27, label %28, label %106

28:                                               ; preds = %2
  %29 = bitcast %"class.v8::internal::GCTracer::Scope"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %29) #12
  %30 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 1
  %31 = load %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::ScavengerCollector"** %30, align 8
  %32 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %31, i64 0, i32 1
  %33 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %32, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %33, i64 0, i32 80, i32 0, i32 0, i32 0
  %35 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %34, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %7, %"class.v8::internal::GCTracer"* %35, i32 101, i32 0) #12
  %36 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic182 monotonic, align 8
  %37 = inttoptr i64 %36 to i8*
  %38 = icmp eq i64 %36, 0
  br i1 %38, label %39, label %47

39:                                               ; preds = %28
  %40 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %41 = bitcast %"class.v8::TracingController"* %40 to i8* (%"class.v8::TracingController"*, i8*)***
  %42 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %41, align 8
  %43 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %42, i64 2
  %44 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %43, align 8
  %45 = call i8* %44(%"class.v8::TracingController"* %40, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %46 = ptrtoint i8* %45 to i64
  store atomic volatile i64 %46, i64* @_ZZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic182 monotonic, align 8
  br label %47

47:                                               ; preds = %28, %39
  %48 = phi i8* [ %37, %28 ], [ %45, %39 ]
  %49 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %49) #12
  %50 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %50, align 8
  %51 = load atomic i8, i8* %48 monotonic, align 1
  %52 = and i8 %51, 5
  %53 = icmp eq i8 %52, 0
  br i1 %53, label %87, label %54

54:                                               ; preds = %47
  %55 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 101) #12
  %56 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %56) #12
  %57 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %56, i8 0, i64 16, i1 false) #12
  %58 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %59 = bitcast %"class.v8::TracingController"* %58 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %60 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %59, align 8
  %61 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %60, i64 3
  %62 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %61, align 8
  %63 = call i64 %62(%"class.v8::TracingController"* %58, i8 signext 88, i8* %48, i8* %55, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %57, i32 0) #12
  %64 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %65 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %64, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %64, align 8
  %66 = icmp eq %"class.v8::ConvertableToTraceFormat"* %65, null
  br i1 %66, label %72, label %67

67:                                               ; preds = %54
  %68 = bitcast %"class.v8::ConvertableToTraceFormat"* %65 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %69 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %68, align 8
  %70 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %69, i64 1
  %71 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %70, align 8
  call void %71(%"class.v8::ConvertableToTraceFormat"* nonnull %65) #12
  br label %72

72:                                               ; preds = %67, %54
  %73 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %73, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %73, align 16
  %75 = icmp eq %"class.v8::ConvertableToTraceFormat"* %74, null
  br i1 %75, label %81, label %76

76:                                               ; preds = %72
  %77 = bitcast %"class.v8::ConvertableToTraceFormat"* %74 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %78 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %77, align 8
  %79 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %78, i64 1
  %80 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %79, align 8
  call void %80(%"class.v8::ConvertableToTraceFormat"* nonnull %74) #12
  br label %81

81:                                               ; preds = %72, %76
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %56) #12
  %82 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 101) #12
  %83 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1
  %84 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %83, i64 0, i32 0
  store i8* %48, i8** %84, align 8
  %85 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  store i8* %82, i8** %85, align 8
  %86 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  store i64 %63, i64* %86, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %83, %"struct.v8::internal::tracing::ScopedTracer::Data"** %50, align 8
  br label %87

87:                                               ; preds = %47, %81
  call void @_ZN2v88internal18ScavengerCollector7JobTask12ProcessItemsEPNS_11JobDelegateEPNS0_9ScavengerE(%"class.v8::internal::ScavengerCollector::JobTask"* %0, %"class.v8::JobDelegate"* %1, %"class.v8::internal::Scavenger"* %22)
  %88 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %50, align 8
  %89 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %88, null
  br i1 %89, label %193, label %90

90:                                               ; preds = %87
  %91 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = load atomic i8, i8* %92 monotonic, align 1
  %94 = icmp eq i8 %93, 0
  br i1 %94, label %193, label %95

95:                                               ; preds = %90
  %96 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %97 = load i8*, i8** %91, align 8
  %98 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 1
  %99 = load i8*, i8** %98, align 8
  %100 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %8, i64 0, i32 1, i32 2
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.v8::TracingController"* %96 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %103 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %102, align 8
  %104 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %103, i64 5
  %105 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %104, align 8
  call void %105(%"class.v8::TracingController"* %96, i8* %97, i8* %99, i64 %101) #12
  br label %193

106:                                              ; preds = %2
  %107 = bitcast %"class.v8::internal::GCTracer::Scope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %107) #12
  %108 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 1
  %109 = load %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::ScavengerCollector"** %108, align 8
  %110 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %109, i64 0, i32 1
  %111 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %110, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %111, i64 0, i32 80, i32 0, i32 0, i32 0
  %113 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %112, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %9, %"class.v8::internal::GCTracer"* %113, i32 123, i32 1) #12
  %114 = load %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::ScavengerCollector"** %108, align 8
  %115 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %114, i64 0, i32 1
  %116 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %115, align 8
  %117 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %116, i64 0, i32 80, i32 0, i32 0, i32 0
  %118 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %117, align 8
  %119 = call i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"* %118, i32 123) #12
  %120 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic187 monotonic, align 8
  %121 = inttoptr i64 %120 to i8*
  %122 = icmp eq i64 %120, 0
  br i1 %122, label %123, label %131

123:                                              ; preds = %106
  %124 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %125 = bitcast %"class.v8::TracingController"* %124 to i8* (%"class.v8::TracingController"*, i8*)***
  %126 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %125, align 8
  %127 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %126, i64 2
  %128 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %127, align 8
  %129 = call i8* %128(%"class.v8::TracingController"* %124, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %130 = ptrtoint i8* %129 to i64
  store atomic volatile i64 %130, i64* @_ZZN2v88internal18ScavengerCollector7JobTask3RunEPNS_11JobDelegateEE28trace_event_unique_atomic187 monotonic, align 8
  br label %131

131:                                              ; preds = %106, %123
  %132 = phi i8* [ %121, %106 ], [ %129, %123 ]
  %133 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %133) #12
  %134 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %134, align 8
  %135 = load atomic i8, i8* %132 monotonic, align 1
  %136 = and i8 %135, 5
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %174, label %138

138:                                              ; preds = %131
  %139 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 123) #12
  %140 = bitcast i8** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %140)
  store i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0), i8** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %5) #12
  %141 = bitcast i64* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %141) #12
  store i8 2, i8* %5, align 1
  %142 = zext i32 %119 to i64
  store i64 %142, i64* %6, align 8
  %143 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %143) #12
  %144 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %3, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %143, i8 0, i64 16, i1 false) #12
  %145 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %146 = bitcast %"class.v8::TracingController"* %145 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %147 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %146, align 8
  %148 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %147, i64 3
  %149 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %148, align 8
  %150 = call i64 %149(%"class.v8::TracingController"* %145, i8 signext 88, i8* %132, i8* %139, i8* null, i64 0, i64 0, i32 1, i8** nonnull %4, i8* nonnull %5, i64* nonnull %6, %"class.std::__1::unique_ptr.1300"* nonnull %144, i32 0) #12
  %151 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %3, i64 0, i64 1, i32 0, i32 0, i32 0
  %152 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %151, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %151, align 8
  %153 = icmp eq %"class.v8::ConvertableToTraceFormat"* %152, null
  br i1 %153, label %159, label %154

154:                                              ; preds = %138
  %155 = bitcast %"class.v8::ConvertableToTraceFormat"* %152 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %156 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %156, i64 1
  %158 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %157, align 8
  call void %158(%"class.v8::ConvertableToTraceFormat"* nonnull %152) #12
  br label %159

159:                                              ; preds = %154, %138
  %160 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %3, i64 0, i64 0, i32 0, i32 0, i32 0
  %161 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %160, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %160, align 16
  %162 = icmp eq %"class.v8::ConvertableToTraceFormat"* %161, null
  br i1 %162, label %168, label %163

163:                                              ; preds = %159
  %164 = bitcast %"class.v8::ConvertableToTraceFormat"* %161 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %165 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %165, i64 1
  %167 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %166, align 8
  call void %167(%"class.v8::ConvertableToTraceFormat"* nonnull %161) #12
  br label %168

168:                                              ; preds = %159, %163
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %143) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %141) #12
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %140)
  %169 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 123) #12
  %170 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1
  %171 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %170, i64 0, i32 0
  store i8* %132, i8** %171, align 8
  %172 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  store i8* %169, i8** %172, align 8
  %173 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  store i64 %150, i64* %173, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %170, %"struct.v8::internal::tracing::ScopedTracer::Data"** %134, align 8
  br label %174

174:                                              ; preds = %131, %168
  call void @_ZN2v88internal18ScavengerCollector7JobTask12ProcessItemsEPNS_11JobDelegateEPNS0_9ScavengerE(%"class.v8::internal::ScavengerCollector::JobTask"* %0, %"class.v8::JobDelegate"* %1, %"class.v8::internal::Scavenger"* %22)
  %175 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %134, align 8
  %176 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %175, null
  br i1 %176, label %193, label %177

177:                                              ; preds = %174
  %178 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 0
  %179 = load i8*, i8** %178, align 8
  %180 = load atomic i8, i8* %179 monotonic, align 1
  %181 = icmp eq i8 %180, 0
  br i1 %181, label %193, label %182

182:                                              ; preds = %177
  %183 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %184 = load i8*, i8** %178, align 8
  %185 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  %186 = load i8*, i8** %185, align 8
  %187 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  %188 = load i64, i64* %187, align 8
  %189 = bitcast %"class.v8::TracingController"* %183 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %190 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %189, align 8
  %191 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %190, i64 5
  %192 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %191, align 8
  call void %192(%"class.v8::TracingController"* %183, i8* %184, i8* %186, i64 %188) #12
  br label %193

193:                                              ; preds = %182, %177, %174, %95, %90, %87
  %194 = phi i8* [ %49, %87 ], [ %49, %90 ], [ %49, %95 ], [ %133, %174 ], [ %133, %177 ], [ %133, %182 ]
  %195 = phi %"class.v8::internal::GCTracer::Scope"* [ %7, %87 ], [ %7, %90 ], [ %7, %95 ], [ %9, %174 ], [ %9, %177 ], [ %9, %182 ]
  %196 = phi i8* [ %29, %87 ], [ %29, %90 ], [ %29, %95 ], [ %107, %174 ], [ %107, %177 ], [ %107, %182 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %194) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %195) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %196) #12
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"*, %"class.v8::internal::GCTracer"*, i32, i32) unnamed_addr #1

declare %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() local_unnamed_addr #1

declare i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector7JobTask12ProcessItemsEPNS_11JobDelegateEPNS0_9ScavengerE(%"class.v8::internal::ScavengerCollector::JobTask"*, %"class.v8::JobDelegate"*, %"class.v8::internal::Scavenger"*) local_unnamed_addr #0 align 2 {
  %4 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #12
  %5 = bitcast %"class.v8::Platform"* %4 to double (%"class.v8::Platform"*)***
  %6 = load double (%"class.v8::Platform"*)**, double (%"class.v8::Platform"*)*** %5, align 8
  %7 = getelementptr inbounds double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %6, i64 13
  %8 = load double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %7, align 8
  %9 = tail call double %8(%"class.v8::Platform"* %4) #12
  %10 = fmul double %9, 1.000000e+03
  %11 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i64, i64* %11 monotonic, align 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %54, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 5
  %16 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3
  %17 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 1
  %18 = bitcast %"struct.std::__1::pair.1195"** %17 to i64*
  %19 = bitcast %"class.std::__1::vector.1193"* %16 to i64*
  br label %20

20:                                               ; preds = %51, %14
  %21 = tail call { i8, i64 } @_ZN2v88internal14IndexGenerator7GetNextEv(%"class.v8::internal::IndexGenerator"* %15) #12
  %22 = extractvalue { i8, i64 } %21, 0
  %23 = extractvalue { i8, i64 } %21, 1
  %24 = icmp eq i8 %22, 0
  br i1 %24, label %54, label %25

25:                                               ; preds = %20
  %26 = load i64, i64* %18, align 8
  %27 = load i64, i64* %19, align 8
  %28 = sub i64 %26, %27
  %29 = ashr exact i64 %28, 4
  %30 = icmp ult i64 %23, %29
  br i1 %30, label %37, label %51

31:                                               ; preds = %45
  %32 = load i64, i64* %18, align 8
  %33 = load i64, i64* %19, align 8
  %34 = sub i64 %32, %33
  %35 = ashr exact i64 %34, 4
  %36 = icmp ult i64 %50, %35
  br i1 %36, label %37, label %51

37:                                               ; preds = %25, %31
  %38 = phi i64 [ %33, %31 ], [ %27, %25 ]
  %39 = phi i64 [ %50, %31 ], [ %23, %25 ]
  %40 = inttoptr i64 %38 to %"struct.std::__1::pair.1195"*
  %41 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %40, i64 %39, i32 0, i32 0
  %42 = atomicrmw xchg i8* %41, i8 1 monotonic
  %43 = and i8 %42, 1
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %45, label %51

45:                                               ; preds = %37
  %46 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %40, i64 %39, i32 1
  %47 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %46, align 8
  tail call void @_ZN2v88internal9Scavenger12ScavengePageEPNS0_11MemoryChunkE(%"class.v8::internal::Scavenger"* %2, %"class.v8::internal::MemoryChunk"* %47) #12
  %48 = atomicrmw sub i64* %11, i64 1 monotonic
  %49 = icmp ult i64 %48, 2
  %50 = add nuw i64 %39, 1
  br i1 %49, label %54, label %31

51:                                               ; preds = %37, %31, %25
  %52 = load atomic i64, i64* %11 monotonic, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %54, label %20

54:                                               ; preds = %20, %51, %45, %3
  tail call void @_ZN2v88internal9Scavenger7ProcessEPNS_11JobDelegateE(%"class.v8::internal::Scavenger"* %2, %"class.v8::JobDelegate"* %1)
  %55 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #12
  %56 = bitcast %"class.v8::Platform"* %55 to double (%"class.v8::Platform"*)***
  %57 = load double (%"class.v8::Platform"*)**, double (%"class.v8::Platform"*)*** %56, align 8
  %58 = getelementptr inbounds double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %57, i64 13
  %59 = load double (%"class.v8::Platform"*)*, double (%"class.v8::Platform"*)** %58, align 8
  %60 = tail call double %59(%"class.v8::Platform"* %55) #12
  %61 = load i8, i8* @_ZN2v88internal28FLAG_trace_parallel_scavengeE, align 1, !range !2
  %62 = icmp eq i8 %61, 0
  br i1 %62, label %77, label %63

63:                                               ; preds = %54
  %64 = fmul double %60, 1.000000e+03
  %65 = fsub double %64, %10
  %66 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 1
  %67 = load %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::ScavengerCollector"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %67, i64 0, i32 1
  %69 = bitcast %"class.v8::internal::Heap"** %68 to i64*
  %70 = load i64, i64* %69, align 8
  %71 = add i64 %70, -41416
  %72 = inttoptr i64 %71 to i8*
  %73 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %2, i64 0, i32 7
  %74 = load i64, i64* %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %2, i64 0, i32 8
  %76 = load i64, i64* %75, align 8
  tail call void (i8*, i8*, ...) @_ZN2v88internal12PrintIsolateEPvPKcz(i8* %72, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.2, i64 0, i64 0), %"class.v8::internal::ScavengerCollector::JobTask"* %0, double %65, i64 %74, i64 %76) #12
  br label %77

77:                                               ; preds = %54, %63
  ret void
}

; Function Attrs: nounwind
declare void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"*) unnamed_addr #3

declare i32 @_ZN2v88internal8GCTracer12CurrentEpochENS1_5Scope7ScopeIdE(%"class.v8::internal::GCTracer"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK2v88internal18ScavengerCollector7JobTask17GetMaxConcurrencyEm(%"class.v8::internal::ScavengerCollector::JobTask"* nocapture readonly, i64) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 2
  %4 = load %"class.std::__1::vector.1172"*, %"class.std::__1::vector.1172"** %3, align 8
  %5 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %4, i64 0, i32 0, i32 1
  %6 = bitcast %"class.std::__1::unique_ptr.1174"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = bitcast %"class.std::__1::vector.1172"* %4 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = sub i64 %7, %9
  %11 = ashr exact i64 %10, 3
  %12 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i64, i64* %12 monotonic, align 8
  %14 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 6
  %15 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %15, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 monotonic, align 8
  %18 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 7
  %19 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %19, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i64, i64* %20 monotonic, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %19, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i64, i64* %22 monotonic, align 8
  %24 = add i64 %17, %1
  %25 = add i64 %24, %21
  %26 = add i64 %25, %23
  %27 = icmp ult i64 %13, %26
  %28 = select i1 %27, i64 %26, i64 %13
  %29 = icmp ult i64 %28, %11
  %30 = select i1 %29, i64 %28, i64 %11
  ret i64 %30
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector7JobTask23ConcurrentScavengePagesEPNS0_9ScavengerE(%"class.v8::internal::ScavengerCollector::JobTask"*, %"class.v8::internal::Scavenger"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %46, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 5
  %8 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3
  %9 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair.1195"** %9 to i64*
  %11 = bitcast %"class.std::__1::vector.1193"* %8 to i64*
  br label %12

12:                                               ; preds = %6, %43
  %13 = tail call { i8, i64 } @_ZN2v88internal14IndexGenerator7GetNextEv(%"class.v8::internal::IndexGenerator"* %7) #12
  %14 = extractvalue { i8, i64 } %13, 0
  %15 = extractvalue { i8, i64 } %13, 1
  %16 = icmp eq i8 %14, 0
  br i1 %16, label %46, label %17

17:                                               ; preds = %12
  %18 = load i64, i64* %10, align 8
  %19 = load i64, i64* %11, align 8
  %20 = sub i64 %18, %19
  %21 = ashr exact i64 %20, 4
  %22 = icmp ult i64 %15, %21
  br i1 %22, label %29, label %43

23:                                               ; preds = %37
  %24 = load i64, i64* %10, align 8
  %25 = load i64, i64* %11, align 8
  %26 = sub i64 %24, %25
  %27 = ashr exact i64 %26, 4
  %28 = icmp ult i64 %42, %27
  br i1 %28, label %29, label %43

29:                                               ; preds = %17, %23
  %30 = phi i64 [ %25, %23 ], [ %19, %17 ]
  %31 = phi i64 [ %42, %23 ], [ %15, %17 ]
  %32 = inttoptr i64 %30 to %"struct.std::__1::pair.1195"*
  %33 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %32, i64 %31, i32 0, i32 0
  %34 = atomicrmw xchg i8* %33, i8 1 monotonic
  %35 = and i8 %34, 1
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %37, label %43

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %32, i64 %31, i32 1
  %39 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %38, align 8
  tail call void @_ZN2v88internal9Scavenger12ScavengePageEPNS0_11MemoryChunkE(%"class.v8::internal::Scavenger"* %1, %"class.v8::internal::MemoryChunk"* %39)
  %40 = atomicrmw sub i64* %3, i64 1 monotonic
  %41 = icmp ult i64 %40, 2
  %42 = add nuw i64 %31, 1
  br i1 %41, label %46, label %23

43:                                               ; preds = %23, %29, %17
  %44 = load atomic i64, i64* %3 monotonic, align 8
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %46, label %12

46:                                               ; preds = %43, %12, %37, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger7ProcessEPNS_11JobDelegateE(%"class.v8::internal::Scavenger"*, %"class.v8::JobDelegate"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::pair.1282", align 8
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = alloca %"class.v8::internal::HeapObject", align 8
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = alloca %"class.v8::internal::JSArrayBuffer", align 8
  %8 = alloca %"class.v8::internal::EphemeronHashTable", align 8
  %9 = alloca %"class.v8::internal::HeapObject", align 8
  %10 = alloca %"class.v8::internal::HeapObject", align 8
  %11 = alloca %"class.v8::internal::RelocIterator", align 8
  %12 = alloca %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", align 8
  %13 = alloca %"class.v8::internal::JSArrayBuffer", align 8
  %14 = alloca %"class.v8::internal::ScavengeVisitor", align 8
  %15 = alloca %"struct.std::__1::pair.1282", align 8
  %16 = alloca %"struct.v8::internal::Scavenger::PromotionListEntry", align 8
  %17 = bitcast %"class.v8::internal::ScavengeVisitor"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal15ScavengeVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %14, i64 0, i32 1
  store %"class.v8::internal::Scavenger"* %0, %"class.v8::internal::Scavenger"** %19, align 8
  %20 = bitcast %"struct.std::__1::pair.1282"* %15 to i8*
  %21 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %15, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %15, i64 0, i32 1
  %23 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %25 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %26 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %27 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %14, i64 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.v8::internal::HeapVisitor", %"class.v8::internal::HeapVisitor"* %27, i64 1
  %29 = bitcast %"class.v8::internal::HeapVisitor"* %28 to %"class.v8::internal::Scavenger"**
  %30 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %14, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.v8::internal::ScavengeVisitor"* %14 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %32 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  %33 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.v8::internal::HeapObject"* %5 to i8*
  %35 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  %37 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.v8::internal::JSArrayBuffer"* %7 to i8*
  %39 = getelementptr inbounds %"class.v8::internal::JSArrayBuffer", %"class.v8::internal::JSArrayBuffer"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.v8::internal::EphemeronHashTable"* %8 to i8*
  %41 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.v8::internal::HeapObject"* %9 to i8*
  %44 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %9, i64 0, i32 0, i32 0, i32 0
  %45 = bitcast %"class.v8::internal::HeapObject"* %10 to i8*
  %46 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %10, i64 0, i32 0, i32 0, i32 0
  %47 = bitcast %"class.v8::internal::RelocIterator"* %11 to i8*
  %48 = icmp eq %"class.v8::JobDelegate"* %1, null
  %49 = bitcast %"class.v8::JobDelegate"* %1 to void (%"class.v8::JobDelegate"*)***
  %50 = bitcast %"struct.v8::internal::Scavenger::PromotionListEntry"* %16 to i8*
  %51 = bitcast %"struct.std::__1::pair.1282"* %3 to i8*
  %52 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %53 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3, i64 0, i32 1
  %54 = getelementptr inbounds %"struct.v8::internal::Scavenger::PromotionListEntry", %"struct.v8::internal::Scavenger::PromotionListEntry"* %16, i64 0, i32 0, i32 0, i32 0, i32 0
  %55 = getelementptr inbounds %"struct.v8::internal::Scavenger::PromotionListEntry", %"struct.v8::internal::Scavenger::PromotionListEntry"* %16, i64 0, i32 2
  %56 = getelementptr inbounds %"struct.v8::internal::Scavenger::PromotionListEntry", %"struct.v8::internal::Scavenger::PromotionListEntry"* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 14
  %58 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %12 to i8*
  %59 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %12, i64 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %12, i64 0, i32 1
  %61 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %12, i64 0, i32 2
  %62 = bitcast %"class.v8::internal::JSArrayBuffer"* %13 to i8*
  %63 = getelementptr inbounds %"class.v8::internal::JSArrayBuffer", %"class.v8::internal::JSArrayBuffer"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %64

64:                                               ; preds = %2401, %2
  %65 = phi i64 [ 0, %2 ], [ %2402, %2401 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #12
  store i64 0, i64* %21, align 8
  store i32 0, i32* %22, align 8
  %66 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %23, align 8
  %67 = load i32, i32* %24, align 8
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %66, i64 0, i32 0, i32 0, i64 %68, i32 0
  %70 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %70, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %66, i64 0, i32 1, i32 0, i64 %68, i32 0
  %74 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %73, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %74, i64 0, i32 1
  %76 = load i64, i64* %75, align 8
  %77 = add i64 %76, %72
  %78 = icmp ult i64 %77, 128
  br i1 %78, label %79, label %2254

79:                                               ; preds = %64
  %80 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %25, align 8
  %81 = load i32, i32* %26, align 8
  %82 = call zeroext i1 @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE3PopEiPS5_(%"class.v8::internal::Worklist.1179"* %80, i32 %81, %"struct.std::__1::pair.1282"* nonnull %15) #12
  br i1 %82, label %87, label %2254

83:                                               ; preds = %2239
  %84 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %25, align 8
  %85 = load i32, i32* %26, align 8
  %86 = call zeroext i1 @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE3PopEiPS5_(%"class.v8::internal::Worklist.1179"* %84, i32 %85, %"struct.std::__1::pair.1282"* nonnull %15) #12
  br i1 %86, label %87, label %2254

87:                                               ; preds = %79, %83
  %88 = phi i64 [ %2240, %83 ], [ %65, %79 ]
  %89 = load i64, i64* %21, align 8
  %90 = and i64 %89, -4294967296
  %91 = add i64 %89, -1
  %92 = inttoptr i64 %91 to i32*
  %93 = load atomic i32, i32* %92 monotonic, align 4
  %94 = zext i32 %93 to i64
  %95 = or i64 %90, %94
  %96 = add i64 %95, 6
  %97 = inttoptr i64 %96 to i8*
  %98 = load atomic i8, i8* %97 monotonic, align 1
  switch i8 %98, label %2223 [
    i8 7, label %99
    i8 0, label %136
    i8 1, label %140
    i8 8, label %144
    i8 9, label %145
    i8 10, label %171
    i8 11, label %198
    i8 2, label %2224
    i8 12, label %204
    i8 13, label %260
    i8 14, label %273
    i8 15, label %329
    i8 4, label %355
    i8 5, label %359
    i8 18, label %363
    i8 19, label %396
    i8 20, label %428
    i8 21, label %434
    i8 23, label %440
    i8 51, label %477
    i8 25, label %478
    i8 24, label %484
    i8 26, label %520
    i8 27, label %551
    i8 28, label %582
    i8 29, label %622
    i8 30, label %650
    i8 31, label %676
    i8 33, label %733
    i8 34, label %765
    i8 35, label %796
    i8 36, label %827
    i8 38, label %878
    i8 39, label %910
    i8 40, label %936
    i8 41, label %987
    i8 42, label %1024
    i8 43, label %1096
    i8 44, label %1122
    i8 45, label %2224
    i8 46, label %1148
    i8 47, label %1176
    i8 48, label %1182
    i8 49, label %1208
    i8 50, label %1264
    i8 52, label %1274
    i8 53, label %1308
    i8 54, label %1334
    i8 55, label %1368
    i8 56, label %1405
    i8 57, label %1439
    i8 58, label %1537
    i8 59, label %1572
    i8 60, label %1607
    i8 61, label %1642
    i8 62, label %1679
    i8 63, label %1708
    i8 64, label %1709
    i8 65, label %1735
    i8 66, label %1746
    i8 67, label %1772
    i8 68, label %1798
    i8 69, label %1802
    i8 70, label %1806
    i8 71, label %1832
    i8 72, label %1858
    i8 73, label %1884
    i8 74, label %1910
    i8 75, label %1936
    i8 76, label %1962
    i8 77, label %2224
    i8 78, label %2224
    i8 79, label %1994
    i8 80, label %2028
    i8 81, label %2062
    i8 82, label %2094
    i8 32, label %2120
    i8 3, label %2146
    i8 22, label %2150
    i8 17, label %2181
    i8 37, label %2187
    i8 16, label %2218
    i8 6, label %2222
    i8 83, label %2222
  ]

99:                                               ; preds = %87
  %100 = add i64 %95, 3
  %101 = inttoptr i64 %100 to i8*
  %102 = load atomic i8, i8* %101 monotonic, align 1
  %103 = add i64 %89, 3
  %104 = add i64 %89, 15
  %105 = icmp ult i64 %103, %104
  br i1 %105, label %106, label %128

106:                                              ; preds = %99, %125
  %107 = phi i64 [ %126, %125 ], [ %103, %99 ]
  %108 = inttoptr i64 %107 to i32*
  %109 = load i32, i32* %108, align 4
  %110 = and i64 %107, -4294967296
  %111 = zext i32 %109 to i64
  %112 = or i64 %110, %111
  %113 = and i64 %111, 1
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %125, label %115

115:                                              ; preds = %106
  %116 = and i64 %112, -262144
  %117 = inttoptr i64 %116 to %"class.v8::internal::BasicMemoryChunk"*
  %118 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %117, i64 0, i32 1
  %119 = load i64, i64* %118, align 8
  %120 = and i64 %119, 24
  %121 = icmp eq i64 %120, 0
  br i1 %121, label %125, label %122

122:                                              ; preds = %115
  %123 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %124 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %123, i64 %107, i64 %112) #12
  br label %125

125:                                              ; preds = %122, %115, %106
  %126 = add i64 %107, 4
  %127 = icmp ult i64 %126, %104
  br i1 %127, label %106, label %128

128:                                              ; preds = %125, %99
  %129 = icmp eq i8 %102, 7
  br i1 %129, label %130, label %2224

130:                                              ; preds = %128
  %131 = add i64 %89, 23
  %132 = add i64 %89, 27
  %133 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %134 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %133, i64 2
  %135 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %134, align 8
  call void %135(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %131, i64 %132) #12
  br label %2224

136:                                              ; preds = %87
  %137 = add i64 %89, 3
  %138 = inttoptr i64 %137 to i32*
  %139 = load atomic i32, i32* %138 acquire, align 4
  br label %2224

140:                                              ; preds = %87
  %141 = add i64 %89, 3
  %142 = inttoptr i64 %141 to i32*
  %143 = load atomic i32, i32* %142 acquire, align 4
  br label %2224

144:                                              ; preds = %87
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

145:                                              ; preds = %87
  %146 = add i64 %89, 3
  %147 = add i64 %89, 7
  %148 = icmp ult i64 %146, %147
  br i1 %148, label %149, label %2224

149:                                              ; preds = %145, %168
  %150 = phi i64 [ %169, %168 ], [ %146, %145 ]
  %151 = inttoptr i64 %150 to i32*
  %152 = load i32, i32* %151, align 4
  %153 = and i64 %150, -4294967296
  %154 = zext i32 %152 to i64
  %155 = or i64 %153, %154
  %156 = and i64 %154, 1
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %168, label %158

158:                                              ; preds = %149
  %159 = and i64 %155, -262144
  %160 = inttoptr i64 %159 to %"class.v8::internal::BasicMemoryChunk"*
  %161 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %160, i64 0, i32 1
  %162 = load i64, i64* %161, align 8
  %163 = and i64 %162, 24
  %164 = icmp eq i64 %163, 0
  br i1 %164, label %168, label %165

165:                                              ; preds = %158
  %166 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %167 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %166, i64 %150, i64 %155) #12
  br label %168

168:                                              ; preds = %165, %158, %149
  %169 = add i64 %150, 4
  %170 = icmp ult i64 %169, %147
  br i1 %170, label %149, label %2224

171:                                              ; preds = %87
  %172 = add i64 %89, 19
  %173 = add i64 %89, 3
  %174 = icmp ult i64 %173, %172
  br i1 %174, label %175, label %197

175:                                              ; preds = %171, %194
  %176 = phi i64 [ %195, %194 ], [ %173, %171 ]
  %177 = inttoptr i64 %176 to i32*
  %178 = load i32, i32* %177, align 4
  %179 = and i64 %176, -4294967296
  %180 = zext i32 %178 to i64
  %181 = or i64 %179, %180
  %182 = and i64 %180, 1
  %183 = icmp eq i64 %182, 0
  br i1 %183, label %194, label %184

184:                                              ; preds = %175
  %185 = and i64 %181, -262144
  %186 = inttoptr i64 %185 to %"class.v8::internal::BasicMemoryChunk"*
  %187 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %186, i64 0, i32 1
  %188 = load i64, i64* %187, align 8
  %189 = and i64 %188, 24
  %190 = icmp eq i64 %189, 0
  br i1 %190, label %194, label %191

191:                                              ; preds = %184
  %192 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %193 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %192, i64 %176, i64 %181) #12
  br label %194

194:                                              ; preds = %191, %184, %175
  %195 = add i64 %176, 4
  %196 = icmp ult i64 %195, %172
  br i1 %196, label %175, label %197

197:                                              ; preds = %194, %171
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %47) #12
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %11, i64 %89, i32 7998) #12
  call void @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE(%"class.v8::internal::ObjectVisitor"* nonnull %30, %"class.v8::internal::RelocIterator"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %47) #12
  br label %2224

198:                                              ; preds = %87
  %199 = add i64 %89, 3
  %200 = add i64 %89, 7
  %201 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %202 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %201, i64 2
  %203 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %202, align 8
  call void %203(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %199, i64 %200) #12
  br label %2224

204:                                              ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #12
  store i64 %89, i64* %46, align 8
  %205 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %10, i64 %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #12
  %206 = add i64 %89, 3
  %207 = add i64 %89, 11
  %208 = icmp ult i64 %206, %207
  br i1 %208, label %209, label %231

209:                                              ; preds = %204, %228
  %210 = phi i64 [ %229, %228 ], [ %206, %204 ]
  %211 = inttoptr i64 %210 to i32*
  %212 = load i32, i32* %211, align 4
  %213 = and i64 %210, -4294967296
  %214 = zext i32 %212 to i64
  %215 = or i64 %213, %214
  %216 = and i64 %214, 1
  %217 = icmp eq i64 %216, 0
  br i1 %217, label %228, label %218

218:                                              ; preds = %209
  %219 = and i64 %215, -262144
  %220 = inttoptr i64 %219 to %"class.v8::internal::BasicMemoryChunk"*
  %221 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %220, i64 0, i32 1
  %222 = load i64, i64* %221, align 8
  %223 = and i64 %222, 24
  %224 = icmp eq i64 %223, 0
  br i1 %224, label %228, label %225

225:                                              ; preds = %218
  %226 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %227 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %226, i64 %210, i64 %215) #12
  br label %228

228:                                              ; preds = %225, %218, %209
  %229 = add i64 %210, 4
  %230 = icmp ult i64 %229, %207
  br i1 %230, label %209, label %231

231:                                              ; preds = %228, %204
  %232 = sext i32 %205 to i64
  %233 = add i64 %91, %232
  %234 = icmp ult i64 %207, %233
  br i1 %234, label %235, label %2224

235:                                              ; preds = %231, %257
  %236 = phi i64 [ %258, %257 ], [ %207, %231 ]
  %237 = inttoptr i64 %236 to i32*
  %238 = load i32, i32* %237, align 4
  %239 = zext i32 %238 to i64
  %240 = and i64 %239, 1
  %241 = icmp ne i64 %240, 0
  %242 = icmp ne i32 %238, 3
  %243 = and i1 %242, %241
  br i1 %243, label %244, label %257

244:                                              ; preds = %235
  %245 = and i64 %236, -4294967296
  %246 = and i64 %239, 4294967293
  %247 = or i64 %246, %245
  %248 = and i64 %247, -262144
  %249 = inttoptr i64 %248 to %"class.v8::internal::BasicMemoryChunk"*
  %250 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %249, i64 0, i32 1
  %251 = load i64, i64* %250, align 8
  %252 = and i64 %251, 24
  %253 = icmp eq i64 %252, 0
  br i1 %253, label %257, label %254

254:                                              ; preds = %244
  %255 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %256 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %255, i64 %236, i64 %247) #12
  br label %257

257:                                              ; preds = %254, %244, %235
  %258 = add i64 %236, 4
  %259 = icmp ult i64 %258, %233
  br i1 %259, label %235, label %2224

260:                                              ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #12
  store i64 %89, i64* %44, align 8
  %261 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %9, i64 %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #12
  %262 = icmp sgt i32 %261, 8
  br i1 %262, label %263, label %2224

263:                                              ; preds = %260, %263
  %264 = phi i64 [ %270, %263 ], [ 8, %260 ]
  %265 = add i64 %264, %91
  %266 = add i64 %265, 4
  %267 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %268 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %267, i64 2
  %269 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %268, align 8
  call void %269(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %265, i64 %266) #12
  %270 = add nuw i64 %264, 8
  %271 = trunc i64 %270 to i32
  %272 = icmp sgt i32 %261, %271
  br i1 %272, label %263, label %2224

273:                                              ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #12
  store i64 %89, i64* %41, align 8
  %274 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %275 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %274, i64 0, i32 5, i32 0
  %276 = load %"class.v8::internal::Worklist.1183"*, %"class.v8::internal::Worklist.1183"** %275, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %274, i64 0, i32 5, i32 1
  %278 = load i32, i32* %277, align 8
  %279 = sext i32 %278 to i64
  %280 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %276, i64 0, i32 0, i64 %279, i32 0
  %281 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %280, align 8
  %282 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %281, i64 0, i32 1
  %283 = load i64, i64* %282, align 8
  %284 = icmp eq i64 %283, 128
  br i1 %284, label %288, label %285

285:                                              ; preds = %273
  %286 = add i64 %283, 1
  store i64 %286, i64* %282, align 8
  %287 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %281, i64 0, i32 2, i64 %283, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %304

288:                                              ; preds = %273
  %289 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %276, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %289) #12
  %290 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %276, i64 0, i32 1, i32 1
  %291 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %290 to i64*
  %292 = load i64, i64* %291, align 8
  %293 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %281 to i64*
  store i64 %292, i64* %293, align 8
  %294 = ptrtoint %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %281 to i64
  store atomic volatile i64 %294, i64* %291 monotonic, align 8
  %295 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %276, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %296 = atomicrmw add i64* %295, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %289) #12
  %297 = call i8* @_Znwm(i64 1040) #17
  %298 = getelementptr inbounds i8, i8* %297, i64 24
  call void @llvm.memset.p0i8.i64(i8* align 8 %298, i8 0, i64 1016, i1 false) #12
  %299 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %280 to i8**
  store i8* %297, i8** %299, align 8
  %300 = getelementptr inbounds i8, i8* %297, i64 8
  %301 = bitcast i8* %300 to i64*
  store i64 1, i64* %301, align 8
  %302 = getelementptr inbounds i8, i8* %297, i64 16
  %303 = bitcast i8* %302 to i64*
  br label %304

304:                                              ; preds = %288, %285
  %305 = phi i64* [ %303, %288 ], [ %287, %285 ]
  store i64 %89, i64* %305, align 8
  %306 = load i64, i64* %41, align 8
  %307 = add i64 %306, 15
  %308 = inttoptr i64 %307 to i32*
  %309 = load atomic i32, i32* %308 monotonic, align 4
  %310 = ashr i32 %309, 1
  %311 = sext i32 %310 to i64
  %312 = icmp eq i32 %310, 0
  br i1 %312, label %327, label %313

313:                                              ; preds = %304, %313
  %314 = phi i64 [ %325, %313 ], [ 0, %304 ]
  %315 = trunc i64 %314 to i32
  %316 = shl i32 %315, 3
  %317 = add i32 %316, 16
  %318 = or i32 %317, 7
  %319 = sext i32 %318 to i64
  %320 = add i64 %306, %319
  %321 = add i64 %320, 4
  %322 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %323 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %322, i64 2
  %324 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %323, align 8
  call void %324(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %306, i64 %320, i64 %321) #12
  %325 = add i64 %314, 1
  %326 = icmp eq i64 %325, %311
  br i1 %326, label %327, label %313

327:                                              ; preds = %313, %304
  %328 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %42, i64 %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #12
  br label %2224

329:                                              ; preds = %87
  %330 = add i64 %89, 3
  %331 = add i64 %89, 7
  %332 = icmp ult i64 %330, %331
  br i1 %332, label %333, label %2224

333:                                              ; preds = %329, %352
  %334 = phi i64 [ %353, %352 ], [ %330, %329 ]
  %335 = inttoptr i64 %334 to i32*
  %336 = load i32, i32* %335, align 4
  %337 = and i64 %334, -4294967296
  %338 = zext i32 %336 to i64
  %339 = or i64 %337, %338
  %340 = and i64 %338, 1
  %341 = icmp eq i64 %340, 0
  br i1 %341, label %352, label %342

342:                                              ; preds = %333
  %343 = and i64 %339, -262144
  %344 = inttoptr i64 %343 to %"class.v8::internal::BasicMemoryChunk"*
  %345 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %344, i64 0, i32 1
  %346 = load i64, i64* %345, align 8
  %347 = and i64 %346, 24
  %348 = icmp eq i64 %347, 0
  br i1 %348, label %352, label %349

349:                                              ; preds = %342
  %350 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %351 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %350, i64 %334, i64 %339) #12
  br label %352

352:                                              ; preds = %349, %342, %333
  %353 = add i64 %334, 4
  %354 = icmp ult i64 %353, %331
  br i1 %354, label %333, label %2224

355:                                              ; preds = %87
  %356 = add i64 %89, 3
  %357 = inttoptr i64 %356 to i32*
  %358 = load atomic i32, i32* %357 acquire, align 4
  br label %2224

359:                                              ; preds = %87
  %360 = add i64 %89, 3
  %361 = inttoptr i64 %360 to i32*
  %362 = load atomic i32, i32* %361 acquire, align 4
  br label %2224

363:                                              ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #12
  store i64 %89, i64* %39, align 8
  call void @_ZN2v88internal13JSArrayBuffer18YoungMarkExtensionEv(%"class.v8::internal::JSArrayBuffer"* nonnull %7) #12
  %364 = add i64 %95, 3
  %365 = inttoptr i64 %364 to i8*
  %366 = load atomic i8, i8* %365 monotonic, align 1
  %367 = zext i8 %366 to i32
  %368 = shl nuw nsw i32 %367, 2
  %369 = load i64, i64* %39, align 8
  %370 = add i64 %369, 3
  %371 = add i64 %369, 11
  %372 = icmp ult i64 %370, %371
  br i1 %372, label %373, label %395

373:                                              ; preds = %363, %392
  %374 = phi i64 [ %393, %392 ], [ %370, %363 ]
  %375 = inttoptr i64 %374 to i32*
  %376 = load i32, i32* %375, align 4
  %377 = and i64 %374, -4294967296
  %378 = zext i32 %376 to i64
  %379 = or i64 %377, %378
  %380 = and i64 %378, 1
  %381 = icmp eq i64 %380, 0
  br i1 %381, label %392, label %382

382:                                              ; preds = %373
  %383 = and i64 %379, -262144
  %384 = inttoptr i64 %383 to %"class.v8::internal::BasicMemoryChunk"*
  %385 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %384, i64 0, i32 1
  %386 = load i64, i64* %385, align 8
  %387 = and i64 %386, 24
  %388 = icmp eq i64 %387, 0
  br i1 %388, label %392, label %389

389:                                              ; preds = %382
  %390 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %391 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %390, i64 %374, i64 %379) #12
  br label %392

392:                                              ; preds = %389, %382, %373
  %393 = add i64 %374, 4
  %394 = icmp ult i64 %393, %371
  br i1 %394, label %373, label %395

395:                                              ; preds = %392, %363
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %369, i32 48, i32 %368, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #12
  br label %2224

396:                                              ; preds = %87
  %397 = add i64 %95, 3
  %398 = inttoptr i64 %397 to i8*
  %399 = load atomic i8, i8* %398 monotonic, align 1
  %400 = zext i8 %399 to i32
  %401 = shl nuw nsw i32 %400, 2
  %402 = add i64 %89, 3
  %403 = add i64 %89, 15
  %404 = icmp ult i64 %402, %403
  br i1 %404, label %405, label %427

405:                                              ; preds = %396, %424
  %406 = phi i64 [ %425, %424 ], [ %402, %396 ]
  %407 = inttoptr i64 %406 to i32*
  %408 = load i32, i32* %407, align 4
  %409 = and i64 %406, -4294967296
  %410 = zext i32 %408 to i64
  %411 = or i64 %409, %410
  %412 = and i64 %410, 1
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %424, label %414

414:                                              ; preds = %405
  %415 = and i64 %411, -262144
  %416 = inttoptr i64 %415 to %"class.v8::internal::BasicMemoryChunk"*
  %417 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %416, i64 0, i32 1
  %418 = load i64, i64* %417, align 8
  %419 = and i64 %418, 24
  %420 = icmp eq i64 %419, 0
  br i1 %420, label %424, label %421

421:                                              ; preds = %414
  %422 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %423 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %422, i64 %406, i64 %411) #12
  br label %424

424:                                              ; preds = %421, %414, %405
  %425 = add i64 %406, 4
  %426 = icmp ult i64 %425, %403
  br i1 %426, label %405, label %427

427:                                              ; preds = %424, %396
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %89, i32 40, i32 %401, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

428:                                              ; preds = %87
  %429 = add i64 %95, 3
  %430 = inttoptr i64 %429 to i8*
  %431 = load atomic i8, i8* %430 monotonic, align 1
  %432 = zext i8 %431 to i32
  %433 = shl nuw nsw i32 %432, 2
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %89, i32 4, i32 %433, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

434:                                              ; preds = %87
  %435 = add i64 %95, 3
  %436 = inttoptr i64 %435 to i8*
  %437 = load atomic i8, i8* %436 monotonic, align 1
  %438 = zext i8 %437 to i32
  %439 = shl nuw nsw i32 %438, 2
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %89, i32 4, i32 %439, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

440:                                              ; preds = %87
  %441 = add i64 %95, 3
  %442 = inttoptr i64 %441 to i8*
  %443 = load atomic i8, i8* %442 monotonic, align 1
  %444 = zext i8 %443 to i32
  %445 = shl nuw nsw i32 %444, 2
  %446 = add i64 %89, 3
  %447 = add i64 %89, 15
  %448 = icmp ult i64 %446, %447
  br i1 %448, label %449, label %471

449:                                              ; preds = %440, %468
  %450 = phi i64 [ %469, %468 ], [ %446, %440 ]
  %451 = inttoptr i64 %450 to i32*
  %452 = load i32, i32* %451, align 4
  %453 = and i64 %450, -4294967296
  %454 = zext i32 %452 to i64
  %455 = or i64 %453, %454
  %456 = and i64 %454, 1
  %457 = icmp eq i64 %456, 0
  br i1 %457, label %468, label %458

458:                                              ; preds = %449
  %459 = and i64 %455, -262144
  %460 = inttoptr i64 %459 to %"class.v8::internal::BasicMemoryChunk"*
  %461 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %460, i64 0, i32 1
  %462 = load i64, i64* %461, align 8
  %463 = and i64 %462, 24
  %464 = icmp eq i64 %463, 0
  br i1 %464, label %468, label %465

465:                                              ; preds = %458
  %466 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %467 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %466, i64 %450, i64 %455) #12
  br label %468

468:                                              ; preds = %465, %458, %449
  %469 = add i64 %450, 4
  %470 = icmp ult i64 %469, %447
  br i1 %470, label %449, label %471

471:                                              ; preds = %468, %440
  %472 = add i64 %89, 47
  %473 = add i64 %89, 51
  %474 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %475 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %474, i64 2
  %476 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %475, align 8
  call void %476(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %472, i64 %473) #12
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %89, i32 56, i32 %445, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

477:                                              ; preds = %87
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

478:                                              ; preds = %87
  %479 = add i64 %95, 3
  %480 = inttoptr i64 %479 to i8*
  %481 = load atomic i8, i8* %480 monotonic, align 1
  %482 = zext i8 %481 to i32
  %483 = shl nuw nsw i32 %482, 2
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %89, i32 4, i32 %483, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

484:                                              ; preds = %87
  %485 = add i64 %95, 3
  %486 = inttoptr i64 %485 to i8*
  %487 = load atomic i8, i8* %486 monotonic, align 1
  %488 = zext i8 %487 to i32
  %489 = shl nuw nsw i32 %488, 2
  %490 = add i64 %89, 3
  %491 = add i64 %89, 11
  %492 = icmp ult i64 %490, %491
  br i1 %492, label %493, label %515

493:                                              ; preds = %484, %512
  %494 = phi i64 [ %513, %512 ], [ %490, %484 ]
  %495 = inttoptr i64 %494 to i32*
  %496 = load i32, i32* %495, align 4
  %497 = and i64 %494, -4294967296
  %498 = zext i32 %496 to i64
  %499 = or i64 %497, %498
  %500 = and i64 %498, 1
  %501 = icmp eq i64 %500, 0
  br i1 %501, label %512, label %502

502:                                              ; preds = %493
  %503 = and i64 %499, -262144
  %504 = inttoptr i64 %503 to %"class.v8::internal::BasicMemoryChunk"*
  %505 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %504, i64 0, i32 1
  %506 = load i64, i64* %505, align 8
  %507 = and i64 %506, 24
  %508 = icmp eq i64 %507, 0
  br i1 %508, label %512, label %509

509:                                              ; preds = %502
  %510 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %511 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %510, i64 %494, i64 %499) #12
  br label %512

512:                                              ; preds = %509, %502, %493
  %513 = add i64 %494, 4
  %514 = icmp ult i64 %513, %491
  br i1 %514, label %493, label %515

515:                                              ; preds = %512, %484
  %516 = add i64 %89, 15
  %517 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %518 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %517, i64 4
  %519 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %518, align 8
  call void %519(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %491, i64 %516) #12
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %89, i32 16, i32 %489, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

520:                                              ; preds = %87
  %521 = add i64 %89, 15
  %522 = add i64 %89, 35
  %523 = icmp ult i64 %521, %522
  br i1 %523, label %524, label %546

524:                                              ; preds = %520, %543
  %525 = phi i64 [ %544, %543 ], [ %521, %520 ]
  %526 = inttoptr i64 %525 to i32*
  %527 = load i32, i32* %526, align 4
  %528 = and i64 %525, -4294967296
  %529 = zext i32 %527 to i64
  %530 = or i64 %528, %529
  %531 = and i64 %529, 1
  %532 = icmp eq i64 %531, 0
  br i1 %532, label %543, label %533

533:                                              ; preds = %524
  %534 = and i64 %530, -262144
  %535 = inttoptr i64 %534 to %"class.v8::internal::BasicMemoryChunk"*
  %536 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %535, i64 0, i32 1
  %537 = load i64, i64* %536, align 8
  %538 = and i64 %537, 24
  %539 = icmp eq i64 %538, 0
  br i1 %539, label %543, label %540

540:                                              ; preds = %533
  %541 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %542 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %541, i64 %525, i64 %530) #12
  br label %543

543:                                              ; preds = %540, %533, %524
  %544 = add i64 %525, 4
  %545 = icmp ult i64 %544, %522
  br i1 %545, label %524, label %546

546:                                              ; preds = %543, %520
  %547 = add i64 %89, 39
  %548 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %549 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %548, i64 3
  %550 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %549, align 8
  call void %550(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %522, i64 %547) #12
  br label %2224

551:                                              ; preds = %87
  %552 = add i64 %89, 3
  %553 = add i64 %89, 1015
  %554 = icmp ult i64 %552, %553
  br i1 %554, label %555, label %577

555:                                              ; preds = %551, %574
  %556 = phi i64 [ %575, %574 ], [ %552, %551 ]
  %557 = inttoptr i64 %556 to i32*
  %558 = load i32, i32* %557, align 4
  %559 = and i64 %556, -4294967296
  %560 = zext i32 %558 to i64
  %561 = or i64 %559, %560
  %562 = and i64 %560, 1
  %563 = icmp eq i64 %562, 0
  br i1 %563, label %574, label %564

564:                                              ; preds = %555
  %565 = and i64 %561, -262144
  %566 = inttoptr i64 %565 to %"class.v8::internal::BasicMemoryChunk"*
  %567 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %566, i64 0, i32 1
  %568 = load i64, i64* %567, align 8
  %569 = and i64 %568, 24
  %570 = icmp eq i64 %569, 0
  br i1 %570, label %574, label %571

571:                                              ; preds = %564
  %572 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %573 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %572, i64 %556, i64 %561) #12
  br label %574

574:                                              ; preds = %571, %564, %555
  %575 = add i64 %556, 4
  %576 = icmp ult i64 %575, %553
  br i1 %576, label %555, label %577

577:                                              ; preds = %574, %551
  %578 = add i64 %89, 1027
  %579 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %580 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %579, i64 2
  %581 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %580, align 8
  call void %581(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %553, i64 %578) #12
  br label %2224

582:                                              ; preds = %87
  %583 = add i64 %89, 3
  %584 = inttoptr i64 %583 to i32*
  %585 = load i32, i32* %584, align 4
  %586 = add i64 %89, 7
  %587 = inttoptr i64 %586 to i32*
  %588 = load i32, i32* %587, align 4
  %589 = add i32 %585, 15
  %590 = and i32 %589, -4
  %591 = shl i32 %588, 2
  %592 = add nsw i32 %590, %591
  %593 = icmp eq i32 %590, 0
  %594 = select i1 %593, i32 4, i32 %590
  %595 = sext i32 %594 to i64
  %596 = add i64 %91, %595
  %597 = sext i32 %592 to i64
  %598 = add i64 %91, %597
  %599 = icmp ult i64 %596, %598
  br i1 %599, label %600, label %2224

600:                                              ; preds = %582, %619
  %601 = phi i64 [ %620, %619 ], [ %596, %582 ]
  %602 = inttoptr i64 %601 to i32*
  %603 = load i32, i32* %602, align 4
  %604 = and i64 %601, -4294967296
  %605 = zext i32 %603 to i64
  %606 = or i64 %604, %605
  %607 = and i64 %605, 1
  %608 = icmp eq i64 %607, 0
  br i1 %608, label %619, label %609

609:                                              ; preds = %600
  %610 = and i64 %606, -262144
  %611 = inttoptr i64 %610 to %"class.v8::internal::BasicMemoryChunk"*
  %612 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %611, i64 0, i32 1
  %613 = load i64, i64* %612, align 8
  %614 = and i64 %613, 24
  %615 = icmp eq i64 %614, 0
  br i1 %615, label %619, label %616

616:                                              ; preds = %609
  %617 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %618 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %617, i64 %601, i64 %606) #12
  br label %619

619:                                              ; preds = %616, %609, %600
  %620 = add i64 %601, 4
  %621 = icmp ult i64 %620, %598
  br i1 %621, label %600, label %2224

622:                                              ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #12
  store i64 %89, i64* %37, align 8
  %623 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #12
  %624 = add i64 %89, 7
  %625 = sext i32 %623 to i64
  %626 = add i64 %91, %625
  %627 = icmp ult i64 %624, %626
  br i1 %627, label %628, label %2224

628:                                              ; preds = %622, %647
  %629 = phi i64 [ %648, %647 ], [ %624, %622 ]
  %630 = inttoptr i64 %629 to i32*
  %631 = load i32, i32* %630, align 4
  %632 = and i64 %629, -4294967296
  %633 = zext i32 %631 to i64
  %634 = or i64 %632, %633
  %635 = and i64 %633, 1
  %636 = icmp eq i64 %635, 0
  br i1 %636, label %647, label %637

637:                                              ; preds = %628
  %638 = and i64 %634, -262144
  %639 = inttoptr i64 %638 to %"class.v8::internal::BasicMemoryChunk"*
  %640 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %639, i64 0, i32 1
  %641 = load i64, i64* %640, align 8
  %642 = and i64 %641, 24
  %643 = icmp eq i64 %642, 0
  br i1 %643, label %647, label %644

644:                                              ; preds = %637
  %645 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %646 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %645, i64 %629, i64 %634) #12
  br label %647

647:                                              ; preds = %644, %637, %628
  %648 = add i64 %629, 4
  %649 = icmp ult i64 %648, %626
  br i1 %649, label %628, label %2224

650:                                              ; preds = %87
  %651 = add i64 %89, 3
  %652 = add i64 %89, 19
  %653 = icmp ult i64 %651, %652
  br i1 %653, label %654, label %2224

654:                                              ; preds = %650, %673
  %655 = phi i64 [ %674, %673 ], [ %651, %650 ]
  %656 = inttoptr i64 %655 to i32*
  %657 = load i32, i32* %656, align 4
  %658 = and i64 %655, -4294967296
  %659 = zext i32 %657 to i64
  %660 = or i64 %658, %659
  %661 = and i64 %659, 1
  %662 = icmp eq i64 %661, 0
  br i1 %662, label %673, label %663

663:                                              ; preds = %654
  %664 = and i64 %660, -262144
  %665 = inttoptr i64 %664 to %"class.v8::internal::BasicMemoryChunk"*
  %666 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %665, i64 0, i32 1
  %667 = load i64, i64* %666, align 8
  %668 = and i64 %667, 24
  %669 = icmp eq i64 %668, 0
  br i1 %669, label %673, label %670

670:                                              ; preds = %663
  %671 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %672 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %671, i64 %655, i64 %660) #12
  br label %673

673:                                              ; preds = %670, %663, %654
  %674 = add i64 %655, 4
  %675 = icmp ult i64 %674, %652
  br i1 %675, label %654, label %2224

676:                                              ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #12
  store i64 %89, i64* %35, align 8
  %677 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %5, i64 %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #12
  %678 = add i64 %89, 3
  %679 = add i64 %89, 19
  %680 = icmp ult i64 %678, %679
  br i1 %680, label %681, label %703

681:                                              ; preds = %676, %700
  %682 = phi i64 [ %701, %700 ], [ %678, %676 ]
  %683 = inttoptr i64 %682 to i32*
  %684 = load i32, i32* %683, align 4
  %685 = and i64 %682, -4294967296
  %686 = zext i32 %684 to i64
  %687 = or i64 %685, %686
  %688 = and i64 %686, 1
  %689 = icmp eq i64 %688, 0
  br i1 %689, label %700, label %690

690:                                              ; preds = %681
  %691 = and i64 %687, -262144
  %692 = inttoptr i64 %691 to %"class.v8::internal::BasicMemoryChunk"*
  %693 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %692, i64 0, i32 1
  %694 = load i64, i64* %693, align 8
  %695 = and i64 %694, 24
  %696 = icmp eq i64 %695, 0
  br i1 %696, label %700, label %697

697:                                              ; preds = %690
  %698 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %699 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %698, i64 %682, i64 %687) #12
  br label %700

700:                                              ; preds = %697, %690, %681
  %701 = add i64 %682, 4
  %702 = icmp ult i64 %701, %679
  br i1 %702, label %681, label %703

703:                                              ; preds = %700, %676
  %704 = add i64 %89, 23
  %705 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %706 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %705, i64 3
  %707 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %706, align 8
  call void %707(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %679, i64 %704) #12
  %708 = sext i32 %677 to i64
  %709 = add i64 %91, %708
  %710 = icmp ult i64 %704, %709
  br i1 %710, label %711, label %2224

711:                                              ; preds = %703, %730
  %712 = phi i64 [ %731, %730 ], [ %704, %703 ]
  %713 = inttoptr i64 %712 to i32*
  %714 = load i32, i32* %713, align 4
  %715 = and i64 %712, -4294967296
  %716 = zext i32 %714 to i64
  %717 = or i64 %715, %716
  %718 = and i64 %716, 1
  %719 = icmp eq i64 %718, 0
  br i1 %719, label %730, label %720

720:                                              ; preds = %711
  %721 = and i64 %717, -262144
  %722 = inttoptr i64 %721 to %"class.v8::internal::BasicMemoryChunk"*
  %723 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %722, i64 0, i32 1
  %724 = load i64, i64* %723, align 8
  %725 = and i64 %724, 24
  %726 = icmp eq i64 %725, 0
  br i1 %726, label %730, label %727

727:                                              ; preds = %720
  %728 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %729 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %728, i64 %712, i64 %717) #12
  br label %730

730:                                              ; preds = %727, %720, %711
  %731 = add i64 %712, 4
  %732 = icmp ult i64 %731, %709
  br i1 %732, label %711, label %2224

733:                                              ; preds = %87
  %734 = add i64 %89, 5
  %735 = inttoptr i64 %734 to i8*
  %736 = load i8, i8* %735, align 1
  %737 = zext i8 %736 to i64
  %738 = shl nuw nsw i64 %737, 4
  %739 = or i64 %738, 8
  %740 = add i64 %89, 7
  %741 = add i64 %739, %91
  %742 = icmp ult i64 %740, %741
  br i1 %742, label %743, label %2224

743:                                              ; preds = %733, %762
  %744 = phi i64 [ %763, %762 ], [ %740, %733 ]
  %745 = inttoptr i64 %744 to i32*
  %746 = load i32, i32* %745, align 4
  %747 = and i64 %744, -4294967296
  %748 = zext i32 %746 to i64
  %749 = or i64 %747, %748
  %750 = and i64 %748, 1
  %751 = icmp eq i64 %750, 0
  br i1 %751, label %762, label %752

752:                                              ; preds = %743
  %753 = and i64 %749, -262144
  %754 = inttoptr i64 %753 to %"class.v8::internal::BasicMemoryChunk"*
  %755 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %754, i64 0, i32 1
  %756 = load i64, i64* %755, align 8
  %757 = and i64 %756, 24
  %758 = icmp eq i64 %757, 0
  br i1 %758, label %762, label %759

759:                                              ; preds = %752
  %760 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %761 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %760, i64 %744, i64 %749) #12
  br label %762

762:                                              ; preds = %759, %752, %743
  %763 = add i64 %744, 4
  %764 = icmp ult i64 %763, %741
  br i1 %764, label %743, label %2224

765:                                              ; preds = %87
  %766 = add i64 %89, 5
  %767 = inttoptr i64 %766 to i8*
  %768 = load i8, i8* %767, align 1
  %769 = zext i8 %768 to i64
  %770 = shl nuw nsw i64 %769, 3
  %771 = add i64 %89, 7
  %772 = add i64 %770, %771
  %773 = icmp ult i64 %771, %772
  br i1 %773, label %774, label %2224

774:                                              ; preds = %765, %793
  %775 = phi i64 [ %794, %793 ], [ %771, %765 ]
  %776 = inttoptr i64 %775 to i32*
  %777 = load i32, i32* %776, align 4
  %778 = and i64 %775, -4294967296
  %779 = zext i32 %777 to i64
  %780 = or i64 %778, %779
  %781 = and i64 %779, 1
  %782 = icmp eq i64 %781, 0
  br i1 %782, label %793, label %783

783:                                              ; preds = %774
  %784 = and i64 %780, -262144
  %785 = inttoptr i64 %784 to %"class.v8::internal::BasicMemoryChunk"*
  %786 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %785, i64 0, i32 1
  %787 = load i64, i64* %786, align 8
  %788 = and i64 %787, 24
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %793, label %790

790:                                              ; preds = %783
  %791 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %792 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %791, i64 %775, i64 %780) #12
  br label %793

793:                                              ; preds = %790, %783, %774
  %794 = add i64 %775, 4
  %795 = icmp ult i64 %794, %772
  br i1 %795, label %774, label %2224

796:                                              ; preds = %87
  %797 = add i64 %89, 9
  %798 = inttoptr i64 %797 to i8*
  %799 = load i8, i8* %798, align 1
  %800 = zext i8 %799 to i64
  %801 = mul nuw nsw i64 %800, 24
  %802 = add i64 %89, 11
  %803 = add i64 %801, %802
  %804 = icmp ult i64 %802, %803
  br i1 %804, label %805, label %2224

805:                                              ; preds = %796, %824
  %806 = phi i64 [ %825, %824 ], [ %802, %796 ]
  %807 = inttoptr i64 %806 to i32*
  %808 = load i32, i32* %807, align 4
  %809 = and i64 %806, -4294967296
  %810 = zext i32 %808 to i64
  %811 = or i64 %809, %810
  %812 = and i64 %810, 1
  %813 = icmp eq i64 %812, 0
  br i1 %813, label %824, label %814

814:                                              ; preds = %805
  %815 = and i64 %811, -262144
  %816 = inttoptr i64 %815 to %"class.v8::internal::BasicMemoryChunk"*
  %817 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %816, i64 0, i32 1
  %818 = load i64, i64* %817, align 8
  %819 = and i64 %818, 24
  %820 = icmp eq i64 %819, 0
  br i1 %820, label %824, label %821

821:                                              ; preds = %814
  %822 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %823 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %822, i64 %806, i64 %811) #12
  br label %824

824:                                              ; preds = %821, %814, %805
  %825 = add i64 %806, 4
  %826 = icmp ult i64 %825, %803
  br i1 %826, label %805, label %2224

827:                                              ; preds = %87
  %828 = add i64 %89, 3
  %829 = add i64 %89, 27
  %830 = icmp ult i64 %828, %829
  br i1 %830, label %831, label %853

831:                                              ; preds = %827, %850
  %832 = phi i64 [ %851, %850 ], [ %828, %827 ]
  %833 = inttoptr i64 %832 to i32*
  %834 = load i32, i32* %833, align 4
  %835 = and i64 %832, -4294967296
  %836 = zext i32 %834 to i64
  %837 = or i64 %835, %836
  %838 = and i64 %836, 1
  %839 = icmp eq i64 %838, 0
  br i1 %839, label %850, label %840

840:                                              ; preds = %831
  %841 = and i64 %837, -262144
  %842 = inttoptr i64 %841 to %"class.v8::internal::BasicMemoryChunk"*
  %843 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %842, i64 0, i32 1
  %844 = load i64, i64* %843, align 8
  %845 = and i64 %844, 24
  %846 = icmp eq i64 %845, 0
  br i1 %846, label %850, label %847

847:                                              ; preds = %840
  %848 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %849 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %848, i64 %832, i64 %837) #12
  br label %850

850:                                              ; preds = %847, %840, %831
  %851 = add i64 %832, 4
  %852 = icmp ult i64 %851, %829
  br i1 %852, label %831, label %853

853:                                              ; preds = %850, %827
  %854 = add i64 %89, 71
  %855 = icmp ult i64 %829, %854
  br i1 %855, label %856, label %2224

856:                                              ; preds = %853, %875
  %857 = phi i64 [ %876, %875 ], [ %829, %853 ]
  %858 = inttoptr i64 %857 to i32*
  %859 = load i32, i32* %858, align 4
  %860 = and i64 %857, -4294967296
  %861 = zext i32 %859 to i64
  %862 = or i64 %860, %861
  %863 = and i64 %861, 1
  %864 = icmp eq i64 %863, 0
  br i1 %864, label %875, label %865

865:                                              ; preds = %856
  %866 = and i64 %862, -262144
  %867 = inttoptr i64 %866 to %"class.v8::internal::BasicMemoryChunk"*
  %868 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %867, i64 0, i32 1
  %869 = load i64, i64* %868, align 8
  %870 = and i64 %869, 24
  %871 = icmp eq i64 %870, 0
  br i1 %871, label %875, label %872

872:                                              ; preds = %865
  %873 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %874 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %873, i64 %857, i64 %862) #12
  br label %875

875:                                              ; preds = %872, %865, %856
  %876 = add i64 %857, 4
  %877 = icmp ult i64 %876, %854
  br i1 %877, label %856, label %2224

878:                                              ; preds = %87
  %879 = add i64 %89, 7
  %880 = inttoptr i64 %879 to i32*
  %881 = load i32, i32* %880, align 4
  %882 = shl i32 %881, 3
  %883 = add nsw i32 %882, 16
  %884 = add i64 %89, 11
  %885 = sext i32 %883 to i64
  %886 = add i64 %91, %885
  %887 = icmp ult i64 %884, %886
  br i1 %887, label %888, label %2224

888:                                              ; preds = %878, %907
  %889 = phi i64 [ %908, %907 ], [ %884, %878 ]
  %890 = inttoptr i64 %889 to i32*
  %891 = load i32, i32* %890, align 4
  %892 = and i64 %889, -4294967296
  %893 = zext i32 %891 to i64
  %894 = or i64 %892, %893
  %895 = and i64 %893, 1
  %896 = icmp eq i64 %895, 0
  br i1 %896, label %907, label %897

897:                                              ; preds = %888
  %898 = and i64 %894, -262144
  %899 = inttoptr i64 %898 to %"class.v8::internal::BasicMemoryChunk"*
  %900 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %899, i64 0, i32 1
  %901 = load i64, i64* %900, align 8
  %902 = and i64 %901, 24
  %903 = icmp eq i64 %902, 0
  br i1 %903, label %907, label %904

904:                                              ; preds = %897
  %905 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %906 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %905, i64 %889, i64 %894) #12
  br label %907

907:                                              ; preds = %904, %897, %888
  %908 = add i64 %889, 4
  %909 = icmp ult i64 %908, %886
  br i1 %909, label %888, label %2224

910:                                              ; preds = %87
  %911 = add i64 %89, 11
  %912 = add i64 %89, 15
  %913 = icmp ult i64 %911, %912
  br i1 %913, label %914, label %2224

914:                                              ; preds = %910, %933
  %915 = phi i64 [ %934, %933 ], [ %911, %910 ]
  %916 = inttoptr i64 %915 to i32*
  %917 = load i32, i32* %916, align 4
  %918 = and i64 %915, -4294967296
  %919 = zext i32 %917 to i64
  %920 = or i64 %918, %919
  %921 = and i64 %919, 1
  %922 = icmp eq i64 %921, 0
  br i1 %922, label %933, label %923

923:                                              ; preds = %914
  %924 = and i64 %920, -262144
  %925 = inttoptr i64 %924 to %"class.v8::internal::BasicMemoryChunk"*
  %926 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %925, i64 0, i32 1
  %927 = load i64, i64* %926, align 8
  %928 = and i64 %927, 24
  %929 = icmp eq i64 %928, 0
  br i1 %929, label %933, label %930

930:                                              ; preds = %923
  %931 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %932 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %931, i64 %915, i64 %920) #12
  br label %933

933:                                              ; preds = %930, %923, %914
  %934 = add i64 %915, 4
  %935 = icmp ult i64 %934, %912
  br i1 %935, label %914, label %2224

936:                                              ; preds = %87
  %937 = add i64 %89, 3
  %938 = add i64 %89, 27
  %939 = icmp ult i64 %937, %938
  br i1 %939, label %940, label %962

940:                                              ; preds = %936, %959
  %941 = phi i64 [ %960, %959 ], [ %937, %936 ]
  %942 = inttoptr i64 %941 to i32*
  %943 = load i32, i32* %942, align 4
  %944 = and i64 %941, -4294967296
  %945 = zext i32 %943 to i64
  %946 = or i64 %944, %945
  %947 = and i64 %945, 1
  %948 = icmp eq i64 %947, 0
  br i1 %948, label %959, label %949

949:                                              ; preds = %940
  %950 = and i64 %946, -262144
  %951 = inttoptr i64 %950 to %"class.v8::internal::BasicMemoryChunk"*
  %952 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %951, i64 0, i32 1
  %953 = load i64, i64* %952, align 8
  %954 = and i64 %953, 24
  %955 = icmp eq i64 %954, 0
  br i1 %955, label %959, label %956

956:                                              ; preds = %949
  %957 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %958 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %957, i64 %941, i64 %946) #12
  br label %959

959:                                              ; preds = %956, %949, %940
  %960 = add i64 %941, 4
  %961 = icmp ult i64 %960, %938
  br i1 %961, label %940, label %962

962:                                              ; preds = %959, %936
  %963 = add i64 %89, 39
  %964 = icmp ult i64 %938, %963
  br i1 %964, label %965, label %2224

965:                                              ; preds = %962, %984
  %966 = phi i64 [ %985, %984 ], [ %938, %962 ]
  %967 = inttoptr i64 %966 to i32*
  %968 = load i32, i32* %967, align 4
  %969 = and i64 %966, -4294967296
  %970 = zext i32 %968 to i64
  %971 = or i64 %969, %970
  %972 = and i64 %970, 1
  %973 = icmp eq i64 %972, 0
  br i1 %973, label %984, label %974

974:                                              ; preds = %965
  %975 = and i64 %971, -262144
  %976 = inttoptr i64 %975 to %"class.v8::internal::BasicMemoryChunk"*
  %977 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %976, i64 0, i32 1
  %978 = load i64, i64* %977, align 8
  %979 = and i64 %978, 24
  %980 = icmp eq i64 %979, 0
  br i1 %980, label %984, label %981

981:                                              ; preds = %974
  %982 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %983 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %982, i64 %966, i64 %971) #12
  br label %984

984:                                              ; preds = %981, %974, %965
  %985 = add i64 %966, 4
  %986 = icmp ult i64 %985, %963
  br i1 %986, label %965, label %2224

987:                                              ; preds = %87
  %988 = add i64 %89, 3
  %989 = inttoptr i64 %988 to i32*
  %990 = load atomic i32, i32* %989 acquire, align 4
  %991 = lshr i32 %990, 1
  %992 = shl i32 %991, 2
  %993 = add nsw i32 %992, 8
  %994 = sext i32 %993 to i64
  %995 = add i64 %91, %994
  %996 = icmp ult i64 %988, %995
  br i1 %996, label %997, label %2224

997:                                              ; preds = %987, %1021
  %998 = phi i32 [ %1023, %1021 ], [ %990, %987 ]
  %999 = phi i64 [ %1019, %1021 ], [ %988, %987 ]
  %1000 = zext i32 %998 to i64
  %1001 = and i64 %1000, 1
  %1002 = icmp ne i64 %1001, 0
  %1003 = icmp ne i32 %998, 3
  %1004 = and i1 %1003, %1002
  br i1 %1004, label %1005, label %1018

1005:                                             ; preds = %997
  %1006 = and i64 %999, -4294967296
  %1007 = and i64 %1000, 4294967293
  %1008 = or i64 %1007, %1006
  %1009 = and i64 %1008, -262144
  %1010 = inttoptr i64 %1009 to %"class.v8::internal::BasicMemoryChunk"*
  %1011 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1010, i64 0, i32 1
  %1012 = load i64, i64* %1011, align 8
  %1013 = and i64 %1012, 24
  %1014 = icmp eq i64 %1013, 0
  br i1 %1014, label %1018, label %1015

1015:                                             ; preds = %1005
  %1016 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1017 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1016, i64 %999, i64 %1008) #12
  br label %1018

1018:                                             ; preds = %1015, %1005, %997
  %1019 = add i64 %999, 4
  %1020 = icmp ult i64 %1019, %995
  br i1 %1020, label %1021, label %2224

1021:                                             ; preds = %1018
  %1022 = inttoptr i64 %1019 to i32*
  %1023 = load i32, i32* %1022, align 4
  br label %997

1024:                                             ; preds = %87
  %1025 = add i64 %89, 7
  %1026 = inttoptr i64 %1025 to i32*
  %1027 = load i32, i32* %1026, align 4
  %1028 = add i64 %95, 19
  %1029 = inttoptr i64 %1028 to i32*
  %1030 = load i32, i32* %1029, align 4
  %1031 = zext i32 %1030 to i64
  %1032 = or i64 %90, %1031
  %1033 = add i64 %1032, -1
  %1034 = inttoptr i64 %1033 to i32*
  %1035 = load atomic i32, i32* %1034 monotonic, align 4
  %1036 = zext i32 %1035 to i64
  %1037 = or i64 %90, %1036
  %1038 = and i64 %1036, 3
  %1039 = icmp eq i64 %1038, 0
  %1040 = add i64 %1037, 1
  %1041 = select i1 %1039, i64 %1040, i64 %1032
  %1042 = add i64 %1041, 3
  %1043 = inttoptr i64 %1042 to %"class.v8::internal::wasm::ArrayType"**
  %1044 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %1043, align 1
  %1045 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %1044, i64 0, i32 0, i32 0
  %1046 = load i32, i32* %1045, align 4
  %1047 = and i32 %1046, 31
  %1048 = zext i32 %1047 to i64
  %1049 = getelementptr inbounds [13 x i8], [13 x i8]* @_ZZN2v88internal4wasm18element_size_bytesENS1_9ValueKindEE12kElementSize, i64 0, i64 %1048
  %1050 = load i8, i8* %1049, align 1
  %1051 = load atomic i32, i32* %1034 monotonic, align 4
  %1052 = zext i32 %1051 to i64
  %1053 = or i64 %90, %1052
  %1054 = and i64 %1052, 3
  %1055 = icmp eq i64 %1054, 0
  %1056 = add i64 %1053, 1
  %1057 = select i1 %1055, i64 %1056, i64 %1032
  %1058 = add i64 %1057, 3
  %1059 = inttoptr i64 %1058 to %"class.v8::internal::wasm::ArrayType"**
  %1060 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %1059, align 1
  %1061 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %1060, i64 0, i32 0, i32 0
  %1062 = load i32, i32* %1061, align 4
  %1063 = and i32 %1062, 28
  %1064 = icmp eq i32 %1063, 8
  br i1 %1064, label %1065, label %2224

1065:                                             ; preds = %1024
  %1066 = sext i8 %1050 to i32
  %1067 = mul nsw i32 %1027, %1066
  %1068 = add i32 %1067, 15
  %1069 = and i32 %1068, -4
  %1070 = add i64 %89, 11
  %1071 = sext i32 %1069 to i64
  %1072 = add i64 %91, %1071
  %1073 = icmp ult i64 %1070, %1072
  br i1 %1073, label %1074, label %2224

1074:                                             ; preds = %1065, %1093
  %1075 = phi i64 [ %1094, %1093 ], [ %1070, %1065 ]
  %1076 = inttoptr i64 %1075 to i32*
  %1077 = load i32, i32* %1076, align 4
  %1078 = and i64 %1075, -4294967296
  %1079 = zext i32 %1077 to i64
  %1080 = or i64 %1078, %1079
  %1081 = and i64 %1079, 1
  %1082 = icmp eq i64 %1081, 0
  br i1 %1082, label %1093, label %1083

1083:                                             ; preds = %1074
  %1084 = and i64 %1080, -262144
  %1085 = inttoptr i64 %1084 to %"class.v8::internal::BasicMemoryChunk"*
  %1086 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1085, i64 0, i32 1
  %1087 = load i64, i64* %1086, align 8
  %1088 = and i64 %1087, 24
  %1089 = icmp eq i64 %1088, 0
  br i1 %1089, label %1093, label %1090

1090:                                             ; preds = %1083
  %1091 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1092 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1091, i64 %1075, i64 %1080) #12
  br label %1093

1093:                                             ; preds = %1090, %1083, %1074
  %1094 = add i64 %1075, 4
  %1095 = icmp ult i64 %1094, %1072
  br i1 %1095, label %1074, label %2224

1096:                                             ; preds = %87
  %1097 = add i64 %89, 11
  %1098 = add i64 %89, 27
  %1099 = icmp ult i64 %1097, %1098
  br i1 %1099, label %1100, label %2224

1100:                                             ; preds = %1096, %1119
  %1101 = phi i64 [ %1120, %1119 ], [ %1097, %1096 ]
  %1102 = inttoptr i64 %1101 to i32*
  %1103 = load i32, i32* %1102, align 4
  %1104 = and i64 %1101, -4294967296
  %1105 = zext i32 %1103 to i64
  %1106 = or i64 %1104, %1105
  %1107 = and i64 %1105, 1
  %1108 = icmp eq i64 %1107, 0
  br i1 %1108, label %1119, label %1109

1109:                                             ; preds = %1100
  %1110 = and i64 %1106, -262144
  %1111 = inttoptr i64 %1110 to %"class.v8::internal::BasicMemoryChunk"*
  %1112 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1111, i64 0, i32 1
  %1113 = load i64, i64* %1112, align 8
  %1114 = and i64 %1113, 24
  %1115 = icmp eq i64 %1114, 0
  br i1 %1115, label %1119, label %1116

1116:                                             ; preds = %1109
  %1117 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1118 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1117, i64 %1101, i64 %1106) #12
  br label %1119

1119:                                             ; preds = %1116, %1109, %1100
  %1120 = add i64 %1101, 4
  %1121 = icmp ult i64 %1120, %1098
  br i1 %1121, label %1100, label %2224

1122:                                             ; preds = %87
  %1123 = add i64 %89, 11
  %1124 = add i64 %89, 43
  %1125 = icmp ult i64 %1123, %1124
  br i1 %1125, label %1126, label %2224

1126:                                             ; preds = %1122, %1145
  %1127 = phi i64 [ %1146, %1145 ], [ %1123, %1122 ]
  %1128 = inttoptr i64 %1127 to i32*
  %1129 = load i32, i32* %1128, align 4
  %1130 = and i64 %1127, -4294967296
  %1131 = zext i32 %1129 to i64
  %1132 = or i64 %1130, %1131
  %1133 = and i64 %1131, 1
  %1134 = icmp eq i64 %1133, 0
  br i1 %1134, label %1145, label %1135

1135:                                             ; preds = %1126
  %1136 = and i64 %1132, -262144
  %1137 = inttoptr i64 %1136 to %"class.v8::internal::BasicMemoryChunk"*
  %1138 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1137, i64 0, i32 1
  %1139 = load i64, i64* %1138, align 8
  %1140 = and i64 %1139, 24
  %1141 = icmp eq i64 %1140, 0
  br i1 %1141, label %1145, label %1142

1142:                                             ; preds = %1135
  %1143 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1144 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1143, i64 %1127, i64 %1132) #12
  br label %1145

1145:                                             ; preds = %1142, %1135, %1126
  %1146 = add i64 %1127, 4
  %1147 = icmp ult i64 %1146, %1124
  br i1 %1147, label %1126, label %2224

1148:                                             ; preds = %87
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #12
  store i64 %89, i64* %33, align 8
  %1149 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %4, i64 %95) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #12
  %1150 = add i64 %89, 23
  %1151 = sext i32 %1149 to i64
  %1152 = add i64 %91, %1151
  %1153 = icmp ult i64 %1150, %1152
  br i1 %1153, label %1154, label %2224

1154:                                             ; preds = %1148, %1173
  %1155 = phi i64 [ %1174, %1173 ], [ %1150, %1148 ]
  %1156 = inttoptr i64 %1155 to i32*
  %1157 = load i32, i32* %1156, align 4
  %1158 = and i64 %1155, -4294967296
  %1159 = zext i32 %1157 to i64
  %1160 = or i64 %1158, %1159
  %1161 = and i64 %1159, 1
  %1162 = icmp eq i64 %1161, 0
  br i1 %1162, label %1173, label %1163

1163:                                             ; preds = %1154
  %1164 = and i64 %1160, -262144
  %1165 = inttoptr i64 %1164 to %"class.v8::internal::BasicMemoryChunk"*
  %1166 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1165, i64 0, i32 1
  %1167 = load i64, i64* %1166, align 8
  %1168 = and i64 %1167, 24
  %1169 = icmp eq i64 %1168, 0
  br i1 %1169, label %1173, label %1170

1170:                                             ; preds = %1163
  %1171 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1172 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1171, i64 %1155, i64 %1160) #12
  br label %1173

1173:                                             ; preds = %1170, %1163, %1154
  %1174 = add i64 %1155, 4
  %1175 = icmp ult i64 %1174, %1152
  br i1 %1175, label %1154, label %2224

1176:                                             ; preds = %87
  %1177 = add i64 %95, 3
  %1178 = inttoptr i64 %1177 to i8*
  %1179 = load atomic i8, i8* %1178 monotonic, align 1
  %1180 = zext i8 %1179 to i32
  %1181 = shl nuw nsw i32 %1180, 2
  call void @_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64 %95, i64 %89, i32 %1181, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

1182:                                             ; preds = %87
  %1183 = add i64 %89, 11
  %1184 = add i64 %89, 35
  %1185 = icmp ult i64 %1183, %1184
  br i1 %1185, label %1186, label %2224

1186:                                             ; preds = %1182, %1205
  %1187 = phi i64 [ %1206, %1205 ], [ %1183, %1182 ]
  %1188 = inttoptr i64 %1187 to i32*
  %1189 = load i32, i32* %1188, align 4
  %1190 = and i64 %1187, -4294967296
  %1191 = zext i32 %1189 to i64
  %1192 = or i64 %1190, %1191
  %1193 = and i64 %1191, 1
  %1194 = icmp eq i64 %1193, 0
  br i1 %1194, label %1205, label %1195

1195:                                             ; preds = %1186
  %1196 = and i64 %1192, -262144
  %1197 = inttoptr i64 %1196 to %"class.v8::internal::BasicMemoryChunk"*
  %1198 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1197, i64 0, i32 1
  %1199 = load i64, i64* %1198, align 8
  %1200 = and i64 %1199, 24
  %1201 = icmp eq i64 %1200, 0
  br i1 %1201, label %1205, label %1202

1202:                                             ; preds = %1195
  %1203 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1204 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1203, i64 %1187, i64 %1192) #12
  br label %1205

1205:                                             ; preds = %1202, %1195, %1186
  %1206 = add i64 %1187, 4
  %1207 = icmp ult i64 %1206, %1184
  br i1 %1207, label %1186, label %2224

1208:                                             ; preds = %87
  %1209 = add i64 %95, 19
  %1210 = inttoptr i64 %1209 to i32*
  %1211 = load i32, i32* %1210, align 4
  %1212 = zext i32 %1211 to i64
  %1213 = or i64 %90, %1212
  %1214 = add i64 %1213, -1
  %1215 = inttoptr i64 %1214 to i32*
  %1216 = load atomic i32, i32* %1215 monotonic, align 4
  %1217 = load atomic i32, i32* %1215 monotonic, align 4
  %1218 = zext i32 %1217 to i64
  %1219 = or i64 %90, %1218
  %1220 = and i64 %1218, 3
  %1221 = icmp eq i64 %1220, 0
  %1222 = add i64 %1219, 1
  %1223 = select i1 %1221, i64 %1222, i64 %1213
  %1224 = add i64 %1223, 3
  %1225 = inttoptr i64 %1224 to %"class.v8::internal::wasm::StructType"**
  %1226 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %1225, align 1
  %1227 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %1226, i64 0, i32 0
  %1228 = load i32, i32* %1227, align 8
  %1229 = icmp eq i32 %1228, 0
  br i1 %1229, label %2224, label %1230

1230:                                             ; preds = %1208
  %1231 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %1226, i64 0, i32 2
  %1232 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %1226, i64 0, i32 1
  %1233 = add i64 %89, 7
  br label %1234

1234:                                             ; preds = %1259, %1230
  %1235 = phi i32 [ %1228, %1230 ], [ %1260, %1259 ]
  %1236 = phi i64 [ 0, %1230 ], [ %1261, %1259 ]
  %1237 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %1231, align 8
  %1238 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %1237, i64 %1236, i32 0
  %1239 = load i32, i32* %1238, align 4
  %1240 = and i32 %1239, 28
  %1241 = icmp eq i32 %1240, 8
  br i1 %1241, label %1242, label %1259

1242:                                             ; preds = %1234
  %1243 = icmp eq i64 %1236, 0
  br i1 %1243, label %1250, label %1244

1244:                                             ; preds = %1242
  %1245 = load i32*, i32** %1232, align 8
  %1246 = add nuw nsw i64 %1236, 4294967295
  %1247 = and i64 %1246, 4294967295
  %1248 = getelementptr inbounds i32, i32* %1245, i64 %1247
  %1249 = load i32, i32* %1248, align 4
  br label %1250

1250:                                             ; preds = %1244, %1242
  %1251 = phi i32 [ %1249, %1244 ], [ 0, %1242 ]
  %1252 = sext i32 %1251 to i64
  %1253 = add i64 %1233, %1252
  %1254 = add i64 %1253, 4
  %1255 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %1256 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1255, i64 2
  %1257 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1256, align 8
  call void %1257(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %1253, i64 %1254) #12
  %1258 = load i32, i32* %1227, align 8
  br label %1259

1259:                                             ; preds = %1250, %1234
  %1260 = phi i32 [ %1235, %1234 ], [ %1258, %1250 ]
  %1261 = add nuw nsw i64 %1236, 1
  %1262 = zext i32 %1260 to i64
  %1263 = icmp ult i64 %1261, %1262
  br i1 %1263, label %1234, label %2224

1264:                                             ; preds = %87
  %1265 = add i64 %89, 11
  %1266 = add i64 %89, 15
  %1267 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %1268 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1267, i64 2
  %1269 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1268, align 8
  call void %1269(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %1265, i64 %1266) #12
  %1270 = add i64 %89, 19
  %1271 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %1272 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1271, i64 2
  %1273 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1272, align 8
  call void %1273(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %1266, i64 %1270) #12
  br label %2224

1274:                                             ; preds = %87
  %1275 = add i64 %89, 3
  %1276 = inttoptr i64 %1275 to i32*
  %1277 = load i32, i32* %1276, align 4
  %1278 = lshr i32 %1277, 1
  %1279 = shl i32 %1278, 2
  %1280 = add nsw i32 %1279, 8
  %1281 = sext i32 %1280 to i64
  %1282 = add i64 %91, %1281
  %1283 = icmp ult i64 %1275, %1282
  br i1 %1283, label %1284, label %2224

1284:                                             ; preds = %1274, %1305
  %1285 = phi i32 [ %1307, %1305 ], [ %1277, %1274 ]
  %1286 = phi i64 [ %1303, %1305 ], [ %1275, %1274 ]
  %1287 = and i64 %1286, -4294967296
  %1288 = zext i32 %1285 to i64
  %1289 = or i64 %1287, %1288
  %1290 = and i64 %1288, 1
  %1291 = icmp eq i64 %1290, 0
  br i1 %1291, label %1302, label %1292

1292:                                             ; preds = %1284
  %1293 = and i64 %1289, -262144
  %1294 = inttoptr i64 %1293 to %"class.v8::internal::BasicMemoryChunk"*
  %1295 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1294, i64 0, i32 1
  %1296 = load i64, i64* %1295, align 8
  %1297 = and i64 %1296, 24
  %1298 = icmp eq i64 %1297, 0
  br i1 %1298, label %1302, label %1299

1299:                                             ; preds = %1292
  %1300 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1301 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1300, i64 %1286, i64 %1289) #12
  br label %1302

1302:                                             ; preds = %1299, %1292, %1284
  %1303 = add i64 %1286, 4
  %1304 = icmp ult i64 %1303, %1282
  br i1 %1304, label %1305, label %2224

1305:                                             ; preds = %1302
  %1306 = inttoptr i64 %1303 to i32*
  %1307 = load i32, i32* %1306, align 4
  br label %1284

1308:                                             ; preds = %87
  %1309 = add i64 %89, 11
  %1310 = add i64 %89, 27
  %1311 = icmp ult i64 %1309, %1310
  br i1 %1311, label %1312, label %2224

1312:                                             ; preds = %1308, %1331
  %1313 = phi i64 [ %1332, %1331 ], [ %1309, %1308 ]
  %1314 = inttoptr i64 %1313 to i32*
  %1315 = load i32, i32* %1314, align 4
  %1316 = and i64 %1313, -4294967296
  %1317 = zext i32 %1315 to i64
  %1318 = or i64 %1316, %1317
  %1319 = and i64 %1317, 1
  %1320 = icmp eq i64 %1319, 0
  br i1 %1320, label %1331, label %1321

1321:                                             ; preds = %1312
  %1322 = and i64 %1318, -262144
  %1323 = inttoptr i64 %1322 to %"class.v8::internal::BasicMemoryChunk"*
  %1324 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1323, i64 0, i32 1
  %1325 = load i64, i64* %1324, align 8
  %1326 = and i64 %1325, 24
  %1327 = icmp eq i64 %1326, 0
  br i1 %1327, label %1331, label %1328

1328:                                             ; preds = %1321
  %1329 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1330 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1329, i64 %1313, i64 %1318) #12
  br label %1331

1331:                                             ; preds = %1328, %1321, %1312
  %1332 = add i64 %1313, 4
  %1333 = icmp ult i64 %1332, %1310
  br i1 %1333, label %1312, label %2224

1334:                                             ; preds = %87
  %1335 = add i64 %89, 3
  %1336 = inttoptr i64 %1335 to i32*
  %1337 = load atomic i32, i32* %1336 acquire, align 4
  %1338 = lshr i32 %1337, 1
  %1339 = shl i32 %1338, 2
  %1340 = add nsw i32 %1339, 8
  %1341 = sext i32 %1340 to i64
  %1342 = add i64 %91, %1341
  %1343 = icmp ult i64 %1335, %1342
  br i1 %1343, label %1344, label %2224

1344:                                             ; preds = %1334, %1365
  %1345 = phi i32 [ %1367, %1365 ], [ %1337, %1334 ]
  %1346 = phi i64 [ %1363, %1365 ], [ %1335, %1334 ]
  %1347 = and i64 %1346, -4294967296
  %1348 = zext i32 %1345 to i64
  %1349 = or i64 %1347, %1348
  %1350 = and i64 %1348, 1
  %1351 = icmp eq i64 %1350, 0
  br i1 %1351, label %1362, label %1352

1352:                                             ; preds = %1344
  %1353 = and i64 %1349, -262144
  %1354 = inttoptr i64 %1353 to %"class.v8::internal::BasicMemoryChunk"*
  %1355 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1354, i64 0, i32 1
  %1356 = load i64, i64* %1355, align 8
  %1357 = and i64 %1356, 24
  %1358 = icmp eq i64 %1357, 0
  br i1 %1358, label %1362, label %1359

1359:                                             ; preds = %1352
  %1360 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1361 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1360, i64 %1346, i64 %1349) #12
  br label %1362

1362:                                             ; preds = %1359, %1352, %1344
  %1363 = add i64 %1346, 4
  %1364 = icmp ult i64 %1363, %1342
  br i1 %1364, label %1365, label %2224

1365:                                             ; preds = %1362
  %1366 = inttoptr i64 %1363 to i32*
  %1367 = load i32, i32* %1366, align 4
  br label %1344

1368:                                             ; preds = %87
  %1369 = add i64 %89, 3
  %1370 = inttoptr i64 %1369 to i32*
  %1371 = load atomic i32, i32* %1370 acquire, align 4
  %1372 = lshr i32 %1371, 1
  %1373 = shl i32 %1372, 2
  %1374 = add nsw i32 %1373, 8
  %1375 = sext i32 %1374 to i64
  %1376 = add i64 %91, %1375
  %1377 = icmp ult i64 %1369, %1376
  br i1 %1377, label %1378, label %2224

1378:                                             ; preds = %1368, %1402
  %1379 = phi i32 [ %1404, %1402 ], [ %1371, %1368 ]
  %1380 = phi i64 [ %1400, %1402 ], [ %1369, %1368 ]
  %1381 = zext i32 %1379 to i64
  %1382 = and i64 %1381, 1
  %1383 = icmp ne i64 %1382, 0
  %1384 = icmp ne i32 %1379, 3
  %1385 = and i1 %1384, %1383
  br i1 %1385, label %1386, label %1399

1386:                                             ; preds = %1378
  %1387 = and i64 %1380, -4294967296
  %1388 = and i64 %1381, 4294967293
  %1389 = or i64 %1388, %1387
  %1390 = and i64 %1389, -262144
  %1391 = inttoptr i64 %1390 to %"class.v8::internal::BasicMemoryChunk"*
  %1392 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1391, i64 0, i32 1
  %1393 = load i64, i64* %1392, align 8
  %1394 = and i64 %1393, 24
  %1395 = icmp eq i64 %1394, 0
  br i1 %1395, label %1399, label %1396

1396:                                             ; preds = %1386
  %1397 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1398 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1397, i64 %1380, i64 %1389) #12
  br label %1399

1399:                                             ; preds = %1396, %1386, %1378
  %1400 = add i64 %1380, 4
  %1401 = icmp ult i64 %1400, %1376
  br i1 %1401, label %1402, label %2224

1402:                                             ; preds = %1399
  %1403 = inttoptr i64 %1400 to i32*
  %1404 = load i32, i32* %1403, align 4
  br label %1378

1405:                                             ; preds = %87
  %1406 = add i64 %89, 3
  %1407 = inttoptr i64 %1406 to i32*
  %1408 = load i32, i32* %1407, align 4
  %1409 = lshr i32 %1408, 1
  %1410 = shl i32 %1409, 2
  %1411 = add nsw i32 %1410, 16
  %1412 = sext i32 %1411 to i64
  %1413 = add i64 %91, %1412
  %1414 = icmp ult i64 %1406, %1413
  br i1 %1414, label %1415, label %2224

1415:                                             ; preds = %1405, %1436
  %1416 = phi i32 [ %1438, %1436 ], [ %1408, %1405 ]
  %1417 = phi i64 [ %1434, %1436 ], [ %1406, %1405 ]
  %1418 = and i64 %1417, -4294967296
  %1419 = zext i32 %1416 to i64
  %1420 = or i64 %1418, %1419
  %1421 = and i64 %1419, 1
  %1422 = icmp eq i64 %1421, 0
  br i1 %1422, label %1433, label %1423

1423:                                             ; preds = %1415
  %1424 = and i64 %1420, -262144
  %1425 = inttoptr i64 %1424 to %"class.v8::internal::BasicMemoryChunk"*
  %1426 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1425, i64 0, i32 1
  %1427 = load i64, i64* %1426, align 8
  %1428 = and i64 %1427, 24
  %1429 = icmp eq i64 %1428, 0
  br i1 %1429, label %1433, label %1430

1430:                                             ; preds = %1423
  %1431 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1432 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1431, i64 %1417, i64 %1420) #12
  br label %1433

1433:                                             ; preds = %1430, %1423, %1415
  %1434 = add i64 %1417, 4
  %1435 = icmp ult i64 %1434, %1413
  br i1 %1435, label %1436, label %2224

1436:                                             ; preds = %1433
  %1437 = inttoptr i64 %1434 to i32*
  %1438 = load i32, i32* %1437, align 4
  br label %1415

1439:                                             ; preds = %87
  %1440 = add i64 %89, 11
  %1441 = inttoptr i64 %1440 to i32*
  %1442 = load i32, i32* %1441, align 4, !noalias !3
  %1443 = ashr i32 %1442, 1
  %1444 = sext i32 %1443 to i64
  %1445 = shl nsw i64 %1444, 3
  %1446 = add nsw i64 %1445, 16
  %1447 = add i64 %89, 3
  %1448 = inttoptr i64 %1447 to i32*
  %1449 = load i32, i32* %1448, align 4, !noalias !26
  %1450 = lshr i32 %1449, 9
  %1451 = and i32 %1450, 4
  %1452 = zext i32 %1451 to i64
  %1453 = or i64 %1446, %1452
  %1454 = lshr i32 %1449, 8
  %1455 = and i32 %1454, 3
  %1456 = add nsw i32 %1455, -1
  %1457 = icmp ult i32 %1456, 2
  %1458 = zext i1 %1457 to i64
  %1459 = and i32 %1449, 24576
  %1460 = icmp ne i32 %1459, 0
  %1461 = zext i1 %1460 to i64
  %1462 = shl nuw nsw i64 %1461, 3
  %1463 = lshr i32 %1449, 13
  %1464 = and i32 %1463, 4
  %1465 = lshr i32 %1449, 1
  %1466 = and i32 %1465, 15
  switch i32 %1466, label %1467 [
    i32 2, label %1471
    i32 4, label %1471
    i32 1, label %1471
  ]

1467:                                             ; preds = %1439
  %1468 = icmp eq i32 %1466, 3
  %1469 = zext i1 %1468 to i64
  %1470 = shl nuw nsw i64 %1469, 3
  br label %1471

1471:                                             ; preds = %1467, %1439, %1439, %1439
  %1472 = phi i64 [ 8, %1439 ], [ %1470, %1467 ], [ 8, %1439 ], [ 8, %1439 ]
  %1473 = lshr i32 %1449, 21
  %1474 = and i32 %1473, 4
  %1475 = add nuw nsw i32 %1474, %1464
  %1476 = lshr i32 %1449, 27
  %1477 = and i32 %1476, 4
  %1478 = add nuw nsw i32 %1475, %1477
  %1479 = zext i32 %1478 to i64
  %1480 = and i32 %1449, 30
  %1481 = icmp eq i32 %1480, 6
  %1482 = zext i1 %1481 to i64
  %1483 = add nuw nsw i64 %1458, %1482
  %1484 = shl nuw nsw i64 %1483, 2
  %1485 = add nsw i64 %1462, %1453
  %1486 = add nsw i64 %1485, %1479
  %1487 = add nsw i64 %1486, %1484
  %1488 = shl nuw nsw i64 %1482, 2
  %1489 = add i64 %1487, %1488
  %1490 = add i64 %1489, %1472
  br i1 %1481, label %1491, label %1506

1491:                                             ; preds = %1471
  switch i32 %1466, label %1492 [
    i32 2, label %1496
    i32 4, label %1496
    i32 1, label %1496
  ]

1492:                                             ; preds = %1491
  %1493 = icmp eq i32 %1466, 3
  %1494 = zext i1 %1493 to i64
  %1495 = shl nuw nsw i64 %1494, 3
  br label %1496

1496:                                             ; preds = %1492, %1491, %1491, %1491
  %1497 = phi i64 [ 8, %1491 ], [ %1495, %1492 ], [ 8, %1491 ], [ 8, %1491 ]
  %1498 = add i64 %1497, %1487
  %1499 = shl i64 %1498, 32
  %1500 = ashr exact i64 %1499, 32
  %1501 = add i64 %1500, %91
  %1502 = inttoptr i64 %1501 to i32*
  %1503 = load i32, i32* %1502, align 4, !noalias !27
  %1504 = ashr i32 %1503, 1
  %1505 = mul i32 %1504, 12
  br label %1506

1506:                                             ; preds = %1496, %1471
  %1507 = phi i32 [ %1505, %1496 ], [ 0, %1471 ]
  %1508 = trunc i64 %1490 to i32
  %1509 = add nsw i32 %1507, %1508
  %1510 = sext i32 %1509 to i64
  %1511 = add i64 %91, %1510
  %1512 = icmp ult i64 %1447, %1511
  br i1 %1512, label %1513, label %2224

1513:                                             ; preds = %1506, %1534
  %1514 = phi i32 [ %1536, %1534 ], [ %1449, %1506 ]
  %1515 = phi i64 [ %1532, %1534 ], [ %1447, %1506 ]
  %1516 = and i64 %1515, -4294967296
  %1517 = zext i32 %1514 to i64
  %1518 = or i64 %1516, %1517
  %1519 = and i64 %1517, 1
  %1520 = icmp eq i64 %1519, 0
  br i1 %1520, label %1531, label %1521

1521:                                             ; preds = %1513
  %1522 = and i64 %1518, -262144
  %1523 = inttoptr i64 %1522 to %"class.v8::internal::BasicMemoryChunk"*
  %1524 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1523, i64 0, i32 1
  %1525 = load i64, i64* %1524, align 8
  %1526 = and i64 %1525, 24
  %1527 = icmp eq i64 %1526, 0
  br i1 %1527, label %1531, label %1528

1528:                                             ; preds = %1521
  %1529 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1530 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1529, i64 %1515, i64 %1518) #12
  br label %1531

1531:                                             ; preds = %1528, %1521, %1513
  %1532 = add i64 %1515, 4
  %1533 = icmp ult i64 %1532, %1511
  br i1 %1533, label %1534, label %2224

1534:                                             ; preds = %1531
  %1535 = inttoptr i64 %1532 to i32*
  %1536 = load i32, i32* %1535, align 4
  br label %1513

1537:                                             ; preds = %87
  %1538 = add i64 %89, 3
  %1539 = inttoptr i64 %1538 to i16*
  %1540 = load i16, i16* %1539, align 2
  %1541 = zext i16 %1540 to i64
  %1542 = mul nuw nsw i64 %1541, 12
  %1543 = add i64 %89, 11
  %1544 = add i64 %89, 15
  %1545 = add i64 %1544, %1542
  %1546 = icmp ult i64 %1543, %1545
  br i1 %1546, label %1547, label %2224

1547:                                             ; preds = %1537, %1569
  %1548 = phi i64 [ %1570, %1569 ], [ %1543, %1537 ]
  %1549 = inttoptr i64 %1548 to i32*
  %1550 = load i32, i32* %1549, align 4
  %1551 = zext i32 %1550 to i64
  %1552 = and i64 %1551, 1
  %1553 = icmp ne i64 %1552, 0
  %1554 = icmp ne i32 %1550, 3
  %1555 = and i1 %1554, %1553
  br i1 %1555, label %1556, label %1569

1556:                                             ; preds = %1547
  %1557 = and i64 %1548, -4294967296
  %1558 = and i64 %1551, 4294967293
  %1559 = or i64 %1558, %1557
  %1560 = and i64 %1559, -262144
  %1561 = inttoptr i64 %1560 to %"class.v8::internal::BasicMemoryChunk"*
  %1562 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1561, i64 0, i32 1
  %1563 = load i64, i64* %1562, align 8
  %1564 = and i64 %1563, 24
  %1565 = icmp eq i64 %1564, 0
  br i1 %1565, label %1569, label %1566

1566:                                             ; preds = %1556
  %1567 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1568 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1567, i64 %1548, i64 %1559) #12
  br label %1569

1569:                                             ; preds = %1566, %1556, %1547
  %1570 = add i64 %1548, 4
  %1571 = icmp ult i64 %1570, %1545
  br i1 %1571, label %1547, label %2224

1572:                                             ; preds = %87
  %1573 = add i64 %89, 3
  %1574 = inttoptr i64 %1573 to i16*
  %1575 = load atomic i16, i16* %1574 monotonic, align 2
  %1576 = sext i16 %1575 to i64
  %1577 = mul nsw i64 %1576, 12
  %1578 = add i64 %89, 11
  %1579 = add i64 %89, 15
  %1580 = add i64 %1579, %1577
  %1581 = icmp ult i64 %1578, %1580
  br i1 %1581, label %1582, label %2224

1582:                                             ; preds = %1572, %1604
  %1583 = phi i64 [ %1605, %1604 ], [ %1578, %1572 ]
  %1584 = inttoptr i64 %1583 to i32*
  %1585 = load i32, i32* %1584, align 4
  %1586 = zext i32 %1585 to i64
  %1587 = and i64 %1586, 1
  %1588 = icmp ne i64 %1587, 0
  %1589 = icmp ne i32 %1585, 3
  %1590 = and i1 %1589, %1588
  br i1 %1590, label %1591, label %1604

1591:                                             ; preds = %1582
  %1592 = and i64 %1583, -4294967296
  %1593 = and i64 %1586, 4294967293
  %1594 = or i64 %1593, %1592
  %1595 = and i64 %1594, -262144
  %1596 = inttoptr i64 %1595 to %"class.v8::internal::BasicMemoryChunk"*
  %1597 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1596, i64 0, i32 1
  %1598 = load i64, i64* %1597, align 8
  %1599 = and i64 %1598, 24
  %1600 = icmp eq i64 %1599, 0
  br i1 %1600, label %1604, label %1601

1601:                                             ; preds = %1591
  %1602 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1603 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1602, i64 %1583, i64 %1594) #12
  br label %1604

1604:                                             ; preds = %1601, %1591, %1582
  %1605 = add i64 %1583, 4
  %1606 = icmp ult i64 %1605, %1580
  br i1 %1606, label %1582, label %2224

1607:                                             ; preds = %87
  %1608 = add i64 %89, 3
  %1609 = inttoptr i64 %1608 to i32*
  %1610 = load i32, i32* %1609, align 4
  %1611 = shl i32 %1610, 2
  %1612 = add nsw i32 %1611, 32
  %1613 = add i64 %89, 19
  %1614 = sext i32 %1612 to i64
  %1615 = add i64 %91, %1614
  %1616 = icmp ult i64 %1613, %1615
  br i1 %1616, label %1617, label %2224

1617:                                             ; preds = %1607, %1639
  %1618 = phi i64 [ %1640, %1639 ], [ %1613, %1607 ]
  %1619 = inttoptr i64 %1618 to i32*
  %1620 = load i32, i32* %1619, align 4
  %1621 = zext i32 %1620 to i64
  %1622 = and i64 %1621, 1
  %1623 = icmp ne i64 %1622, 0
  %1624 = icmp ne i32 %1620, 3
  %1625 = and i1 %1624, %1623
  br i1 %1625, label %1626, label %1639

1626:                                             ; preds = %1617
  %1627 = and i64 %1618, -4294967296
  %1628 = and i64 %1621, 4294967293
  %1629 = or i64 %1628, %1627
  %1630 = and i64 %1629, -262144
  %1631 = inttoptr i64 %1630 to %"class.v8::internal::BasicMemoryChunk"*
  %1632 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1631, i64 0, i32 1
  %1633 = load i64, i64* %1632, align 8
  %1634 = and i64 %1633, 24
  %1635 = icmp eq i64 %1634, 0
  br i1 %1635, label %1639, label %1636

1636:                                             ; preds = %1626
  %1637 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1638 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1637, i64 %1618, i64 %1629) #12
  br label %1639

1639:                                             ; preds = %1636, %1626, %1617
  %1640 = add i64 %1618, 4
  %1641 = icmp ult i64 %1640, %1615
  br i1 %1641, label %1617, label %2224

1642:                                             ; preds = %87
  %1643 = add i64 %89, 3
  %1644 = inttoptr i64 %1643 to i32*
  %1645 = load i32, i32* %1644, align 4
  %1646 = lshr i32 %1645, 1
  %1647 = shl i32 %1646, 2
  %1648 = add nsw i32 %1647, 12
  %1649 = sext i32 %1648 to i64
  %1650 = add i64 %91, %1649
  %1651 = icmp ult i64 %1643, %1650
  br i1 %1651, label %1652, label %2224

1652:                                             ; preds = %1642, %1676
  %1653 = phi i32 [ %1678, %1676 ], [ %1645, %1642 ]
  %1654 = phi i64 [ %1674, %1676 ], [ %1643, %1642 ]
  %1655 = zext i32 %1653 to i64
  %1656 = and i64 %1655, 1
  %1657 = icmp ne i64 %1656, 0
  %1658 = icmp ne i32 %1653, 3
  %1659 = and i1 %1658, %1657
  br i1 %1659, label %1660, label %1673

1660:                                             ; preds = %1652
  %1661 = and i64 %1654, -4294967296
  %1662 = and i64 %1655, 4294967293
  %1663 = or i64 %1662, %1661
  %1664 = and i64 %1663, -262144
  %1665 = inttoptr i64 %1664 to %"class.v8::internal::BasicMemoryChunk"*
  %1666 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1665, i64 0, i32 1
  %1667 = load i64, i64* %1666, align 8
  %1668 = and i64 %1667, 24
  %1669 = icmp eq i64 %1668, 0
  br i1 %1669, label %1673, label %1670

1670:                                             ; preds = %1660
  %1671 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1672 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1671, i64 %1654, i64 %1663) #12
  br label %1673

1673:                                             ; preds = %1670, %1660, %1652
  %1674 = add i64 %1654, 4
  %1675 = icmp ult i64 %1674, %1650
  br i1 %1675, label %1676, label %2224

1676:                                             ; preds = %1673
  %1677 = inttoptr i64 %1674 to i32*
  %1678 = load i32, i32* %1677, align 4
  br label %1652

1679:                                             ; preds = %87
  %1680 = add i64 %89, 3
  %1681 = add i64 %89, 11
  %1682 = icmp ult i64 %1680, %1681
  br i1 %1682, label %1683, label %2224

1683:                                             ; preds = %1679, %1705
  %1684 = phi i64 [ %1706, %1705 ], [ %1680, %1679 ]
  %1685 = inttoptr i64 %1684 to i32*
  %1686 = load i32, i32* %1685, align 4
  %1687 = zext i32 %1686 to i64
  %1688 = and i64 %1687, 1
  %1689 = icmp ne i64 %1688, 0
  %1690 = icmp ne i32 %1686, 3
  %1691 = and i1 %1690, %1689
  br i1 %1691, label %1692, label %1705

1692:                                             ; preds = %1683
  %1693 = and i64 %1684, -4294967296
  %1694 = and i64 %1687, 4294967293
  %1695 = or i64 %1694, %1693
  %1696 = and i64 %1695, -262144
  %1697 = inttoptr i64 %1696 to %"class.v8::internal::BasicMemoryChunk"*
  %1698 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1697, i64 0, i32 1
  %1699 = load i64, i64* %1698, align 8
  %1700 = and i64 %1699, 24
  %1701 = icmp eq i64 %1700, 0
  br i1 %1701, label %1705, label %1702

1702:                                             ; preds = %1692
  %1703 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1704 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1703, i64 %1684, i64 %1695) #12
  br label %1705

1705:                                             ; preds = %1702, %1692, %1683
  %1706 = add i64 %1684, 4
  %1707 = icmp ult i64 %1706, %1681
  br i1 %1707, label %1683, label %2224

1708:                                             ; preds = %87
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

1709:                                             ; preds = %87
  %1710 = add i64 %89, 3
  %1711 = add i64 %89, 7
  %1712 = icmp ult i64 %1710, %1711
  br i1 %1712, label %1713, label %2224

1713:                                             ; preds = %1709, %1732
  %1714 = phi i64 [ %1733, %1732 ], [ %1710, %1709 ]
  %1715 = inttoptr i64 %1714 to i32*
  %1716 = load i32, i32* %1715, align 4
  %1717 = and i64 %1714, -4294967296
  %1718 = zext i32 %1716 to i64
  %1719 = or i64 %1717, %1718
  %1720 = and i64 %1718, 1
  %1721 = icmp eq i64 %1720, 0
  br i1 %1721, label %1732, label %1722

1722:                                             ; preds = %1713
  %1723 = and i64 %1719, -262144
  %1724 = inttoptr i64 %1723 to %"class.v8::internal::BasicMemoryChunk"*
  %1725 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1724, i64 0, i32 1
  %1726 = load i64, i64* %1725, align 8
  %1727 = and i64 %1726, 24
  %1728 = icmp eq i64 %1727, 0
  br i1 %1728, label %1732, label %1729

1729:                                             ; preds = %1722
  %1730 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1731 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1730, i64 %1714, i64 %1719) #12
  br label %1732

1732:                                             ; preds = %1729, %1722, %1713
  %1733 = add i64 %1714, 4
  %1734 = icmp ult i64 %1733, %1711
  br i1 %1734, label %1713, label %2224

1735:                                             ; preds = %87
  %1736 = add i64 %89, 3
  %1737 = add i64 %89, 7
  %1738 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %1739 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1738, i64 2
  %1740 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1739, align 8
  call void %1740(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %1736, i64 %1737) #12
  %1741 = add i64 %89, 15
  %1742 = add i64 %89, 19
  %1743 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %1744 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1743, i64 2
  %1745 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1744, align 8
  call void %1745(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %1741, i64 %1742) #12
  br label %2224

1746:                                             ; preds = %87
  %1747 = add i64 %89, 3
  %1748 = add i64 %89, 27
  %1749 = icmp ult i64 %1747, %1748
  br i1 %1749, label %1750, label %2224

1750:                                             ; preds = %1746, %1769
  %1751 = phi i64 [ %1770, %1769 ], [ %1747, %1746 ]
  %1752 = inttoptr i64 %1751 to i32*
  %1753 = load i32, i32* %1752, align 4
  %1754 = and i64 %1751, -4294967296
  %1755 = zext i32 %1753 to i64
  %1756 = or i64 %1754, %1755
  %1757 = and i64 %1755, 1
  %1758 = icmp eq i64 %1757, 0
  br i1 %1758, label %1769, label %1759

1759:                                             ; preds = %1750
  %1760 = and i64 %1756, -262144
  %1761 = inttoptr i64 %1760 to %"class.v8::internal::BasicMemoryChunk"*
  %1762 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1761, i64 0, i32 1
  %1763 = load i64, i64* %1762, align 8
  %1764 = and i64 %1763, 24
  %1765 = icmp eq i64 %1764, 0
  br i1 %1765, label %1769, label %1766

1766:                                             ; preds = %1759
  %1767 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1768 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1767, i64 %1751, i64 %1756) #12
  br label %1769

1769:                                             ; preds = %1766, %1759, %1750
  %1770 = add i64 %1751, 4
  %1771 = icmp ult i64 %1770, %1748
  br i1 %1771, label %1750, label %2224

1772:                                             ; preds = %87
  %1773 = add i64 %89, 11
  %1774 = add i64 %89, 19
  %1775 = icmp ult i64 %1773, %1774
  br i1 %1775, label %1776, label %2224

1776:                                             ; preds = %1772, %1795
  %1777 = phi i64 [ %1796, %1795 ], [ %1773, %1772 ]
  %1778 = inttoptr i64 %1777 to i32*
  %1779 = load i32, i32* %1778, align 4
  %1780 = and i64 %1777, -4294967296
  %1781 = zext i32 %1779 to i64
  %1782 = or i64 %1780, %1781
  %1783 = and i64 %1781, 1
  %1784 = icmp eq i64 %1783, 0
  br i1 %1784, label %1795, label %1785

1785:                                             ; preds = %1776
  %1786 = and i64 %1782, -262144
  %1787 = inttoptr i64 %1786 to %"class.v8::internal::BasicMemoryChunk"*
  %1788 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1787, i64 0, i32 1
  %1789 = load i64, i64* %1788, align 8
  %1790 = and i64 %1789, 24
  %1791 = icmp eq i64 %1790, 0
  br i1 %1791, label %1795, label %1792

1792:                                             ; preds = %1785
  %1793 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1794 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1793, i64 %1777, i64 %1782) #12
  br label %1795

1795:                                             ; preds = %1792, %1785, %1776
  %1796 = add i64 %1777, 4
  %1797 = icmp ult i64 %1796, %1774
  br i1 %1797, label %1776, label %2224

1798:                                             ; preds = %87
  %1799 = add i64 %89, 7
  %1800 = inttoptr i64 %1799 to i32*
  %1801 = load atomic i32, i32* %1800 acquire, align 4
  br label %2224

1802:                                             ; preds = %87
  %1803 = add i64 %89, 7
  %1804 = inttoptr i64 %1803 to i32*
  %1805 = load atomic i32, i32* %1804 acquire, align 4
  br label %2224

1806:                                             ; preds = %87
  %1807 = add i64 %89, 11
  %1808 = add i64 %89, 19
  %1809 = icmp ult i64 %1807, %1808
  br i1 %1809, label %1810, label %2224

1810:                                             ; preds = %1806, %1829
  %1811 = phi i64 [ %1830, %1829 ], [ %1807, %1806 ]
  %1812 = inttoptr i64 %1811 to i32*
  %1813 = load i32, i32* %1812, align 4
  %1814 = and i64 %1811, -4294967296
  %1815 = zext i32 %1813 to i64
  %1816 = or i64 %1814, %1815
  %1817 = and i64 %1815, 1
  %1818 = icmp eq i64 %1817, 0
  br i1 %1818, label %1829, label %1819

1819:                                             ; preds = %1810
  %1820 = and i64 %1816, -262144
  %1821 = inttoptr i64 %1820 to %"class.v8::internal::BasicMemoryChunk"*
  %1822 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1821, i64 0, i32 1
  %1823 = load i64, i64* %1822, align 8
  %1824 = and i64 %1823, 24
  %1825 = icmp eq i64 %1824, 0
  br i1 %1825, label %1829, label %1826

1826:                                             ; preds = %1819
  %1827 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1828 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1827, i64 %1811, i64 %1816) #12
  br label %1829

1829:                                             ; preds = %1826, %1819, %1810
  %1830 = add i64 %1811, 4
  %1831 = icmp ult i64 %1830, %1808
  br i1 %1831, label %1810, label %2224

1832:                                             ; preds = %87
  %1833 = add i64 %89, 11
  %1834 = add i64 %89, 15
  %1835 = icmp ult i64 %1833, %1834
  br i1 %1835, label %1836, label %2224

1836:                                             ; preds = %1832, %1855
  %1837 = phi i64 [ %1856, %1855 ], [ %1833, %1832 ]
  %1838 = inttoptr i64 %1837 to i32*
  %1839 = load i32, i32* %1838, align 4
  %1840 = and i64 %1837, -4294967296
  %1841 = zext i32 %1839 to i64
  %1842 = or i64 %1840, %1841
  %1843 = and i64 %1841, 1
  %1844 = icmp eq i64 %1843, 0
  br i1 %1844, label %1855, label %1845

1845:                                             ; preds = %1836
  %1846 = and i64 %1842, -262144
  %1847 = inttoptr i64 %1846 to %"class.v8::internal::BasicMemoryChunk"*
  %1848 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1847, i64 0, i32 1
  %1849 = load i64, i64* %1848, align 8
  %1850 = and i64 %1849, 24
  %1851 = icmp eq i64 %1850, 0
  br i1 %1851, label %1855, label %1852

1852:                                             ; preds = %1845
  %1853 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1854 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1853, i64 %1837, i64 %1842) #12
  br label %1855

1855:                                             ; preds = %1852, %1845, %1836
  %1856 = add i64 %1837, 4
  %1857 = icmp ult i64 %1856, %1834
  br i1 %1857, label %1836, label %2224

1858:                                             ; preds = %87
  %1859 = add i64 %89, 3
  %1860 = add i64 %89, 11
  %1861 = icmp ult i64 %1859, %1860
  br i1 %1861, label %1862, label %2224

1862:                                             ; preds = %1858, %1881
  %1863 = phi i64 [ %1882, %1881 ], [ %1859, %1858 ]
  %1864 = inttoptr i64 %1863 to i32*
  %1865 = load i32, i32* %1864, align 4
  %1866 = and i64 %1863, -4294967296
  %1867 = zext i32 %1865 to i64
  %1868 = or i64 %1866, %1867
  %1869 = and i64 %1867, 1
  %1870 = icmp eq i64 %1869, 0
  br i1 %1870, label %1881, label %1871

1871:                                             ; preds = %1862
  %1872 = and i64 %1868, -262144
  %1873 = inttoptr i64 %1872 to %"class.v8::internal::BasicMemoryChunk"*
  %1874 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1873, i64 0, i32 1
  %1875 = load i64, i64* %1874, align 8
  %1876 = and i64 %1875, 24
  %1877 = icmp eq i64 %1876, 0
  br i1 %1877, label %1881, label %1878

1878:                                             ; preds = %1871
  %1879 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1880 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1879, i64 %1863, i64 %1868) #12
  br label %1881

1881:                                             ; preds = %1878, %1871, %1862
  %1882 = add i64 %1863, 4
  %1883 = icmp ult i64 %1882, %1860
  br i1 %1883, label %1862, label %2224

1884:                                             ; preds = %87
  %1885 = add i64 %89, 3
  %1886 = add i64 %89, 11
  %1887 = icmp ult i64 %1885, %1886
  br i1 %1887, label %1888, label %2224

1888:                                             ; preds = %1884, %1907
  %1889 = phi i64 [ %1908, %1907 ], [ %1885, %1884 ]
  %1890 = inttoptr i64 %1889 to i32*
  %1891 = load i32, i32* %1890, align 4
  %1892 = and i64 %1889, -4294967296
  %1893 = zext i32 %1891 to i64
  %1894 = or i64 %1892, %1893
  %1895 = and i64 %1893, 1
  %1896 = icmp eq i64 %1895, 0
  br i1 %1896, label %1907, label %1897

1897:                                             ; preds = %1888
  %1898 = and i64 %1894, -262144
  %1899 = inttoptr i64 %1898 to %"class.v8::internal::BasicMemoryChunk"*
  %1900 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1899, i64 0, i32 1
  %1901 = load i64, i64* %1900, align 8
  %1902 = and i64 %1901, 24
  %1903 = icmp eq i64 %1902, 0
  br i1 %1903, label %1907, label %1904

1904:                                             ; preds = %1897
  %1905 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1906 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1905, i64 %1889, i64 %1894) #12
  br label %1907

1907:                                             ; preds = %1904, %1897, %1888
  %1908 = add i64 %1889, 4
  %1909 = icmp ult i64 %1908, %1886
  br i1 %1909, label %1888, label %2224

1910:                                             ; preds = %87
  %1911 = add i64 %89, 3
  %1912 = add i64 %89, 11
  %1913 = icmp ult i64 %1911, %1912
  br i1 %1913, label %1914, label %2224

1914:                                             ; preds = %1910, %1933
  %1915 = phi i64 [ %1934, %1933 ], [ %1911, %1910 ]
  %1916 = inttoptr i64 %1915 to i32*
  %1917 = load i32, i32* %1916, align 4
  %1918 = and i64 %1915, -4294967296
  %1919 = zext i32 %1917 to i64
  %1920 = or i64 %1918, %1919
  %1921 = and i64 %1919, 1
  %1922 = icmp eq i64 %1921, 0
  br i1 %1922, label %1933, label %1923

1923:                                             ; preds = %1914
  %1924 = and i64 %1920, -262144
  %1925 = inttoptr i64 %1924 to %"class.v8::internal::BasicMemoryChunk"*
  %1926 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1925, i64 0, i32 1
  %1927 = load i64, i64* %1926, align 8
  %1928 = and i64 %1927, 24
  %1929 = icmp eq i64 %1928, 0
  br i1 %1929, label %1933, label %1930

1930:                                             ; preds = %1923
  %1931 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1932 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1931, i64 %1915, i64 %1920) #12
  br label %1933

1933:                                             ; preds = %1930, %1923, %1914
  %1934 = add i64 %1915, 4
  %1935 = icmp ult i64 %1934, %1912
  br i1 %1935, label %1914, label %2224

1936:                                             ; preds = %87
  %1937 = add i64 %89, 3
  %1938 = add i64 %89, 11
  %1939 = icmp ult i64 %1937, %1938
  br i1 %1939, label %1940, label %2224

1940:                                             ; preds = %1936, %1959
  %1941 = phi i64 [ %1960, %1959 ], [ %1937, %1936 ]
  %1942 = inttoptr i64 %1941 to i32*
  %1943 = load i32, i32* %1942, align 4
  %1944 = and i64 %1941, -4294967296
  %1945 = zext i32 %1943 to i64
  %1946 = or i64 %1944, %1945
  %1947 = and i64 %1945, 1
  %1948 = icmp eq i64 %1947, 0
  br i1 %1948, label %1959, label %1949

1949:                                             ; preds = %1940
  %1950 = and i64 %1946, -262144
  %1951 = inttoptr i64 %1950 to %"class.v8::internal::BasicMemoryChunk"*
  %1952 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1951, i64 0, i32 1
  %1953 = load i64, i64* %1952, align 8
  %1954 = and i64 %1953, 24
  %1955 = icmp eq i64 %1954, 0
  br i1 %1955, label %1959, label %1956

1956:                                             ; preds = %1949
  %1957 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1958 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1957, i64 %1941, i64 %1946) #12
  br label %1959

1959:                                             ; preds = %1956, %1949, %1940
  %1960 = add i64 %1941, 4
  %1961 = icmp ult i64 %1960, %1938
  br i1 %1961, label %1940, label %2224

1962:                                             ; preds = %87
  %1963 = add i64 %89, 3
  %1964 = add i64 %89, 11
  %1965 = icmp ult i64 %1963, %1964
  br i1 %1965, label %1966, label %1988

1966:                                             ; preds = %1962, %1985
  %1967 = phi i64 [ %1986, %1985 ], [ %1963, %1962 ]
  %1968 = inttoptr i64 %1967 to i32*
  %1969 = load i32, i32* %1968, align 4
  %1970 = and i64 %1967, -4294967296
  %1971 = zext i32 %1969 to i64
  %1972 = or i64 %1970, %1971
  %1973 = and i64 %1971, 1
  %1974 = icmp eq i64 %1973, 0
  br i1 %1974, label %1985, label %1975

1975:                                             ; preds = %1966
  %1976 = and i64 %1972, -262144
  %1977 = inttoptr i64 %1976 to %"class.v8::internal::BasicMemoryChunk"*
  %1978 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1977, i64 0, i32 1
  %1979 = load i64, i64* %1978, align 8
  %1980 = and i64 %1979, 24
  %1981 = icmp eq i64 %1980, 0
  br i1 %1981, label %1985, label %1982

1982:                                             ; preds = %1975
  %1983 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %1984 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %1983, i64 %1967, i64 %1972) #12
  br label %1985

1985:                                             ; preds = %1982, %1975, %1966
  %1986 = add i64 %1967, 4
  %1987 = icmp ult i64 %1986, %1964
  br i1 %1987, label %1966, label %1988

1988:                                             ; preds = %1985, %1962
  %1989 = add i64 %89, 19
  %1990 = add i64 %89, 23
  %1991 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %1992 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1991, i64 2
  %1993 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %1992, align 8
  call void %1993(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %1989, i64 %1990) #12
  br label %2224

1994:                                             ; preds = %87
  %1995 = add i64 %89, 3
  %1996 = inttoptr i64 %1995 to i32*
  %1997 = load i32, i32* %1996, align 4
  %1998 = lshr i32 %1997, 1
  %1999 = shl i32 %1998, 2
  %2000 = add nsw i32 %1999, 16
  %2001 = sext i32 %2000 to i64
  %2002 = add i64 %91, %2001
  %2003 = icmp ult i64 %1995, %2002
  br i1 %2003, label %2004, label %2224

2004:                                             ; preds = %1994, %2025
  %2005 = phi i32 [ %2027, %2025 ], [ %1997, %1994 ]
  %2006 = phi i64 [ %2023, %2025 ], [ %1995, %1994 ]
  %2007 = and i64 %2006, -4294967296
  %2008 = zext i32 %2005 to i64
  %2009 = or i64 %2007, %2008
  %2010 = and i64 %2008, 1
  %2011 = icmp eq i64 %2010, 0
  br i1 %2011, label %2022, label %2012

2012:                                             ; preds = %2004
  %2013 = and i64 %2009, -262144
  %2014 = inttoptr i64 %2013 to %"class.v8::internal::BasicMemoryChunk"*
  %2015 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2014, i64 0, i32 1
  %2016 = load i64, i64* %2015, align 8
  %2017 = and i64 %2016, 24
  %2018 = icmp eq i64 %2017, 0
  br i1 %2018, label %2022, label %2019

2019:                                             ; preds = %2012
  %2020 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %2021 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2020, i64 %2006, i64 %2009) #12
  br label %2022

2022:                                             ; preds = %2019, %2012, %2004
  %2023 = add i64 %2006, 4
  %2024 = icmp ult i64 %2023, %2002
  br i1 %2024, label %2025, label %2224

2025:                                             ; preds = %2022
  %2026 = inttoptr i64 %2023 to i32*
  %2027 = load i32, i32* %2026, align 4
  br label %2004

2028:                                             ; preds = %87
  %2029 = add i64 %89, 11
  %2030 = inttoptr i64 %2029 to i32*
  %2031 = load i32, i32* %2030, align 4
  %2032 = ashr i32 %2031, 1
  %2033 = mul i32 %2032, 12
  %2034 = add i32 %2033, 24
  %2035 = sext i32 %2034 to i64
  %2036 = add i64 %91, %2035
  %2037 = icmp ult i64 %2029, %2036
  br i1 %2037, label %2038, label %2224

2038:                                             ; preds = %2028, %2059
  %2039 = phi i32 [ %2061, %2059 ], [ %2031, %2028 ]
  %2040 = phi i64 [ %2057, %2059 ], [ %2029, %2028 ]
  %2041 = and i64 %2040, -4294967296
  %2042 = zext i32 %2039 to i64
  %2043 = or i64 %2041, %2042
  %2044 = and i64 %2042, 1
  %2045 = icmp eq i64 %2044, 0
  br i1 %2045, label %2056, label %2046

2046:                                             ; preds = %2038
  %2047 = and i64 %2043, -262144
  %2048 = inttoptr i64 %2047 to %"class.v8::internal::BasicMemoryChunk"*
  %2049 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2048, i64 0, i32 1
  %2050 = load i64, i64* %2049, align 8
  %2051 = and i64 %2050, 24
  %2052 = icmp eq i64 %2051, 0
  br i1 %2052, label %2056, label %2053

2053:                                             ; preds = %2046
  %2054 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %2055 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2054, i64 %2040, i64 %2043) #12
  br label %2056

2056:                                             ; preds = %2053, %2046, %2038
  %2057 = add i64 %2040, 4
  %2058 = icmp ult i64 %2057, %2036
  br i1 %2058, label %2059, label %2224

2059:                                             ; preds = %2056
  %2060 = inttoptr i64 %2057 to i32*
  %2061 = load i32, i32* %2060, align 4
  br label %2038

2062:                                             ; preds = %87
  %2063 = add i64 %89, 3
  %2064 = add i64 %89, 11
  %2065 = icmp ult i64 %2063, %2064
  br i1 %2065, label %2066, label %2088

2066:                                             ; preds = %2062, %2085
  %2067 = phi i64 [ %2086, %2085 ], [ %2063, %2062 ]
  %2068 = inttoptr i64 %2067 to i32*
  %2069 = load i32, i32* %2068, align 4
  %2070 = and i64 %2067, -4294967296
  %2071 = zext i32 %2069 to i64
  %2072 = or i64 %2070, %2071
  %2073 = and i64 %2071, 1
  %2074 = icmp eq i64 %2073, 0
  br i1 %2074, label %2085, label %2075

2075:                                             ; preds = %2066
  %2076 = and i64 %2072, -262144
  %2077 = inttoptr i64 %2076 to %"class.v8::internal::BasicMemoryChunk"*
  %2078 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2077, i64 0, i32 1
  %2079 = load i64, i64* %2078, align 8
  %2080 = and i64 %2079, 24
  %2081 = icmp eq i64 %2080, 0
  br i1 %2081, label %2085, label %2082

2082:                                             ; preds = %2075
  %2083 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %2084 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2083, i64 %2067, i64 %2072) #12
  br label %2085

2085:                                             ; preds = %2082, %2075, %2066
  %2086 = add i64 %2067, 4
  %2087 = icmp ult i64 %2086, %2064
  br i1 %2087, label %2066, label %2088

2088:                                             ; preds = %2085, %2062
  %2089 = add i64 %89, 19
  %2090 = add i64 %89, 23
  %2091 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %31, align 8
  %2092 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %2091, i64 2
  %2093 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %2092, align 8
  call void %2093(%"class.v8::internal::ObjectVisitor"* nonnull %30, i64 %89, i64 %2089, i64 %2090) #12
  br label %2224

2094:                                             ; preds = %87
  %2095 = add i64 %89, 3
  %2096 = add i64 %89, 67
  %2097 = icmp ult i64 %2095, %2096
  br i1 %2097, label %2098, label %2224

2098:                                             ; preds = %2094, %2117
  %2099 = phi i64 [ %2118, %2117 ], [ %2095, %2094 ]
  %2100 = inttoptr i64 %2099 to i32*
  %2101 = load i32, i32* %2100, align 4
  %2102 = and i64 %2099, -4294967296
  %2103 = zext i32 %2101 to i64
  %2104 = or i64 %2102, %2103
  %2105 = and i64 %2103, 1
  %2106 = icmp eq i64 %2105, 0
  br i1 %2106, label %2117, label %2107

2107:                                             ; preds = %2098
  %2108 = and i64 %2104, -262144
  %2109 = inttoptr i64 %2108 to %"class.v8::internal::BasicMemoryChunk"*
  %2110 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2109, i64 0, i32 1
  %2111 = load i64, i64* %2110, align 8
  %2112 = and i64 %2111, 24
  %2113 = icmp eq i64 %2112, 0
  br i1 %2113, label %2117, label %2114

2114:                                             ; preds = %2107
  %2115 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %2116 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2115, i64 %2099, i64 %2104) #12
  br label %2117

2117:                                             ; preds = %2114, %2107, %2098
  %2118 = add i64 %2099, 4
  %2119 = icmp ult i64 %2118, %2096
  br i1 %2119, label %2098, label %2224

2120:                                             ; preds = %87
  %2121 = add i64 %89, 11
  %2122 = add i64 %89, 19
  %2123 = icmp ult i64 %2121, %2122
  br i1 %2123, label %2124, label %2224

2124:                                             ; preds = %2120, %2143
  %2125 = phi i64 [ %2144, %2143 ], [ %2121, %2120 ]
  %2126 = inttoptr i64 %2125 to i32*
  %2127 = load i32, i32* %2126, align 4
  %2128 = and i64 %2125, -4294967296
  %2129 = zext i32 %2127 to i64
  %2130 = or i64 %2128, %2129
  %2131 = and i64 %2129, 1
  %2132 = icmp eq i64 %2131, 0
  br i1 %2132, label %2143, label %2133

2133:                                             ; preds = %2124
  %2134 = and i64 %2130, -262144
  %2135 = inttoptr i64 %2134 to %"class.v8::internal::BasicMemoryChunk"*
  %2136 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2135, i64 0, i32 1
  %2137 = load i64, i64* %2136, align 8
  %2138 = and i64 %2137, 24
  %2139 = icmp eq i64 %2138, 0
  br i1 %2139, label %2143, label %2140

2140:                                             ; preds = %2133
  %2141 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %2142 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2141, i64 %2125, i64 %2130) #12
  br label %2143

2143:                                             ; preds = %2140, %2133, %2124
  %2144 = add i64 %2125, 4
  %2145 = icmp ult i64 %2144, %2122
  br i1 %2145, label %2124, label %2224

2146:                                             ; preds = %87
  %2147 = add i64 %95, 3
  %2148 = inttoptr i64 %2147 to i8*
  %2149 = load atomic i8, i8* %2148 monotonic, align 1
  br label %2224

2150:                                             ; preds = %87
  %2151 = add i64 %95, 3
  %2152 = inttoptr i64 %2151 to i8*
  %2153 = load atomic i8, i8* %2152 monotonic, align 1
  %2154 = zext i8 %2153 to i64
  %2155 = shl nuw nsw i64 %2154, 2
  %2156 = add i64 %89, 3
  %2157 = add i64 %2155, %91
  %2158 = icmp ult i64 %2156, %2157
  br i1 %2158, label %2159, label %2224

2159:                                             ; preds = %2150, %2178
  %2160 = phi i64 [ %2179, %2178 ], [ %2156, %2150 ]
  %2161 = inttoptr i64 %2160 to i32*
  %2162 = load i32, i32* %2161, align 4
  %2163 = and i64 %2160, -4294967296
  %2164 = zext i32 %2162 to i64
  %2165 = or i64 %2163, %2164
  %2166 = and i64 %2164, 1
  %2167 = icmp eq i64 %2166, 0
  br i1 %2167, label %2178, label %2168

2168:                                             ; preds = %2159
  %2169 = and i64 %2165, -262144
  %2170 = inttoptr i64 %2169 to %"class.v8::internal::BasicMemoryChunk"*
  %2171 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2170, i64 0, i32 1
  %2172 = load i64, i64* %2171, align 8
  %2173 = and i64 %2172, 24
  %2174 = icmp eq i64 %2173, 0
  br i1 %2174, label %2178, label %2175

2175:                                             ; preds = %2168
  %2176 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %2177 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2176, i64 %2160, i64 %2165) #12
  br label %2178

2178:                                             ; preds = %2175, %2168, %2159
  %2179 = add i64 %2160, 4
  %2180 = icmp ult i64 %2179, %2157
  br i1 %2180, label %2159, label %2224

2181:                                             ; preds = %87
  %2182 = add i64 %95, 3
  %2183 = inttoptr i64 %2182 to i8*
  %2184 = load atomic i8, i8* %2183 monotonic, align 1
  %2185 = zext i8 %2184 to i32
  %2186 = shl nuw nsw i32 %2185, 2
  call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %95, i64 %89, i32 4, i32 %2186, %"class.v8::internal::ScavengeVisitor"* nonnull %14) #12
  br label %2224

2187:                                             ; preds = %87
  %2188 = add i64 %95, 3
  %2189 = inttoptr i64 %2188 to i8*
  %2190 = load atomic i8, i8* %2189 monotonic, align 1
  %2191 = zext i8 %2190 to i64
  %2192 = shl nuw nsw i64 %2191, 2
  %2193 = add i64 %89, 3
  %2194 = add i64 %2192, %91
  %2195 = icmp ult i64 %2193, %2194
  br i1 %2195, label %2196, label %2224

2196:                                             ; preds = %2187, %2215
  %2197 = phi i64 [ %2216, %2215 ], [ %2193, %2187 ]
  %2198 = inttoptr i64 %2197 to i32*
  %2199 = load i32, i32* %2198, align 4
  %2200 = and i64 %2197, -4294967296
  %2201 = zext i32 %2199 to i64
  %2202 = or i64 %2200, %2201
  %2203 = and i64 %2201, 1
  %2204 = icmp eq i64 %2203, 0
  br i1 %2204, label %2215, label %2205

2205:                                             ; preds = %2196
  %2206 = and i64 %2202, -262144
  %2207 = inttoptr i64 %2206 to %"class.v8::internal::BasicMemoryChunk"*
  %2208 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2207, i64 0, i32 1
  %2209 = load i64, i64* %2208, align 8
  %2210 = and i64 %2209, 24
  %2211 = icmp eq i64 %2210, 0
  br i1 %2211, label %2215, label %2212

2212:                                             ; preds = %2205
  %2213 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %29, align 8
  %2214 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2213, i64 %2197, i64 %2202) #12
  br label %2215

2215:                                             ; preds = %2212, %2205, %2196
  %2216 = add i64 %2197, 4
  %2217 = icmp ult i64 %2216, %2194
  br i1 %2217, label %2196, label %2224

2218:                                             ; preds = %87
  %2219 = add i64 %89, 3
  %2220 = inttoptr i64 %2219 to i32*
  %2221 = load atomic i32, i32* %2220 monotonic, align 4
  br label %2224

2222:                                             ; preds = %87, %87
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

2223:                                             ; preds = %87
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

2224:                                             ; preds = %2215, %2178, %2143, %2117, %2056, %2022, %1959, %1933, %1907, %1881, %1855, %1829, %1795, %1769, %1732, %1705, %1673, %1639, %1604, %1569, %1531, %1433, %1399, %1362, %1331, %1302, %1259, %1205, %1173, %1145, %1119, %1093, %1018, %984, %933, %907, %875, %824, %793, %762, %730, %673, %647, %619, %352, %263, %257, %168, %355, %87, %87, %87, %87, %128, %130, %136, %140, %145, %197, %198, %231, %260, %327, %329, %359, %395, %427, %428, %434, %471, %478, %515, %546, %577, %582, %622, %650, %703, %733, %765, %796, %853, %878, %910, %962, %987, %1024, %1065, %1096, %1122, %1148, %1176, %1182, %1208, %1264, %1274, %1308, %1334, %1368, %1405, %1506, %1537, %1572, %1607, %1642, %1679, %1709, %1735, %1746, %1772, %1798, %1802, %1806, %1832, %1858, %1884, %1910, %1936, %1988, %1994, %2028, %2088, %2094, %2120, %2146, %2150, %2181, %2187, %2218
  br i1 %48, label %2239, label %2225

2225:                                             ; preds = %2224
  %2226 = add i64 %88, 1
  %2227 = and i64 %2226, 127
  %2228 = icmp eq i64 %2227, 0
  br i1 %2228, label %2229, label %2239

2229:                                             ; preds = %2225
  %2230 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %25, align 8
  %2231 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2230, i64 0, i32 1, i32 1
  %2232 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2231 to i64*
  %2233 = load atomic i64, i64* %2232 monotonic, align 8
  %2234 = icmp eq i64 %2233, 0
  br i1 %2234, label %2239, label %2235

2235:                                             ; preds = %2229
  %2236 = load void (%"class.v8::JobDelegate"*)**, void (%"class.v8::JobDelegate"*)*** %49, align 8
  %2237 = getelementptr inbounds void (%"class.v8::JobDelegate"*)*, void (%"class.v8::JobDelegate"*)** %2236, i64 1
  %2238 = load void (%"class.v8::JobDelegate"*)*, void (%"class.v8::JobDelegate"*)** %2237, align 8
  call void %2238(%"class.v8::JobDelegate"* nonnull %1) #12
  br label %2239

2239:                                             ; preds = %2224, %2229, %2235, %2225
  %2240 = phi i64 [ %2226, %2229 ], [ %2226, %2235 ], [ %2226, %2225 ], [ %88, %2224 ]
  %2241 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %23, align 8
  %2242 = load i32, i32* %24, align 8
  %2243 = sext i32 %2242 to i64
  %2244 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2241, i64 0, i32 0, i32 0, i64 %2243, i32 0
  %2245 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2244, align 8
  %2246 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2245, i64 0, i32 1
  %2247 = load i64, i64* %2246, align 8
  %2248 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2241, i64 0, i32 1, i32 0, i64 %2243, i32 0
  %2249 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %2248, align 8
  %2250 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %2249, i64 0, i32 1
  %2251 = load i64, i64* %2250, align 8
  %2252 = add i64 %2251, %2247
  %2253 = icmp ult i64 %2252, 128
  br i1 %2253, label %83, label %2254

2254:                                             ; preds = %2239, %83, %79, %64
  %2255 = phi i64 [ %65, %64 ], [ %65, %79 ], [ %2240, %83 ], [ %2240, %2239 ]
  %2256 = phi i1 [ true, %64 ], [ true, %79 ], [ false, %83 ], [ false, %2239 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 0, i64 16, i1 false) #12
  br i1 %48, label %2257, label %2319

2257:                                             ; preds = %2254, %2318
  %2258 = phi i1 [ false, %2318 ], [ %2256, %2254 ]
  %2259 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %23, align 8
  %2260 = load i32, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #12
  store i64 0, i64* %52, align 8
  store i32 0, i32* %53, align 8
  %2261 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2259, i64 0, i32 0
  %2262 = call zeroext i1 @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE3PopEiPS5_(%"class.v8::internal::Worklist.1179"* %2261, i32 %2260, %"struct.std::__1::pair.1282"* nonnull %3) #12
  br i1 %2262, label %2270, label %2263

2263:                                             ; preds = %2257
  %2264 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2259, i64 0, i32 1
  %2265 = call zeroext i1 @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE3PopEiPS3_(%"class.v8::internal::Worklist.1181"* %2264, i32 %2260, %"struct.v8::internal::Scavenger::PromotionListEntry"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  br i1 %2265, label %2266, label %2401

2266:                                             ; preds = %2263
  %2267 = load i64, i64* %54, align 8
  %2268 = load i64, i64* %56, align 8
  %2269 = load i32, i32* %55, align 8
  br label %2279

2270:                                             ; preds = %2257
  %2271 = load i64, i64* %52, align 8
  store i64 %2271, i64* %54, align 8
  %2272 = load i32, i32* %53, align 8
  store i32 %2272, i32* %55, align 8
  %2273 = and i64 %2271, -4294967296
  %2274 = add i64 %2271, -1
  %2275 = inttoptr i64 %2274 to i32*
  %2276 = load atomic i32, i32* %2275 monotonic, align 4
  %2277 = zext i32 %2276 to i64
  %2278 = or i64 %2273, %2277
  store i64 %2278, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  br label %2279

2279:                                             ; preds = %2266, %2270
  %2280 = phi i32 [ %2269, %2266 ], [ %2272, %2270 ]
  %2281 = phi i64 [ %2268, %2266 ], [ %2278, %2270 ]
  %2282 = phi i64 [ %2267, %2266 ], [ %2271, %2270 ]
  %2283 = load i8, i8* %57, align 2, !range !2
  %2284 = icmp eq i8 %2283, 0
  br i1 %2284, label %2310, label %2285

2285:                                             ; preds = %2279
  %2286 = and i64 %2282, -262144
  %2287 = or i64 %2286, 272
  %2288 = sub i64 %2282, %2286
  %2289 = trunc i64 %2288 to i32
  %2290 = lshr i32 %2289, 2
  %2291 = and i32 %2290, 31
  %2292 = shl i32 1, %2291
  %2293 = inttoptr i64 %2287 to i32*
  %2294 = lshr i64 %2288, 7
  %2295 = and i64 %2294, 33554431
  %2296 = getelementptr inbounds i32, i32* %2293, i64 %2295
  %2297 = load atomic i32, i32* %2296 acquire, align 4
  %2298 = and i32 %2297, %2292
  %2299 = icmp eq i32 %2298, 0
  br i1 %2299, label %2310, label %2300

2300:                                             ; preds = %2285
  %2301 = shl i32 %2292, 1
  %2302 = icmp eq i32 %2301, 0
  %2303 = getelementptr inbounds i32, i32* %2296, i64 1
  %2304 = select i1 %2302, i32 1, i32 %2301
  %2305 = select i1 %2302, i32* %2303, i32* %2296
  %2306 = load atomic i32, i32* %2305 acquire, align 4
  %2307 = and i32 %2306, %2304
  %2308 = icmp ne i32 %2307, 0
  %2309 = zext i1 %2308 to i8
  br label %2310

2310:                                             ; preds = %2300, %2285, %2279
  %2311 = phi i8 [ 0, %2279 ], [ 0, %2285 ], [ %2309, %2300 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal40IterateAndScavengePromotedObjectsVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  store %"class.v8::internal::Scavenger"* %0, %"class.v8::internal::Scavenger"** %60, align 8
  store i8 %2311, i8* %61, align 8
  %2312 = add i64 %2281, 7
  %2313 = inttoptr i64 %2312 to i16*
  %2314 = load atomic i16, i16* %2313 monotonic, align 2
  call void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_40IterateAndScavengePromotedObjectsVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext %2314, i64 %2281, i64 %2282, i32 %2280, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* nonnull %12) #12
  %2315 = load atomic i16, i16* %2313 monotonic, align 2
  %2316 = icmp eq i16 %2315, 1086
  br i1 %2316, label %2317, label %2318

2317:                                             ; preds = %2310
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  store i64 %2282, i64* %63, align 8
  call void @_ZN2v88internal13JSArrayBuffer26YoungMarkExtensionPromotedEv(%"class.v8::internal::JSArrayBuffer"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  br label %2318

2318:                                             ; preds = %2317, %2310
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  br label %2257

2319:                                             ; preds = %2254, %2396
  %2320 = phi i64 [ %2382, %2396 ], [ %2255, %2254 ]
  %2321 = phi i1 [ false, %2396 ], [ %2256, %2254 ]
  %2322 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %23, align 8
  %2323 = load i32, i32* %24, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #12
  store i64 0, i64* %52, align 8
  store i32 0, i32* %53, align 8
  %2324 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2322, i64 0, i32 0
  %2325 = call zeroext i1 @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE3PopEiPS5_(%"class.v8::internal::Worklist.1179"* %2324, i32 %2323, %"struct.std::__1::pair.1282"* nonnull %3) #12
  br i1 %2325, label %2326, label %2335

2326:                                             ; preds = %2319
  %2327 = load i64, i64* %52, align 8
  store i64 %2327, i64* %54, align 8
  %2328 = load i32, i32* %53, align 8
  store i32 %2328, i32* %55, align 8
  %2329 = and i64 %2327, -4294967296
  %2330 = add i64 %2327, -1
  %2331 = inttoptr i64 %2330 to i32*
  %2332 = load atomic i32, i32* %2331 monotonic, align 4
  %2333 = zext i32 %2332 to i64
  %2334 = or i64 %2329, %2333
  store i64 %2334, i64* %56, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  br label %2342

2335:                                             ; preds = %2319
  %2336 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2322, i64 0, i32 1
  %2337 = call zeroext i1 @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE3PopEiPS3_(%"class.v8::internal::Worklist.1181"* %2336, i32 %2323, %"struct.v8::internal::Scavenger::PromotionListEntry"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  br i1 %2337, label %2338, label %2401

2338:                                             ; preds = %2335
  %2339 = load i64, i64* %54, align 8
  %2340 = load i64, i64* %56, align 8
  %2341 = load i32, i32* %55, align 8
  br label %2342

2342:                                             ; preds = %2338, %2326
  %2343 = phi i32 [ %2341, %2338 ], [ %2328, %2326 ]
  %2344 = phi i64 [ %2340, %2338 ], [ %2334, %2326 ]
  %2345 = phi i64 [ %2339, %2338 ], [ %2327, %2326 ]
  %2346 = load i8, i8* %57, align 2, !range !2
  %2347 = icmp eq i8 %2346, 0
  br i1 %2347, label %2373, label %2348

2348:                                             ; preds = %2342
  %2349 = and i64 %2345, -262144
  %2350 = or i64 %2349, 272
  %2351 = sub i64 %2345, %2349
  %2352 = trunc i64 %2351 to i32
  %2353 = lshr i32 %2352, 2
  %2354 = and i32 %2353, 31
  %2355 = shl i32 1, %2354
  %2356 = inttoptr i64 %2350 to i32*
  %2357 = lshr i64 %2351, 7
  %2358 = and i64 %2357, 33554431
  %2359 = getelementptr inbounds i32, i32* %2356, i64 %2358
  %2360 = load atomic i32, i32* %2359 acquire, align 4
  %2361 = and i32 %2360, %2355
  %2362 = icmp eq i32 %2361, 0
  br i1 %2362, label %2373, label %2363

2363:                                             ; preds = %2348
  %2364 = shl i32 %2355, 1
  %2365 = icmp eq i32 %2364, 0
  %2366 = getelementptr inbounds i32, i32* %2359, i64 1
  %2367 = select i1 %2365, i32 1, i32 %2364
  %2368 = select i1 %2365, i32* %2366, i32* %2359
  %2369 = load atomic i32, i32* %2368 acquire, align 4
  %2370 = and i32 %2369, %2367
  %2371 = icmp ne i32 %2370, 0
  %2372 = zext i1 %2371 to i8
  br label %2373

2373:                                             ; preds = %2363, %2348, %2342
  %2374 = phi i8 [ 0, %2342 ], [ 0, %2348 ], [ %2372, %2363 ]
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal40IterateAndScavengePromotedObjectsVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %59, align 8
  store %"class.v8::internal::Scavenger"* %0, %"class.v8::internal::Scavenger"** %60, align 8
  store i8 %2374, i8* %61, align 8
  %2375 = add i64 %2344, 7
  %2376 = inttoptr i64 %2375 to i16*
  %2377 = load atomic i16, i16* %2376 monotonic, align 2
  call void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_40IterateAndScavengePromotedObjectsVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext %2377, i64 %2344, i64 %2345, i32 %2343, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* nonnull %12) #12
  %2378 = load atomic i16, i16* %2376 monotonic, align 2
  %2379 = icmp eq i16 %2378, 1086
  br i1 %2379, label %2380, label %2381

2380:                                             ; preds = %2373
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #12
  store i64 %2345, i64* %63, align 8
  call void @_ZN2v88internal13JSArrayBuffer26YoungMarkExtensionPromotedEv(%"class.v8::internal::JSArrayBuffer"* nonnull %13) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #12
  br label %2381

2381:                                             ; preds = %2373, %2380
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #12
  %2382 = add i64 %2320, 1
  %2383 = and i64 %2382, 127
  %2384 = icmp eq i64 %2383, 0
  br i1 %2384, label %2385, label %2396

2385:                                             ; preds = %2381
  %2386 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %23, align 8
  %2387 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2386, i64 0, i32 0, i32 1, i32 1
  %2388 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2387 to i64*
  %2389 = load atomic i64, i64* %2388 monotonic, align 8
  %2390 = icmp eq i64 %2389, 0
  br i1 %2390, label %2391, label %2397

2391:                                             ; preds = %2385
  %2392 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2386, i64 0, i32 1, i32 1, i32 1
  %2393 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %2392 to i64*
  %2394 = load atomic i64, i64* %2393 monotonic, align 8
  %2395 = icmp eq i64 %2394, 0
  br i1 %2395, label %2396, label %2397

2396:                                             ; preds = %2391, %2397, %2381
  br label %2319

2397:                                             ; preds = %2385, %2391
  %2398 = load void (%"class.v8::JobDelegate"*)**, void (%"class.v8::JobDelegate"*)*** %49, align 8
  %2399 = getelementptr inbounds void (%"class.v8::JobDelegate"*)*, void (%"class.v8::JobDelegate"*)** %2398, i64 1
  %2400 = load void (%"class.v8::JobDelegate"*)*, void (%"class.v8::JobDelegate"*)** %2399, align 8
  call void %2400(%"class.v8::JobDelegate"* nonnull %1) #12
  br label %2396

2401:                                             ; preds = %2335, %2263
  %2402 = phi i64 [ %2255, %2263 ], [ %2320, %2335 ]
  %2403 = phi i1 [ %2258, %2263 ], [ %2321, %2335 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #12
  br i1 %2403, label %2404, label %64

2404:                                             ; preds = %2401
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #12
  ret void
}

declare void @_ZN2v88internal12PrintIsolateEPvPKcz(i8*, i8*, ...) local_unnamed_addr #1

declare { i8, i64 } @_ZN2v88internal14IndexGenerator7GetNextEv(%"class.v8::internal::IndexGenerator"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger12ScavengePageEPNS0_11MemoryChunkE(%"class.v8::internal::Scavenger"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::Code", align 8
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = alloca %"class.v8::internal::RelocInfo", align 8
  %6 = alloca %"class.v8::internal::RelocInfo", align 8
  %7 = alloca %"class.v8::internal::RelocInfo", align 8
  %8 = alloca %"class.v8::internal::RelocInfo", align 8
  %9 = alloca %"class.v8::internal::HeapObject", align 8
  %10 = alloca %"class.v8::internal::InvalidatedSlotsFilter", align 8
  %11 = alloca %"class.v8::internal::InvalidatedSlotsFilter", align 8
  %12 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 2
  %13 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %13, i64 0, i32 40
  %15 = load i8, i8* %14, align 8, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %23, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %19 = load i64, i64* %18, align 8
  %20 = and i64 %19, 1
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %23, label %22

22:                                               ; preds = %17
  tail call void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"* %1) #12
  br label %23

23:                                               ; preds = %2, %17, %22
  %24 = phi i8 [ 0, %17 ], [ 1, %22 ], [ 0, %2 ]
  %25 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 1, i64 0
  %26 = bitcast %"class.v8::internal::SlotSet"** %25 to i64*
  %27 = load atomic i64, i64* %26 acquire, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %212, label %29

29:                                               ; preds = %23
  %30 = bitcast %"class.v8::internal::InvalidatedSlotsFilter"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %30) #12
  call void @_ZN2v88internal22InvalidatedSlotsFilter8OldToNewEPNS0_11MemoryChunkE(%"class.v8::internal::InvalidatedSlotsFilter"* nonnull sret %10, %"class.v8::internal::MemoryChunk"* %1) #12
  %31 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 2, i32 0
  %32 = load %"class.v8::internal::Worklist.1177"*, %"class.v8::internal::Worklist.1177"** %31, align 8
  %33 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 2, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = load atomic i64, i64* %26 acquire, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %207, label %37

37:                                               ; preds = %29
  %38 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 17
  %39 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %40 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 0
  %41 = load i64, i64* %40, align 8
  %42 = add i64 %41, 4095
  %43 = lshr i64 %42, 12
  %44 = icmp eq i64 %43, 0
  br i1 %44, label %178, label %45

45:                                               ; preds = %37
  %46 = inttoptr i64 %35 to %"class.v8::internal::SlotSet::Bucket"**
  %47 = getelementptr inbounds %"class.v8::internal::PossiblyEmptyBuckets", %"class.v8::internal::PossiblyEmptyBuckets"* %38, i64 0, i32 0
  %48 = add nuw nsw i64 %43, 63
  %49 = lshr i64 %48, 6
  %50 = shl nuw nsw i64 %49, 3
  %51 = icmp ugt i64 %48, 127
  %52 = icmp ugt i64 %49, 2
  %53 = select i1 %52, i64 %49, i64 2
  %54 = shl nuw nsw i64 %53, 3
  %55 = add nsw i64 %54, -8
  br label %56

56:                                               ; preds = %175, %45
  %57 = phi i64 [ 0, %45 ], [ %176, %175 ]
  %58 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %46, i64 %57
  %59 = bitcast %"class.v8::internal::SlotSet::Bucket"** %58 to i64*
  %60 = load atomic i64, i64* %59 acquire, align 8
  %61 = inttoptr i64 %60 to %"class.v8::internal::SlotSet::Bucket"*
  %62 = icmp eq i64 %60, 0
  br i1 %62, label %175, label %63

63:                                               ; preds = %56
  %64 = shl i64 %57, 10
  br label %67

65:                                               ; preds = %134
  %66 = icmp eq i64 %135, 0
  br i1 %66, label %139, label %175

67:                                               ; preds = %134, %63
  %68 = phi i64 [ 0, %63 ], [ %136, %134 ]
  %69 = phi i64 [ 0, %63 ], [ %135, %134 ]
  %70 = phi i64 [ %64, %63 ], [ %137, %134 ]
  %71 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %61, i64 0, i32 0, i64 %68
  %72 = load atomic i32, i32* %71 acquire, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %134, label %74

74:                                               ; preds = %67, %110
  %75 = phi i64 [ %116, %110 ], [ %69, %67 ]
  %76 = phi i32 [ %114, %110 ], [ 0, %67 ]
  %77 = phi i32 [ %117, %110 ], [ %72, %67 ]
  %78 = call i32 @llvm.cttz.i32(i32 %77, i1 false) #12, !range !28
  %79 = shl i32 1, %78
  %80 = zext i32 %78 to i64
  %81 = add i64 %70, %80
  %82 = shl i64 %81, 2
  %83 = add i64 %82, %39
  %84 = call zeroext i1 @_ZN2v88internal22InvalidatedSlotsFilter7IsValidEm(%"class.v8::internal::InvalidatedSlotsFilter"* nonnull %10, i64 %83) #12
  br i1 %84, label %85, label %110

85:                                               ; preds = %74
  %86 = inttoptr i64 %83 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = and i64 %83, -4294967296
  %89 = zext i32 %87 to i64
  %90 = or i64 %88, %89
  %91 = and i64 %89, 1
  %92 = icmp ne i64 %91, 0
  %93 = icmp ne i32 %87, 3
  %94 = and i1 %93, %92
  br i1 %94, label %95, label %110

95:                                               ; preds = %85
  %96 = and i64 %90, -262144
  %97 = inttoptr i64 %96 to %"class.v8::internal::BasicMemoryChunk"*
  %98 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %97, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 8
  %101 = icmp eq i64 %100, 0
  br i1 %101, label %105, label %102

102:                                              ; preds = %95
  %103 = and i64 %90, -3
  %104 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %0, i64 %83, i64 %103) #12
  br label %110

105:                                              ; preds = %95
  %106 = lshr i64 %99, 4
  %107 = trunc i64 %106 to i32
  %108 = and i32 %107, 1
  %109 = xor i32 %108, 1
  br label %110

110:                                              ; preds = %105, %102, %85, %74
  %111 = phi i32 [ 1, %74 ], [ %109, %105 ], [ %104, %102 ], [ 1, %85 ]
  %112 = icmp eq i32 %111, 0
  %113 = select i1 %112, i32 0, i32 %79
  %114 = or i32 %113, %76
  %115 = zext i1 %112 to i64
  %116 = add i64 %75, %115
  %117 = xor i32 %79, %77
  %118 = icmp eq i32 %117, 0
  br i1 %118, label %119, label %74

119:                                              ; preds = %110
  %120 = xor i32 %114, -1
  %121 = and i32 %72, %120
  %122 = icmp eq i32 %72, %121
  br i1 %122, label %134, label %123

123:                                              ; preds = %119
  %124 = load atomic i32, i32* %71 monotonic, align 4
  br label %125

125:                                              ; preds = %129, %123
  %126 = phi i32 [ %124, %123 ], [ %132, %129 ]
  %127 = and i32 %126, %114
  %128 = icmp eq i32 %127, 0
  br i1 %128, label %134, label %129

129:                                              ; preds = %125
  %130 = and i32 %126, %120
  %131 = cmpxchg volatile i32* %71, i32 %126, i32 %130 release monotonic
  %132 = extractvalue { i32, i1 } %131, 0
  %133 = extractvalue { i32, i1 } %131, 1
  br i1 %133, label %134, label %125

134:                                              ; preds = %129, %125, %119, %67
  %135 = phi i64 [ %69, %67 ], [ %116, %119 ], [ %116, %125 ], [ %116, %129 ]
  %136 = add nuw nsw i64 %68, 1
  %137 = add nuw nsw i64 %70, 32
  %138 = icmp eq i64 %136, 32
  br i1 %138, label %65, label %67

139:                                              ; preds = %65
  %140 = load i64, i64* %47, align 8
  %141 = and i64 %140, 1
  %142 = icmp eq i64 %141, 0
  br i1 %142, label %152, label %143

143:                                              ; preds = %139
  %144 = lshr i64 %57, 6
  %145 = and i64 %140, -2
  %146 = inttoptr i64 %145 to i64*
  %147 = getelementptr inbounds i64, i64* %146, i64 %144
  %148 = and i64 %57, 63
  %149 = shl i64 1, %148
  %150 = load i64, i64* %147, align 8
  %151 = or i64 %150, %149
  store i64 %151, i64* %147, align 8
  br label %175

152:                                              ; preds = %139
  %153 = icmp ult i64 %57, 63
  br i1 %153, label %154, label %157

154:                                              ; preds = %152
  %155 = shl i64 2, %57
  %156 = or i64 %140, %155
  store i64 %156, i64* %47, align 8
  br label %175

157:                                              ; preds = %152
  %158 = call i8* @_ZN2v88internal12AlignedAllocEmm(i64 %50, i64 8) #12
  %159 = bitcast i8* %158 to i64*
  %160 = load i64, i64* %47, align 8
  %161 = lshr i64 %160, 1
  store i64 %161, i64* %159, align 8
  br i1 %51, label %162, label %164

162:                                              ; preds = %157
  %163 = getelementptr i8, i8* %158, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 %55, i1 false) #12
  br label %164

164:                                              ; preds = %162, %157
  %165 = ptrtoint i8* %158 to i64
  %166 = add i64 %165, 1
  store i64 %166, i64* %47, align 8
  %167 = lshr i64 %57, 6
  %168 = and i64 %166, -2
  %169 = inttoptr i64 %168 to i64*
  %170 = getelementptr inbounds i64, i64* %169, i64 %167
  %171 = and i64 %57, 63
  %172 = shl i64 1, %171
  %173 = load i64, i64* %170, align 8
  %174 = or i64 %173, %172
  store i64 %174, i64* %170, align 8
  br label %175

175:                                              ; preds = %164, %154, %143, %65, %56
  %176 = add nuw nsw i64 %57, 1
  %177 = icmp eq i64 %176, %43
  br i1 %177, label %178, label %56

178:                                              ; preds = %175, %37
  %179 = getelementptr inbounds %"class.v8::internal::PossiblyEmptyBuckets", %"class.v8::internal::PossiblyEmptyBuckets"* %38, i64 0, i32 0
  %180 = load i64, i64* %179, align 8
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %207, label %182

182:                                              ; preds = %178
  %183 = sext i32 %34 to i64
  %184 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %32, i64 0, i32 0, i64 %183, i32 0
  %185 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %184, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %185, i64 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = icmp eq i64 %187, 64
  br i1 %188, label %192, label %189

189:                                              ; preds = %182
  %190 = add i64 %187, 1
  store i64 %190, i64* %186, align 8
  %191 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %185, i64 0, i32 2, i64 %187
  store %"class.v8::internal::MemoryChunk"* %1, %"class.v8::internal::MemoryChunk"** %191, align 8
  br label %207

192:                                              ; preds = %182
  %193 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %32, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %193) #12
  %194 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %32, i64 0, i32 1, i32 1
  %195 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %194 to i64*
  %196 = load i64, i64* %195, align 8
  %197 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %185 to i64*
  store i64 %196, i64* %197, align 8
  %198 = ptrtoint %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %185 to i64
  store atomic volatile i64 %198, i64* %195 monotonic, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %32, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = atomicrmw add i64* %199, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %193) #12
  %201 = call i8* @_Znwm(i64 528) #17
  %202 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %184 to i8**
  store i8* %201, i8** %202, align 8
  %203 = getelementptr inbounds i8, i8* %201, i64 8
  %204 = bitcast i8* %203 to i64*
  store i64 1, i64* %204, align 8
  %205 = getelementptr inbounds i8, i8* %201, i64 16
  %206 = bitcast i8* %205 to %"class.v8::internal::MemoryChunk"**
  store %"class.v8::internal::MemoryChunk"* %1, %"class.v8::internal::MemoryChunk"** %206, align 8
  br label %207

207:                                              ; preds = %29, %178, %189, %192
  %208 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %10, i64 0, i32 6, i32 0
  %209 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %10, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %210 = bitcast %"class.std::__1::__tree_end_node"* %209 to %"class.std::__1::__tree_node"**
  %211 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %210, align 8
  call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %208, %"class.std::__1::__tree_node"* %211) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %30) #12
  br label %212

212:                                              ; preds = %23, %207
  %213 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 4
  %214 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %213, align 8
  %215 = icmp eq %"class.v8::internal::SlotSet"* %214, null
  br i1 %215, label %316, label %216

216:                                              ; preds = %212
  %217 = bitcast %"class.v8::internal::InvalidatedSlotsFilter"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %217) #12
  call void @_ZN2v88internal22InvalidatedSlotsFilter8OldToNewEPNS0_11MemoryChunkE(%"class.v8::internal::InvalidatedSlotsFilter"* nonnull sret %11, %"class.v8::internal::MemoryChunk"* %1) #12
  %218 = bitcast %"class.v8::internal::SlotSet"** %213 to i64*
  %219 = load atomic i64, i64* %218 acquire, align 8
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %311, label %221

221:                                              ; preds = %216
  %222 = ptrtoint %"class.v8::internal::MemoryChunk"* %1 to i64
  %223 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 0
  %224 = load i64, i64* %223, align 8
  %225 = add i64 %224, 4095
  %226 = lshr i64 %225, 12
  %227 = icmp eq i64 %226, 0
  br i1 %227, label %311, label %228

228:                                              ; preds = %221
  %229 = inttoptr i64 %219 to %"class.v8::internal::SlotSet::Bucket"**
  br label %230

230:                                              ; preds = %308, %228
  %231 = phi i64 [ 0, %228 ], [ %309, %308 ]
  %232 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %229, i64 %231
  %233 = bitcast %"class.v8::internal::SlotSet::Bucket"** %232 to i64*
  %234 = load atomic i64, i64* %233 acquire, align 8
  %235 = inttoptr i64 %234 to %"class.v8::internal::SlotSet::Bucket"*
  %236 = icmp eq i64 %234, 0
  br i1 %236, label %308, label %237

237:                                              ; preds = %230
  %238 = shl i64 %231, 10
  br label %239

239:                                              ; preds = %304, %237
  %240 = phi i64 [ 0, %237 ], [ %305, %304 ]
  %241 = phi i64 [ %238, %237 ], [ %306, %304 ]
  %242 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %235, i64 0, i32 0, i64 %240
  %243 = load atomic i32, i32* %242 acquire, align 4
  %244 = icmp eq i32 %243, 0
  br i1 %244, label %304, label %245

245:                                              ; preds = %239, %284
  %246 = phi i32 [ %286, %284 ], [ 0, %239 ]
  %247 = phi i32 [ %287, %284 ], [ %243, %239 ]
  %248 = call i32 @llvm.cttz.i32(i32 %247, i1 false) #12, !range !28
  %249 = shl i32 1, %248
  %250 = zext i32 %248 to i64
  %251 = add i64 %241, %250
  %252 = shl i64 %251, 2
  %253 = add i64 %252, %222
  %254 = call zeroext i1 @_ZN2v88internal22InvalidatedSlotsFilter7IsValidEm(%"class.v8::internal::InvalidatedSlotsFilter"* nonnull %11, i64 %253) #12
  br i1 %254, label %255, label %284

255:                                              ; preds = %245
  %256 = inttoptr i64 %253 to i32*
  %257 = load i32, i32* %256, align 4
  %258 = and i64 %253, -4294967296
  %259 = zext i32 %257 to i64
  %260 = or i64 %258, %259
  %261 = and i64 %259, 1
  %262 = icmp ne i64 %261, 0
  %263 = icmp ne i32 %257, 3
  %264 = and i1 %263, %262
  br i1 %264, label %265, label %284

265:                                              ; preds = %255
  %266 = and i64 %260, -262144
  %267 = inttoptr i64 %266 to %"class.v8::internal::BasicMemoryChunk"*
  %268 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %267, i64 0, i32 1
  %269 = load i64, i64* %268, align 8
  %270 = and i64 %269, 8
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %275, label %272

272:                                              ; preds = %265
  %273 = and i64 %260, -3
  %274 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %0, i64 %253, i64 %273) #12
  br label %280

275:                                              ; preds = %265
  %276 = lshr i64 %269, 4
  %277 = trunc i64 %276 to i32
  %278 = and i32 %277, 1
  %279 = xor i32 %278, 1
  br label %280

280:                                              ; preds = %275, %272
  %281 = phi i32 [ %279, %275 ], [ %274, %272 ]
  %282 = icmp eq i32 %281, 0
  %283 = select i1 %282, i32 0, i32 %249
  br label %284

284:                                              ; preds = %280, %255, %245
  %285 = phi i32 [ %249, %245 ], [ %249, %255 ], [ %283, %280 ]
  %286 = or i32 %285, %246
  %287 = xor i32 %249, %247
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %245

289:                                              ; preds = %284
  %290 = xor i32 %286, -1
  %291 = and i32 %243, %290
  %292 = icmp eq i32 %243, %291
  br i1 %292, label %304, label %293

293:                                              ; preds = %289
  %294 = load atomic i32, i32* %242 monotonic, align 4
  br label %295

295:                                              ; preds = %299, %293
  %296 = phi i32 [ %294, %293 ], [ %302, %299 ]
  %297 = and i32 %296, %286
  %298 = icmp eq i32 %297, 0
  br i1 %298, label %304, label %299

299:                                              ; preds = %295
  %300 = and i32 %296, %290
  %301 = cmpxchg volatile i32* %242, i32 %296, i32 %300 release monotonic
  %302 = extractvalue { i32, i1 } %301, 0
  %303 = extractvalue { i32, i1 } %301, 1
  br i1 %303, label %304, label %295

304:                                              ; preds = %299, %295, %289, %239
  %305 = add nuw nsw i64 %240, 1
  %306 = add nuw nsw i64 %241, 32
  %307 = icmp eq i64 %305, 32
  br i1 %307, label %308, label %239

308:                                              ; preds = %304, %230
  %309 = add nuw nsw i64 %231, 1
  %310 = icmp eq i64 %309, %226
  br i1 %310, label %311, label %230

311:                                              ; preds = %308, %216, %221
  %312 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %11, i64 0, i32 6, i32 0
  %313 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %11, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0
  %314 = bitcast %"class.std::__1::__tree_end_node"* %313 to %"class.std::__1::__tree_node"**
  %315 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %314, align 8
  call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %312, %"class.std::__1::__tree_node"* %315) #12
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %217) #12
  br label %316

316:                                              ; preds = %212, %311
  %317 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 6, i64 0
  %318 = load %"class.std::__1::set"*, %"class.std::__1::set"** %317, align 8
  %319 = icmp eq %"class.std::__1::set"* %318, null
  br i1 %319, label %321, label %320

320:                                              ; preds = %316
  call void @_ZN2v88internal11MemoryChunk23ReleaseInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"* %1) #12
  br label %321

321:                                              ; preds = %316, %320
  %322 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 5, i64 0
  %323 = bitcast %"class.v8::internal::TypedSlotSet"** %322 to i64*
  %324 = load atomic i64, i64* %323 acquire, align 8
  %325 = inttoptr i64 %324 to %"class.v8::internal::TypedSlotSet"*
  %326 = icmp eq i64 %324, 0
  br i1 %326, label %546, label %327

327:                                              ; preds = %321
  %328 = getelementptr inbounds %"class.v8::internal::TypedSlotSet", %"class.v8::internal::TypedSlotSet"* %325, i64 0, i32 0, i32 1
  %329 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %328, align 8
  %330 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %329, null
  br i1 %330, label %545, label %331

331:                                              ; preds = %327
  %332 = getelementptr inbounds %"class.v8::internal::TypedSlotSet", %"class.v8::internal::TypedSlotSet"* %325, i64 0, i32 1
  %333 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %334 = bitcast %"class.v8::internal::HeapObject"* %9 to i8*
  %335 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %9, i64 0, i32 0, i32 0, i32 0
  %336 = ptrtoint %"class.v8::internal::HeapObject"* %9 to i64
  %337 = bitcast %"class.v8::internal::RelocInfo"* %8 to i8*
  %338 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %8, i64 0, i32 0
  %339 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %8, i64 0, i32 1
  %340 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %8, i64 0, i32 2
  %341 = bitcast i64* %340 to i8*
  %342 = bitcast %"class.v8::internal::RelocInfo"* %7 to i8*
  %343 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %7, i64 0, i32 0
  %344 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %7, i64 0, i32 1
  %345 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %7, i64 0, i32 2
  %346 = bitcast i64* %345 to i8*
  %347 = bitcast %"class.v8::internal::RelocInfo"* %6 to i8*
  %348 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %6, i64 0, i32 0
  %349 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %6, i64 0, i32 1
  %350 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %6, i64 0, i32 2
  %351 = bitcast i64* %350 to i8*
  %352 = bitcast %"class.v8::internal::Code"* %3 to i8*
  %353 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %354 = ptrtoint %"class.v8::internal::Code"* %3 to i64
  %355 = bitcast %"class.v8::internal::RelocInfo"* %5 to i8*
  %356 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %5, i64 0, i32 0
  %357 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %5, i64 0, i32 1
  %358 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %5, i64 0, i32 2
  %359 = bitcast i64* %358 to i8*
  %360 = bitcast %"class.v8::internal::Code"* %4 to i8*
  %361 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %362 = ptrtoint %"class.v8::internal::Code"* %4 to i64
  br label %363

363:                                              ; preds = %371, %331
  %364 = phi %"struct.v8::internal::TypedSlots::Chunk"* [ %329, %331 ], [ %374, %371 ]
  %365 = phi i32 [ 0, %331 ], [ %372, %371 ]
  %366 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %364, i64 0, i32 1, i32 0, i32 0
  %367 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %366, align 8
  %368 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %364, i64 0, i32 1, i32 0, i32 1
  %369 = load %"struct.v8::internal::TypedSlots::TypedSlot"*, %"struct.v8::internal::TypedSlots::TypedSlot"** %368, align 8
  %370 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %367, %369
  br i1 %370, label %371, label %376

371:                                              ; preds = %539, %363
  %372 = phi i32 [ %365, %363 ], [ %540, %539 ]
  %373 = getelementptr inbounds %"struct.v8::internal::TypedSlots::Chunk", %"struct.v8::internal::TypedSlots::Chunk"* %364, i64 0, i32 0
  %374 = load %"struct.v8::internal::TypedSlots::Chunk"*, %"struct.v8::internal::TypedSlots::Chunk"** %373, align 8
  %375 = icmp eq %"struct.v8::internal::TypedSlots::Chunk"* %374, null
  br i1 %375, label %543, label %363

376:                                              ; preds = %363, %539
  %377 = phi i32 [ %540, %539 ], [ %365, %363 ]
  %378 = phi %"struct.v8::internal::TypedSlots::TypedSlot"* [ %541, %539 ], [ %367, %363 ]
  %379 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %378, i64 0, i32 0
  %380 = load i32, i32* %379, align 4
  %381 = lshr i32 %380, 29
  %382 = icmp eq i32 %381, 7
  br i1 %382, label %539, label %383

383:                                              ; preds = %376
  %384 = and i32 %380, 536870911
  %385 = load i64, i64* %332, align 8
  %386 = zext i32 %384 to i64
  %387 = add i64 %385, %386
  %388 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %333, align 8
  switch i32 %381, label %532 [
    i32 5, label %389
    i32 6, label %433
    i32 1, label %464
    i32 0, label %466
    i32 2, label %468
    i32 4, label %470
    i32 3, label %509
  ]

389:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %355) #12
  store i64 %387, i64* %356, align 8
  store i8 1, i8* %357, align 8
  %390 = inttoptr i64 %387 to i32*
  call void @llvm.memset.p0i8.i64(i8* align 8 %359, i8 0, i64 24, i1 false) #12
  %391 = load i32, i32* %390, align 1
  %392 = sext i32 %391 to i64
  %393 = add i64 %387, 4
  %394 = add i64 %393, %392
  %395 = call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %396 = ptrtoint i8* %395 to i64
  %397 = call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12
  %398 = icmp uge i64 %394, %396
  %399 = zext i32 %397 to i64
  %400 = add i64 %399, %396
  %401 = icmp ugt i64 %400, %394
  %402 = and i1 %398, %401
  br i1 %402, label %403, label %404, !prof !29

403:                                              ; preds = %389
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0)) #16
  unreachable

404:                                              ; preds = %389
  %405 = add i64 %394, -63
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %360) #12
  store i64 %405, i64* %361, align 8
  %406 = and i64 %405, 1
  %407 = icmp ne i64 %406, 0
  %408 = trunc i64 %405 to i32
  %409 = icmp ne i32 %408, 3
  %410 = and i1 %409, %407
  br i1 %410, label %411, label %431

411:                                              ; preds = %404
  %412 = and i64 %405, -262144
  %413 = inttoptr i64 %412 to %"class.v8::internal::BasicMemoryChunk"*
  %414 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %413, i64 0, i32 1
  %415 = load i64, i64* %414, align 8
  %416 = and i64 %415, 8
  %417 = icmp eq i64 %416, 0
  br i1 %417, label %418, label %423

418:                                              ; preds = %411
  %419 = lshr i64 %415, 4
  %420 = trunc i64 %419 to i32
  %421 = and i32 %420, 1
  %422 = xor i32 %421, 1
  br label %431

423:                                              ; preds = %411
  %424 = and i64 %405, -3
  %425 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %0, i64 %362, i64 %424) #12
  %426 = load i64, i64* %361, align 8
  %427 = trunc i64 %426 to i32
  %428 = icmp eq i32 %427, %408
  br i1 %428, label %431, label %429

429:                                              ; preds = %423
  %430 = add i64 %426, 63
  call void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"* nonnull %5, i64 %430, i32 4, i32 0) #12
  br label %431

431:                                              ; preds = %429, %423, %418, %404
  %432 = phi i32 [ %425, %423 ], [ %425, %429 ], [ %422, %418 ], [ 1, %404 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %360) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %355) #12
  br label %533

433:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %352) #12
  %434 = inttoptr i64 %387 to i64*
  %435 = load i64, i64* %434, align 8
  %436 = add i64 %435, -63
  store i64 %436, i64* %353, align 8
  %437 = and i64 %436, 1
  %438 = icmp ne i64 %437, 0
  %439 = trunc i64 %436 to i32
  %440 = icmp ne i32 %439, 3
  %441 = and i1 %440, %438
  br i1 %441, label %442, label %462

442:                                              ; preds = %433
  %443 = and i64 %436, -262144
  %444 = inttoptr i64 %443 to %"class.v8::internal::BasicMemoryChunk"*
  %445 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %444, i64 0, i32 1
  %446 = load i64, i64* %445, align 8
  %447 = and i64 %446, 8
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %449, label %454

449:                                              ; preds = %442
  %450 = lshr i64 %446, 4
  %451 = trunc i64 %450 to i32
  %452 = and i32 %451, 1
  %453 = xor i32 %452, 1
  br label %462

454:                                              ; preds = %442
  %455 = and i64 %436, -3
  %456 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %0, i64 %354, i64 %455) #12
  %457 = load i64, i64* %353, align 8
  %458 = trunc i64 %457 to i32
  %459 = icmp eq i32 %458, %439
  br i1 %459, label %462, label %460

460:                                              ; preds = %454
  %461 = add i64 %457, 63
  store i64 %461, i64* %434, align 8
  br label %462

462:                                              ; preds = %460, %454, %449, %433
  %463 = phi i32 [ %456, %454 ], [ %456, %460 ], [ %453, %449 ], [ 1, %433 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %352) #12
  br label %533

464:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %347) #12
  store i64 %387, i64* %348, align 8
  store i8 3, i8* %349, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %351, i8 0, i64 24, i1 false) #12
  %465 = call fastcc i32 @"_ZN2v88internal21UpdateTypedSlotHelper21UpdateEmbeddedPointerIZZNS0_9Scavenger12ScavengePageEPNS0_11MemoryChunkEENK3$_5clENS0_8SlotTypeEmEUlNS0_19FullMaybeObjectSlotEE_EENS0_18SlotCallbackResultEPNS0_4HeapEPNS0_9RelocInfoET_"(%"class.v8::internal::Heap"* %388, %"class.v8::internal::RelocInfo"* nonnull %6, %"class.v8::internal::Scavenger"* %0) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %347) #12
  br label %533

466:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %342) #12
  store i64 %387, i64* %343, align 8
  store i8 4, i8* %344, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %346, i8 0, i64 24, i1 false) #12
  %467 = call fastcc i32 @"_ZN2v88internal21UpdateTypedSlotHelper21UpdateEmbeddedPointerIZZNS0_9Scavenger12ScavengePageEPNS0_11MemoryChunkEENK3$_5clENS0_8SlotTypeEmEUlNS0_19FullMaybeObjectSlotEE_EENS0_18SlotCallbackResultEPNS0_4HeapEPNS0_9RelocInfoET_"(%"class.v8::internal::Heap"* %388, %"class.v8::internal::RelocInfo"* nonnull %7, %"class.v8::internal::Scavenger"* %0) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %342) #12
  br label %533

468:                                              ; preds = %383
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %337) #12
  store i64 %387, i64* %338, align 8
  store i8 5, i8* %339, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %341, i8 0, i64 24, i1 false) #12
  %469 = call fastcc i32 @"_ZN2v88internal21UpdateTypedSlotHelper21UpdateEmbeddedPointerIZZNS0_9Scavenger12ScavengePageEPNS0_11MemoryChunkEENK3$_5clENS0_8SlotTypeEmEUlNS0_19FullMaybeObjectSlotEE_EENS0_18SlotCallbackResultEPNS0_4HeapEPNS0_9RelocInfoET_"(%"class.v8::internal::Heap"* %388, %"class.v8::internal::RelocInfo"* nonnull %8, %"class.v8::internal::Scavenger"* %0) #12
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %337) #12
  br label %533

470:                                              ; preds = %383
  %471 = ptrtoint %"class.v8::internal::Heap"* %388 to i64
  %472 = add i64 %471, -41416
  %473 = inttoptr i64 %472 to %"class.v8::internal::Isolate"*
  %474 = inttoptr i64 %387 to i32*
  %475 = load i32, i32* %474, align 4
  %476 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %473, i64 0, i32 0, i32 4
  %477 = load i64, i64* %476, align 8
  %478 = and i64 %477, 4294967295
  %479 = icmp eq i64 %478, 0
  call void @llvm.assume(i1 %479) #12
  %480 = zext i32 %475 to i64
  %481 = or i64 %477, %480
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %334) #12
  store i64 %481, i64* %335, align 8
  %482 = and i64 %480, 1
  %483 = icmp ne i64 %482, 0
  %484 = icmp ne i32 %475, 3
  %485 = and i1 %484, %483
  br i1 %485, label %486, label %502

486:                                              ; preds = %470
  %487 = and i64 %481, -262144
  %488 = inttoptr i64 %487 to %"class.v8::internal::BasicMemoryChunk"*
  %489 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %488, i64 0, i32 1
  %490 = load i64, i64* %489, align 8
  %491 = and i64 %490, 8
  %492 = icmp eq i64 %491, 0
  br i1 %492, label %497, label %493

493:                                              ; preds = %486
  %494 = and i64 %481, -3
  %495 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %0, i64 %336, i64 %494) #12
  %496 = load i64, i64* %335, align 8
  br label %502

497:                                              ; preds = %486
  %498 = lshr i64 %490, 4
  %499 = trunc i64 %498 to i32
  %500 = and i32 %499, 1
  %501 = xor i32 %500, 1
  br label %502

502:                                              ; preds = %497, %493, %470
  %503 = phi i64 [ %481, %497 ], [ %496, %493 ], [ %481, %470 ]
  %504 = phi i32 [ %501, %497 ], [ %495, %493 ], [ 1, %470 ]
  %505 = trunc i64 %503 to i32
  %506 = icmp eq i32 %475, %505
  br i1 %506, label %508, label %507

507:                                              ; preds = %502
  store i32 %505, i32* %474, align 4
  br label %508

508:                                              ; preds = %507, %502
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %334) #12
  br label %533

509:                                              ; preds = %383
  %510 = inttoptr i64 %387 to i64*
  %511 = load i64, i64* %510, align 8
  %512 = and i64 %511, 1
  %513 = icmp ne i64 %512, 0
  %514 = trunc i64 %511 to i32
  %515 = icmp ne i32 %514, 3
  %516 = and i1 %515, %513
  br i1 %516, label %517, label %538

517:                                              ; preds = %509
  %518 = and i64 %511, -262144
  %519 = inttoptr i64 %518 to %"class.v8::internal::BasicMemoryChunk"*
  %520 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %519, i64 0, i32 1
  %521 = load i64, i64* %520, align 8
  %522 = and i64 %521, 8
  %523 = icmp eq i64 %522, 0
  br i1 %523, label %527, label %524

524:                                              ; preds = %517
  %525 = and i64 %511, -3
  %526 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %0, i64 %387, i64 %525) #12
  br label %533

527:                                              ; preds = %517
  %528 = lshr i64 %521, 4
  %529 = trunc i64 %528 to i32
  %530 = and i32 %529, 1
  %531 = xor i32 %530, 1
  br label %533

532:                                              ; preds = %383
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

533:                                              ; preds = %527, %524, %508, %468, %466, %464, %462, %431
  %534 = phi i32 [ %504, %508 ], [ %469, %468 ], [ %467, %466 ], [ %465, %464 ], [ %463, %462 ], [ %432, %431 ], [ %531, %527 ], [ %526, %524 ]
  %535 = icmp eq i32 %534, 0
  br i1 %535, label %536, label %538

536:                                              ; preds = %533
  %537 = add nsw i32 %377, 1
  br label %539

538:                                              ; preds = %533, %509
  store i32 -536870912, i32* %379, align 4
  br label %539

539:                                              ; preds = %538, %536, %376
  %540 = phi i32 [ %377, %376 ], [ %537, %536 ], [ %377, %538 ]
  %541 = getelementptr inbounds %"struct.v8::internal::TypedSlots::TypedSlot", %"struct.v8::internal::TypedSlots::TypedSlot"* %378, i64 1
  %542 = icmp eq %"struct.v8::internal::TypedSlots::TypedSlot"* %541, %369
  br i1 %542, label %371, label %376

543:                                              ; preds = %371
  %544 = icmp eq i32 %372, 0
  br i1 %544, label %545, label %546

545:                                              ; preds = %543, %327
  call void @_ZN2v88internal11MemoryChunk19ReleaseTypedSlotSetILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"* %1) #12
  br label %546

546:                                              ; preds = %321, %543, %545
  %547 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %548 = load i64, i64* %547, align 8
  %549 = and i64 %548, 2097152
  %550 = icmp eq i64 %549, 0
  br i1 %550, label %551, label %571

551:                                              ; preds = %546
  %552 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 8, i32 0
  %553 = bitcast %"struct.std::__1::__atomic_base.69"* %552 to i64*
  %554 = load atomic i64, i64* %553 seq_cst, align 8
  %555 = inttoptr i64 %554 to %"class.v8::internal::Space"*
  %556 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %555, i64 0, i32 0, i32 2
  %557 = load i32, i32* %556, align 8
  %558 = icmp eq i32 %557, 1
  br i1 %558, label %559, label %571

559:                                              ; preds = %551
  %560 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %561 = load atomic i64, i64* %560 seq_cst, align 8
  %562 = icmp eq i64 %561, 0
  br i1 %562, label %571, label %563

563:                                              ; preds = %559
  %564 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %565 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %564, align 8
  %566 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %565, i64 0, i32 81, i32 0, i32 0, i32 0
  %567 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %566, align 8
  %568 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %567, i64 0, i32 22
  %569 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %568, align 8
  %570 = bitcast %"class.v8::internal::MemoryChunk"* %1 to %"class.v8::internal::Page"*
  call void @_ZN2v88internal7Sweeper7AddPageENS0_15AllocationSpaceEPNS0_4PageENS1_11AddPageModeE(%"class.v8::internal::Sweeper"* %569, i32 1, %"class.v8::internal::Page"* %570, i32 1) #12
  br label %571

571:                                              ; preds = %546, %551, %559, %563
  %572 = icmp eq i8 %24, 0
  br i1 %572, label %578, label %573

573:                                              ; preds = %571
  %574 = load i8, i8* @_ZN2v88internal12FLAG_jitlessE, align 1, !range !2
  %575 = icmp eq i8 %574, 0
  br i1 %575, label %577, label %576

576:                                              ; preds = %573
  call void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"* %1) #12
  br label %578

577:                                              ; preds = %573
  call void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"* %1) #12
  br label %578

578:                                              ; preds = %571, %576, %577
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollectorC2EPNS0_4HeapE(%"class.v8::internal::ScavengerCollector"* nocapture, %"class.v8::internal::Heap"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 0
  %4 = ptrtoint %"class.v8::internal::Heap"* %1 to i64
  %5 = add i64 %4, -41416
  %6 = inttoptr i64 %5 to %"class.v8::internal::Isolate"*
  store %"class.v8::internal::Isolate"* %6, %"class.v8::internal::Isolate"** %3, align 8
  %7 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  store %"class.v8::internal::Heap"* %1, %"class.v8::internal::Heap"** %7, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2
  %9 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.1168"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_map.1148"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %10, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector14CollectGarbageEv(%"class.v8::internal::ScavengerCollector"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::ScavengeWeakObjectRetainer", align 8
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = alloca [2 x %"class.std::__1::unique_ptr.1300"], align 16
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::vector.1172", align 8
  %7 = alloca %"class.v8::internal::Worklist.1177", align 8
  %8 = alloca %"class.v8::internal::Worklist.1179", align 8
  %9 = alloca %"class.v8::internal::Scavenger::PromotionList", align 8
  %10 = alloca %"class.v8::internal::Worklist.1183", align 8
  %11 = alloca %"class.v8::internal::Sweeper::PauseOrCompleteScope", align 8
  %12 = alloca %"class.v8::internal::Sweeper::FilterSweepingPagesScope", align 8
  %13 = alloca %"class.v8::internal::Scavenger"*, align 8
  %14 = alloca %"class.std::__1::vector.1193", align 8
  %15 = alloca %"class.v8::internal::RootScavengeVisitor", align 8
  %16 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %17 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %18 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %19 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %20 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %21 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %22 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %23 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %24 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %25 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %26 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %27 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %28 = alloca %"class.std::__1::function", align 8
  %29 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %30 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %31 = alloca %"class.v8::internal::MemoryChunk"*, align 8
  %32 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %33 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %34 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 0
  %35 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %36 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %36) #12
  %37 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  store i8 4, i8* %38, align 1
  %39 = bitcast %"class.std::__1::basic_string"* %5 to i32*
  store i32 1885431144, i32* %39, align 8
  %40 = getelementptr inbounds i8, i8* %36, i64 4
  store i8 0, i8* %40, align 4
  %41 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %35, i64 0, i32 176
  %42 = load void (i32, %"class.std::__1::basic_string"*)*, void (i32, %"class.std::__1::basic_string"*)** %41, align 8
  %43 = icmp eq void (i32, %"class.std::__1::basic_string"*)* %42, null
  br i1 %43, label %50, label %44

44:                                               ; preds = %1
  call void %42(i32 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %5) #12
  %45 = load i8, i8* %38, align 1
  %46 = icmp slt i8 %45, 0
  br i1 %46, label %47, label %50

47:                                               ; preds = %44
  %48 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @_ZdlPv(i8* %49) #17
  br label %50

50:                                               ; preds = %1, %44, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %36) #12
  %51 = bitcast %"class.std::__1::vector.1172"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %51, i8 0, i64 24, i1 false) #12
  %52 = bitcast %"class.v8::internal::Worklist.1177"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 704, i8* nonnull %52) #12
  %53 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %7, i64 0, i32 1, i32 0
  call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %53) #12
  %54 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %7, i64 0, i32 1, i32 1
  %55 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 16, i1 false) #12
  %56 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %7, i64 0, i32 2
  store i32 8, i32* %56, align 8
  br label %57

57:                                               ; preds = %57, %50
  %58 = phi i64 [ %69, %57 ], [ 0, %50 ]
  %59 = call i8* @_Znwm(i64 528) #17
  %60 = getelementptr inbounds i8, i8* %59, i64 8
  %61 = bitcast i8* %60 to i64*
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %7, i64 0, i32 0, i64 %58, i32 0
  %63 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %62 to i8**
  store i8* %59, i8** %63, align 8
  %64 = call i8* @_Znwm(i64 528) #17
  %65 = getelementptr inbounds i8, i8* %64, i64 8
  %66 = bitcast i8* %65 to i64*
  store i64 0, i64* %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %7, i64 0, i32 0, i64 %58, i32 1
  %68 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %67 to i8**
  store i8* %64, i8** %68, align 8
  %69 = add nuw nsw i64 %58, 1
  %70 = load i32, i32* %56, align 8
  %71 = sext i32 %70 to i64
  %72 = icmp slt i64 %69, %71
  br i1 %72, label %57, label %73

73:                                               ; preds = %57
  %74 = call i32 @_ZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEv(%"class.v8::internal::ScavengerCollector"* %0)
  %75 = bitcast %"class.v8::internal::Worklist.1179"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 704, i8* nonnull %75) #12
  %76 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %8, i64 0, i32 1, i32 0
  call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %76) #12
  %77 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %8, i64 0, i32 1, i32 1
  %78 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %77 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 16, i1 false) #12
  %79 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %8, i64 0, i32 2
  store i32 %74, i32* %79, align 8
  %80 = icmp sgt i32 %74, 0
  br i1 %80, label %81, label %147

81:                                               ; preds = %73, %140
  %82 = phi i64 [ %143, %140 ], [ 0, %73 ]
  %83 = call i8* @_Znwm(i64 4112) #17
  %84 = getelementptr inbounds i8, i8* %83, i64 8
  %85 = bitcast i8* %84 to i64*
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds i8, i8* %83, i64 16
  %87 = bitcast i8* %86 to %"struct.std::__1::pair.1282"*
  %88 = getelementptr inbounds i8, i8* %83, i64 4112
  %89 = bitcast i8* %88 to %"struct.std::__1::pair.1282"*
  br label %90

90:                                               ; preds = %90, %81
  %91 = phi %"struct.std::__1::pair.1282"* [ %87, %81 ], [ %108, %90 ]
  %92 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %92, align 8
  %93 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 0, i32 1
  store i32 0, i32* %93, align 8
  %94 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %94, align 8
  %95 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 1, i32 1
  store i32 0, i32* %95, align 8
  %96 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 2, i32 1
  store i32 0, i32* %97, align 8
  %98 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %98, align 8
  %99 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 3, i32 1
  store i32 0, i32* %99, align 8
  %100 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %100, align 8
  %101 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 4, i32 1
  store i32 0, i32* %101, align 8
  %102 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %102, align 8
  %103 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 5, i32 1
  store i32 0, i32* %103, align 8
  %104 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %104, align 8
  %105 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 6, i32 1
  store i32 0, i32* %105, align 8
  %106 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %106, align 8
  %107 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 7, i32 1
  store i32 0, i32* %107, align 8
  %108 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %91, i64 8
  %109 = icmp eq %"struct.std::__1::pair.1282"* %108, %89
  br i1 %109, label %110, label %90

110:                                              ; preds = %90
  %111 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %8, i64 0, i32 0, i64 %82, i32 0
  %112 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %111 to i8**
  store i8* %83, i8** %112, align 8
  %113 = call i8* @_Znwm(i64 4112) #17
  %114 = getelementptr inbounds i8, i8* %113, i64 8
  %115 = bitcast i8* %114 to i64*
  store i64 0, i64* %115, align 8
  %116 = getelementptr inbounds i8, i8* %113, i64 16
  %117 = bitcast i8* %116 to %"struct.std::__1::pair.1282"*
  %118 = getelementptr inbounds i8, i8* %113, i64 4112
  %119 = bitcast i8* %118 to %"struct.std::__1::pair.1282"*
  br label %120

120:                                              ; preds = %120, %110
  %121 = phi %"struct.std::__1::pair.1282"* [ %117, %110 ], [ %138, %120 ]
  %122 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %122, align 8
  %123 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 0, i32 1
  store i32 0, i32* %123, align 8
  %124 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %124, align 8
  %125 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 1, i32 1
  store i32 0, i32* %125, align 8
  %126 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %126, align 8
  %127 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 2, i32 1
  store i32 0, i32* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 3, i32 1
  store i32 0, i32* %129, align 8
  %130 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %130, align 8
  %131 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 4, i32 1
  store i32 0, i32* %131, align 8
  %132 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %132, align 8
  %133 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 5, i32 1
  store i32 0, i32* %133, align 8
  %134 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 6, i32 1
  store i32 0, i32* %135, align 8
  %136 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %136, align 8
  %137 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 7, i32 1
  store i32 0, i32* %137, align 8
  %138 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %121, i64 8
  %139 = icmp eq %"struct.std::__1::pair.1282"* %138, %119
  br i1 %139, label %140, label %120

140:                                              ; preds = %120
  %141 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %8, i64 0, i32 0, i64 %82, i32 1
  %142 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %141 to i8**
  store i8* %113, i8** %142, align 8
  %143 = add nuw nsw i64 %82, 1
  %144 = load i32, i32* %79, align 8
  %145 = sext i32 %144 to i64
  %146 = icmp slt i64 %143, %145
  br i1 %146, label %81, label %147

147:                                              ; preds = %140, %73
  %148 = bitcast %"class.v8::internal::Scavenger::PromotionList"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 1408, i8* nonnull %148) #12
  call void @_ZN2v88internal9Scavenger13PromotionListC2Ei(%"class.v8::internal::Scavenger::PromotionList"* nonnull %9, i32 %74)
  %149 = bitcast %"class.v8::internal::Worklist.1183"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 704, i8* nonnull %149) #12
  %150 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %10, i64 0, i32 1, i32 0
  call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %150) #12
  %151 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %10, i64 0, i32 1, i32 1
  %152 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %151 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %152, i8 0, i64 16, i1 false) #12
  %153 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %10, i64 0, i32 2
  store i32 %74, i32* %153, align 8
  br i1 %80, label %154, label %168

154:                                              ; preds = %147, %154
  %155 = phi i64 [ %164, %154 ], [ 0, %147 ]
  %156 = call i8* @_Znwm(i64 1040) #17
  %157 = getelementptr inbounds i8, i8* %156, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %157, i8 0, i64 1032, i1 false) #12
  %158 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %10, i64 0, i32 0, i64 %155, i32 0
  %159 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %158 to i8**
  store i8* %156, i8** %159, align 8
  %160 = call i8* @_Znwm(i64 1040) #17
  %161 = getelementptr inbounds i8, i8* %160, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 1032, i1 false) #12
  %162 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %10, i64 0, i32 0, i64 %155, i32 1
  %163 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %162 to i8**
  store i8* %160, i8** %163, align 8
  %164 = add nuw nsw i64 %155, 1
  %165 = load i32, i32* %153, align 8
  %166 = sext i32 %165 to i64
  %167 = icmp slt i64 %164, %166
  br i1 %167, label %154, label %168

168:                                              ; preds = %154, %147
  %169 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  %170 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %171 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %170, i64 0, i32 81, i32 0, i32 0, i32 0
  %172 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %171, align 8
  %173 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %172, i64 0, i32 22
  %174 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %173, align 8
  %175 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %174, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i8, i8* %175 seq_cst, align 1
  %177 = and i8 %176, 1
  %178 = icmp eq i8 %177, 0
  %179 = load i8, i8* @_ZN2v88internal24FLAG_concurrent_sweepingE, align 1
  %180 = icmp eq i8 %179, 0
  %181 = or i1 %178, %180
  br i1 %181, label %188, label %182

182:                                              ; preds = %168
  %183 = call zeroext i1 @_ZN2v88internal7Sweeper22AreSweeperTasksRunningEv(%"class.v8::internal::Sweeper"* %174) #12
  br i1 %183, label %188, label %184

184:                                              ; preds = %182
  %185 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %186 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %185, i64 0, i32 81, i32 0, i32 0, i32 0
  %187 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %186, align 8
  call void @_ZN2v88internal20MarkCompactCollector23EnsureSweepingCompletedEv(%"class.v8::internal::MarkCompactCollector"* %187) #12
  br label %188

188:                                              ; preds = %168, %184, %182
  %189 = bitcast %"class.v8::internal::Sweeper::PauseOrCompleteScope"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %189) #12
  call void @_ZN2v88internal7Sweeper20PauseOrCompleteScopeC1EPS1_(%"class.v8::internal::Sweeper::PauseOrCompleteScope"* nonnull %11, %"class.v8::internal::Sweeper"* %174) #12
  %190 = bitcast %"class.v8::internal::Sweeper::FilterSweepingPagesScope"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %190) #12
  call void @_ZN2v88internal7Sweeper24FilterSweepingPagesScopeC1EPS1_RKNS1_20PauseOrCompleteScopeE(%"class.v8::internal::Sweeper::FilterSweepingPagesScope"* nonnull %12, %"class.v8::internal::Sweeper"* %174, %"class.v8::internal::Sweeper::PauseOrCompleteScope"* nonnull dereferenceable(8) %11) #12
  %191 = getelementptr inbounds %"class.v8::internal::Sweeper::FilterSweepingPagesScope", %"class.v8::internal::Sweeper::FilterSweepingPagesScope"* %12, i64 0, i32 3
  %192 = load i8, i8* %191, align 8, !range !2
  %193 = icmp eq i8 %192, 0
  br i1 %193, label %301, label %194

194:                                              ; preds = %188
  %195 = getelementptr inbounds %"class.v8::internal::Sweeper::FilterSweepingPagesScope", %"class.v8::internal::Sweeper::FilterSweepingPagesScope"* %12, i64 0, i32 0
  %196 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %195, align 8
  %197 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %196, i64 0, i32 5, i64 0
  %198 = getelementptr inbounds %"class.v8::internal::Sweeper::FilterSweepingPagesScope", %"class.v8::internal::Sweeper::FilterSweepingPagesScope"* %12, i64 0, i32 1, i32 0, i32 0
  %199 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %198, align 8
  %200 = getelementptr inbounds %"class.v8::internal::Sweeper::FilterSweepingPagesScope", %"class.v8::internal::Sweeper::FilterSweepingPagesScope"* %12, i64 0, i32 1, i32 0, i32 1
  %201 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %200, align 8
  %202 = icmp eq %"class.v8::internal::Page"** %199, %201
  br i1 %202, label %301, label %203

203:                                              ; preds = %194
  %204 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %196, i64 0, i32 5, i64 0, i32 0, i32 1
  %205 = getelementptr inbounds %"class.v8::internal::Sweeper", %"class.v8::internal::Sweeper"* %196, i64 0, i32 5, i64 0, i32 0, i32 2, i32 0, i32 0
  %206 = bitcast %"class.v8::internal::Page"*** %204 to i64*
  %207 = bitcast %"class.std::__1::vector.282"* %197 to i64*
  %208 = bitcast %"class.v8::internal::Page"*** %205 to i64*
  %209 = getelementptr inbounds %"class.std::__1::vector.282", %"class.std::__1::vector.282"* %197, i64 0, i32 0, i32 0
  br label %210

210:                                              ; preds = %297, %203
  %211 = phi %"class.v8::internal::Page"** [ %199, %203 ], [ %298, %297 ]
  %212 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %212, i64 0, i32 0, i32 1, i64 0
  %214 = bitcast %"class.v8::internal::SlotSet"** %213 to i64*
  %215 = load atomic i64, i64* %214 acquire, align 8
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %217, label %297

217:                                              ; preds = %210
  %218 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %212, i64 0, i32 0, i32 5, i64 0
  %219 = bitcast %"class.v8::internal::TypedSlotSet"** %218 to i64*
  %220 = load atomic i64, i64* %219 acquire, align 8
  %221 = icmp eq i64 %220, 0
  br i1 %221, label %222, label %297

222:                                              ; preds = %217
  %223 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %212, i64 0, i32 0, i32 6, i64 0
  %224 = load %"class.std::__1::set"*, %"class.std::__1::set"** %223, align 8
  %225 = icmp eq %"class.std::__1::set"* %224, null
  br i1 %225, label %226, label %297

226:                                              ; preds = %222
  %227 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %212, i64 0, i32 0, i32 4
  %228 = bitcast %"class.v8::internal::SlotSet"** %227 to i64*
  %229 = load atomic i64, i64* %228 acquire, align 8
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %231, label %297

231:                                              ; preds = %226
  %232 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %204, align 8
  %233 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %205, align 8
  %234 = icmp eq %"class.v8::internal::Page"** %232, %233
  %235 = ptrtoint %"class.v8::internal::Page"** %233 to i64
  br i1 %234, label %242, label %236

236:                                              ; preds = %231
  %237 = bitcast %"class.v8::internal::Page"** %211 to i64*
  %238 = load i64, i64* %237, align 8
  %239 = bitcast %"class.v8::internal::Page"** %232 to i64*
  store i64 %238, i64* %239, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %232, i64 1
  %241 = ptrtoint %"class.v8::internal::Page"** %240 to i64
  store i64 %241, i64* %206, align 8
  br label %297

242:                                              ; preds = %231
  %243 = ptrtoint %"class.v8::internal::Page"** %232 to i64
  %244 = load i64, i64* %207, align 8
  %245 = sub i64 %243, %244
  %246 = ashr exact i64 %245, 3
  %247 = add nsw i64 %246, 1
  %248 = icmp ugt i64 %247, 2305843009213693951
  br i1 %248, label %249, label %251

249:                                              ; preds = %242
  %250 = bitcast %"class.std::__1::vector.282"* %197 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %250) #16
  unreachable

251:                                              ; preds = %242
  %252 = sub i64 %235, %244
  %253 = ashr exact i64 %252, 3
  %254 = icmp ult i64 %253, 1152921504606846975
  br i1 %254, label %255, label %263

255:                                              ; preds = %251
  %256 = ashr exact i64 %252, 2
  %257 = icmp ult i64 %256, %247
  %258 = select i1 %257, i64 %247, i64 %256
  %259 = icmp eq i64 %258, 0
  br i1 %259, label %268, label %260

260:                                              ; preds = %255
  %261 = icmp ugt i64 %258, 2305843009213693951
  br i1 %261, label %262, label %263

262:                                              ; preds = %260
  call void @abort() #16
  unreachable

263:                                              ; preds = %260, %251
  %264 = phi i64 [ %258, %260 ], [ 2305843009213693951, %251 ]
  %265 = shl i64 %264, 3
  %266 = call i8* @_Znwm(i64 %265) #17
  %267 = bitcast i8* %266 to %"class.v8::internal::Page"**
  br label %268

268:                                              ; preds = %263, %255
  %269 = phi i64 [ %264, %263 ], [ 0, %255 ]
  %270 = phi %"class.v8::internal::Page"** [ %267, %263 ], [ null, %255 ]
  %271 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %270, i64 %246
  %272 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %270, i64 %269
  %273 = ptrtoint %"class.v8::internal::Page"** %272 to i64
  %274 = bitcast %"class.v8::internal::Page"** %211 to i64*
  %275 = load i64, i64* %274, align 8
  %276 = bitcast %"class.v8::internal::Page"** %271 to i64*
  store i64 %275, i64* %276, align 8
  %277 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %271, i64 1
  %278 = ptrtoint %"class.v8::internal::Page"** %277 to i64
  %279 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %209, align 8
  %280 = load i64, i64* %206, align 8
  %281 = ptrtoint %"class.v8::internal::Page"** %279 to i64
  %282 = sub i64 %280, %281
  %283 = ashr exact i64 %282, 3
  %284 = sub nsw i64 0, %283
  %285 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %271, i64 %284
  %286 = ptrtoint %"class.v8::internal::Page"** %285 to i64
  %287 = icmp sgt i64 %282, 0
  br i1 %287, label %288, label %292

288:                                              ; preds = %268
  %289 = bitcast %"class.v8::internal::Page"** %285 to i8*
  %290 = bitcast %"class.v8::internal::Page"** %279 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %289, i8* align 8 %290, i64 %282, i1 false) #12
  %291 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %209, align 8
  br label %292

292:                                              ; preds = %288, %268
  %293 = phi %"class.v8::internal::Page"** [ %279, %268 ], [ %291, %288 ]
  store i64 %286, i64* %207, align 8
  store i64 %278, i64* %206, align 8
  store i64 %273, i64* %208, align 8
  %294 = icmp eq %"class.v8::internal::Page"** %293, null
  br i1 %294, label %297, label %295

295:                                              ; preds = %292
  %296 = bitcast %"class.v8::internal::Page"** %293 to i8*
  call void @_ZdlPv(i8* %296) #17
  br label %297

297:                                              ; preds = %295, %292, %236, %226, %222, %217, %210
  %298 = getelementptr inbounds %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %211, i64 1
  %299 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %200, align 8
  %300 = icmp eq %"class.v8::internal::Page"** %298, %299
  br i1 %300, label %301, label %210

301:                                              ; preds = %297, %188, %194
  %302 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %303 = call zeroext i1 @_ZN2v88internal7Isolate19LogObjectRelocationEv(%"class.v8::internal::Isolate"* %302) #12
  br i1 %80, label %304, label %310

304:                                              ; preds = %301
  %305 = bitcast %"class.v8::internal::Scavenger"** %13 to i8*
  %306 = bitcast %"class.v8::internal::Scavenger"** %13 to i8**
  %307 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %6, i64 0, i32 0, i32 1
  %308 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %309 = bitcast %"class.std::__1::unique_ptr.1174"** %307 to i64*
  br label %494

310:                                              ; preds = %508, %301
  %311 = bitcast %"class.std::__1::vector.1193"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %311) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %311, i8 0, i64 24, i1 false) #12
  %312 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %313 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %312, i64 0, i32 25
  %314 = load %"class.v8::internal::OldSpace"*, %"class.v8::internal::OldSpace"** %313, align 8
  %315 = getelementptr inbounds %"class.v8::internal::OldSpace", %"class.v8::internal::OldSpace"* %314, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %316 = bitcast %"class.v8::internal::MemoryChunk"** %315 to i64*
  %317 = load i64, i64* %316, align 8, !noalias !30
  %318 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %312, i64 0, i32 26
  %319 = load %"class.v8::internal::CodeSpace"*, %"class.v8::internal::CodeSpace"** %318, align 8
  %320 = getelementptr inbounds %"class.v8::internal::CodeSpace", %"class.v8::internal::CodeSpace"* %319, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %321 = bitcast %"class.v8::internal::MemoryChunk"** %320 to i64*
  %322 = load i64, i64* %321, align 8, !noalias !33
  %323 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %312, i64 0, i32 27
  %324 = load %"class.v8::internal::MapSpace"*, %"class.v8::internal::MapSpace"** %323, align 8
  %325 = getelementptr inbounds %"class.v8::internal::MapSpace", %"class.v8::internal::MapSpace"* %324, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %326 = bitcast %"class.v8::internal::MemoryChunk"** %325 to i64*
  %327 = load i64, i64* %326, align 8, !noalias !36
  %328 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %312, i64 0, i32 28
  %329 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %328, align 8
  %330 = getelementptr inbounds %"class.v8::internal::OldLargeObjectSpace", %"class.v8::internal::OldLargeObjectSpace"* %329, i64 0, i32 0, i32 0, i32 2, i32 0
  %331 = bitcast %"class.v8::internal::MemoryChunk"** %330 to i64*
  %332 = load i64, i64* %331, align 8, !noalias !39
  %333 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %312, i64 0, i32 29
  %334 = load %"class.v8::internal::CodeLargeObjectSpace"*, %"class.v8::internal::CodeLargeObjectSpace"** %333, align 8
  %335 = getelementptr inbounds %"class.v8::internal::CodeLargeObjectSpace", %"class.v8::internal::CodeLargeObjectSpace"* %334, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0
  %336 = bitcast %"class.v8::internal::MemoryChunk"** %335 to i64*
  %337 = load i64, i64* %336, align 8, !noalias !42
  %338 = getelementptr inbounds %"class.std::__1::vector.1193", %"class.std::__1::vector.1193"* %14, i64 0, i32 0, i32 1
  %339 = getelementptr inbounds %"class.std::__1::vector.1193", %"class.std::__1::vector.1193"* %14, i64 0, i32 0, i32 2, i32 0, i32 0
  %340 = bitcast %"struct.std::__1::pair.1195"** %338 to i64*
  %341 = bitcast %"class.std::__1::vector.1193"* %14 to i64*
  %342 = bitcast %"struct.std::__1::pair.1195"** %339 to i64*
  %343 = getelementptr inbounds %"class.std::__1::vector.1193", %"class.std::__1::vector.1193"* %14, i64 0, i32 0, i32 0
  br label %344

344:                                              ; preds = %477, %310
  %345 = phi i64 [ %327, %310 ], [ %393, %477 ]
  %346 = phi i64 [ %322, %310 ], [ %394, %477 ]
  %347 = phi i64 [ %317, %310 ], [ %395, %477 ]
  %348 = phi i64 [ %332, %310 ], [ %396, %477 ]
  %349 = phi i32 [ 0, %310 ], [ %397, %477 ]
  %350 = phi i64 [ %337, %310 ], [ %398, %477 ]
  switch i32 %349, label %391 [
    i32 0, label %351
    i32 1, label %359
    i32 2, label %367
    i32 3, label %375
    i32 4, label %383
    i32 5, label %478
  ]

351:                                              ; preds = %344
  %352 = inttoptr i64 %347 to %"class.v8::internal::Page"*
  %353 = icmp eq i64 %347, 0
  br i1 %353, label %359, label %354

354:                                              ; preds = %351
  %355 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %352, i64 0, i32 0, i32 12, i32 0
  %356 = bitcast %"class.v8::internal::MemoryChunk"** %355 to i64*
  %357 = load i64, i64* %356, align 8, !noalias !45
  %358 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %352, i64 0, i32 0
  br label %392

359:                                              ; preds = %351, %344
  %360 = inttoptr i64 %345 to %"class.v8::internal::Page"*
  %361 = icmp eq i64 %345, 0
  br i1 %361, label %367, label %362

362:                                              ; preds = %359
  %363 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %360, i64 0, i32 0, i32 12, i32 0
  %364 = bitcast %"class.v8::internal::MemoryChunk"** %363 to i64*
  %365 = load i64, i64* %364, align 8, !noalias !48
  %366 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %360, i64 0, i32 0
  br label %392

367:                                              ; preds = %359, %344
  %368 = inttoptr i64 %346 to %"class.v8::internal::Page"*
  %369 = icmp eq i64 %346, 0
  br i1 %369, label %375, label %370

370:                                              ; preds = %367
  %371 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %368, i64 0, i32 0, i32 12, i32 0
  %372 = bitcast %"class.v8::internal::MemoryChunk"** %371 to i64*
  %373 = load i64, i64* %372, align 8, !noalias !51
  %374 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %368, i64 0, i32 0
  br label %392

375:                                              ; preds = %367, %344
  %376 = inttoptr i64 %348 to %"class.v8::internal::LargePage"*
  %377 = icmp eq i64 %348, 0
  br i1 %377, label %383, label %378

378:                                              ; preds = %375
  %379 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %376, i64 0, i32 0, i32 12, i32 0
  %380 = bitcast %"class.v8::internal::MemoryChunk"** %379 to i64*
  %381 = load i64, i64* %380, align 8, !noalias !54
  %382 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %376, i64 0, i32 0
  br label %392

383:                                              ; preds = %375, %344
  %384 = inttoptr i64 %350 to %"class.v8::internal::LargePage"*
  %385 = icmp eq i64 %350, 0
  br i1 %385, label %478, label %386

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %384, i64 0, i32 0, i32 12, i32 0
  %388 = bitcast %"class.v8::internal::MemoryChunk"** %387 to i64*
  %389 = load i64, i64* %388, align 8, !noalias !57
  %390 = getelementptr inbounds %"class.v8::internal::LargePage", %"class.v8::internal::LargePage"* %384, i64 0, i32 0
  br label %392

391:                                              ; preds = %344
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

392:                                              ; preds = %386, %378, %370, %362, %354
  %393 = phi i64 [ %345, %386 ], [ %345, %378 ], [ %345, %370 ], [ %365, %362 ], [ %345, %354 ]
  %394 = phi i64 [ %346, %386 ], [ %346, %378 ], [ %373, %370 ], [ %346, %362 ], [ %346, %354 ]
  %395 = phi i64 [ %347, %386 ], [ %347, %378 ], [ %347, %370 ], [ %347, %362 ], [ %357, %354 ]
  %396 = phi i64 [ %348, %386 ], [ %381, %378 ], [ %348, %370 ], [ %348, %362 ], [ %348, %354 ]
  %397 = phi i32 [ 4, %386 ], [ 3, %378 ], [ 2, %370 ], [ 1, %362 ], [ 0, %354 ]
  %398 = phi i64 [ %389, %386 ], [ %350, %378 ], [ %350, %370 ], [ %350, %362 ], [ %350, %354 ]
  %399 = phi %"class.v8::internal::MemoryChunk"* [ %390, %386 ], [ %382, %378 ], [ %374, %370 ], [ %366, %362 ], [ %358, %354 ]
  %400 = icmp eq %"class.v8::internal::MemoryChunk"* %399, null
  br i1 %400, label %478, label %401

401:                                              ; preds = %392
  %402 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %399, i64 0, i32 1, i64 0
  %403 = bitcast %"class.v8::internal::SlotSet"** %402 to i64*
  %404 = load atomic i64, i64* %403 acquire, align 8
  %405 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %399, i64 0, i32 4
  %406 = bitcast %"class.v8::internal::SlotSet"** %405 to i64*
  %407 = load atomic i64, i64* %406 acquire, align 8
  %408 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %399, i64 0, i32 5, i64 0
  %409 = bitcast %"class.v8::internal::TypedSlotSet"** %408 to i64*
  %410 = load atomic i64, i64* %409 acquire, align 8
  %411 = or i64 %407, %404
  %412 = or i64 %411, %410
  %413 = icmp eq i64 %412, 0
  br i1 %413, label %414, label %418

414:                                              ; preds = %401
  %415 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %399, i64 0, i32 6, i64 0
  %416 = load %"class.std::__1::set"*, %"class.std::__1::set"** %415, align 8
  %417 = icmp eq %"class.std::__1::set"* %416, null
  br i1 %417, label %477, label %418

418:                                              ; preds = %414, %401
  %419 = ptrtoint %"class.v8::internal::MemoryChunk"* %399 to i64
  %420 = load %"struct.std::__1::pair.1195"*, %"struct.std::__1::pair.1195"** %338, align 8
  %421 = load %"struct.std::__1::pair.1195"*, %"struct.std::__1::pair.1195"** %339, align 8
  %422 = icmp ult %"struct.std::__1::pair.1195"* %420, %421
  %423 = ptrtoint %"struct.std::__1::pair.1195"* %421 to i64
  br i1 %422, label %424, label %430

424:                                              ; preds = %418
  %425 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %420, i64 0, i32 0, i32 0
  store i8 0, i8* %425, align 8
  %426 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %420, i64 0, i32 1
  %427 = bitcast %"class.v8::internal::MemoryChunk"** %426 to i64*
  store i64 %419, i64* %427, align 8
  %428 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %420, i64 1
  %429 = ptrtoint %"struct.std::__1::pair.1195"* %428 to i64
  store i64 %429, i64* %340, align 8
  br label %477

430:                                              ; preds = %418
  %431 = ptrtoint %"struct.std::__1::pair.1195"* %420 to i64
  %432 = load i64, i64* %341, align 8
  %433 = sub i64 %431, %432
  %434 = ashr exact i64 %433, 4
  %435 = add nsw i64 %434, 1
  %436 = icmp ugt i64 %435, 1152921504606846975
  %437 = inttoptr i64 %432 to %"struct.std::__1::pair.1195"*
  br i1 %436, label %438, label %440

438:                                              ; preds = %430
  %439 = bitcast %"class.std::__1::vector.1193"* %14 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %439) #16
  unreachable

440:                                              ; preds = %430
  %441 = sub i64 %423, %432
  %442 = ashr exact i64 %441, 4
  %443 = icmp ult i64 %442, 576460752303423487
  br i1 %443, label %444, label %452

444:                                              ; preds = %440
  %445 = ashr exact i64 %441, 3
  %446 = icmp ult i64 %445, %435
  %447 = select i1 %446, i64 %435, i64 %445
  %448 = icmp eq i64 %447, 0
  br i1 %448, label %457, label %449

449:                                              ; preds = %444
  %450 = icmp ugt i64 %447, 1152921504606846975
  br i1 %450, label %451, label %452

451:                                              ; preds = %449
  call void @abort() #16
  unreachable

452:                                              ; preds = %449, %440
  %453 = phi i64 [ %447, %449 ], [ 1152921504606846975, %440 ]
  %454 = shl i64 %453, 4
  %455 = call i8* @_Znwm(i64 %454) #17
  %456 = bitcast i8* %455 to %"struct.std::__1::pair.1195"*
  br label %457

457:                                              ; preds = %452, %444
  %458 = phi i64 [ %453, %452 ], [ 0, %444 ]
  %459 = phi %"struct.std::__1::pair.1195"* [ %456, %452 ], [ null, %444 ]
  %460 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %459, i64 %434
  %461 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %459, i64 %458
  %462 = ptrtoint %"struct.std::__1::pair.1195"* %461 to i64
  %463 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %460, i64 0, i32 0, i32 0
  store i8 0, i8* %463, align 8
  %464 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %459, i64 %434, i32 1
  %465 = bitcast %"class.v8::internal::MemoryChunk"** %464 to i64*
  store i64 %419, i64* %465, align 8
  %466 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %460, i64 1
  %467 = ptrtoint %"struct.std::__1::pair.1195"* %466 to i64
  %468 = ptrtoint %"struct.std::__1::pair.1195"* %459 to i64
  %469 = icmp sgt i64 %433, 0
  br i1 %469, label %470, label %473

470:                                              ; preds = %457
  %471 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %459, i64 0, i32 0, i32 0
  %472 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %437, i64 0, i32 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %471, i8* align 8 %472, i64 %433, i1 false) #12
  br label %473

473:                                              ; preds = %470, %457
  store i64 %468, i64* %341, align 8
  store i64 %467, i64* %340, align 8
  store i64 %462, i64* %342, align 8
  %474 = icmp eq i64 %432, 0
  br i1 %474, label %477, label %475

475:                                              ; preds = %473
  %476 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %437, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %476) #17
  br label %477

477:                                              ; preds = %475, %473, %424, %414
  br label %344

478:                                              ; preds = %344, %383, %392
  %479 = bitcast %"class.v8::internal::RootScavengeVisitor"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %479) #12
  %480 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %6, i64 0, i32 0, i32 0
  %481 = bitcast %"class.std::__1::vector.1172"* %6 to i64**
  %482 = load i64*, i64** %481, align 8
  %483 = load i64, i64* %482, align 8
  %484 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %15, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal19RootScavengeVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %484, align 8
  %485 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %15, i64 0, i32 1
  %486 = bitcast %"class.v8::internal::Scavenger"** %485 to i64*
  store i64 %483, i64* %486, align 8
  %487 = bitcast %"class.v8::internal::GCTracer::Scope"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %487) #12
  %488 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %489 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %488, i64 0, i32 80, i32 0, i32 0, i32 0
  %490 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %489, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %16, %"class.v8::internal::GCTracer"* %490, i32 99, i32 0) #12
  %491 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic308 monotonic, align 8
  %492 = inttoptr i64 %491 to i8*
  %493 = icmp eq i64 %491, 0
  br i1 %493, label %511, label %519

494:                                              ; preds = %508, %304
  %495 = phi i32 [ 0, %304 ], [ %509, %508 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %305) #12
  %496 = call i8* @_Znwm(i64 1008) #17
  %497 = bitcast i8* %496 to %"class.v8::internal::Scavenger"*
  %498 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  call void @_ZN2v88internal9ScavengerC2EPNS0_18ScavengerCollectorEPNS0_4HeapEbPNS0_8WorklistIPNS0_11MemoryChunkELi64EEEPNS6_INSt3__14pairINS0_10HeapObjectEiEELi256EEEPNS1_13PromotionListEPNS6_INS0_18EphemeronHashTableELi128EEEi(%"class.v8::internal::Scavenger"* nonnull %497, %"class.v8::internal::ScavengerCollector"* %0, %"class.v8::internal::Heap"* %498, i1 zeroext %303, %"class.v8::internal::Worklist.1177"* nonnull %7, %"class.v8::internal::Worklist.1179"* nonnull %8, %"class.v8::internal::Scavenger::PromotionList"* nonnull %9, %"class.v8::internal::Worklist.1183"* nonnull %10, i32 %495)
  store i8* %496, i8** %306, align 8
  %499 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %307, align 8
  %500 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %308, align 8
  %501 = icmp ult %"class.std::__1::unique_ptr.1174"* %499, %500
  br i1 %501, label %502, label %507

502:                                              ; preds = %494
  %503 = ptrtoint i8* %496 to i64
  %504 = bitcast %"class.std::__1::unique_ptr.1174"* %499 to i64*
  store i64 %503, i64* %504, align 8
  %505 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %499, i64 1
  %506 = ptrtoint %"class.std::__1::unique_ptr.1174"* %505 to i64
  store i64 %506, i64* %309, align 8
  br label %508

507:                                              ; preds = %494
  call void @_ZNSt3__16vectorINS_10unique_ptrIN2v88internal9ScavengerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJPS4_EEEvDpOT_(%"class.std::__1::vector.1172"* nonnull %6, %"class.v8::internal::Scavenger"** nonnull dereferenceable(8) %13) #12
  br label %508

508:                                              ; preds = %502, %507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %305) #12
  %509 = add nuw nsw i32 %495, 1
  %510 = icmp eq i32 %509, %74
  br i1 %510, label %310, label %494

511:                                              ; preds = %478
  %512 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %513 = bitcast %"class.v8::TracingController"* %512 to i8* (%"class.v8::TracingController"*, i8*)***
  %514 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %513, align 8
  %515 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %514, i64 2
  %516 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %515, align 8
  %517 = call i8* %516(%"class.v8::TracingController"* %512, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %518 = ptrtoint i8* %517 to i64
  store atomic volatile i64 %518, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic308 monotonic, align 8
  br label %519

519:                                              ; preds = %478, %511
  %520 = phi i8* [ %492, %478 ], [ %517, %511 ]
  %521 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %521) #12
  %522 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %17, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %522, align 8
  %523 = load atomic i8, i8* %520 monotonic, align 1
  %524 = and i8 %523, 5
  %525 = icmp eq i8 %524, 0
  br i1 %525, label %559, label %526

526:                                              ; preds = %519
  %527 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 99) #12
  %528 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %528) #12
  %529 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %528, i8 0, i64 16, i1 false) #12
  %530 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %531 = bitcast %"class.v8::TracingController"* %530 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %532 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %531, align 8
  %533 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %532, i64 3
  %534 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %533, align 8
  %535 = call i64 %534(%"class.v8::TracingController"* %530, i8 signext 88, i8* %520, i8* %527, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %529, i32 0) #12
  %536 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %537 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %536, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %536, align 8
  %538 = icmp eq %"class.v8::ConvertableToTraceFormat"* %537, null
  br i1 %538, label %544, label %539

539:                                              ; preds = %526
  %540 = bitcast %"class.v8::ConvertableToTraceFormat"* %537 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %541 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %540, align 8
  %542 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %541, i64 1
  %543 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %542, align 8
  call void %543(%"class.v8::ConvertableToTraceFormat"* nonnull %537) #12
  br label %544

544:                                              ; preds = %539, %526
  %545 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %546 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %545, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %545, align 16
  %547 = icmp eq %"class.v8::ConvertableToTraceFormat"* %546, null
  br i1 %547, label %553, label %548

548:                                              ; preds = %544
  %549 = bitcast %"class.v8::ConvertableToTraceFormat"* %546 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %550 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %549, align 8
  %551 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %550, i64 1
  %552 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %551, align 8
  call void %552(%"class.v8::ConvertableToTraceFormat"* nonnull %546) #12
  br label %553

553:                                              ; preds = %544, %548
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %528) #12
  %554 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 99) #12
  %555 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %17, i64 0, i32 1
  %556 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %555, i64 0, i32 0
  store i8* %520, i8** %556, align 8
  %557 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %17, i64 0, i32 1, i32 1
  store i8* %554, i8** %557, align 8
  %558 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %17, i64 0, i32 1, i32 2
  store i64 %535, i64* %558, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %555, %"struct.v8::internal::tracing::ScopedTracer::Data"** %522, align 8
  br label %559

559:                                              ; preds = %519, %553
  %560 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %561 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %560, i64 0, i32 36
  %562 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %561, align 8
  call void @_ZN2v88internal13GlobalHandles29IdentifyWeakUnmodifiedObjectsEPFbNS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"* %562, i1 (i64)* nonnull @_ZN2v88internal8JSObject21IsUnmodifiedApiObjectENS0_14FullObjectSlotE) #12
  %563 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %522, align 8
  %564 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %563, null
  br i1 %564, label %581, label %565

565:                                              ; preds = %559
  %566 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %17, i64 0, i32 1, i32 0
  %567 = load i8*, i8** %566, align 8
  %568 = load atomic i8, i8* %567 monotonic, align 1
  %569 = icmp eq i8 %568, 0
  br i1 %569, label %581, label %570

570:                                              ; preds = %565
  %571 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %572 = load i8*, i8** %566, align 8
  %573 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %17, i64 0, i32 1, i32 1
  %574 = load i8*, i8** %573, align 8
  %575 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %17, i64 0, i32 1, i32 2
  %576 = load i64, i64* %575, align 8
  %577 = bitcast %"class.v8::TracingController"* %571 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %578 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %577, align 8
  %579 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %578, i64 5
  %580 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %579, align 8
  call void %580(%"class.v8::TracingController"* %571, i8* %572, i8* %574, i64 %576) #12
  br label %581

581:                                              ; preds = %559, %565, %570
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %521) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %16) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %487) #12
  %582 = bitcast %"class.v8::internal::GCTracer::Scope"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %582) #12
  %583 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %584 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %583, i64 0, i32 80, i32 0, i32 0, i32 0
  %585 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %584, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %18, %"class.v8::internal::GCTracer"* %585, i32 102, i32 0) #12
  %586 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic314 monotonic, align 8
  %587 = inttoptr i64 %586 to i8*
  %588 = icmp eq i64 %586, 0
  br i1 %588, label %589, label %597

589:                                              ; preds = %581
  %590 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %591 = bitcast %"class.v8::TracingController"* %590 to i8* (%"class.v8::TracingController"*, i8*)***
  %592 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %591, align 8
  %593 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %592, i64 2
  %594 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %593, align 8
  %595 = call i8* %594(%"class.v8::TracingController"* %590, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %596 = ptrtoint i8* %595 to i64
  store atomic volatile i64 %596, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic314 monotonic, align 8
  br label %597

597:                                              ; preds = %581, %589
  %598 = phi i8* [ %587, %581 ], [ %595, %589 ]
  %599 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %599) #12
  %600 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %19, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %600, align 8
  %601 = load atomic i8, i8* %598 monotonic, align 1
  %602 = and i8 %601, 5
  %603 = icmp eq i8 %602, 0
  br i1 %603, label %637, label %604

604:                                              ; preds = %597
  %605 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 102) #12
  %606 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %606) #12
  %607 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %606, i8 0, i64 16, i1 false) #12
  %608 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %609 = bitcast %"class.v8::TracingController"* %608 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %610 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %609, align 8
  %611 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %610, i64 3
  %612 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %611, align 8
  %613 = call i64 %612(%"class.v8::TracingController"* %608, i8 signext 88, i8* %598, i8* %605, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %607, i32 0) #12
  %614 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %615 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %614, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %614, align 8
  %616 = icmp eq %"class.v8::ConvertableToTraceFormat"* %615, null
  br i1 %616, label %622, label %617

617:                                              ; preds = %604
  %618 = bitcast %"class.v8::ConvertableToTraceFormat"* %615 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %619 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %618, align 8
  %620 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %619, i64 1
  %621 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %620, align 8
  call void %621(%"class.v8::ConvertableToTraceFormat"* nonnull %615) #12
  br label %622

622:                                              ; preds = %617, %604
  %623 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %624 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %623, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %623, align 16
  %625 = icmp eq %"class.v8::ConvertableToTraceFormat"* %624, null
  br i1 %625, label %631, label %626

626:                                              ; preds = %622
  %627 = bitcast %"class.v8::ConvertableToTraceFormat"* %624 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %628 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %627, align 8
  %629 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %628, i64 1
  %630 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %629, align 8
  call void %630(%"class.v8::ConvertableToTraceFormat"* nonnull %624) #12
  br label %631

631:                                              ; preds = %622, %626
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %606) #12
  %632 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 102) #12
  %633 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %19, i64 0, i32 1
  %634 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %633, i64 0, i32 0
  store i8* %598, i8** %634, align 8
  %635 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %19, i64 0, i32 1, i32 1
  store i8* %632, i8** %635, align 8
  %636 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %19, i64 0, i32 1, i32 2
  store i64 %613, i64* %636, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %633, %"struct.v8::internal::tracing::ScopedTracer::Data"** %600, align 8
  br label %637

637:                                              ; preds = %597, %631
  %638 = load i8, i8* @_ZN2v88internal37FLAG_scavenge_separate_stack_scanningE, align 1, !range !2
  %639 = icmp eq i8 %638, 0
  %640 = select i1 %639, i32 7, i32 15, !prof !60
  %641 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %642 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %15, i64 0, i32 0
  call void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"* %641, %"class.v8::internal::RootVisitor"* nonnull %642, i32 %640) #12
  %643 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %644 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %643, i64 0, i32 36
  %645 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %644, align 8
  call void @_ZN2v88internal13GlobalHandles35IterateYoungStrongAndDependentRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* %645, %"class.v8::internal::RootVisitor"* nonnull %642) #12
  %646 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %480, align 8
  %647 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %646, i64 0, i32 0, i32 0, i32 0
  %648 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %647, align 8
  %649 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %648, i64 0, i32 4, i32 0
  %650 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %649, align 8
  %651 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %648, i64 0, i32 4, i32 1
  %652 = load i32, i32* %651, align 8
  call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1179"* %650, i32 %652) #12
  %653 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %648, i64 0, i32 3, i32 0
  %654 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %653, align 8
  %655 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %648, i64 0, i32 3, i32 1
  %656 = load i32, i32* %655, align 8
  %657 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %654, i64 0, i32 0
  call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1179"* %657, i32 %656) #12
  %658 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %654, i64 0, i32 1
  call void @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1181"* %658, i32 %656) #12
  %659 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %600, align 8
  %660 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %659, null
  br i1 %660, label %677, label %661

661:                                              ; preds = %637
  %662 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %19, i64 0, i32 1, i32 0
  %663 = load i8*, i8** %662, align 8
  %664 = load atomic i8, i8* %663 monotonic, align 1
  %665 = icmp eq i8 %664, 0
  br i1 %665, label %677, label %666

666:                                              ; preds = %661
  %667 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %668 = load i8*, i8** %662, align 8
  %669 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %19, i64 0, i32 1, i32 1
  %670 = load i8*, i8** %669, align 8
  %671 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %19, i64 0, i32 1, i32 2
  %672 = load i64, i64* %671, align 8
  %673 = bitcast %"class.v8::TracingController"* %667 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %674 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %673, align 8
  %675 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %674, i64 5
  %676 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %675, align 8
  call void %676(%"class.v8::TracingController"* %667, i8* %668, i8* %670, i64 %672) #12
  br label %677

677:                                              ; preds = %637, %661, %666
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %599) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %18) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %582) #12
  %678 = bitcast %"class.v8::internal::GCTracer::Scope"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %678) #12
  %679 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %680 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %679, i64 0, i32 80, i32 0, i32 0, i32 0
  %681 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %680, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %20, %"class.v8::internal::GCTracer"* %681, i32 101, i32 0) #12
  %682 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic331 monotonic, align 8
  %683 = inttoptr i64 %682 to i8*
  %684 = icmp eq i64 %682, 0
  br i1 %684, label %685, label %693

685:                                              ; preds = %677
  %686 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %687 = bitcast %"class.v8::TracingController"* %686 to i8* (%"class.v8::TracingController"*, i8*)***
  %688 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %687, align 8
  %689 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %688, i64 2
  %690 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %689, align 8
  %691 = call i8* %690(%"class.v8::TracingController"* %686, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %692 = ptrtoint i8* %691 to i64
  store atomic volatile i64 %692, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic331 monotonic, align 8
  br label %693

693:                                              ; preds = %677, %685
  %694 = phi i8* [ %683, %677 ], [ %691, %685 ]
  %695 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %695) #12
  %696 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %21, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %696, align 8
  %697 = load atomic i8, i8* %694 monotonic, align 1
  %698 = and i8 %697, 5
  %699 = icmp eq i8 %698, 0
  br i1 %699, label %733, label %700

700:                                              ; preds = %693
  %701 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 101) #12
  %702 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %702) #12
  %703 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %702, i8 0, i64 16, i1 false) #12
  %704 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %705 = bitcast %"class.v8::TracingController"* %704 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %706 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %705, align 8
  %707 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %706, i64 3
  %708 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %707, align 8
  %709 = call i64 %708(%"class.v8::TracingController"* %704, i8 signext 88, i8* %694, i8* %701, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %703, i32 0) #12
  %710 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %711 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %710, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %710, align 8
  %712 = icmp eq %"class.v8::ConvertableToTraceFormat"* %711, null
  br i1 %712, label %718, label %713

713:                                              ; preds = %700
  %714 = bitcast %"class.v8::ConvertableToTraceFormat"* %711 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %715 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %714, align 8
  %716 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %715, i64 1
  %717 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %716, align 8
  call void %717(%"class.v8::ConvertableToTraceFormat"* nonnull %711) #12
  br label %718

718:                                              ; preds = %713, %700
  %719 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %720 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %719, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %719, align 16
  %721 = icmp eq %"class.v8::ConvertableToTraceFormat"* %720, null
  br i1 %721, label %727, label %722

722:                                              ; preds = %718
  %723 = bitcast %"class.v8::ConvertableToTraceFormat"* %720 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %724 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %723, align 8
  %725 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %724, i64 1
  %726 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %725, align 8
  call void %726(%"class.v8::ConvertableToTraceFormat"* nonnull %720) #12
  br label %727

727:                                              ; preds = %718, %722
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %702) #12
  %728 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 101) #12
  %729 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %21, i64 0, i32 1
  %730 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %729, i64 0, i32 0
  store i8* %694, i8** %730, align 8
  %731 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %21, i64 0, i32 1, i32 1
  store i8* %728, i8** %731, align 8
  %732 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %21, i64 0, i32 1, i32 2
  store i64 %709, i64* %732, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %729, %"struct.v8::internal::tracing::ScopedTracer::Data"** %696, align 8
  br label %733

733:                                              ; preds = %693, %727
  %734 = call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #12
  %735 = ptrtoint %"class.v8::internal::ScavengerCollector"* %0 to i64
  %736 = ptrtoint %"class.std::__1::vector.1172"* %6 to i64
  %737 = ptrtoint %"class.v8::internal::Worklist.1179"* %8 to i64
  %738 = ptrtoint %"class.v8::internal::Scavenger::PromotionList"* %9 to i64
  %739 = call i8* @_Znwm(i64 216) #17
  %740 = load i64, i64* %341, align 8
  %741 = bitcast %"struct.std::__1::pair.1195"** %338 to <2 x i64>*
  %742 = load <2 x i64>, <2 x i64>* %741, align 8
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %311, i8 0, i64 24, i1 false) #12
  %743 = bitcast i8* %739 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal18ScavengerCollector7JobTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %743, align 8
  %744 = getelementptr inbounds i8, i8* %739, i64 8
  %745 = bitcast i8* %744 to i64*
  store i64 %735, i64* %745, align 8
  %746 = getelementptr inbounds i8, i8* %739, i64 16
  %747 = bitcast i8* %746 to i64*
  store i64 %736, i64* %747, align 8
  %748 = getelementptr inbounds i8, i8* %739, i64 24
  %749 = bitcast i8* %748 to i64*
  store i64 %740, i64* %749, align 8
  %750 = getelementptr inbounds i8, i8* %739, i64 32
  %751 = bitcast i8* %750 to <2 x i64>*
  store <2 x i64> %742, <2 x i64>* %751, align 8
  %752 = extractelement <2 x i64> %742, i32 0
  %753 = sub i64 %752, %740
  %754 = ashr exact i64 %753, 4
  %755 = getelementptr inbounds i8, i8* %739, i64 48
  %756 = bitcast i8* %755 to i64*
  store i64 %754, i64* %756, align 8
  %757 = getelementptr inbounds i8, i8* %739, i64 56
  %758 = bitcast i8* %757 to %"class.v8::internal::IndexGenerator"*
  call void @_ZN2v88internal14IndexGeneratorC1Em(%"class.v8::internal::IndexGenerator"* %758, i64 %754) #12
  %759 = getelementptr inbounds i8, i8* %739, i64 200
  %760 = bitcast i8* %759 to i64*
  store i64 %737, i64* %760, align 8
  %761 = getelementptr inbounds i8, i8* %739, i64 208
  %762 = bitcast i8* %761 to i64*
  store i64 %738, i64* %762, align 8
  %763 = bitcast i8* %739 to %"class.v8::JobTask"*
  %764 = bitcast %"class.v8::Platform"* %734 to %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)***
  %765 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)**, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*** %764, align 8
  %766 = getelementptr inbounds %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %765, i64 12
  %767 = load %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)*, %"class.v8::JobHandle"* (%"class.v8::Platform"*, i8, %"class.v8::JobTask"*)** %766, align 8
  %768 = call %"class.v8::JobHandle"* %767(%"class.v8::Platform"* %734, i8 zeroext 2, %"class.v8::JobTask"* nonnull %763) #12
  %769 = bitcast %"class.v8::JobHandle"* %768 to void (%"class.v8::JobHandle"*)***
  %770 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %769, align 8
  %771 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %770, i64 3
  %772 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %771, align 8
  call void %772(%"class.v8::JobHandle"* %768) #12
  %773 = icmp eq %"class.v8::JobHandle"* %768, null
  br i1 %773, label %778, label %774

774:                                              ; preds = %733
  %775 = load void (%"class.v8::JobHandle"*)**, void (%"class.v8::JobHandle"*)*** %769, align 8
  %776 = getelementptr inbounds void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %775, i64 1
  %777 = load void (%"class.v8::JobHandle"*)*, void (%"class.v8::JobHandle"*)** %776, align 8
  call void %777(%"class.v8::JobHandle"* nonnull %768) #12
  br label %778

778:                                              ; preds = %774, %733
  %779 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %696, align 8
  %780 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %779, null
  br i1 %780, label %797, label %781

781:                                              ; preds = %778
  %782 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %21, i64 0, i32 1, i32 0
  %783 = load i8*, i8** %782, align 8
  %784 = load atomic i8, i8* %783 monotonic, align 1
  %785 = icmp eq i8 %784, 0
  br i1 %785, label %797, label %786

786:                                              ; preds = %781
  %787 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %788 = load i8*, i8** %782, align 8
  %789 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %21, i64 0, i32 1, i32 1
  %790 = load i8*, i8** %789, align 8
  %791 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %21, i64 0, i32 1, i32 2
  %792 = load i64, i64* %791, align 8
  %793 = bitcast %"class.v8::TracingController"* %787 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %794 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %793, align 8
  %795 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %794, i64 5
  %796 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %795, align 8
  call void %796(%"class.v8::TracingController"* %787, i8* %788, i8* %790, i64 %792) #12
  br label %797

797:                                              ; preds = %778, %781, %786
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %695) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %20) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %678) #12
  %798 = load i8, i8* @_ZN2v88internal37FLAG_scavenge_separate_stack_scanningE, align 1, !range !2
  %799 = icmp eq i8 %798, 0
  br i1 %799, label %801, label %800, !prof !60

800:                                              ; preds = %797
  call void @_ZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEi(%"class.v8::internal::ScavengerCollector"* %0, %"class.v8::internal::RootScavengeVisitor"* nonnull %15, %"class.std::__1::vector.1172"* nonnull %6, i32 0)
  br label %801

801:                                              ; preds = %797, %800
  %802 = bitcast %"class.v8::internal::GCTracer::Scope"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %802) #12
  %803 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %804 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %803, i64 0, i32 80, i32 0, i32 0, i32 0
  %805 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %804, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %22, %"class.v8::internal::GCTracer"* %805, i32 100, i32 0) #12
  %806 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic352 monotonic, align 8
  %807 = inttoptr i64 %806 to i8*
  %808 = icmp eq i64 %806, 0
  br i1 %808, label %809, label %817

809:                                              ; preds = %801
  %810 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %811 = bitcast %"class.v8::TracingController"* %810 to i8* (%"class.v8::TracingController"*, i8*)***
  %812 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %811, align 8
  %813 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %812, i64 2
  %814 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %813, align 8
  %815 = call i8* %814(%"class.v8::TracingController"* %810, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %816 = ptrtoint i8* %815 to i64
  store atomic volatile i64 %816, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic352 monotonic, align 8
  br label %817

817:                                              ; preds = %801, %809
  %818 = phi i8* [ %807, %801 ], [ %815, %809 ]
  %819 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %819) #12
  %820 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %23, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %820, align 8
  %821 = load atomic i8, i8* %818 monotonic, align 1
  %822 = and i8 %821, 5
  %823 = icmp eq i8 %822, 0
  br i1 %823, label %857, label %824

824:                                              ; preds = %817
  %825 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 100) #12
  %826 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %826) #12
  %827 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %826, i8 0, i64 16, i1 false) #12
  %828 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %829 = bitcast %"class.v8::TracingController"* %828 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %830 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %829, align 8
  %831 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %830, i64 3
  %832 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %831, align 8
  %833 = call i64 %832(%"class.v8::TracingController"* %828, i8 signext 88, i8* %818, i8* %825, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %827, i32 0) #12
  %834 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %835 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %834, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %834, align 8
  %836 = icmp eq %"class.v8::ConvertableToTraceFormat"* %835, null
  br i1 %836, label %842, label %837

837:                                              ; preds = %824
  %838 = bitcast %"class.v8::ConvertableToTraceFormat"* %835 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %839 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %838, align 8
  %840 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %839, i64 1
  %841 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %840, align 8
  call void %841(%"class.v8::ConvertableToTraceFormat"* nonnull %835) #12
  br label %842

842:                                              ; preds = %837, %824
  %843 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %844 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %843, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %843, align 16
  %845 = icmp eq %"class.v8::ConvertableToTraceFormat"* %844, null
  br i1 %845, label %851, label %846

846:                                              ; preds = %842
  %847 = bitcast %"class.v8::ConvertableToTraceFormat"* %844 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %848 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %847, align 8
  %849 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %848, i64 1
  %850 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %849, align 8
  call void %850(%"class.v8::ConvertableToTraceFormat"* nonnull %844) #12
  br label %851

851:                                              ; preds = %842, %846
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %826) #12
  %852 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 100) #12
  %853 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %23, i64 0, i32 1
  %854 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %853, i64 0, i32 0
  store i8* %818, i8** %854, align 8
  %855 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %23, i64 0, i32 1, i32 1
  store i8* %852, i8** %855, align 8
  %856 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %23, i64 0, i32 1, i32 2
  store i64 %833, i64* %856, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %853, %"struct.v8::internal::tracing::ScopedTracer::Data"** %820, align 8
  br label %857

857:                                              ; preds = %817, %851
  %858 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %859 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %858, i64 0, i32 36
  %860 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %859, align 8
  call void @_ZN2v88internal13GlobalHandles31MarkYoungWeakDeadObjectsPendingEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"* %860, i1 (%"class.v8::internal::Heap"*, i64)* nonnull @_ZN2v88internal12_GLOBAL__N_127IsUnscavengedHeapObjectSlotEPNS0_4HeapENS0_14FullObjectSlotE) #12
  %861 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %862 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %861, i64 0, i32 36
  %863 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %862, align 8
  call void @_ZN2v88internal13GlobalHandles40IterateYoungWeakDeadObjectsForFinalizersEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"* %863, %"class.v8::internal::RootVisitor"* nonnull %642) #12
  %864 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %480, align 8
  %865 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %864, i64 0, i32 0, i32 0, i32 0
  %866 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %865, align 8
  call void @_ZN2v88internal9Scavenger7ProcessEPNS_11JobDelegateE(%"class.v8::internal::Scavenger"* %866, %"class.v8::JobDelegate"* null)
  %867 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %34, align 8
  %868 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %867, i64 0, i32 36
  %869 = load %"class.v8::internal::GlobalHandles"*, %"class.v8::internal::GlobalHandles"** %868, align 8
  call void @_ZN2v88internal13GlobalHandles40IterateYoungWeakObjectsForPhantomHandlesEPNS0_11RootVisitorEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"* %869, %"class.v8::internal::RootVisitor"* nonnull %642, i1 (%"class.v8::internal::Heap"*, i64)* nonnull @_ZN2v88internal12_GLOBAL__N_127IsUnscavengedHeapObjectSlotEPNS0_4HeapENS0_14FullObjectSlotE) #12
  %870 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %820, align 8
  %871 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %870, null
  br i1 %871, label %888, label %872

872:                                              ; preds = %857
  %873 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %23, i64 0, i32 1, i32 0
  %874 = load i8*, i8** %873, align 8
  %875 = load atomic i8, i8* %874 monotonic, align 1
  %876 = icmp eq i8 %875, 0
  br i1 %876, label %888, label %877

877:                                              ; preds = %872
  %878 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %879 = load i8*, i8** %873, align 8
  %880 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %23, i64 0, i32 1, i32 1
  %881 = load i8*, i8** %880, align 8
  %882 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %23, i64 0, i32 1, i32 2
  %883 = load i64, i64* %882, align 8
  %884 = bitcast %"class.v8::TracingController"* %878 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %885 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %884, align 8
  %886 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %885, i64 5
  %887 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %886, align 8
  call void %887(%"class.v8::TracingController"* %878, i8* %879, i8* %881, i64 %883) #12
  br label %888

888:                                              ; preds = %857, %872, %877
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %819) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %22) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %802) #12
  %889 = bitcast %"class.v8::internal::GCTracer::Scope"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %889) #12
  %890 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %891 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %890, i64 0, i32 80, i32 0, i32 0, i32 0
  %892 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %891, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %24, %"class.v8::internal::GCTracer"* %892, i32 106, i32 0) #12
  %893 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic367 monotonic, align 8
  %894 = inttoptr i64 %893 to i8*
  %895 = icmp eq i64 %893, 0
  br i1 %895, label %896, label %904

896:                                              ; preds = %888
  %897 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %898 = bitcast %"class.v8::TracingController"* %897 to i8* (%"class.v8::TracingController"*, i8*)***
  %899 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %898, align 8
  %900 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %899, i64 2
  %901 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %900, align 8
  %902 = call i8* %901(%"class.v8::TracingController"* %897, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %903 = ptrtoint i8* %902 to i64
  store atomic volatile i64 %903, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic367 monotonic, align 8
  br label %904

904:                                              ; preds = %888, %896
  %905 = phi i8* [ %894, %888 ], [ %902, %896 ]
  %906 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %906) #12
  %907 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %25, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %907, align 8
  %908 = load atomic i8, i8* %905 monotonic, align 1
  %909 = and i8 %908, 5
  %910 = icmp eq i8 %909, 0
  br i1 %910, label %944, label %911

911:                                              ; preds = %904
  %912 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 106) #12
  %913 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %913) #12
  %914 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %913, i8 0, i64 16, i1 false) #12
  %915 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %916 = bitcast %"class.v8::TracingController"* %915 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %917 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %916, align 8
  %918 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %917, i64 3
  %919 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %918, align 8
  %920 = call i64 %919(%"class.v8::TracingController"* %915, i8 signext 88, i8* %905, i8* %912, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %914, i32 0) #12
  %921 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %922 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %921, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %921, align 8
  %923 = icmp eq %"class.v8::ConvertableToTraceFormat"* %922, null
  br i1 %923, label %929, label %924

924:                                              ; preds = %911
  %925 = bitcast %"class.v8::ConvertableToTraceFormat"* %922 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %926 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %925, align 8
  %927 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %926, i64 1
  %928 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %927, align 8
  call void %928(%"class.v8::ConvertableToTraceFormat"* nonnull %922) #12
  br label %929

929:                                              ; preds = %924, %911
  %930 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %931 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %930, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %930, align 16
  %932 = icmp eq %"class.v8::ConvertableToTraceFormat"* %931, null
  br i1 %932, label %938, label %933

933:                                              ; preds = %929
  %934 = bitcast %"class.v8::ConvertableToTraceFormat"* %931 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %935 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %934, align 8
  %936 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %935, i64 1
  %937 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %936, align 8
  call void %937(%"class.v8::ConvertableToTraceFormat"* nonnull %931) #12
  br label %938

938:                                              ; preds = %929, %933
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %913) #12
  %939 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 106) #12
  %940 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %25, i64 0, i32 1
  %941 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %940, i64 0, i32 0
  store i8* %905, i8** %941, align 8
  %942 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %25, i64 0, i32 1, i32 1
  store i8* %939, i8** %942, align 8
  %943 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %25, i64 0, i32 1, i32 2
  store i64 %920, i64* %943, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %940, %"struct.v8::internal::tracing::ScopedTracer::Data"** %907, align 8
  br label %944

944:                                              ; preds = %904, %938
  %945 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %480, align 8
  %946 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %6, i64 0, i32 0, i32 1
  %947 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %946, align 8
  %948 = icmp eq %"class.std::__1::unique_ptr.1174"* %945, %947
  br i1 %948, label %963, label %1073

949:                                              ; preds = %1073
  %950 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %480, align 8
  %951 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %946, align 8
  %952 = icmp eq %"class.std::__1::unique_ptr.1174"* %951, %950
  br i1 %952, label %963, label %953

953:                                              ; preds = %949, %961
  %954 = phi %"class.std::__1::unique_ptr.1174"* [ %955, %961 ], [ %951, %949 ]
  %955 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %954, i64 -1
  %956 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %955, i64 0, i32 0, i32 0, i32 0
  %957 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %956, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %956, align 8
  %958 = icmp eq %"class.v8::internal::Scavenger"* %957, null
  br i1 %958, label %961, label %959

959:                                              ; preds = %953
  call void @_ZN2v88internal9ScavengerD2Ev(%"class.v8::internal::Scavenger"* nonnull %957) #12
  %960 = bitcast %"class.v8::internal::Scavenger"* %957 to i8*
  call void @_ZdlPv(i8* %960) #17
  br label %961

961:                                              ; preds = %959, %953
  %962 = icmp eq %"class.std::__1::unique_ptr.1174"* %955, %950
  br i1 %962, label %963, label %953

963:                                              ; preds = %961, %944, %949
  %964 = phi %"class.std::__1::unique_ptr.1174"* [ %950, %949 ], [ %945, %944 ], [ %950, %961 ]
  store %"class.std::__1::unique_ptr.1174"* %964, %"class.std::__1::unique_ptr.1174"** %946, align 8
  %965 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %966 = bitcast %"struct.std::__1::__hash_node_base.1153"** %965 to i64*
  %967 = load i64, i64* %966, align 8
  %968 = icmp eq i64 %967, 0
  br i1 %968, label %969, label %1022

969:                                              ; preds = %1022, %963
  %970 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %971 = load i64, i64* %970, align 8
  %972 = icmp eq i64 %971, 0
  br i1 %972, label %1040, label %973

973:                                              ; preds = %969
  %974 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %965, align 8
  %975 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %974, null
  br i1 %975, label %982, label %976

976:                                              ; preds = %973, %976
  %977 = phi %"struct.std::__1::__hash_node_base.1153"* [ %979, %976 ], [ %974, %973 ]
  %978 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %977, i64 0, i32 0
  %979 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %978, align 8
  %980 = bitcast %"struct.std::__1::__hash_node_base.1153"* %977 to i8*
  call void @_ZdlPv(i8* %980) #17
  %981 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %979, null
  br i1 %981, label %982, label %976

982:                                              ; preds = %976, %973
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %965, align 8
  %983 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %984 = load i64, i64* %983, align 8
  %985 = icmp eq i64 %984, 0
  br i1 %985, label %1004, label %986

986:                                              ; preds = %982
  %987 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %988 = add i64 %984, -1
  %989 = and i64 %984, 3
  %990 = icmp ult i64 %988, 3
  br i1 %990, label %993, label %991

991:                                              ; preds = %986
  %992 = sub i64 %984, %989
  br label %1005

993:                                              ; preds = %1005, %986
  %994 = phi i64 [ 0, %986 ], [ %1019, %1005 ]
  %995 = icmp eq i64 %989, 0
  br i1 %995, label %1004, label %996

996:                                              ; preds = %993, %996
  %997 = phi i64 [ %1001, %996 ], [ %994, %993 ]
  %998 = phi i64 [ %1002, %996 ], [ %989, %993 ]
  %999 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %987, align 8
  %1000 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %999, i64 %997
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %1000, align 8
  %1001 = add nuw i64 %997, 1
  %1002 = add i64 %998, -1
  %1003 = icmp eq i64 %1002, 0
  br i1 %1003, label %1004, label %996, !llvm.loop !61

1004:                                             ; preds = %993, %996, %982
  store i64 0, i64* %970, align 8
  br label %1040

1005:                                             ; preds = %1005, %991
  %1006 = phi i64 [ 0, %991 ], [ %1019, %1005 ]
  %1007 = phi i64 [ %992, %991 ], [ %1020, %1005 ]
  %1008 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %987, align 8
  %1009 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %1008, i64 %1006
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %1009, align 8
  %1010 = or i64 %1006, 1
  %1011 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %987, align 8
  %1012 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %1011, i64 %1010
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %1012, align 8
  %1013 = or i64 %1006, 2
  %1014 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %987, align 8
  %1015 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %1014, i64 %1013
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %1015, align 8
  %1016 = or i64 %1006, 3
  %1017 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %987, align 8
  %1018 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %1017, i64 %1016
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %1018, align 8
  %1019 = add nuw i64 %1006, 4
  %1020 = add i64 %1007, -4
  %1021 = icmp eq i64 %1020, 0
  br i1 %1021, label %993, label %1005

1022:                                             ; preds = %963, %1022
  %1023 = phi i64 [ %1038, %1022 ], [ %967, %963 ]
  %1024 = inttoptr i64 %1023 to %"struct.std::__1::__hash_node"*
  %1025 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1024, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1026 = load i64, i64* %1025, align 8
  %1027 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %1024, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %1028 = load i64, i64* %1027, align 8
  %1029 = add i64 %1026, -1
  %1030 = inttoptr i64 %1029 to i32*
  %1031 = trunc i64 %1028 to i32
  store atomic volatile i32 %1031, i32* %1030 monotonic, align 4
  %1032 = and i64 %1026, -262144
  %1033 = inttoptr i64 %1032 to %"class.v8::internal::LargePage"*
  %1034 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1035 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1034, i64 0, i32 28
  %1036 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %1035, align 8
  call void @_ZN2v88internal19OldLargeObjectSpace21PromoteNewLargeObjectEPNS0_9LargePageE(%"class.v8::internal::OldLargeObjectSpace"* %1036, %"class.v8::internal::LargePage"* %1033) #12
  %1037 = inttoptr i64 %1023 to i64*
  %1038 = load i64, i64* %1037, align 8
  %1039 = icmp eq i64 %1038, 0
  br i1 %1039, label %969, label %1022

1040:                                             ; preds = %969, %1004
  %1041 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %907, align 8
  %1042 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %1041, null
  br i1 %1042, label %1059, label %1043

1043:                                             ; preds = %1040
  %1044 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %25, i64 0, i32 1, i32 0
  %1045 = load i8*, i8** %1044, align 8
  %1046 = load atomic i8, i8* %1045 monotonic, align 1
  %1047 = icmp eq i8 %1046, 0
  br i1 %1047, label %1059, label %1048

1048:                                             ; preds = %1043
  %1049 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1050 = load i8*, i8** %1044, align 8
  %1051 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %25, i64 0, i32 1, i32 1
  %1052 = load i8*, i8** %1051, align 8
  %1053 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %25, i64 0, i32 1, i32 2
  %1054 = load i64, i64* %1053, align 8
  %1055 = bitcast %"class.v8::TracingController"* %1049 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %1056 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %1055, align 8
  %1057 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1056, i64 5
  %1058 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1057, align 8
  call void %1058(%"class.v8::TracingController"* %1049, i8* %1050, i8* %1052, i64 %1054) #12
  br label %1059

1059:                                             ; preds = %1040, %1043, %1048
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %906) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %24) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %889) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %479) #12
  %1060 = load %"struct.std::__1::pair.1195"*, %"struct.std::__1::pair.1195"** %343, align 8
  %1061 = icmp eq %"struct.std::__1::pair.1195"* %1060, null
  br i1 %1061, label %1065, label %1062

1062:                                             ; preds = %1059
  %1063 = ptrtoint %"struct.std::__1::pair.1195"* %1060 to i64
  store i64 %1063, i64* %340, align 8
  %1064 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %1060, i64 0, i32 0, i32 0
  call void @_ZdlPv(i8* %1064) #17
  br label %1065

1065:                                             ; preds = %1059, %1062
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %311) #12
  call void @_ZN2v88internal7Sweeper24FilterSweepingPagesScopeD1Ev(%"class.v8::internal::Sweeper::FilterSweepingPagesScope"* nonnull %12) #12
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %190) #12
  call void @_ZN2v88internal7Sweeper20PauseOrCompleteScopeD1Ev(%"class.v8::internal::Sweeper::PauseOrCompleteScope"* nonnull %11) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %189) #12
  %1066 = bitcast %"class.v8::internal::GCTracer::Scope"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %1066) #12
  %1067 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1068 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1067, i64 0, i32 80, i32 0, i32 0, i32 0
  %1069 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %1068, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %26, %"class.v8::internal::GCTracer"* %1069, i32 104, i32 0) #12
  %1070 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic382 monotonic, align 8
  %1071 = inttoptr i64 %1070 to i8*
  %1072 = icmp eq i64 %1070, 0
  br i1 %1072, label %1079, label %1087

1073:                                             ; preds = %944, %1073
  %1074 = phi %"class.std::__1::unique_ptr.1174"* [ %1077, %1073 ], [ %945, %944 ]
  %1075 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %1074, i64 0, i32 0, i32 0, i32 0
  %1076 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %1075, align 8
  call void @_ZN2v88internal9Scavenger8FinalizeEv(%"class.v8::internal::Scavenger"* %1076)
  %1077 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %1074, i64 1
  %1078 = icmp eq %"class.std::__1::unique_ptr.1174"* %1077, %947
  br i1 %1078, label %949, label %1073

1079:                                             ; preds = %1065
  %1080 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1081 = bitcast %"class.v8::TracingController"* %1080 to i8* (%"class.v8::TracingController"*, i8*)***
  %1082 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %1081, align 8
  %1083 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %1082, i64 2
  %1084 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %1083, align 8
  %1085 = call i8* %1084(%"class.v8::TracingController"* %1080, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %1086 = ptrtoint i8* %1085 to i64
  store atomic volatile i64 %1086, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic382 monotonic, align 8
  br label %1087

1087:                                             ; preds = %1065, %1079
  %1088 = phi i8* [ %1071, %1065 ], [ %1085, %1079 ]
  %1089 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1089) #12
  %1090 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %27, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1090, align 8
  %1091 = load atomic i8, i8* %1088 monotonic, align 1
  %1092 = and i8 %1091, 5
  %1093 = icmp eq i8 %1092, 0
  br i1 %1093, label %1127, label %1094

1094:                                             ; preds = %1087
  %1095 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 104) #12
  %1096 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1096) #12
  %1097 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1096, i8 0, i64 16, i1 false) #12
  %1098 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1099 = bitcast %"class.v8::TracingController"* %1098 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %1100 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %1099, align 8
  %1101 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %1100, i64 3
  %1102 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %1101, align 8
  %1103 = call i64 %1102(%"class.v8::TracingController"* %1098, i8 signext 88, i8* %1088, i8* %1095, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %1097, i32 0) #12
  %1104 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %1105 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %1104, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %1104, align 8
  %1106 = icmp eq %"class.v8::ConvertableToTraceFormat"* %1105, null
  br i1 %1106, label %1112, label %1107

1107:                                             ; preds = %1094
  %1108 = bitcast %"class.v8::ConvertableToTraceFormat"* %1105 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %1109 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %1108, align 8
  %1110 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1109, i64 1
  %1111 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1110, align 8
  call void %1111(%"class.v8::ConvertableToTraceFormat"* nonnull %1105) #12
  br label %1112

1112:                                             ; preds = %1107, %1094
  %1113 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %1114 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %1113, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %1113, align 16
  %1115 = icmp eq %"class.v8::ConvertableToTraceFormat"* %1114, null
  br i1 %1115, label %1121, label %1116

1116:                                             ; preds = %1112
  %1117 = bitcast %"class.v8::ConvertableToTraceFormat"* %1114 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %1118 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %1117, align 8
  %1119 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1118, i64 1
  %1120 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1119, align 8
  call void %1120(%"class.v8::ConvertableToTraceFormat"* nonnull %1114) #12
  br label %1121

1121:                                             ; preds = %1112, %1116
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1096) #12
  %1122 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 104) #12
  %1123 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %27, i64 0, i32 1
  %1124 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %1123, i64 0, i32 0
  store i8* %1088, i8** %1124, align 8
  %1125 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %27, i64 0, i32 1, i32 1
  store i8* %1122, i8** %1125, align 8
  %1126 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %27, i64 0, i32 1, i32 2
  store i64 %1103, i64* %1126, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %1123, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1090, align 8
  br label %1127

1127:                                             ; preds = %1087, %1121
  %1128 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  call void @_ZN2v88internal4Heap42UpdateYoungReferencesInExternalStringTableEPFNS0_6StringEPS1_NS0_14FullObjectSlotEE(%"class.v8::internal::Heap"* %1128, i64 (%"class.v8::internal::Heap"*, i64)* nonnull @_ZN2v88internal4Heap46UpdateYoungReferenceInExternalStringTableEntryEPS1_NS0_14FullObjectSlotE) #12
  %1129 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1130 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1129, i64 0, i32 86, i32 0, i32 0, i32 0
  %1131 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %1130, align 8
  call void @_ZN2v88internal18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEv(%"class.v8::internal::IncrementalMarking"* %1131) #12
  %1132 = load i8, i8* @_ZN2v88internal25FLAG_track_retaining_pathE, align 1, !range !2
  %1133 = icmp eq i8 %1132, 0
  br i1 %1133, label %1136, label %1134, !prof !60

1134:                                             ; preds = %1127
  %1135 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  call void @_ZN2v88internal4Heap28UpdateRetainersAfterScavengeEv(%"class.v8::internal::Heap"* %1135) #12
  br label %1136

1136:                                             ; preds = %1127, %1134
  %1137 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1090, align 8
  %1138 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %1137, null
  br i1 %1138, label %1155, label %1139

1139:                                             ; preds = %1136
  %1140 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %27, i64 0, i32 1, i32 0
  %1141 = load i8*, i8** %1140, align 8
  %1142 = load atomic i8, i8* %1141 monotonic, align 1
  %1143 = icmp eq i8 %1142, 0
  br i1 %1143, label %1155, label %1144

1144:                                             ; preds = %1139
  %1145 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1146 = load i8*, i8** %1140, align 8
  %1147 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %27, i64 0, i32 1, i32 1
  %1148 = load i8*, i8** %1147, align 8
  %1149 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %27, i64 0, i32 1, i32 2
  %1150 = load i64, i64* %1149, align 8
  %1151 = bitcast %"class.v8::TracingController"* %1145 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %1152 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %1151, align 8
  %1153 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1152, i64 5
  %1154 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1153, align 8
  call void %1154(%"class.v8::TracingController"* %1145, i8* %1146, i8* %1148, i64 %1150) #12
  br label %1155

1155:                                             ; preds = %1136, %1139, %1144
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1089) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %26) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %1066) #12
  %1156 = load i8, i8* @_ZN2v88internal23FLAG_concurrent_markingE, align 1, !range !2
  %1157 = icmp eq i8 %1156, 0
  br i1 %1157, label %1184, label %1158

1158:                                             ; preds = %1155
  %1159 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1160 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1159, i64 0, i32 24
  %1161 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1160, align 8
  %1162 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1161, i64 0, i32 5, i32 0, i32 2, i32 0
  %1163 = bitcast %"class.v8::internal::MemoryChunk"** %1162 to %"class.v8::internal::Page"**
  %1164 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %1163, align 8
  %1165 = icmp eq %"class.v8::internal::Page"* %1164, null
  br i1 %1165, label %1184, label %1166

1166:                                             ; preds = %1158
  %1167 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1159, i64 0, i32 87, i32 0, i32 0, i32 0
  %1168 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %1167, align 8
  %1169 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1164, i64 0, i32 0
  call void @_ZN2v88internal17ConcurrentMarking20ClearMemoryChunkDataEPNS0_11MemoryChunkE(%"class.v8::internal::ConcurrentMarking"* %1168, %"class.v8::internal::MemoryChunk"* %1169) #12
  %1170 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1164, i64 0, i32 0, i32 12, i32 0
  %1171 = bitcast %"class.v8::internal::MemoryChunk"** %1170 to %"class.v8::internal::Page"**
  %1172 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %1171, align 8
  %1173 = icmp eq %"class.v8::internal::Page"* %1172, null
  br i1 %1173, label %1184, label %1174

1174:                                             ; preds = %1166, %1174
  %1175 = phi %"class.v8::internal::Page"* [ %1182, %1174 ], [ %1172, %1166 ]
  %1176 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1177 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1176, i64 0, i32 87, i32 0, i32 0, i32 0
  %1178 = load %"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::ConcurrentMarking"** %1177, align 8
  %1179 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1175, i64 0, i32 0
  call void @_ZN2v88internal17ConcurrentMarking20ClearMemoryChunkDataEPNS0_11MemoryChunkE(%"class.v8::internal::ConcurrentMarking"* %1178, %"class.v8::internal::MemoryChunk"* %1179) #12
  %1180 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1175, i64 0, i32 0, i32 12, i32 0
  %1181 = bitcast %"class.v8::internal::MemoryChunk"** %1180 to %"class.v8::internal::Page"**
  %1182 = load %"class.v8::internal::Page"*, %"class.v8::internal::Page"** %1181, align 8
  %1183 = icmp eq %"class.v8::internal::Page"* %1182, null
  br i1 %1183, label %1184, label %1174

1184:                                             ; preds = %1174, %1166, %1158, %1155
  %1185 = bitcast %"class.v8::internal::ScavengeWeakObjectRetainer"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1185) #12
  %1186 = getelementptr inbounds %"class.v8::internal::ScavengeWeakObjectRetainer", %"class.v8::internal::ScavengeWeakObjectRetainer"* %2, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal26ScavengeWeakObjectRetainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1186, align 8
  %1187 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1188 = getelementptr inbounds %"class.v8::internal::ScavengeWeakObjectRetainer", %"class.v8::internal::ScavengeWeakObjectRetainer"* %2, i64 0, i32 0
  call void @_ZN2v88internal4Heap26ProcessYoungWeakReferencesEPNS0_18WeakObjectRetainerE(%"class.v8::internal::Heap"* %1187, %"class.v8::internal::WeakObjectRetainer"* nonnull %1188) #12
  call void @_ZN2v88internal18ScavengerCollector20ClearYoungEphemeronsEPNS0_8WorklistINS0_18EphemeronHashTableELi128EEE(%"class.v8::internal::ScavengerCollector"* %0, %"class.v8::internal::Worklist.1183"* nonnull %10) #12
  call void @_ZN2v88internal18ScavengerCollector18ClearOldEphemeronsEv(%"class.v8::internal::ScavengerCollector"* %0) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1185) #12
  %1189 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1190 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1189, i64 0, i32 24
  %1191 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1190, align 8
  %1192 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1191, i64 0, i32 0, i32 1, i32 1
  %1193 = load i64, i64* %1192, align 8
  %1194 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1191, i64 0, i32 4
  call void @_ZN2v88internal9SemiSpace12set_age_markEm(%"class.v8::internal::SemiSpace"* %1194, i64 %1193) #12
  %1195 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1196 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1195, i64 0, i32 30
  %1197 = load %"class.v8::internal::NewLargeObjectSpace"*, %"class.v8::internal::NewLargeObjectSpace"** %1196, align 8
  %1198 = bitcast %"class.std::__1::function"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1198) #12
  %1199 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %28, i64 0, i32 0, i32 1, i32 0
  %1200 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %28, i64 0, i32 0, i32 2
  store i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::HeapObject"*)* @"_ZNSt3__110__function16__policy_invokerIFbN2v88internal10HeapObjectEEE11__call_implINS0_20__default_alloc_funcIZNS3_18ScavengerCollector14CollectGarbageEvE3$_2S5_EEEEbPKNS0_16__policy_storageEOS4_", i1 (%"union.std::__1::__function::__policy_storage"*, %"class.v8::internal::HeapObject"*)** %1199, align 8
  store %"struct.std::__1::__function::__policy"* @"_ZZNSt3__110__function8__policy15__choose_policyINS0_20__default_alloc_funcIZN2v88internal18ScavengerCollector14CollectGarbageEvE3$_2FbNS5_10HeapObjectEEEEEEPKS1_NS_17integral_constantIbLb1EEEE9__policy_", %"struct.std::__1::__function::__policy"** %1200, align 8
  call void @_ZN2v88internal19NewLargeObjectSpace15FreeDeadObjectsERKNSt3__18functionIFbNS0_10HeapObjectEEEE(%"class.v8::internal::NewLargeObjectSpace"* %1197, %"class.std::__1::function"* nonnull dereferenceable(32) %28) #12
  %1201 = load %"struct.std::__1::__function::__policy"*, %"struct.std::__1::__function::__policy"** %1200, align 8
  %1202 = getelementptr inbounds %"struct.std::__1::__function::__policy", %"struct.std::__1::__function::__policy"* %1201, i64 0, i32 1
  %1203 = load void (i8*)*, void (i8*)** %1202, align 8
  %1204 = icmp eq void (i8*)* %1203, null
  br i1 %1204, label %1208, label %1205

1205:                                             ; preds = %1184
  %1206 = getelementptr inbounds %"class.std::__1::function", %"class.std::__1::function"* %28, i64 0, i32 0, i32 0, i32 0
  %1207 = load i8*, i8** %1206, align 8
  call void %1203(i8* %1207) #12
  br label %1208

1208:                                             ; preds = %1184, %1205
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1198) #12
  %1209 = bitcast %"class.v8::internal::GCTracer::Scope"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %1209) #12
  %1210 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1211 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1210, i64 0, i32 80, i32 0, i32 0, i32 0
  %1212 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %1211, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %29, %"class.v8::internal::GCTracer"* %1212, i32 97, i32 0) #12
  %1213 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic413 monotonic, align 8
  %1214 = inttoptr i64 %1213 to i8*
  %1215 = icmp eq i64 %1213, 0
  br i1 %1215, label %1216, label %1224

1216:                                             ; preds = %1208
  %1217 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1218 = bitcast %"class.v8::TracingController"* %1217 to i8* (%"class.v8::TracingController"*, i8*)***
  %1219 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %1218, align 8
  %1220 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %1219, i64 2
  %1221 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %1220, align 8
  %1222 = call i8* %1221(%"class.v8::TracingController"* %1217, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %1223 = ptrtoint i8* %1222 to i64
  store atomic volatile i64 %1223, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic413 monotonic, align 8
  br label %1224

1224:                                             ; preds = %1208, %1216
  %1225 = phi i8* [ %1214, %1208 ], [ %1222, %1216 ]
  %1226 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %30 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1226) #12
  %1227 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %30, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1227, align 8
  %1228 = load atomic i8, i8* %1225 monotonic, align 1
  %1229 = and i8 %1228, 5
  %1230 = icmp eq i8 %1229, 0
  br i1 %1230, label %1264, label %1231

1231:                                             ; preds = %1224
  %1232 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 97) #12
  %1233 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1233) #12
  %1234 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1233, i8 0, i64 16, i1 false) #12
  %1235 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1236 = bitcast %"class.v8::TracingController"* %1235 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %1237 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %1236, align 8
  %1238 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %1237, i64 3
  %1239 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %1238, align 8
  %1240 = call i64 %1239(%"class.v8::TracingController"* %1235, i8 signext 88, i8* %1225, i8* %1232, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %1234, i32 0) #12
  %1241 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %1242 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %1241, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %1241, align 8
  %1243 = icmp eq %"class.v8::ConvertableToTraceFormat"* %1242, null
  br i1 %1243, label %1249, label %1244

1244:                                             ; preds = %1231
  %1245 = bitcast %"class.v8::ConvertableToTraceFormat"* %1242 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %1246 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %1245, align 8
  %1247 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1246, i64 1
  %1248 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1247, align 8
  call void %1248(%"class.v8::ConvertableToTraceFormat"* nonnull %1242) #12
  br label %1249

1249:                                             ; preds = %1244, %1231
  %1250 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %1251 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %1250, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %1250, align 16
  %1252 = icmp eq %"class.v8::ConvertableToTraceFormat"* %1251, null
  br i1 %1252, label %1258, label %1253

1253:                                             ; preds = %1249
  %1254 = bitcast %"class.v8::ConvertableToTraceFormat"* %1251 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %1255 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %1254, align 8
  %1256 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1255, i64 1
  %1257 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1256, align 8
  call void %1257(%"class.v8::ConvertableToTraceFormat"* nonnull %1251) #12
  br label %1258

1258:                                             ; preds = %1249, %1253
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1233) #12
  %1259 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 97) #12
  %1260 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %30, i64 0, i32 1
  %1261 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %1260, i64 0, i32 0
  store i8* %1225, i8** %1261, align 8
  %1262 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %30, i64 0, i32 1, i32 1
  store i8* %1259, i8** %1262, align 8
  %1263 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %30, i64 0, i32 1, i32 2
  store i64 %1240, i64* %1263, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %1260, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1227, align 8
  br label %1264

1264:                                             ; preds = %1224, %1258
  %1265 = bitcast %"class.v8::internal::MemoryChunk"** %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1265) #12
  %1266 = call zeroext i1 @_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EE3PopEiPS3_(%"class.v8::internal::Worklist.1177"* nonnull %7, i32 0, %"class.v8::internal::MemoryChunk"** nonnull %31)
  br i1 %1266, label %1267, label %1296

1267:                                             ; preds = %1264, %1294
  %1268 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %31, align 8
  %1269 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1268, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %1270 = load atomic i64, i64* %1269 seq_cst, align 8
  %1271 = icmp eq i64 %1270, 0
  %1272 = load %"class.v8::internal::MemoryChunk"*, %"class.v8::internal::MemoryChunk"** %31, align 8
  br i1 %1271, label %1273, label %1285

1273:                                             ; preds = %1267
  %1274 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1272, i64 0, i32 1, i64 0
  %1275 = load %"class.v8::internal::SlotSet"*, %"class.v8::internal::SlotSet"** %1274, align 8
  %1276 = icmp eq %"class.v8::internal::SlotSet"* %1275, null
  br i1 %1276, label %1294, label %1277

1277:                                             ; preds = %1273
  %1278 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1272, i64 0, i32 0, i32 0
  %1279 = load i64, i64* %1278, align 8
  %1280 = add i64 %1279, 4095
  %1281 = lshr i64 %1280, 12
  %1282 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1272, i64 0, i32 17
  %1283 = call zeroext i1 @_ZN2v88internal7SlotSet25CheckPossiblyEmptyBucketsEmPNS0_20PossiblyEmptyBucketsE(%"class.v8::internal::SlotSet"* nonnull %1275, i64 %1281, %"class.v8::internal::PossiblyEmptyBuckets"* %1282) #12
  br i1 %1283, label %1284, label %1294

1284:                                             ; preds = %1277
  call void @_ZN2v88internal11MemoryChunk14ReleaseSlotSetILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"* %1272) #12
  br label %1294

1285:                                             ; preds = %1267
  %1286 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1272, i64 0, i32 17, i32 0
  %1287 = load i64, i64* %1286, align 8
  %1288 = and i64 %1287, 1
  %1289 = icmp eq i64 %1288, 0
  br i1 %1289, label %1293, label %1290

1290:                                             ; preds = %1285
  %1291 = and i64 %1287, -2
  %1292 = inttoptr i64 %1291 to i8*
  call void @_ZN2v88internal11AlignedFreeEPv(i8* %1292) #12
  br label %1293

1293:                                             ; preds = %1285, %1290
  store i64 0, i64* %1286, align 8
  br label %1294

1294:                                             ; preds = %1284, %1277, %1273, %1293
  %1295 = call zeroext i1 @_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EE3PopEiPS3_(%"class.v8::internal::Worklist.1177"* nonnull %7, i32 0, %"class.v8::internal::MemoryChunk"** nonnull %31)
  br i1 %1295, label %1267, label %1296

1296:                                             ; preds = %1294, %1264
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1265) #12
  %1297 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1227, align 8
  %1298 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %1297, null
  br i1 %1298, label %1315, label %1299

1299:                                             ; preds = %1296
  %1300 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %30, i64 0, i32 1, i32 0
  %1301 = load i8*, i8** %1300, align 8
  %1302 = load atomic i8, i8* %1301 monotonic, align 1
  %1303 = icmp eq i8 %1302, 0
  br i1 %1303, label %1315, label %1304

1304:                                             ; preds = %1299
  %1305 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1306 = load i8*, i8** %1300, align 8
  %1307 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %30, i64 0, i32 1, i32 1
  %1308 = load i8*, i8** %1307, align 8
  %1309 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %30, i64 0, i32 1, i32 2
  %1310 = load i64, i64* %1309, align 8
  %1311 = bitcast %"class.v8::TracingController"* %1305 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %1312 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %1311, align 8
  %1313 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1312, i64 5
  %1314 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1313, align 8
  call void %1314(%"class.v8::TracingController"* %1305, i8* %1306, i8* %1308, i64 %1310) #12
  br label %1315

1315:                                             ; preds = %1296, %1299, %1304
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1226) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %29) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %1209) #12
  %1316 = bitcast %"class.v8::internal::GCTracer::Scope"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %1316) #12
  %1317 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1318 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1317, i64 0, i32 80, i32 0, i32 0, i32 0
  %1319 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %1318, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %32, %"class.v8::internal::GCTracer"* %1319, i32 107, i32 0) #12
  %1320 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic435 monotonic, align 8
  %1321 = inttoptr i64 %1320 to i8*
  %1322 = icmp eq i64 %1320, 0
  br i1 %1322, label %1323, label %1331

1323:                                             ; preds = %1315
  %1324 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1325 = bitcast %"class.v8::TracingController"* %1324 to i8* (%"class.v8::TracingController"*, i8*)***
  %1326 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %1325, align 8
  %1327 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %1326, i64 2
  %1328 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %1327, align 8
  %1329 = call i8* %1328(%"class.v8::TracingController"* %1324, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %1330 = ptrtoint i8* %1329 to i64
  store atomic volatile i64 %1330, i64* @_ZZN2v88internal18ScavengerCollector14CollectGarbageEvE28trace_event_unique_atomic435 monotonic, align 8
  br label %1331

1331:                                             ; preds = %1315, %1323
  %1332 = phi i8* [ %1321, %1315 ], [ %1329, %1323 ]
  %1333 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1333) #12
  %1334 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %33, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1334, align 8
  %1335 = load atomic i8, i8* %1332 monotonic, align 1
  %1336 = and i8 %1335, 5
  %1337 = icmp eq i8 %1336, 0
  br i1 %1337, label %1371, label %1338

1338:                                             ; preds = %1331
  %1339 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 107) #12
  %1340 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1340) #12
  %1341 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %1340, i8 0, i64 16, i1 false) #12
  %1342 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1343 = bitcast %"class.v8::TracingController"* %1342 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %1344 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %1343, align 8
  %1345 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %1344, i64 3
  %1346 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %1345, align 8
  %1347 = call i64 %1346(%"class.v8::TracingController"* %1342, i8 signext 88, i8* %1332, i8* %1339, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %1341, i32 0) #12
  %1348 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 1, i32 0, i32 0, i32 0
  %1349 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %1348, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %1348, align 8
  %1350 = icmp eq %"class.v8::ConvertableToTraceFormat"* %1349, null
  br i1 %1350, label %1356, label %1351

1351:                                             ; preds = %1338
  %1352 = bitcast %"class.v8::ConvertableToTraceFormat"* %1349 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %1353 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %1352, align 8
  %1354 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1353, i64 1
  %1355 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1354, align 8
  call void %1355(%"class.v8::ConvertableToTraceFormat"* nonnull %1349) #12
  br label %1356

1356:                                             ; preds = %1351, %1338
  %1357 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %4, i64 0, i64 0, i32 0, i32 0, i32 0
  %1358 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %1357, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %1357, align 16
  %1359 = icmp eq %"class.v8::ConvertableToTraceFormat"* %1358, null
  br i1 %1359, label %1365, label %1360

1360:                                             ; preds = %1356
  %1361 = bitcast %"class.v8::ConvertableToTraceFormat"* %1358 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %1362 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %1361, align 8
  %1363 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1362, i64 1
  %1364 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %1363, align 8
  call void %1364(%"class.v8::ConvertableToTraceFormat"* nonnull %1358) #12
  br label %1365

1365:                                             ; preds = %1356, %1360
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1340) #12
  %1366 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 107) #12
  %1367 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %33, i64 0, i32 1
  %1368 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %1367, i64 0, i32 0
  store i8* %1332, i8** %1368, align 8
  %1369 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %33, i64 0, i32 1, i32 1
  store i8* %1366, i8** %1369, align 8
  %1370 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %33, i64 0, i32 1, i32 2
  store i64 %1347, i64* %1370, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %1367, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1334, align 8
  br label %1371

1371:                                             ; preds = %1331, %1365
  %1372 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1373 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1372, i64 0, i32 84, i32 0, i32 0, i32 0
  %1374 = load %"class.v8::internal::ArrayBufferSweeper"*, %"class.v8::internal::ArrayBufferSweeper"** %1373, align 8
  call void @_ZN2v88internal18ArrayBufferSweeper17RequestSweepYoungEv(%"class.v8::internal::ArrayBufferSweeper"* %1374) #12
  %1375 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %1334, align 8
  %1376 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %1375, null
  br i1 %1376, label %1393, label %1377

1377:                                             ; preds = %1371
  %1378 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %33, i64 0, i32 1, i32 0
  %1379 = load i8*, i8** %1378, align 8
  %1380 = load atomic i8, i8* %1379 monotonic, align 1
  %1381 = icmp eq i8 %1380, 0
  br i1 %1381, label %1393, label %1382

1382:                                             ; preds = %1377
  %1383 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %1384 = load i8*, i8** %1378, align 8
  %1385 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %33, i64 0, i32 1, i32 1
  %1386 = load i8*, i8** %1385, align 8
  %1387 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %33, i64 0, i32 1, i32 2
  %1388 = load i64, i64* %1387, align 8
  %1389 = bitcast %"class.v8::TracingController"* %1383 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %1390 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %1389, align 8
  %1391 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1390, i64 5
  %1392 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %1391, align 8
  call void %1392(%"class.v8::TracingController"* %1383, i8* %1384, i8* %1386, i64 %1388) #12
  br label %1393

1393:                                             ; preds = %1371, %1377, %1382
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1333) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %32) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %1316) #12
  %1394 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %169, align 8
  %1395 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1394, i64 0, i32 67
  %1396 = load i64, i64* %1395, align 8
  %1397 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1394, i64 0, i32 70
  %1398 = load i64, i64* %1397, align 8
  %1399 = add i64 %1398, %1396
  %1400 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1394, i64 0, i32 19
  store i64 %1399, i64* %1400, align 8
  %1401 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1394, i64 0, i32 18
  %1402 = load i64, i64* %1401, align 8
  %1403 = add i64 %1402, %1399
  store i64 %1403, i64* %1401, align 8
  call void @_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi128EED2Ev(%"class.v8::internal::Worklist.1183"* nonnull %10) #12
  call void @llvm.lifetime.end.p0i8(i64 704, i8* nonnull %149) #12
  %1404 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %9, i64 0, i32 1
  call void @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EED2Ev(%"class.v8::internal::Worklist.1181"* %1404) #12
  %1405 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %9, i64 0, i32 0
  call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EED2Ev(%"class.v8::internal::Worklist.1179"* nonnull %1405) #12
  call void @llvm.lifetime.end.p0i8(i64 1408, i8* nonnull %148) #12
  call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EED2Ev(%"class.v8::internal::Worklist.1179"* nonnull %8) #12
  call void @llvm.lifetime.end.p0i8(i64 704, i8* nonnull %75) #12
  call void @_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EED2Ev(%"class.v8::internal::Worklist.1177"* nonnull %7) #12
  call void @llvm.lifetime.end.p0i8(i64 704, i8* nonnull %52) #12
  %1406 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %480, align 8
  %1407 = icmp eq %"class.std::__1::unique_ptr.1174"* %1406, null
  br i1 %1407, label %1427, label %1408

1408:                                             ; preds = %1393
  %1409 = bitcast %"class.std::__1::unique_ptr.1174"* %1406 to i8*
  %1410 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %946, align 8
  %1411 = icmp eq %"class.std::__1::unique_ptr.1174"* %1410, %1406
  br i1 %1411, label %1425, label %1412

1412:                                             ; preds = %1408, %1420
  %1413 = phi %"class.std::__1::unique_ptr.1174"* [ %1414, %1420 ], [ %1410, %1408 ]
  %1414 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %1413, i64 -1
  %1415 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %1414, i64 0, i32 0, i32 0, i32 0
  %1416 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %1415, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %1415, align 8
  %1417 = icmp eq %"class.v8::internal::Scavenger"* %1416, null
  br i1 %1417, label %1420, label %1418

1418:                                             ; preds = %1412
  call void @_ZN2v88internal9ScavengerD2Ev(%"class.v8::internal::Scavenger"* nonnull %1416) #12
  %1419 = bitcast %"class.v8::internal::Scavenger"* %1416 to i8*
  call void @_ZdlPv(i8* %1419) #17
  br label %1420

1420:                                             ; preds = %1418, %1412
  %1421 = icmp eq %"class.std::__1::unique_ptr.1174"* %1414, %1406
  br i1 %1421, label %1422, label %1412

1422:                                             ; preds = %1420
  %1423 = bitcast %"class.std::__1::vector.1172"* %6 to i8**
  %1424 = load i8*, i8** %1423, align 8
  br label %1425

1425:                                             ; preds = %1422, %1408
  %1426 = phi i8* [ %1424, %1422 ], [ %1409, %1408 ]
  store %"class.std::__1::unique_ptr.1174"* %1406, %"class.std::__1::unique_ptr.1174"** %946, align 8
  call void @_ZdlPv(i8* %1426) #17
  br label %1427

1427:                                             ; preds = %1393, %1425
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  %1428 = bitcast %"class.std::__1::basic_string"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1428) #12
  %1429 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1430 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1429, i64 0, i32 1, i32 0
  store i8 0, i8* %1430, align 1
  store i8 0, i8* %1428, align 8
  %1431 = load void (i32, %"class.std::__1::basic_string"*)*, void (i32, %"class.std::__1::basic_string"*)** %41, align 8
  %1432 = icmp eq void (i32, %"class.std::__1::basic_string"*)* %1431, null
  br i1 %1432, label %1439, label %1433

1433:                                             ; preds = %1427
  call void %1431(i32 4, %"class.std::__1::basic_string"* nonnull dereferenceable(24) %3) #12
  %1434 = load i8, i8* %1430, align 1
  %1435 = icmp slt i8 %1434, 0
  br i1 %1435, label %1436, label %1439

1436:                                             ; preds = %1433
  %1437 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1438 = load i8*, i8** %1437, align 8
  call void @_ZdlPv(i8* %1438) #17
  br label %1439

1439:                                             ; preds = %1427, %1433, %1436
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1428) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEv(%"class.v8::internal::ScavengerCollector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca [3 x i32], align 4
  %3 = load i8, i8* @_ZN2v88internal22FLAG_parallel_scavengeE, align 1, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %46, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %7, i64 0, i32 24
  %9 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %9, i64 0, i32 4, i32 2
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = sdiv i32 %12, 1048576
  %14 = add nsw i32 %13, 1
  %15 = load atomic i8, i8* bitcast (i64* @_ZGVZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEvE9num_cores to i8*) acquire, align 8
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %17, label %28, !prof !63

17:                                               ; preds = %5
  %18 = tail call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEvE9num_cores) #12
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %28, label %20

20:                                               ; preds = %17
  %21 = tail call %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() #12
  %22 = bitcast %"class.v8::Platform"* %21 to i32 (%"class.v8::Platform"*)***
  %23 = load i32 (%"class.v8::Platform"*)**, i32 (%"class.v8::Platform"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.v8::Platform"*)*, i32 (%"class.v8::Platform"*)** %23, i64 5
  %25 = load i32 (%"class.v8::Platform"*)*, i32 (%"class.v8::Platform"*)** %24, align 8
  %26 = tail call i32 %25(%"class.v8::Platform"* %21) #12
  %27 = add nsw i32 %26, 1
  store i32 %27, i32* @_ZZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEvE9num_cores, align 4
  tail call void @__cxa_guard_release(i64* nonnull @_ZGVZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEvE9num_cores) #12
  br label %28

28:                                               ; preds = %17, %20, %5
  %29 = bitcast [3 x i32]* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 12, i8* nonnull %29) #12
  %30 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 0
  store i32 %14, i32* %30, align 4
  %31 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 1
  store i32 8, i32* %31, align 4
  %32 = getelementptr inbounds [3 x i32], [3 x i32]* %2, i64 0, i64 2
  %33 = load i32, i32* @_ZZN2v88internal18ScavengerCollector21NumberOfScavengeTasksEvE9num_cores, align 4
  store i32 %33, i32* %32, align 4
  %34 = icmp sgt i32 %12, 8388607
  %35 = load i32, i32* %30, align 4
  %36 = select i1 %34, i32 8, i32 %35
  %37 = icmp slt i32 %33, %36
  %38 = select i1 %37, i32 %33, i32 %36
  %39 = icmp sgt i32 %38, 1
  %40 = select i1 %39, i32 %38, i32 1
  call void @llvm.lifetime.end.p0i8(i64 12, i8* nonnull %29) #12
  %41 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %42 = shl nsw i32 %40, 18
  %43 = zext i32 %42 to i64
  %44 = call zeroext i1 @_ZN2v88internal4Heap37CanPromoteYoungAndExpandOldGenerationEm(%"class.v8::internal::Heap"* %41, i64 %43) #12
  %45 = select i1 %44, i32 %40, i32 1
  br label %46

46:                                               ; preds = %1, %28
  %47 = phi i32 [ %45, %28 ], [ 1, %1 ]
  ret i32 %47
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9Scavenger13PromotionListC2Ei(%"class.v8::internal::Scavenger::PromotionList"*, i32) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 0, i32 1, i32 0
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 0, i32 1, i32 1
  %5 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %4 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %5, i8 0, i64 16, i1 false) #12
  %6 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 0, i32 2
  store i32 %1, i32* %6, align 8
  %7 = icmp sgt i32 %1, 0
  br i1 %7, label %8, label %74

8:                                                ; preds = %2, %67
  %9 = phi i64 [ %70, %67 ], [ 0, %2 ]
  %10 = tail call i8* @_Znwm(i64 4112) #17
  %11 = getelementptr inbounds i8, i8* %10, i64 8
  %12 = bitcast i8* %11 to i64*
  store i64 0, i64* %12, align 8
  %13 = getelementptr inbounds i8, i8* %10, i64 16
  %14 = bitcast i8* %13 to %"struct.std::__1::pair.1282"*
  %15 = getelementptr inbounds i8, i8* %10, i64 4112
  %16 = bitcast i8* %15 to %"struct.std::__1::pair.1282"*
  br label %17

17:                                               ; preds = %17, %8
  %18 = phi %"struct.std::__1::pair.1282"* [ %14, %8 ], [ %35, %17 ]
  %19 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %19, align 8
  %20 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 0, i32 1
  store i32 0, i32* %20, align 8
  %21 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %21, align 8
  %22 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 1, i32 1
  store i32 0, i32* %22, align 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %23, align 8
  %24 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 2, i32 1
  store i32 0, i32* %24, align 8
  %25 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %25, align 8
  %26 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 3, i32 1
  store i32 0, i32* %26, align 8
  %27 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 4, i32 1
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 5, i32 1
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 6, i32 1
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 7, i32 1
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %18, i64 8
  %36 = icmp eq %"struct.std::__1::pair.1282"* %35, %16
  br i1 %36, label %37, label %17

37:                                               ; preds = %17
  %38 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 0, i32 0, i64 %9, i32 0
  %39 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %38 to i8**
  store i8* %10, i8** %39, align 8
  %40 = tail call i8* @_Znwm(i64 4112) #17
  %41 = getelementptr inbounds i8, i8* %40, i64 8
  %42 = bitcast i8* %41 to i64*
  store i64 0, i64* %42, align 8
  %43 = getelementptr inbounds i8, i8* %40, i64 16
  %44 = bitcast i8* %43 to %"struct.std::__1::pair.1282"*
  %45 = getelementptr inbounds i8, i8* %40, i64 4112
  %46 = bitcast i8* %45 to %"struct.std::__1::pair.1282"*
  br label %47

47:                                               ; preds = %47, %37
  %48 = phi %"struct.std::__1::pair.1282"* [ %44, %37 ], [ %65, %47 ]
  %49 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 0, i32 1
  store i32 0, i32* %50, align 8
  %51 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %51, align 8
  %52 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 1, i32 1
  store i32 0, i32* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %53, align 8
  %54 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 2, i32 1
  store i32 0, i32* %54, align 8
  %55 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 3, i32 1
  store i32 0, i32* %56, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %57, align 8
  %58 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 4, i32 1
  store i32 0, i32* %58, align 8
  %59 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %59, align 8
  %60 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 5, i32 1
  store i32 0, i32* %60, align 8
  %61 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 6, i32 1
  store i32 0, i32* %62, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %63, align 8
  %64 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 7, i32 1
  store i32 0, i32* %64, align 8
  %65 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %48, i64 8
  %66 = icmp eq %"struct.std::__1::pair.1282"* %65, %46
  br i1 %66, label %67, label %47

67:                                               ; preds = %47
  %68 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 0, i32 0, i64 %9, i32 1
  %69 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %68 to i8**
  store i8* %40, i8** %69, align 8
  %70 = add nuw nsw i64 %9, 1
  %71 = load i32, i32* %6, align 8
  %72 = sext i32 %71 to i64
  %73 = icmp slt i64 %70, %72
  br i1 %73, label %8, label %74

74:                                               ; preds = %67, %2
  %75 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 1, i32 1, i32 0
  tail call void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"* %75) #12
  %76 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 1, i32 1, i32 1
  %77 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %76 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %77, i8 0, i64 16, i1 false) #12
  %78 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 1, i32 2
  store i32 %1, i32* %78, align 8
  br i1 %7, label %79, label %99

79:                                               ; preds = %74, %79
  %80 = phi i64 [ %95, %79 ], [ 0, %74 ]
  %81 = tail call i8* @_Znwm(i64 112) #17
  %82 = getelementptr inbounds i8, i8* %81, i64 8
  %83 = getelementptr inbounds i8, i8* %81, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %82, i8 0, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 16, i1 false) #12
  %84 = getelementptr inbounds i8, i8* %81, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %84, i8 0, i64 16, i1 false) #12
  %85 = getelementptr inbounds i8, i8* %81, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 16, i1 false) #12
  %86 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 1, i32 0, i64 %80, i32 0
  %87 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %86 to i8**
  store i8* %81, i8** %87, align 8
  %88 = tail call i8* @_Znwm(i64 112) #17
  %89 = getelementptr inbounds i8, i8* %88, i64 8
  %90 = getelementptr inbounds i8, i8* %88, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #12
  %91 = getelementptr inbounds i8, i8* %88, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #12
  %92 = getelementptr inbounds i8, i8* %88, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %92, i8 0, i64 16, i1 false) #12
  %93 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %0, i64 0, i32 1, i32 0, i64 %80, i32 1
  %94 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %93 to i8**
  store i8* %88, i8** %94, align 8
  %95 = add nuw nsw i64 %80, 1
  %96 = load i32, i32* %78, align 8
  %97 = sext i32 %96 to i64
  %98 = icmp slt i64 %95, %97
  br i1 %98, label %79, label %99

99:                                               ; preds = %79, %74
  ret void
}

declare zeroext i1 @_ZN2v88internal7Sweeper22AreSweeperTasksRunningEv(%"class.v8::internal::Sweeper"*) local_unnamed_addr #1

declare void @_ZN2v88internal20MarkCompactCollector23EnsureSweepingCompletedEv(%"class.v8::internal::MarkCompactCollector"*) local_unnamed_addr #1

declare void @_ZN2v88internal7Sweeper20PauseOrCompleteScopeC1EPS1_(%"class.v8::internal::Sweeper::PauseOrCompleteScope"*, %"class.v8::internal::Sweeper"*) unnamed_addr #1

declare void @_ZN2v88internal7Sweeper24FilterSweepingPagesScopeC1EPS1_RKNS1_20PauseOrCompleteScopeE(%"class.v8::internal::Sweeper::FilterSweepingPagesScope"*, %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper::PauseOrCompleteScope"* dereferenceable(8)) unnamed_addr #1

declare zeroext i1 @_ZN2v88internal7Isolate19LogObjectRelocationEv(%"class.v8::internal::Isolate"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #4

declare void @_ZN2v88internal13GlobalHandles29IdentifyWeakUnmodifiedObjectsEPFbNS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"*, i1 (i64)*) local_unnamed_addr #1

declare zeroext i1 @_ZN2v88internal8JSObject21IsUnmodifiedApiObjectENS0_14FullObjectSlotE(i64) #1

declare void @_ZN2v88internal4Heap12IterateRootsEPNS0_11RootVisitorENS_4base7EnumSetINS0_8SkipRootEiEE(%"class.v8::internal::Heap"*, %"class.v8::internal::RootVisitor"*, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare void @_ZN2v88internal13GlobalHandles35IterateYoungStrongAndDependentRootsEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger5FlushEv(%"class.v8::internal::Scavenger"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %3 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %5 = load i32, i32* %4, align 8
  tail call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1179"* %3, i32 %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %7 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %7, i64 0, i32 0
  tail call void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1179"* %10, i32 %9) #12
  %11 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %7, i64 0, i32 1
  tail call void @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1181"* %11, i32 %9) #12
  ret void
}

declare %"class.v8::Platform"* @_ZN2v88internal2V818GetCurrentPlatformEv() local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEi(%"class.v8::internal::ScavengerCollector"* nocapture readonly, %"class.v8::internal::RootScavengeVisitor"*, %"class.std::__1::vector.1172"* nocapture readonly, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca [2 x %"class.std::__1::unique_ptr.1300"], align 16
  %6 = alloca <2 x i8*>, align 16
  %7 = alloca [2 x i8], align 1
  %8 = alloca [2 x i64], align 16
  %9 = alloca %"class.v8::internal::GCTracer::Scope", align 8
  %10 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %11 = alloca %"class.v8::internal::tracing::ScopedTracer", align 8
  %12 = bitcast %"class.v8::internal::GCTracer::Scope"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %12) #12
  %13 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  %14 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %13, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %14, i64 0, i32 80, i32 0, i32 0, i32 0
  %16 = load %"class.v8::internal::GCTracer"*, %"class.v8::internal::GCTracer"** %15, align 8
  call void @_ZN2v88internal8GCTracer5ScopeC1EPS1_NS2_7ScopeIdENS0_10ThreadKindE(%"class.v8::internal::GCTracer::Scope"* nonnull %9, %"class.v8::internal::GCTracer"* %16, i32 103, i32 0) #12
  %17 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEiE28trace_event_unique_atomic450 monotonic, align 8
  %18 = inttoptr i64 %17 to i8*
  %19 = icmp eq i64 %17, 0
  br i1 %19, label %20, label %28

20:                                               ; preds = %4
  %21 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %22 = bitcast %"class.v8::TracingController"* %21 to i8* (%"class.v8::TracingController"*, i8*)***
  %23 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %22, align 8
  %24 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %23, i64 2
  %25 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %24, align 8
  %26 = call i8* %25(%"class.v8::TracingController"* %21, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #12
  %27 = ptrtoint i8* %26 to i64
  store atomic volatile i64 %27, i64* @_ZZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEiE28trace_event_unique_atomic450 monotonic, align 8
  br label %28

28:                                               ; preds = %4, %20
  %29 = phi i8* [ %18, %4 ], [ %26, %20 ]
  %30 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #12
  %31 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %32 = load atomic i8, i8* %29 monotonic, align 1
  %33 = and i8 %32, 5
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %68, label %35

35:                                               ; preds = %28
  %36 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 103) #12
  %37 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %37) #12
  %38 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %37, i8 0, i64 16, i1 false) #12
  %39 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %40 = bitcast %"class.v8::TracingController"* %39 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %41 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %40, align 8
  %42 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %41, i64 3
  %43 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %42, align 8
  %44 = call i64 %43(%"class.v8::TracingController"* %39, i8 signext 88, i8* %29, i8* %36, i8* null, i64 0, i64 0, i32 0, i8** null, i8* null, i64* null, %"class.std::__1::unique_ptr.1300"* nonnull %38, i32 0) #12
  %45 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %46 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %45, align 8
  %47 = icmp eq %"class.v8::ConvertableToTraceFormat"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %35
  %49 = bitcast %"class.v8::ConvertableToTraceFormat"* %46 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %50 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %50, i64 1
  %52 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %51, align 8
  call void %52(%"class.v8::ConvertableToTraceFormat"* nonnull %46) #12
  br label %53

53:                                               ; preds = %48, %35
  %54 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %54, align 16
  %56 = icmp eq %"class.v8::ConvertableToTraceFormat"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = bitcast %"class.v8::ConvertableToTraceFormat"* %55 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %59 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %58, align 8
  %60 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %59, i64 1
  %61 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %60, align 8
  call void %61(%"class.v8::ConvertableToTraceFormat"* nonnull %55) #12
  br label %62

62:                                               ; preds = %53, %57
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %37) #12
  %63 = call i8* @_ZN2v88internal8GCTracer5Scope4NameENS2_7ScopeIdE(i32 103) #12
  %64 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, i64 0, i32 0
  store i8* %29, i8** %65, align 8
  %66 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  store i8* %63, i8** %66, align 8
  %67 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  store i64 %44, i64* %67, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %64, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  br label %68

68:                                               ; preds = %28, %62
  %69 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %2, i64 0, i32 0, i32 0
  %70 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %69, align 8
  %71 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %2, i64 0, i32 0, i32 1
  %72 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %71, align 8
  %73 = icmp eq %"class.std::__1::unique_ptr.1174"* %70, %72
  br i1 %73, label %105, label %74

74:                                               ; preds = %68
  %75 = ptrtoint %"class.std::__1::unique_ptr.1174"* %70 to i64
  %76 = getelementptr %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %72, i64 -1, i32 0, i32 0, i32 0
  %77 = ptrtoint %"class.v8::internal::Scavenger"** %76 to i64
  %78 = sub i64 %77, %75
  %79 = lshr i64 %78, 3
  %80 = add nuw nsw i64 %79, 1
  %81 = and i64 %80, 3
  %82 = icmp ult i64 %78, 24
  br i1 %82, label %85, label %83

83:                                               ; preds = %74
  %84 = sub nsw i64 %80, %81
  br label %127

85:                                               ; preds = %127, %74
  %86 = phi i64 [ undef, %74 ], [ %162, %127 ]
  %87 = phi i64 [ 0, %74 ], [ %162, %127 ]
  %88 = phi %"class.std::__1::unique_ptr.1174"* [ %70, %74 ], [ %163, %127 ]
  %89 = icmp eq i64 %81, 0
  br i1 %89, label %105, label %90

90:                                               ; preds = %85, %90
  %91 = phi i64 [ %101, %90 ], [ %87, %85 ]
  %92 = phi %"class.std::__1::unique_ptr.1174"* [ %102, %90 ], [ %88, %85 ]
  %93 = phi i64 [ %103, %90 ], [ %81, %85 ]
  %94 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %92, i64 0, i32 0, i32 0, i32 0
  %95 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %94, align 8
  %96 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %95, i64 0, i32 7
  %97 = load i64, i64* %96, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %95, i64 0, i32 8
  %99 = load i64, i64* %98, align 8
  %100 = add i64 %97, %91
  %101 = add i64 %100, %99
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %92, i64 1
  %103 = add i64 %93, -1
  %104 = icmp eq i64 %103, 0
  br i1 %104, label %105, label %90, !llvm.loop !64

105:                                              ; preds = %85, %90, %68
  %106 = phi i64 [ 0, %68 ], [ %86, %85 ], [ %101, %90 ]
  %107 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %13, align 8
  %108 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %1, i64 0, i32 0
  call void @_ZN2v88internal4Heap17IterateStackRootsEPNS0_11RootVisitorE(%"class.v8::internal::Heap"* %107, %"class.v8::internal::RootVisitor"* %108) #12
  %109 = sext i32 %3 to i64
  %110 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %69, align 8
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %110, i64 %109, i32 0, i32 0, i32 0
  %112 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %111, align 8
  call void @_ZN2v88internal9Scavenger7ProcessEPNS_11JobDelegateE(%"class.v8::internal::Scavenger"* %112, %"class.v8::JobDelegate"* null)
  %113 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %69, align 8
  %114 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %71, align 8
  %115 = icmp eq %"class.std::__1::unique_ptr.1174"* %113, %114
  br i1 %115, label %186, label %116

116:                                              ; preds = %105
  %117 = ptrtoint %"class.std::__1::unique_ptr.1174"* %113 to i64
  %118 = getelementptr %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %114, i64 -1, i32 0, i32 0, i32 0
  %119 = ptrtoint %"class.v8::internal::Scavenger"** %118 to i64
  %120 = sub i64 %119, %117
  %121 = lshr i64 %120, 3
  %122 = add nuw nsw i64 %121, 1
  %123 = and i64 %122, 3
  %124 = icmp ult i64 %120, 24
  br i1 %124, label %166, label %125

125:                                              ; preds = %116
  %126 = sub nsw i64 %122, %123
  br label %191

127:                                              ; preds = %127, %83
  %128 = phi i64 [ 0, %83 ], [ %162, %127 ]
  %129 = phi %"class.std::__1::unique_ptr.1174"* [ %70, %83 ], [ %163, %127 ]
  %130 = phi i64 [ %84, %83 ], [ %164, %127 ]
  %131 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %129, i64 0, i32 0, i32 0, i32 0
  %132 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %132, i64 0, i32 7
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %132, i64 0, i32 8
  %136 = load i64, i64* %135, align 8
  %137 = add i64 %134, %128
  %138 = add i64 %137, %136
  %139 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %129, i64 1, i32 0, i32 0, i32 0
  %140 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %139, align 8
  %141 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %140, i64 0, i32 7
  %142 = load i64, i64* %141, align 8
  %143 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %140, i64 0, i32 8
  %144 = load i64, i64* %143, align 8
  %145 = add i64 %142, %138
  %146 = add i64 %145, %144
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %129, i64 2, i32 0, i32 0, i32 0
  %148 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %147, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %148, i64 0, i32 7
  %150 = load i64, i64* %149, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %148, i64 0, i32 8
  %152 = load i64, i64* %151, align 8
  %153 = add i64 %150, %146
  %154 = add i64 %153, %152
  %155 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %129, i64 3, i32 0, i32 0, i32 0
  %156 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %156, i64 0, i32 7
  %158 = load i64, i64* %157, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %156, i64 0, i32 8
  %160 = load i64, i64* %159, align 8
  %161 = add i64 %158, %154
  %162 = add i64 %161, %160
  %163 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %129, i64 4
  %164 = add i64 %130, -4
  %165 = icmp eq i64 %164, 0
  br i1 %165, label %85, label %127

166:                                              ; preds = %191, %116
  %167 = phi i64 [ undef, %116 ], [ %226, %191 ]
  %168 = phi %"class.std::__1::unique_ptr.1174"* [ %113, %116 ], [ %227, %191 ]
  %169 = phi i64 [ 0, %116 ], [ %226, %191 ]
  %170 = icmp eq i64 %123, 0
  br i1 %170, label %186, label %171

171:                                              ; preds = %166, %171
  %172 = phi %"class.std::__1::unique_ptr.1174"* [ %183, %171 ], [ %168, %166 ]
  %173 = phi i64 [ %182, %171 ], [ %169, %166 ]
  %174 = phi i64 [ %184, %171 ], [ %123, %166 ]
  %175 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %172, i64 0, i32 0, i32 0, i32 0
  %176 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %175, align 8
  %177 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %176, i64 0, i32 7
  %178 = load i64, i64* %177, align 8
  %179 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %176, i64 0, i32 8
  %180 = load i64, i64* %179, align 8
  %181 = add i64 %178, %173
  %182 = add i64 %181, %180
  %183 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %172, i64 1
  %184 = add i64 %174, -1
  %185 = icmp eq i64 %184, 0
  br i1 %185, label %186, label %171, !llvm.loop !65

186:                                              ; preds = %166, %171, %105
  %187 = phi i64 [ 0, %105 ], [ %167, %166 ], [ %182, %171 ]
  %188 = load atomic i64, i64* @_ZZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEiE28trace_event_unique_atomic466 monotonic, align 8
  %189 = inttoptr i64 %188 to i8*
  %190 = icmp eq i64 %188, 0
  br i1 %190, label %230, label %238

191:                                              ; preds = %191, %125
  %192 = phi %"class.std::__1::unique_ptr.1174"* [ %113, %125 ], [ %227, %191 ]
  %193 = phi i64 [ 0, %125 ], [ %226, %191 ]
  %194 = phi i64 [ %126, %125 ], [ %228, %191 ]
  %195 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %192, i64 0, i32 0, i32 0, i32 0
  %196 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %195, align 8
  %197 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %196, i64 0, i32 7
  %198 = load i64, i64* %197, align 8
  %199 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %196, i64 0, i32 8
  %200 = load i64, i64* %199, align 8
  %201 = add i64 %198, %193
  %202 = add i64 %201, %200
  %203 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %192, i64 1, i32 0, i32 0, i32 0
  %204 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %203, align 8
  %205 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %204, i64 0, i32 7
  %206 = load i64, i64* %205, align 8
  %207 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %204, i64 0, i32 8
  %208 = load i64, i64* %207, align 8
  %209 = add i64 %206, %202
  %210 = add i64 %209, %208
  %211 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %192, i64 2, i32 0, i32 0, i32 0
  %212 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %211, align 8
  %213 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %212, i64 0, i32 7
  %214 = load i64, i64* %213, align 8
  %215 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %212, i64 0, i32 8
  %216 = load i64, i64* %215, align 8
  %217 = add i64 %214, %210
  %218 = add i64 %217, %216
  %219 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %192, i64 3, i32 0, i32 0, i32 0
  %220 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %219, align 8
  %221 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %220, i64 0, i32 7
  %222 = load i64, i64* %221, align 8
  %223 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %220, i64 0, i32 8
  %224 = load i64, i64* %223, align 8
  %225 = add i64 %222, %218
  %226 = add i64 %225, %224
  %227 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %192, i64 4
  %228 = add i64 %194, -4
  %229 = icmp eq i64 %228, 0
  br i1 %229, label %166, label %191

230:                                              ; preds = %186
  %231 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %232 = bitcast %"class.v8::TracingController"* %231 to i8* (%"class.v8::TracingController"*, i8*)***
  %233 = load i8* (%"class.v8::TracingController"*, i8*)**, i8* (%"class.v8::TracingController"*, i8*)*** %232, align 8
  %234 = getelementptr inbounds i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %233, i64 2
  %235 = load i8* (%"class.v8::TracingController"*, i8*)*, i8* (%"class.v8::TracingController"*, i8*)** %234, align 8
  %236 = call i8* %235(%"class.v8::TracingController"* %231, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.3, i64 0, i64 0)) #12
  %237 = ptrtoint i8* %236 to i64
  store atomic volatile i64 %237, i64* @_ZZN2v88internal18ScavengerCollector23IterateStackAndScavengeEPNS0_19RootScavengeVisitorEPNSt3__16vectorINS4_10unique_ptrINS0_9ScavengerENS4_14default_deleteIS7_EEEENS4_9allocatorISA_EEEEiE28trace_event_unique_atomic466 monotonic, align 8
  br label %238

238:                                              ; preds = %186, %230
  %239 = phi i8* [ %189, %186 ], [ %236, %230 ]
  %240 = bitcast %"class.v8::internal::tracing::ScopedTracer"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %240) #12
  %241 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %11, i64 0, i32 0
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* null, %"struct.v8::internal::tracing::ScopedTracer::Data"** %241, align 8
  %242 = load atomic i8, i8* %239 monotonic, align 1
  %243 = and i8 %242, 5
  %244 = icmp eq i8 %243, 0
  br i1 %244, label %283, label %245

245:                                              ; preds = %238
  %246 = bitcast <2 x i8*>* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %246) #12
  %247 = getelementptr inbounds <2 x i8*>, <2 x i8*>* %6, i64 0, i64 0
  store <2 x i8*> <i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.5, i64 0, i64 0), i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.6, i64 0, i64 0)>, <2 x i8*>* %6, align 16
  %248 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 0
  call void @llvm.lifetime.start.p0i8(i64 2, i8* nonnull %248) #12
  %249 = bitcast [2 x i64]* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %249) #12
  %250 = getelementptr inbounds [2 x i64], [2 x i64]* %8, i64 0, i64 0
  store i8 2, i8* %248, align 1
  store i64 %106, i64* %250, align 16
  %251 = getelementptr inbounds [2 x i8], [2 x i8]* %7, i64 0, i64 1
  %252 = getelementptr inbounds [2 x i64], [2 x i64]* %8, i64 0, i64 1
  store i8 2, i8* %251, align 1
  store i64 %187, i64* %252, align 8
  %253 = bitcast [2 x %"class.std::__1::unique_ptr.1300"]* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %253) #12
  %254 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %5, i64 0, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 16 %253, i8 0, i64 16, i1 false) #12
  %255 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %256 = bitcast %"class.v8::TracingController"* %255 to i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)***
  %257 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)**, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*** %256, align 8
  %258 = getelementptr inbounds i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %257, i64 3
  %259 = load i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)*, i64 (%"class.v8::TracingController"*, i8, i8*, i8*, i8*, i64, i64, i32, i8**, i8*, i64*, %"class.std::__1::unique_ptr.1300"*, i32)** %258, align 8
  %260 = call i64 %259(%"class.v8::TracingController"* %255, i8 signext 88, i8* %239, i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8* null, i64 0, i64 0, i32 2, i8** nonnull %247, i8* nonnull %248, i64* nonnull %250, %"class.std::__1::unique_ptr.1300"* nonnull %254, i32 0) #12
  %261 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %5, i64 0, i64 1, i32 0, i32 0, i32 0
  %262 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %261, align 8
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %261, align 8
  %263 = icmp eq %"class.v8::ConvertableToTraceFormat"* %262, null
  br i1 %263, label %269, label %264

264:                                              ; preds = %245
  %265 = bitcast %"class.v8::ConvertableToTraceFormat"* %262 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %266 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %265, align 8
  %267 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %266, i64 1
  %268 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %267, align 8
  call void %268(%"class.v8::ConvertableToTraceFormat"* nonnull %262) #12
  br label %269

269:                                              ; preds = %264, %245
  %270 = getelementptr inbounds [2 x %"class.std::__1::unique_ptr.1300"], [2 x %"class.std::__1::unique_ptr.1300"]* %5, i64 0, i64 0, i32 0, i32 0, i32 0
  %271 = load %"class.v8::ConvertableToTraceFormat"*, %"class.v8::ConvertableToTraceFormat"** %270, align 16
  store %"class.v8::ConvertableToTraceFormat"* null, %"class.v8::ConvertableToTraceFormat"** %270, align 16
  %272 = icmp eq %"class.v8::ConvertableToTraceFormat"* %271, null
  br i1 %272, label %278, label %273

273:                                              ; preds = %269
  %274 = bitcast %"class.v8::ConvertableToTraceFormat"* %271 to void (%"class.v8::ConvertableToTraceFormat"*)***
  %275 = load void (%"class.v8::ConvertableToTraceFormat"*)**, void (%"class.v8::ConvertableToTraceFormat"*)*** %274, align 8
  %276 = getelementptr inbounds void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %275, i64 1
  %277 = load void (%"class.v8::ConvertableToTraceFormat"*)*, void (%"class.v8::ConvertableToTraceFormat"*)** %276, align 8
  call void %277(%"class.v8::ConvertableToTraceFormat"* nonnull %271) #12
  br label %278

278:                                              ; preds = %269, %273
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %253) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %249) #12
  call void @llvm.lifetime.end.p0i8(i64 2, i8* nonnull %248) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %246) #12
  %279 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %11, i64 0, i32 1
  %280 = getelementptr inbounds %"struct.v8::internal::tracing::ScopedTracer::Data", %"struct.v8::internal::tracing::ScopedTracer::Data"* %279, i64 0, i32 0
  store i8* %239, i8** %280, align 8
  %281 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %11, i64 0, i32 1, i32 1
  store i8* getelementptr inbounds ([28 x i8], [28 x i8]* @.str.4, i64 0, i64 0), i8** %281, align 8
  %282 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %11, i64 0, i32 1, i32 2
  store i64 %260, i64* %282, align 8
  store %"struct.v8::internal::tracing::ScopedTracer::Data"* %279, %"struct.v8::internal::tracing::ScopedTracer::Data"** %241, align 8
  br label %283

283:                                              ; preds = %238, %278
  %284 = phi %"struct.v8::internal::tracing::ScopedTracer::Data"* [ null, %238 ], [ %279, %278 ]
  %285 = load i8, i8* @_ZN2v88internal21FLAG_trace_gc_verboseE, align 1, !range !2
  %286 = icmp ne i8 %285, 0
  %287 = load i8, i8* @_ZN2v88internal30FLAG_trace_gc_ignore_scavengerE, align 1
  %288 = icmp eq i8 %287, 0
  %289 = and i1 %286, %288
  br i1 %289, label %290, label %301

290:                                              ; preds = %283
  %291 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 0
  %292 = load %"class.v8::internal::Isolate"*, %"class.v8::internal::Isolate"** %291, align 8
  %293 = lshr i64 %106, 10
  %294 = lshr i64 %187, 10
  %295 = sub i64 %187, %106
  %296 = uitofp i64 %295 to double
  %297 = fmul double %296, 1.000000e+02
  %298 = uitofp i64 %187 to double
  %299 = fdiv double %297, %298
  call void (%"class.v8::internal::Isolate"*, i8*, ...) @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"* %292, i8* getelementptr inbounds ([85 x i8], [85 x i8]* @.str.7, i64 0, i64 0), i64 %293, i64 %294, double %299) #12
  %300 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %241, align 8
  br label %301

301:                                              ; preds = %283, %290
  %302 = phi %"struct.v8::internal::tracing::ScopedTracer::Data"* [ %284, %283 ], [ %300, %290 ]
  %303 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %302, null
  br i1 %303, label %320, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %11, i64 0, i32 1, i32 0
  %306 = load i8*, i8** %305, align 8
  %307 = load atomic i8, i8* %306 monotonic, align 1
  %308 = icmp eq i8 %307, 0
  br i1 %308, label %320, label %309

309:                                              ; preds = %304
  %310 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %311 = load i8*, i8** %305, align 8
  %312 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %11, i64 0, i32 1, i32 1
  %313 = load i8*, i8** %312, align 8
  %314 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %11, i64 0, i32 1, i32 2
  %315 = load i64, i64* %314, align 8
  %316 = bitcast %"class.v8::TracingController"* %310 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %317 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %316, align 8
  %318 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %317, i64 5
  %319 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %318, align 8
  call void %319(%"class.v8::TracingController"* %310, i8* %311, i8* %313, i64 %315) #12
  br label %320

320:                                              ; preds = %301, %304, %309
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %240) #12
  %321 = load %"struct.v8::internal::tracing::ScopedTracer::Data"*, %"struct.v8::internal::tracing::ScopedTracer::Data"** %31, align 8
  %322 = icmp eq %"struct.v8::internal::tracing::ScopedTracer::Data"* %321, null
  br i1 %322, label %339, label %323

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 0
  %325 = load i8*, i8** %324, align 8
  %326 = load atomic i8, i8* %325 monotonic, align 1
  %327 = icmp eq i8 %326, 0
  br i1 %327, label %339, label %328

328:                                              ; preds = %323
  %329 = call %"class.v8::TracingController"* @_ZN2v88internal7tracing16TraceEventHelper20GetTracingControllerEv() #12
  %330 = load i8*, i8** %324, align 8
  %331 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 1
  %332 = load i8*, i8** %331, align 8
  %333 = getelementptr inbounds %"class.v8::internal::tracing::ScopedTracer", %"class.v8::internal::tracing::ScopedTracer"* %10, i64 0, i32 1, i32 2
  %334 = load i64, i64* %333, align 8
  %335 = bitcast %"class.v8::TracingController"* %329 to void (%"class.v8::TracingController"*, i8*, i8*, i64)***
  %336 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)**, void (%"class.v8::TracingController"*, i8*, i8*, i64)*** %335, align 8
  %337 = getelementptr inbounds void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %336, i64 5
  %338 = load void (%"class.v8::TracingController"*, i8*, i8*, i64)*, void (%"class.v8::TracingController"*, i8*, i8*, i64)** %337, align 8
  call void %338(%"class.v8::TracingController"* %329, i8* %330, i8* %332, i64 %334) #12
  br label %339

339:                                              ; preds = %320, %323, %328
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #12
  call void @_ZN2v88internal8GCTracer5ScopeD1Ev(%"class.v8::internal::GCTracer::Scope"* nonnull %9) #12
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %12) #12
  ret void
}

declare void @_ZN2v88internal13GlobalHandles31MarkYoungWeakDeadObjectsPendingEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"*, i1 (%"class.v8::internal::Heap"*, i64)*) local_unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable
define internal zeroext i1 @_ZN2v88internal12_GLOBAL__N_127IsUnscavengedHeapObjectSlotEPNS0_4HeapENS0_14FullObjectSlotE(%"class.v8::internal::Heap"* nocapture readnone, i64) #5 {
  %3 = inttoptr i64 %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %20, label %7

7:                                                ; preds = %2
  %8 = and i64 %4, -262144
  %9 = inttoptr i64 %8 to %"class.v8::internal::BasicMemoryChunk"*
  %10 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %9, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 8
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %20, label %14

14:                                               ; preds = %7
  %15 = add i64 %4, -1
  %16 = inttoptr i64 %15 to i32*
  %17 = load atomic i32, i32* %16 monotonic, align 4
  %18 = and i32 %17, 3
  %19 = icmp ne i32 %18, 0
  br label %20

20:                                               ; preds = %2, %7, %14
  %21 = phi i1 [ false, %7 ], [ %19, %14 ], [ false, %2 ]
  ret i1 %21
}

declare void @_ZN2v88internal13GlobalHandles40IterateYoungWeakDeadObjectsForFinalizersEPNS0_11RootVisitorE(%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #1

declare void @_ZN2v88internal13GlobalHandles40IterateYoungWeakObjectsForPhantomHandlesEPNS0_11RootVisitorEPFbPNS0_4HeapENS0_14FullObjectSlotEE(%"class.v8::internal::GlobalHandles"*, %"class.v8::internal::RootVisitor"*, i1 (%"class.v8::internal::Heap"*, i64)*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger8FinalizeEv(%"class.v8::internal::Scavenger"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.std::__1::pair.1245"*
  %5 = alloca %"struct.std::__1::pair.1253", align 8
  %6 = alloca i32, align 4
  %7 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %8 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %9 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6
  tail call void @_ZN2v88internal4Heap38MergeAllocationSitePretenuringFeedbackERKNSt3__113unordered_mapINS0_14AllocationSiteEmNS0_6Object6HasherENS2_8equal_toIS4_EENS2_9allocatorINS2_4pairIKS4_mEEEEEE(%"class.v8::internal::Heap"* %8, %"class.std::__1::unordered_map.513"* dereferenceable(40) %9) #12
  %10 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %11 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %12 = load i64, i64* %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %10, i64 0, i32 70
  %14 = load i64, i64* %13, align 8
  %15 = add i64 %14, %12
  store i64 %15, i64* %13, align 8
  %16 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %18 = load i64, i64* %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %16, i64 0, i32 67
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %18
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %23 = bitcast %"struct.std::__1::__hash_node_base.1153"** %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %42, label %26

26:                                               ; preds = %1
  %27 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 0
  %28 = load %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::ScavengerCollector"** %27, align 8
  %29 = bitcast <2 x i64>* %3 to i8*
  %30 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %28, i64 0, i32 2, i32 0
  %31 = bitcast <2 x i64>* %3 to %"class.v8::internal::HeapObject"*
  br label %32

32:                                               ; preds = %32, %26
  %33 = phi i64 [ %24, %26 ], [ %40, %32 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %29) #12
  %34 = inttoptr i64 %33 to %"struct.std::__1::__hash_node"*
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %34, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = bitcast i64* %35 to <2 x i64>*
  %37 = load <2 x i64>, <2 x i64>* %36, align 8
  store <2 x i64> %37, <2 x i64>* %3, align 16
  %38 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRNS_4pairIS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %30, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %31, %"struct.std::__1::pair.1245"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %29) #12
  %39 = inttoptr i64 %33 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %32

42:                                               ; preds = %32, %1
  %43 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %44 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %43, align 8
  %45 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %44, i64 0, i32 25
  %46 = load %"class.v8::internal::OldSpace"*, %"class.v8::internal::OldSpace"** %45, align 8
  %47 = getelementptr inbounds %"class.v8::internal::OldSpace", %"class.v8::internal::OldSpace"* %46, i64 0, i32 0
  %48 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0
  call void @_ZN2v88internal10PagedSpace15MergeLocalSpaceEPNS0_10LocalSpaceE(%"class.v8::internal::PagedSpace"* %47, %"class.v8::internal::LocalSpace"* %48) #12
  %49 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %43, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %49, i64 0, i32 26
  %51 = load %"class.v8::internal::CodeSpace"*, %"class.v8::internal::CodeSpace"** %50, align 8
  %52 = getelementptr inbounds %"class.v8::internal::CodeSpace", %"class.v8::internal::CodeSpace"* %51, i64 0, i32 0
  %53 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 2, i32 0
  call void @_ZN2v88internal10PagedSpace15MergeLocalSpaceEPNS0_10LocalSpaceE(%"class.v8::internal::PagedSpace"* %52, %"class.v8::internal::LocalSpace"* %53) #12
  %54 = bitcast %"class.v8::internal::LinearAllocationArea"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %2, %"class.v8::internal::LocalAllocationBuffer"* %55) #12
  %56 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %57 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %56, align 8
  %58 = icmp eq %"class.v8::internal::NewSpace"* %57, null
  br i1 %58, label %60, label %59

59:                                               ; preds = %42
  call void @_ZN2v88internal8NewSpace18MaybeFreeUnusedLabENS0_20LinearAllocationAreaE(%"class.v8::internal::NewSpace"* nonnull %57, %"class.v8::internal::LinearAllocationArea"* nonnull byval(%"class.v8::internal::LinearAllocationArea") align 8 %2) #12
  br label %60

60:                                               ; preds = %42, %59
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %61 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 2, i32 0
  %62 = load %"class.v8::internal::Worklist.1177"*, %"class.v8::internal::Worklist.1177"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 2, i32 1
  %64 = load i32, i32* %63, align 8
  call void @_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1177"* %62, i32 %64) #12
  %65 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 5, i32 0
  %66 = load %"class.v8::internal::Worklist.1183"*, %"class.v8::internal::Worklist.1183"** %65, align 8
  %67 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 5, i32 1
  %68 = load i32, i32* %67, align 8
  call void @_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi128EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1183"* %66, i32 %68) #12
  %69 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %70 = bitcast %"struct.std::__1::__hash_node_base"** %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = icmp eq i64 %71, 0
  br i1 %72, label %84, label %73

73:                                               ; preds = %60
  %74 = bitcast %"struct.std::__1::pair.1253"* %5 to i8*
  %75 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1
  %77 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1, i32 0, i32 3
  %78 = bitcast %"class.std::__1::__compressed_pair.1273"* %77 to i32*
  %79 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 0
  %80 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %82 = bitcast i32* %6 to i8*
  %83 = bitcast %"class.std::__1::unordered_set.1254"* %76 to i8*
  br label %85

84:                                               ; preds = %115, %60
  ret void

85:                                               ; preds = %73, %115
  %86 = phi i64 [ %71, %73 ], [ %117, %115 ]
  %87 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %74) #12
  %88 = inttoptr i64 %86 to %"struct.std::__1::__hash_node.1343"*
  %89 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i64, i64* %89, align 8
  store i64 %90, i64* %75, align 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 32, i1 false)
  store i32 1065353216, i32* %78, align 8
  %91 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %87, i64 0, i32 0, i32 0
  %92 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_SC_EEEEENSO_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %91, %"class.v8::internal::EphemeronHashTable"* nonnull dereferenceable(8) %79, %"struct.std::__1::pair.1253"* nonnull dereferenceable(48) %5) #12
  %93 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %92, 0
  %94 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %80, align 8
  %95 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %94, null
  br i1 %95, label %102, label %96

96:                                               ; preds = %85, %96
  %97 = phi %"struct.std::__1::__hash_node_base.1259"* [ %99, %96 ], [ %94, %85 ]
  %98 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %97, i64 0, i32 0
  %99 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %98, align 8
  %100 = bitcast %"struct.std::__1::__hash_node_base.1259"* %97 to i8*
  call void @_ZdlPv(i8* %100) #17
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %99, null
  br i1 %101, label %102, label %96

102:                                              ; preds = %96, %85
  %103 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %81, align 8
  store %"struct.std::__1::__hash_node_base.1259"** null, %"struct.std::__1::__hash_node_base.1259"*** %81, align 8
  %104 = icmp eq %"struct.std::__1::__hash_node_base.1259"** %103, null
  br i1 %104, label %107, label %105

105:                                              ; preds = %102
  %106 = bitcast %"struct.std::__1::__hash_node_base.1259"** %103 to i8*
  call void @_ZdlPv(i8* %106) #17
  br label %107

107:                                              ; preds = %102, %105
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %74) #12
  %108 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %88, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %109 = bitcast %"struct.std::__1::__hash_node_base.1259"** %108 to i64*
  %110 = load i64, i64* %109, align 8
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %115, label %112

112:                                              ; preds = %107
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %93, i64 3
  %114 = bitcast %"struct.std::__1::__hash_node_base"* %113 to %"class.std::__1::__hash_table.1255"*
  br label %119

115:                                              ; preds = %119, %107
  %116 = inttoptr i64 %86 to i64*
  %117 = load i64, i64* %116, align 8
  %118 = icmp eq i64 %117, 0
  br i1 %118, label %84, label %85

119:                                              ; preds = %112, %119
  %120 = phi i64 [ %110, %112 ], [ %126, %119 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %82) #12
  %121 = inttoptr i64 %120 to %"struct.std::__1::__hash_node.1339"*
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node.1339", %"struct.std::__1::__hash_node.1339"* %121, i64 0, i32 2
  %123 = load i32, i32* %122, align 4
  store i32 %123, i32* %6, align 4
  %124 = call { %"struct.std::__1::__hash_node_base.1259"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1255"* %114, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %82) #12
  %125 = inttoptr i64 %120 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = icmp eq i64 %126, 0
  br i1 %127, label %115, label %119
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector30HandleSurvivingNewLargeObjectsEv(%"class.v8::internal::ScavengerCollector"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %3 = bitcast %"struct.std::__1::__hash_node_base.1153"** %2 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = icmp eq i64 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  br label %62

8:                                                ; preds = %62, %1
  %9 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 2, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %61, label %12

12:                                               ; preds = %8
  %13 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %2, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %13, null
  br i1 %14, label %21, label %15

15:                                               ; preds = %12, %15
  %16 = phi %"struct.std::__1::__hash_node_base.1153"* [ %18, %15 ], [ %13, %12 ]
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %16, i64 0, i32 0
  %18 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %17, align 8
  %19 = bitcast %"struct.std::__1::__hash_node_base.1153"* %16 to i8*
  tail call void @_ZdlPv(i8* %19) #17
  %20 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %18, null
  br i1 %20, label %21, label %15

21:                                               ; preds = %15, %12
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %2, align 8
  %22 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %43, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = add i64 %23, -1
  %28 = and i64 %23, 3
  %29 = icmp ult i64 %27, 3
  br i1 %29, label %32, label %30

30:                                               ; preds = %25
  %31 = sub i64 %23, %28
  br label %44

32:                                               ; preds = %44, %25
  %33 = phi i64 [ 0, %25 ], [ %58, %44 ]
  %34 = icmp eq i64 %28, 0
  br i1 %34, label %43, label %35

35:                                               ; preds = %32, %35
  %36 = phi i64 [ %40, %35 ], [ %33, %32 ]
  %37 = phi i64 [ %41, %35 ], [ %28, %32 ]
  %38 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %26, align 8
  %39 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %38, i64 %36
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %39, align 8
  %40 = add nuw i64 %36, 1
  %41 = add i64 %37, -1
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %35, !llvm.loop !66

43:                                               ; preds = %32, %35, %21
  store i64 0, i64* %9, align 8
  br label %61

44:                                               ; preds = %44, %30
  %45 = phi i64 [ 0, %30 ], [ %58, %44 ]
  %46 = phi i64 [ %31, %30 ], [ %59, %44 ]
  %47 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %26, align 8
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %47, i64 %45
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %48, align 8
  %49 = or i64 %45, 1
  %50 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %26, align 8
  %51 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %50, i64 %49
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %51, align 8
  %52 = or i64 %45, 2
  %53 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %26, align 8
  %54 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %53, i64 %52
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %54, align 8
  %55 = or i64 %45, 3
  %56 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %26, align 8
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %56, i64 %55
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %57, align 8
  %58 = add nuw i64 %45, 4
  %59 = add i64 %46, -4
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %32, label %44

61:                                               ; preds = %8, %43
  ret void

62:                                               ; preds = %6, %62
  %63 = phi i64 [ %4, %6 ], [ %78, %62 ]
  %64 = inttoptr i64 %63 to %"struct.std::__1::__hash_node"*
  %65 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %64, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %64, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %68 = load i64, i64* %67, align 8
  %69 = add i64 %66, -1
  %70 = inttoptr i64 %69 to i32*
  %71 = trunc i64 %68 to i32
  store atomic volatile i32 %71, i32* %70 monotonic, align 4
  %72 = and i64 %66, -262144
  %73 = inttoptr i64 %72 to %"class.v8::internal::LargePage"*
  %74 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %7, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %74, i64 0, i32 28
  %76 = load %"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::OldLargeObjectSpace"** %75, align 8
  tail call void @_ZN2v88internal19OldLargeObjectSpace21PromoteNewLargeObjectEPNS0_9LargePageE(%"class.v8::internal::OldLargeObjectSpace"* %76, %"class.v8::internal::LargePage"* %73) #12
  %77 = inttoptr i64 %63 to i64*
  %78 = load i64, i64* %77, align 8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %8, label %62
}

; Function Attrs: nounwind
declare void @_ZN2v88internal7Sweeper24FilterSweepingPagesScopeD1Ev(%"class.v8::internal::Sweeper::FilterSweepingPagesScope"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN2v88internal7Sweeper20PauseOrCompleteScopeD1Ev(%"class.v8::internal::Sweeper::PauseOrCompleteScope"*) unnamed_addr #3

declare void @_ZN2v88internal4Heap42UpdateYoungReferencesInExternalStringTableEPFNS0_6StringEPS1_NS0_14FullObjectSlotEE(%"class.v8::internal::Heap"*, i64 (%"class.v8::internal::Heap"*, i64)*) local_unnamed_addr #1

declare i64 @_ZN2v88internal4Heap46UpdateYoungReferenceInExternalStringTableEntryEPS1_NS0_14FullObjectSlotE(%"class.v8::internal::Heap"*, i64) #1

declare void @_ZN2v88internal18IncrementalMarking34UpdateMarkingWorklistAfterScavengeEv(%"class.v8::internal::IncrementalMarking"*) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap28UpdateRetainersAfterScavengeEv(%"class.v8::internal::Heap"*) local_unnamed_addr #1

declare void @_ZN2v88internal17ConcurrentMarking20ClearMemoryChunkDataEPNS0_11MemoryChunkE(%"class.v8::internal::ConcurrentMarking"*, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector21ProcessWeakReferencesEPNS0_8WorklistINS0_18EphemeronHashTableELi128EEE(%"class.v8::internal::ScavengerCollector"* nocapture readonly, %"class.v8::internal::Worklist.1183"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::ScavengeWeakObjectRetainer", align 8
  %4 = bitcast %"class.v8::internal::ScavengeWeakObjectRetainer"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #12
  %5 = getelementptr inbounds %"class.v8::internal::ScavengeWeakObjectRetainer", %"class.v8::internal::ScavengeWeakObjectRetainer"* %3, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN2v88internal26ScavengeWeakObjectRetainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::ScavengeWeakObjectRetainer", %"class.v8::internal::ScavengeWeakObjectRetainer"* %3, i64 0, i32 0
  call void @_ZN2v88internal4Heap26ProcessYoungWeakReferencesEPNS0_18WeakObjectRetainerE(%"class.v8::internal::Heap"* %7, %"class.v8::internal::WeakObjectRetainer"* nonnull %8) #12
  call void @_ZN2v88internal18ScavengerCollector20ClearYoungEphemeronsEPNS0_8WorklistINS0_18EphemeronHashTableELi128EEE(%"class.v8::internal::ScavengerCollector"* %0, %"class.v8::internal::Worklist.1183"* %1)
  call void @_ZN2v88internal18ScavengerCollector18ClearOldEphemeronsEv(%"class.v8::internal::ScavengerCollector"* %0)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #12
  ret void
}

declare void @_ZN2v88internal19NewLargeObjectSpace15FreeDeadObjectsERKNSt3__18functionIFbNS0_10HeapObjectEEEE(%"class.v8::internal::NewLargeObjectSpace"*, %"class.std::__1::function"* dereferenceable(32)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EE3PopEiPS3_(%"class.v8::internal::Worklist.1177"*, i32, %"class.v8::internal::MemoryChunk"**) local_unnamed_addr #0 comdat align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %4, i32 1
  %6 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = ptrtoint %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %6 to i64
  br i1 %9, label %17, label %11

11:                                               ; preds = %3
  %12 = add i64 %8, -1
  store i64 %12, i64* %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %6, i64 0, i32 2, i64 %12
  %14 = bitcast %"class.v8::internal::MemoryChunk"** %13 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.v8::internal::MemoryChunk"** %2 to i64*
  store i64 %15, i64* %16, align 8
  br label %60

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %4, i32 0
  %19 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %18, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %27, label %23

23:                                               ; preds = %17
  %24 = ptrtoint %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %19 to i64
  %25 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %5 to i64*
  %26 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %18 to i64*
  store i64 %24, i64* %25, align 8
  store i64 %10, i64* %26, align 8
  br label %49

27:                                               ; preds = %17
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 1
  %29 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %28 to i64*
  %30 = load atomic i64, i64* %29 monotonic, align 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %27
  %33 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %33) #12
  %34 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %28, align 8
  %35 = icmp eq %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %34, null
  br i1 %35, label %36, label %37

36:                                               ; preds = %32
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %33) #12
  br label %60

37:                                               ; preds = %32
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %34 to i64*
  %39 = ptrtoint %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %34 to i64
  %40 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = atomicrmw sub i64* %40, i64 1 monotonic
  %42 = load i64, i64* %38, align 8
  store atomic volatile i64 %42, i64* %29 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %33) #12
  %43 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %5, align 8
  %44 = icmp eq %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %43, null
  br i1 %44, label %47, label %45

45:                                               ; preds = %37
  %46 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %43 to i8*
  tail call void @_ZdlPv(i8* %46) #17
  br label %47

47:                                               ; preds = %37, %45
  %48 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %5 to i64*
  store i64 %39, i64* %48, align 8
  br label %49

49:                                               ; preds = %47, %23
  %50 = phi %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* [ %34, %47 ], [ %19, %23 ]
  %51 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %50, i64 0, i32 1
  %52 = load i64, i64* %51, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %60, label %54

54:                                               ; preds = %49
  %55 = add i64 %52, -1
  store i64 %55, i64* %51, align 8
  %56 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %50, i64 0, i32 2, i64 %55
  %57 = bitcast %"class.v8::internal::MemoryChunk"** %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = bitcast %"class.v8::internal::MemoryChunk"** %2 to i64*
  store i64 %58, i64* %59, align 8
  br label %60

60:                                               ; preds = %36, %27, %54, %49, %11
  %61 = phi i1 [ true, %11 ], [ true, %49 ], [ true, %54 ], [ false, %27 ], [ false, %36 ]
  ret i1 %61
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector26SweepArrayBufferExtensionsEv(%"class.v8::internal::ScavengerCollector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  %3 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %3, i64 0, i32 84, i32 0, i32 0, i32 0
  %5 = load %"class.v8::internal::ArrayBufferSweeper"*, %"class.v8::internal::ArrayBufferSweeper"** %4, align 8
  tail call void @_ZN2v88internal18ArrayBufferSweeper17RequestSweepYoungEv(%"class.v8::internal::ArrayBufferSweeper"* %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi128EED2Ev(%"class.v8::internal::Worklist.1183"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %9

7:                                                ; preds = %16
  %8 = icmp eq i64 %22, %6
  br i1 %8, label %23, label %9

9:                                                ; preds = %7, %5
  %10 = phi i64 [ 0, %5 ], [ %22, %7 ]
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 0, i64 %10, i32 1
  %12 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %12, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %29, !prof !67

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 0, i64 %10, i32 0
  %18 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = add nuw nsw i64 %10, 1
  br i1 %21, label %7, label %29, !prof !67

23:                                               ; preds = %7, %1
  %24 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 1
  %25 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29, !prof !60

28:                                               ; preds = %23
  br i1 %4, label %32, label %30

29:                                               ; preds = %16, %9, %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %45, %28
  %31 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %31) #12
  ret void

32:                                               ; preds = %28, %45
  %33 = phi i64 [ %46, %45 ], [ 0, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 0, i64 %33, i32 0
  %35 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %34, align 8
  %36 = icmp eq %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #17
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 0, i64 %33, i32 1
  %41 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %40, align 8
  %42 = icmp eq %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #17
  br label %45

45:                                               ; preds = %39, %43
  %46 = add nuw nsw i64 %33, 1
  %47 = load i32, i32* %2, align 8
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %46, %48
  br i1 %49, label %32, label %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EED2Ev(%"class.v8::internal::Worklist.1179"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %9

7:                                                ; preds = %16
  %8 = icmp eq i64 %22, %6
  br i1 %8, label %23, label %9

9:                                                ; preds = %7, %5
  %10 = phi i64 [ 0, %5 ], [ %22, %7 ]
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %10, i32 1
  %12 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %12, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %29, !prof !67

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %10, i32 0
  %18 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = add nuw nsw i64 %10, 1
  br i1 %21, label %7, label %29, !prof !67

23:                                               ; preds = %7, %1
  %24 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 1
  %25 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29, !prof !60

28:                                               ; preds = %23
  br i1 %4, label %32, label %30

29:                                               ; preds = %16, %9, %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %45, %28
  %31 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %31) #12
  ret void

32:                                               ; preds = %28, %45
  %33 = phi i64 [ %46, %45 ], [ 0, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %33, i32 0
  %35 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %34, align 8
  %36 = icmp eq %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #17
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %33, i32 1
  %41 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %40, align 8
  %42 = icmp eq %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #17
  br label %45

45:                                               ; preds = %39, %43
  %46 = add nuw nsw i64 %33, 1
  %47 = load i32, i32* %2, align 8
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %46, %48
  br i1 %49, label %32, label %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EED2Ev(%"class.v8::internal::Worklist.1177"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %9

7:                                                ; preds = %16
  %8 = icmp eq i64 %22, %6
  br i1 %8, label %23, label %9

9:                                                ; preds = %7, %5
  %10 = phi i64 [ 0, %5 ], [ %22, %7 ]
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %10, i32 1
  %12 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %12, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %29, !prof !67

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %10, i32 0
  %18 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = add nuw nsw i64 %10, 1
  br i1 %21, label %7, label %29, !prof !67

23:                                               ; preds = %7, %1
  %24 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 1
  %25 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29, !prof !60

28:                                               ; preds = %23
  br i1 %4, label %32, label %30

29:                                               ; preds = %16, %9, %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %45, %28
  %31 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %31) #12
  ret void

32:                                               ; preds = %28, %45
  %33 = phi i64 [ %46, %45 ], [ 0, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %33, i32 0
  %35 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %34, align 8
  %36 = icmp eq %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #17
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %33, i32 1
  %41 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %40, align 8
  %42 = icmp eq %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #17
  br label %45

45:                                               ; preds = %39, %43
  %46 = add nuw nsw i64 %33, 1
  %47 = load i32, i32* %2, align 8
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %46, %48
  br i1 %49, label %32, label %30
}

declare void @_ZN2v88internal4Heap17IterateStackRootsEPNS0_11RootVisitorE(%"class.v8::internal::Heap"*, %"class.v8::internal::RootVisitor"*) local_unnamed_addr #1

declare void @_ZN2v88internal7Isolate18PrintWithTimestampEPKcz(%"class.v8::internal::Isolate"*, i8*, ...) local_unnamed_addr #1

declare void @_ZN2v88internal18ArrayBufferSweeper17RequestSweepYoungEv(%"class.v8::internal::ArrayBufferSweeper"*) local_unnamed_addr #1

declare void @_ZN2v88internal19OldLargeObjectSpace21PromoteNewLargeObjectEPNS0_9LargePageE(%"class.v8::internal::OldLargeObjectSpace"*, %"class.v8::internal::LargePage"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector29MergeSurvivingNewLargeObjectsERKNSt3__113unordered_mapINS0_10HeapObjectENS0_3MapENS0_6Object6HasherENS2_8equal_toIS4_EENS2_9allocatorINS2_4pairIKS4_S5_EEEEEE(%"class.v8::internal::ScavengerCollector"*, %"class.std::__1::unordered_map.1148"* nocapture readonly dereferenceable(40)) local_unnamed_addr #0 align 2 {
  %3 = alloca <2 x i64>, align 16
  %4 = bitcast <2 x i64>* %3 to %"struct.std::__1::pair.1245"*
  %5 = getelementptr inbounds %"class.std::__1::unordered_map.1148", %"class.std::__1::unordered_map.1148"* %1, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %6 = bitcast %"struct.std::__1::__hash_node_base.1153"** %5 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %13, label %9

9:                                                ; preds = %2
  %10 = bitcast <2 x i64>* %3 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 2, i32 0
  %12 = bitcast <2 x i64>* %3 to %"class.v8::internal::HeapObject"*
  br label %14

13:                                               ; preds = %14, %2
  ret void

14:                                               ; preds = %9, %14
  %15 = phi i64 [ %7, %9 ], [ %22, %14 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #12
  %16 = inttoptr i64 %15 to %"struct.std::__1::__hash_node"*
  %17 = getelementptr inbounds %"struct.std::__1::__hash_node", %"struct.std::__1::__hash_node"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = bitcast i64* %17 to <2 x i64>*
  %19 = load <2 x i64>, <2 x i64>* %18, align 8
  store <2 x i64> %19, <2 x i64>* %3, align 16
  %20 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRNS_4pairIS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %11, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %12, %"struct.std::__1::pair.1245"* nonnull dereferenceable(16) %4) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #12
  %21 = inttoptr i64 %15 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %13, label %14
}

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #6

declare zeroext i1 @_ZN2v88internal4Heap37CanPromoteYoungAndExpandOldGenerationEm(%"class.v8::internal::Heap"*, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9ScavengerC2EPNS0_18ScavengerCollectorEPNS0_4HeapEbPNS0_8WorklistIPNS0_11MemoryChunkELi64EEEPNS6_INSt3__14pairINS0_10HeapObjectEiEELi256EEEPNS1_13PromotionListEPNS6_INS0_18EphemeronHashTableELi128EEEi(%"class.v8::internal::Scavenger"*, %"class.v8::internal::ScavengerCollector"*, %"class.v8::internal::Heap"*, i1 zeroext, %"class.v8::internal::Worklist.1177"*, %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Worklist.1183"*, i32) unnamed_addr #0 align 2 {
  %10 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %11 = zext i1 %3 to i8
  %12 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 0
  store %"class.v8::internal::ScavengerCollector"* %1, %"class.v8::internal::ScavengerCollector"** %12, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  store %"class.v8::internal::Heap"* %2, %"class.v8::internal::Heap"** %13, align 8
  %14 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 2, i32 0
  store %"class.v8::internal::Worklist.1177"* %4, %"class.v8::internal::Worklist.1177"** %14, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 2, i32 1
  store i32 %8, i32* %15, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  store %"class.v8::internal::Scavenger::PromotionList"* %6, %"class.v8::internal::Scavenger::PromotionList"** %16, align 8
  %17 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  store i32 %8, i32* %17, align 8
  %18 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  store %"class.v8::internal::Worklist.1179"* %5, %"class.v8::internal::Worklist.1179"** %18, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  store i32 %8, i32* %19, align 8
  %20 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 5, i32 0
  store %"class.v8::internal::Worklist.1183"* %7, %"class.v8::internal::Worklist.1183"** %20, align 8
  %21 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 5, i32 1
  store i32 %8, i32* %21, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0, i32 3
  %24 = bitcast %"class.std::__1::__compressed_pair.533"* %23 to i32*
  %25 = bitcast %"class.std::__1::unordered_map.513"* %22 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %24, align 4
  %26 = getelementptr inbounds %"class.std::__1::unordered_map.513", %"class.std::__1::unordered_map.513"* %22, i64 0, i32 0
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.514"* %26, i64 256) #12
  %27 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %28 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %29 = bitcast i64* %27 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 16, i1 false)
  store %"class.v8::internal::Heap"* %2, %"class.v8::internal::Heap"** %28, align 8
  %30 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %31 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %2, i64 0, i32 24
  %32 = bitcast %"class.v8::internal::NewSpace"** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast %"class.v8::internal::NewSpace"** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1
  %36 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %35, i64 0, i32 0, i32 0
  %37 = tail call %"class.v8::internal::FreeList"* @_ZN2v88internal8FreeList14CreateFreeListEv() #12
  tail call void @_ZN2v88internal10PagedSpaceC2EPNS0_4HeapENS0_15AllocationSpaceENS0_13ExecutabilityEPNS0_8FreeListENS0_14LocalSpaceKindE(%"class.v8::internal::PagedSpace"* %36, %"class.v8::internal::Heap"* %2, i32 1, i32 0, %"class.v8::internal::FreeList"* %37, i32 1) #12
  %38 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 1
  %40 = bitcast %"class.std::__1::vector.282"* %39 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal15CompactionSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %41 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 2
  %42 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %41, i64 0, i32 0, i32 0
  %43 = tail call %"class.v8::internal::FreeList"* @_ZN2v88internal8FreeList14CreateFreeListEv() #12
  tail call void @_ZN2v88internal10PagedSpaceC2EPNS0_4HeapENS0_15AllocationSpaceENS0_13ExecutabilityEPNS0_8FreeListENS0_14LocalSpaceKindE(%"class.v8::internal::PagedSpace"* %42, %"class.v8::internal::Heap"* %2, i32 2, i32 1, %"class.v8::internal::FreeList"* %43, i32 1) #12
  %44 = getelementptr inbounds %"class.v8::internal::CompactionSpace", %"class.v8::internal::CompactionSpace"* %41, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 2, i32 0, i32 1
  %46 = bitcast %"class.std::__1::vector.282"* %45 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal15CompactionSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %44, align 8
  %47 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3
  %48 = bitcast %"class.v8::internal::LinearAllocationArea"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %48) #12
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 0, i64 24, i1 false) #12, !noalias !68
  tail call void @_ZN2v88internal21LocalAllocationBufferC1EPNS0_4HeapENS0_20LinearAllocationAreaE(%"class.v8::internal::LocalAllocationBuffer"* %47, %"class.v8::internal::Heap"* null, %"class.v8::internal::LinearAllocationArea"* nonnull byval(%"class.v8::internal::LinearAllocationArea") align 8 %10) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %48) #12
  %49 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 4
  store i8 0, i8* %49, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10
  %51 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0, i32 3
  %52 = bitcast %"class.std::__1::__compressed_pair.1168"* %51 to i32*
  %53 = bitcast %"class.std::__1::unordered_map.1148"* %50 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %52, align 4
  %54 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 11
  %55 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 11, i32 0, i32 3
  %56 = bitcast %"class.std::__1::__compressed_pair.16"* %55 to i32*
  %57 = bitcast %"class.std::__1::unordered_map"* %54 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %57, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %56, align 4
  %58 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  store i8 %11, i8* %58, align 8
  %59 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %60 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %2, i64 0, i32 86, i32 0, i32 0, i32 0
  %61 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %60, align 8
  %62 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %61, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i8, i8* %62 seq_cst, align 1
  %64 = icmp ne i8 %63, 0
  %65 = zext i1 %64 to i8
  store i8 %65, i8* %59, align 1
  %66 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 14
  %67 = load %"class.v8::internal::IncrementalMarking"*, %"class.v8::internal::IncrementalMarking"** %60, align 8
  %68 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %67, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i8, i8* %68 seq_cst, align 1
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %74, label %71

71:                                               ; preds = %9
  %72 = getelementptr inbounds %"class.v8::internal::IncrementalMarking", %"class.v8::internal::IncrementalMarking"* %67, i64 0, i32 12
  %73 = load i8, i8* %72, align 1, !range !2
  br label %74

74:                                               ; preds = %9, %71
  %75 = phi i8 [ 0, %9 ], [ %73, %71 ]
  store i8 %75, i8* %66, align 2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger32IterateAndScavengePromotedObjectENS0_10HeapObjectENS0_3MapEi(%"class.v8::internal::Scavenger"*, i64, i64, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", align 8
  %6 = alloca %"class.v8::internal::JSArrayBuffer", align 8
  %7 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 14
  %8 = load i8, i8* %7, align 2, !range !2
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %35, label %10

10:                                               ; preds = %4
  %11 = and i64 %1, -262144
  %12 = or i64 %11, 272
  %13 = sub i64 %1, %11
  %14 = trunc i64 %13 to i32
  %15 = lshr i32 %14, 2
  %16 = and i32 %15, 31
  %17 = shl i32 1, %16
  %18 = inttoptr i64 %12 to i32*
  %19 = lshr i64 %13, 7
  %20 = and i64 %19, 33554431
  %21 = getelementptr inbounds i32, i32* %18, i64 %20
  %22 = load atomic i32, i32* %21 acquire, align 4
  %23 = and i32 %22, %17
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %35, label %25

25:                                               ; preds = %10
  %26 = shl i32 %17, 1
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds i32, i32* %21, i64 1
  %29 = select i1 %27, i32 1, i32 %26
  %30 = select i1 %27, i32* %28, i32* %21
  %31 = load atomic i32, i32* %30 acquire, align 4
  %32 = and i32 %31, %29
  %33 = icmp ne i32 %32, 0
  %34 = zext i1 %33 to i8
  br label %35

35:                                               ; preds = %25, %10, %4
  %36 = phi i8 [ 0, %4 ], [ 0, %10 ], [ %34, %25 ]
  %37 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %5, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal40IterateAndScavengePromotedObjectsVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %38, align 8
  %39 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %5, i64 0, i32 1
  store %"class.v8::internal::Scavenger"* %0, %"class.v8::internal::Scavenger"** %39, align 8
  %40 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %5, i64 0, i32 2
  store i8 %36, i8* %40, align 8
  %41 = add i64 %2, 7
  %42 = inttoptr i64 %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  call void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_40IterateAndScavengePromotedObjectsVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext %43, i64 %2, i64 %1, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* nonnull %5) #12
  %44 = load atomic i16, i16* %42 monotonic, align 2
  %45 = icmp eq i16 %44, 1086
  br i1 %45, label %46, label %49

46:                                               ; preds = %35
  %47 = bitcast %"class.v8::internal::JSArrayBuffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #12
  %48 = getelementptr inbounds %"class.v8::internal::JSArrayBuffer", %"class.v8::internal::JSArrayBuffer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %48, align 8
  call void @_ZN2v88internal13JSArrayBuffer26YoungMarkExtensionPromotedEv(%"class.v8::internal::JSArrayBuffer"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #12
  br label %49

49:                                               ; preds = %46, %35
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %37) #12
  ret void
}

declare void @_ZN2v88internal13JSArrayBuffer26YoungMarkExtensionPromotedEv(%"class.v8::internal::JSArrayBuffer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger25RememberPromotedEphemeronENS0_18EphemeronHashTableEi(%"class.v8::internal::Scavenger"*, i64, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"struct.std::__1::pair.1253", align 8
  store i32 %2, i32* %4, align 4
  %6 = bitcast %"struct.std::__1::pair.1253"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %6) #12
  %7 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %7, align 8
  %8 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1, i32 0, i32 3
  %10 = bitcast %"class.std::__1::__compressed_pair.1273"* %9 to i32*
  %11 = bitcast %"class.std::__1::unordered_set.1254"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 32, i1 false)
  store i32 1065353216, i32* %10, align 8
  %12 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 11, i32 0
  %13 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 0
  %14 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_SC_EEEEENSO_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %12, %"class.v8::internal::EphemeronHashTable"* nonnull dereferenceable(8) %13, %"struct.std::__1::pair.1253"* nonnull dereferenceable(48) %5) #12
  %15 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %14, 0
  %16 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %16, align 8
  %18 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %17, null
  br i1 %18, label %25, label %19

19:                                               ; preds = %3, %19
  %20 = phi %"struct.std::__1::__hash_node_base.1259"* [ %22, %19 ], [ %17, %3 ]
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %20, i64 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %21, align 8
  %23 = bitcast %"struct.std::__1::__hash_node_base.1259"* %20 to i8*
  call void @_ZdlPv(i8* %23) #17
  %24 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %22, null
  br i1 %24, label %25, label %19

25:                                               ; preds = %19, %3
  %26 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %5, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %26, align 8
  store %"struct.std::__1::__hash_node_base.1259"** null, %"struct.std::__1::__hash_node_base.1259"*** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1259"** %27, null
  br i1 %28, label %31, label %29

29:                                               ; preds = %25
  %30 = bitcast %"struct.std::__1::__hash_node_base.1259"** %27 to i8*
  call void @_ZdlPv(i8* %30) #17
  br label %31

31:                                               ; preds = %25, %29
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %6) #12
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %15, i64 3
  %33 = bitcast %"struct.std::__1::__hash_node_base"* %32 to %"class.std::__1::__hash_table.1255"*
  %34 = call { %"struct.std::__1::__hash_node_base.1259"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1255"* %33, i32* nonnull dereferenceable(4) %4, i32* nonnull dereferenceable(4) %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger27AddPageToSweeperIfNecessaryEPNS0_11MemoryChunkE(%"class.v8::internal::Scavenger"* nocapture readonly, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 2097152
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %7, label %27

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 0, i32 8, i32 0
  %9 = bitcast %"struct.std::__1::__atomic_base.69"* %8 to i64*
  %10 = load atomic i64, i64* %9 seq_cst, align 8
  %11 = inttoptr i64 %10 to %"class.v8::internal::Space"*
  %12 = getelementptr inbounds %"class.v8::internal::Space", %"class.v8::internal::Space"* %11, i64 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 1
  br i1 %14, label %15, label %27

15:                                               ; preds = %7
  %16 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %17 = load atomic i64, i64* %16 seq_cst, align 8
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %27, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %21 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %21, i64 0, i32 81, i32 0, i32 0, i32 0
  %23 = load %"class.v8::internal::MarkCompactCollector"*, %"class.v8::internal::MarkCompactCollector"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::MarkCompactCollector", %"class.v8::internal::MarkCompactCollector"* %23, i64 0, i32 22
  %25 = load %"class.v8::internal::Sweeper"*, %"class.v8::internal::Sweeper"** %24, align 8
  %26 = bitcast %"class.v8::internal::MemoryChunk"* %1 to %"class.v8::internal::Page"*
  tail call void @_ZN2v88internal7Sweeper7AddPageENS0_15AllocationSpaceEPNS0_4PageENS1_11AddPageModeE(%"class.v8::internal::Sweeper"* %25, i32 1, %"class.v8::internal::Page"* %26, i32 1) #12
  br label %27

27:                                               ; preds = %2, %19, %15, %7
  ret void
}

declare void @_ZN2v88internal7Sweeper7AddPageENS0_15AllocationSpaceEPNS0_4PageENS1_11AddPageModeE(%"class.v8::internal::Sweeper"*, i32, %"class.v8::internal::Page"*, i32) local_unnamed_addr #1

declare void @_ZN2v88internal22InvalidatedSlotsFilter8OldToNewEPNS0_11MemoryChunkE(%"class.v8::internal::InvalidatedSlotsFilter"* sret, %"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

declare void @_ZN2v88internal11MemoryChunk23ReleaseInvalidatedSlotsILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap26ProcessYoungWeakReferencesEPNS0_18WeakObjectRetainerE(%"class.v8::internal::Heap"*, %"class.v8::internal::WeakObjectRetainer"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector20ClearYoungEphemeronsEPNS0_8WorklistINS0_18EphemeronHashTableELi128EEE(%"class.v8::internal::ScavengerCollector"* nocapture readnone, %"class.v8::internal::Worklist.1183"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.v8::internal::EphemeronHashTable", align 8
  %4 = alloca %"class.v8::internal::EphemeronHashTable", align 8
  %5 = alloca %"class.v8::internal::EphemeronHashTable", align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %16

9:                                                ; preds = %2
  %10 = bitcast %"class.v8::internal::EphemeronHashTable"* %4 to i8*
  %11 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %4, i64 0, i32 0
  %13 = bitcast %"class.v8::internal::EphemeronHashTable"* %3 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %3, i64 0, i32 0
  br label %90

16:                                               ; preds = %215, %2
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 1, i32 1
  %19 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %18, align 8
  %20 = icmp eq %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %19, null
  br i1 %20, label %220, label %21

21:                                               ; preds = %16
  %22 = bitcast %"class.v8::internal::EphemeronHashTable"* %5 to i8*
  %23 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %5, i64 0, i32 0
  br label %25

25:                                               ; preds = %86, %21
  %26 = phi %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* [ %19, %21 ], [ %88, %86 ]
  %27 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %26, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %86, label %30

30:                                               ; preds = %25, %82
  %31 = phi i64 [ %83, %82 ], [ %28, %25 ]
  %32 = phi i64 [ %84, %82 ], [ 0, %25 ]
  %33 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %26, i64 0, i32 2, i64 %32, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i64, i64* %33, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #12
  store i64 %34, i64* %23, align 8
  %35 = add i64 %34, 15
  %36 = inttoptr i64 %35 to i32*
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = ashr i32 %37, 1
  %39 = sext i32 %38 to i64
  %40 = icmp eq i32 %38, 0
  br i1 %40, label %82, label %41

41:                                               ; preds = %30, %78
  %42 = phi i64 [ %79, %78 ], [ %34, %30 ]
  %43 = phi i64 [ %76, %78 ], [ 0, %30 ]
  %44 = trunc i64 %43 to i32
  %45 = shl i32 %44, 3
  %46 = add i32 %45, 12
  %47 = sext i32 %46 to i64
  %48 = add i64 %42, 7
  %49 = add i64 %48, %47
  %50 = inttoptr i64 %49 to i32*
  %51 = load i32, i32* %50, align 4
  %52 = and i64 %49, -4294967296
  %53 = zext i32 %51 to i64
  %54 = or i64 %52, %53
  %55 = and i64 %54, -262144
  %56 = inttoptr i64 %55 to %"class.v8::internal::BasicMemoryChunk"*
  %57 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %56, i64 0, i32 1
  %58 = load i64, i64* %57, align 8
  %59 = and i64 %58, 8
  %60 = icmp eq i64 %59, 0
  %61 = add i64 %54, -1
  %62 = inttoptr i64 %61 to i32*
  br i1 %60, label %68, label %63

63:                                               ; preds = %41
  %64 = load atomic i32, i32* %62 monotonic, align 4
  %65 = and i32 %64, 3
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %68, label %67

67:                                               ; preds = %63
  call void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"* nonnull %24, i64 %43) #12
  br label %75

68:                                               ; preds = %63, %41
  %69 = load atomic i32, i32* %62 monotonic, align 4
  %70 = and i32 %69, 3
  %71 = icmp eq i32 %70, 0
  %72 = add i32 %69, 1
  %73 = select i1 %60, i32 %51, i32 0
  %74 = select i1 %71, i32 %72, i32 %73
  store i32 %74, i32* %50, align 4
  br label %75

75:                                               ; preds = %68, %67
  %76 = add i64 %43, 1
  %77 = icmp eq i64 %76, %39
  br i1 %77, label %80, label %78

78:                                               ; preds = %75
  %79 = load i64, i64* %23, align 8
  br label %41

80:                                               ; preds = %75
  %81 = load i64, i64* %27, align 8
  br label %82

82:                                               ; preds = %80, %30
  %83 = phi i64 [ %81, %80 ], [ %31, %30 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #12
  %84 = add nuw i64 %32, 1
  %85 = icmp ult i64 %84, %83
  br i1 %85, label %30, label %86

86:                                               ; preds = %82, %25
  %87 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %26, i64 0, i32 0
  %88 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %87, align 8
  %89 = icmp eq %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %88, null
  br i1 %89, label %220, label %25

90:                                               ; preds = %215, %9
  %91 = phi i64 [ 0, %9 ], [ %216, %215 ]
  %92 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 0, i64 %91, i32 1
  %93 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %92, align 8
  %94 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %93, i64 0, i32 1
  %95 = load i64, i64* %94, align 8
  %96 = icmp eq i64 %95, 0
  br i1 %96, label %153, label %97

97:                                               ; preds = %90, %149
  %98 = phi i64 [ %150, %149 ], [ %95, %90 ]
  %99 = phi i64 [ %151, %149 ], [ 0, %90 ]
  %100 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %93, i64 0, i32 2, i64 %99, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load i64, i64* %100, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10) #12
  store i64 %101, i64* %11, align 8
  %102 = add i64 %101, 15
  %103 = inttoptr i64 %102 to i32*
  %104 = load atomic i32, i32* %103 monotonic, align 4
  %105 = ashr i32 %104, 1
  %106 = sext i32 %105 to i64
  %107 = icmp eq i32 %105, 0
  br i1 %107, label %149, label %108

108:                                              ; preds = %97, %145
  %109 = phi i64 [ %146, %145 ], [ %101, %97 ]
  %110 = phi i64 [ %143, %145 ], [ 0, %97 ]
  %111 = trunc i64 %110 to i32
  %112 = shl i32 %111, 3
  %113 = add i32 %112, 12
  %114 = sext i32 %113 to i64
  %115 = add i64 %109, 7
  %116 = add i64 %115, %114
  %117 = inttoptr i64 %116 to i32*
  %118 = load i32, i32* %117, align 4
  %119 = and i64 %116, -4294967296
  %120 = zext i32 %118 to i64
  %121 = or i64 %119, %120
  %122 = and i64 %121, -262144
  %123 = inttoptr i64 %122 to %"class.v8::internal::BasicMemoryChunk"*
  %124 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %123, i64 0, i32 1
  %125 = load i64, i64* %124, align 8
  %126 = and i64 %125, 8
  %127 = icmp eq i64 %126, 0
  %128 = add i64 %121, -1
  %129 = inttoptr i64 %128 to i32*
  br i1 %127, label %135, label %130

130:                                              ; preds = %108
  %131 = load atomic i32, i32* %129 monotonic, align 4
  %132 = and i32 %131, 3
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %135, label %134

134:                                              ; preds = %130
  call void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"* nonnull %12, i64 %110) #12
  br label %142

135:                                              ; preds = %130, %108
  %136 = load atomic i32, i32* %129 monotonic, align 4
  %137 = and i32 %136, 3
  %138 = icmp eq i32 %137, 0
  %139 = add i32 %136, 1
  %140 = select i1 %127, i32 %118, i32 0
  %141 = select i1 %138, i32 %139, i32 %140
  store i32 %141, i32* %117, align 4
  br label %142

142:                                              ; preds = %135, %134
  %143 = add i64 %110, 1
  %144 = icmp eq i64 %143, %106
  br i1 %144, label %147, label %145

145:                                              ; preds = %142
  %146 = load i64, i64* %11, align 8
  br label %108

147:                                              ; preds = %142
  %148 = load i64, i64* %94, align 8
  br label %149

149:                                              ; preds = %147, %97
  %150 = phi i64 [ %148, %147 ], [ %98, %97 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10) #12
  %151 = add nuw i64 %99, 1
  %152 = icmp ult i64 %151, %150
  br i1 %152, label %97, label %153

153:                                              ; preds = %149, %90
  %154 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 0, i64 %91, i32 0
  %155 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %155, i64 0, i32 1
  %157 = load i64, i64* %156, align 8
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %215, label %159

159:                                              ; preds = %153, %211
  %160 = phi i64 [ %212, %211 ], [ %157, %153 ]
  %161 = phi i64 [ %213, %211 ], [ 0, %153 ]
  %162 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %155, i64 0, i32 2, i64 %161, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load i64, i64* %162, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  store i64 %163, i64* %14, align 8
  %164 = add i64 %163, 15
  %165 = inttoptr i64 %164 to i32*
  %166 = load atomic i32, i32* %165 monotonic, align 4
  %167 = ashr i32 %166, 1
  %168 = sext i32 %167 to i64
  %169 = icmp eq i32 %167, 0
  br i1 %169, label %211, label %170

170:                                              ; preds = %159, %207
  %171 = phi i64 [ %208, %207 ], [ %163, %159 ]
  %172 = phi i64 [ %205, %207 ], [ 0, %159 ]
  %173 = trunc i64 %172 to i32
  %174 = shl i32 %173, 3
  %175 = add i32 %174, 12
  %176 = sext i32 %175 to i64
  %177 = add i64 %171, 7
  %178 = add i64 %177, %176
  %179 = inttoptr i64 %178 to i32*
  %180 = load i32, i32* %179, align 4
  %181 = and i64 %178, -4294967296
  %182 = zext i32 %180 to i64
  %183 = or i64 %181, %182
  %184 = and i64 %183, -262144
  %185 = inttoptr i64 %184 to %"class.v8::internal::BasicMemoryChunk"*
  %186 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %185, i64 0, i32 1
  %187 = load i64, i64* %186, align 8
  %188 = and i64 %187, 8
  %189 = icmp eq i64 %188, 0
  %190 = add i64 %183, -1
  %191 = inttoptr i64 %190 to i32*
  br i1 %189, label %197, label %192

192:                                              ; preds = %170
  %193 = load atomic i32, i32* %191 monotonic, align 4
  %194 = and i32 %193, 3
  %195 = icmp eq i32 %194, 0
  br i1 %195, label %197, label %196

196:                                              ; preds = %192
  call void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"* nonnull %15, i64 %172) #12
  br label %204

197:                                              ; preds = %192, %170
  %198 = load atomic i32, i32* %191 monotonic, align 4
  %199 = and i32 %198, 3
  %200 = icmp eq i32 %199, 0
  %201 = add i32 %198, 1
  %202 = select i1 %189, i32 %180, i32 0
  %203 = select i1 %200, i32 %201, i32 %202
  store i32 %203, i32* %179, align 4
  br label %204

204:                                              ; preds = %197, %196
  %205 = add i64 %172, 1
  %206 = icmp eq i64 %205, %168
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  %208 = load i64, i64* %14, align 8
  br label %170

209:                                              ; preds = %204
  %210 = load i64, i64* %156, align 8
  br label %211

211:                                              ; preds = %209, %159
  %212 = phi i64 [ %210, %209 ], [ %160, %159 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %213 = add nuw i64 %161, 1
  %214 = icmp ult i64 %213, %212
  br i1 %214, label %159, label %215

215:                                              ; preds = %211, %153
  %216 = add nuw nsw i64 %91, 1
  %217 = load i32, i32* %6, align 8
  %218 = sext i32 %217 to i64
  %219 = icmp slt i64 %216, %218
  br i1 %219, label %90, label %16

220:                                              ; preds = %86, %16
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %17) #12
  %221 = load i32, i32* %6, align 8
  %222 = icmp sgt i32 %221, 0
  br i1 %222, label %233, label %223

223:                                              ; preds = %233, %220
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %17) #12
  %224 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  store atomic i64 0, i64* %224 monotonic, align 8
  %225 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %18, align 8
  %226 = icmp eq %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %225, null
  br i1 %226, label %245, label %227

227:                                              ; preds = %223, %227
  %228 = phi %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* [ %231, %227 ], [ %225, %223 ]
  %229 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %228 to i8*
  %230 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %228, i64 0, i32 0
  %231 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %230, align 8
  call void @_ZdlPv(i8* %229) #17
  %232 = icmp eq %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %231, null
  br i1 %232, label %245, label %227

233:                                              ; preds = %220, %233
  %234 = phi i64 [ %241, %233 ], [ 0, %220 ]
  %235 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 0, i64 %234, i32 1
  %236 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %235, align 8
  %237 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %236, i64 0, i32 1
  store i64 0, i64* %237, align 8
  %238 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %1, i64 0, i32 0, i64 %234, i32 0
  %239 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %238, align 8
  %240 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %239, i64 0, i32 1
  store i64 0, i64* %240, align 8
  %241 = add nuw nsw i64 %234, 1
  %242 = load i32, i32* %6, align 8
  %243 = sext i32 %242 to i64
  %244 = icmp slt i64 %241, %243
  br i1 %244, label %233, label %223

245:                                              ; preds = %227, %223
  %246 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %18 to i64*
  store atomic volatile i64 0, i64* %246 monotonic, align 8
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %17) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal18ScavengerCollector18ClearOldEphemeronsEv(%"class.v8::internal::ScavengerCollector"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.std::__1::unique_ptr.1371", align 8
  %3 = alloca %"class.std::__1::unique_ptr.1371", align 8
  %4 = alloca %"class.std::__1::unique_ptr.1362", align 8
  %5 = alloca %"class.v8::internal::EphemeronHashTable", align 8
  %6 = getelementptr inbounds %"class.v8::internal::ScavengerCollector", %"class.v8::internal::ScavengerCollector"* %0, i64 0, i32 1
  %7 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %8 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %7, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %9 = bitcast %"struct.std::__1::__hash_node_base"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %1
  %13 = bitcast %"class.v8::internal::EphemeronHashTable"* %5 to i8*
  %14 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %5, i64 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1371"* %2 to i8*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.1371", %"class.std::__1::unique_ptr.1371"* %2, i64 0, i32 0, i32 0, i32 0
  %18 = bitcast %"class.std::__1::unique_ptr.1371"* %3 to i8*
  %19 = getelementptr inbounds %"class.std::__1::unique_ptr.1371", %"class.std::__1::unique_ptr.1371"* %3, i64 0, i32 0, i32 0, i32 0
  %20 = bitcast %"class.std::__1::unique_ptr.1362"* %4 to i8*
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.1362", %"class.std::__1::unique_ptr.1362"* %4, i64 0, i32 0, i32 0, i32 0
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.1362", %"class.std::__1::unique_ptr.1362"* %4, i64 0, i32 0, i32 1, i32 0, i32 1
  br label %24

23:                                               ; preds = %142, %1
  ret void

24:                                               ; preds = %12, %142
  %25 = phi i64 [ %10, %12 ], [ %143, %142 ]
  %26 = inttoptr i64 %25 to %"struct.std::__1::__hash_node_base"*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #12
  %27 = inttoptr i64 %25 to %"struct.std::__1::__hash_node.1343"*
  %28 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i64, i64* %28, align 8
  store i64 %29, i64* %14, align 8
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %27, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %31 = bitcast %"struct.std::__1::__hash_node_base.1259"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %36, label %34

34:                                               ; preds = %24
  %35 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %27, i64 0, i32 2, i32 0, i32 1, i32 0
  br label %40

36:                                               ; preds = %105, %24
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %27, i64 0, i32 2, i32 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %110, label %139

40:                                               ; preds = %108, %34
  %41 = phi i64 [ %29, %34 ], [ %109, %108 ]
  %42 = phi i64 [ %32, %34 ], [ %106, %108 ]
  %43 = inttoptr i64 %42 to %"struct.std::__1::__hash_node_base.1259"*
  %44 = inttoptr i64 %42 to %"struct.std::__1::__hash_node.1339"*
  %45 = getelementptr inbounds %"struct.std::__1::__hash_node.1339", %"struct.std::__1::__hash_node.1339"* %44, i64 0, i32 2
  %46 = load i32, i32* %45, align 4
  %47 = sext i32 %46 to i64
  %48 = shl i32 %46, 3
  %49 = add i32 %48, 12
  %50 = sext i32 %49 to i64
  %51 = add i64 %41, 7
  %52 = add i64 %51, %50
  %53 = inttoptr i64 %52 to i32*
  %54 = load i32, i32* %53, align 4
  %55 = and i64 %52, -4294967296
  %56 = zext i32 %54 to i64
  %57 = or i64 %55, %56
  %58 = and i64 %57, -262144
  %59 = inttoptr i64 %58 to %"class.v8::internal::BasicMemoryChunk"*
  %60 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %59, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 8
  %63 = icmp eq i64 %62, 0
  %64 = add i64 %57, -1
  %65 = inttoptr i64 %64 to i32*
  br i1 %63, label %78, label %66

66:                                               ; preds = %40
  %67 = load atomic i32, i32* %65 monotonic, align 4
  %68 = and i32 %67, 3
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %78, label %70

70:                                               ; preds = %66
  call void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"* nonnull %15, i64 %47) #12
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %16) #12
  %71 = inttoptr i64 %42 to i64*
  %72 = load i64, i64* %71, align 8
  call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIiPvEEEE(%"class.std::__1::unique_ptr.1371"* nonnull sret %2, %"class.std::__1::__hash_table.1255"* %35, %"struct.std::__1::__hash_node_base.1259"* nonnull %43) #12
  %73 = load %"struct.std::__1::__hash_node.1339"*, %"struct.std::__1::__hash_node.1339"** %17, align 8
  store %"struct.std::__1::__hash_node.1339"* null, %"struct.std::__1::__hash_node.1339"** %17, align 8
  %74 = icmp eq %"struct.std::__1::__hash_node.1339"* %73, null
  br i1 %74, label %77, label %75

75:                                               ; preds = %70
  %76 = bitcast %"struct.std::__1::__hash_node.1339"* %73 to i8*
  call void @_ZdlPv(i8* %76) #17
  br label %77

77:                                               ; preds = %70, %75
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %16) #12
  br label %105

78:                                               ; preds = %40, %66
  %79 = load atomic i32, i32* %65 monotonic, align 4
  %80 = zext i32 %79 to i64
  %81 = and i64 %80, 3
  %82 = icmp eq i64 %81, 0
  %83 = or i64 %55, %80
  %84 = add i64 %83, 1
  %85 = select i1 %63, i64 %57, i64 0
  %86 = select i1 %82, i64 %84, i64 %85
  %87 = trunc i64 %86 to i32
  store i32 %87, i32* %53, align 4
  %88 = and i64 %86, -262144
  %89 = inttoptr i64 %88 to %"class.v8::internal::BasicMemoryChunk"*
  %90 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %89, i64 0, i32 1
  %91 = load i64, i64* %90, align 8
  %92 = and i64 %91, 24
  %93 = icmp eq i64 %92, 0
  br i1 %93, label %94, label %102

94:                                               ; preds = %78
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %18) #12
  %95 = inttoptr i64 %42 to i64*
  %96 = load i64, i64* %95, align 8
  call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIiPvEEEE(%"class.std::__1::unique_ptr.1371"* nonnull sret %3, %"class.std::__1::__hash_table.1255"* %35, %"struct.std::__1::__hash_node_base.1259"* nonnull %43) #12
  %97 = load %"struct.std::__1::__hash_node.1339"*, %"struct.std::__1::__hash_node.1339"** %19, align 8
  store %"struct.std::__1::__hash_node.1339"* null, %"struct.std::__1::__hash_node.1339"** %19, align 8
  %98 = icmp eq %"struct.std::__1::__hash_node.1339"* %97, null
  br i1 %98, label %101, label %99

99:                                               ; preds = %94
  %100 = bitcast %"struct.std::__1::__hash_node.1339"* %97 to i8*
  call void @_ZdlPv(i8* %100) #17
  br label %101

101:                                              ; preds = %94, %99
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %18) #12
  br label %105

102:                                              ; preds = %78
  %103 = inttoptr i64 %42 to i64*
  %104 = load i64, i64* %103, align 8
  br label %105

105:                                              ; preds = %101, %102, %77
  %106 = phi i64 [ %72, %77 ], [ %104, %102 ], [ %96, %101 ]
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %36, label %108

108:                                              ; preds = %105
  %109 = load i64, i64* %14, align 8
  br label %40

110:                                              ; preds = %36
  %111 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %6, align 8
  %112 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %111, i64 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #12
  %113 = inttoptr i64 %25 to i64*
  %114 = load i64, i64* %113, align 8
  call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEE(%"class.std::__1::unique_ptr.1362"* nonnull sret %4, %"class.std::__1::__hash_table"* %112, %"struct.std::__1::__hash_node_base"* %26) #12
  %115 = load %"struct.std::__1::__hash_node.1343"*, %"struct.std::__1::__hash_node.1343"** %21, align 8
  store %"struct.std::__1::__hash_node.1343"* null, %"struct.std::__1::__hash_node.1343"** %21, align 8
  %116 = icmp eq %"struct.std::__1::__hash_node.1343"* %115, null
  br i1 %116, label %138, label %117

117:                                              ; preds = %110
  %118 = load i8, i8* %22, align 8, !range !2
  %119 = icmp eq i8 %118, 0
  br i1 %119, label %136, label %120

120:                                              ; preds = %117
  %121 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %115, i64 0, i32 2, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %122 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %121, align 8
  %123 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %122, null
  br i1 %123, label %130, label %124

124:                                              ; preds = %120, %124
  %125 = phi %"struct.std::__1::__hash_node_base.1259"* [ %127, %124 ], [ %122, %120 ]
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %125, i64 0, i32 0
  %127 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %126, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1259"* %125 to i8*
  call void @_ZdlPv(i8* %128) #17
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %127, null
  br i1 %129, label %130, label %124

130:                                              ; preds = %124, %120
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node.1343", %"struct.std::__1::__hash_node.1343"* %115, i64 0, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %132 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %131, align 8
  store %"struct.std::__1::__hash_node_base.1259"** null, %"struct.std::__1::__hash_node_base.1259"*** %131, align 8
  %133 = icmp eq %"struct.std::__1::__hash_node_base.1259"** %132, null
  br i1 %133, label %136, label %134

134:                                              ; preds = %130
  %135 = bitcast %"struct.std::__1::__hash_node_base.1259"** %132 to i8*
  call void @_ZdlPv(i8* %135) #17
  br label %136

136:                                              ; preds = %134, %130, %117
  %137 = bitcast %"struct.std::__1::__hash_node.1343"* %115 to i8*
  call void @_ZdlPv(i8* %137) #17
  br label %138

138:                                              ; preds = %110, %136
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #12
  br label %142

139:                                              ; preds = %36
  %140 = inttoptr i64 %25 to i64*
  %141 = load i64, i64* %140, align 8
  br label %142

142:                                              ; preds = %139, %138
  %143 = phi i64 [ %114, %138 ], [ %141, %139 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #12
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %23, label %24
}

declare void @_ZN2v88internal19ObjectHashTableBaseINS0_18EphemeronHashTableENS0_20ObjectHashTableShapeEE11RemoveEntryENS0_13InternalIndexE(%"class.v8::internal::ObjectHashTableBase"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap38MergeAllocationSitePretenuringFeedbackERKNSt3__113unordered_mapINS0_14AllocationSiteEmNS0_6Object6HasherENS2_8equal_toIS4_EENS2_9allocatorINS2_4pairIKS4_mEEEEEE(%"class.v8::internal::Heap"*, %"class.std::__1::unordered_map.513"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal9Scavenger21AddEphemeronHashTableENS0_18EphemeronHashTableE(%"class.v8::internal::Scavenger"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 5, i32 0
  %4 = load %"class.v8::internal::Worklist.1183"*, %"class.v8::internal::Worklist.1183"** %3, align 8
  %5 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 5, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = sext i32 %6 to i64
  %8 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %4, i64 0, i32 0, i64 %7, i32 0
  %9 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %8, align 8
  %10 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %9, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = icmp eq i64 %11, 128
  br i1 %12, label %16, label %13

13:                                               ; preds = %2
  %14 = add i64 %11, 1
  store i64 %14, i64* %10, align 8
  %15 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %9, i64 0, i32 2, i64 %11, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  br label %32

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %4, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %17) #12
  %18 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %4, i64 0, i32 1, i32 1
  %19 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %9 to i64*
  store i64 %20, i64* %21, align 8
  %22 = ptrtoint %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %9 to i64
  store atomic volatile i64 %22, i64* %19 monotonic, align 8
  %23 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %4, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = atomicrmw add i64* %23, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %17) #12
  %25 = tail call i8* @_Znwm(i64 1040) #17
  %26 = getelementptr inbounds i8, i8* %25, i64 24
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 1016, i1 false) #12
  %27 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %8 to i8**
  store i8* %25, i8** %27, align 8
  %28 = getelementptr inbounds i8, i8* %25, i64 8
  %29 = bitcast i8* %28 to i64*
  store i64 1, i64* %29, align 8
  %30 = getelementptr inbounds i8, i8* %25, i64 16
  %31 = bitcast i8* %30 to i64*
  br label %32

32:                                               ; preds = %13, %16
  %33 = phi i64* [ %15, %13 ], [ %31, %16 ]
  store i64 %1, i64* %33, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19RootScavengeVisitor16VisitRootPointerENS0_4RootEPKcNS0_14FullObjectSlotE(%"class.v8::internal::RootScavengeVisitor"* nocapture readonly, i32, i8* nocapture readnone, i64) unnamed_addr #0 align 2 {
  %5 = inttoptr i64 %3 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = and i64 %6, 1
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %20, label %9

9:                                                ; preds = %4
  %10 = and i64 %6, -262144
  %11 = inttoptr i64 %10 to %"class.v8::internal::BasicMemoryChunk"*
  %12 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %11, i64 0, i32 1
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 24
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %20, label %16

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %0, i64 0, i32 1
  %18 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %17, align 8
  %19 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %18, i64 %3, i64 %6) #12
  br label %20

20:                                               ; preds = %4, %9, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19RootScavengeVisitor15ScavengePointerENS0_14FullObjectSlotE(%"class.v8::internal::RootScavengeVisitor"* nocapture readonly, i64) local_unnamed_addr #0 align 2 {
  %3 = inttoptr i64 %1 to i64*
  %4 = load i64, i64* %3, align 8
  %5 = and i64 %4, 1
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %18, label %7

7:                                                ; preds = %2
  %8 = and i64 %4, -262144
  %9 = inttoptr i64 %8 to %"class.v8::internal::BasicMemoryChunk"*
  %10 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %9, i64 0, i32 1
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 24
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %0, i64 0, i32 1
  %16 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %15, align 8
  %17 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %16, i64 %1, i64 %4)
  br label %18

18:                                               ; preds = %7, %2, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN2v88internal19RootScavengeVisitor17VisitRootPointersENS0_4RootEPKcNS0_14FullObjectSlotES5_(%"class.v8::internal::RootScavengeVisitor"* nocapture readonly, i32, i8* nocapture readnone, i64, i64) unnamed_addr #0 align 2 {
  %6 = icmp ult i64 %3, %4
  br i1 %6, label %7, label %9

7:                                                ; preds = %5
  %8 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %0, i64 0, i32 1
  br label %10

9:                                                ; preds = %26, %5
  ret void

10:                                               ; preds = %7, %26
  %11 = phi i64 [ %3, %7 ], [ %27, %26 ]
  %12 = inttoptr i64 %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = and i64 %13, 1
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %26, label %16

16:                                               ; preds = %10
  %17 = and i64 %13, -262144
  %18 = inttoptr i64 %17 to %"class.v8::internal::BasicMemoryChunk"*
  %19 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = and i64 %20, 24
  %22 = icmp eq i64 %21, 0
  br i1 %22, label %26, label %23

23:                                               ; preds = %16
  %24 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %8, align 8
  %25 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %24, i64 %11, i64 %13) #12
  br label %26

26:                                               ; preds = %10, %16, %23
  %27 = add i64 %11, 8
  %28 = icmp ult i64 %27, %4
  br i1 %28, label %10, label %9
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"*, i64, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = alloca %"class.v8::internal::HeapObject", align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.1327", align 1
  %8 = alloca %"class.v8::internal::AllocationSite", align 8
  %9 = alloca %"class.v8::internal::HeapObject", align 8
  %10 = alloca %"class.v8::internal::HeapObject", align 8
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple.1327", align 1
  %13 = alloca %"class.v8::internal::AllocationSite", align 8
  %14 = alloca %"class.v8::internal::HeapObject", align 8
  %15 = alloca %"class.v8::internal::HeapObject", align 8
  %16 = alloca %"class.std::__1::tuple", align 8
  %17 = alloca %"class.std::__1::tuple.1327", align 1
  %18 = alloca %"class.v8::internal::AllocationSite", align 8
  %19 = alloca %"struct.std::__1::pair.1246", align 8
  %20 = alloca %"class.v8::internal::HeapObject", align 8
  %21 = and i64 %2, -4294967296
  %22 = add i64 %2, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = and i64 %25, 3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %42

29:                                               ; preds = %3
  %30 = add i64 %26, 1
  %31 = inttoptr i64 %1 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 2
  %34 = or i64 %33, %30
  store i64 %34, i64* %31, align 8
  %35 = and i64 %30, -262144
  %36 = inttoptr i64 %35 to %"class.v8::internal::BasicMemoryChunk"*
  %37 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %36, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 24
  %40 = icmp eq i64 %39, 0
  %41 = zext i1 %40 to i32
  br label %1731

42:                                               ; preds = %3
  %43 = bitcast %"class.v8::internal::HeapObject"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43)
  %44 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %20, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %44, align 8
  %45 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %20, i64 %26) #12
  %46 = add i64 %26, 6
  %47 = inttoptr i64 %46 to i8*
  %48 = load atomic i8, i8* %47 monotonic, align 1
  switch i8 %48, label %55 [
    i8 71, label %49
    i8 32, label %52
  ]

49:                                               ; preds = %42
  %50 = load i64, i64* %44, align 8
  %51 = call i32 @_ZN2v88internal9Scavenger18EvacuateThinStringINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ThinStringEi(%"class.v8::internal::Scavenger"* %0, i64 %26, i64 %1, i64 %50, i32 %45) #12
  br label %1729

52:                                               ; preds = %42
  %53 = load i64, i64* %44, align 8
  %54 = call i32 @_ZN2v88internal9Scavenger25EvacuateShortcutCandidateINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ConsStringEi(%"class.v8::internal::Scavenger"* %0, i64 %26, i64 %1, i64 %53, i32 %45) #12
  br label %1729

55:                                               ; preds = %42
  %56 = load i64, i64* %44, align 8
  %57 = icmp ugt i8 %48, 5
  %58 = and i64 %56, -262144
  %59 = inttoptr i64 %58 to %"class.v8::internal::BasicMemoryChunk"*
  %60 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %59, i64 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = and i64 %61, 24
  %63 = icmp ne i64 %62, 0
  %64 = and i64 %61, 32
  %65 = icmp ne i64 %64, 0
  %66 = and i1 %65, %63
  br i1 %66, label %67, label %122, !prof !29

67:                                               ; preds = %55
  %68 = add i64 %56, -1
  %69 = trunc i64 %68 to i32
  %70 = inttoptr i64 %68 to i32*
  %71 = cmpxchg volatile i32* %70, i32 %24, i32 %69 release monotonic
  %72 = extractvalue { i32, i1 } %71, 1
  br i1 %72, label %73, label %1729

73:                                               ; preds = %67
  %74 = bitcast %"struct.std::__1::pair.1246"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %74) #12
  %75 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %78 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %19, i64 0, i32 0
  %79 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %77, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %78, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %74) #12
  %80 = sext i32 %45 to i64
  %81 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %82 = load i64, i64* %81, align 8
  %83 = add i64 %82, %80
  store i64 %83, i64* %81, align 8
  br i1 %57, label %84, label %1729

84:                                               ; preds = %73
  %85 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %86 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %85, align 8
  %87 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %88 = load i32, i32* %87, align 8
  %89 = sext i32 %88 to i64
  %90 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %86, i64 0, i32 1, i32 0, i64 %89, i32 0
  %91 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %90, align 8
  %92 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %91, i64 0, i32 1
  %93 = load i64, i64* %92, align 8
  %94 = icmp eq i64 %93, 4
  br i1 %94, label %100, label %95

95:                                               ; preds = %84
  %96 = add i64 %93, 1
  store i64 %96, i64* %92, align 8
  %97 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %91, i64 0, i32 2, i64 %93, i32 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %97, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %91, i64 0, i32 2, i64 %93, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %91, i64 0, i32 2, i64 %93, i32 2
  store i32 %45, i32* %99, align 8
  br label %1729

100:                                              ; preds = %84
  %101 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %86, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %101) #12
  %102 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %86, i64 0, i32 1, i32 1, i32 1
  %103 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %102 to i64*
  %104 = load i64, i64* %103, align 8
  %105 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %91 to i64*
  store i64 %104, i64* %105, align 8
  %106 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %91 to i64
  store atomic volatile i64 %106, i64* %103 monotonic, align 8
  %107 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %86, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = atomicrmw add i64* %107, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %101) #12
  %109 = call i8* @_Znwm(i64 112) #17
  %110 = getelementptr inbounds i8, i8* %109, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 16, i1 false) #12
  %111 = getelementptr inbounds i8, i8* %109, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #12
  %112 = getelementptr inbounds i8, i8* %109, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #12
  %113 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %90 to i8**
  store i8* %109, i8** %113, align 8
  %114 = getelementptr inbounds i8, i8* %109, i64 8
  %115 = bitcast i8* %114 to i64*
  store i64 1, i64* %115, align 8
  %116 = getelementptr inbounds i8, i8* %109, i64 16
  %117 = bitcast i8* %116 to i64*
  store i64 %56, i64* %117, align 8
  %118 = getelementptr inbounds i8, i8* %109, i64 24
  %119 = bitcast i8* %118 to i64*
  store i64 %26, i64* %119, align 8
  %120 = getelementptr inbounds i8, i8* %109, i64 32
  %121 = bitcast i8* %120 to i32*
  store i32 %45, i32* %121, align 8
  br label %1729

122:                                              ; preds = %55
  %123 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %124 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %123, align 8
  %125 = add i64 %56, -1
  %126 = and i64 %125, -262144
  %127 = inttoptr i64 %126 to %"class.v8::internal::Page"*
  %128 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %124, i64 0, i32 24
  %129 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %128, align 8
  %130 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %129, i64 0, i32 5, i32 5
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 1
  %133 = load i64, i64* %132, align 8
  %134 = and i64 %133, 524288
  %135 = icmp eq i64 %134, 0
  br i1 %135, label %146, label %136

136:                                              ; preds = %122
  %137 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 3
  %138 = load i64, i64* %137, align 8
  %139 = icmp ugt i64 %138, %131
  br i1 %139, label %677, label %140

140:                                              ; preds = %136
  %141 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 4
  %142 = load i64, i64* %141, align 32
  %143 = icmp ult i64 %142, %131
  %144 = icmp ugt i64 %131, %125
  %145 = or i1 %144, %143
  br i1 %145, label %677, label %146

146:                                              ; preds = %140, %122
  %147 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %148 = icmp sgt i32 %45, 8192
  br i1 %148, label %149, label %174

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %151 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %150, align 8
  %152 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %151, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %152) #12
  %153 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %151, i64 0, i32 0
  %154 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %151, i64 0, i32 0, i32 1, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %151, i64 0, i32 0, i32 1, i32 2
  %157 = load i64, i64* %156, align 8
  %158 = sext i32 %45 to i64
  %159 = add i64 %155, %158
  %160 = icmp ult i64 %157, %159
  br i1 %160, label %170, label %161

161:                                              ; preds = %149
  %162 = add i64 %155, 1
  store i64 %159, i64* %154, align 8
  %163 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %164 = icmp eq i8 %163, 0
  br i1 %164, label %166, label %165

165:                                              ; preds = %161
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %153, i32 2) #12
  br label %166

166:                                              ; preds = %165, %161
  %167 = and i64 %162, 1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %172, !prof !29

169:                                              ; preds = %166
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

170:                                              ; preds = %149
  %171 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %151, i32 %45, i32 0, i32 2) #12
  br label %172

172:                                              ; preds = %170, %166
  %173 = phi i64 [ %171, %170 ], [ %162, %166 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %152) #12
  br label %176

174:                                              ; preds = %146
  %175 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %147, i32 %45, i32 0) #12
  br label %176

176:                                              ; preds = %174, %172
  %177 = phi i64 [ %173, %172 ], [ %175, %174 ]
  %178 = and i64 %177, 1
  %179 = icmp eq i64 %178, 0
  br i1 %179, label %677, label %180

180:                                              ; preds = %176
  %181 = add i64 %177, -1
  %182 = inttoptr i64 %181 to i32*
  store atomic volatile i32 %24, i32* %182 monotonic, align 4
  %183 = add i64 %177, 3
  %184 = add i64 %56, 3
  %185 = add nsw i32 %45, -4
  %186 = sdiv i32 %185, 4
  %187 = sext i32 %186 to i64
  %188 = inttoptr i64 %183 to i32*
  %189 = inttoptr i64 %183 to i8*
  %190 = inttoptr i64 %184 to i32*
  %191 = inttoptr i64 %184 to i8*
  %192 = inttoptr i64 %183 to i8*
  %193 = add i32 %45, -1
  %194 = icmp ult i32 %193, 7
  br i1 %194, label %356, label %195

195:                                              ; preds = %180
  %196 = icmp ult i32 %186, 16
  br i1 %196, label %197, label %342

197:                                              ; preds = %195
  %198 = icmp ult i32 %186, 8
  br i1 %198, label %289, label %199

199:                                              ; preds = %197
  %200 = getelementptr i32, i32* %188, i64 %187
  %201 = bitcast i32* %200 to i8*
  %202 = getelementptr i32, i32* %190, i64 %187
  %203 = bitcast i32* %202 to i8*
  %204 = icmp ult i8* %189, %203
  %205 = icmp ult i8* %191, %201
  %206 = and i1 %204, %205
  br i1 %206, label %289, label %207

207:                                              ; preds = %199
  %208 = and i64 %187, -8
  %209 = getelementptr i32, i32* %190, i64 %208
  %210 = sub nsw i64 %187, %208
  %211 = getelementptr i32, i32* %188, i64 %208
  %212 = add nsw i64 %208, -8
  %213 = lshr exact i64 %212, 3
  %214 = add nuw nsw i64 %213, 1
  %215 = and i64 %214, 3
  %216 = icmp ult i64 %212, 24
  br i1 %216, label %268, label %217

217:                                              ; preds = %207
  %218 = sub nsw i64 %214, %215
  br label %219

219:                                              ; preds = %219, %217
  %220 = phi i64 [ 0, %217 ], [ %265, %219 ]
  %221 = phi i64 [ %218, %217 ], [ %266, %219 ]
  %222 = getelementptr i32, i32* %190, i64 %220
  %223 = getelementptr i32, i32* %188, i64 %220
  %224 = bitcast i32* %222 to <4 x i32>*
  %225 = load <4 x i32>, <4 x i32>* %224, align 4, !alias.scope !71
  %226 = getelementptr i32, i32* %222, i64 4
  %227 = bitcast i32* %226 to <4 x i32>*
  %228 = load <4 x i32>, <4 x i32>* %227, align 4, !alias.scope !71
  %229 = bitcast i32* %223 to <4 x i32>*
  store <4 x i32> %225, <4 x i32>* %229, align 4, !alias.scope !74, !noalias !71
  %230 = getelementptr i32, i32* %223, i64 4
  %231 = bitcast i32* %230 to <4 x i32>*
  store <4 x i32> %228, <4 x i32>* %231, align 4, !alias.scope !74, !noalias !71
  %232 = or i64 %220, 8
  %233 = getelementptr i32, i32* %190, i64 %232
  %234 = getelementptr i32, i32* %188, i64 %232
  %235 = bitcast i32* %233 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4, !alias.scope !71
  %237 = getelementptr i32, i32* %233, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4, !alias.scope !71
  %240 = bitcast i32* %234 to <4 x i32>*
  store <4 x i32> %236, <4 x i32>* %240, align 4, !alias.scope !74, !noalias !71
  %241 = getelementptr i32, i32* %234, i64 4
  %242 = bitcast i32* %241 to <4 x i32>*
  store <4 x i32> %239, <4 x i32>* %242, align 4, !alias.scope !74, !noalias !71
  %243 = or i64 %220, 16
  %244 = getelementptr i32, i32* %190, i64 %243
  %245 = getelementptr i32, i32* %188, i64 %243
  %246 = bitcast i32* %244 to <4 x i32>*
  %247 = load <4 x i32>, <4 x i32>* %246, align 4, !alias.scope !71
  %248 = getelementptr i32, i32* %244, i64 4
  %249 = bitcast i32* %248 to <4 x i32>*
  %250 = load <4 x i32>, <4 x i32>* %249, align 4, !alias.scope !71
  %251 = bitcast i32* %245 to <4 x i32>*
  store <4 x i32> %247, <4 x i32>* %251, align 4, !alias.scope !74, !noalias !71
  %252 = getelementptr i32, i32* %245, i64 4
  %253 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> %250, <4 x i32>* %253, align 4, !alias.scope !74, !noalias !71
  %254 = or i64 %220, 24
  %255 = getelementptr i32, i32* %190, i64 %254
  %256 = getelementptr i32, i32* %188, i64 %254
  %257 = bitcast i32* %255 to <4 x i32>*
  %258 = load <4 x i32>, <4 x i32>* %257, align 4, !alias.scope !71
  %259 = getelementptr i32, i32* %255, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  %261 = load <4 x i32>, <4 x i32>* %260, align 4, !alias.scope !71
  %262 = bitcast i32* %256 to <4 x i32>*
  store <4 x i32> %258, <4 x i32>* %262, align 4, !alias.scope !74, !noalias !71
  %263 = getelementptr i32, i32* %256, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  store <4 x i32> %261, <4 x i32>* %264, align 4, !alias.scope !74, !noalias !71
  %265 = add i64 %220, 32
  %266 = add i64 %221, -4
  %267 = icmp eq i64 %266, 0
  br i1 %267, label %268, label %219, !llvm.loop !76

268:                                              ; preds = %219, %207
  %269 = phi i64 [ 0, %207 ], [ %265, %219 ]
  %270 = icmp eq i64 %215, 0
  br i1 %270, label %287, label %271

271:                                              ; preds = %268, %271
  %272 = phi i64 [ %284, %271 ], [ %269, %268 ]
  %273 = phi i64 [ %285, %271 ], [ %215, %268 ]
  %274 = getelementptr i32, i32* %190, i64 %272
  %275 = getelementptr i32, i32* %188, i64 %272
  %276 = bitcast i32* %274 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !71
  %278 = getelementptr i32, i32* %274, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4, !alias.scope !71
  %281 = bitcast i32* %275 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %281, align 4, !alias.scope !74, !noalias !71
  %282 = getelementptr i32, i32* %275, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %280, <4 x i32>* %283, align 4, !alias.scope !74, !noalias !71
  %284 = add i64 %272, 8
  %285 = add i64 %273, -1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %271, !llvm.loop !78

287:                                              ; preds = %271, %268
  %288 = icmp eq i64 %208, %187
  br i1 %288, label %356, label %289

289:                                              ; preds = %287, %199, %197
  %290 = phi i32* [ %190, %199 ], [ %190, %197 ], [ %209, %287 ]
  %291 = phi i64 [ %187, %199 ], [ %187, %197 ], [ %210, %287 ]
  %292 = phi i32* [ %188, %199 ], [ %188, %197 ], [ %211, %287 ]
  %293 = add nsw i64 %291, -1
  %294 = and i64 %291, 7
  %295 = icmp eq i64 %294, 0
  br i1 %295, label %307, label %296

296:                                              ; preds = %289, %296
  %297 = phi i32* [ %302, %296 ], [ %290, %289 ]
  %298 = phi i64 [ %301, %296 ], [ %291, %289 ]
  %299 = phi i32* [ %304, %296 ], [ %292, %289 ]
  %300 = phi i64 [ %305, %296 ], [ %294, %289 ]
  %301 = add i64 %298, -1
  %302 = getelementptr inbounds i32, i32* %297, i64 1
  %303 = load i32, i32* %297, align 4
  %304 = getelementptr inbounds i32, i32* %299, i64 1
  store i32 %303, i32* %299, align 4
  %305 = add i64 %300, -1
  %306 = icmp eq i64 %305, 0
  br i1 %306, label %307, label %296, !llvm.loop !79

307:                                              ; preds = %296, %289
  %308 = phi i32* [ %290, %289 ], [ %302, %296 ]
  %309 = phi i64 [ %291, %289 ], [ %301, %296 ]
  %310 = phi i32* [ %292, %289 ], [ %304, %296 ]
  %311 = icmp ult i64 %293, 7
  br i1 %311, label %356, label %312

312:                                              ; preds = %307, %312
  %313 = phi i32* [ %338, %312 ], [ %308, %307 ]
  %314 = phi i64 [ %337, %312 ], [ %309, %307 ]
  %315 = phi i32* [ %340, %312 ], [ %310, %307 ]
  %316 = getelementptr inbounds i32, i32* %313, i64 1
  %317 = load i32, i32* %313, align 4
  %318 = getelementptr inbounds i32, i32* %315, i64 1
  store i32 %317, i32* %315, align 4
  %319 = getelementptr inbounds i32, i32* %313, i64 2
  %320 = load i32, i32* %316, align 4
  %321 = getelementptr inbounds i32, i32* %315, i64 2
  store i32 %320, i32* %318, align 4
  %322 = getelementptr inbounds i32, i32* %313, i64 3
  %323 = load i32, i32* %319, align 4
  %324 = getelementptr inbounds i32, i32* %315, i64 3
  store i32 %323, i32* %321, align 4
  %325 = getelementptr inbounds i32, i32* %313, i64 4
  %326 = load i32, i32* %322, align 4
  %327 = getelementptr inbounds i32, i32* %315, i64 4
  store i32 %326, i32* %324, align 4
  %328 = getelementptr inbounds i32, i32* %313, i64 5
  %329 = load i32, i32* %325, align 4
  %330 = getelementptr inbounds i32, i32* %315, i64 5
  store i32 %329, i32* %327, align 4
  %331 = getelementptr inbounds i32, i32* %313, i64 6
  %332 = load i32, i32* %328, align 4
  %333 = getelementptr inbounds i32, i32* %315, i64 6
  store i32 %332, i32* %330, align 4
  %334 = getelementptr inbounds i32, i32* %313, i64 7
  %335 = load i32, i32* %331, align 4
  %336 = getelementptr inbounds i32, i32* %315, i64 7
  store i32 %335, i32* %333, align 4
  %337 = add i64 %314, -8
  %338 = getelementptr inbounds i32, i32* %313, i64 8
  %339 = load i32, i32* %334, align 4
  %340 = getelementptr inbounds i32, i32* %315, i64 8
  store i32 %339, i32* %336, align 4
  %341 = icmp eq i64 %337, 0
  br i1 %341, label %356, label %312, !llvm.loop !80

342:                                              ; preds = %195
  %343 = inttoptr i64 %184 to i8*
  %344 = shl nsw i64 %187, 2
  %345 = add nsw i64 %344, -4
  %346 = lshr exact i64 %345, 2
  switch i64 %346, label %355 [
    i64 3, label %354
    i64 1, label %349
    i64 2, label %353
    i64 0, label %347
  ]

347:                                              ; preds = %342
  %348 = load i32, i32* %190, align 1
  store i32 %348, i32* %188, align 1
  br label %356

349:                                              ; preds = %342
  %350 = inttoptr i64 %184 to i64*
  %351 = inttoptr i64 %183 to i64*
  %352 = load i64, i64* %350, align 1
  store i64 %352, i64* %351, align 1
  br label %356

353:                                              ; preds = %342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %343, i64 12, i1 false) #12
  br label %356

354:                                              ; preds = %342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %343, i64 16, i1 false) #12
  br label %356

355:                                              ; preds = %342
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %192, i8* align 1 %343, i64 %344, i1 false) #12
  br label %356

356:                                              ; preds = %307, %312, %287, %355, %354, %353, %349, %347, %180
  %357 = trunc i64 %181 to i32
  %358 = inttoptr i64 %125 to i32*
  %359 = cmpxchg volatile i32* %358, i32 %24, i32 %357 release monotonic
  %360 = extractvalue { i32, i1 } %359, 1
  br i1 %360, label %361, label %570

361:                                              ; preds = %356
  %362 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %363 = load i8, i8* %362, align 8, !range !2
  %364 = icmp eq i8 %363, 0
  br i1 %364, label %367, label %365, !prof !60

365:                                              ; preds = %361
  %366 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %123, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %366, i64 %177, i64 %56, i32 %45) #12
  br label %367

367:                                              ; preds = %365, %361
  %368 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %369 = load i8, i8* %368, align 1, !range !2
  %370 = icmp eq i8 %369, 0
  br i1 %370, label %498, label %371

371:                                              ; preds = %367
  %372 = and i64 %177, -262144
  %373 = or i64 %372, 272
  %374 = sub i64 %177, %372
  %375 = trunc i64 %374 to i32
  %376 = lshr i32 %375, 2
  %377 = and i32 %376, 31
  %378 = shl i32 1, %377
  %379 = inttoptr i64 %373 to i32*
  %380 = lshr i64 %374, 7
  %381 = and i64 %380, 33554431
  %382 = getelementptr inbounds i32, i32* %379, i64 %381
  %383 = load atomic i32, i32* %382 acquire, align 4
  %384 = and i32 %383, %378
  %385 = icmp eq i32 %384, 0
  br i1 %385, label %395, label %386

386:                                              ; preds = %371
  %387 = shl i32 %378, 1
  %388 = icmp eq i32 %387, 0
  %389 = getelementptr inbounds i32, i32* %382, i64 1
  %390 = select i1 %388, i32 1, i32 %387
  %391 = select i1 %388, i32* %389, i32* %382
  %392 = load atomic i32, i32* %391 acquire, align 4
  %393 = and i32 %392, %390
  %394 = icmp eq i32 %393, 0
  br i1 %394, label %395, label %498

395:                                              ; preds = %386, %371
  %396 = or i64 %58, 272
  %397 = sub i64 %56, %58
  %398 = trunc i64 %397 to i32
  %399 = lshr i32 %398, 2
  %400 = and i32 %399, 31
  %401 = shl i32 1, %400
  %402 = inttoptr i64 %396 to i32*
  %403 = lshr i64 %397, 7
  %404 = and i64 %403, 33554431
  %405 = getelementptr inbounds i32, i32* %402, i64 %404
  %406 = load atomic i32, i32* %405 acquire, align 4
  %407 = and i32 %406, %401
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %429, label %409

409:                                              ; preds = %395
  %410 = shl i32 %401, 1
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds i32, i32* %405, i64 1
  %413 = select i1 %411, i32 1, i32 %410
  %414 = select i1 %411, i32* %412, i32* %405
  %415 = load atomic i32, i32* %414 acquire, align 4
  %416 = and i32 %415, %413
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %429

418:                                              ; preds = %409
  %419 = load atomic i32, i32* %382 monotonic, align 4
  br label %420

420:                                              ; preds = %424, %418
  %421 = phi i32 [ %419, %418 ], [ %427, %424 ]
  %422 = and i32 %421, %378
  %423 = icmp eq i32 %422, %378
  br i1 %423, label %498, label %424

424:                                              ; preds = %420
  %425 = or i32 %421, %378
  %426 = cmpxchg volatile i32* %382, i32 %421, i32 %425 release monotonic
  %427 = extractvalue { i32, i1 } %426, 0
  %428 = extractvalue { i32, i1 } %426, 1
  br i1 %428, label %498, label %420

429:                                              ; preds = %409, %395
  %430 = load atomic i32, i32* %405 acquire, align 4
  %431 = and i32 %430, %401
  %432 = icmp eq i32 %431, 0
  br i1 %432, label %498, label %433

433:                                              ; preds = %429
  %434 = shl i32 %401, 1
  %435 = icmp eq i32 %434, 0
  %436 = getelementptr inbounds i32, i32* %405, i64 1
  %437 = select i1 %435, i32 1, i32 %434
  %438 = select i1 %435, i32* %436, i32* %405
  %439 = load atomic i32, i32* %438 acquire, align 4
  %440 = and i32 %439, %437
  %441 = icmp eq i32 %440, 0
  br i1 %441, label %498, label %442

442:                                              ; preds = %433
  %443 = load atomic i32, i32* %382 monotonic, align 4
  br label %444

444:                                              ; preds = %448, %442
  %445 = phi i32 [ %443, %442 ], [ %451, %448 ]
  %446 = and i32 %445, %378
  %447 = icmp eq i32 %446, %378
  br i1 %447, label %498, label %448

448:                                              ; preds = %444
  %449 = or i32 %445, %378
  %450 = cmpxchg volatile i32* %382, i32 %445, i32 %449 release monotonic
  %451 = extractvalue { i32, i1 } %450, 0
  %452 = extractvalue { i32, i1 } %450, 1
  br i1 %452, label %453, label %444

453:                                              ; preds = %448
  %454 = bitcast %"class.v8::internal::HeapObject"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %454) #12
  %455 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %14, i64 0, i32 0, i32 0, i32 0
  store i64 %177, i64* %455, align 8
  %456 = xor i64 %372, -1
  %457 = add i64 %177, %456
  %458 = trunc i64 %457 to i32
  %459 = lshr i32 %458, 2
  %460 = and i32 %459, 31
  %461 = shl i32 1, %460
  %462 = lshr i64 %457, 7
  %463 = and i64 %462, 33554431
  %464 = getelementptr inbounds i32, i32* %379, i64 %463
  %465 = load atomic i32, i32* %464 acquire, align 4
  %466 = and i32 %465, %461
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %497, label %468

468:                                              ; preds = %453
  %469 = shl i32 %461, 1
  %470 = icmp eq i32 %469, 0
  %471 = getelementptr inbounds i32, i32* %464, i64 1
  %472 = select i1 %470, i32 1, i32 %469
  %473 = select i1 %470, i32* %471, i32* %464
  %474 = load atomic i32, i32* %473 monotonic, align 4
  br label %475

475:                                              ; preds = %479, %468
  %476 = phi i32 [ %474, %468 ], [ %482, %479 ]
  %477 = and i32 %476, %472
  %478 = icmp eq i32 %477, %472
  br i1 %478, label %497, label %479

479:                                              ; preds = %475
  %480 = or i32 %476, %472
  %481 = cmpxchg volatile i32* %473, i32 %476, i32 %480 release monotonic
  %482 = extractvalue { i32, i1 } %481, 0
  %483 = extractvalue { i32, i1 } %481, 1
  br i1 %483, label %484, label %475

484:                                              ; preds = %479
  %485 = inttoptr i64 %372 to %"class.v8::internal::MemoryChunk"*
  %486 = load i64, i64* %455, align 8
  %487 = and i64 %486, -4294967296
  %488 = add i64 %486, -1
  %489 = inttoptr i64 %488 to i32*
  %490 = load atomic i32, i32* %489 monotonic, align 4
  %491 = zext i32 %490 to i64
  %492 = or i64 %487, %491
  %493 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %14, i64 %492) #12
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %485, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %496 = atomicrmw add i64* %495, i64 %494 seq_cst
  br label %497

497:                                              ; preds = %475, %484, %453
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %454) #12
  br label %498

498:                                              ; preds = %424, %420, %444, %497, %433, %429, %386, %367
  %499 = bitcast %"class.v8::internal::Heap"** %123 to i64*
  %500 = load i64, i64* %499, align 8
  %501 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %502 = icmp eq i8 %501, 0
  br i1 %502, label %607, label %503

503:                                              ; preds = %498
  %504 = add i64 %26, 7
  %505 = inttoptr i64 %504 to i16*
  %506 = load atomic i16, i16* %505 monotonic, align 2
  switch i16 %506, label %607 [
    i16 1085, label %507
    i16 1057, label %507
  ]

507:                                              ; preds = %503, %503
  %508 = bitcast %"class.v8::internal::HeapObject"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %508) #12
  %509 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %15, i64 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %509, align 8
  %510 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %15, i64 %26) #12
  %511 = sext i32 %510 to i64
  %512 = add i64 %125, %511
  %513 = add i64 %512, 4
  %514 = and i64 %513, -262144
  %515 = inttoptr i64 %514 to %"class.v8::internal::Page"*
  %516 = icmp eq %"class.v8::internal::Page"* %127, %515
  br i1 %516, label %517, label %547

517:                                              ; preds = %507
  %518 = add i64 %56, %511
  %519 = add i64 %500, -41416
  %520 = inttoptr i64 %519 to %"class.v8::internal::Isolate"*
  %521 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %520, i64 0, i32 0, i32 7, i32 0, i64 534
  %522 = load i64, i64* %521, align 8
  %523 = inttoptr i64 %512 to i32*
  %524 = load atomic i32, i32* %523 monotonic, align 4
  %525 = trunc i64 %522 to i32
  %526 = icmp eq i32 %524, %525
  br i1 %526, label %527, label %547

527:                                              ; preds = %517
  %528 = load i64, i64* %132, align 8
  %529 = and i64 %528, 524288
  %530 = icmp eq i64 %529, 0
  br i1 %530, label %548, label %531

531:                                              ; preds = %527
  %532 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 8, i32 0
  %533 = bitcast %"struct.std::__1::__atomic_base.69"* %532 to i64*
  %534 = load atomic i64, i64* %533 seq_cst, align 64
  %535 = inttoptr i64 %534 to %"class.v8::internal::SemiSpace"*
  %536 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %535, i64 0, i32 5
  %537 = load i64, i64* %536, align 8
  %538 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 3
  %539 = load i64, i64* %538, align 8
  %540 = icmp ugt i64 %539, %537
  br i1 %540, label %547, label %541

541:                                              ; preds = %531
  %542 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 4
  %543 = load i64, i64* %542, align 32
  %544 = icmp ule i64 %543, %537
  %545 = icmp ult i64 %125, %537
  %546 = or i1 %545, %544
  br i1 %546, label %547, label %548

547:                                              ; preds = %541, %531, %517, %507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #12
  br label %607

548:                                              ; preds = %541, %527
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %508) #12
  %549 = trunc i64 %518 to i32
  %550 = icmp eq i32 %549, 0
  br i1 %550, label %607, label %551

551:                                              ; preds = %548
  %552 = and i64 %518, -4294967296
  %553 = add i64 %518, 3
  %554 = inttoptr i64 %553 to i32*
  %555 = load i32, i32* %554, align 4
  %556 = zext i32 %555 to i64
  %557 = or i64 %552, %556
  %558 = bitcast %"class.v8::internal::AllocationSite"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #12
  %559 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %557, i64* %559, align 8
  %560 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %561 = bitcast %"class.std::__1::tuple"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %561) #12
  %562 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %18, %"class.v8::internal::AllocationSite"** %562, align 8
  %563 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %563) #12
  %564 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %560, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %16, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %17) #12
  %565 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %564, 0
  %566 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %565, i64 3
  %567 = bitcast %"struct.std::__1::__hash_node_base.518"* %566 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %563) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %561) #12
  %568 = load i64, i64* %567, align 8
  %569 = add i64 %568, 1
  store i64 %569, i64* %567, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #12
  br label %607

570:                                              ; preds = %356
  %571 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %572 = load i64, i64* %571, align 8
  %573 = icmp eq i64 %572, 0
  br i1 %573, label %579, label %574

574:                                              ; preds = %570
  %575 = sext i32 %45 to i64
  %576 = sub i64 %572, %575
  %577 = icmp eq i64 %576, %181
  br i1 %577, label %578, label %579

578:                                              ; preds = %574
  store i64 %181, i64* %571, align 8
  br label %583

579:                                              ; preds = %574, %570
  %580 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %147, i64 0, i32 0
  %581 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %580, align 8
  %582 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %581, i64 %181, i32 %45, i32 1) #12
  br label %583

583:                                              ; preds = %579, %578
  %584 = and i64 %56, -4294967296
  %585 = load atomic i32, i32* %358 acquire, align 4
  %586 = zext i32 %585 to i64
  %587 = or i64 %584, %586
  %588 = add i64 %587, 1
  %589 = inttoptr i64 %1 to i64*
  %590 = load i64, i64* %589, align 8
  %591 = and i64 %590, 2
  %592 = or i64 %588, %591
  store i64 %592, i64* %589, align 8
  %593 = and i64 %588, 1
  %594 = icmp ne i64 %593, 0
  %595 = trunc i64 %592 to i32
  %596 = icmp ne i32 %595, 3
  %597 = and i1 %594, %596
  br i1 %597, label %598, label %1729

598:                                              ; preds = %583
  %599 = and i64 %588, -262144
  %600 = inttoptr i64 %599 to %"class.v8::internal::BasicMemoryChunk"*
  %601 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %600, i64 0, i32 1
  %602 = load i64, i64* %601, align 8
  %603 = lshr i64 %602, 4
  %604 = trunc i64 %603 to i32
  %605 = and i32 %604, 1
  %606 = xor i32 %605, 1
  br label %1729

607:                                              ; preds = %551, %548, %547, %503, %498
  %608 = inttoptr i64 %1 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = and i64 %609, 2
  %611 = or i64 %610, %177
  store i64 %611, i64* %608, align 8
  br i1 %57, label %612, label %672

612:                                              ; preds = %607
  %613 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %614 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %613, align 8
  %615 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %616 = load i32, i32* %615, align 8
  %617 = sext i32 %616 to i64
  %618 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %614, i64 0, i32 0, i64 %617, i32 0
  %619 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %618, align 8
  %620 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %619, i64 0, i32 1
  %621 = load i64, i64* %620, align 8
  %622 = icmp eq i64 %621, 256
  br i1 %622, label %627, label %623

623:                                              ; preds = %612
  %624 = add i64 %621, 1
  store i64 %624, i64* %620, align 8
  %625 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %619, i64 0, i32 2, i64 %621, i32 0, i32 0, i32 0, i32 0
  store i64 %177, i64* %625, align 8
  %626 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %619, i64 0, i32 2, i64 %621, i32 1
  store i32 %45, i32* %626, align 8
  br label %672

627:                                              ; preds = %612
  %628 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %614, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %628) #12
  %629 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %614, i64 0, i32 1, i32 1
  %630 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %629 to i64*
  %631 = load i64, i64* %630, align 8
  %632 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %619 to i64*
  store i64 %631, i64* %632, align 8
  %633 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %619 to i64
  store atomic volatile i64 %633, i64* %630 monotonic, align 8
  %634 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %614, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %635 = atomicrmw add i64* %634, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %628) #12
  %636 = call i8* @_Znwm(i64 4112) #17
  %637 = getelementptr inbounds i8, i8* %636, i64 8
  %638 = bitcast i8* %637 to i64*
  store i64 0, i64* %638, align 8
  %639 = getelementptr inbounds i8, i8* %636, i64 16
  %640 = bitcast i8* %639 to %"struct.std::__1::pair.1282"*
  %641 = getelementptr inbounds i8, i8* %636, i64 4112
  %642 = bitcast i8* %641 to %"struct.std::__1::pair.1282"*
  br label %643

643:                                              ; preds = %643, %627
  %644 = phi %"struct.std::__1::pair.1282"* [ %640, %627 ], [ %661, %643 ]
  %645 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %645, align 8
  %646 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 0, i32 1
  store i32 0, i32* %646, align 8
  %647 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %647, align 8
  %648 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 1, i32 1
  store i32 0, i32* %648, align 8
  %649 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %649, align 8
  %650 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 2, i32 1
  store i32 0, i32* %650, align 8
  %651 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %651, align 8
  %652 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 3, i32 1
  store i32 0, i32* %652, align 8
  %653 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %653, align 8
  %654 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 4, i32 1
  store i32 0, i32* %654, align 8
  %655 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %655, align 8
  %656 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 5, i32 1
  store i32 0, i32* %656, align 8
  %657 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %657, align 8
  %658 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 6, i32 1
  store i32 0, i32* %658, align 8
  %659 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %659, align 8
  %660 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 7, i32 1
  store i32 0, i32* %660, align 8
  %661 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %644, i64 8
  %662 = icmp eq %"struct.std::__1::pair.1282"* %661, %642
  br i1 %662, label %663, label %643

663:                                              ; preds = %643
  %664 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %618 to i8**
  store i8* %636, i8** %664, align 8
  %665 = bitcast i8* %636 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %666 = load i64, i64* %638, align 8
  %667 = icmp eq i64 %666, 256
  br i1 %667, label %672, label %668

668:                                              ; preds = %663
  %669 = add i64 %666, 1
  store i64 %669, i64* %638, align 8
  %670 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %665, i64 0, i32 2, i64 %666, i32 0, i32 0, i32 0, i32 0
  store i64 %177, i64* %670, align 8
  %671 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %665, i64 0, i32 2, i64 %666, i32 1
  store i32 %45, i32* %671, align 8
  br label %672

672:                                              ; preds = %668, %663, %623, %607
  %673 = sext i32 %45 to i64
  %674 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %675 = load i64, i64* %674, align 8
  %676 = add i64 %675, %673
  store i64 %676, i64* %674, align 8
  br label %1729

677:                                              ; preds = %176, %140, %136
  %678 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %679 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %680 = load i64, i64* %679, align 8
  %681 = sext i32 %45 to i64
  %682 = add i64 %680, %681
  %683 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %684 = load i64, i64* %683, align 8
  %685 = icmp ugt i64 %682, %684
  br i1 %685, label %686, label %691

686:                                              ; preds = %677
  %687 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %688 = load i32, i32* %687, align 8
  %689 = sext i32 %688 to i64
  %690 = shl nsw i64 %689, 1
  br label %696

691:                                              ; preds = %677
  store i64 %682, i64* %679, align 8
  %692 = add i64 %680, 1
  %693 = and i64 %692, 1
  %694 = icmp eq i64 %693, 0
  br i1 %694, label %695, label %696, !prof !29

695:                                              ; preds = %691
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

696:                                              ; preds = %691, %686
  %697 = phi i64 [ %690, %686 ], [ %692, %691 ]
  %698 = and i64 %697, 1
  %699 = icmp eq i64 %698, 0
  br i1 %699, label %700, label %704

700:                                              ; preds = %696
  %701 = call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %678, i32 %45, i32 0, i32 2) #12
  %702 = and i64 %701, 1
  %703 = icmp eq i64 %702, 0
  br i1 %703, label %1199, label %704

704:                                              ; preds = %700, %696
  %705 = phi i64 [ %701, %700 ], [ %697, %696 ]
  %706 = add i64 %705, -1
  %707 = inttoptr i64 %706 to i32*
  store atomic volatile i32 %24, i32* %707 monotonic, align 4
  %708 = add i64 %705, 3
  %709 = add i64 %56, 3
  %710 = add nsw i32 %45, -4
  %711 = sdiv i32 %710, 4
  %712 = sext i32 %711 to i64
  %713 = inttoptr i64 %708 to i32*
  %714 = inttoptr i64 %708 to i8*
  %715 = inttoptr i64 %709 to i32*
  %716 = inttoptr i64 %709 to i8*
  %717 = inttoptr i64 %708 to i8*
  %718 = add i32 %45, -1
  %719 = icmp ult i32 %718, 7
  br i1 %719, label %881, label %720

720:                                              ; preds = %704
  %721 = icmp ult i32 %711, 16
  br i1 %721, label %722, label %867

722:                                              ; preds = %720
  %723 = icmp ult i32 %711, 8
  br i1 %723, label %814, label %724

724:                                              ; preds = %722
  %725 = getelementptr i32, i32* %713, i64 %712
  %726 = bitcast i32* %725 to i8*
  %727 = getelementptr i32, i32* %715, i64 %712
  %728 = bitcast i32* %727 to i8*
  %729 = icmp ult i8* %714, %728
  %730 = icmp ult i8* %716, %726
  %731 = and i1 %729, %730
  br i1 %731, label %814, label %732

732:                                              ; preds = %724
  %733 = and i64 %712, -8
  %734 = getelementptr i32, i32* %715, i64 %733
  %735 = sub nsw i64 %712, %733
  %736 = getelementptr i32, i32* %713, i64 %733
  %737 = add nsw i64 %733, -8
  %738 = lshr exact i64 %737, 3
  %739 = add nuw nsw i64 %738, 1
  %740 = and i64 %739, 3
  %741 = icmp ult i64 %737, 24
  br i1 %741, label %793, label %742

742:                                              ; preds = %732
  %743 = sub nsw i64 %739, %740
  br label %744

744:                                              ; preds = %744, %742
  %745 = phi i64 [ 0, %742 ], [ %790, %744 ]
  %746 = phi i64 [ %743, %742 ], [ %791, %744 ]
  %747 = getelementptr i32, i32* %715, i64 %745
  %748 = getelementptr i32, i32* %713, i64 %745
  %749 = bitcast i32* %747 to <4 x i32>*
  %750 = load <4 x i32>, <4 x i32>* %749, align 4, !alias.scope !81
  %751 = getelementptr i32, i32* %747, i64 4
  %752 = bitcast i32* %751 to <4 x i32>*
  %753 = load <4 x i32>, <4 x i32>* %752, align 4, !alias.scope !81
  %754 = bitcast i32* %748 to <4 x i32>*
  store <4 x i32> %750, <4 x i32>* %754, align 4, !alias.scope !84, !noalias !81
  %755 = getelementptr i32, i32* %748, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %753, <4 x i32>* %756, align 4, !alias.scope !84, !noalias !81
  %757 = or i64 %745, 8
  %758 = getelementptr i32, i32* %715, i64 %757
  %759 = getelementptr i32, i32* %713, i64 %757
  %760 = bitcast i32* %758 to <4 x i32>*
  %761 = load <4 x i32>, <4 x i32>* %760, align 4, !alias.scope !81
  %762 = getelementptr i32, i32* %758, i64 4
  %763 = bitcast i32* %762 to <4 x i32>*
  %764 = load <4 x i32>, <4 x i32>* %763, align 4, !alias.scope !81
  %765 = bitcast i32* %759 to <4 x i32>*
  store <4 x i32> %761, <4 x i32>* %765, align 4, !alias.scope !84, !noalias !81
  %766 = getelementptr i32, i32* %759, i64 4
  %767 = bitcast i32* %766 to <4 x i32>*
  store <4 x i32> %764, <4 x i32>* %767, align 4, !alias.scope !84, !noalias !81
  %768 = or i64 %745, 16
  %769 = getelementptr i32, i32* %715, i64 %768
  %770 = getelementptr i32, i32* %713, i64 %768
  %771 = bitcast i32* %769 to <4 x i32>*
  %772 = load <4 x i32>, <4 x i32>* %771, align 4, !alias.scope !81
  %773 = getelementptr i32, i32* %769, i64 4
  %774 = bitcast i32* %773 to <4 x i32>*
  %775 = load <4 x i32>, <4 x i32>* %774, align 4, !alias.scope !81
  %776 = bitcast i32* %770 to <4 x i32>*
  store <4 x i32> %772, <4 x i32>* %776, align 4, !alias.scope !84, !noalias !81
  %777 = getelementptr i32, i32* %770, i64 4
  %778 = bitcast i32* %777 to <4 x i32>*
  store <4 x i32> %775, <4 x i32>* %778, align 4, !alias.scope !84, !noalias !81
  %779 = or i64 %745, 24
  %780 = getelementptr i32, i32* %715, i64 %779
  %781 = getelementptr i32, i32* %713, i64 %779
  %782 = bitcast i32* %780 to <4 x i32>*
  %783 = load <4 x i32>, <4 x i32>* %782, align 4, !alias.scope !81
  %784 = getelementptr i32, i32* %780, i64 4
  %785 = bitcast i32* %784 to <4 x i32>*
  %786 = load <4 x i32>, <4 x i32>* %785, align 4, !alias.scope !81
  %787 = bitcast i32* %781 to <4 x i32>*
  store <4 x i32> %783, <4 x i32>* %787, align 4, !alias.scope !84, !noalias !81
  %788 = getelementptr i32, i32* %781, i64 4
  %789 = bitcast i32* %788 to <4 x i32>*
  store <4 x i32> %786, <4 x i32>* %789, align 4, !alias.scope !84, !noalias !81
  %790 = add i64 %745, 32
  %791 = add i64 %746, -4
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %793, label %744, !llvm.loop !86

793:                                              ; preds = %744, %732
  %794 = phi i64 [ 0, %732 ], [ %790, %744 ]
  %795 = icmp eq i64 %740, 0
  br i1 %795, label %812, label %796

796:                                              ; preds = %793, %796
  %797 = phi i64 [ %809, %796 ], [ %794, %793 ]
  %798 = phi i64 [ %810, %796 ], [ %740, %793 ]
  %799 = getelementptr i32, i32* %715, i64 %797
  %800 = getelementptr i32, i32* %713, i64 %797
  %801 = bitcast i32* %799 to <4 x i32>*
  %802 = load <4 x i32>, <4 x i32>* %801, align 4, !alias.scope !81
  %803 = getelementptr i32, i32* %799, i64 4
  %804 = bitcast i32* %803 to <4 x i32>*
  %805 = load <4 x i32>, <4 x i32>* %804, align 4, !alias.scope !81
  %806 = bitcast i32* %800 to <4 x i32>*
  store <4 x i32> %802, <4 x i32>* %806, align 4, !alias.scope !84, !noalias !81
  %807 = getelementptr i32, i32* %800, i64 4
  %808 = bitcast i32* %807 to <4 x i32>*
  store <4 x i32> %805, <4 x i32>* %808, align 4, !alias.scope !84, !noalias !81
  %809 = add i64 %797, 8
  %810 = add i64 %798, -1
  %811 = icmp eq i64 %810, 0
  br i1 %811, label %812, label %796, !llvm.loop !87

812:                                              ; preds = %796, %793
  %813 = icmp eq i64 %733, %712
  br i1 %813, label %881, label %814

814:                                              ; preds = %812, %724, %722
  %815 = phi i32* [ %715, %724 ], [ %715, %722 ], [ %734, %812 ]
  %816 = phi i64 [ %712, %724 ], [ %712, %722 ], [ %735, %812 ]
  %817 = phi i32* [ %713, %724 ], [ %713, %722 ], [ %736, %812 ]
  %818 = add nsw i64 %816, -1
  %819 = and i64 %816, 7
  %820 = icmp eq i64 %819, 0
  br i1 %820, label %832, label %821

821:                                              ; preds = %814, %821
  %822 = phi i32* [ %827, %821 ], [ %815, %814 ]
  %823 = phi i64 [ %826, %821 ], [ %816, %814 ]
  %824 = phi i32* [ %829, %821 ], [ %817, %814 ]
  %825 = phi i64 [ %830, %821 ], [ %819, %814 ]
  %826 = add i64 %823, -1
  %827 = getelementptr inbounds i32, i32* %822, i64 1
  %828 = load i32, i32* %822, align 4
  %829 = getelementptr inbounds i32, i32* %824, i64 1
  store i32 %828, i32* %824, align 4
  %830 = add i64 %825, -1
  %831 = icmp eq i64 %830, 0
  br i1 %831, label %832, label %821, !llvm.loop !88

832:                                              ; preds = %821, %814
  %833 = phi i32* [ %815, %814 ], [ %827, %821 ]
  %834 = phi i64 [ %816, %814 ], [ %826, %821 ]
  %835 = phi i32* [ %817, %814 ], [ %829, %821 ]
  %836 = icmp ult i64 %818, 7
  br i1 %836, label %881, label %837

837:                                              ; preds = %832, %837
  %838 = phi i32* [ %863, %837 ], [ %833, %832 ]
  %839 = phi i64 [ %862, %837 ], [ %834, %832 ]
  %840 = phi i32* [ %865, %837 ], [ %835, %832 ]
  %841 = getelementptr inbounds i32, i32* %838, i64 1
  %842 = load i32, i32* %838, align 4
  %843 = getelementptr inbounds i32, i32* %840, i64 1
  store i32 %842, i32* %840, align 4
  %844 = getelementptr inbounds i32, i32* %838, i64 2
  %845 = load i32, i32* %841, align 4
  %846 = getelementptr inbounds i32, i32* %840, i64 2
  store i32 %845, i32* %843, align 4
  %847 = getelementptr inbounds i32, i32* %838, i64 3
  %848 = load i32, i32* %844, align 4
  %849 = getelementptr inbounds i32, i32* %840, i64 3
  store i32 %848, i32* %846, align 4
  %850 = getelementptr inbounds i32, i32* %838, i64 4
  %851 = load i32, i32* %847, align 4
  %852 = getelementptr inbounds i32, i32* %840, i64 4
  store i32 %851, i32* %849, align 4
  %853 = getelementptr inbounds i32, i32* %838, i64 5
  %854 = load i32, i32* %850, align 4
  %855 = getelementptr inbounds i32, i32* %840, i64 5
  store i32 %854, i32* %852, align 4
  %856 = getelementptr inbounds i32, i32* %838, i64 6
  %857 = load i32, i32* %853, align 4
  %858 = getelementptr inbounds i32, i32* %840, i64 6
  store i32 %857, i32* %855, align 4
  %859 = getelementptr inbounds i32, i32* %838, i64 7
  %860 = load i32, i32* %856, align 4
  %861 = getelementptr inbounds i32, i32* %840, i64 7
  store i32 %860, i32* %858, align 4
  %862 = add i64 %839, -8
  %863 = getelementptr inbounds i32, i32* %838, i64 8
  %864 = load i32, i32* %859, align 4
  %865 = getelementptr inbounds i32, i32* %840, i64 8
  store i32 %864, i32* %861, align 4
  %866 = icmp eq i64 %862, 0
  br i1 %866, label %881, label %837, !llvm.loop !89

867:                                              ; preds = %720
  %868 = inttoptr i64 %709 to i8*
  %869 = shl nsw i64 %712, 2
  %870 = add nsw i64 %869, -4
  %871 = lshr exact i64 %870, 2
  switch i64 %871, label %880 [
    i64 3, label %879
    i64 1, label %874
    i64 2, label %878
    i64 0, label %872
  ]

872:                                              ; preds = %867
  %873 = load i32, i32* %715, align 1
  store i32 %873, i32* %713, align 1
  br label %881

874:                                              ; preds = %867
  %875 = inttoptr i64 %709 to i64*
  %876 = inttoptr i64 %708 to i64*
  %877 = load i64, i64* %875, align 1
  store i64 %877, i64* %876, align 1
  br label %881

878:                                              ; preds = %867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %717, i8* align 1 %868, i64 12, i1 false) #12
  br label %881

879:                                              ; preds = %867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %717, i8* align 1 %868, i64 16, i1 false) #12
  br label %881

880:                                              ; preds = %867
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %717, i8* align 1 %868, i64 %869, i1 false) #12
  br label %881

881:                                              ; preds = %832, %837, %812, %880, %879, %878, %874, %872, %704
  %882 = trunc i64 %706 to i32
  %883 = inttoptr i64 %125 to i32*
  %884 = cmpxchg volatile i32* %883, i32 %24, i32 %882 release monotonic
  %885 = extractvalue { i32, i1 } %884, 1
  br i1 %885, label %886, label %1095

886:                                              ; preds = %881
  %887 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %888 = load i8, i8* %887, align 8, !range !2
  %889 = icmp eq i8 %888, 0
  br i1 %889, label %892, label %890, !prof !60

890:                                              ; preds = %886
  %891 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %123, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %891, i64 %705, i64 %56, i32 %45) #12
  br label %892

892:                                              ; preds = %890, %886
  %893 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %894 = load i8, i8* %893, align 1, !range !2
  %895 = icmp eq i8 %894, 0
  br i1 %895, label %1023, label %896

896:                                              ; preds = %892
  %897 = and i64 %705, -262144
  %898 = or i64 %897, 272
  %899 = sub i64 %705, %897
  %900 = trunc i64 %899 to i32
  %901 = lshr i32 %900, 2
  %902 = and i32 %901, 31
  %903 = shl i32 1, %902
  %904 = inttoptr i64 %898 to i32*
  %905 = lshr i64 %899, 7
  %906 = and i64 %905, 33554431
  %907 = getelementptr inbounds i32, i32* %904, i64 %906
  %908 = load atomic i32, i32* %907 acquire, align 4
  %909 = and i32 %908, %903
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %920, label %911

911:                                              ; preds = %896
  %912 = shl i32 %903, 1
  %913 = icmp eq i32 %912, 0
  %914 = getelementptr inbounds i32, i32* %907, i64 1
  %915 = select i1 %913, i32 1, i32 %912
  %916 = select i1 %913, i32* %914, i32* %907
  %917 = load atomic i32, i32* %916 acquire, align 4
  %918 = and i32 %917, %915
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %920, label %1023

920:                                              ; preds = %911, %896
  %921 = or i64 %58, 272
  %922 = sub i64 %56, %58
  %923 = trunc i64 %922 to i32
  %924 = lshr i32 %923, 2
  %925 = and i32 %924, 31
  %926 = shl i32 1, %925
  %927 = inttoptr i64 %921 to i32*
  %928 = lshr i64 %922, 7
  %929 = and i64 %928, 33554431
  %930 = getelementptr inbounds i32, i32* %927, i64 %929
  %931 = load atomic i32, i32* %930 acquire, align 4
  %932 = and i32 %931, %926
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %954, label %934

934:                                              ; preds = %920
  %935 = shl i32 %926, 1
  %936 = icmp eq i32 %935, 0
  %937 = getelementptr inbounds i32, i32* %930, i64 1
  %938 = select i1 %936, i32 1, i32 %935
  %939 = select i1 %936, i32* %937, i32* %930
  %940 = load atomic i32, i32* %939 acquire, align 4
  %941 = and i32 %940, %938
  %942 = icmp eq i32 %941, 0
  br i1 %942, label %943, label %954

943:                                              ; preds = %934
  %944 = load atomic i32, i32* %907 monotonic, align 4
  br label %945

945:                                              ; preds = %949, %943
  %946 = phi i32 [ %944, %943 ], [ %952, %949 ]
  %947 = and i32 %946, %903
  %948 = icmp eq i32 %947, %903
  br i1 %948, label %1023, label %949

949:                                              ; preds = %945
  %950 = or i32 %946, %903
  %951 = cmpxchg volatile i32* %907, i32 %946, i32 %950 release monotonic
  %952 = extractvalue { i32, i1 } %951, 0
  %953 = extractvalue { i32, i1 } %951, 1
  br i1 %953, label %1023, label %945

954:                                              ; preds = %934, %920
  %955 = load atomic i32, i32* %930 acquire, align 4
  %956 = and i32 %955, %926
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %1023, label %958

958:                                              ; preds = %954
  %959 = shl i32 %926, 1
  %960 = icmp eq i32 %959, 0
  %961 = getelementptr inbounds i32, i32* %930, i64 1
  %962 = select i1 %960, i32 1, i32 %959
  %963 = select i1 %960, i32* %961, i32* %930
  %964 = load atomic i32, i32* %963 acquire, align 4
  %965 = and i32 %964, %962
  %966 = icmp eq i32 %965, 0
  br i1 %966, label %1023, label %967

967:                                              ; preds = %958
  %968 = load atomic i32, i32* %907 monotonic, align 4
  br label %969

969:                                              ; preds = %973, %967
  %970 = phi i32 [ %968, %967 ], [ %976, %973 ]
  %971 = and i32 %970, %903
  %972 = icmp eq i32 %971, %903
  br i1 %972, label %1023, label %973

973:                                              ; preds = %969
  %974 = or i32 %970, %903
  %975 = cmpxchg volatile i32* %907, i32 %970, i32 %974 release monotonic
  %976 = extractvalue { i32, i1 } %975, 0
  %977 = extractvalue { i32, i1 } %975, 1
  br i1 %977, label %978, label %969

978:                                              ; preds = %973
  %979 = bitcast %"class.v8::internal::HeapObject"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %979) #12
  %980 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %9, i64 0, i32 0, i32 0, i32 0
  store i64 %705, i64* %980, align 8
  %981 = xor i64 %897, -1
  %982 = add i64 %705, %981
  %983 = trunc i64 %982 to i32
  %984 = lshr i32 %983, 2
  %985 = and i32 %984, 31
  %986 = shl i32 1, %985
  %987 = lshr i64 %982, 7
  %988 = and i64 %987, 33554431
  %989 = getelementptr inbounds i32, i32* %904, i64 %988
  %990 = load atomic i32, i32* %989 acquire, align 4
  %991 = and i32 %990, %986
  %992 = icmp eq i32 %991, 0
  br i1 %992, label %1022, label %993

993:                                              ; preds = %978
  %994 = shl i32 %986, 1
  %995 = icmp eq i32 %994, 0
  %996 = getelementptr inbounds i32, i32* %989, i64 1
  %997 = select i1 %995, i32 1, i32 %994
  %998 = select i1 %995, i32* %996, i32* %989
  %999 = load atomic i32, i32* %998 monotonic, align 4
  br label %1000

1000:                                             ; preds = %1004, %993
  %1001 = phi i32 [ %999, %993 ], [ %1007, %1004 ]
  %1002 = and i32 %1001, %997
  %1003 = icmp eq i32 %1002, %997
  br i1 %1003, label %1022, label %1004

1004:                                             ; preds = %1000
  %1005 = or i32 %1001, %997
  %1006 = cmpxchg volatile i32* %998, i32 %1001, i32 %1005 release monotonic
  %1007 = extractvalue { i32, i1 } %1006, 0
  %1008 = extractvalue { i32, i1 } %1006, 1
  br i1 %1008, label %1009, label %1000

1009:                                             ; preds = %1004
  %1010 = inttoptr i64 %897 to %"class.v8::internal::MemoryChunk"*
  %1011 = load i64, i64* %980, align 8
  %1012 = and i64 %1011, -4294967296
  %1013 = add i64 %1011, -1
  %1014 = inttoptr i64 %1013 to i32*
  %1015 = load atomic i32, i32* %1014 monotonic, align 4
  %1016 = zext i32 %1015 to i64
  %1017 = or i64 %1012, %1016
  %1018 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %9, i64 %1017) #12
  %1019 = sext i32 %1018 to i64
  %1020 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1010, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1021 = atomicrmw add i64* %1020, i64 %1019 seq_cst
  br label %1022

1022:                                             ; preds = %1000, %1009, %978
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %979) #12
  br label %1023

1023:                                             ; preds = %949, %945, %969, %1022, %958, %954, %911, %892
  %1024 = bitcast %"class.v8::internal::Heap"** %123 to i64*
  %1025 = load i64, i64* %1024, align 8
  %1026 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1027 = icmp eq i8 %1026, 0
  br i1 %1027, label %1130, label %1028

1028:                                             ; preds = %1023
  %1029 = add i64 %26, 7
  %1030 = inttoptr i64 %1029 to i16*
  %1031 = load atomic i16, i16* %1030 monotonic, align 2
  switch i16 %1031, label %1130 [
    i16 1085, label %1032
    i16 1057, label %1032
  ]

1032:                                             ; preds = %1028, %1028
  %1033 = bitcast %"class.v8::internal::HeapObject"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1033) #12
  %1034 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %10, i64 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %1034, align 8
  %1035 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %10, i64 %26) #12
  %1036 = sext i32 %1035 to i64
  %1037 = add i64 %125, %1036
  %1038 = add i64 %1037, 4
  %1039 = and i64 %1038, -262144
  %1040 = inttoptr i64 %1039 to %"class.v8::internal::Page"*
  %1041 = icmp eq %"class.v8::internal::Page"* %127, %1040
  br i1 %1041, label %1042, label %1072

1042:                                             ; preds = %1032
  %1043 = add i64 %56, %1036
  %1044 = add i64 %1025, -41416
  %1045 = inttoptr i64 %1044 to %"class.v8::internal::Isolate"*
  %1046 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1045, i64 0, i32 0, i32 7, i32 0, i64 534
  %1047 = load i64, i64* %1046, align 8
  %1048 = inttoptr i64 %1037 to i32*
  %1049 = load atomic i32, i32* %1048 monotonic, align 4
  %1050 = trunc i64 %1047 to i32
  %1051 = icmp eq i32 %1049, %1050
  br i1 %1051, label %1052, label %1072

1052:                                             ; preds = %1042
  %1053 = load i64, i64* %132, align 8
  %1054 = and i64 %1053, 524288
  %1055 = icmp eq i64 %1054, 0
  br i1 %1055, label %1073, label %1056

1056:                                             ; preds = %1052
  %1057 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 8, i32 0
  %1058 = bitcast %"struct.std::__1::__atomic_base.69"* %1057 to i64*
  %1059 = load atomic i64, i64* %1058 seq_cst, align 64
  %1060 = inttoptr i64 %1059 to %"class.v8::internal::SemiSpace"*
  %1061 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1060, i64 0, i32 5
  %1062 = load i64, i64* %1061, align 8
  %1063 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 3
  %1064 = load i64, i64* %1063, align 8
  %1065 = icmp ugt i64 %1064, %1062
  br i1 %1065, label %1072, label %1066

1066:                                             ; preds = %1056
  %1067 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 4
  %1068 = load i64, i64* %1067, align 32
  %1069 = icmp ule i64 %1068, %1062
  %1070 = icmp ult i64 %125, %1062
  %1071 = or i1 %1070, %1069
  br i1 %1071, label %1072, label %1073

1072:                                             ; preds = %1066, %1056, %1042, %1032
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1033) #12
  br label %1130

1073:                                             ; preds = %1066, %1052
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1033) #12
  %1074 = trunc i64 %1043 to i32
  %1075 = icmp eq i32 %1074, 0
  br i1 %1075, label %1130, label %1076

1076:                                             ; preds = %1073
  %1077 = and i64 %1043, -4294967296
  %1078 = add i64 %1043, 3
  %1079 = inttoptr i64 %1078 to i32*
  %1080 = load i32, i32* %1079, align 4
  %1081 = zext i32 %1080 to i64
  %1082 = or i64 %1077, %1081
  %1083 = bitcast %"class.v8::internal::AllocationSite"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1083) #12
  %1084 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1082, i64* %1084, align 8
  %1085 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1086 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1086) #12
  %1087 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %13, %"class.v8::internal::AllocationSite"** %1087, align 8
  %1088 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1088) #12
  %1089 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1085, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %12) #12
  %1090 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1089, 0
  %1091 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1090, i64 3
  %1092 = bitcast %"struct.std::__1::__hash_node_base.518"* %1091 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1088) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1086) #12
  %1093 = load i64, i64* %1092, align 8
  %1094 = add i64 %1093, 1
  store i64 %1094, i64* %1092, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1083) #12
  br label %1130

1095:                                             ; preds = %881
  %1096 = load i64, i64* %679, align 8
  %1097 = icmp ne i64 %1096, 0
  %1098 = sub i64 %1096, %681
  %1099 = icmp eq i64 %1098, %706
  %1100 = and i1 %1097, %1099
  br i1 %1100, label %1101, label %1102

1101:                                             ; preds = %1095
  store i64 %706, i64* %679, align 8
  br label %1106

1102:                                             ; preds = %1095
  %1103 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %1104 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1103, align 8
  %1105 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1104, i64 %706, i32 %45, i32 1) #12
  br label %1106

1106:                                             ; preds = %1102, %1101
  %1107 = and i64 %56, -4294967296
  %1108 = load atomic i32, i32* %883 acquire, align 4
  %1109 = zext i32 %1108 to i64
  %1110 = or i64 %1107, %1109
  %1111 = add i64 %1110, 1
  %1112 = inttoptr i64 %1 to i64*
  %1113 = load i64, i64* %1112, align 8
  %1114 = and i64 %1113, 2
  %1115 = or i64 %1111, %1114
  store i64 %1115, i64* %1112, align 8
  %1116 = and i64 %1111, 1
  %1117 = icmp ne i64 %1116, 0
  %1118 = trunc i64 %1115 to i32
  %1119 = icmp ne i32 %1118, 3
  %1120 = and i1 %1117, %1119
  br i1 %1120, label %1121, label %1729

1121:                                             ; preds = %1106
  %1122 = and i64 %1111, -262144
  %1123 = inttoptr i64 %1122 to %"class.v8::internal::BasicMemoryChunk"*
  %1124 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1123, i64 0, i32 1
  %1125 = load i64, i64* %1124, align 8
  %1126 = lshr i64 %1125, 4
  %1127 = trunc i64 %1126 to i32
  %1128 = and i32 %1127, 1
  %1129 = xor i32 %1128, 1
  br label %1729

1130:                                             ; preds = %1076, %1073, %1072, %1028, %1023
  %1131 = inttoptr i64 %1 to i64*
  %1132 = load i64, i64* %1131, align 8
  %1133 = and i64 %1132, 2
  %1134 = or i64 %1133, %705
  store i64 %1134, i64* %1131, align 8
  br i1 %57, label %1135, label %1195

1135:                                             ; preds = %1130
  %1136 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1137 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1136, align 8
  %1138 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1139 = load i32, i32* %1138, align 8
  %1140 = sext i32 %1139 to i64
  %1141 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1137, i64 0, i32 0, i32 0, i64 %1140, i32 0
  %1142 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1141, align 8
  %1143 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1142, i64 0, i32 1
  %1144 = load i64, i64* %1143, align 8
  %1145 = icmp eq i64 %1144, 256
  br i1 %1145, label %1150, label %1146

1146:                                             ; preds = %1135
  %1147 = add i64 %1144, 1
  store i64 %1147, i64* %1143, align 8
  %1148 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1142, i64 0, i32 2, i64 %1144, i32 0, i32 0, i32 0, i32 0
  store i64 %705, i64* %1148, align 8
  %1149 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1142, i64 0, i32 2, i64 %1144, i32 1
  store i32 %45, i32* %1149, align 8
  br label %1195

1150:                                             ; preds = %1135
  %1151 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1137, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1151) #12
  %1152 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1137, i64 0, i32 0, i32 1, i32 1
  %1153 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1152 to i64*
  %1154 = load i64, i64* %1153, align 8
  %1155 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1142 to i64*
  store i64 %1154, i64* %1155, align 8
  %1156 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1142 to i64
  store atomic volatile i64 %1156, i64* %1153 monotonic, align 8
  %1157 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1137, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1158 = atomicrmw add i64* %1157, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1151) #12
  %1159 = call i8* @_Znwm(i64 4112) #17
  %1160 = getelementptr inbounds i8, i8* %1159, i64 8
  %1161 = bitcast i8* %1160 to i64*
  store i64 0, i64* %1161, align 8
  %1162 = getelementptr inbounds i8, i8* %1159, i64 16
  %1163 = bitcast i8* %1162 to %"struct.std::__1::pair.1282"*
  %1164 = getelementptr inbounds i8, i8* %1159, i64 4112
  %1165 = bitcast i8* %1164 to %"struct.std::__1::pair.1282"*
  br label %1166

1166:                                             ; preds = %1166, %1150
  %1167 = phi %"struct.std::__1::pair.1282"* [ %1163, %1150 ], [ %1184, %1166 ]
  %1168 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1168, align 8
  %1169 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 0, i32 1
  store i32 0, i32* %1169, align 8
  %1170 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1170, align 8
  %1171 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 1, i32 1
  store i32 0, i32* %1171, align 8
  %1172 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1172, align 8
  %1173 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 2, i32 1
  store i32 0, i32* %1173, align 8
  %1174 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1174, align 8
  %1175 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 3, i32 1
  store i32 0, i32* %1175, align 8
  %1176 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1176, align 8
  %1177 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 4, i32 1
  store i32 0, i32* %1177, align 8
  %1178 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1178, align 8
  %1179 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 5, i32 1
  store i32 0, i32* %1179, align 8
  %1180 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1180, align 8
  %1181 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 6, i32 1
  store i32 0, i32* %1181, align 8
  %1182 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1182, align 8
  %1183 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 7, i32 1
  store i32 0, i32* %1183, align 8
  %1184 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1167, i64 8
  %1185 = icmp eq %"struct.std::__1::pair.1282"* %1184, %1165
  br i1 %1185, label %1186, label %1166

1186:                                             ; preds = %1166
  %1187 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1141 to i8**
  store i8* %1159, i8** %1187, align 8
  %1188 = bitcast i8* %1159 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1189 = load i64, i64* %1161, align 8
  %1190 = icmp eq i64 %1189, 256
  br i1 %1190, label %1195, label %1191

1191:                                             ; preds = %1186
  %1192 = add i64 %1189, 1
  store i64 %1192, i64* %1161, align 8
  %1193 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1188, i64 0, i32 2, i64 %1189, i32 0, i32 0, i32 0, i32 0
  store i64 %705, i64* %1193, align 8
  %1194 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1188, i64 0, i32 2, i64 %1189, i32 1
  store i32 %45, i32* %1194, align 8
  br label %1195

1195:                                             ; preds = %1191, %1186, %1146, %1130
  %1196 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1197 = load i64, i64* %1196, align 8
  %1198 = add i64 %1197, %681
  store i64 %1198, i64* %1196, align 8
  br label %1729

1199:                                             ; preds = %700
  %1200 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1201 = icmp sgt i32 %45, 8192
  br i1 %1201, label %1202, label %1226

1202:                                             ; preds = %1199
  %1203 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1204 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1203, align 8
  %1205 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1204, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1205) #12
  %1206 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1204, i64 0, i32 0
  %1207 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1204, i64 0, i32 0, i32 1, i32 1
  %1208 = load i64, i64* %1207, align 8
  %1209 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1204, i64 0, i32 0, i32 1, i32 2
  %1210 = load i64, i64* %1209, align 8
  %1211 = add i64 %1208, %681
  %1212 = icmp ult i64 %1210, %1211
  br i1 %1212, label %1222, label %1213

1213:                                             ; preds = %1202
  %1214 = add i64 %1208, 1
  store i64 %1211, i64* %1207, align 8
  %1215 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1216 = icmp eq i8 %1215, 0
  br i1 %1216, label %1218, label %1217

1217:                                             ; preds = %1213
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1206, i32 2) #12
  br label %1218

1218:                                             ; preds = %1217, %1213
  %1219 = and i64 %1214, 1
  %1220 = icmp eq i64 %1219, 0
  br i1 %1220, label %1221, label %1224, !prof !29

1221:                                             ; preds = %1218
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1222:                                             ; preds = %1202
  %1223 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1204, i32 %45, i32 0, i32 2) #12
  br label %1224

1224:                                             ; preds = %1222, %1218
  %1225 = phi i64 [ %1223, %1222 ], [ %1214, %1218 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1205) #12
  br label %1228

1226:                                             ; preds = %1199
  %1227 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1200, i32 %45, i32 0) #12
  br label %1228

1228:                                             ; preds = %1226, %1224
  %1229 = phi i64 [ %1225, %1224 ], [ %1227, %1226 ]
  %1230 = and i64 %1229, 1
  %1231 = icmp eq i64 %1230, 0
  br i1 %1231, label %1727, label %1232

1232:                                             ; preds = %1228
  %1233 = add i64 %1229, -1
  %1234 = inttoptr i64 %1233 to i32*
  store atomic volatile i32 %24, i32* %1234 monotonic, align 4
  %1235 = add i64 %1229, 3
  %1236 = add i64 %56, 3
  %1237 = add nsw i32 %45, -4
  %1238 = sdiv i32 %1237, 4
  %1239 = sext i32 %1238 to i64
  %1240 = inttoptr i64 %1235 to i32*
  %1241 = inttoptr i64 %1235 to i8*
  %1242 = inttoptr i64 %1236 to i32*
  %1243 = inttoptr i64 %1236 to i8*
  %1244 = inttoptr i64 %1235 to i8*
  %1245 = add i32 %45, -1
  %1246 = icmp ult i32 %1245, 7
  br i1 %1246, label %1408, label %1247

1247:                                             ; preds = %1232
  %1248 = icmp ult i32 %1238, 16
  br i1 %1248, label %1249, label %1394

1249:                                             ; preds = %1247
  %1250 = icmp ult i32 %1238, 8
  br i1 %1250, label %1341, label %1251

1251:                                             ; preds = %1249
  %1252 = getelementptr i32, i32* %1240, i64 %1239
  %1253 = bitcast i32* %1252 to i8*
  %1254 = getelementptr i32, i32* %1242, i64 %1239
  %1255 = bitcast i32* %1254 to i8*
  %1256 = icmp ult i8* %1241, %1255
  %1257 = icmp ult i8* %1243, %1253
  %1258 = and i1 %1256, %1257
  br i1 %1258, label %1341, label %1259

1259:                                             ; preds = %1251
  %1260 = and i64 %1239, -8
  %1261 = getelementptr i32, i32* %1242, i64 %1260
  %1262 = sub nsw i64 %1239, %1260
  %1263 = getelementptr i32, i32* %1240, i64 %1260
  %1264 = add nsw i64 %1260, -8
  %1265 = lshr exact i64 %1264, 3
  %1266 = add nuw nsw i64 %1265, 1
  %1267 = and i64 %1266, 3
  %1268 = icmp ult i64 %1264, 24
  br i1 %1268, label %1320, label %1269

1269:                                             ; preds = %1259
  %1270 = sub nsw i64 %1266, %1267
  br label %1271

1271:                                             ; preds = %1271, %1269
  %1272 = phi i64 [ 0, %1269 ], [ %1317, %1271 ]
  %1273 = phi i64 [ %1270, %1269 ], [ %1318, %1271 ]
  %1274 = getelementptr i32, i32* %1242, i64 %1272
  %1275 = getelementptr i32, i32* %1240, i64 %1272
  %1276 = bitcast i32* %1274 to <4 x i32>*
  %1277 = load <4 x i32>, <4 x i32>* %1276, align 4, !alias.scope !90
  %1278 = getelementptr i32, i32* %1274, i64 4
  %1279 = bitcast i32* %1278 to <4 x i32>*
  %1280 = load <4 x i32>, <4 x i32>* %1279, align 4, !alias.scope !90
  %1281 = bitcast i32* %1275 to <4 x i32>*
  store <4 x i32> %1277, <4 x i32>* %1281, align 4, !alias.scope !93, !noalias !90
  %1282 = getelementptr i32, i32* %1275, i64 4
  %1283 = bitcast i32* %1282 to <4 x i32>*
  store <4 x i32> %1280, <4 x i32>* %1283, align 4, !alias.scope !93, !noalias !90
  %1284 = or i64 %1272, 8
  %1285 = getelementptr i32, i32* %1242, i64 %1284
  %1286 = getelementptr i32, i32* %1240, i64 %1284
  %1287 = bitcast i32* %1285 to <4 x i32>*
  %1288 = load <4 x i32>, <4 x i32>* %1287, align 4, !alias.scope !90
  %1289 = getelementptr i32, i32* %1285, i64 4
  %1290 = bitcast i32* %1289 to <4 x i32>*
  %1291 = load <4 x i32>, <4 x i32>* %1290, align 4, !alias.scope !90
  %1292 = bitcast i32* %1286 to <4 x i32>*
  store <4 x i32> %1288, <4 x i32>* %1292, align 4, !alias.scope !93, !noalias !90
  %1293 = getelementptr i32, i32* %1286, i64 4
  %1294 = bitcast i32* %1293 to <4 x i32>*
  store <4 x i32> %1291, <4 x i32>* %1294, align 4, !alias.scope !93, !noalias !90
  %1295 = or i64 %1272, 16
  %1296 = getelementptr i32, i32* %1242, i64 %1295
  %1297 = getelementptr i32, i32* %1240, i64 %1295
  %1298 = bitcast i32* %1296 to <4 x i32>*
  %1299 = load <4 x i32>, <4 x i32>* %1298, align 4, !alias.scope !90
  %1300 = getelementptr i32, i32* %1296, i64 4
  %1301 = bitcast i32* %1300 to <4 x i32>*
  %1302 = load <4 x i32>, <4 x i32>* %1301, align 4, !alias.scope !90
  %1303 = bitcast i32* %1297 to <4 x i32>*
  store <4 x i32> %1299, <4 x i32>* %1303, align 4, !alias.scope !93, !noalias !90
  %1304 = getelementptr i32, i32* %1297, i64 4
  %1305 = bitcast i32* %1304 to <4 x i32>*
  store <4 x i32> %1302, <4 x i32>* %1305, align 4, !alias.scope !93, !noalias !90
  %1306 = or i64 %1272, 24
  %1307 = getelementptr i32, i32* %1242, i64 %1306
  %1308 = getelementptr i32, i32* %1240, i64 %1306
  %1309 = bitcast i32* %1307 to <4 x i32>*
  %1310 = load <4 x i32>, <4 x i32>* %1309, align 4, !alias.scope !90
  %1311 = getelementptr i32, i32* %1307, i64 4
  %1312 = bitcast i32* %1311 to <4 x i32>*
  %1313 = load <4 x i32>, <4 x i32>* %1312, align 4, !alias.scope !90
  %1314 = bitcast i32* %1308 to <4 x i32>*
  store <4 x i32> %1310, <4 x i32>* %1314, align 4, !alias.scope !93, !noalias !90
  %1315 = getelementptr i32, i32* %1308, i64 4
  %1316 = bitcast i32* %1315 to <4 x i32>*
  store <4 x i32> %1313, <4 x i32>* %1316, align 4, !alias.scope !93, !noalias !90
  %1317 = add i64 %1272, 32
  %1318 = add i64 %1273, -4
  %1319 = icmp eq i64 %1318, 0
  br i1 %1319, label %1320, label %1271, !llvm.loop !95

1320:                                             ; preds = %1271, %1259
  %1321 = phi i64 [ 0, %1259 ], [ %1317, %1271 ]
  %1322 = icmp eq i64 %1267, 0
  br i1 %1322, label %1339, label %1323

1323:                                             ; preds = %1320, %1323
  %1324 = phi i64 [ %1336, %1323 ], [ %1321, %1320 ]
  %1325 = phi i64 [ %1337, %1323 ], [ %1267, %1320 ]
  %1326 = getelementptr i32, i32* %1242, i64 %1324
  %1327 = getelementptr i32, i32* %1240, i64 %1324
  %1328 = bitcast i32* %1326 to <4 x i32>*
  %1329 = load <4 x i32>, <4 x i32>* %1328, align 4, !alias.scope !90
  %1330 = getelementptr i32, i32* %1326, i64 4
  %1331 = bitcast i32* %1330 to <4 x i32>*
  %1332 = load <4 x i32>, <4 x i32>* %1331, align 4, !alias.scope !90
  %1333 = bitcast i32* %1327 to <4 x i32>*
  store <4 x i32> %1329, <4 x i32>* %1333, align 4, !alias.scope !93, !noalias !90
  %1334 = getelementptr i32, i32* %1327, i64 4
  %1335 = bitcast i32* %1334 to <4 x i32>*
  store <4 x i32> %1332, <4 x i32>* %1335, align 4, !alias.scope !93, !noalias !90
  %1336 = add i64 %1324, 8
  %1337 = add i64 %1325, -1
  %1338 = icmp eq i64 %1337, 0
  br i1 %1338, label %1339, label %1323, !llvm.loop !96

1339:                                             ; preds = %1323, %1320
  %1340 = icmp eq i64 %1260, %1239
  br i1 %1340, label %1408, label %1341

1341:                                             ; preds = %1339, %1251, %1249
  %1342 = phi i32* [ %1242, %1251 ], [ %1242, %1249 ], [ %1261, %1339 ]
  %1343 = phi i64 [ %1239, %1251 ], [ %1239, %1249 ], [ %1262, %1339 ]
  %1344 = phi i32* [ %1240, %1251 ], [ %1240, %1249 ], [ %1263, %1339 ]
  %1345 = add nsw i64 %1343, -1
  %1346 = and i64 %1343, 7
  %1347 = icmp eq i64 %1346, 0
  br i1 %1347, label %1359, label %1348

1348:                                             ; preds = %1341, %1348
  %1349 = phi i32* [ %1354, %1348 ], [ %1342, %1341 ]
  %1350 = phi i64 [ %1353, %1348 ], [ %1343, %1341 ]
  %1351 = phi i32* [ %1356, %1348 ], [ %1344, %1341 ]
  %1352 = phi i64 [ %1357, %1348 ], [ %1346, %1341 ]
  %1353 = add i64 %1350, -1
  %1354 = getelementptr inbounds i32, i32* %1349, i64 1
  %1355 = load i32, i32* %1349, align 4
  %1356 = getelementptr inbounds i32, i32* %1351, i64 1
  store i32 %1355, i32* %1351, align 4
  %1357 = add i64 %1352, -1
  %1358 = icmp eq i64 %1357, 0
  br i1 %1358, label %1359, label %1348, !llvm.loop !97

1359:                                             ; preds = %1348, %1341
  %1360 = phi i32* [ %1342, %1341 ], [ %1354, %1348 ]
  %1361 = phi i64 [ %1343, %1341 ], [ %1353, %1348 ]
  %1362 = phi i32* [ %1344, %1341 ], [ %1356, %1348 ]
  %1363 = icmp ult i64 %1345, 7
  br i1 %1363, label %1408, label %1364

1364:                                             ; preds = %1359, %1364
  %1365 = phi i32* [ %1390, %1364 ], [ %1360, %1359 ]
  %1366 = phi i64 [ %1389, %1364 ], [ %1361, %1359 ]
  %1367 = phi i32* [ %1392, %1364 ], [ %1362, %1359 ]
  %1368 = getelementptr inbounds i32, i32* %1365, i64 1
  %1369 = load i32, i32* %1365, align 4
  %1370 = getelementptr inbounds i32, i32* %1367, i64 1
  store i32 %1369, i32* %1367, align 4
  %1371 = getelementptr inbounds i32, i32* %1365, i64 2
  %1372 = load i32, i32* %1368, align 4
  %1373 = getelementptr inbounds i32, i32* %1367, i64 2
  store i32 %1372, i32* %1370, align 4
  %1374 = getelementptr inbounds i32, i32* %1365, i64 3
  %1375 = load i32, i32* %1371, align 4
  %1376 = getelementptr inbounds i32, i32* %1367, i64 3
  store i32 %1375, i32* %1373, align 4
  %1377 = getelementptr inbounds i32, i32* %1365, i64 4
  %1378 = load i32, i32* %1374, align 4
  %1379 = getelementptr inbounds i32, i32* %1367, i64 4
  store i32 %1378, i32* %1376, align 4
  %1380 = getelementptr inbounds i32, i32* %1365, i64 5
  %1381 = load i32, i32* %1377, align 4
  %1382 = getelementptr inbounds i32, i32* %1367, i64 5
  store i32 %1381, i32* %1379, align 4
  %1383 = getelementptr inbounds i32, i32* %1365, i64 6
  %1384 = load i32, i32* %1380, align 4
  %1385 = getelementptr inbounds i32, i32* %1367, i64 6
  store i32 %1384, i32* %1382, align 4
  %1386 = getelementptr inbounds i32, i32* %1365, i64 7
  %1387 = load i32, i32* %1383, align 4
  %1388 = getelementptr inbounds i32, i32* %1367, i64 7
  store i32 %1387, i32* %1385, align 4
  %1389 = add i64 %1366, -8
  %1390 = getelementptr inbounds i32, i32* %1365, i64 8
  %1391 = load i32, i32* %1386, align 4
  %1392 = getelementptr inbounds i32, i32* %1367, i64 8
  store i32 %1391, i32* %1388, align 4
  %1393 = icmp eq i64 %1389, 0
  br i1 %1393, label %1408, label %1364, !llvm.loop !98

1394:                                             ; preds = %1247
  %1395 = inttoptr i64 %1236 to i8*
  %1396 = shl nsw i64 %1239, 2
  %1397 = add nsw i64 %1396, -4
  %1398 = lshr exact i64 %1397, 2
  switch i64 %1398, label %1407 [
    i64 3, label %1406
    i64 1, label %1401
    i64 2, label %1405
    i64 0, label %1399
  ]

1399:                                             ; preds = %1394
  %1400 = load i32, i32* %1242, align 1
  store i32 %1400, i32* %1240, align 1
  br label %1408

1401:                                             ; preds = %1394
  %1402 = inttoptr i64 %1236 to i64*
  %1403 = inttoptr i64 %1235 to i64*
  %1404 = load i64, i64* %1402, align 1
  store i64 %1404, i64* %1403, align 1
  br label %1408

1405:                                             ; preds = %1394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1244, i8* align 1 %1395, i64 12, i1 false) #12
  br label %1408

1406:                                             ; preds = %1394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1244, i8* align 1 %1395, i64 16, i1 false) #12
  br label %1408

1407:                                             ; preds = %1394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1244, i8* align 1 %1395, i64 %1396, i1 false) #12
  br label %1408

1408:                                             ; preds = %1359, %1364, %1339, %1407, %1406, %1405, %1401, %1399, %1232
  %1409 = trunc i64 %1233 to i32
  %1410 = inttoptr i64 %125 to i32*
  %1411 = cmpxchg volatile i32* %1410, i32 %24, i32 %1409 release monotonic
  %1412 = extractvalue { i32, i1 } %1411, 1
  br i1 %1412, label %1413, label %1622

1413:                                             ; preds = %1408
  %1414 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %1415 = load i8, i8* %1414, align 8, !range !2
  %1416 = icmp eq i8 %1415, 0
  br i1 %1416, label %1419, label %1417, !prof !60

1417:                                             ; preds = %1413
  %1418 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %123, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %1418, i64 %1229, i64 %56, i32 %45) #12
  br label %1419

1419:                                             ; preds = %1417, %1413
  %1420 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %1421 = load i8, i8* %1420, align 1, !range !2
  %1422 = icmp eq i8 %1421, 0
  br i1 %1422, label %1550, label %1423

1423:                                             ; preds = %1419
  %1424 = and i64 %1229, -262144
  %1425 = or i64 %1424, 272
  %1426 = sub i64 %1229, %1424
  %1427 = trunc i64 %1426 to i32
  %1428 = lshr i32 %1427, 2
  %1429 = and i32 %1428, 31
  %1430 = shl i32 1, %1429
  %1431 = inttoptr i64 %1425 to i32*
  %1432 = lshr i64 %1426, 7
  %1433 = and i64 %1432, 33554431
  %1434 = getelementptr inbounds i32, i32* %1431, i64 %1433
  %1435 = load atomic i32, i32* %1434 acquire, align 4
  %1436 = and i32 %1435, %1430
  %1437 = icmp eq i32 %1436, 0
  br i1 %1437, label %1447, label %1438

1438:                                             ; preds = %1423
  %1439 = shl i32 %1430, 1
  %1440 = icmp eq i32 %1439, 0
  %1441 = getelementptr inbounds i32, i32* %1434, i64 1
  %1442 = select i1 %1440, i32 1, i32 %1439
  %1443 = select i1 %1440, i32* %1441, i32* %1434
  %1444 = load atomic i32, i32* %1443 acquire, align 4
  %1445 = and i32 %1444, %1442
  %1446 = icmp eq i32 %1445, 0
  br i1 %1446, label %1447, label %1550

1447:                                             ; preds = %1438, %1423
  %1448 = or i64 %58, 272
  %1449 = sub i64 %56, %58
  %1450 = trunc i64 %1449 to i32
  %1451 = lshr i32 %1450, 2
  %1452 = and i32 %1451, 31
  %1453 = shl i32 1, %1452
  %1454 = inttoptr i64 %1448 to i32*
  %1455 = lshr i64 %1449, 7
  %1456 = and i64 %1455, 33554431
  %1457 = getelementptr inbounds i32, i32* %1454, i64 %1456
  %1458 = load atomic i32, i32* %1457 acquire, align 4
  %1459 = and i32 %1458, %1453
  %1460 = icmp eq i32 %1459, 0
  br i1 %1460, label %1481, label %1461

1461:                                             ; preds = %1447
  %1462 = shl i32 %1453, 1
  %1463 = icmp eq i32 %1462, 0
  %1464 = getelementptr inbounds i32, i32* %1457, i64 1
  %1465 = select i1 %1463, i32 1, i32 %1462
  %1466 = select i1 %1463, i32* %1464, i32* %1457
  %1467 = load atomic i32, i32* %1466 acquire, align 4
  %1468 = and i32 %1467, %1465
  %1469 = icmp eq i32 %1468, 0
  br i1 %1469, label %1470, label %1481

1470:                                             ; preds = %1461
  %1471 = load atomic i32, i32* %1434 monotonic, align 4
  br label %1472

1472:                                             ; preds = %1476, %1470
  %1473 = phi i32 [ %1471, %1470 ], [ %1479, %1476 ]
  %1474 = and i32 %1473, %1430
  %1475 = icmp eq i32 %1474, %1430
  br i1 %1475, label %1550, label %1476

1476:                                             ; preds = %1472
  %1477 = or i32 %1473, %1430
  %1478 = cmpxchg volatile i32* %1434, i32 %1473, i32 %1477 release monotonic
  %1479 = extractvalue { i32, i1 } %1478, 0
  %1480 = extractvalue { i32, i1 } %1478, 1
  br i1 %1480, label %1550, label %1472

1481:                                             ; preds = %1461, %1447
  %1482 = load atomic i32, i32* %1457 acquire, align 4
  %1483 = and i32 %1482, %1453
  %1484 = icmp eq i32 %1483, 0
  br i1 %1484, label %1550, label %1485

1485:                                             ; preds = %1481
  %1486 = shl i32 %1453, 1
  %1487 = icmp eq i32 %1486, 0
  %1488 = getelementptr inbounds i32, i32* %1457, i64 1
  %1489 = select i1 %1487, i32 1, i32 %1486
  %1490 = select i1 %1487, i32* %1488, i32* %1457
  %1491 = load atomic i32, i32* %1490 acquire, align 4
  %1492 = and i32 %1491, %1489
  %1493 = icmp eq i32 %1492, 0
  br i1 %1493, label %1550, label %1494

1494:                                             ; preds = %1485
  %1495 = load atomic i32, i32* %1434 monotonic, align 4
  br label %1496

1496:                                             ; preds = %1500, %1494
  %1497 = phi i32 [ %1495, %1494 ], [ %1503, %1500 ]
  %1498 = and i32 %1497, %1430
  %1499 = icmp eq i32 %1498, %1430
  br i1 %1499, label %1550, label %1500

1500:                                             ; preds = %1496
  %1501 = or i32 %1497, %1430
  %1502 = cmpxchg volatile i32* %1434, i32 %1497, i32 %1501 release monotonic
  %1503 = extractvalue { i32, i1 } %1502, 0
  %1504 = extractvalue { i32, i1 } %1502, 1
  br i1 %1504, label %1505, label %1496

1505:                                             ; preds = %1500
  %1506 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1506) #12
  %1507 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %1229, i64* %1507, align 8
  %1508 = xor i64 %1424, -1
  %1509 = add i64 %1229, %1508
  %1510 = trunc i64 %1509 to i32
  %1511 = lshr i32 %1510, 2
  %1512 = and i32 %1511, 31
  %1513 = shl i32 1, %1512
  %1514 = lshr i64 %1509, 7
  %1515 = and i64 %1514, 33554431
  %1516 = getelementptr inbounds i32, i32* %1431, i64 %1515
  %1517 = load atomic i32, i32* %1516 acquire, align 4
  %1518 = and i32 %1517, %1513
  %1519 = icmp eq i32 %1518, 0
  br i1 %1519, label %1549, label %1520

1520:                                             ; preds = %1505
  %1521 = shl i32 %1513, 1
  %1522 = icmp eq i32 %1521, 0
  %1523 = getelementptr inbounds i32, i32* %1516, i64 1
  %1524 = select i1 %1522, i32 1, i32 %1521
  %1525 = select i1 %1522, i32* %1523, i32* %1516
  %1526 = load atomic i32, i32* %1525 monotonic, align 4
  br label %1527

1527:                                             ; preds = %1531, %1520
  %1528 = phi i32 [ %1526, %1520 ], [ %1534, %1531 ]
  %1529 = and i32 %1528, %1524
  %1530 = icmp eq i32 %1529, %1524
  br i1 %1530, label %1549, label %1531

1531:                                             ; preds = %1527
  %1532 = or i32 %1528, %1524
  %1533 = cmpxchg volatile i32* %1525, i32 %1528, i32 %1532 release monotonic
  %1534 = extractvalue { i32, i1 } %1533, 0
  %1535 = extractvalue { i32, i1 } %1533, 1
  br i1 %1535, label %1536, label %1527

1536:                                             ; preds = %1531
  %1537 = inttoptr i64 %1424 to %"class.v8::internal::MemoryChunk"*
  %1538 = load i64, i64* %1507, align 8
  %1539 = and i64 %1538, -4294967296
  %1540 = add i64 %1538, -1
  %1541 = inttoptr i64 %1540 to i32*
  %1542 = load atomic i32, i32* %1541 monotonic, align 4
  %1543 = zext i32 %1542 to i64
  %1544 = or i64 %1539, %1543
  %1545 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %4, i64 %1544) #12
  %1546 = sext i32 %1545 to i64
  %1547 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1537, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1548 = atomicrmw add i64* %1547, i64 %1546 seq_cst
  br label %1549

1549:                                             ; preds = %1527, %1536, %1505
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1506) #12
  br label %1550

1550:                                             ; preds = %1476, %1472, %1496, %1549, %1485, %1481, %1438, %1419
  %1551 = bitcast %"class.v8::internal::Heap"** %123 to i64*
  %1552 = load i64, i64* %1551, align 8
  %1553 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1554 = icmp eq i8 %1553, 0
  br i1 %1554, label %1658, label %1555

1555:                                             ; preds = %1550
  %1556 = add i64 %26, 7
  %1557 = inttoptr i64 %1556 to i16*
  %1558 = load atomic i16, i16* %1557 monotonic, align 2
  switch i16 %1558, label %1658 [
    i16 1085, label %1559
    i16 1057, label %1559
  ]

1559:                                             ; preds = %1555, %1555
  %1560 = bitcast %"class.v8::internal::HeapObject"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1560) #12
  %1561 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %56, i64* %1561, align 8
  %1562 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %5, i64 %26) #12
  %1563 = sext i32 %1562 to i64
  %1564 = add i64 %125, %1563
  %1565 = add i64 %1564, 4
  %1566 = and i64 %1565, -262144
  %1567 = inttoptr i64 %1566 to %"class.v8::internal::Page"*
  %1568 = icmp eq %"class.v8::internal::Page"* %127, %1567
  br i1 %1568, label %1569, label %1599

1569:                                             ; preds = %1559
  %1570 = add i64 %56, %1563
  %1571 = add i64 %1552, -41416
  %1572 = inttoptr i64 %1571 to %"class.v8::internal::Isolate"*
  %1573 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1572, i64 0, i32 0, i32 7, i32 0, i64 534
  %1574 = load i64, i64* %1573, align 8
  %1575 = inttoptr i64 %1564 to i32*
  %1576 = load atomic i32, i32* %1575 monotonic, align 4
  %1577 = trunc i64 %1574 to i32
  %1578 = icmp eq i32 %1576, %1577
  br i1 %1578, label %1579, label %1599

1579:                                             ; preds = %1569
  %1580 = load i64, i64* %132, align 8
  %1581 = and i64 %1580, 524288
  %1582 = icmp eq i64 %1581, 0
  br i1 %1582, label %1600, label %1583

1583:                                             ; preds = %1579
  %1584 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 8, i32 0
  %1585 = bitcast %"struct.std::__1::__atomic_base.69"* %1584 to i64*
  %1586 = load atomic i64, i64* %1585 seq_cst, align 64
  %1587 = inttoptr i64 %1586 to %"class.v8::internal::SemiSpace"*
  %1588 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1587, i64 0, i32 5
  %1589 = load i64, i64* %1588, align 8
  %1590 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 3
  %1591 = load i64, i64* %1590, align 8
  %1592 = icmp ugt i64 %1591, %1589
  br i1 %1592, label %1599, label %1593

1593:                                             ; preds = %1583
  %1594 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %127, i64 0, i32 0, i32 0, i32 4
  %1595 = load i64, i64* %1594, align 32
  %1596 = icmp ule i64 %1595, %1589
  %1597 = icmp ult i64 %125, %1589
  %1598 = or i1 %1597, %1596
  br i1 %1598, label %1599, label %1600

1599:                                             ; preds = %1593, %1583, %1569, %1559
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1560) #12
  br label %1658

1600:                                             ; preds = %1593, %1579
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1560) #12
  %1601 = trunc i64 %1570 to i32
  %1602 = icmp eq i32 %1601, 0
  br i1 %1602, label %1658, label %1603

1603:                                             ; preds = %1600
  %1604 = and i64 %1570, -4294967296
  %1605 = add i64 %1570, 3
  %1606 = inttoptr i64 %1605 to i32*
  %1607 = load i32, i32* %1606, align 4
  %1608 = zext i32 %1607 to i64
  %1609 = or i64 %1604, %1608
  %1610 = bitcast %"class.v8::internal::AllocationSite"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1610) #12
  %1611 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1609, i64* %1611, align 8
  %1612 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1613 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1613) #12
  %1614 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %8, %"class.v8::internal::AllocationSite"** %1614, align 8
  %1615 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1615) #12
  %1616 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1612, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %7) #12
  %1617 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1616, 0
  %1618 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1617, i64 3
  %1619 = bitcast %"struct.std::__1::__hash_node_base.518"* %1618 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1615) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1613) #12
  %1620 = load i64, i64* %1619, align 8
  %1621 = add i64 %1620, 1
  store i64 %1621, i64* %1619, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1610) #12
  br label %1658

1622:                                             ; preds = %1408
  %1623 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %1624 = load i64, i64* %1623, align 8
  %1625 = icmp ne i64 %1624, 0
  %1626 = sub i64 %1624, %681
  %1627 = icmp eq i64 %1626, %1233
  %1628 = and i1 %1625, %1627
  br i1 %1628, label %1629, label %1630

1629:                                             ; preds = %1622
  store i64 %1233, i64* %1623, align 8
  br label %1634

1630:                                             ; preds = %1622
  %1631 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1200, i64 0, i32 0
  %1632 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1631, align 8
  %1633 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1632, i64 %1233, i32 %45, i32 1) #12
  br label %1634

1634:                                             ; preds = %1630, %1629
  %1635 = and i64 %56, -4294967296
  %1636 = load atomic i32, i32* %1410 acquire, align 4
  %1637 = zext i32 %1636 to i64
  %1638 = or i64 %1635, %1637
  %1639 = add i64 %1638, 1
  %1640 = inttoptr i64 %1 to i64*
  %1641 = load i64, i64* %1640, align 8
  %1642 = and i64 %1641, 2
  %1643 = or i64 %1639, %1642
  store i64 %1643, i64* %1640, align 8
  %1644 = and i64 %1639, 1
  %1645 = icmp ne i64 %1644, 0
  %1646 = trunc i64 %1643 to i32
  %1647 = icmp ne i32 %1646, 3
  %1648 = and i1 %1645, %1647
  br i1 %1648, label %1649, label %1729

1649:                                             ; preds = %1634
  %1650 = and i64 %1639, -262144
  %1651 = inttoptr i64 %1650 to %"class.v8::internal::BasicMemoryChunk"*
  %1652 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1651, i64 0, i32 1
  %1653 = load i64, i64* %1652, align 8
  %1654 = lshr i64 %1653, 4
  %1655 = trunc i64 %1654 to i32
  %1656 = and i32 %1655, 1
  %1657 = xor i32 %1656, 1
  br label %1729

1658:                                             ; preds = %1603, %1600, %1599, %1555, %1550
  %1659 = inttoptr i64 %1 to i64*
  %1660 = load i64, i64* %1659, align 8
  %1661 = and i64 %1660, 2
  %1662 = or i64 %1661, %1229
  store i64 %1662, i64* %1659, align 8
  br i1 %57, label %1663, label %1723

1663:                                             ; preds = %1658
  %1664 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %1665 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %1664, align 8
  %1666 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %1667 = load i32, i32* %1666, align 8
  %1668 = sext i32 %1667 to i64
  %1669 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1665, i64 0, i32 0, i64 %1668, i32 0
  %1670 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1669, align 8
  %1671 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1670, i64 0, i32 1
  %1672 = load i64, i64* %1671, align 8
  %1673 = icmp eq i64 %1672, 256
  br i1 %1673, label %1678, label %1674

1674:                                             ; preds = %1663
  %1675 = add i64 %1672, 1
  store i64 %1675, i64* %1671, align 8
  %1676 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1670, i64 0, i32 2, i64 %1672, i32 0, i32 0, i32 0, i32 0
  store i64 %1229, i64* %1676, align 8
  %1677 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1670, i64 0, i32 2, i64 %1672, i32 1
  store i32 %45, i32* %1677, align 8
  br label %1723

1678:                                             ; preds = %1663
  %1679 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1665, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1679) #12
  %1680 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1665, i64 0, i32 1, i32 1
  %1681 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1680 to i64*
  %1682 = load i64, i64* %1681, align 8
  %1683 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1670 to i64*
  store i64 %1682, i64* %1683, align 8
  %1684 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1670 to i64
  store atomic volatile i64 %1684, i64* %1681 monotonic, align 8
  %1685 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1665, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1686 = atomicrmw add i64* %1685, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1679) #12
  %1687 = call i8* @_Znwm(i64 4112) #17
  %1688 = getelementptr inbounds i8, i8* %1687, i64 8
  %1689 = bitcast i8* %1688 to i64*
  store i64 0, i64* %1689, align 8
  %1690 = getelementptr inbounds i8, i8* %1687, i64 16
  %1691 = bitcast i8* %1690 to %"struct.std::__1::pair.1282"*
  %1692 = getelementptr inbounds i8, i8* %1687, i64 4112
  %1693 = bitcast i8* %1692 to %"struct.std::__1::pair.1282"*
  br label %1694

1694:                                             ; preds = %1694, %1678
  %1695 = phi %"struct.std::__1::pair.1282"* [ %1691, %1678 ], [ %1712, %1694 ]
  %1696 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1696, align 8
  %1697 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 0, i32 1
  store i32 0, i32* %1697, align 8
  %1698 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1698, align 8
  %1699 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 1, i32 1
  store i32 0, i32* %1699, align 8
  %1700 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1700, align 8
  %1701 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 2, i32 1
  store i32 0, i32* %1701, align 8
  %1702 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1702, align 8
  %1703 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 3, i32 1
  store i32 0, i32* %1703, align 8
  %1704 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1704, align 8
  %1705 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 4, i32 1
  store i32 0, i32* %1705, align 8
  %1706 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1706, align 8
  %1707 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 5, i32 1
  store i32 0, i32* %1707, align 8
  %1708 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1708, align 8
  %1709 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 6, i32 1
  store i32 0, i32* %1709, align 8
  %1710 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1710, align 8
  %1711 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 7, i32 1
  store i32 0, i32* %1711, align 8
  %1712 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1695, i64 8
  %1713 = icmp eq %"struct.std::__1::pair.1282"* %1712, %1693
  br i1 %1713, label %1714, label %1694

1714:                                             ; preds = %1694
  %1715 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1669 to i8**
  store i8* %1687, i8** %1715, align 8
  %1716 = bitcast i8* %1687 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1717 = load i64, i64* %1689, align 8
  %1718 = icmp eq i64 %1717, 256
  br i1 %1718, label %1723, label %1719

1719:                                             ; preds = %1714
  %1720 = add i64 %1717, 1
  store i64 %1720, i64* %1689, align 8
  %1721 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1716, i64 0, i32 2, i64 %1717, i32 0, i32 0, i32 0, i32 0
  store i64 %1229, i64* %1721, align 8
  %1722 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1716, i64 0, i32 2, i64 %1717, i32 1
  store i32 %45, i32* %1722, align 8
  br label %1723

1723:                                             ; preds = %1719, %1714, %1674, %1658
  %1724 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %1725 = load i64, i64* %1724, align 8
  %1726 = add i64 %1725, %681
  store i64 %1726, i64* %1724, align 8
  br label %1729

1727:                                             ; preds = %1228
  %1728 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %123, align 8
  call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %1728, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

1729:                                             ; preds = %49, %52, %67, %73, %95, %100, %583, %598, %672, %1106, %1121, %1195, %1634, %1649, %1723
  %1730 = phi i32 [ %54, %52 ], [ %51, %49 ], [ 0, %73 ], [ 0, %67 ], [ 0, %95 ], [ 0, %100 ], [ 1, %583 ], [ %606, %598 ], [ 0, %672 ], [ 1, %1106 ], [ %1129, %1121 ], [ 1, %1195 ], [ 1, %1634 ], [ %1657, %1649 ], [ 0, %1723 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43)
  br label %1731

1731:                                             ; preds = %1729, %29
  %1732 = phi i32 [ %41, %29 ], [ %1730, %1729 ]
  ret i32 %1732
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal19RootScavengeVisitorC2EPNS0_9ScavengerE(%"class.v8::internal::RootScavengeVisitor"* nocapture, %"class.v8::internal::Scavenger"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [8 x i8*] }, { [8 x i8*] }* @_ZTVN2v88internal19RootScavengeVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::RootScavengeVisitor", %"class.v8::internal::RootScavengeVisitor"* %0, i64 0, i32 1
  store %"class.v8::internal::Scavenger"* %1, %"class.v8::internal::Scavenger"** %4, align 8
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN2v88internal15ScavengeVisitorC2EPNS0_9ScavengerE(%"class.v8::internal::ScavengeVisitor"* nocapture, %"class.v8::internal::Scavenger"*) unnamed_addr #8 align 2 {
  %3 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [20 x i8*] }, { [20 x i8*] }* @_ZTVN2v88internal15ScavengeVisitorE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %0, i64 0, i32 1
  store %"class.v8::internal::Scavenger"* %1, %"class.v8::internal::Scavenger"** %4, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18ScavengerCollector7JobTaskD2Ev(%"class.v8::internal::ScavengerCollector::JobTask"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal18ScavengerCollector7JobTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 5
  tail call void @_ZN2v88internal14IndexGeneratorD2Ev(%"class.v8::internal::IndexGenerator"* %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.1195"*, %"struct.std::__1::pair.1195"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.1195"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.std::__1::pair.1195"* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair.1195"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %5, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18ScavengerCollector7JobTaskD0Ev(%"class.v8::internal::ScavengerCollector::JobTask"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN2v88internal18ScavengerCollector7JobTaskE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 5
  tail call void @_ZN2v88internal14IndexGeneratorD2Ev(%"class.v8::internal::IndexGenerator"* %3) #12
  %4 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.1195"*, %"struct.std::__1::pair.1195"** %4, align 8
  %6 = icmp eq %"struct.std::__1::pair.1195"* %5, null
  br i1 %6, label %12, label %7

7:                                                ; preds = %1
  %8 = ptrtoint %"struct.std::__1::pair.1195"* %5 to i64
  %9 = getelementptr inbounds %"class.v8::internal::ScavengerCollector::JobTask", %"class.v8::internal::ScavengerCollector::JobTask"* %0, i64 0, i32 3, i32 0, i32 1
  %10 = bitcast %"struct.std::__1::pair.1195"** %9 to i64*
  store i64 %8, i64* %10, align 8
  %11 = getelementptr inbounds %"struct.std::__1::pair.1195", %"struct.std::__1::pair.1195"* %5, i64 0, i32 0, i32 0
  tail call void @_ZdlPv(i8* %11) #17
  br label %12

12:                                               ; preds = %1, %7
  %13 = bitcast %"class.v8::internal::ScavengerCollector::JobTask"* %0 to i8*
  tail call void @_ZdlPv(i8* %13) #17
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19RootScavengeVisitorD0Ev(%"class.v8::internal::RootScavengeVisitor"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::RootScavengeVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor17VisitRootPointersENS0_4RootEPKcNS0_27OffHeapCompressedObjectSlotES5_(%"class.v8::internal::RootVisitor"*, i32, i8*, i64, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitor11SynchronizeENS0_22VisitorSynchronization7SyncTagE(%"class.v8::internal::RootVisitor"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15ScavengeVisitorD0Ev(%"class.v8::internal::ScavengeVisitor"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::ScavengeVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15ScavengeVisitor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_(%"class.v8::internal::ScavengeVisitor"*, i64, i64, i64) unnamed_addr #9 comdat align 2 {
  %5 = icmp ult i64 %2, %3
  br i1 %5, label %6, label %30

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %27, %6
  %9 = phi i64 [ %2, %6 ], [ %28, %27 ]
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = and i64 %9, -4294967296
  %13 = zext i32 %11 to i64
  %14 = or i64 %12, %13
  %15 = and i64 %13, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %27, label %17

17:                                               ; preds = %8
  %18 = and i64 %14, -262144
  %19 = inttoptr i64 %18 to %"class.v8::internal::BasicMemoryChunk"*
  %20 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %19, i64 0, i32 1
  %21 = load i64, i64* %20, align 8
  %22 = and i64 %21, 24
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %17
  %25 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %7, align 8
  %26 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %25, i64 %9, i64 %14) #12
  br label %27

27:                                               ; preds = %24, %17, %8
  %28 = add i64 %9, 4
  %29 = icmp ult i64 %28, %3
  br i1 %29, label %8, label %30

30:                                               ; preds = %27, %4
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15ScavengeVisitor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_(%"class.v8::internal::ScavengeVisitor"*, i64, i64, i64) unnamed_addr #9 comdat align 2 {
  %5 = icmp ult i64 %2, %3
  br i1 %5, label %6, label %33

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %0, i64 0, i32 1
  br label %8

8:                                                ; preds = %30, %6
  %9 = phi i64 [ %2, %6 ], [ %31, %30 ]
  %10 = inttoptr i64 %9 to i32*
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = and i64 %12, 1
  %14 = icmp ne i64 %13, 0
  %15 = icmp ne i32 %11, 3
  %16 = and i1 %15, %14
  br i1 %16, label %17, label %30

17:                                               ; preds = %8
  %18 = and i64 %9, -4294967296
  %19 = and i64 %12, 4294967293
  %20 = or i64 %19, %18
  %21 = and i64 %20, -262144
  %22 = inttoptr i64 %21 to %"class.v8::internal::BasicMemoryChunk"*
  %23 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %22, i64 0, i32 1
  %24 = load i64, i64* %23, align 8
  %25 = and i64 %24, 24
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %17
  %28 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %7, align 8
  %29 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %28, i64 %9, i64 %20) #12
  br label %30

30:                                               ; preds = %27, %17, %8
  %31 = add i64 %9, 4
  %32 = icmp ult i64 %31, %3
  br i1 %32, label %8, label %33

33:                                               ; preds = %30, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor23VisitCustomWeakPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_(%"class.v8::internal::ObjectVisitor"*, i64, i64, i64) unnamed_addr #0 comdat align 2 {
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 2
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 2
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor12VisitPointerENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 3
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitCustomWeakPointerENS0_10HeapObjectENS0_20CompressedObjectSlotE(%"class.v8::internal::ObjectVisitor"*, i64, i64) unnamed_addr #0 comdat align 2 {
  %4 = add i64 %2, 4
  %5 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %6 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %5, align 8
  %7 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %6, i64 4
  %8 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %7, align 8
  tail call void %8(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %2, i64 %4) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_(%"class.v8::internal::ObjectVisitor"*, i64, i32, i64, i64) unnamed_addr #0 comdat align 2 {
  %6 = bitcast %"class.v8::internal::ObjectVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64)***
  %7 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %7, i64 5
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %8, align 8
  tail call void %9(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %3) #12
  %10 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*** %6, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %10, i64 5
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64)** %11, align 8
  tail call void %12(%"class.v8::internal::ObjectVisitor"* %0, i64 %1, i64 %4) #12
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15ScavengeVisitor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ScavengeVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #9 comdat align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 1
  %10 = sext i32 %9 to i64
  %11 = add i64 %7, 4
  %12 = add i64 %11, %10
  %13 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %14 = ptrtoint i8* %13 to i64
  %15 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12
  %16 = icmp uge i64 %12, %14
  %17 = zext i32 %15 to i64
  %18 = add i64 %17, %14
  %19 = icmp ugt i64 %18, %12
  %20 = and i1 %16, %19
  br i1 %20, label %21, label %22, !prof !29

21:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0)) #16
  unreachable

22:                                               ; preds = %3
  %23 = add i64 %12, -63
  %24 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = and i64 %23, -262144
  %26 = inttoptr i64 %25 to %"class.v8::internal::BasicMemoryChunk"*
  %27 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %26, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = and i64 %28, 24
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %36, label %31

31:                                               ; preds = %22
  %32 = ptrtoint %"class.v8::internal::Code"* %4 to i64
  %33 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %0, i64 0, i32 1
  %34 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %33, align 8
  %35 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %34, i64 %32, i64 %23) #12
  br label %36

36:                                               ; preds = %22, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15ScavengeVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ScavengeVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #9 comdat align 2 {
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 3
  br i1 %8, label %9, label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15, !prof !29

14:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %9
  %16 = bitcast %"class.v8::internal::RelocInfo"* %2 to i32**
  %17 = load i32*, i32** %16, align 8
  %18 = load i32, i32* %17, align 1
  %19 = and i64 %11, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  br label %26

22:                                               ; preds = %3
  %23 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %24 = load i64*, i64** %23, align 8
  %25 = load i64, i64* %24, align 1
  br label %26

26:                                               ; preds = %15, %22
  %27 = phi i64 [ %21, %15 ], [ %25, %22 ]
  %28 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = and i64 %27, -262144
  %30 = inttoptr i64 %29 to %"class.v8::internal::BasicMemoryChunk"*
  %31 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %30, i64 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = and i64 %32, 24
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %40, label %35

35:                                               ; preds = %26
  %36 = ptrtoint %"class.v8::internal::HeapObject"* %4 to i64
  %37 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %0, i64 0, i32 1
  %38 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %37, align 8
  %39 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %38, i64 %36, i64 %27) #12
  br label %40

40:                                               ; preds = %26, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor17VisitRuntimeEntryENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitExternalReferenceENS0_7ForeignEPm(%"class.v8::internal::ObjectVisitor"*, i64, i64*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor22VisitInternalReferenceENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor18VisitOffHeapTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::ObjectVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE(%"class.v8::internal::ObjectVisitor"*, %"class.v8::internal::RelocIterator"*) unnamed_addr #1

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11HeapVisitorIiNS0_15ScavengeVisitorEE15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::HeapVisitor"*, i64) unnamed_addr #9 comdat align 2 {
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #10

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #11

declare void @_ZN2v84base5MutexC1Ev(%"class.v8::base::Mutex"*) unnamed_addr #1

; Function Attrs: nounwind
declare void @llvm.assume(i1) #12

declare void @_ZN2v88internal9SemiSpace12set_age_markEm(%"class.v8::internal::SemiSpace"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal11AlignedFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EED2Ev(%"class.v8::internal::Worklist.1181"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp sgt i32 %3, 0
  br i1 %4, label %5, label %23

5:                                                ; preds = %1
  %6 = sext i32 %3 to i64
  br label %9

7:                                                ; preds = %16
  %8 = icmp eq i64 %22, %6
  br i1 %8, label %23, label %9

9:                                                ; preds = %7, %5
  %10 = phi i64 [ 0, %5 ], [ %22, %7 ]
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %10, i32 1
  %12 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %11, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %12, i64 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %14, 0
  br i1 %15, label %16, label %29, !prof !67

16:                                               ; preds = %9
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %10, i32 0
  %18 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  %22 = add nuw nsw i64 %10, 1
  br i1 %21, label %7, label %29, !prof !67

23:                                               ; preds = %7, %1
  %24 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 1
  %25 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %24 to i64*
  %26 = load atomic i64, i64* %25 monotonic, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %28, label %29, !prof !60

28:                                               ; preds = %23
  br i1 %4, label %32, label %30

29:                                               ; preds = %16, %9, %23
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #16
  unreachable

30:                                               ; preds = %45, %28
  %31 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %31) #12
  ret void

32:                                               ; preds = %28, %45
  %33 = phi i64 [ %46, %45 ], [ 0, %28 ]
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %33, i32 0
  %35 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %34, align 8
  %36 = icmp eq %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %35, null
  br i1 %36, label %39, label %37

37:                                               ; preds = %32
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %35 to i8*
  tail call void @_ZdlPv(i8* %38) #17
  br label %39

39:                                               ; preds = %37, %32
  %40 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %33, i32 1
  %41 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %40, align 8
  %42 = icmp eq %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #17
  br label %45

45:                                               ; preds = %39, %43
  %46 = add nuw nsw i64 %33, 1
  %47 = load i32, i32* %2, align 8
  %48 = sext i32 %47 to i64
  %49 = icmp slt i64 %46, %48
  br i1 %49, label %32, label %30
}

; Function Attrs: noreturn
declare void @_Z8V8_FatalPKcz(i8*, ...) local_unnamed_addr #13

; Function Attrs: nounwind
declare void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"*) unnamed_addr #3

declare %"class.v8::internal::FreeList"* @_ZN2v88internal8FreeList14CreateFreeListEv() local_unnamed_addr #1

declare void @_ZN2v88internal10PagedSpaceC2EPNS0_4HeapENS0_15AllocationSpaceENS0_13ExecutabilityEPNS0_8FreeListENS0_14LocalSpaceKindE(%"class.v8::internal::PagedSpace"*, %"class.v8::internal::Heap"*, i32, i32, %"class.v8::internal::FreeList"*, i32) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal21LocalAllocationBufferC1EPNS0_4HeapENS0_20LinearAllocationAreaE(%"class.v8::internal::LocalAllocationBuffer"*, %"class.v8::internal::Heap"*, %"class.v8::internal::LinearAllocationArea"* byval(%"class.v8::internal::LinearAllocationArea") align 8) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitorD0Ev(%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor13VisitPointersENS0_10HeapObjectENS0_20CompressedObjectSlotES3_(%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, i64, i64) unnamed_addr #9 comdat align 2 {
  %5 = icmp ult i64 %2, %3
  br i1 %5, label %6, label %205

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 1
  %8 = and i64 %1, -262144
  %9 = inttoptr i64 %8 to %"class.v8::internal::MemoryChunk"*
  %10 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %9, i64 0, i32 4
  %11 = bitcast %"class.v8::internal::SlotSet"** %10 to i64*
  %12 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %9, i64 0, i32 1, i64 0
  %13 = bitcast %"class.v8::internal::SlotSet"** %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %9, i64 0, i32 1, i64 1
  %16 = bitcast %"class.v8::internal::SlotSet"** %15 to i64*
  br label %17

17:                                               ; preds = %202, %6
  %18 = phi i64 [ %2, %6 ], [ %203, %202 ]
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = and i64 %18, -4294967296
  %22 = zext i32 %20 to i64
  %23 = or i64 %21, %22
  %24 = and i64 %22, 1
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %202, label %26

26:                                               ; preds = %17
  %27 = and i64 %23, -262144
  %28 = inttoptr i64 %27 to %"class.v8::internal::BasicMemoryChunk"*
  %29 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %28, i64 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %142, label %33

33:                                               ; preds = %26
  %34 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %7, align 8
  %35 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %34, i64 %18, i64 %23) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %202

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %11 acquire, align 128
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %91, label %40

40:                                               ; preds = %37
  %41 = load atomic i64, i64* %11 acquire, align 128
  %42 = inttoptr i64 %41 to %"class.v8::internal::SlotSet"*
  %43 = icmp eq i64 %41, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %40
  %45 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"* %9) #12
  br label %46

46:                                               ; preds = %44, %40
  %47 = phi %"class.v8::internal::SlotSet"* [ %45, %44 ], [ %42, %40 ]
  %48 = sub i64 %18, %8
  %49 = lshr i64 %48, 2
  %50 = lshr i64 %48, 12
  %51 = lshr i64 %48, 7
  %52 = and i64 %51, 31
  %53 = trunc i64 %49 to i32
  %54 = and i32 %53, 31
  %55 = bitcast %"class.v8::internal::SlotSet"* %47 to %"class.v8::internal::SlotSet::Bucket"**
  %56 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %55, i64 %50
  %57 = bitcast %"class.v8::internal::SlotSet::Bucket"** %56 to i64*
  %58 = load atomic i64, i64* %57 acquire, align 8
  %59 = inttoptr i64 %58 to %"class.v8::internal::SlotSet::Bucket"*
  %60 = icmp eq i64 %58, 0
  br i1 %60, label %61, label %73

61:                                               ; preds = %46
  %62 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %63 = bitcast i8* %62 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %62, i8 0, i64 128, i1 false) #12
  %64 = ptrtoint i8* %62 to i64
  %65 = cmpxchg volatile i64* %57, i64 0, i64 %64 release monotonic
  %66 = extractvalue { i64, i1 } %65, 1
  br i1 %66, label %73, label %67

67:                                               ; preds = %61
  %68 = icmp eq i8* %62, null
  br i1 %68, label %70, label %69

69:                                               ; preds = %67
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %62) #12
  br label %70

70:                                               ; preds = %69, %67
  %71 = load atomic i64, i64* %57 acquire, align 8
  %72 = inttoptr i64 %71 to %"class.v8::internal::SlotSet::Bucket"*
  br label %73

73:                                               ; preds = %70, %61, %46
  %74 = phi %"class.v8::internal::SlotSet::Bucket"* [ %63, %61 ], [ %72, %70 ], [ %59, %46 ]
  %75 = shl i32 1, %54
  %76 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %74, i64 0, i32 0, i64 %52
  %77 = load atomic i32, i32* %76 acquire, align 4
  %78 = and i32 %77, %75
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %202

80:                                               ; preds = %73
  %81 = load atomic i32, i32* %76 monotonic, align 4
  br label %82

82:                                               ; preds = %86, %80
  %83 = phi i32 [ %81, %80 ], [ %89, %86 ]
  %84 = and i32 %83, %75
  %85 = icmp eq i32 %84, %75
  br i1 %85, label %202, label %86

86:                                               ; preds = %82
  %87 = or i32 %83, %75
  %88 = cmpxchg volatile i32* %76, i32 %83, i32 %87 release monotonic
  %89 = extractvalue { i32, i1 } %88, 0
  %90 = extractvalue { i32, i1 } %88, 1
  br i1 %90, label %202, label %82

91:                                               ; preds = %37
  %92 = load atomic i64, i64* %13 acquire, align 32
  %93 = inttoptr i64 %92 to %"class.v8::internal::SlotSet"*
  %94 = icmp eq i64 %92, 0
  br i1 %94, label %95, label %97

95:                                               ; preds = %91
  %96 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %9) #12
  br label %97

97:                                               ; preds = %95, %91
  %98 = phi %"class.v8::internal::SlotSet"* [ %96, %95 ], [ %93, %91 ]
  %99 = sub i64 %18, %8
  %100 = lshr i64 %99, 2
  %101 = lshr i64 %99, 12
  %102 = lshr i64 %99, 7
  %103 = and i64 %102, 31
  %104 = trunc i64 %100 to i32
  %105 = and i32 %104, 31
  %106 = bitcast %"class.v8::internal::SlotSet"* %98 to %"class.v8::internal::SlotSet::Bucket"**
  %107 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %106, i64 %101
  %108 = bitcast %"class.v8::internal::SlotSet::Bucket"** %107 to i64*
  %109 = load atomic i64, i64* %108 acquire, align 8
  %110 = inttoptr i64 %109 to %"class.v8::internal::SlotSet::Bucket"*
  %111 = icmp eq i64 %109, 0
  br i1 %111, label %112, label %124

112:                                              ; preds = %97
  %113 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %114 = bitcast i8* %113 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %113, i8 0, i64 128, i1 false) #12
  %115 = ptrtoint i8* %113 to i64
  %116 = cmpxchg volatile i64* %108, i64 0, i64 %115 release monotonic
  %117 = extractvalue { i64, i1 } %116, 1
  br i1 %117, label %124, label %118

118:                                              ; preds = %112
  %119 = icmp eq i8* %113, null
  br i1 %119, label %121, label %120

120:                                              ; preds = %118
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %113) #12
  br label %121

121:                                              ; preds = %120, %118
  %122 = load atomic i64, i64* %108 acquire, align 8
  %123 = inttoptr i64 %122 to %"class.v8::internal::SlotSet::Bucket"*
  br label %124

124:                                              ; preds = %121, %112, %97
  %125 = phi %"class.v8::internal::SlotSet::Bucket"* [ %114, %112 ], [ %123, %121 ], [ %110, %97 ]
  %126 = shl i32 1, %105
  %127 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %125, i64 0, i32 0, i64 %103
  %128 = load atomic i32, i32* %127 acquire, align 4
  %129 = and i32 %128, %126
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %131, label %202

131:                                              ; preds = %124
  %132 = load atomic i32, i32* %127 monotonic, align 4
  br label %133

133:                                              ; preds = %137, %131
  %134 = phi i32 [ %132, %131 ], [ %140, %137 ]
  %135 = and i32 %134, %126
  %136 = icmp eq i32 %135, %126
  br i1 %136, label %202, label %137

137:                                              ; preds = %133
  %138 = or i32 %134, %126
  %139 = cmpxchg volatile i32* %127, i32 %134, i32 %138 release monotonic
  %140 = extractvalue { i32, i1 } %139, 0
  %141 = extractvalue { i32, i1 } %139, 1
  br i1 %141, label %202, label %133

142:                                              ; preds = %26
  %143 = load i8, i8* %14, align 8, !range !2
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %202, label %145

145:                                              ; preds = %142
  %146 = inttoptr i64 %27 to %"class.v8::internal::Page"*
  %147 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %146, i64 0, i32 0, i32 0, i32 1
  %148 = load i64, i64* %147, align 8
  %149 = and i64 %148, 64
  %150 = icmp eq i64 %149, 0
  br i1 %150, label %202, label %151

151:                                              ; preds = %145
  %152 = load atomic i64, i64* %16 acquire, align 8
  %153 = inttoptr i64 %152 to %"class.v8::internal::SlotSet"*
  %154 = icmp eq i64 %152, 0
  br i1 %154, label %155, label %157

155:                                              ; preds = %151
  %156 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %9) #12
  br label %157

157:                                              ; preds = %155, %151
  %158 = phi %"class.v8::internal::SlotSet"* [ %156, %155 ], [ %153, %151 ]
  %159 = sub i64 %18, %8
  %160 = lshr i64 %159, 2
  %161 = lshr i64 %159, 12
  %162 = lshr i64 %159, 7
  %163 = and i64 %162, 31
  %164 = trunc i64 %160 to i32
  %165 = and i32 %164, 31
  %166 = bitcast %"class.v8::internal::SlotSet"* %158 to %"class.v8::internal::SlotSet::Bucket"**
  %167 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %166, i64 %161
  %168 = bitcast %"class.v8::internal::SlotSet::Bucket"** %167 to i64*
  %169 = load atomic i64, i64* %168 acquire, align 8
  %170 = inttoptr i64 %169 to %"class.v8::internal::SlotSet::Bucket"*
  %171 = icmp eq i64 %169, 0
  br i1 %171, label %172, label %184

172:                                              ; preds = %157
  %173 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %174 = bitcast i8* %173 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %173, i8 0, i64 128, i1 false) #12
  %175 = ptrtoint i8* %173 to i64
  %176 = cmpxchg volatile i64* %168, i64 0, i64 %175 release monotonic
  %177 = extractvalue { i64, i1 } %176, 1
  br i1 %177, label %184, label %178

178:                                              ; preds = %172
  %179 = icmp eq i8* %173, null
  br i1 %179, label %181, label %180

180:                                              ; preds = %178
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %173) #12
  br label %181

181:                                              ; preds = %180, %178
  %182 = load atomic i64, i64* %168 acquire, align 8
  %183 = inttoptr i64 %182 to %"class.v8::internal::SlotSet::Bucket"*
  br label %184

184:                                              ; preds = %181, %172, %157
  %185 = phi %"class.v8::internal::SlotSet::Bucket"* [ %174, %172 ], [ %183, %181 ], [ %170, %157 ]
  %186 = shl i32 1, %165
  %187 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %185, i64 0, i32 0, i64 %163
  %188 = load atomic i32, i32* %187 acquire, align 4
  %189 = and i32 %188, %186
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %202

191:                                              ; preds = %184
  %192 = load atomic i32, i32* %187 monotonic, align 4
  br label %193

193:                                              ; preds = %197, %191
  %194 = phi i32 [ %192, %191 ], [ %200, %197 ]
  %195 = and i32 %194, %186
  %196 = icmp eq i32 %195, %186
  br i1 %196, label %202, label %197

197:                                              ; preds = %193
  %198 = or i32 %194, %186
  %199 = cmpxchg volatile i32* %187, i32 %194, i32 %198 release monotonic
  %200 = extractvalue { i32, i1 } %199, 0
  %201 = extractvalue { i32, i1 } %199, 1
  br i1 %201, label %202, label %193

202:                                              ; preds = %86, %82, %137, %133, %197, %193, %184, %145, %142, %124, %73, %33, %17
  %203 = add i64 %18, 4
  %204 = icmp ult i64 %203, %3
  br i1 %204, label %17, label %205

205:                                              ; preds = %202, %4
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor13VisitPointersENS0_10HeapObjectENS0_25CompressedMaybeObjectSlotES3_(%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, i64, i64) unnamed_addr #9 comdat align 2 {
  %5 = icmp ult i64 %2, %3
  br i1 %5, label %6, label %208

6:                                                ; preds = %4
  %7 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 1
  %8 = and i64 %1, -262144
  %9 = inttoptr i64 %8 to %"class.v8::internal::MemoryChunk"*
  %10 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %9, i64 0, i32 4
  %11 = bitcast %"class.v8::internal::SlotSet"** %10 to i64*
  %12 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %9, i64 0, i32 1, i64 0
  %13 = bitcast %"class.v8::internal::SlotSet"** %12 to i64*
  %14 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 2
  %15 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %9, i64 0, i32 1, i64 1
  %16 = bitcast %"class.v8::internal::SlotSet"** %15 to i64*
  br label %17

17:                                               ; preds = %205, %6
  %18 = phi i64 [ %2, %6 ], [ %206, %205 ]
  %19 = inttoptr i64 %18 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = and i64 %21, 1
  %23 = icmp ne i64 %22, 0
  %24 = icmp ne i32 %20, 3
  %25 = and i1 %24, %23
  br i1 %25, label %26, label %205

26:                                               ; preds = %17
  %27 = and i64 %18, -4294967296
  %28 = and i64 %21, 4294967293
  %29 = or i64 %28, %27
  %30 = and i64 %29, -262144
  %31 = inttoptr i64 %30 to %"class.v8::internal::BasicMemoryChunk"*
  %32 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %145, label %36

36:                                               ; preds = %26
  %37 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %7, align 8
  %38 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %37, i64 %18, i64 %29) #12
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %205

40:                                               ; preds = %36
  %41 = load atomic i64, i64* %11 acquire, align 128
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %94, label %43

43:                                               ; preds = %40
  %44 = load atomic i64, i64* %11 acquire, align 128
  %45 = inttoptr i64 %44 to %"class.v8::internal::SlotSet"*
  %46 = icmp eq i64 %44, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %43
  %48 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"* %9) #12
  br label %49

49:                                               ; preds = %47, %43
  %50 = phi %"class.v8::internal::SlotSet"* [ %48, %47 ], [ %45, %43 ]
  %51 = sub i64 %18, %8
  %52 = lshr i64 %51, 2
  %53 = lshr i64 %51, 12
  %54 = lshr i64 %51, 7
  %55 = and i64 %54, 31
  %56 = trunc i64 %52 to i32
  %57 = and i32 %56, 31
  %58 = bitcast %"class.v8::internal::SlotSet"* %50 to %"class.v8::internal::SlotSet::Bucket"**
  %59 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %58, i64 %53
  %60 = bitcast %"class.v8::internal::SlotSet::Bucket"** %59 to i64*
  %61 = load atomic i64, i64* %60 acquire, align 8
  %62 = inttoptr i64 %61 to %"class.v8::internal::SlotSet::Bucket"*
  %63 = icmp eq i64 %61, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %49
  %65 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %66 = bitcast i8* %65 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %65, i8 0, i64 128, i1 false) #12
  %67 = ptrtoint i8* %65 to i64
  %68 = cmpxchg volatile i64* %60, i64 0, i64 %67 release monotonic
  %69 = extractvalue { i64, i1 } %68, 1
  br i1 %69, label %76, label %70

70:                                               ; preds = %64
  %71 = icmp eq i8* %65, null
  br i1 %71, label %73, label %72

72:                                               ; preds = %70
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %65) #12
  br label %73

73:                                               ; preds = %72, %70
  %74 = load atomic i64, i64* %60 acquire, align 8
  %75 = inttoptr i64 %74 to %"class.v8::internal::SlotSet::Bucket"*
  br label %76

76:                                               ; preds = %73, %64, %49
  %77 = phi %"class.v8::internal::SlotSet::Bucket"* [ %66, %64 ], [ %75, %73 ], [ %62, %49 ]
  %78 = shl i32 1, %57
  %79 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %77, i64 0, i32 0, i64 %55
  %80 = load atomic i32, i32* %79 acquire, align 4
  %81 = and i32 %80, %78
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %205

83:                                               ; preds = %76
  %84 = load atomic i32, i32* %79 monotonic, align 4
  br label %85

85:                                               ; preds = %89, %83
  %86 = phi i32 [ %84, %83 ], [ %92, %89 ]
  %87 = and i32 %86, %78
  %88 = icmp eq i32 %87, %78
  br i1 %88, label %205, label %89

89:                                               ; preds = %85
  %90 = or i32 %86, %78
  %91 = cmpxchg volatile i32* %79, i32 %86, i32 %90 release monotonic
  %92 = extractvalue { i32, i1 } %91, 0
  %93 = extractvalue { i32, i1 } %91, 1
  br i1 %93, label %205, label %85

94:                                               ; preds = %40
  %95 = load atomic i64, i64* %13 acquire, align 32
  %96 = inttoptr i64 %95 to %"class.v8::internal::SlotSet"*
  %97 = icmp eq i64 %95, 0
  br i1 %97, label %98, label %100

98:                                               ; preds = %94
  %99 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %9) #12
  br label %100

100:                                              ; preds = %98, %94
  %101 = phi %"class.v8::internal::SlotSet"* [ %99, %98 ], [ %96, %94 ]
  %102 = sub i64 %18, %8
  %103 = lshr i64 %102, 2
  %104 = lshr i64 %102, 12
  %105 = lshr i64 %102, 7
  %106 = and i64 %105, 31
  %107 = trunc i64 %103 to i32
  %108 = and i32 %107, 31
  %109 = bitcast %"class.v8::internal::SlotSet"* %101 to %"class.v8::internal::SlotSet::Bucket"**
  %110 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %109, i64 %104
  %111 = bitcast %"class.v8::internal::SlotSet::Bucket"** %110 to i64*
  %112 = load atomic i64, i64* %111 acquire, align 8
  %113 = inttoptr i64 %112 to %"class.v8::internal::SlotSet::Bucket"*
  %114 = icmp eq i64 %112, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %100
  %116 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %117 = bitcast i8* %116 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %116, i8 0, i64 128, i1 false) #12
  %118 = ptrtoint i8* %116 to i64
  %119 = cmpxchg volatile i64* %111, i64 0, i64 %118 release monotonic
  %120 = extractvalue { i64, i1 } %119, 1
  br i1 %120, label %127, label %121

121:                                              ; preds = %115
  %122 = icmp eq i8* %116, null
  br i1 %122, label %124, label %123

123:                                              ; preds = %121
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %116) #12
  br label %124

124:                                              ; preds = %123, %121
  %125 = load atomic i64, i64* %111 acquire, align 8
  %126 = inttoptr i64 %125 to %"class.v8::internal::SlotSet::Bucket"*
  br label %127

127:                                              ; preds = %124, %115, %100
  %128 = phi %"class.v8::internal::SlotSet::Bucket"* [ %117, %115 ], [ %126, %124 ], [ %113, %100 ]
  %129 = shl i32 1, %108
  %130 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %128, i64 0, i32 0, i64 %106
  %131 = load atomic i32, i32* %130 acquire, align 4
  %132 = and i32 %131, %129
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %205

134:                                              ; preds = %127
  %135 = load atomic i32, i32* %130 monotonic, align 4
  br label %136

136:                                              ; preds = %140, %134
  %137 = phi i32 [ %135, %134 ], [ %143, %140 ]
  %138 = and i32 %137, %129
  %139 = icmp eq i32 %138, %129
  br i1 %139, label %205, label %140

140:                                              ; preds = %136
  %141 = or i32 %137, %129
  %142 = cmpxchg volatile i32* %130, i32 %137, i32 %141 release monotonic
  %143 = extractvalue { i32, i1 } %142, 0
  %144 = extractvalue { i32, i1 } %142, 1
  br i1 %144, label %205, label %136

145:                                              ; preds = %26
  %146 = load i8, i8* %14, align 8, !range !2
  %147 = icmp eq i8 %146, 0
  br i1 %147, label %205, label %148

148:                                              ; preds = %145
  %149 = inttoptr i64 %30 to %"class.v8::internal::Page"*
  %150 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %149, i64 0, i32 0, i32 0, i32 1
  %151 = load i64, i64* %150, align 8
  %152 = and i64 %151, 64
  %153 = icmp eq i64 %152, 0
  br i1 %153, label %205, label %154

154:                                              ; preds = %148
  %155 = load atomic i64, i64* %16 acquire, align 8
  %156 = inttoptr i64 %155 to %"class.v8::internal::SlotSet"*
  %157 = icmp eq i64 %155, 0
  br i1 %157, label %158, label %160

158:                                              ; preds = %154
  %159 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %9) #12
  br label %160

160:                                              ; preds = %158, %154
  %161 = phi %"class.v8::internal::SlotSet"* [ %159, %158 ], [ %156, %154 ]
  %162 = sub i64 %18, %8
  %163 = lshr i64 %162, 2
  %164 = lshr i64 %162, 12
  %165 = lshr i64 %162, 7
  %166 = and i64 %165, 31
  %167 = trunc i64 %163 to i32
  %168 = and i32 %167, 31
  %169 = bitcast %"class.v8::internal::SlotSet"* %161 to %"class.v8::internal::SlotSet::Bucket"**
  %170 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %169, i64 %164
  %171 = bitcast %"class.v8::internal::SlotSet::Bucket"** %170 to i64*
  %172 = load atomic i64, i64* %171 acquire, align 8
  %173 = inttoptr i64 %172 to %"class.v8::internal::SlotSet::Bucket"*
  %174 = icmp eq i64 %172, 0
  br i1 %174, label %175, label %187

175:                                              ; preds = %160
  %176 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %177 = bitcast i8* %176 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %176, i8 0, i64 128, i1 false) #12
  %178 = ptrtoint i8* %176 to i64
  %179 = cmpxchg volatile i64* %171, i64 0, i64 %178 release monotonic
  %180 = extractvalue { i64, i1 } %179, 1
  br i1 %180, label %187, label %181

181:                                              ; preds = %175
  %182 = icmp eq i8* %176, null
  br i1 %182, label %184, label %183

183:                                              ; preds = %181
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %176) #12
  br label %184

184:                                              ; preds = %183, %181
  %185 = load atomic i64, i64* %171 acquire, align 8
  %186 = inttoptr i64 %185 to %"class.v8::internal::SlotSet::Bucket"*
  br label %187

187:                                              ; preds = %184, %175, %160
  %188 = phi %"class.v8::internal::SlotSet::Bucket"* [ %177, %175 ], [ %186, %184 ], [ %173, %160 ]
  %189 = shl i32 1, %168
  %190 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %188, i64 0, i32 0, i64 %166
  %191 = load atomic i32, i32* %190 acquire, align 4
  %192 = and i32 %191, %189
  %193 = icmp eq i32 %192, 0
  br i1 %193, label %194, label %205

194:                                              ; preds = %187
  %195 = load atomic i32, i32* %190 monotonic, align 4
  br label %196

196:                                              ; preds = %200, %194
  %197 = phi i32 [ %195, %194 ], [ %203, %200 ]
  %198 = and i32 %197, %189
  %199 = icmp eq i32 %198, %189
  br i1 %199, label %205, label %200

200:                                              ; preds = %196
  %201 = or i32 %197, %189
  %202 = cmpxchg volatile i32* %190, i32 %197, i32 %201 release monotonic
  %203 = extractvalue { i32, i1 } %202, 0
  %204 = extractvalue { i32, i1 } %202, 1
  br i1 %204, label %205, label %196

205:                                              ; preds = %89, %85, %140, %136, %200, %196, %187, %148, %145, %127, %76, %36, %17
  %206 = add i64 %18, 4
  %207 = icmp ult i64 %206, %3
  br i1 %207, label %17, label %208

208:                                              ; preds = %205, %4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor14VisitEphemeronENS0_10HeapObjectEiNS0_20CompressedObjectSlotES3_(%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, i32, i64, i64) unnamed_addr #7 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 0
  %7 = add i64 %4, 4
  %8 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %9, i64 2
  %11 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, align 8
  tail call void %11(%"class.v8::internal::ObjectVisitor"* %6, i64 %1, i64 %4, i64 %7) #12
  %12 = inttoptr i64 %3 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = and i64 %14, 1
  %16 = icmp eq i64 %15, 0
  br i1 %16, label %29, label %17

17:                                               ; preds = %5
  %18 = and i64 %3, -4294967296
  %19 = and i64 %14, 4294705152
  %20 = or i64 %18, %19
  %21 = or i64 %20, 8
  %22 = inttoptr i64 %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 24
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %17
  %27 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 1
  %28 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %27, align 8
  tail call void @_ZN2v88internal9Scavenger25RememberPromotedEphemeronENS0_18EphemeronHashTableEi(%"class.v8::internal::Scavenger"* %28, i64 %1, i32 %2)
  br label %34

29:                                               ; preds = %17, %5
  %30 = add i64 %3, 4
  %31 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %8, align 8
  %32 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %31, i64 2
  %33 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %32, align 8
  tail call void %33(%"class.v8::internal::ObjectVisitor"* %6, i64 %1, i64 %3, i64 %30) #12
  br label %34

34:                                               ; preds = %29, %26
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor15VisitCodeTargetENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #9 comdat align 2 {
  %4 = alloca %"class.v8::internal::Code", align 8
  %5 = bitcast %"class.v8::internal::Code"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = inttoptr i64 %7 to i32*
  %9 = load i32, i32* %8, align 1
  %10 = sext i32 %9 to i64
  %11 = add i64 %7, 4
  %12 = add i64 %11, %10
  %13 = tail call i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() #12
  %14 = ptrtoint i8* %13 to i64
  %15 = tail call i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() #12
  %16 = icmp uge i64 %12, %14
  %17 = zext i32 %15 to i64
  %18 = add i64 %17, %14
  %19 = icmp ugt i64 %18, %12
  %20 = and i1 %16, %19
  br i1 %20, label %21, label %22, !prof !29

21:                                               ; preds = %3
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([34 x i8], [34 x i8]* @.str.17, i64 0, i64 0)) #16
  unreachable

22:                                               ; preds = %3
  %23 = add i64 %12, -63
  %24 = getelementptr inbounds %"class.v8::internal::Code", %"class.v8::internal::Code"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %23, i64* %24, align 8
  %25 = ptrtoint %"class.v8::internal::Code"* %4 to i64
  %26 = and i64 %23, -262144
  %27 = inttoptr i64 %26 to %"class.v8::internal::BasicMemoryChunk"*
  %28 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %27, i64 0, i32 1
  %29 = load i64, i64* %28, align 8
  %30 = and i64 %29, 8
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %148, label %32

32:                                               ; preds = %22
  %33 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 1
  %34 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %33, align 8
  %35 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %34, i64 %25, i64 %23) #12
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %213

37:                                               ; preds = %32
  %38 = and i64 %1, -262144
  %39 = inttoptr i64 %38 to %"class.v8::internal::MemoryChunk"*
  %40 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %39, i64 0, i32 4
  %41 = bitcast %"class.v8::internal::SlotSet"** %40 to i64*
  %42 = load atomic i64, i64* %41 acquire, align 128
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %95, label %44

44:                                               ; preds = %37
  %45 = load atomic i64, i64* %41 acquire, align 128
  %46 = inttoptr i64 %45 to %"class.v8::internal::SlotSet"*
  %47 = icmp eq i64 %45, 0
  br i1 %47, label %48, label %50

48:                                               ; preds = %44
  %49 = call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"* %39) #12
  br label %50

50:                                               ; preds = %48, %44
  %51 = phi %"class.v8::internal::SlotSet"* [ %49, %48 ], [ %46, %44 ]
  %52 = sub i64 %25, %38
  %53 = lshr exact i64 %52, 2
  %54 = lshr i64 %52, 12
  %55 = lshr i64 %52, 7
  %56 = and i64 %55, 31
  %57 = trunc i64 %53 to i32
  %58 = and i32 %57, 30
  %59 = bitcast %"class.v8::internal::SlotSet"* %51 to %"class.v8::internal::SlotSet::Bucket"**
  %60 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %59, i64 %54
  %61 = bitcast %"class.v8::internal::SlotSet::Bucket"** %60 to i64*
  %62 = load atomic i64, i64* %61 acquire, align 8
  %63 = inttoptr i64 %62 to %"class.v8::internal::SlotSet::Bucket"*
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %65, label %77

65:                                               ; preds = %50
  %66 = call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %67 = bitcast i8* %66 to %"class.v8::internal::SlotSet::Bucket"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %66, i8 0, i64 128, i1 false) #12
  %68 = ptrtoint i8* %66 to i64
  %69 = cmpxchg volatile i64* %61, i64 0, i64 %68 release monotonic
  %70 = extractvalue { i64, i1 } %69, 1
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = icmp eq i8* %66, null
  br i1 %72, label %74, label %73

73:                                               ; preds = %71
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %66) #12
  br label %74

74:                                               ; preds = %73, %71
  %75 = load atomic i64, i64* %61 acquire, align 8
  %76 = inttoptr i64 %75 to %"class.v8::internal::SlotSet::Bucket"*
  br label %77

77:                                               ; preds = %74, %65, %50
  %78 = phi %"class.v8::internal::SlotSet::Bucket"* [ %67, %65 ], [ %76, %74 ], [ %63, %50 ]
  %79 = shl i32 1, %58
  %80 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %78, i64 0, i32 0, i64 %56
  %81 = load atomic i32, i32* %80 acquire, align 4
  %82 = and i32 %81, %79
  %83 = icmp eq i32 %82, 0
  br i1 %83, label %84, label %213

84:                                               ; preds = %77
  %85 = load atomic i32, i32* %80 monotonic, align 4
  br label %86

86:                                               ; preds = %90, %84
  %87 = phi i32 [ %85, %84 ], [ %93, %90 ]
  %88 = and i32 %87, %79
  %89 = icmp eq i32 %88, %79
  br i1 %89, label %213, label %90

90:                                               ; preds = %86
  %91 = or i32 %87, %79
  %92 = cmpxchg volatile i32* %80, i32 %87, i32 %91 release monotonic
  %93 = extractvalue { i32, i1 } %92, 0
  %94 = extractvalue { i32, i1 } %92, 1
  br i1 %94, label %213, label %86

95:                                               ; preds = %37
  %96 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %39, i64 0, i32 1, i64 0
  %97 = bitcast %"class.v8::internal::SlotSet"** %96 to i64*
  %98 = load atomic i64, i64* %97 acquire, align 32
  %99 = inttoptr i64 %98 to %"class.v8::internal::SlotSet"*
  %100 = icmp eq i64 %98, 0
  br i1 %100, label %101, label %103

101:                                              ; preds = %95
  %102 = call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %39) #12
  br label %103

103:                                              ; preds = %101, %95
  %104 = phi %"class.v8::internal::SlotSet"* [ %102, %101 ], [ %99, %95 ]
  %105 = sub i64 %25, %38
  %106 = lshr exact i64 %105, 2
  %107 = lshr i64 %105, 12
  %108 = lshr i64 %105, 7
  %109 = and i64 %108, 31
  %110 = trunc i64 %106 to i32
  %111 = and i32 %110, 30
  %112 = bitcast %"class.v8::internal::SlotSet"* %104 to %"class.v8::internal::SlotSet::Bucket"**
  %113 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %112, i64 %107
  %114 = bitcast %"class.v8::internal::SlotSet::Bucket"** %113 to i64*
  %115 = load atomic i64, i64* %114 acquire, align 8
  %116 = inttoptr i64 %115 to %"class.v8::internal::SlotSet::Bucket"*
  %117 = icmp eq i64 %115, 0
  br i1 %117, label %118, label %130

118:                                              ; preds = %103
  %119 = call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %120 = bitcast i8* %119 to %"class.v8::internal::SlotSet::Bucket"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %119, i8 0, i64 128, i1 false) #12
  %121 = ptrtoint i8* %119 to i64
  %122 = cmpxchg volatile i64* %114, i64 0, i64 %121 release monotonic
  %123 = extractvalue { i64, i1 } %122, 1
  br i1 %123, label %130, label %124

124:                                              ; preds = %118
  %125 = icmp eq i8* %119, null
  br i1 %125, label %127, label %126

126:                                              ; preds = %124
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %119) #12
  br label %127

127:                                              ; preds = %126, %124
  %128 = load atomic i64, i64* %114 acquire, align 8
  %129 = inttoptr i64 %128 to %"class.v8::internal::SlotSet::Bucket"*
  br label %130

130:                                              ; preds = %127, %118, %103
  %131 = phi %"class.v8::internal::SlotSet::Bucket"* [ %120, %118 ], [ %129, %127 ], [ %116, %103 ]
  %132 = shl i32 1, %111
  %133 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %131, i64 0, i32 0, i64 %109
  %134 = load atomic i32, i32* %133 acquire, align 4
  %135 = and i32 %134, %132
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %213

137:                                              ; preds = %130
  %138 = load atomic i32, i32* %133 monotonic, align 4
  br label %139

139:                                              ; preds = %143, %137
  %140 = phi i32 [ %138, %137 ], [ %146, %143 ]
  %141 = and i32 %140, %132
  %142 = icmp eq i32 %141, %132
  br i1 %142, label %213, label %143

143:                                              ; preds = %139
  %144 = or i32 %140, %132
  %145 = cmpxchg volatile i32* %133, i32 %140, i32 %144 release monotonic
  %146 = extractvalue { i32, i1 } %145, 0
  %147 = extractvalue { i32, i1 } %145, 1
  br i1 %147, label %213, label %139

148:                                              ; preds = %22
  %149 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 2
  %150 = load i8, i8* %149, align 8, !range !2
  %151 = icmp eq i8 %150, 0
  br i1 %151, label %213, label %152

152:                                              ; preds = %148
  %153 = inttoptr i64 %26 to %"class.v8::internal::Page"*
  %154 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %153, i64 0, i32 0, i32 0, i32 1
  %155 = load i64, i64* %154, align 8
  %156 = and i64 %155, 64
  %157 = icmp eq i64 %156, 0
  br i1 %157, label %213, label %158

158:                                              ; preds = %152
  %159 = and i64 %1, -262144
  %160 = inttoptr i64 %159 to %"class.v8::internal::MemoryChunk"*
  %161 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %160, i64 0, i32 1, i64 1
  %162 = bitcast %"class.v8::internal::SlotSet"** %161 to i64*
  %163 = load atomic i64, i64* %162 acquire, align 8
  %164 = inttoptr i64 %163 to %"class.v8::internal::SlotSet"*
  %165 = icmp eq i64 %163, 0
  br i1 %165, label %166, label %168

166:                                              ; preds = %158
  %167 = call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %160) #12
  br label %168

168:                                              ; preds = %166, %158
  %169 = phi %"class.v8::internal::SlotSet"* [ %167, %166 ], [ %164, %158 ]
  %170 = sub i64 %25, %159
  %171 = lshr exact i64 %170, 2
  %172 = lshr i64 %170, 12
  %173 = lshr i64 %170, 7
  %174 = and i64 %173, 31
  %175 = trunc i64 %171 to i32
  %176 = and i32 %175, 30
  %177 = bitcast %"class.v8::internal::SlotSet"* %169 to %"class.v8::internal::SlotSet::Bucket"**
  %178 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %177, i64 %172
  %179 = bitcast %"class.v8::internal::SlotSet::Bucket"** %178 to i64*
  %180 = load atomic i64, i64* %179 acquire, align 8
  %181 = inttoptr i64 %180 to %"class.v8::internal::SlotSet::Bucket"*
  %182 = icmp eq i64 %180, 0
  br i1 %182, label %183, label %195

183:                                              ; preds = %168
  %184 = call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %185 = bitcast i8* %184 to %"class.v8::internal::SlotSet::Bucket"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %184, i8 0, i64 128, i1 false) #12
  %186 = ptrtoint i8* %184 to i64
  %187 = cmpxchg volatile i64* %179, i64 0, i64 %186 release monotonic
  %188 = extractvalue { i64, i1 } %187, 1
  br i1 %188, label %195, label %189

189:                                              ; preds = %183
  %190 = icmp eq i8* %184, null
  br i1 %190, label %192, label %191

191:                                              ; preds = %189
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %184) #12
  br label %192

192:                                              ; preds = %191, %189
  %193 = load atomic i64, i64* %179 acquire, align 8
  %194 = inttoptr i64 %193 to %"class.v8::internal::SlotSet::Bucket"*
  br label %195

195:                                              ; preds = %192, %183, %168
  %196 = phi %"class.v8::internal::SlotSet::Bucket"* [ %185, %183 ], [ %194, %192 ], [ %181, %168 ]
  %197 = shl i32 1, %176
  %198 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %196, i64 0, i32 0, i64 %174
  %199 = load atomic i32, i32* %198 acquire, align 4
  %200 = and i32 %199, %197
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %213

202:                                              ; preds = %195
  %203 = load atomic i32, i32* %198 monotonic, align 4
  br label %204

204:                                              ; preds = %208, %202
  %205 = phi i32 [ %203, %202 ], [ %211, %208 ]
  %206 = and i32 %205, %197
  %207 = icmp eq i32 %206, %197
  br i1 %207, label %213, label %208

208:                                              ; preds = %204
  %209 = or i32 %205, %197
  %210 = cmpxchg volatile i32* %198, i32 %205, i32 %209 release monotonic
  %211 = extractvalue { i32, i1 } %210, 0
  %212 = extractvalue { i32, i1 } %210, 1
  br i1 %212, label %213, label %204

213:                                              ; preds = %86, %90, %139, %143, %204, %208, %32, %77, %130, %148, %152, %195
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: alwaysinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal40IterateAndScavengePromotedObjectsVisitor20VisitEmbeddedPointerENS0_4CodeEPNS0_9RelocInfoE(%"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*, i64, %"class.v8::internal::RelocInfo"*) unnamed_addr #9 comdat align 2 {
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #12
  %6 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = icmp eq i8 %7, 3
  br i1 %8, label %9, label %22

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %2, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = trunc i64 %11 to i32
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %15, !prof !29

14:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.18, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %9
  %16 = bitcast %"class.v8::internal::RelocInfo"* %2 to i32**
  %17 = load i32*, i32** %16, align 8
  %18 = load i32, i32* %17, align 1
  %19 = and i64 %11, -4294967296
  %20 = zext i32 %18 to i64
  %21 = or i64 %19, %20
  br label %26

22:                                               ; preds = %3
  %23 = bitcast %"class.v8::internal::RelocInfo"* %2 to i64**
  %24 = load i64*, i64** %23, align 8
  %25 = load i64, i64* %24, align 1
  br label %26

26:                                               ; preds = %15, %22
  %27 = phi i64 [ %21, %15 ], [ %25, %22 ]
  %28 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %27, i64* %28, align 8
  %29 = ptrtoint %"class.v8::internal::HeapObject"* %4 to i64
  %30 = and i64 %27, -262144
  %31 = inttoptr i64 %30 to %"class.v8::internal::BasicMemoryChunk"*
  %32 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %31, i64 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %152, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 1
  %38 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %37, align 8
  %39 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %38, i64 %29, i64 %27) #12
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %217

41:                                               ; preds = %36
  %42 = and i64 %1, -262144
  %43 = inttoptr i64 %42 to %"class.v8::internal::MemoryChunk"*
  %44 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %43, i64 0, i32 4
  %45 = bitcast %"class.v8::internal::SlotSet"** %44 to i64*
  %46 = load atomic i64, i64* %45 acquire, align 128
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %99, label %48

48:                                               ; preds = %41
  %49 = load atomic i64, i64* %45 acquire, align 128
  %50 = inttoptr i64 %49 to %"class.v8::internal::SlotSet"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"* %43) #12
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi %"class.v8::internal::SlotSet"* [ %53, %52 ], [ %50, %48 ]
  %56 = sub i64 %29, %42
  %57 = lshr exact i64 %56, 2
  %58 = lshr i64 %56, 12
  %59 = lshr i64 %56, 7
  %60 = and i64 %59, 31
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 30
  %63 = bitcast %"class.v8::internal::SlotSet"* %55 to %"class.v8::internal::SlotSet::Bucket"**
  %64 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %63, i64 %58
  %65 = bitcast %"class.v8::internal::SlotSet::Bucket"** %64 to i64*
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = inttoptr i64 %66 to %"class.v8::internal::SlotSet::Bucket"*
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %54
  %70 = call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %71 = bitcast i8* %70 to %"class.v8::internal::SlotSet::Bucket"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 128, i1 false) #12
  %72 = ptrtoint i8* %70 to i64
  %73 = cmpxchg volatile i64* %65, i64 0, i64 %72 release monotonic
  %74 = extractvalue { i64, i1 } %73, 1
  br i1 %74, label %81, label %75

75:                                               ; preds = %69
  %76 = icmp eq i8* %70, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %75
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %70) #12
  br label %78

78:                                               ; preds = %77, %75
  %79 = load atomic i64, i64* %65 acquire, align 8
  %80 = inttoptr i64 %79 to %"class.v8::internal::SlotSet::Bucket"*
  br label %81

81:                                               ; preds = %78, %69, %54
  %82 = phi %"class.v8::internal::SlotSet::Bucket"* [ %71, %69 ], [ %80, %78 ], [ %67, %54 ]
  %83 = shl i32 1, %62
  %84 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %82, i64 0, i32 0, i64 %60
  %85 = load atomic i32, i32* %84 acquire, align 4
  %86 = and i32 %85, %83
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %217

88:                                               ; preds = %81
  %89 = load atomic i32, i32* %84 monotonic, align 4
  br label %90

90:                                               ; preds = %94, %88
  %91 = phi i32 [ %89, %88 ], [ %97, %94 ]
  %92 = and i32 %91, %83
  %93 = icmp eq i32 %92, %83
  br i1 %93, label %217, label %94

94:                                               ; preds = %90
  %95 = or i32 %91, %83
  %96 = cmpxchg volatile i32* %84, i32 %91, i32 %95 release monotonic
  %97 = extractvalue { i32, i1 } %96, 0
  %98 = extractvalue { i32, i1 } %96, 1
  br i1 %98, label %217, label %90

99:                                               ; preds = %41
  %100 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %43, i64 0, i32 1, i64 0
  %101 = bitcast %"class.v8::internal::SlotSet"** %100 to i64*
  %102 = load atomic i64, i64* %101 acquire, align 32
  %103 = inttoptr i64 %102 to %"class.v8::internal::SlotSet"*
  %104 = icmp eq i64 %102, 0
  br i1 %104, label %105, label %107

105:                                              ; preds = %99
  %106 = call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %43) #12
  br label %107

107:                                              ; preds = %105, %99
  %108 = phi %"class.v8::internal::SlotSet"* [ %106, %105 ], [ %103, %99 ]
  %109 = sub i64 %29, %42
  %110 = lshr exact i64 %109, 2
  %111 = lshr i64 %109, 12
  %112 = lshr i64 %109, 7
  %113 = and i64 %112, 31
  %114 = trunc i64 %110 to i32
  %115 = and i32 %114, 30
  %116 = bitcast %"class.v8::internal::SlotSet"* %108 to %"class.v8::internal::SlotSet::Bucket"**
  %117 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %116, i64 %111
  %118 = bitcast %"class.v8::internal::SlotSet::Bucket"** %117 to i64*
  %119 = load atomic i64, i64* %118 acquire, align 8
  %120 = inttoptr i64 %119 to %"class.v8::internal::SlotSet::Bucket"*
  %121 = icmp eq i64 %119, 0
  br i1 %121, label %122, label %134

122:                                              ; preds = %107
  %123 = call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %124 = bitcast i8* %123 to %"class.v8::internal::SlotSet::Bucket"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %123, i8 0, i64 128, i1 false) #12
  %125 = ptrtoint i8* %123 to i64
  %126 = cmpxchg volatile i64* %118, i64 0, i64 %125 release monotonic
  %127 = extractvalue { i64, i1 } %126, 1
  br i1 %127, label %134, label %128

128:                                              ; preds = %122
  %129 = icmp eq i8* %123, null
  br i1 %129, label %131, label %130

130:                                              ; preds = %128
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %123) #12
  br label %131

131:                                              ; preds = %130, %128
  %132 = load atomic i64, i64* %118 acquire, align 8
  %133 = inttoptr i64 %132 to %"class.v8::internal::SlotSet::Bucket"*
  br label %134

134:                                              ; preds = %131, %122, %107
  %135 = phi %"class.v8::internal::SlotSet::Bucket"* [ %124, %122 ], [ %133, %131 ], [ %120, %107 ]
  %136 = shl i32 1, %115
  %137 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %135, i64 0, i32 0, i64 %113
  %138 = load atomic i32, i32* %137 acquire, align 4
  %139 = and i32 %138, %136
  %140 = icmp eq i32 %139, 0
  br i1 %140, label %141, label %217

141:                                              ; preds = %134
  %142 = load atomic i32, i32* %137 monotonic, align 4
  br label %143

143:                                              ; preds = %147, %141
  %144 = phi i32 [ %142, %141 ], [ %150, %147 ]
  %145 = and i32 %144, %136
  %146 = icmp eq i32 %145, %136
  br i1 %146, label %217, label %147

147:                                              ; preds = %143
  %148 = or i32 %144, %136
  %149 = cmpxchg volatile i32* %137, i32 %144, i32 %148 release monotonic
  %150 = extractvalue { i32, i1 } %149, 0
  %151 = extractvalue { i32, i1 } %149, 1
  br i1 %151, label %217, label %143

152:                                              ; preds = %26
  %153 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %0, i64 0, i32 2
  %154 = load i8, i8* %153, align 8, !range !2
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %217, label %156

156:                                              ; preds = %152
  %157 = inttoptr i64 %30 to %"class.v8::internal::Page"*
  %158 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %157, i64 0, i32 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  %160 = and i64 %159, 64
  %161 = icmp eq i64 %160, 0
  br i1 %161, label %217, label %162

162:                                              ; preds = %156
  %163 = and i64 %1, -262144
  %164 = inttoptr i64 %163 to %"class.v8::internal::MemoryChunk"*
  %165 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %164, i64 0, i32 1, i64 1
  %166 = bitcast %"class.v8::internal::SlotSet"** %165 to i64*
  %167 = load atomic i64, i64* %166 acquire, align 8
  %168 = inttoptr i64 %167 to %"class.v8::internal::SlotSet"*
  %169 = icmp eq i64 %167, 0
  br i1 %169, label %170, label %172

170:                                              ; preds = %162
  %171 = call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %164) #12
  br label %172

172:                                              ; preds = %170, %162
  %173 = phi %"class.v8::internal::SlotSet"* [ %171, %170 ], [ %168, %162 ]
  %174 = sub i64 %29, %163
  %175 = lshr exact i64 %174, 2
  %176 = lshr i64 %174, 12
  %177 = lshr i64 %174, 7
  %178 = and i64 %177, 31
  %179 = trunc i64 %175 to i32
  %180 = and i32 %179, 30
  %181 = bitcast %"class.v8::internal::SlotSet"* %173 to %"class.v8::internal::SlotSet::Bucket"**
  %182 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %181, i64 %176
  %183 = bitcast %"class.v8::internal::SlotSet::Bucket"** %182 to i64*
  %184 = load atomic i64, i64* %183 acquire, align 8
  %185 = inttoptr i64 %184 to %"class.v8::internal::SlotSet::Bucket"*
  %186 = icmp eq i64 %184, 0
  br i1 %186, label %187, label %199

187:                                              ; preds = %172
  %188 = call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %189 = bitcast i8* %188 to %"class.v8::internal::SlotSet::Bucket"*
  call void @llvm.memset.p0i8.i64(i8* align 4 %188, i8 0, i64 128, i1 false) #12
  %190 = ptrtoint i8* %188 to i64
  %191 = cmpxchg volatile i64* %183, i64 0, i64 %190 release monotonic
  %192 = extractvalue { i64, i1 } %191, 1
  br i1 %192, label %199, label %193

193:                                              ; preds = %187
  %194 = icmp eq i8* %188, null
  br i1 %194, label %196, label %195

195:                                              ; preds = %193
  call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %188) #12
  br label %196

196:                                              ; preds = %195, %193
  %197 = load atomic i64, i64* %183 acquire, align 8
  %198 = inttoptr i64 %197 to %"class.v8::internal::SlotSet::Bucket"*
  br label %199

199:                                              ; preds = %196, %187, %172
  %200 = phi %"class.v8::internal::SlotSet::Bucket"* [ %189, %187 ], [ %198, %196 ], [ %185, %172 ]
  %201 = shl i32 1, %180
  %202 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %200, i64 0, i32 0, i64 %178
  %203 = load atomic i32, i32* %202 acquire, align 4
  %204 = and i32 %203, %201
  %205 = icmp eq i32 %204, 0
  br i1 %205, label %206, label %217

206:                                              ; preds = %199
  %207 = load atomic i32, i32* %202 monotonic, align 4
  br label %208

208:                                              ; preds = %212, %206
  %209 = phi i32 [ %207, %206 ], [ %215, %212 ]
  %210 = and i32 %209, %201
  %211 = icmp eq i32 %210, %201
  br i1 %211, label %217, label %212

212:                                              ; preds = %208
  %213 = or i32 %209, %201
  %214 = cmpxchg volatile i32* %202, i32 %209, i32 %213 release monotonic
  %215 = extractvalue { i32, i1 } %214, 0
  %216 = extractvalue { i32, i1 } %214, 1
  br i1 %216, label %217, label %208

217:                                              ; preds = %90, %94, %143, %147, %208, %212, %36, %81, %134, %152, %156, %199
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitor15VisitMapPointerENS0_10HeapObjectE(%"class.v8::internal::ObjectVisitor"*, i64) unnamed_addr #0 comdat align 2 {
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"*, i64, i64) local_unnamed_addr #7 comdat align 2 {
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = alloca %"class.v8::internal::HeapObject", align 8
  %6 = alloca %"class.std::__1::tuple", align 8
  %7 = alloca %"class.std::__1::tuple.1327", align 1
  %8 = alloca %"class.v8::internal::AllocationSite", align 8
  %9 = alloca %"class.v8::internal::HeapObject", align 8
  %10 = alloca %"class.v8::internal::HeapObject", align 8
  %11 = alloca %"class.std::__1::tuple", align 8
  %12 = alloca %"class.std::__1::tuple.1327", align 1
  %13 = alloca %"class.v8::internal::AllocationSite", align 8
  %14 = alloca %"class.v8::internal::HeapObject", align 8
  %15 = alloca %"class.v8::internal::HeapObject", align 8
  %16 = alloca %"class.std::__1::tuple", align 8
  %17 = alloca %"class.std::__1::tuple.1327", align 1
  %18 = alloca %"class.v8::internal::AllocationSite", align 8
  %19 = alloca %"struct.std::__1::pair.1246", align 8
  %20 = alloca %"class.v8::internal::HeapObject", align 8
  %21 = and i64 %2, -4294967296
  %22 = add i64 %2, -1
  %23 = inttoptr i64 %22 to i32*
  %24 = load atomic i32, i32* %23 acquire, align 4
  %25 = zext i32 %24 to i64
  %26 = or i64 %21, %25
  %27 = and i64 %25, 3
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %29, label %43

29:                                               ; preds = %3
  %30 = add i64 %26, 1
  %31 = inttoptr i64 %1 to i32*
  %32 = load i32, i32* %31, align 4
  %33 = and i32 %32, 2
  %34 = trunc i64 %30 to i32
  %35 = or i32 %33, %34
  store i32 %35, i32* %31, align 4
  %36 = and i64 %30, -262144
  %37 = inttoptr i64 %36 to %"class.v8::internal::BasicMemoryChunk"*
  %38 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %37, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 24
  %41 = icmp eq i64 %40, 0
  %42 = zext i1 %41 to i32
  br label %1732

43:                                               ; preds = %3
  %44 = bitcast %"class.v8::internal::HeapObject"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44)
  %45 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %20, i64 0, i32 0, i32 0, i32 0
  store i64 %2, i64* %45, align 8
  %46 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %20, i64 %26) #12
  %47 = add i64 %26, 6
  %48 = inttoptr i64 %47 to i8*
  %49 = load atomic i8, i8* %48 monotonic, align 1
  switch i8 %49, label %56 [
    i8 71, label %50
    i8 32, label %53
  ]

50:                                               ; preds = %43
  %51 = load i64, i64* %45, align 8
  %52 = call i32 @_ZN2v88internal9Scavenger18EvacuateThinStringINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ThinStringEi(%"class.v8::internal::Scavenger"* %0, i64 %26, i64 %1, i64 %51, i32 %46) #12
  br label %1730

53:                                               ; preds = %43
  %54 = load i64, i64* %45, align 8
  %55 = call i32 @_ZN2v88internal9Scavenger25EvacuateShortcutCandidateINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ConsStringEi(%"class.v8::internal::Scavenger"* %0, i64 %26, i64 %1, i64 %54, i32 %46) #12
  br label %1730

56:                                               ; preds = %43
  %57 = load i64, i64* %45, align 8
  %58 = icmp ugt i8 %49, 5
  %59 = and i64 %57, -262144
  %60 = inttoptr i64 %59 to %"class.v8::internal::BasicMemoryChunk"*
  %61 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %60, i64 0, i32 1
  %62 = load i64, i64* %61, align 8
  %63 = and i64 %62, 24
  %64 = icmp ne i64 %63, 0
  %65 = and i64 %62, 32
  %66 = icmp ne i64 %65, 0
  %67 = and i1 %66, %64
  br i1 %67, label %68, label %123, !prof !29

68:                                               ; preds = %56
  %69 = add i64 %57, -1
  %70 = trunc i64 %69 to i32
  %71 = inttoptr i64 %69 to i32*
  %72 = cmpxchg volatile i32* %71, i32 %24, i32 %70 release monotonic
  %73 = extractvalue { i32, i1 } %72, 1
  br i1 %73, label %74, label %1730

74:                                               ; preds = %68
  %75 = bitcast %"struct.std::__1::pair.1246"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %75) #12
  %76 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %19, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %79 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %19, i64 0, i32 0
  %80 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %78, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %79, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %19) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %75) #12
  %81 = sext i32 %46 to i64
  %82 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, %81
  store i64 %84, i64* %82, align 8
  br i1 %58, label %85, label %1730

85:                                               ; preds = %74
  %86 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %87 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %86, align 8
  %88 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = sext i32 %89 to i64
  %91 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %87, i64 0, i32 1, i32 0, i64 %90, i32 0
  %92 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %91, align 8
  %93 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %92, i64 0, i32 1
  %94 = load i64, i64* %93, align 8
  %95 = icmp eq i64 %94, 4
  br i1 %95, label %101, label %96

96:                                               ; preds = %85
  %97 = add i64 %94, 1
  store i64 %97, i64* %93, align 8
  %98 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %92, i64 0, i32 2, i64 %94, i32 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %98, align 8
  %99 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %92, i64 0, i32 2, i64 %94, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %99, align 8
  %100 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %92, i64 0, i32 2, i64 %94, i32 2
  store i32 %46, i32* %100, align 8
  br label %1730

101:                                              ; preds = %85
  %102 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %87, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %102) #12
  %103 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %87, i64 0, i32 1, i32 1, i32 1
  %104 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %92 to i64*
  store i64 %105, i64* %106, align 8
  %107 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %92 to i64
  store atomic volatile i64 %107, i64* %104 monotonic, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %87, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %109 = atomicrmw add i64* %108, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %102) #12
  %110 = call i8* @_Znwm(i64 112) #17
  %111 = getelementptr inbounds i8, i8* %110, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %111, i8 0, i64 16, i1 false) #12
  %112 = getelementptr inbounds i8, i8* %110, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %112, i8 0, i64 16, i1 false) #12
  %113 = getelementptr inbounds i8, i8* %110, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %113, i8 0, i64 16, i1 false) #12
  %114 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %91 to i8**
  store i8* %110, i8** %114, align 8
  %115 = getelementptr inbounds i8, i8* %110, i64 8
  %116 = bitcast i8* %115 to i64*
  store i64 1, i64* %116, align 8
  %117 = getelementptr inbounds i8, i8* %110, i64 16
  %118 = bitcast i8* %117 to i64*
  store i64 %57, i64* %118, align 8
  %119 = getelementptr inbounds i8, i8* %110, i64 24
  %120 = bitcast i8* %119 to i64*
  store i64 %26, i64* %120, align 8
  %121 = getelementptr inbounds i8, i8* %110, i64 32
  %122 = bitcast i8* %121 to i32*
  store i32 %46, i32* %122, align 8
  br label %1730

123:                                              ; preds = %56
  %124 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %125 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %124, align 8
  %126 = add i64 %57, -1
  %127 = and i64 %126, -262144
  %128 = inttoptr i64 %127 to %"class.v8::internal::Page"*
  %129 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %125, i64 0, i32 24
  %130 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %130, i64 0, i32 5, i32 5
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = and i64 %134, 524288
  %136 = icmp eq i64 %135, 0
  br i1 %136, label %147, label %137

137:                                              ; preds = %123
  %138 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 3
  %139 = load i64, i64* %138, align 8
  %140 = icmp ugt i64 %139, %132
  br i1 %140, label %678, label %141

141:                                              ; preds = %137
  %142 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 4
  %143 = load i64, i64* %142, align 32
  %144 = icmp ult i64 %143, %132
  %145 = icmp ugt i64 %132, %126
  %146 = or i1 %145, %144
  br i1 %146, label %678, label %147

147:                                              ; preds = %141, %123
  %148 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %149 = icmp sgt i32 %46, 8192
  br i1 %149, label %150, label %175

150:                                              ; preds = %147
  %151 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %152 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %151, align 8
  %153 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %152, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %153) #12
  %154 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %152, i64 0, i32 0
  %155 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %152, i64 0, i32 0, i32 1, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %152, i64 0, i32 0, i32 1, i32 2
  %158 = load i64, i64* %157, align 8
  %159 = sext i32 %46 to i64
  %160 = add i64 %156, %159
  %161 = icmp ult i64 %158, %160
  br i1 %161, label %171, label %162

162:                                              ; preds = %150
  %163 = add i64 %156, 1
  store i64 %160, i64* %155, align 8
  %164 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %165 = icmp eq i8 %164, 0
  br i1 %165, label %167, label %166

166:                                              ; preds = %162
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %154, i32 2) #12
  br label %167

167:                                              ; preds = %166, %162
  %168 = and i64 %163, 1
  %169 = icmp eq i64 %168, 0
  br i1 %169, label %170, label %173, !prof !29

170:                                              ; preds = %167
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

171:                                              ; preds = %150
  %172 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %152, i32 %46, i32 0, i32 2) #12
  br label %173

173:                                              ; preds = %171, %167
  %174 = phi i64 [ %172, %171 ], [ %163, %167 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %153) #12
  br label %177

175:                                              ; preds = %147
  %176 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %148, i32 %46, i32 0) #12
  br label %177

177:                                              ; preds = %175, %173
  %178 = phi i64 [ %174, %173 ], [ %176, %175 ]
  %179 = and i64 %178, 1
  %180 = icmp eq i64 %179, 0
  br i1 %180, label %678, label %181

181:                                              ; preds = %177
  %182 = add i64 %178, -1
  %183 = inttoptr i64 %182 to i32*
  store atomic volatile i32 %24, i32* %183 monotonic, align 4
  %184 = add i64 %178, 3
  %185 = add i64 %57, 3
  %186 = add nsw i32 %46, -4
  %187 = sdiv i32 %186, 4
  %188 = sext i32 %187 to i64
  %189 = inttoptr i64 %184 to i32*
  %190 = inttoptr i64 %184 to i8*
  %191 = inttoptr i64 %185 to i32*
  %192 = inttoptr i64 %185 to i8*
  %193 = inttoptr i64 %184 to i8*
  %194 = add i32 %46, -1
  %195 = icmp ult i32 %194, 7
  br i1 %195, label %357, label %196

196:                                              ; preds = %181
  %197 = icmp ult i32 %187, 16
  br i1 %197, label %198, label %343

198:                                              ; preds = %196
  %199 = icmp ult i32 %187, 8
  br i1 %199, label %290, label %200

200:                                              ; preds = %198
  %201 = getelementptr i32, i32* %189, i64 %188
  %202 = bitcast i32* %201 to i8*
  %203 = getelementptr i32, i32* %191, i64 %188
  %204 = bitcast i32* %203 to i8*
  %205 = icmp ult i8* %190, %204
  %206 = icmp ult i8* %192, %202
  %207 = and i1 %205, %206
  br i1 %207, label %290, label %208

208:                                              ; preds = %200
  %209 = and i64 %188, -8
  %210 = getelementptr i32, i32* %191, i64 %209
  %211 = sub nsw i64 %188, %209
  %212 = getelementptr i32, i32* %189, i64 %209
  %213 = add nsw i64 %209, -8
  %214 = lshr exact i64 %213, 3
  %215 = add nuw nsw i64 %214, 1
  %216 = and i64 %215, 3
  %217 = icmp ult i64 %213, 24
  br i1 %217, label %269, label %218

218:                                              ; preds = %208
  %219 = sub nsw i64 %215, %216
  br label %220

220:                                              ; preds = %220, %218
  %221 = phi i64 [ 0, %218 ], [ %266, %220 ]
  %222 = phi i64 [ %219, %218 ], [ %267, %220 ]
  %223 = getelementptr i32, i32* %191, i64 %221
  %224 = getelementptr i32, i32* %189, i64 %221
  %225 = bitcast i32* %223 to <4 x i32>*
  %226 = load <4 x i32>, <4 x i32>* %225, align 4, !alias.scope !99
  %227 = getelementptr i32, i32* %223, i64 4
  %228 = bitcast i32* %227 to <4 x i32>*
  %229 = load <4 x i32>, <4 x i32>* %228, align 4, !alias.scope !99
  %230 = bitcast i32* %224 to <4 x i32>*
  store <4 x i32> %226, <4 x i32>* %230, align 4, !alias.scope !102, !noalias !99
  %231 = getelementptr i32, i32* %224, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> %229, <4 x i32>* %232, align 4, !alias.scope !102, !noalias !99
  %233 = or i64 %221, 8
  %234 = getelementptr i32, i32* %191, i64 %233
  %235 = getelementptr i32, i32* %189, i64 %233
  %236 = bitcast i32* %234 to <4 x i32>*
  %237 = load <4 x i32>, <4 x i32>* %236, align 4, !alias.scope !99
  %238 = getelementptr i32, i32* %234, i64 4
  %239 = bitcast i32* %238 to <4 x i32>*
  %240 = load <4 x i32>, <4 x i32>* %239, align 4, !alias.scope !99
  %241 = bitcast i32* %235 to <4 x i32>*
  store <4 x i32> %237, <4 x i32>* %241, align 4, !alias.scope !102, !noalias !99
  %242 = getelementptr i32, i32* %235, i64 4
  %243 = bitcast i32* %242 to <4 x i32>*
  store <4 x i32> %240, <4 x i32>* %243, align 4, !alias.scope !102, !noalias !99
  %244 = or i64 %221, 16
  %245 = getelementptr i32, i32* %191, i64 %244
  %246 = getelementptr i32, i32* %189, i64 %244
  %247 = bitcast i32* %245 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4, !alias.scope !99
  %249 = getelementptr i32, i32* %245, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4, !alias.scope !99
  %252 = bitcast i32* %246 to <4 x i32>*
  store <4 x i32> %248, <4 x i32>* %252, align 4, !alias.scope !102, !noalias !99
  %253 = getelementptr i32, i32* %246, i64 4
  %254 = bitcast i32* %253 to <4 x i32>*
  store <4 x i32> %251, <4 x i32>* %254, align 4, !alias.scope !102, !noalias !99
  %255 = or i64 %221, 24
  %256 = getelementptr i32, i32* %191, i64 %255
  %257 = getelementptr i32, i32* %189, i64 %255
  %258 = bitcast i32* %256 to <4 x i32>*
  %259 = load <4 x i32>, <4 x i32>* %258, align 4, !alias.scope !99
  %260 = getelementptr i32, i32* %256, i64 4
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !99
  %263 = bitcast i32* %257 to <4 x i32>*
  store <4 x i32> %259, <4 x i32>* %263, align 4, !alias.scope !102, !noalias !99
  %264 = getelementptr i32, i32* %257, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %265, align 4, !alias.scope !102, !noalias !99
  %266 = add i64 %221, 32
  %267 = add i64 %222, -4
  %268 = icmp eq i64 %267, 0
  br i1 %268, label %269, label %220, !llvm.loop !104

269:                                              ; preds = %220, %208
  %270 = phi i64 [ 0, %208 ], [ %266, %220 ]
  %271 = icmp eq i64 %216, 0
  br i1 %271, label %288, label %272

272:                                              ; preds = %269, %272
  %273 = phi i64 [ %285, %272 ], [ %270, %269 ]
  %274 = phi i64 [ %286, %272 ], [ %216, %269 ]
  %275 = getelementptr i32, i32* %191, i64 %273
  %276 = getelementptr i32, i32* %189, i64 %273
  %277 = bitcast i32* %275 to <4 x i32>*
  %278 = load <4 x i32>, <4 x i32>* %277, align 4, !alias.scope !99
  %279 = getelementptr i32, i32* %275, i64 4
  %280 = bitcast i32* %279 to <4 x i32>*
  %281 = load <4 x i32>, <4 x i32>* %280, align 4, !alias.scope !99
  %282 = bitcast i32* %276 to <4 x i32>*
  store <4 x i32> %278, <4 x i32>* %282, align 4, !alias.scope !102, !noalias !99
  %283 = getelementptr i32, i32* %276, i64 4
  %284 = bitcast i32* %283 to <4 x i32>*
  store <4 x i32> %281, <4 x i32>* %284, align 4, !alias.scope !102, !noalias !99
  %285 = add i64 %273, 8
  %286 = add i64 %274, -1
  %287 = icmp eq i64 %286, 0
  br i1 %287, label %288, label %272, !llvm.loop !105

288:                                              ; preds = %272, %269
  %289 = icmp eq i64 %209, %188
  br i1 %289, label %357, label %290

290:                                              ; preds = %288, %200, %198
  %291 = phi i32* [ %191, %200 ], [ %191, %198 ], [ %210, %288 ]
  %292 = phi i64 [ %188, %200 ], [ %188, %198 ], [ %211, %288 ]
  %293 = phi i32* [ %189, %200 ], [ %189, %198 ], [ %212, %288 ]
  %294 = add nsw i64 %292, -1
  %295 = and i64 %292, 7
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %308, label %297

297:                                              ; preds = %290, %297
  %298 = phi i32* [ %303, %297 ], [ %291, %290 ]
  %299 = phi i64 [ %302, %297 ], [ %292, %290 ]
  %300 = phi i32* [ %305, %297 ], [ %293, %290 ]
  %301 = phi i64 [ %306, %297 ], [ %295, %290 ]
  %302 = add i64 %299, -1
  %303 = getelementptr inbounds i32, i32* %298, i64 1
  %304 = load i32, i32* %298, align 4
  %305 = getelementptr inbounds i32, i32* %300, i64 1
  store i32 %304, i32* %300, align 4
  %306 = add i64 %301, -1
  %307 = icmp eq i64 %306, 0
  br i1 %307, label %308, label %297, !llvm.loop !106

308:                                              ; preds = %297, %290
  %309 = phi i32* [ %291, %290 ], [ %303, %297 ]
  %310 = phi i64 [ %292, %290 ], [ %302, %297 ]
  %311 = phi i32* [ %293, %290 ], [ %305, %297 ]
  %312 = icmp ult i64 %294, 7
  br i1 %312, label %357, label %313

313:                                              ; preds = %308, %313
  %314 = phi i32* [ %339, %313 ], [ %309, %308 ]
  %315 = phi i64 [ %338, %313 ], [ %310, %308 ]
  %316 = phi i32* [ %341, %313 ], [ %311, %308 ]
  %317 = getelementptr inbounds i32, i32* %314, i64 1
  %318 = load i32, i32* %314, align 4
  %319 = getelementptr inbounds i32, i32* %316, i64 1
  store i32 %318, i32* %316, align 4
  %320 = getelementptr inbounds i32, i32* %314, i64 2
  %321 = load i32, i32* %317, align 4
  %322 = getelementptr inbounds i32, i32* %316, i64 2
  store i32 %321, i32* %319, align 4
  %323 = getelementptr inbounds i32, i32* %314, i64 3
  %324 = load i32, i32* %320, align 4
  %325 = getelementptr inbounds i32, i32* %316, i64 3
  store i32 %324, i32* %322, align 4
  %326 = getelementptr inbounds i32, i32* %314, i64 4
  %327 = load i32, i32* %323, align 4
  %328 = getelementptr inbounds i32, i32* %316, i64 4
  store i32 %327, i32* %325, align 4
  %329 = getelementptr inbounds i32, i32* %314, i64 5
  %330 = load i32, i32* %326, align 4
  %331 = getelementptr inbounds i32, i32* %316, i64 5
  store i32 %330, i32* %328, align 4
  %332 = getelementptr inbounds i32, i32* %314, i64 6
  %333 = load i32, i32* %329, align 4
  %334 = getelementptr inbounds i32, i32* %316, i64 6
  store i32 %333, i32* %331, align 4
  %335 = getelementptr inbounds i32, i32* %314, i64 7
  %336 = load i32, i32* %332, align 4
  %337 = getelementptr inbounds i32, i32* %316, i64 7
  store i32 %336, i32* %334, align 4
  %338 = add i64 %315, -8
  %339 = getelementptr inbounds i32, i32* %314, i64 8
  %340 = load i32, i32* %335, align 4
  %341 = getelementptr inbounds i32, i32* %316, i64 8
  store i32 %340, i32* %337, align 4
  %342 = icmp eq i64 %338, 0
  br i1 %342, label %357, label %313, !llvm.loop !107

343:                                              ; preds = %196
  %344 = inttoptr i64 %185 to i8*
  %345 = shl nsw i64 %188, 2
  %346 = add nsw i64 %345, -4
  %347 = lshr exact i64 %346, 2
  switch i64 %347, label %356 [
    i64 3, label %355
    i64 1, label %350
    i64 2, label %354
    i64 0, label %348
  ]

348:                                              ; preds = %343
  %349 = load i32, i32* %191, align 1
  store i32 %349, i32* %189, align 1
  br label %357

350:                                              ; preds = %343
  %351 = inttoptr i64 %185 to i64*
  %352 = inttoptr i64 %184 to i64*
  %353 = load i64, i64* %351, align 1
  store i64 %353, i64* %352, align 1
  br label %357

354:                                              ; preds = %343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %193, i8* align 1 %344, i64 12, i1 false) #12
  br label %357

355:                                              ; preds = %343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %193, i8* align 1 %344, i64 16, i1 false) #12
  br label %357

356:                                              ; preds = %343
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %193, i8* align 1 %344, i64 %345, i1 false) #12
  br label %357

357:                                              ; preds = %308, %313, %288, %356, %355, %354, %350, %348, %181
  %358 = trunc i64 %182 to i32
  %359 = inttoptr i64 %126 to i32*
  %360 = cmpxchg volatile i32* %359, i32 %24, i32 %358 release monotonic
  %361 = extractvalue { i32, i1 } %360, 1
  br i1 %361, label %362, label %571

362:                                              ; preds = %357
  %363 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %364 = load i8, i8* %363, align 8, !range !2
  %365 = icmp eq i8 %364, 0
  br i1 %365, label %368, label %366, !prof !60

366:                                              ; preds = %362
  %367 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %124, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %367, i64 %178, i64 %57, i32 %46) #12
  br label %368

368:                                              ; preds = %366, %362
  %369 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %370 = load i8, i8* %369, align 1, !range !2
  %371 = icmp eq i8 %370, 0
  br i1 %371, label %499, label %372

372:                                              ; preds = %368
  %373 = and i64 %178, -262144
  %374 = or i64 %373, 272
  %375 = sub i64 %178, %373
  %376 = trunc i64 %375 to i32
  %377 = lshr i32 %376, 2
  %378 = and i32 %377, 31
  %379 = shl i32 1, %378
  %380 = inttoptr i64 %374 to i32*
  %381 = lshr i64 %375, 7
  %382 = and i64 %381, 33554431
  %383 = getelementptr inbounds i32, i32* %380, i64 %382
  %384 = load atomic i32, i32* %383 acquire, align 4
  %385 = and i32 %384, %379
  %386 = icmp eq i32 %385, 0
  br i1 %386, label %396, label %387

387:                                              ; preds = %372
  %388 = shl i32 %379, 1
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds i32, i32* %383, i64 1
  %391 = select i1 %389, i32 1, i32 %388
  %392 = select i1 %389, i32* %390, i32* %383
  %393 = load atomic i32, i32* %392 acquire, align 4
  %394 = and i32 %393, %391
  %395 = icmp eq i32 %394, 0
  br i1 %395, label %396, label %499

396:                                              ; preds = %387, %372
  %397 = or i64 %59, 272
  %398 = sub i64 %57, %59
  %399 = trunc i64 %398 to i32
  %400 = lshr i32 %399, 2
  %401 = and i32 %400, 31
  %402 = shl i32 1, %401
  %403 = inttoptr i64 %397 to i32*
  %404 = lshr i64 %398, 7
  %405 = and i64 %404, 33554431
  %406 = getelementptr inbounds i32, i32* %403, i64 %405
  %407 = load atomic i32, i32* %406 acquire, align 4
  %408 = and i32 %407, %402
  %409 = icmp eq i32 %408, 0
  br i1 %409, label %430, label %410

410:                                              ; preds = %396
  %411 = shl i32 %402, 1
  %412 = icmp eq i32 %411, 0
  %413 = getelementptr inbounds i32, i32* %406, i64 1
  %414 = select i1 %412, i32 1, i32 %411
  %415 = select i1 %412, i32* %413, i32* %406
  %416 = load atomic i32, i32* %415 acquire, align 4
  %417 = and i32 %416, %414
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %430

419:                                              ; preds = %410
  %420 = load atomic i32, i32* %383 monotonic, align 4
  br label %421

421:                                              ; preds = %425, %419
  %422 = phi i32 [ %420, %419 ], [ %428, %425 ]
  %423 = and i32 %422, %379
  %424 = icmp eq i32 %423, %379
  br i1 %424, label %499, label %425

425:                                              ; preds = %421
  %426 = or i32 %422, %379
  %427 = cmpxchg volatile i32* %383, i32 %422, i32 %426 release monotonic
  %428 = extractvalue { i32, i1 } %427, 0
  %429 = extractvalue { i32, i1 } %427, 1
  br i1 %429, label %499, label %421

430:                                              ; preds = %410, %396
  %431 = load atomic i32, i32* %406 acquire, align 4
  %432 = and i32 %431, %402
  %433 = icmp eq i32 %432, 0
  br i1 %433, label %499, label %434

434:                                              ; preds = %430
  %435 = shl i32 %402, 1
  %436 = icmp eq i32 %435, 0
  %437 = getelementptr inbounds i32, i32* %406, i64 1
  %438 = select i1 %436, i32 1, i32 %435
  %439 = select i1 %436, i32* %437, i32* %406
  %440 = load atomic i32, i32* %439 acquire, align 4
  %441 = and i32 %440, %438
  %442 = icmp eq i32 %441, 0
  br i1 %442, label %499, label %443

443:                                              ; preds = %434
  %444 = load atomic i32, i32* %383 monotonic, align 4
  br label %445

445:                                              ; preds = %449, %443
  %446 = phi i32 [ %444, %443 ], [ %452, %449 ]
  %447 = and i32 %446, %379
  %448 = icmp eq i32 %447, %379
  br i1 %448, label %499, label %449

449:                                              ; preds = %445
  %450 = or i32 %446, %379
  %451 = cmpxchg volatile i32* %383, i32 %446, i32 %450 release monotonic
  %452 = extractvalue { i32, i1 } %451, 0
  %453 = extractvalue { i32, i1 } %451, 1
  br i1 %453, label %454, label %445

454:                                              ; preds = %449
  %455 = bitcast %"class.v8::internal::HeapObject"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %455) #12
  %456 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %14, i64 0, i32 0, i32 0, i32 0
  store i64 %178, i64* %456, align 8
  %457 = xor i64 %373, -1
  %458 = add i64 %178, %457
  %459 = trunc i64 %458 to i32
  %460 = lshr i32 %459, 2
  %461 = and i32 %460, 31
  %462 = shl i32 1, %461
  %463 = lshr i64 %458, 7
  %464 = and i64 %463, 33554431
  %465 = getelementptr inbounds i32, i32* %380, i64 %464
  %466 = load atomic i32, i32* %465 acquire, align 4
  %467 = and i32 %466, %462
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %498, label %469

469:                                              ; preds = %454
  %470 = shl i32 %462, 1
  %471 = icmp eq i32 %470, 0
  %472 = getelementptr inbounds i32, i32* %465, i64 1
  %473 = select i1 %471, i32 1, i32 %470
  %474 = select i1 %471, i32* %472, i32* %465
  %475 = load atomic i32, i32* %474 monotonic, align 4
  br label %476

476:                                              ; preds = %480, %469
  %477 = phi i32 [ %475, %469 ], [ %483, %480 ]
  %478 = and i32 %477, %473
  %479 = icmp eq i32 %478, %473
  br i1 %479, label %498, label %480

480:                                              ; preds = %476
  %481 = or i32 %477, %473
  %482 = cmpxchg volatile i32* %474, i32 %477, i32 %481 release monotonic
  %483 = extractvalue { i32, i1 } %482, 0
  %484 = extractvalue { i32, i1 } %482, 1
  br i1 %484, label %485, label %476

485:                                              ; preds = %480
  %486 = inttoptr i64 %373 to %"class.v8::internal::MemoryChunk"*
  %487 = load i64, i64* %456, align 8
  %488 = and i64 %487, -4294967296
  %489 = add i64 %487, -1
  %490 = inttoptr i64 %489 to i32*
  %491 = load atomic i32, i32* %490 monotonic, align 4
  %492 = zext i32 %491 to i64
  %493 = or i64 %488, %492
  %494 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %14, i64 %493) #12
  %495 = sext i32 %494 to i64
  %496 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %486, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = atomicrmw add i64* %496, i64 %495 seq_cst
  br label %498

498:                                              ; preds = %476, %485, %454
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %455) #12
  br label %499

499:                                              ; preds = %425, %421, %445, %498, %434, %430, %387, %368
  %500 = bitcast %"class.v8::internal::Heap"** %124 to i64*
  %501 = load i64, i64* %500, align 8
  %502 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %503 = icmp eq i8 %502, 0
  br i1 %503, label %607, label %504

504:                                              ; preds = %499
  %505 = add i64 %26, 7
  %506 = inttoptr i64 %505 to i16*
  %507 = load atomic i16, i16* %506 monotonic, align 2
  switch i16 %507, label %607 [
    i16 1085, label %508
    i16 1057, label %508
  ]

508:                                              ; preds = %504, %504
  %509 = bitcast %"class.v8::internal::HeapObject"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %509) #12
  %510 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %15, i64 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %510, align 8
  %511 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %15, i64 %26) #12
  %512 = sext i32 %511 to i64
  %513 = add i64 %126, %512
  %514 = add i64 %513, 4
  %515 = and i64 %514, -262144
  %516 = inttoptr i64 %515 to %"class.v8::internal::Page"*
  %517 = icmp eq %"class.v8::internal::Page"* %128, %516
  br i1 %517, label %518, label %548

518:                                              ; preds = %508
  %519 = add i64 %57, %512
  %520 = add i64 %501, -41416
  %521 = inttoptr i64 %520 to %"class.v8::internal::Isolate"*
  %522 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %521, i64 0, i32 0, i32 7, i32 0, i64 534
  %523 = load i64, i64* %522, align 8
  %524 = inttoptr i64 %513 to i32*
  %525 = load atomic i32, i32* %524 monotonic, align 4
  %526 = trunc i64 %523 to i32
  %527 = icmp eq i32 %525, %526
  br i1 %527, label %528, label %548

528:                                              ; preds = %518
  %529 = load i64, i64* %133, align 8
  %530 = and i64 %529, 524288
  %531 = icmp eq i64 %530, 0
  br i1 %531, label %549, label %532

532:                                              ; preds = %528
  %533 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 8, i32 0
  %534 = bitcast %"struct.std::__1::__atomic_base.69"* %533 to i64*
  %535 = load atomic i64, i64* %534 seq_cst, align 64
  %536 = inttoptr i64 %535 to %"class.v8::internal::SemiSpace"*
  %537 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %536, i64 0, i32 5
  %538 = load i64, i64* %537, align 8
  %539 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 3
  %540 = load i64, i64* %539, align 8
  %541 = icmp ugt i64 %540, %538
  br i1 %541, label %548, label %542

542:                                              ; preds = %532
  %543 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 4
  %544 = load i64, i64* %543, align 32
  %545 = icmp ule i64 %544, %538
  %546 = icmp ult i64 %126, %538
  %547 = or i1 %546, %545
  br i1 %547, label %548, label %549

548:                                              ; preds = %542, %532, %518, %508
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %509) #12
  br label %607

549:                                              ; preds = %542, %528
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %509) #12
  %550 = trunc i64 %519 to i32
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %607, label %552

552:                                              ; preds = %549
  %553 = and i64 %519, -4294967296
  %554 = add i64 %519, 3
  %555 = inttoptr i64 %554 to i32*
  %556 = load i32, i32* %555, align 4
  %557 = zext i32 %556 to i64
  %558 = or i64 %553, %557
  %559 = bitcast %"class.v8::internal::AllocationSite"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %559) #12
  %560 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %18, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %558, i64* %560, align 8
  %561 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %562 = bitcast %"class.std::__1::tuple"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %562) #12
  %563 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %16, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %18, %"class.v8::internal::AllocationSite"** %563, align 8
  %564 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %17, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %564) #12
  %565 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %561, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %18, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %16, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %17) #12
  %566 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %565, 0
  %567 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %566, i64 3
  %568 = bitcast %"struct.std::__1::__hash_node_base.518"* %567 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %564) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %562) #12
  %569 = load i64, i64* %568, align 8
  %570 = add i64 %569, 1
  store i64 %570, i64* %568, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %559) #12
  br label %607

571:                                              ; preds = %357
  %572 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %573 = load i64, i64* %572, align 8
  %574 = icmp eq i64 %573, 0
  br i1 %574, label %580, label %575

575:                                              ; preds = %571
  %576 = sext i32 %46 to i64
  %577 = sub i64 %573, %576
  %578 = icmp eq i64 %577, %182
  br i1 %578, label %579, label %580

579:                                              ; preds = %575
  store i64 %182, i64* %572, align 8
  br label %584

580:                                              ; preds = %575, %571
  %581 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %148, i64 0, i32 0
  %582 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %581, align 8
  %583 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %582, i64 %182, i32 %46, i32 1) #12
  br label %584

584:                                              ; preds = %580, %579
  %585 = load atomic i32, i32* %359 acquire, align 4
  %586 = add i32 %585, 1
  %587 = inttoptr i64 %1 to i32*
  %588 = load i32, i32* %587, align 4
  %589 = and i32 %588, 2
  %590 = or i32 %589, %586
  store i32 %590, i32* %587, align 4
  %591 = zext i32 %590 to i64
  %592 = and i64 %591, 1
  %593 = icmp ne i64 %592, 0
  %594 = icmp ne i32 %590, 3
  %595 = and i1 %594, %593
  br i1 %595, label %596, label %1730

596:                                              ; preds = %584
  %597 = and i64 %1, -4294967296
  %598 = and i64 %591, 4294705152
  %599 = or i64 %598, %597
  %600 = inttoptr i64 %599 to %"class.v8::internal::BasicMemoryChunk"*
  %601 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %600, i64 0, i32 1
  %602 = load i64, i64* %601, align 8
  %603 = lshr i64 %602, 4
  %604 = trunc i64 %603 to i32
  %605 = and i32 %604, 1
  %606 = xor i32 %605, 1
  br label %1730

607:                                              ; preds = %552, %549, %548, %504, %499
  %608 = inttoptr i64 %1 to i32*
  %609 = load i32, i32* %608, align 4
  %610 = and i32 %609, 2
  %611 = trunc i64 %178 to i32
  %612 = or i32 %610, %611
  store i32 %612, i32* %608, align 4
  br i1 %58, label %613, label %673

613:                                              ; preds = %607
  %614 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %615 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %614, align 8
  %616 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %617 = load i32, i32* %616, align 8
  %618 = sext i32 %617 to i64
  %619 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %615, i64 0, i32 0, i64 %618, i32 0
  %620 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %619, align 8
  %621 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %620, i64 0, i32 1
  %622 = load i64, i64* %621, align 8
  %623 = icmp eq i64 %622, 256
  br i1 %623, label %628, label %624

624:                                              ; preds = %613
  %625 = add i64 %622, 1
  store i64 %625, i64* %621, align 8
  %626 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %620, i64 0, i32 2, i64 %622, i32 0, i32 0, i32 0, i32 0
  store i64 %178, i64* %626, align 8
  %627 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %620, i64 0, i32 2, i64 %622, i32 1
  store i32 %46, i32* %627, align 8
  br label %673

628:                                              ; preds = %613
  %629 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %615, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %629) #12
  %630 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %615, i64 0, i32 1, i32 1
  %631 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %630 to i64*
  %632 = load i64, i64* %631, align 8
  %633 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %620 to i64*
  store i64 %632, i64* %633, align 8
  %634 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %620 to i64
  store atomic volatile i64 %634, i64* %631 monotonic, align 8
  %635 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %615, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %636 = atomicrmw add i64* %635, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %629) #12
  %637 = call i8* @_Znwm(i64 4112) #17
  %638 = getelementptr inbounds i8, i8* %637, i64 8
  %639 = bitcast i8* %638 to i64*
  store i64 0, i64* %639, align 8
  %640 = getelementptr inbounds i8, i8* %637, i64 16
  %641 = bitcast i8* %640 to %"struct.std::__1::pair.1282"*
  %642 = getelementptr inbounds i8, i8* %637, i64 4112
  %643 = bitcast i8* %642 to %"struct.std::__1::pair.1282"*
  br label %644

644:                                              ; preds = %644, %628
  %645 = phi %"struct.std::__1::pair.1282"* [ %641, %628 ], [ %662, %644 ]
  %646 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %646, align 8
  %647 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 0, i32 1
  store i32 0, i32* %647, align 8
  %648 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %648, align 8
  %649 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 1, i32 1
  store i32 0, i32* %649, align 8
  %650 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %650, align 8
  %651 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 2, i32 1
  store i32 0, i32* %651, align 8
  %652 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %652, align 8
  %653 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 3, i32 1
  store i32 0, i32* %653, align 8
  %654 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %654, align 8
  %655 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 4, i32 1
  store i32 0, i32* %655, align 8
  %656 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %656, align 8
  %657 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 5, i32 1
  store i32 0, i32* %657, align 8
  %658 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %658, align 8
  %659 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 6, i32 1
  store i32 0, i32* %659, align 8
  %660 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %660, align 8
  %661 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 7, i32 1
  store i32 0, i32* %661, align 8
  %662 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %645, i64 8
  %663 = icmp eq %"struct.std::__1::pair.1282"* %662, %643
  br i1 %663, label %664, label %644

664:                                              ; preds = %644
  %665 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %619 to i8**
  store i8* %637, i8** %665, align 8
  %666 = bitcast i8* %637 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %667 = load i64, i64* %639, align 8
  %668 = icmp eq i64 %667, 256
  br i1 %668, label %673, label %669

669:                                              ; preds = %664
  %670 = add i64 %667, 1
  store i64 %670, i64* %639, align 8
  %671 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %666, i64 0, i32 2, i64 %667, i32 0, i32 0, i32 0, i32 0
  store i64 %178, i64* %671, align 8
  %672 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %666, i64 0, i32 2, i64 %667, i32 1
  store i32 %46, i32* %672, align 8
  br label %673

673:                                              ; preds = %669, %664, %624, %607
  %674 = sext i32 %46 to i64
  %675 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %676 = load i64, i64* %675, align 8
  %677 = add i64 %676, %674
  store i64 %677, i64* %675, align 8
  br label %1730

678:                                              ; preds = %177, %141, %137
  %679 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %680 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %681 = load i64, i64* %680, align 8
  %682 = sext i32 %46 to i64
  %683 = add i64 %681, %682
  %684 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %685 = load i64, i64* %684, align 8
  %686 = icmp ugt i64 %683, %685
  br i1 %686, label %687, label %692

687:                                              ; preds = %678
  %688 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %689 = load i32, i32* %688, align 8
  %690 = sext i32 %689 to i64
  %691 = shl nsw i64 %690, 1
  br label %697

692:                                              ; preds = %678
  store i64 %683, i64* %680, align 8
  %693 = add i64 %681, 1
  %694 = and i64 %693, 1
  %695 = icmp eq i64 %694, 0
  br i1 %695, label %696, label %697, !prof !29

696:                                              ; preds = %692
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

697:                                              ; preds = %692, %687
  %698 = phi i64 [ %691, %687 ], [ %693, %692 ]
  %699 = and i64 %698, 1
  %700 = icmp eq i64 %699, 0
  br i1 %700, label %701, label %705

701:                                              ; preds = %697
  %702 = call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %679, i32 %46, i32 0, i32 2) #12
  %703 = and i64 %702, 1
  %704 = icmp eq i64 %703, 0
  br i1 %704, label %1200, label %705

705:                                              ; preds = %701, %697
  %706 = phi i64 [ %702, %701 ], [ %698, %697 ]
  %707 = add i64 %706, -1
  %708 = inttoptr i64 %707 to i32*
  store atomic volatile i32 %24, i32* %708 monotonic, align 4
  %709 = add i64 %706, 3
  %710 = add i64 %57, 3
  %711 = add nsw i32 %46, -4
  %712 = sdiv i32 %711, 4
  %713 = sext i32 %712 to i64
  %714 = inttoptr i64 %709 to i32*
  %715 = inttoptr i64 %709 to i8*
  %716 = inttoptr i64 %710 to i32*
  %717 = inttoptr i64 %710 to i8*
  %718 = inttoptr i64 %709 to i8*
  %719 = add i32 %46, -1
  %720 = icmp ult i32 %719, 7
  br i1 %720, label %882, label %721

721:                                              ; preds = %705
  %722 = icmp ult i32 %712, 16
  br i1 %722, label %723, label %868

723:                                              ; preds = %721
  %724 = icmp ult i32 %712, 8
  br i1 %724, label %815, label %725

725:                                              ; preds = %723
  %726 = getelementptr i32, i32* %714, i64 %713
  %727 = bitcast i32* %726 to i8*
  %728 = getelementptr i32, i32* %716, i64 %713
  %729 = bitcast i32* %728 to i8*
  %730 = icmp ult i8* %715, %729
  %731 = icmp ult i8* %717, %727
  %732 = and i1 %730, %731
  br i1 %732, label %815, label %733

733:                                              ; preds = %725
  %734 = and i64 %713, -8
  %735 = getelementptr i32, i32* %716, i64 %734
  %736 = sub nsw i64 %713, %734
  %737 = getelementptr i32, i32* %714, i64 %734
  %738 = add nsw i64 %734, -8
  %739 = lshr exact i64 %738, 3
  %740 = add nuw nsw i64 %739, 1
  %741 = and i64 %740, 3
  %742 = icmp ult i64 %738, 24
  br i1 %742, label %794, label %743

743:                                              ; preds = %733
  %744 = sub nsw i64 %740, %741
  br label %745

745:                                              ; preds = %745, %743
  %746 = phi i64 [ 0, %743 ], [ %791, %745 ]
  %747 = phi i64 [ %744, %743 ], [ %792, %745 ]
  %748 = getelementptr i32, i32* %716, i64 %746
  %749 = getelementptr i32, i32* %714, i64 %746
  %750 = bitcast i32* %748 to <4 x i32>*
  %751 = load <4 x i32>, <4 x i32>* %750, align 4, !alias.scope !108
  %752 = getelementptr i32, i32* %748, i64 4
  %753 = bitcast i32* %752 to <4 x i32>*
  %754 = load <4 x i32>, <4 x i32>* %753, align 4, !alias.scope !108
  %755 = bitcast i32* %749 to <4 x i32>*
  store <4 x i32> %751, <4 x i32>* %755, align 4, !alias.scope !111, !noalias !108
  %756 = getelementptr i32, i32* %749, i64 4
  %757 = bitcast i32* %756 to <4 x i32>*
  store <4 x i32> %754, <4 x i32>* %757, align 4, !alias.scope !111, !noalias !108
  %758 = or i64 %746, 8
  %759 = getelementptr i32, i32* %716, i64 %758
  %760 = getelementptr i32, i32* %714, i64 %758
  %761 = bitcast i32* %759 to <4 x i32>*
  %762 = load <4 x i32>, <4 x i32>* %761, align 4, !alias.scope !108
  %763 = getelementptr i32, i32* %759, i64 4
  %764 = bitcast i32* %763 to <4 x i32>*
  %765 = load <4 x i32>, <4 x i32>* %764, align 4, !alias.scope !108
  %766 = bitcast i32* %760 to <4 x i32>*
  store <4 x i32> %762, <4 x i32>* %766, align 4, !alias.scope !111, !noalias !108
  %767 = getelementptr i32, i32* %760, i64 4
  %768 = bitcast i32* %767 to <4 x i32>*
  store <4 x i32> %765, <4 x i32>* %768, align 4, !alias.scope !111, !noalias !108
  %769 = or i64 %746, 16
  %770 = getelementptr i32, i32* %716, i64 %769
  %771 = getelementptr i32, i32* %714, i64 %769
  %772 = bitcast i32* %770 to <4 x i32>*
  %773 = load <4 x i32>, <4 x i32>* %772, align 4, !alias.scope !108
  %774 = getelementptr i32, i32* %770, i64 4
  %775 = bitcast i32* %774 to <4 x i32>*
  %776 = load <4 x i32>, <4 x i32>* %775, align 4, !alias.scope !108
  %777 = bitcast i32* %771 to <4 x i32>*
  store <4 x i32> %773, <4 x i32>* %777, align 4, !alias.scope !111, !noalias !108
  %778 = getelementptr i32, i32* %771, i64 4
  %779 = bitcast i32* %778 to <4 x i32>*
  store <4 x i32> %776, <4 x i32>* %779, align 4, !alias.scope !111, !noalias !108
  %780 = or i64 %746, 24
  %781 = getelementptr i32, i32* %716, i64 %780
  %782 = getelementptr i32, i32* %714, i64 %780
  %783 = bitcast i32* %781 to <4 x i32>*
  %784 = load <4 x i32>, <4 x i32>* %783, align 4, !alias.scope !108
  %785 = getelementptr i32, i32* %781, i64 4
  %786 = bitcast i32* %785 to <4 x i32>*
  %787 = load <4 x i32>, <4 x i32>* %786, align 4, !alias.scope !108
  %788 = bitcast i32* %782 to <4 x i32>*
  store <4 x i32> %784, <4 x i32>* %788, align 4, !alias.scope !111, !noalias !108
  %789 = getelementptr i32, i32* %782, i64 4
  %790 = bitcast i32* %789 to <4 x i32>*
  store <4 x i32> %787, <4 x i32>* %790, align 4, !alias.scope !111, !noalias !108
  %791 = add i64 %746, 32
  %792 = add i64 %747, -4
  %793 = icmp eq i64 %792, 0
  br i1 %793, label %794, label %745, !llvm.loop !113

794:                                              ; preds = %745, %733
  %795 = phi i64 [ 0, %733 ], [ %791, %745 ]
  %796 = icmp eq i64 %741, 0
  br i1 %796, label %813, label %797

797:                                              ; preds = %794, %797
  %798 = phi i64 [ %810, %797 ], [ %795, %794 ]
  %799 = phi i64 [ %811, %797 ], [ %741, %794 ]
  %800 = getelementptr i32, i32* %716, i64 %798
  %801 = getelementptr i32, i32* %714, i64 %798
  %802 = bitcast i32* %800 to <4 x i32>*
  %803 = load <4 x i32>, <4 x i32>* %802, align 4, !alias.scope !108
  %804 = getelementptr i32, i32* %800, i64 4
  %805 = bitcast i32* %804 to <4 x i32>*
  %806 = load <4 x i32>, <4 x i32>* %805, align 4, !alias.scope !108
  %807 = bitcast i32* %801 to <4 x i32>*
  store <4 x i32> %803, <4 x i32>* %807, align 4, !alias.scope !111, !noalias !108
  %808 = getelementptr i32, i32* %801, i64 4
  %809 = bitcast i32* %808 to <4 x i32>*
  store <4 x i32> %806, <4 x i32>* %809, align 4, !alias.scope !111, !noalias !108
  %810 = add i64 %798, 8
  %811 = add i64 %799, -1
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %813, label %797, !llvm.loop !114

813:                                              ; preds = %797, %794
  %814 = icmp eq i64 %734, %713
  br i1 %814, label %882, label %815

815:                                              ; preds = %813, %725, %723
  %816 = phi i32* [ %716, %725 ], [ %716, %723 ], [ %735, %813 ]
  %817 = phi i64 [ %713, %725 ], [ %713, %723 ], [ %736, %813 ]
  %818 = phi i32* [ %714, %725 ], [ %714, %723 ], [ %737, %813 ]
  %819 = add nsw i64 %817, -1
  %820 = and i64 %817, 7
  %821 = icmp eq i64 %820, 0
  br i1 %821, label %833, label %822

822:                                              ; preds = %815, %822
  %823 = phi i32* [ %828, %822 ], [ %816, %815 ]
  %824 = phi i64 [ %827, %822 ], [ %817, %815 ]
  %825 = phi i32* [ %830, %822 ], [ %818, %815 ]
  %826 = phi i64 [ %831, %822 ], [ %820, %815 ]
  %827 = add i64 %824, -1
  %828 = getelementptr inbounds i32, i32* %823, i64 1
  %829 = load i32, i32* %823, align 4
  %830 = getelementptr inbounds i32, i32* %825, i64 1
  store i32 %829, i32* %825, align 4
  %831 = add i64 %826, -1
  %832 = icmp eq i64 %831, 0
  br i1 %832, label %833, label %822, !llvm.loop !115

833:                                              ; preds = %822, %815
  %834 = phi i32* [ %816, %815 ], [ %828, %822 ]
  %835 = phi i64 [ %817, %815 ], [ %827, %822 ]
  %836 = phi i32* [ %818, %815 ], [ %830, %822 ]
  %837 = icmp ult i64 %819, 7
  br i1 %837, label %882, label %838

838:                                              ; preds = %833, %838
  %839 = phi i32* [ %864, %838 ], [ %834, %833 ]
  %840 = phi i64 [ %863, %838 ], [ %835, %833 ]
  %841 = phi i32* [ %866, %838 ], [ %836, %833 ]
  %842 = getelementptr inbounds i32, i32* %839, i64 1
  %843 = load i32, i32* %839, align 4
  %844 = getelementptr inbounds i32, i32* %841, i64 1
  store i32 %843, i32* %841, align 4
  %845 = getelementptr inbounds i32, i32* %839, i64 2
  %846 = load i32, i32* %842, align 4
  %847 = getelementptr inbounds i32, i32* %841, i64 2
  store i32 %846, i32* %844, align 4
  %848 = getelementptr inbounds i32, i32* %839, i64 3
  %849 = load i32, i32* %845, align 4
  %850 = getelementptr inbounds i32, i32* %841, i64 3
  store i32 %849, i32* %847, align 4
  %851 = getelementptr inbounds i32, i32* %839, i64 4
  %852 = load i32, i32* %848, align 4
  %853 = getelementptr inbounds i32, i32* %841, i64 4
  store i32 %852, i32* %850, align 4
  %854 = getelementptr inbounds i32, i32* %839, i64 5
  %855 = load i32, i32* %851, align 4
  %856 = getelementptr inbounds i32, i32* %841, i64 5
  store i32 %855, i32* %853, align 4
  %857 = getelementptr inbounds i32, i32* %839, i64 6
  %858 = load i32, i32* %854, align 4
  %859 = getelementptr inbounds i32, i32* %841, i64 6
  store i32 %858, i32* %856, align 4
  %860 = getelementptr inbounds i32, i32* %839, i64 7
  %861 = load i32, i32* %857, align 4
  %862 = getelementptr inbounds i32, i32* %841, i64 7
  store i32 %861, i32* %859, align 4
  %863 = add i64 %840, -8
  %864 = getelementptr inbounds i32, i32* %839, i64 8
  %865 = load i32, i32* %860, align 4
  %866 = getelementptr inbounds i32, i32* %841, i64 8
  store i32 %865, i32* %862, align 4
  %867 = icmp eq i64 %863, 0
  br i1 %867, label %882, label %838, !llvm.loop !116

868:                                              ; preds = %721
  %869 = inttoptr i64 %710 to i8*
  %870 = shl nsw i64 %713, 2
  %871 = add nsw i64 %870, -4
  %872 = lshr exact i64 %871, 2
  switch i64 %872, label %881 [
    i64 3, label %880
    i64 1, label %875
    i64 2, label %879
    i64 0, label %873
  ]

873:                                              ; preds = %868
  %874 = load i32, i32* %716, align 1
  store i32 %874, i32* %714, align 1
  br label %882

875:                                              ; preds = %868
  %876 = inttoptr i64 %710 to i64*
  %877 = inttoptr i64 %709 to i64*
  %878 = load i64, i64* %876, align 1
  store i64 %878, i64* %877, align 1
  br label %882

879:                                              ; preds = %868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %718, i8* align 1 %869, i64 12, i1 false) #12
  br label %882

880:                                              ; preds = %868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %718, i8* align 1 %869, i64 16, i1 false) #12
  br label %882

881:                                              ; preds = %868
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %718, i8* align 1 %869, i64 %870, i1 false) #12
  br label %882

882:                                              ; preds = %833, %838, %813, %881, %880, %879, %875, %873, %705
  %883 = trunc i64 %707 to i32
  %884 = inttoptr i64 %126 to i32*
  %885 = cmpxchg volatile i32* %884, i32 %24, i32 %883 release monotonic
  %886 = extractvalue { i32, i1 } %885, 1
  br i1 %886, label %887, label %1096

887:                                              ; preds = %882
  %888 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %889 = load i8, i8* %888, align 8, !range !2
  %890 = icmp eq i8 %889, 0
  br i1 %890, label %893, label %891, !prof !60

891:                                              ; preds = %887
  %892 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %124, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %892, i64 %706, i64 %57, i32 %46) #12
  br label %893

893:                                              ; preds = %891, %887
  %894 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %895 = load i8, i8* %894, align 1, !range !2
  %896 = icmp eq i8 %895, 0
  br i1 %896, label %1024, label %897

897:                                              ; preds = %893
  %898 = and i64 %706, -262144
  %899 = or i64 %898, 272
  %900 = sub i64 %706, %898
  %901 = trunc i64 %900 to i32
  %902 = lshr i32 %901, 2
  %903 = and i32 %902, 31
  %904 = shl i32 1, %903
  %905 = inttoptr i64 %899 to i32*
  %906 = lshr i64 %900, 7
  %907 = and i64 %906, 33554431
  %908 = getelementptr inbounds i32, i32* %905, i64 %907
  %909 = load atomic i32, i32* %908 acquire, align 4
  %910 = and i32 %909, %904
  %911 = icmp eq i32 %910, 0
  br i1 %911, label %921, label %912

912:                                              ; preds = %897
  %913 = shl i32 %904, 1
  %914 = icmp eq i32 %913, 0
  %915 = getelementptr inbounds i32, i32* %908, i64 1
  %916 = select i1 %914, i32 1, i32 %913
  %917 = select i1 %914, i32* %915, i32* %908
  %918 = load atomic i32, i32* %917 acquire, align 4
  %919 = and i32 %918, %916
  %920 = icmp eq i32 %919, 0
  br i1 %920, label %921, label %1024

921:                                              ; preds = %912, %897
  %922 = or i64 %59, 272
  %923 = sub i64 %57, %59
  %924 = trunc i64 %923 to i32
  %925 = lshr i32 %924, 2
  %926 = and i32 %925, 31
  %927 = shl i32 1, %926
  %928 = inttoptr i64 %922 to i32*
  %929 = lshr i64 %923, 7
  %930 = and i64 %929, 33554431
  %931 = getelementptr inbounds i32, i32* %928, i64 %930
  %932 = load atomic i32, i32* %931 acquire, align 4
  %933 = and i32 %932, %927
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %955, label %935

935:                                              ; preds = %921
  %936 = shl i32 %927, 1
  %937 = icmp eq i32 %936, 0
  %938 = getelementptr inbounds i32, i32* %931, i64 1
  %939 = select i1 %937, i32 1, i32 %936
  %940 = select i1 %937, i32* %938, i32* %931
  %941 = load atomic i32, i32* %940 acquire, align 4
  %942 = and i32 %941, %939
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %944, label %955

944:                                              ; preds = %935
  %945 = load atomic i32, i32* %908 monotonic, align 4
  br label %946

946:                                              ; preds = %950, %944
  %947 = phi i32 [ %945, %944 ], [ %953, %950 ]
  %948 = and i32 %947, %904
  %949 = icmp eq i32 %948, %904
  br i1 %949, label %1024, label %950

950:                                              ; preds = %946
  %951 = or i32 %947, %904
  %952 = cmpxchg volatile i32* %908, i32 %947, i32 %951 release monotonic
  %953 = extractvalue { i32, i1 } %952, 0
  %954 = extractvalue { i32, i1 } %952, 1
  br i1 %954, label %1024, label %946

955:                                              ; preds = %935, %921
  %956 = load atomic i32, i32* %931 acquire, align 4
  %957 = and i32 %956, %927
  %958 = icmp eq i32 %957, 0
  br i1 %958, label %1024, label %959

959:                                              ; preds = %955
  %960 = shl i32 %927, 1
  %961 = icmp eq i32 %960, 0
  %962 = getelementptr inbounds i32, i32* %931, i64 1
  %963 = select i1 %961, i32 1, i32 %960
  %964 = select i1 %961, i32* %962, i32* %931
  %965 = load atomic i32, i32* %964 acquire, align 4
  %966 = and i32 %965, %963
  %967 = icmp eq i32 %966, 0
  br i1 %967, label %1024, label %968

968:                                              ; preds = %959
  %969 = load atomic i32, i32* %908 monotonic, align 4
  br label %970

970:                                              ; preds = %974, %968
  %971 = phi i32 [ %969, %968 ], [ %977, %974 ]
  %972 = and i32 %971, %904
  %973 = icmp eq i32 %972, %904
  br i1 %973, label %1024, label %974

974:                                              ; preds = %970
  %975 = or i32 %971, %904
  %976 = cmpxchg volatile i32* %908, i32 %971, i32 %975 release monotonic
  %977 = extractvalue { i32, i1 } %976, 0
  %978 = extractvalue { i32, i1 } %976, 1
  br i1 %978, label %979, label %970

979:                                              ; preds = %974
  %980 = bitcast %"class.v8::internal::HeapObject"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %980) #12
  %981 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %9, i64 0, i32 0, i32 0, i32 0
  store i64 %706, i64* %981, align 8
  %982 = xor i64 %898, -1
  %983 = add i64 %706, %982
  %984 = trunc i64 %983 to i32
  %985 = lshr i32 %984, 2
  %986 = and i32 %985, 31
  %987 = shl i32 1, %986
  %988 = lshr i64 %983, 7
  %989 = and i64 %988, 33554431
  %990 = getelementptr inbounds i32, i32* %905, i64 %989
  %991 = load atomic i32, i32* %990 acquire, align 4
  %992 = and i32 %991, %987
  %993 = icmp eq i32 %992, 0
  br i1 %993, label %1023, label %994

994:                                              ; preds = %979
  %995 = shl i32 %987, 1
  %996 = icmp eq i32 %995, 0
  %997 = getelementptr inbounds i32, i32* %990, i64 1
  %998 = select i1 %996, i32 1, i32 %995
  %999 = select i1 %996, i32* %997, i32* %990
  %1000 = load atomic i32, i32* %999 monotonic, align 4
  br label %1001

1001:                                             ; preds = %1005, %994
  %1002 = phi i32 [ %1000, %994 ], [ %1008, %1005 ]
  %1003 = and i32 %1002, %998
  %1004 = icmp eq i32 %1003, %998
  br i1 %1004, label %1023, label %1005

1005:                                             ; preds = %1001
  %1006 = or i32 %1002, %998
  %1007 = cmpxchg volatile i32* %999, i32 %1002, i32 %1006 release monotonic
  %1008 = extractvalue { i32, i1 } %1007, 0
  %1009 = extractvalue { i32, i1 } %1007, 1
  br i1 %1009, label %1010, label %1001

1010:                                             ; preds = %1005
  %1011 = inttoptr i64 %898 to %"class.v8::internal::MemoryChunk"*
  %1012 = load i64, i64* %981, align 8
  %1013 = and i64 %1012, -4294967296
  %1014 = add i64 %1012, -1
  %1015 = inttoptr i64 %1014 to i32*
  %1016 = load atomic i32, i32* %1015 monotonic, align 4
  %1017 = zext i32 %1016 to i64
  %1018 = or i64 %1013, %1017
  %1019 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %9, i64 %1018) #12
  %1020 = sext i32 %1019 to i64
  %1021 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1011, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1022 = atomicrmw add i64* %1021, i64 %1020 seq_cst
  br label %1023

1023:                                             ; preds = %1001, %1010, %979
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %980) #12
  br label %1024

1024:                                             ; preds = %950, %946, %970, %1023, %959, %955, %912, %893
  %1025 = bitcast %"class.v8::internal::Heap"** %124 to i64*
  %1026 = load i64, i64* %1025, align 8
  %1027 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1028 = icmp eq i8 %1027, 0
  br i1 %1028, label %1130, label %1029

1029:                                             ; preds = %1024
  %1030 = add i64 %26, 7
  %1031 = inttoptr i64 %1030 to i16*
  %1032 = load atomic i16, i16* %1031 monotonic, align 2
  switch i16 %1032, label %1130 [
    i16 1085, label %1033
    i16 1057, label %1033
  ]

1033:                                             ; preds = %1029, %1029
  %1034 = bitcast %"class.v8::internal::HeapObject"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1034) #12
  %1035 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %10, i64 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %1035, align 8
  %1036 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %10, i64 %26) #12
  %1037 = sext i32 %1036 to i64
  %1038 = add i64 %126, %1037
  %1039 = add i64 %1038, 4
  %1040 = and i64 %1039, -262144
  %1041 = inttoptr i64 %1040 to %"class.v8::internal::Page"*
  %1042 = icmp eq %"class.v8::internal::Page"* %128, %1041
  br i1 %1042, label %1043, label %1073

1043:                                             ; preds = %1033
  %1044 = add i64 %57, %1037
  %1045 = add i64 %1026, -41416
  %1046 = inttoptr i64 %1045 to %"class.v8::internal::Isolate"*
  %1047 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1046, i64 0, i32 0, i32 7, i32 0, i64 534
  %1048 = load i64, i64* %1047, align 8
  %1049 = inttoptr i64 %1038 to i32*
  %1050 = load atomic i32, i32* %1049 monotonic, align 4
  %1051 = trunc i64 %1048 to i32
  %1052 = icmp eq i32 %1050, %1051
  br i1 %1052, label %1053, label %1073

1053:                                             ; preds = %1043
  %1054 = load i64, i64* %133, align 8
  %1055 = and i64 %1054, 524288
  %1056 = icmp eq i64 %1055, 0
  br i1 %1056, label %1074, label %1057

1057:                                             ; preds = %1053
  %1058 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 8, i32 0
  %1059 = bitcast %"struct.std::__1::__atomic_base.69"* %1058 to i64*
  %1060 = load atomic i64, i64* %1059 seq_cst, align 64
  %1061 = inttoptr i64 %1060 to %"class.v8::internal::SemiSpace"*
  %1062 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1061, i64 0, i32 5
  %1063 = load i64, i64* %1062, align 8
  %1064 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 3
  %1065 = load i64, i64* %1064, align 8
  %1066 = icmp ugt i64 %1065, %1063
  br i1 %1066, label %1073, label %1067

1067:                                             ; preds = %1057
  %1068 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 4
  %1069 = load i64, i64* %1068, align 32
  %1070 = icmp ule i64 %1069, %1063
  %1071 = icmp ult i64 %126, %1063
  %1072 = or i1 %1071, %1070
  br i1 %1072, label %1073, label %1074

1073:                                             ; preds = %1067, %1057, %1043, %1033
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1034) #12
  br label %1130

1074:                                             ; preds = %1067, %1053
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1034) #12
  %1075 = trunc i64 %1044 to i32
  %1076 = icmp eq i32 %1075, 0
  br i1 %1076, label %1130, label %1077

1077:                                             ; preds = %1074
  %1078 = and i64 %1044, -4294967296
  %1079 = add i64 %1044, 3
  %1080 = inttoptr i64 %1079 to i32*
  %1081 = load i32, i32* %1080, align 4
  %1082 = zext i32 %1081 to i64
  %1083 = or i64 %1078, %1082
  %1084 = bitcast %"class.v8::internal::AllocationSite"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1084) #12
  %1085 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %13, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1083, i64* %1085, align 8
  %1086 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1087 = bitcast %"class.std::__1::tuple"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1087) #12
  %1088 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %11, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %13, %"class.v8::internal::AllocationSite"** %1088, align 8
  %1089 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %12, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1089) #12
  %1090 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1086, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %13, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %11, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %12) #12
  %1091 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1090, 0
  %1092 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1091, i64 3
  %1093 = bitcast %"struct.std::__1::__hash_node_base.518"* %1092 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1089) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1087) #12
  %1094 = load i64, i64* %1093, align 8
  %1095 = add i64 %1094, 1
  store i64 %1095, i64* %1093, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1084) #12
  br label %1130

1096:                                             ; preds = %882
  %1097 = load i64, i64* %680, align 8
  %1098 = icmp ne i64 %1097, 0
  %1099 = sub i64 %1097, %682
  %1100 = icmp eq i64 %1099, %707
  %1101 = and i1 %1098, %1100
  br i1 %1101, label %1102, label %1103

1102:                                             ; preds = %1096
  store i64 %707, i64* %680, align 8
  br label %1107

1103:                                             ; preds = %1096
  %1104 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %1105 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1104, align 8
  %1106 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1105, i64 %707, i32 %46, i32 1) #12
  br label %1107

1107:                                             ; preds = %1103, %1102
  %1108 = load atomic i32, i32* %884 acquire, align 4
  %1109 = add i32 %1108, 1
  %1110 = inttoptr i64 %1 to i32*
  %1111 = load i32, i32* %1110, align 4
  %1112 = and i32 %1111, 2
  %1113 = or i32 %1112, %1109
  store i32 %1113, i32* %1110, align 4
  %1114 = zext i32 %1113 to i64
  %1115 = and i64 %1114, 1
  %1116 = icmp ne i64 %1115, 0
  %1117 = icmp ne i32 %1113, 3
  %1118 = and i1 %1117, %1116
  br i1 %1118, label %1119, label %1730

1119:                                             ; preds = %1107
  %1120 = and i64 %1, -4294967296
  %1121 = and i64 %1114, 4294705152
  %1122 = or i64 %1121, %1120
  %1123 = inttoptr i64 %1122 to %"class.v8::internal::BasicMemoryChunk"*
  %1124 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1123, i64 0, i32 1
  %1125 = load i64, i64* %1124, align 8
  %1126 = lshr i64 %1125, 4
  %1127 = trunc i64 %1126 to i32
  %1128 = and i32 %1127, 1
  %1129 = xor i32 %1128, 1
  br label %1730

1130:                                             ; preds = %1077, %1074, %1073, %1029, %1024
  %1131 = inttoptr i64 %1 to i32*
  %1132 = load i32, i32* %1131, align 4
  %1133 = and i32 %1132, 2
  %1134 = trunc i64 %706 to i32
  %1135 = or i32 %1133, %1134
  store i32 %1135, i32* %1131, align 4
  br i1 %58, label %1136, label %1196

1136:                                             ; preds = %1130
  %1137 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1138 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1137, align 8
  %1139 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1140 = load i32, i32* %1139, align 8
  %1141 = sext i32 %1140 to i64
  %1142 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1138, i64 0, i32 0, i32 0, i64 %1141, i32 0
  %1143 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1142, align 8
  %1144 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1143, i64 0, i32 1
  %1145 = load i64, i64* %1144, align 8
  %1146 = icmp eq i64 %1145, 256
  br i1 %1146, label %1151, label %1147

1147:                                             ; preds = %1136
  %1148 = add i64 %1145, 1
  store i64 %1148, i64* %1144, align 8
  %1149 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1143, i64 0, i32 2, i64 %1145, i32 0, i32 0, i32 0, i32 0
  store i64 %706, i64* %1149, align 8
  %1150 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1143, i64 0, i32 2, i64 %1145, i32 1
  store i32 %46, i32* %1150, align 8
  br label %1196

1151:                                             ; preds = %1136
  %1152 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1138, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1152) #12
  %1153 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1138, i64 0, i32 0, i32 1, i32 1
  %1154 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1153 to i64*
  %1155 = load i64, i64* %1154, align 8
  %1156 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1143 to i64*
  store i64 %1155, i64* %1156, align 8
  %1157 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1143 to i64
  store atomic volatile i64 %1157, i64* %1154 monotonic, align 8
  %1158 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1138, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1159 = atomicrmw add i64* %1158, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1152) #12
  %1160 = call i8* @_Znwm(i64 4112) #17
  %1161 = getelementptr inbounds i8, i8* %1160, i64 8
  %1162 = bitcast i8* %1161 to i64*
  store i64 0, i64* %1162, align 8
  %1163 = getelementptr inbounds i8, i8* %1160, i64 16
  %1164 = bitcast i8* %1163 to %"struct.std::__1::pair.1282"*
  %1165 = getelementptr inbounds i8, i8* %1160, i64 4112
  %1166 = bitcast i8* %1165 to %"struct.std::__1::pair.1282"*
  br label %1167

1167:                                             ; preds = %1167, %1151
  %1168 = phi %"struct.std::__1::pair.1282"* [ %1164, %1151 ], [ %1185, %1167 ]
  %1169 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1169, align 8
  %1170 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 0, i32 1
  store i32 0, i32* %1170, align 8
  %1171 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1171, align 8
  %1172 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 1, i32 1
  store i32 0, i32* %1172, align 8
  %1173 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1173, align 8
  %1174 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 2, i32 1
  store i32 0, i32* %1174, align 8
  %1175 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1175, align 8
  %1176 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 3, i32 1
  store i32 0, i32* %1176, align 8
  %1177 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1177, align 8
  %1178 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 4, i32 1
  store i32 0, i32* %1178, align 8
  %1179 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1179, align 8
  %1180 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 5, i32 1
  store i32 0, i32* %1180, align 8
  %1181 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1181, align 8
  %1182 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 6, i32 1
  store i32 0, i32* %1182, align 8
  %1183 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1183, align 8
  %1184 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 7, i32 1
  store i32 0, i32* %1184, align 8
  %1185 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1168, i64 8
  %1186 = icmp eq %"struct.std::__1::pair.1282"* %1185, %1166
  br i1 %1186, label %1187, label %1167

1187:                                             ; preds = %1167
  %1188 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1142 to i8**
  store i8* %1160, i8** %1188, align 8
  %1189 = bitcast i8* %1160 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1190 = load i64, i64* %1162, align 8
  %1191 = icmp eq i64 %1190, 256
  br i1 %1191, label %1196, label %1192

1192:                                             ; preds = %1187
  %1193 = add i64 %1190, 1
  store i64 %1193, i64* %1162, align 8
  %1194 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1189, i64 0, i32 2, i64 %1190, i32 0, i32 0, i32 0, i32 0
  store i64 %706, i64* %1194, align 8
  %1195 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1189, i64 0, i32 2, i64 %1190, i32 1
  store i32 %46, i32* %1195, align 8
  br label %1196

1196:                                             ; preds = %1192, %1187, %1147, %1130
  %1197 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1198 = load i64, i64* %1197, align 8
  %1199 = add i64 %1198, %682
  store i64 %1199, i64* %1197, align 8
  br label %1730

1200:                                             ; preds = %701
  %1201 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1202 = icmp sgt i32 %46, 8192
  br i1 %1202, label %1203, label %1227

1203:                                             ; preds = %1200
  %1204 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1205 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1204, align 8
  %1206 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1205, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1206) #12
  %1207 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1205, i64 0, i32 0
  %1208 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1205, i64 0, i32 0, i32 1, i32 1
  %1209 = load i64, i64* %1208, align 8
  %1210 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1205, i64 0, i32 0, i32 1, i32 2
  %1211 = load i64, i64* %1210, align 8
  %1212 = add i64 %1209, %682
  %1213 = icmp ult i64 %1211, %1212
  br i1 %1213, label %1223, label %1214

1214:                                             ; preds = %1203
  %1215 = add i64 %1209, 1
  store i64 %1212, i64* %1208, align 8
  %1216 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1217 = icmp eq i8 %1216, 0
  br i1 %1217, label %1219, label %1218

1218:                                             ; preds = %1214
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1207, i32 2) #12
  br label %1219

1219:                                             ; preds = %1218, %1214
  %1220 = and i64 %1215, 1
  %1221 = icmp eq i64 %1220, 0
  br i1 %1221, label %1222, label %1225, !prof !29

1222:                                             ; preds = %1219
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1223:                                             ; preds = %1203
  %1224 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1205, i32 %46, i32 0, i32 2) #12
  br label %1225

1225:                                             ; preds = %1223, %1219
  %1226 = phi i64 [ %1224, %1223 ], [ %1215, %1219 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1206) #12
  br label %1229

1227:                                             ; preds = %1200
  %1228 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1201, i32 %46, i32 0) #12
  br label %1229

1229:                                             ; preds = %1227, %1225
  %1230 = phi i64 [ %1226, %1225 ], [ %1228, %1227 ]
  %1231 = and i64 %1230, 1
  %1232 = icmp eq i64 %1231, 0
  br i1 %1232, label %1728, label %1233

1233:                                             ; preds = %1229
  %1234 = add i64 %1230, -1
  %1235 = inttoptr i64 %1234 to i32*
  store atomic volatile i32 %24, i32* %1235 monotonic, align 4
  %1236 = add i64 %1230, 3
  %1237 = add i64 %57, 3
  %1238 = add nsw i32 %46, -4
  %1239 = sdiv i32 %1238, 4
  %1240 = sext i32 %1239 to i64
  %1241 = inttoptr i64 %1236 to i32*
  %1242 = inttoptr i64 %1236 to i8*
  %1243 = inttoptr i64 %1237 to i32*
  %1244 = inttoptr i64 %1237 to i8*
  %1245 = inttoptr i64 %1236 to i8*
  %1246 = add i32 %46, -1
  %1247 = icmp ult i32 %1246, 7
  br i1 %1247, label %1409, label %1248

1248:                                             ; preds = %1233
  %1249 = icmp ult i32 %1239, 16
  br i1 %1249, label %1250, label %1395

1250:                                             ; preds = %1248
  %1251 = icmp ult i32 %1239, 8
  br i1 %1251, label %1342, label %1252

1252:                                             ; preds = %1250
  %1253 = getelementptr i32, i32* %1241, i64 %1240
  %1254 = bitcast i32* %1253 to i8*
  %1255 = getelementptr i32, i32* %1243, i64 %1240
  %1256 = bitcast i32* %1255 to i8*
  %1257 = icmp ult i8* %1242, %1256
  %1258 = icmp ult i8* %1244, %1254
  %1259 = and i1 %1257, %1258
  br i1 %1259, label %1342, label %1260

1260:                                             ; preds = %1252
  %1261 = and i64 %1240, -8
  %1262 = getelementptr i32, i32* %1243, i64 %1261
  %1263 = sub nsw i64 %1240, %1261
  %1264 = getelementptr i32, i32* %1241, i64 %1261
  %1265 = add nsw i64 %1261, -8
  %1266 = lshr exact i64 %1265, 3
  %1267 = add nuw nsw i64 %1266, 1
  %1268 = and i64 %1267, 3
  %1269 = icmp ult i64 %1265, 24
  br i1 %1269, label %1321, label %1270

1270:                                             ; preds = %1260
  %1271 = sub nsw i64 %1267, %1268
  br label %1272

1272:                                             ; preds = %1272, %1270
  %1273 = phi i64 [ 0, %1270 ], [ %1318, %1272 ]
  %1274 = phi i64 [ %1271, %1270 ], [ %1319, %1272 ]
  %1275 = getelementptr i32, i32* %1243, i64 %1273
  %1276 = getelementptr i32, i32* %1241, i64 %1273
  %1277 = bitcast i32* %1275 to <4 x i32>*
  %1278 = load <4 x i32>, <4 x i32>* %1277, align 4, !alias.scope !117
  %1279 = getelementptr i32, i32* %1275, i64 4
  %1280 = bitcast i32* %1279 to <4 x i32>*
  %1281 = load <4 x i32>, <4 x i32>* %1280, align 4, !alias.scope !117
  %1282 = bitcast i32* %1276 to <4 x i32>*
  store <4 x i32> %1278, <4 x i32>* %1282, align 4, !alias.scope !120, !noalias !117
  %1283 = getelementptr i32, i32* %1276, i64 4
  %1284 = bitcast i32* %1283 to <4 x i32>*
  store <4 x i32> %1281, <4 x i32>* %1284, align 4, !alias.scope !120, !noalias !117
  %1285 = or i64 %1273, 8
  %1286 = getelementptr i32, i32* %1243, i64 %1285
  %1287 = getelementptr i32, i32* %1241, i64 %1285
  %1288 = bitcast i32* %1286 to <4 x i32>*
  %1289 = load <4 x i32>, <4 x i32>* %1288, align 4, !alias.scope !117
  %1290 = getelementptr i32, i32* %1286, i64 4
  %1291 = bitcast i32* %1290 to <4 x i32>*
  %1292 = load <4 x i32>, <4 x i32>* %1291, align 4, !alias.scope !117
  %1293 = bitcast i32* %1287 to <4 x i32>*
  store <4 x i32> %1289, <4 x i32>* %1293, align 4, !alias.scope !120, !noalias !117
  %1294 = getelementptr i32, i32* %1287, i64 4
  %1295 = bitcast i32* %1294 to <4 x i32>*
  store <4 x i32> %1292, <4 x i32>* %1295, align 4, !alias.scope !120, !noalias !117
  %1296 = or i64 %1273, 16
  %1297 = getelementptr i32, i32* %1243, i64 %1296
  %1298 = getelementptr i32, i32* %1241, i64 %1296
  %1299 = bitcast i32* %1297 to <4 x i32>*
  %1300 = load <4 x i32>, <4 x i32>* %1299, align 4, !alias.scope !117
  %1301 = getelementptr i32, i32* %1297, i64 4
  %1302 = bitcast i32* %1301 to <4 x i32>*
  %1303 = load <4 x i32>, <4 x i32>* %1302, align 4, !alias.scope !117
  %1304 = bitcast i32* %1298 to <4 x i32>*
  store <4 x i32> %1300, <4 x i32>* %1304, align 4, !alias.scope !120, !noalias !117
  %1305 = getelementptr i32, i32* %1298, i64 4
  %1306 = bitcast i32* %1305 to <4 x i32>*
  store <4 x i32> %1303, <4 x i32>* %1306, align 4, !alias.scope !120, !noalias !117
  %1307 = or i64 %1273, 24
  %1308 = getelementptr i32, i32* %1243, i64 %1307
  %1309 = getelementptr i32, i32* %1241, i64 %1307
  %1310 = bitcast i32* %1308 to <4 x i32>*
  %1311 = load <4 x i32>, <4 x i32>* %1310, align 4, !alias.scope !117
  %1312 = getelementptr i32, i32* %1308, i64 4
  %1313 = bitcast i32* %1312 to <4 x i32>*
  %1314 = load <4 x i32>, <4 x i32>* %1313, align 4, !alias.scope !117
  %1315 = bitcast i32* %1309 to <4 x i32>*
  store <4 x i32> %1311, <4 x i32>* %1315, align 4, !alias.scope !120, !noalias !117
  %1316 = getelementptr i32, i32* %1309, i64 4
  %1317 = bitcast i32* %1316 to <4 x i32>*
  store <4 x i32> %1314, <4 x i32>* %1317, align 4, !alias.scope !120, !noalias !117
  %1318 = add i64 %1273, 32
  %1319 = add i64 %1274, -4
  %1320 = icmp eq i64 %1319, 0
  br i1 %1320, label %1321, label %1272, !llvm.loop !122

1321:                                             ; preds = %1272, %1260
  %1322 = phi i64 [ 0, %1260 ], [ %1318, %1272 ]
  %1323 = icmp eq i64 %1268, 0
  br i1 %1323, label %1340, label %1324

1324:                                             ; preds = %1321, %1324
  %1325 = phi i64 [ %1337, %1324 ], [ %1322, %1321 ]
  %1326 = phi i64 [ %1338, %1324 ], [ %1268, %1321 ]
  %1327 = getelementptr i32, i32* %1243, i64 %1325
  %1328 = getelementptr i32, i32* %1241, i64 %1325
  %1329 = bitcast i32* %1327 to <4 x i32>*
  %1330 = load <4 x i32>, <4 x i32>* %1329, align 4, !alias.scope !117
  %1331 = getelementptr i32, i32* %1327, i64 4
  %1332 = bitcast i32* %1331 to <4 x i32>*
  %1333 = load <4 x i32>, <4 x i32>* %1332, align 4, !alias.scope !117
  %1334 = bitcast i32* %1328 to <4 x i32>*
  store <4 x i32> %1330, <4 x i32>* %1334, align 4, !alias.scope !120, !noalias !117
  %1335 = getelementptr i32, i32* %1328, i64 4
  %1336 = bitcast i32* %1335 to <4 x i32>*
  store <4 x i32> %1333, <4 x i32>* %1336, align 4, !alias.scope !120, !noalias !117
  %1337 = add i64 %1325, 8
  %1338 = add i64 %1326, -1
  %1339 = icmp eq i64 %1338, 0
  br i1 %1339, label %1340, label %1324, !llvm.loop !123

1340:                                             ; preds = %1324, %1321
  %1341 = icmp eq i64 %1261, %1240
  br i1 %1341, label %1409, label %1342

1342:                                             ; preds = %1340, %1252, %1250
  %1343 = phi i32* [ %1243, %1252 ], [ %1243, %1250 ], [ %1262, %1340 ]
  %1344 = phi i64 [ %1240, %1252 ], [ %1240, %1250 ], [ %1263, %1340 ]
  %1345 = phi i32* [ %1241, %1252 ], [ %1241, %1250 ], [ %1264, %1340 ]
  %1346 = add nsw i64 %1344, -1
  %1347 = and i64 %1344, 7
  %1348 = icmp eq i64 %1347, 0
  br i1 %1348, label %1360, label %1349

1349:                                             ; preds = %1342, %1349
  %1350 = phi i32* [ %1355, %1349 ], [ %1343, %1342 ]
  %1351 = phi i64 [ %1354, %1349 ], [ %1344, %1342 ]
  %1352 = phi i32* [ %1357, %1349 ], [ %1345, %1342 ]
  %1353 = phi i64 [ %1358, %1349 ], [ %1347, %1342 ]
  %1354 = add i64 %1351, -1
  %1355 = getelementptr inbounds i32, i32* %1350, i64 1
  %1356 = load i32, i32* %1350, align 4
  %1357 = getelementptr inbounds i32, i32* %1352, i64 1
  store i32 %1356, i32* %1352, align 4
  %1358 = add i64 %1353, -1
  %1359 = icmp eq i64 %1358, 0
  br i1 %1359, label %1360, label %1349, !llvm.loop !124

1360:                                             ; preds = %1349, %1342
  %1361 = phi i32* [ %1343, %1342 ], [ %1355, %1349 ]
  %1362 = phi i64 [ %1344, %1342 ], [ %1354, %1349 ]
  %1363 = phi i32* [ %1345, %1342 ], [ %1357, %1349 ]
  %1364 = icmp ult i64 %1346, 7
  br i1 %1364, label %1409, label %1365

1365:                                             ; preds = %1360, %1365
  %1366 = phi i32* [ %1391, %1365 ], [ %1361, %1360 ]
  %1367 = phi i64 [ %1390, %1365 ], [ %1362, %1360 ]
  %1368 = phi i32* [ %1393, %1365 ], [ %1363, %1360 ]
  %1369 = getelementptr inbounds i32, i32* %1366, i64 1
  %1370 = load i32, i32* %1366, align 4
  %1371 = getelementptr inbounds i32, i32* %1368, i64 1
  store i32 %1370, i32* %1368, align 4
  %1372 = getelementptr inbounds i32, i32* %1366, i64 2
  %1373 = load i32, i32* %1369, align 4
  %1374 = getelementptr inbounds i32, i32* %1368, i64 2
  store i32 %1373, i32* %1371, align 4
  %1375 = getelementptr inbounds i32, i32* %1366, i64 3
  %1376 = load i32, i32* %1372, align 4
  %1377 = getelementptr inbounds i32, i32* %1368, i64 3
  store i32 %1376, i32* %1374, align 4
  %1378 = getelementptr inbounds i32, i32* %1366, i64 4
  %1379 = load i32, i32* %1375, align 4
  %1380 = getelementptr inbounds i32, i32* %1368, i64 4
  store i32 %1379, i32* %1377, align 4
  %1381 = getelementptr inbounds i32, i32* %1366, i64 5
  %1382 = load i32, i32* %1378, align 4
  %1383 = getelementptr inbounds i32, i32* %1368, i64 5
  store i32 %1382, i32* %1380, align 4
  %1384 = getelementptr inbounds i32, i32* %1366, i64 6
  %1385 = load i32, i32* %1381, align 4
  %1386 = getelementptr inbounds i32, i32* %1368, i64 6
  store i32 %1385, i32* %1383, align 4
  %1387 = getelementptr inbounds i32, i32* %1366, i64 7
  %1388 = load i32, i32* %1384, align 4
  %1389 = getelementptr inbounds i32, i32* %1368, i64 7
  store i32 %1388, i32* %1386, align 4
  %1390 = add i64 %1367, -8
  %1391 = getelementptr inbounds i32, i32* %1366, i64 8
  %1392 = load i32, i32* %1387, align 4
  %1393 = getelementptr inbounds i32, i32* %1368, i64 8
  store i32 %1392, i32* %1389, align 4
  %1394 = icmp eq i64 %1390, 0
  br i1 %1394, label %1409, label %1365, !llvm.loop !125

1395:                                             ; preds = %1248
  %1396 = inttoptr i64 %1237 to i8*
  %1397 = shl nsw i64 %1240, 2
  %1398 = add nsw i64 %1397, -4
  %1399 = lshr exact i64 %1398, 2
  switch i64 %1399, label %1408 [
    i64 3, label %1407
    i64 1, label %1402
    i64 2, label %1406
    i64 0, label %1400
  ]

1400:                                             ; preds = %1395
  %1401 = load i32, i32* %1243, align 1
  store i32 %1401, i32* %1241, align 1
  br label %1409

1402:                                             ; preds = %1395
  %1403 = inttoptr i64 %1237 to i64*
  %1404 = inttoptr i64 %1236 to i64*
  %1405 = load i64, i64* %1403, align 1
  store i64 %1405, i64* %1404, align 1
  br label %1409

1406:                                             ; preds = %1395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1245, i8* align 1 %1396, i64 12, i1 false) #12
  br label %1409

1407:                                             ; preds = %1395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1245, i8* align 1 %1396, i64 16, i1 false) #12
  br label %1409

1408:                                             ; preds = %1395
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1245, i8* align 1 %1396, i64 %1397, i1 false) #12
  br label %1409

1409:                                             ; preds = %1360, %1365, %1340, %1408, %1407, %1406, %1402, %1400, %1233
  %1410 = trunc i64 %1234 to i32
  %1411 = inttoptr i64 %126 to i32*
  %1412 = cmpxchg volatile i32* %1411, i32 %24, i32 %1410 release monotonic
  %1413 = extractvalue { i32, i1 } %1412, 1
  br i1 %1413, label %1414, label %1623

1414:                                             ; preds = %1409
  %1415 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %1416 = load i8, i8* %1415, align 8, !range !2
  %1417 = icmp eq i8 %1416, 0
  br i1 %1417, label %1420, label %1418, !prof !60

1418:                                             ; preds = %1414
  %1419 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %124, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %1419, i64 %1230, i64 %57, i32 %46) #12
  br label %1420

1420:                                             ; preds = %1418, %1414
  %1421 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %1422 = load i8, i8* %1421, align 1, !range !2
  %1423 = icmp eq i8 %1422, 0
  br i1 %1423, label %1551, label %1424

1424:                                             ; preds = %1420
  %1425 = and i64 %1230, -262144
  %1426 = or i64 %1425, 272
  %1427 = sub i64 %1230, %1425
  %1428 = trunc i64 %1427 to i32
  %1429 = lshr i32 %1428, 2
  %1430 = and i32 %1429, 31
  %1431 = shl i32 1, %1430
  %1432 = inttoptr i64 %1426 to i32*
  %1433 = lshr i64 %1427, 7
  %1434 = and i64 %1433, 33554431
  %1435 = getelementptr inbounds i32, i32* %1432, i64 %1434
  %1436 = load atomic i32, i32* %1435 acquire, align 4
  %1437 = and i32 %1436, %1431
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1448, label %1439

1439:                                             ; preds = %1424
  %1440 = shl i32 %1431, 1
  %1441 = icmp eq i32 %1440, 0
  %1442 = getelementptr inbounds i32, i32* %1435, i64 1
  %1443 = select i1 %1441, i32 1, i32 %1440
  %1444 = select i1 %1441, i32* %1442, i32* %1435
  %1445 = load atomic i32, i32* %1444 acquire, align 4
  %1446 = and i32 %1445, %1443
  %1447 = icmp eq i32 %1446, 0
  br i1 %1447, label %1448, label %1551

1448:                                             ; preds = %1439, %1424
  %1449 = or i64 %59, 272
  %1450 = sub i64 %57, %59
  %1451 = trunc i64 %1450 to i32
  %1452 = lshr i32 %1451, 2
  %1453 = and i32 %1452, 31
  %1454 = shl i32 1, %1453
  %1455 = inttoptr i64 %1449 to i32*
  %1456 = lshr i64 %1450, 7
  %1457 = and i64 %1456, 33554431
  %1458 = getelementptr inbounds i32, i32* %1455, i64 %1457
  %1459 = load atomic i32, i32* %1458 acquire, align 4
  %1460 = and i32 %1459, %1454
  %1461 = icmp eq i32 %1460, 0
  br i1 %1461, label %1482, label %1462

1462:                                             ; preds = %1448
  %1463 = shl i32 %1454, 1
  %1464 = icmp eq i32 %1463, 0
  %1465 = getelementptr inbounds i32, i32* %1458, i64 1
  %1466 = select i1 %1464, i32 1, i32 %1463
  %1467 = select i1 %1464, i32* %1465, i32* %1458
  %1468 = load atomic i32, i32* %1467 acquire, align 4
  %1469 = and i32 %1468, %1466
  %1470 = icmp eq i32 %1469, 0
  br i1 %1470, label %1471, label %1482

1471:                                             ; preds = %1462
  %1472 = load atomic i32, i32* %1435 monotonic, align 4
  br label %1473

1473:                                             ; preds = %1477, %1471
  %1474 = phi i32 [ %1472, %1471 ], [ %1480, %1477 ]
  %1475 = and i32 %1474, %1431
  %1476 = icmp eq i32 %1475, %1431
  br i1 %1476, label %1551, label %1477

1477:                                             ; preds = %1473
  %1478 = or i32 %1474, %1431
  %1479 = cmpxchg volatile i32* %1435, i32 %1474, i32 %1478 release monotonic
  %1480 = extractvalue { i32, i1 } %1479, 0
  %1481 = extractvalue { i32, i1 } %1479, 1
  br i1 %1481, label %1551, label %1473

1482:                                             ; preds = %1462, %1448
  %1483 = load atomic i32, i32* %1458 acquire, align 4
  %1484 = and i32 %1483, %1454
  %1485 = icmp eq i32 %1484, 0
  br i1 %1485, label %1551, label %1486

1486:                                             ; preds = %1482
  %1487 = shl i32 %1454, 1
  %1488 = icmp eq i32 %1487, 0
  %1489 = getelementptr inbounds i32, i32* %1458, i64 1
  %1490 = select i1 %1488, i32 1, i32 %1487
  %1491 = select i1 %1488, i32* %1489, i32* %1458
  %1492 = load atomic i32, i32* %1491 acquire, align 4
  %1493 = and i32 %1492, %1490
  %1494 = icmp eq i32 %1493, 0
  br i1 %1494, label %1551, label %1495

1495:                                             ; preds = %1486
  %1496 = load atomic i32, i32* %1435 monotonic, align 4
  br label %1497

1497:                                             ; preds = %1501, %1495
  %1498 = phi i32 [ %1496, %1495 ], [ %1504, %1501 ]
  %1499 = and i32 %1498, %1431
  %1500 = icmp eq i32 %1499, %1431
  br i1 %1500, label %1551, label %1501

1501:                                             ; preds = %1497
  %1502 = or i32 %1498, %1431
  %1503 = cmpxchg volatile i32* %1435, i32 %1498, i32 %1502 release monotonic
  %1504 = extractvalue { i32, i1 } %1503, 0
  %1505 = extractvalue { i32, i1 } %1503, 1
  br i1 %1505, label %1506, label %1497

1506:                                             ; preds = %1501
  %1507 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1507) #12
  %1508 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %1230, i64* %1508, align 8
  %1509 = xor i64 %1425, -1
  %1510 = add i64 %1230, %1509
  %1511 = trunc i64 %1510 to i32
  %1512 = lshr i32 %1511, 2
  %1513 = and i32 %1512, 31
  %1514 = shl i32 1, %1513
  %1515 = lshr i64 %1510, 7
  %1516 = and i64 %1515, 33554431
  %1517 = getelementptr inbounds i32, i32* %1432, i64 %1516
  %1518 = load atomic i32, i32* %1517 acquire, align 4
  %1519 = and i32 %1518, %1514
  %1520 = icmp eq i32 %1519, 0
  br i1 %1520, label %1550, label %1521

1521:                                             ; preds = %1506
  %1522 = shl i32 %1514, 1
  %1523 = icmp eq i32 %1522, 0
  %1524 = getelementptr inbounds i32, i32* %1517, i64 1
  %1525 = select i1 %1523, i32 1, i32 %1522
  %1526 = select i1 %1523, i32* %1524, i32* %1517
  %1527 = load atomic i32, i32* %1526 monotonic, align 4
  br label %1528

1528:                                             ; preds = %1532, %1521
  %1529 = phi i32 [ %1527, %1521 ], [ %1535, %1532 ]
  %1530 = and i32 %1529, %1525
  %1531 = icmp eq i32 %1530, %1525
  br i1 %1531, label %1550, label %1532

1532:                                             ; preds = %1528
  %1533 = or i32 %1529, %1525
  %1534 = cmpxchg volatile i32* %1526, i32 %1529, i32 %1533 release monotonic
  %1535 = extractvalue { i32, i1 } %1534, 0
  %1536 = extractvalue { i32, i1 } %1534, 1
  br i1 %1536, label %1537, label %1528

1537:                                             ; preds = %1532
  %1538 = inttoptr i64 %1425 to %"class.v8::internal::MemoryChunk"*
  %1539 = load i64, i64* %1508, align 8
  %1540 = and i64 %1539, -4294967296
  %1541 = add i64 %1539, -1
  %1542 = inttoptr i64 %1541 to i32*
  %1543 = load atomic i32, i32* %1542 monotonic, align 4
  %1544 = zext i32 %1543 to i64
  %1545 = or i64 %1540, %1544
  %1546 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %4, i64 %1545) #12
  %1547 = sext i32 %1546 to i64
  %1548 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1538, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1549 = atomicrmw add i64* %1548, i64 %1547 seq_cst
  br label %1550

1550:                                             ; preds = %1528, %1537, %1506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1507) #12
  br label %1551

1551:                                             ; preds = %1477, %1473, %1497, %1550, %1486, %1482, %1439, %1420
  %1552 = bitcast %"class.v8::internal::Heap"** %124 to i64*
  %1553 = load i64, i64* %1552, align 8
  %1554 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1555 = icmp eq i8 %1554, 0
  br i1 %1555, label %1658, label %1556

1556:                                             ; preds = %1551
  %1557 = add i64 %26, 7
  %1558 = inttoptr i64 %1557 to i16*
  %1559 = load atomic i16, i16* %1558 monotonic, align 2
  switch i16 %1559, label %1658 [
    i16 1085, label %1560
    i16 1057, label %1560
  ]

1560:                                             ; preds = %1556, %1556
  %1561 = bitcast %"class.v8::internal::HeapObject"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1561) #12
  %1562 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %5, i64 0, i32 0, i32 0, i32 0
  store i64 %57, i64* %1562, align 8
  %1563 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %5, i64 %26) #12
  %1564 = sext i32 %1563 to i64
  %1565 = add i64 %126, %1564
  %1566 = add i64 %1565, 4
  %1567 = and i64 %1566, -262144
  %1568 = inttoptr i64 %1567 to %"class.v8::internal::Page"*
  %1569 = icmp eq %"class.v8::internal::Page"* %128, %1568
  br i1 %1569, label %1570, label %1600

1570:                                             ; preds = %1560
  %1571 = add i64 %57, %1564
  %1572 = add i64 %1553, -41416
  %1573 = inttoptr i64 %1572 to %"class.v8::internal::Isolate"*
  %1574 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1573, i64 0, i32 0, i32 7, i32 0, i64 534
  %1575 = load i64, i64* %1574, align 8
  %1576 = inttoptr i64 %1565 to i32*
  %1577 = load atomic i32, i32* %1576 monotonic, align 4
  %1578 = trunc i64 %1575 to i32
  %1579 = icmp eq i32 %1577, %1578
  br i1 %1579, label %1580, label %1600

1580:                                             ; preds = %1570
  %1581 = load i64, i64* %133, align 8
  %1582 = and i64 %1581, 524288
  %1583 = icmp eq i64 %1582, 0
  br i1 %1583, label %1601, label %1584

1584:                                             ; preds = %1580
  %1585 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 8, i32 0
  %1586 = bitcast %"struct.std::__1::__atomic_base.69"* %1585 to i64*
  %1587 = load atomic i64, i64* %1586 seq_cst, align 64
  %1588 = inttoptr i64 %1587 to %"class.v8::internal::SemiSpace"*
  %1589 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1588, i64 0, i32 5
  %1590 = load i64, i64* %1589, align 8
  %1591 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 3
  %1592 = load i64, i64* %1591, align 8
  %1593 = icmp ugt i64 %1592, %1590
  br i1 %1593, label %1600, label %1594

1594:                                             ; preds = %1584
  %1595 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %128, i64 0, i32 0, i32 0, i32 4
  %1596 = load i64, i64* %1595, align 32
  %1597 = icmp ule i64 %1596, %1590
  %1598 = icmp ult i64 %126, %1590
  %1599 = or i1 %1598, %1597
  br i1 %1599, label %1600, label %1601

1600:                                             ; preds = %1594, %1584, %1570, %1560
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1561) #12
  br label %1658

1601:                                             ; preds = %1594, %1580
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1561) #12
  %1602 = trunc i64 %1571 to i32
  %1603 = icmp eq i32 %1602, 0
  br i1 %1603, label %1658, label %1604

1604:                                             ; preds = %1601
  %1605 = and i64 %1571, -4294967296
  %1606 = add i64 %1571, 3
  %1607 = inttoptr i64 %1606 to i32*
  %1608 = load i32, i32* %1607, align 4
  %1609 = zext i32 %1608 to i64
  %1610 = or i64 %1605, %1609
  %1611 = bitcast %"class.v8::internal::AllocationSite"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1611) #12
  %1612 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1610, i64* %1612, align 8
  %1613 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1614 = bitcast %"class.std::__1::tuple"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1614) #12
  %1615 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %8, %"class.v8::internal::AllocationSite"** %1615, align 8
  %1616 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1616) #12
  %1617 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1613, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %8, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %6, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %7) #12
  %1618 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1617, 0
  %1619 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1618, i64 3
  %1620 = bitcast %"struct.std::__1::__hash_node_base.518"* %1619 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1616) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1614) #12
  %1621 = load i64, i64* %1620, align 8
  %1622 = add i64 %1621, 1
  store i64 %1622, i64* %1620, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1611) #12
  br label %1658

1623:                                             ; preds = %1409
  %1624 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %1625 = load i64, i64* %1624, align 8
  %1626 = icmp ne i64 %1625, 0
  %1627 = sub i64 %1625, %682
  %1628 = icmp eq i64 %1627, %1234
  %1629 = and i1 %1626, %1628
  br i1 %1629, label %1630, label %1631

1630:                                             ; preds = %1623
  store i64 %1234, i64* %1624, align 8
  br label %1635

1631:                                             ; preds = %1623
  %1632 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1201, i64 0, i32 0
  %1633 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1632, align 8
  %1634 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1633, i64 %1234, i32 %46, i32 1) #12
  br label %1635

1635:                                             ; preds = %1631, %1630
  %1636 = load atomic i32, i32* %1411 acquire, align 4
  %1637 = add i32 %1636, 1
  %1638 = inttoptr i64 %1 to i32*
  %1639 = load i32, i32* %1638, align 4
  %1640 = and i32 %1639, 2
  %1641 = or i32 %1640, %1637
  store i32 %1641, i32* %1638, align 4
  %1642 = zext i32 %1641 to i64
  %1643 = and i64 %1642, 1
  %1644 = icmp ne i64 %1643, 0
  %1645 = icmp ne i32 %1641, 3
  %1646 = and i1 %1645, %1644
  br i1 %1646, label %1647, label %1730

1647:                                             ; preds = %1635
  %1648 = and i64 %1, -4294967296
  %1649 = and i64 %1642, 4294705152
  %1650 = or i64 %1649, %1648
  %1651 = inttoptr i64 %1650 to %"class.v8::internal::BasicMemoryChunk"*
  %1652 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1651, i64 0, i32 1
  %1653 = load i64, i64* %1652, align 8
  %1654 = lshr i64 %1653, 4
  %1655 = trunc i64 %1654 to i32
  %1656 = and i32 %1655, 1
  %1657 = xor i32 %1656, 1
  br label %1730

1658:                                             ; preds = %1604, %1601, %1600, %1556, %1551
  %1659 = inttoptr i64 %1 to i32*
  %1660 = load i32, i32* %1659, align 4
  %1661 = and i32 %1660, 2
  %1662 = trunc i64 %1230 to i32
  %1663 = or i32 %1661, %1662
  store i32 %1663, i32* %1659, align 4
  br i1 %58, label %1664, label %1724

1664:                                             ; preds = %1658
  %1665 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %1666 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %1665, align 8
  %1667 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %1668 = load i32, i32* %1667, align 8
  %1669 = sext i32 %1668 to i64
  %1670 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1666, i64 0, i32 0, i64 %1669, i32 0
  %1671 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1670, align 8
  %1672 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1671, i64 0, i32 1
  %1673 = load i64, i64* %1672, align 8
  %1674 = icmp eq i64 %1673, 256
  br i1 %1674, label %1679, label %1675

1675:                                             ; preds = %1664
  %1676 = add i64 %1673, 1
  store i64 %1676, i64* %1672, align 8
  %1677 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1671, i64 0, i32 2, i64 %1673, i32 0, i32 0, i32 0, i32 0
  store i64 %1230, i64* %1677, align 8
  %1678 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1671, i64 0, i32 2, i64 %1673, i32 1
  store i32 %46, i32* %1678, align 8
  br label %1724

1679:                                             ; preds = %1664
  %1680 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1666, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1680) #12
  %1681 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1666, i64 0, i32 1, i32 1
  %1682 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1681 to i64*
  %1683 = load i64, i64* %1682, align 8
  %1684 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1671 to i64*
  store i64 %1683, i64* %1684, align 8
  %1685 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1671 to i64
  store atomic volatile i64 %1685, i64* %1682 monotonic, align 8
  %1686 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1666, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1687 = atomicrmw add i64* %1686, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1680) #12
  %1688 = call i8* @_Znwm(i64 4112) #17
  %1689 = getelementptr inbounds i8, i8* %1688, i64 8
  %1690 = bitcast i8* %1689 to i64*
  store i64 0, i64* %1690, align 8
  %1691 = getelementptr inbounds i8, i8* %1688, i64 16
  %1692 = bitcast i8* %1691 to %"struct.std::__1::pair.1282"*
  %1693 = getelementptr inbounds i8, i8* %1688, i64 4112
  %1694 = bitcast i8* %1693 to %"struct.std::__1::pair.1282"*
  br label %1695

1695:                                             ; preds = %1695, %1679
  %1696 = phi %"struct.std::__1::pair.1282"* [ %1692, %1679 ], [ %1713, %1695 ]
  %1697 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1697, align 8
  %1698 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 0, i32 1
  store i32 0, i32* %1698, align 8
  %1699 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1699, align 8
  %1700 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 1, i32 1
  store i32 0, i32* %1700, align 8
  %1701 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1701, align 8
  %1702 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 2, i32 1
  store i32 0, i32* %1702, align 8
  %1703 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1703, align 8
  %1704 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 3, i32 1
  store i32 0, i32* %1704, align 8
  %1705 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1705, align 8
  %1706 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 4, i32 1
  store i32 0, i32* %1706, align 8
  %1707 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1707, align 8
  %1708 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 5, i32 1
  store i32 0, i32* %1708, align 8
  %1709 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1709, align 8
  %1710 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 6, i32 1
  store i32 0, i32* %1710, align 8
  %1711 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1711, align 8
  %1712 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 7, i32 1
  store i32 0, i32* %1712, align 8
  %1713 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1696, i64 8
  %1714 = icmp eq %"struct.std::__1::pair.1282"* %1713, %1694
  br i1 %1714, label %1715, label %1695

1715:                                             ; preds = %1695
  %1716 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1670 to i8**
  store i8* %1688, i8** %1716, align 8
  %1717 = bitcast i8* %1688 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1718 = load i64, i64* %1690, align 8
  %1719 = icmp eq i64 %1718, 256
  br i1 %1719, label %1724, label %1720

1720:                                             ; preds = %1715
  %1721 = add i64 %1718, 1
  store i64 %1721, i64* %1690, align 8
  %1722 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1717, i64 0, i32 2, i64 %1718, i32 0, i32 0, i32 0, i32 0
  store i64 %1230, i64* %1722, align 8
  %1723 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1717, i64 0, i32 2, i64 %1718, i32 1
  store i32 %46, i32* %1723, align 8
  br label %1724

1724:                                             ; preds = %1720, %1715, %1675, %1658
  %1725 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %1726 = load i64, i64* %1725, align 8
  %1727 = add i64 %1726, %682
  store i64 %1727, i64* %1725, align 8
  br label %1730

1728:                                             ; preds = %1229
  %1729 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %124, align 8
  call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %1729, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

1730:                                             ; preds = %50, %53, %68, %74, %96, %101, %584, %596, %673, %1107, %1119, %1196, %1635, %1647, %1724
  %1731 = phi i32 [ %55, %53 ], [ %52, %50 ], [ 0, %74 ], [ 0, %68 ], [ 0, %96 ], [ 0, %101 ], [ 1, %584 ], [ %606, %596 ], [ 0, %673 ], [ 1, %1107 ], [ %1129, %1119 ], [ 1, %1196 ], [ 1, %1635 ], [ %1657, %1647 ], [ 0, %1724 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44)
  br label %1732

1732:                                             ; preds = %1730, %29
  %1733 = phi i32 [ %42, %29 ], [ %1731, %1730 ]
  ret i32 %1733
}

declare i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal9Scavenger18EvacuateThinStringINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ThinStringEi(%"class.v8::internal::Scavenger"*, i64, i64, i64, i32) local_unnamed_addr #7 comdat align 2 {
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = alloca %"class.v8::internal::HeapObject", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.1327", align 1
  %10 = alloca %"class.v8::internal::AllocationSite", align 8
  %11 = alloca %"class.v8::internal::HeapObject", align 8
  %12 = alloca %"class.v8::internal::HeapObject", align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.1327", align 1
  %15 = alloca %"class.v8::internal::AllocationSite", align 8
  %16 = alloca %"class.v8::internal::HeapObject", align 8
  %17 = alloca %"class.v8::internal::HeapObject", align 8
  %18 = alloca %"class.std::__1::tuple", align 8
  %19 = alloca %"class.std::__1::tuple.1327", align 1
  %20 = alloca %"class.v8::internal::AllocationSite", align 8
  %21 = alloca %"struct.std::__1::pair.1246", align 8
  %22 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %33

25:                                               ; preds = %5
  %26 = add i64 %3, 11
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = inttoptr i64 %2 to i32*
  %30 = load i32, i32* %29, align 4
  %31 = and i32 %30, 2
  %32 = or i32 %31, %28
  store i32 %32, i32* %29, align 4
  br label %1708

33:                                               ; preds = %5
  %34 = and i64 %3, -262144
  %35 = inttoptr i64 %34 to %"class.v8::internal::BasicMemoryChunk"*
  %36 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %35, i64 0, i32 1
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %37, 24
  %39 = icmp ne i64 %38, 0
  %40 = and i64 %37, 32
  %41 = icmp ne i64 %40, 0
  %42 = and i1 %41, %39
  br i1 %42, label %43, label %98, !prof !29

43:                                               ; preds = %33
  %44 = add i64 %3, -1
  %45 = trunc i64 %1 to i32
  %46 = trunc i64 %44 to i32
  %47 = inttoptr i64 %44 to i32*
  %48 = cmpxchg volatile i32* %47, i32 %45, i32 %46 release monotonic
  %49 = extractvalue { i32, i1 } %48, 1
  br i1 %49, label %50, label %1708

50:                                               ; preds = %43
  %51 = bitcast %"struct.std::__1::pair.1246"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %51) #12
  %52 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %52, align 8
  %53 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %53, align 8
  %54 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %55 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0
  %56 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %54, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %55, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %51) #12
  %57 = sext i32 %4 to i64
  %58 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %59 = load i64, i64* %58, align 8
  %60 = add i64 %59, %57
  store i64 %60, i64* %58, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %62 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %61, align 8
  %63 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %64 = load i32, i32* %63, align 8
  %65 = sext i32 %64 to i64
  %66 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %62, i64 0, i32 1, i32 0, i64 %65, i32 0
  %67 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %66, align 8
  %68 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %67, i64 0, i32 1
  %69 = load i64, i64* %68, align 8
  %70 = icmp eq i64 %69, 4
  br i1 %70, label %76, label %71

71:                                               ; preds = %50
  %72 = add i64 %69, 1
  store i64 %72, i64* %68, align 8
  %73 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %67, i64 0, i32 2, i64 %69, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %73, align 8
  %74 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %67, i64 0, i32 2, i64 %69, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %74, align 8
  %75 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %67, i64 0, i32 2, i64 %69, i32 2
  store i32 %4, i32* %75, align 8
  br label %1708

76:                                               ; preds = %50
  %77 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %62, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %77) #12
  %78 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %62, i64 0, i32 1, i32 1, i32 1
  %79 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %78 to i64*
  %80 = load i64, i64* %79, align 8
  %81 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %67 to i64*
  store i64 %80, i64* %81, align 8
  %82 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %67 to i64
  store atomic volatile i64 %82, i64* %79 monotonic, align 8
  %83 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %62, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = atomicrmw add i64* %83, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %77) #12
  %85 = call i8* @_Znwm(i64 112) #17
  %86 = getelementptr inbounds i8, i8* %85, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %86, i8 0, i64 16, i1 false) #12
  %87 = getelementptr inbounds i8, i8* %85, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %87, i8 0, i64 16, i1 false) #12
  %88 = getelementptr inbounds i8, i8* %85, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %88, i8 0, i64 16, i1 false) #12
  %89 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %66 to i8**
  store i8* %85, i8** %89, align 8
  %90 = getelementptr inbounds i8, i8* %85, i64 8
  %91 = bitcast i8* %90 to i64*
  store i64 1, i64* %91, align 8
  %92 = getelementptr inbounds i8, i8* %85, i64 16
  %93 = bitcast i8* %92 to i64*
  store i64 %3, i64* %93, align 8
  %94 = getelementptr inbounds i8, i8* %85, i64 24
  %95 = bitcast i8* %94 to i64*
  store i64 %1, i64* %95, align 8
  %96 = getelementptr inbounds i8, i8* %85, i64 32
  %97 = bitcast i8* %96 to i32*
  store i32 %4, i32* %97, align 8
  br label %1708

98:                                               ; preds = %33
  %99 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %100 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %99, align 8
  %101 = add i64 %3, -1
  %102 = and i64 %101, -262144
  %103 = inttoptr i64 %102 to %"class.v8::internal::Page"*
  %104 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %100, i64 0, i32 24
  %105 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %104, align 8
  %106 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %105, i64 0, i32 5, i32 5
  %107 = load i64, i64* %106, align 8
  %108 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 1
  %109 = load i64, i64* %108, align 8
  %110 = and i64 %109, 524288
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %122, label %112

112:                                              ; preds = %98
  %113 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 3
  %114 = load i64, i64* %113, align 8
  %115 = icmp ugt i64 %114, %107
  br i1 %115, label %654, label %116

116:                                              ; preds = %112
  %117 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 4
  %118 = load i64, i64* %117, align 32
  %119 = icmp ult i64 %118, %107
  %120 = icmp ugt i64 %107, %101
  %121 = or i1 %120, %119
  br i1 %121, label %654, label %122

122:                                              ; preds = %116, %98
  %123 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %124 = icmp sgt i32 %4, 8192
  br i1 %124, label %125, label %150

125:                                              ; preds = %122
  %126 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %127 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %126, align 8
  %128 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %127, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %128) #12
  %129 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %127, i64 0, i32 0
  %130 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %127, i64 0, i32 0, i32 1, i32 1
  %131 = load i64, i64* %130, align 8
  %132 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %127, i64 0, i32 0, i32 1, i32 2
  %133 = load i64, i64* %132, align 8
  %134 = sext i32 %4 to i64
  %135 = add i64 %131, %134
  %136 = icmp ult i64 %133, %135
  br i1 %136, label %146, label %137

137:                                              ; preds = %125
  %138 = add i64 %131, 1
  store i64 %135, i64* %130, align 8
  %139 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %140 = icmp eq i8 %139, 0
  br i1 %140, label %142, label %141

141:                                              ; preds = %137
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %129, i32 2) #12
  br label %142

142:                                              ; preds = %141, %137
  %143 = and i64 %138, 1
  %144 = icmp eq i64 %143, 0
  br i1 %144, label %145, label %148, !prof !29

145:                                              ; preds = %142
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

146:                                              ; preds = %125
  %147 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %127, i32 %4, i32 0, i32 2) #12
  br label %148

148:                                              ; preds = %146, %142
  %149 = phi i64 [ %147, %146 ], [ %138, %142 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %128) #12
  br label %152

150:                                              ; preds = %122
  %151 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %123, i32 %4, i32 0) #12
  br label %152

152:                                              ; preds = %150, %148
  %153 = phi i64 [ %149, %148 ], [ %151, %150 ]
  %154 = and i64 %153, 1
  %155 = icmp eq i64 %154, 0
  br i1 %155, label %654, label %156

156:                                              ; preds = %152
  %157 = add i64 %153, -1
  %158 = inttoptr i64 %157 to i32*
  %159 = trunc i64 %1 to i32
  store atomic volatile i32 %159, i32* %158 monotonic, align 4
  %160 = add i64 %153, 3
  %161 = add i64 %3, 3
  %162 = add nsw i32 %4, -4
  %163 = sdiv i32 %162, 4
  %164 = sext i32 %163 to i64
  %165 = inttoptr i64 %160 to i32*
  %166 = inttoptr i64 %160 to i8*
  %167 = inttoptr i64 %161 to i32*
  %168 = inttoptr i64 %161 to i8*
  %169 = inttoptr i64 %160 to i8*
  %170 = add i32 %4, -1
  %171 = icmp ult i32 %170, 7
  br i1 %171, label %333, label %172

172:                                              ; preds = %156
  %173 = icmp ult i32 %163, 16
  br i1 %173, label %174, label %319

174:                                              ; preds = %172
  %175 = icmp ult i32 %163, 8
  br i1 %175, label %266, label %176

176:                                              ; preds = %174
  %177 = getelementptr i32, i32* %165, i64 %164
  %178 = bitcast i32* %177 to i8*
  %179 = getelementptr i32, i32* %167, i64 %164
  %180 = bitcast i32* %179 to i8*
  %181 = icmp ult i8* %166, %180
  %182 = icmp ult i8* %168, %178
  %183 = and i1 %181, %182
  br i1 %183, label %266, label %184

184:                                              ; preds = %176
  %185 = and i64 %164, -8
  %186 = getelementptr i32, i32* %167, i64 %185
  %187 = sub nsw i64 %164, %185
  %188 = getelementptr i32, i32* %165, i64 %185
  %189 = add nsw i64 %185, -8
  %190 = lshr exact i64 %189, 3
  %191 = add nuw nsw i64 %190, 1
  %192 = and i64 %191, 3
  %193 = icmp ult i64 %189, 24
  br i1 %193, label %245, label %194

194:                                              ; preds = %184
  %195 = sub nsw i64 %191, %192
  br label %196

196:                                              ; preds = %196, %194
  %197 = phi i64 [ 0, %194 ], [ %242, %196 ]
  %198 = phi i64 [ %195, %194 ], [ %243, %196 ]
  %199 = getelementptr i32, i32* %167, i64 %197
  %200 = getelementptr i32, i32* %165, i64 %197
  %201 = bitcast i32* %199 to <4 x i32>*
  %202 = load <4 x i32>, <4 x i32>* %201, align 4, !alias.scope !126
  %203 = getelementptr i32, i32* %199, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4, !alias.scope !126
  %206 = bitcast i32* %200 to <4 x i32>*
  store <4 x i32> %202, <4 x i32>* %206, align 4, !alias.scope !129, !noalias !126
  %207 = getelementptr i32, i32* %200, i64 4
  %208 = bitcast i32* %207 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %208, align 4, !alias.scope !129, !noalias !126
  %209 = or i64 %197, 8
  %210 = getelementptr i32, i32* %167, i64 %209
  %211 = getelementptr i32, i32* %165, i64 %209
  %212 = bitcast i32* %210 to <4 x i32>*
  %213 = load <4 x i32>, <4 x i32>* %212, align 4, !alias.scope !126
  %214 = getelementptr i32, i32* %210, i64 4
  %215 = bitcast i32* %214 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 4, !alias.scope !126
  %217 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> %213, <4 x i32>* %217, align 4, !alias.scope !129, !noalias !126
  %218 = getelementptr i32, i32* %211, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %219, align 4, !alias.scope !129, !noalias !126
  %220 = or i64 %197, 16
  %221 = getelementptr i32, i32* %167, i64 %220
  %222 = getelementptr i32, i32* %165, i64 %220
  %223 = bitcast i32* %221 to <4 x i32>*
  %224 = load <4 x i32>, <4 x i32>* %223, align 4, !alias.scope !126
  %225 = getelementptr i32, i32* %221, i64 4
  %226 = bitcast i32* %225 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !126
  %228 = bitcast i32* %222 to <4 x i32>*
  store <4 x i32> %224, <4 x i32>* %228, align 4, !alias.scope !129, !noalias !126
  %229 = getelementptr i32, i32* %222, i64 4
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %230, align 4, !alias.scope !129, !noalias !126
  %231 = or i64 %197, 24
  %232 = getelementptr i32, i32* %167, i64 %231
  %233 = getelementptr i32, i32* %165, i64 %231
  %234 = bitcast i32* %232 to <4 x i32>*
  %235 = load <4 x i32>, <4 x i32>* %234, align 4, !alias.scope !126
  %236 = getelementptr i32, i32* %232, i64 4
  %237 = bitcast i32* %236 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !126
  %239 = bitcast i32* %233 to <4 x i32>*
  store <4 x i32> %235, <4 x i32>* %239, align 4, !alias.scope !129, !noalias !126
  %240 = getelementptr i32, i32* %233, i64 4
  %241 = bitcast i32* %240 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %241, align 4, !alias.scope !129, !noalias !126
  %242 = add i64 %197, 32
  %243 = add i64 %198, -4
  %244 = icmp eq i64 %243, 0
  br i1 %244, label %245, label %196, !llvm.loop !131

245:                                              ; preds = %196, %184
  %246 = phi i64 [ 0, %184 ], [ %242, %196 ]
  %247 = icmp eq i64 %192, 0
  br i1 %247, label %264, label %248

248:                                              ; preds = %245, %248
  %249 = phi i64 [ %261, %248 ], [ %246, %245 ]
  %250 = phi i64 [ %262, %248 ], [ %192, %245 ]
  %251 = getelementptr i32, i32* %167, i64 %249
  %252 = getelementptr i32, i32* %165, i64 %249
  %253 = bitcast i32* %251 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4, !alias.scope !126
  %255 = getelementptr i32, i32* %251, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !126
  %258 = bitcast i32* %252 to <4 x i32>*
  store <4 x i32> %254, <4 x i32>* %258, align 4, !alias.scope !129, !noalias !126
  %259 = getelementptr i32, i32* %252, i64 4
  %260 = bitcast i32* %259 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %260, align 4, !alias.scope !129, !noalias !126
  %261 = add i64 %249, 8
  %262 = add i64 %250, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %248, !llvm.loop !132

264:                                              ; preds = %248, %245
  %265 = icmp eq i64 %185, %164
  br i1 %265, label %333, label %266

266:                                              ; preds = %264, %176, %174
  %267 = phi i32* [ %167, %176 ], [ %167, %174 ], [ %186, %264 ]
  %268 = phi i64 [ %164, %176 ], [ %164, %174 ], [ %187, %264 ]
  %269 = phi i32* [ %165, %176 ], [ %165, %174 ], [ %188, %264 ]
  %270 = add nsw i64 %268, -1
  %271 = and i64 %268, 7
  %272 = icmp eq i64 %271, 0
  br i1 %272, label %284, label %273

273:                                              ; preds = %266, %273
  %274 = phi i32* [ %279, %273 ], [ %267, %266 ]
  %275 = phi i64 [ %278, %273 ], [ %268, %266 ]
  %276 = phi i32* [ %281, %273 ], [ %269, %266 ]
  %277 = phi i64 [ %282, %273 ], [ %271, %266 ]
  %278 = add i64 %275, -1
  %279 = getelementptr inbounds i32, i32* %274, i64 1
  %280 = load i32, i32* %274, align 4
  %281 = getelementptr inbounds i32, i32* %276, i64 1
  store i32 %280, i32* %276, align 4
  %282 = add i64 %277, -1
  %283 = icmp eq i64 %282, 0
  br i1 %283, label %284, label %273, !llvm.loop !133

284:                                              ; preds = %273, %266
  %285 = phi i32* [ %267, %266 ], [ %279, %273 ]
  %286 = phi i64 [ %268, %266 ], [ %278, %273 ]
  %287 = phi i32* [ %269, %266 ], [ %281, %273 ]
  %288 = icmp ult i64 %270, 7
  br i1 %288, label %333, label %289

289:                                              ; preds = %284, %289
  %290 = phi i32* [ %315, %289 ], [ %285, %284 ]
  %291 = phi i64 [ %314, %289 ], [ %286, %284 ]
  %292 = phi i32* [ %317, %289 ], [ %287, %284 ]
  %293 = getelementptr inbounds i32, i32* %290, i64 1
  %294 = load i32, i32* %290, align 4
  %295 = getelementptr inbounds i32, i32* %292, i64 1
  store i32 %294, i32* %292, align 4
  %296 = getelementptr inbounds i32, i32* %290, i64 2
  %297 = load i32, i32* %293, align 4
  %298 = getelementptr inbounds i32, i32* %292, i64 2
  store i32 %297, i32* %295, align 4
  %299 = getelementptr inbounds i32, i32* %290, i64 3
  %300 = load i32, i32* %296, align 4
  %301 = getelementptr inbounds i32, i32* %292, i64 3
  store i32 %300, i32* %298, align 4
  %302 = getelementptr inbounds i32, i32* %290, i64 4
  %303 = load i32, i32* %299, align 4
  %304 = getelementptr inbounds i32, i32* %292, i64 4
  store i32 %303, i32* %301, align 4
  %305 = getelementptr inbounds i32, i32* %290, i64 5
  %306 = load i32, i32* %302, align 4
  %307 = getelementptr inbounds i32, i32* %292, i64 5
  store i32 %306, i32* %304, align 4
  %308 = getelementptr inbounds i32, i32* %290, i64 6
  %309 = load i32, i32* %305, align 4
  %310 = getelementptr inbounds i32, i32* %292, i64 6
  store i32 %309, i32* %307, align 4
  %311 = getelementptr inbounds i32, i32* %290, i64 7
  %312 = load i32, i32* %308, align 4
  %313 = getelementptr inbounds i32, i32* %292, i64 7
  store i32 %312, i32* %310, align 4
  %314 = add i64 %291, -8
  %315 = getelementptr inbounds i32, i32* %290, i64 8
  %316 = load i32, i32* %311, align 4
  %317 = getelementptr inbounds i32, i32* %292, i64 8
  store i32 %316, i32* %313, align 4
  %318 = icmp eq i64 %314, 0
  br i1 %318, label %333, label %289, !llvm.loop !134

319:                                              ; preds = %172
  %320 = inttoptr i64 %161 to i8*
  %321 = shl nsw i64 %164, 2
  %322 = add nsw i64 %321, -4
  %323 = lshr exact i64 %322, 2
  switch i64 %323, label %332 [
    i64 3, label %331
    i64 1, label %326
    i64 2, label %330
    i64 0, label %324
  ]

324:                                              ; preds = %319
  %325 = load i32, i32* %167, align 1
  store i32 %325, i32* %165, align 1
  br label %333

326:                                              ; preds = %319
  %327 = inttoptr i64 %161 to i64*
  %328 = inttoptr i64 %160 to i64*
  %329 = load i64, i64* %327, align 1
  store i64 %329, i64* %328, align 1
  br label %333

330:                                              ; preds = %319
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %320, i64 12, i1 false) #12
  br label %333

331:                                              ; preds = %319
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %320, i64 16, i1 false) #12
  br label %333

332:                                              ; preds = %319
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %169, i8* align 1 %320, i64 %321, i1 false) #12
  br label %333

333:                                              ; preds = %284, %289, %264, %332, %331, %330, %326, %324, %156
  %334 = trunc i64 %157 to i32
  %335 = inttoptr i64 %101 to i32*
  %336 = cmpxchg volatile i32* %335, i32 %159, i32 %334 release monotonic
  %337 = extractvalue { i32, i1 } %336, 1
  br i1 %337, label %338, label %546

338:                                              ; preds = %333
  %339 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %340 = load i8, i8* %339, align 8, !range !2
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %344, label %342, !prof !60

342:                                              ; preds = %338
  %343 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %99, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %343, i64 %153, i64 %3, i32 %4) #12
  br label %344

344:                                              ; preds = %342, %338
  %345 = load i8, i8* %22, align 1, !range !2
  %346 = icmp eq i8 %345, 0
  br i1 %346, label %474, label %347

347:                                              ; preds = %344
  %348 = and i64 %153, -262144
  %349 = or i64 %348, 272
  %350 = sub i64 %153, %348
  %351 = trunc i64 %350 to i32
  %352 = lshr i32 %351, 2
  %353 = and i32 %352, 31
  %354 = shl i32 1, %353
  %355 = inttoptr i64 %349 to i32*
  %356 = lshr i64 %350, 7
  %357 = and i64 %356, 33554431
  %358 = getelementptr inbounds i32, i32* %355, i64 %357
  %359 = load atomic i32, i32* %358 acquire, align 4
  %360 = and i32 %359, %354
  %361 = icmp eq i32 %360, 0
  br i1 %361, label %371, label %362

362:                                              ; preds = %347
  %363 = shl i32 %354, 1
  %364 = icmp eq i32 %363, 0
  %365 = getelementptr inbounds i32, i32* %358, i64 1
  %366 = select i1 %364, i32 1, i32 %363
  %367 = select i1 %364, i32* %365, i32* %358
  %368 = load atomic i32, i32* %367 acquire, align 4
  %369 = and i32 %368, %366
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %474

371:                                              ; preds = %362, %347
  %372 = or i64 %34, 272
  %373 = sub i64 %3, %34
  %374 = trunc i64 %373 to i32
  %375 = lshr i32 %374, 2
  %376 = and i32 %375, 31
  %377 = shl i32 1, %376
  %378 = inttoptr i64 %372 to i32*
  %379 = lshr i64 %373, 7
  %380 = and i64 %379, 33554431
  %381 = getelementptr inbounds i32, i32* %378, i64 %380
  %382 = load atomic i32, i32* %381 acquire, align 4
  %383 = and i32 %382, %377
  %384 = icmp eq i32 %383, 0
  br i1 %384, label %405, label %385

385:                                              ; preds = %371
  %386 = shl i32 %377, 1
  %387 = icmp eq i32 %386, 0
  %388 = getelementptr inbounds i32, i32* %381, i64 1
  %389 = select i1 %387, i32 1, i32 %386
  %390 = select i1 %387, i32* %388, i32* %381
  %391 = load atomic i32, i32* %390 acquire, align 4
  %392 = and i32 %391, %389
  %393 = icmp eq i32 %392, 0
  br i1 %393, label %394, label %405

394:                                              ; preds = %385
  %395 = load atomic i32, i32* %358 monotonic, align 4
  br label %396

396:                                              ; preds = %400, %394
  %397 = phi i32 [ %395, %394 ], [ %403, %400 ]
  %398 = and i32 %397, %354
  %399 = icmp eq i32 %398, %354
  br i1 %399, label %474, label %400

400:                                              ; preds = %396
  %401 = or i32 %397, %354
  %402 = cmpxchg volatile i32* %358, i32 %397, i32 %401 release monotonic
  %403 = extractvalue { i32, i1 } %402, 0
  %404 = extractvalue { i32, i1 } %402, 1
  br i1 %404, label %474, label %396

405:                                              ; preds = %385, %371
  %406 = load atomic i32, i32* %381 acquire, align 4
  %407 = and i32 %406, %377
  %408 = icmp eq i32 %407, 0
  br i1 %408, label %474, label %409

409:                                              ; preds = %405
  %410 = shl i32 %377, 1
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds i32, i32* %381, i64 1
  %413 = select i1 %411, i32 1, i32 %410
  %414 = select i1 %411, i32* %412, i32* %381
  %415 = load atomic i32, i32* %414 acquire, align 4
  %416 = and i32 %415, %413
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %474, label %418

418:                                              ; preds = %409
  %419 = load atomic i32, i32* %358 monotonic, align 4
  br label %420

420:                                              ; preds = %424, %418
  %421 = phi i32 [ %419, %418 ], [ %427, %424 ]
  %422 = and i32 %421, %354
  %423 = icmp eq i32 %422, %354
  br i1 %423, label %474, label %424

424:                                              ; preds = %420
  %425 = or i32 %421, %354
  %426 = cmpxchg volatile i32* %358, i32 %421, i32 %425 release monotonic
  %427 = extractvalue { i32, i1 } %426, 0
  %428 = extractvalue { i32, i1 } %426, 1
  br i1 %428, label %429, label %420

429:                                              ; preds = %424
  %430 = bitcast %"class.v8::internal::HeapObject"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %430) #12
  %431 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %16, i64 0, i32 0, i32 0, i32 0
  store i64 %153, i64* %431, align 8
  %432 = xor i64 %348, -1
  %433 = add i64 %153, %432
  %434 = trunc i64 %433 to i32
  %435 = lshr i32 %434, 2
  %436 = and i32 %435, 31
  %437 = shl i32 1, %436
  %438 = lshr i64 %433, 7
  %439 = and i64 %438, 33554431
  %440 = getelementptr inbounds i32, i32* %355, i64 %439
  %441 = load atomic i32, i32* %440 acquire, align 4
  %442 = and i32 %441, %437
  %443 = icmp eq i32 %442, 0
  br i1 %443, label %473, label %444

444:                                              ; preds = %429
  %445 = shl i32 %437, 1
  %446 = icmp eq i32 %445, 0
  %447 = getelementptr inbounds i32, i32* %440, i64 1
  %448 = select i1 %446, i32 1, i32 %445
  %449 = select i1 %446, i32* %447, i32* %440
  %450 = load atomic i32, i32* %449 monotonic, align 4
  br label %451

451:                                              ; preds = %455, %444
  %452 = phi i32 [ %450, %444 ], [ %458, %455 ]
  %453 = and i32 %452, %448
  %454 = icmp eq i32 %453, %448
  br i1 %454, label %473, label %455

455:                                              ; preds = %451
  %456 = or i32 %452, %448
  %457 = cmpxchg volatile i32* %449, i32 %452, i32 %456 release monotonic
  %458 = extractvalue { i32, i1 } %457, 0
  %459 = extractvalue { i32, i1 } %457, 1
  br i1 %459, label %460, label %451

460:                                              ; preds = %455
  %461 = inttoptr i64 %348 to %"class.v8::internal::MemoryChunk"*
  %462 = load i64, i64* %431, align 8
  %463 = and i64 %462, -4294967296
  %464 = add i64 %462, -1
  %465 = inttoptr i64 %464 to i32*
  %466 = load atomic i32, i32* %465 monotonic, align 4
  %467 = zext i32 %466 to i64
  %468 = or i64 %463, %467
  %469 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %16, i64 %468) #12
  %470 = sext i32 %469 to i64
  %471 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %461, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %472 = atomicrmw add i64* %471, i64 %470 seq_cst
  br label %473

473:                                              ; preds = %451, %460, %429
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %430) #12
  br label %474

474:                                              ; preds = %400, %396, %420, %473, %409, %405, %362, %344
  %475 = bitcast %"class.v8::internal::Heap"** %99 to i64*
  %476 = load i64, i64* %475, align 8
  %477 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %478 = icmp eq i8 %477, 0
  br i1 %478, label %582, label %479

479:                                              ; preds = %474
  %480 = add i64 %1, 7
  %481 = inttoptr i64 %480 to i16*
  %482 = load atomic i16, i16* %481 monotonic, align 2
  switch i16 %482, label %582 [
    i16 1085, label %483
    i16 1057, label %483
  ]

483:                                              ; preds = %479, %479
  %484 = bitcast %"class.v8::internal::HeapObject"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %484) #12
  %485 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %17, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %485, align 8
  %486 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %17, i64 %1) #12
  %487 = sext i32 %486 to i64
  %488 = add i64 %101, %487
  %489 = add i64 %488, 4
  %490 = and i64 %489, -262144
  %491 = inttoptr i64 %490 to %"class.v8::internal::Page"*
  %492 = icmp eq %"class.v8::internal::Page"* %103, %491
  br i1 %492, label %493, label %523

493:                                              ; preds = %483
  %494 = add i64 %487, %3
  %495 = add i64 %476, -41416
  %496 = inttoptr i64 %495 to %"class.v8::internal::Isolate"*
  %497 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %496, i64 0, i32 0, i32 7, i32 0, i64 534
  %498 = load i64, i64* %497, align 8
  %499 = inttoptr i64 %488 to i32*
  %500 = load atomic i32, i32* %499 monotonic, align 4
  %501 = trunc i64 %498 to i32
  %502 = icmp eq i32 %500, %501
  br i1 %502, label %503, label %523

503:                                              ; preds = %493
  %504 = load i64, i64* %108, align 8
  %505 = and i64 %504, 524288
  %506 = icmp eq i64 %505, 0
  br i1 %506, label %524, label %507

507:                                              ; preds = %503
  %508 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 8, i32 0
  %509 = bitcast %"struct.std::__1::__atomic_base.69"* %508 to i64*
  %510 = load atomic i64, i64* %509 seq_cst, align 64
  %511 = inttoptr i64 %510 to %"class.v8::internal::SemiSpace"*
  %512 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %511, i64 0, i32 5
  %513 = load i64, i64* %512, align 8
  %514 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 3
  %515 = load i64, i64* %514, align 8
  %516 = icmp ugt i64 %515, %513
  br i1 %516, label %523, label %517

517:                                              ; preds = %507
  %518 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 4
  %519 = load i64, i64* %518, align 32
  %520 = icmp ule i64 %519, %513
  %521 = icmp ult i64 %101, %513
  %522 = or i1 %521, %520
  br i1 %522, label %523, label %524

523:                                              ; preds = %517, %507, %493, %483
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %484) #12
  br label %582

524:                                              ; preds = %517, %503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %484) #12
  %525 = trunc i64 %494 to i32
  %526 = icmp eq i32 %525, 0
  br i1 %526, label %582, label %527

527:                                              ; preds = %524
  %528 = and i64 %494, -4294967296
  %529 = add i64 %494, 3
  %530 = inttoptr i64 %529 to i32*
  %531 = load i32, i32* %530, align 4
  %532 = zext i32 %531 to i64
  %533 = or i64 %528, %532
  %534 = bitcast %"class.v8::internal::AllocationSite"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %534) #12
  %535 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %533, i64* %535, align 8
  %536 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %537 = bitcast %"class.std::__1::tuple"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %537) #12
  %538 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %20, %"class.v8::internal::AllocationSite"** %538, align 8
  %539 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %539) #12
  %540 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %536, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %18, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %19) #12
  %541 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %540, 0
  %542 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %541, i64 3
  %543 = bitcast %"struct.std::__1::__hash_node_base.518"* %542 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %539) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %537) #12
  %544 = load i64, i64* %543, align 8
  %545 = add i64 %544, 1
  store i64 %545, i64* %543, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #12
  br label %582

546:                                              ; preds = %333
  %547 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %548 = load i64, i64* %547, align 8
  %549 = icmp eq i64 %548, 0
  br i1 %549, label %555, label %550

550:                                              ; preds = %546
  %551 = sext i32 %4 to i64
  %552 = sub i64 %548, %551
  %553 = icmp eq i64 %552, %157
  br i1 %553, label %554, label %555

554:                                              ; preds = %550
  store i64 %157, i64* %547, align 8
  br label %559

555:                                              ; preds = %550, %546
  %556 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %123, i64 0, i32 0
  %557 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %556, align 8
  %558 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %557, i64 %157, i32 %4, i32 1) #12
  br label %559

559:                                              ; preds = %555, %554
  %560 = load atomic i32, i32* %335 acquire, align 4
  %561 = add i32 %560, 1
  %562 = inttoptr i64 %2 to i32*
  %563 = load i32, i32* %562, align 4
  %564 = and i32 %563, 2
  %565 = or i32 %564, %561
  store i32 %565, i32* %562, align 4
  %566 = zext i32 %565 to i64
  %567 = and i64 %566, 1
  %568 = icmp ne i64 %567, 0
  %569 = icmp ne i32 %565, 3
  %570 = and i1 %569, %568
  br i1 %570, label %571, label %1708

571:                                              ; preds = %559
  %572 = and i64 %2, -4294967296
  %573 = and i64 %566, 4294705152
  %574 = or i64 %573, %572
  %575 = inttoptr i64 %574 to %"class.v8::internal::BasicMemoryChunk"*
  %576 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %575, i64 0, i32 1
  %577 = load i64, i64* %576, align 8
  %578 = lshr i64 %577, 4
  %579 = trunc i64 %578 to i32
  %580 = and i32 %579, 1
  %581 = xor i32 %580, 1
  br label %1708

582:                                              ; preds = %527, %524, %523, %479, %474
  %583 = inttoptr i64 %2 to i32*
  %584 = load i32, i32* %583, align 4
  %585 = and i32 %584, 2
  %586 = trunc i64 %153 to i32
  %587 = or i32 %585, %586
  store i32 %587, i32* %583, align 4
  %588 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %589 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %588, align 8
  %590 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %591 = load i32, i32* %590, align 8
  %592 = sext i32 %591 to i64
  %593 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %589, i64 0, i32 0, i64 %592, i32 0
  %594 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %593, align 8
  %595 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %594, i64 0, i32 1
  %596 = load i64, i64* %595, align 8
  %597 = icmp eq i64 %596, 256
  br i1 %597, label %602, label %598

598:                                              ; preds = %582
  %599 = add i64 %596, 1
  store i64 %599, i64* %595, align 8
  %600 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %594, i64 0, i32 2, i64 %596, i32 0, i32 0, i32 0, i32 0
  store i64 %153, i64* %600, align 8
  %601 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %594, i64 0, i32 2, i64 %596, i32 1
  br label %647

602:                                              ; preds = %582
  %603 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %589, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %603) #12
  %604 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %589, i64 0, i32 1, i32 1
  %605 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %604 to i64*
  %606 = load i64, i64* %605, align 8
  %607 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %594 to i64*
  store i64 %606, i64* %607, align 8
  %608 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %594 to i64
  store atomic volatile i64 %608, i64* %605 monotonic, align 8
  %609 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %589, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %610 = atomicrmw add i64* %609, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %603) #12
  %611 = call i8* @_Znwm(i64 4112) #17
  %612 = getelementptr inbounds i8, i8* %611, i64 8
  %613 = bitcast i8* %612 to i64*
  store i64 0, i64* %613, align 8
  %614 = getelementptr inbounds i8, i8* %611, i64 16
  %615 = bitcast i8* %614 to %"struct.std::__1::pair.1282"*
  %616 = getelementptr inbounds i8, i8* %611, i64 4112
  %617 = bitcast i8* %616 to %"struct.std::__1::pair.1282"*
  br label %618

618:                                              ; preds = %618, %602
  %619 = phi %"struct.std::__1::pair.1282"* [ %615, %602 ], [ %636, %618 ]
  %620 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %620, align 8
  %621 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 0, i32 1
  store i32 0, i32* %621, align 8
  %622 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %622, align 8
  %623 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 1, i32 1
  store i32 0, i32* %623, align 8
  %624 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %624, align 8
  %625 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 2, i32 1
  store i32 0, i32* %625, align 8
  %626 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %626, align 8
  %627 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 3, i32 1
  store i32 0, i32* %627, align 8
  %628 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %628, align 8
  %629 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 4, i32 1
  store i32 0, i32* %629, align 8
  %630 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %630, align 8
  %631 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 5, i32 1
  store i32 0, i32* %631, align 8
  %632 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %632, align 8
  %633 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 6, i32 1
  store i32 0, i32* %633, align 8
  %634 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %634, align 8
  %635 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 7, i32 1
  store i32 0, i32* %635, align 8
  %636 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %619, i64 8
  %637 = icmp eq %"struct.std::__1::pair.1282"* %636, %617
  br i1 %637, label %638, label %618

638:                                              ; preds = %618
  %639 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %593 to i8**
  store i8* %611, i8** %639, align 8
  %640 = bitcast i8* %611 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %641 = load i64, i64* %613, align 8
  %642 = icmp eq i64 %641, 256
  br i1 %642, label %649, label %643

643:                                              ; preds = %638
  %644 = add i64 %641, 1
  store i64 %644, i64* %613, align 8
  %645 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %640, i64 0, i32 2, i64 %641, i32 0, i32 0, i32 0, i32 0
  store i64 %153, i64* %645, align 8
  %646 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %640, i64 0, i32 2, i64 %641, i32 1
  br label %647

647:                                              ; preds = %598, %643
  %648 = phi i32* [ %646, %643 ], [ %601, %598 ]
  store i32 %4, i32* %648, align 8
  br label %649

649:                                              ; preds = %647, %638
  %650 = sext i32 %4 to i64
  %651 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %652 = load i64, i64* %651, align 8
  %653 = add i64 %652, %650
  store i64 %653, i64* %651, align 8
  br label %1708

654:                                              ; preds = %152, %116, %112
  %655 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %656 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %657 = load i64, i64* %656, align 8
  %658 = sext i32 %4 to i64
  %659 = add i64 %657, %658
  %660 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %661 = load i64, i64* %660, align 8
  %662 = icmp ugt i64 %659, %661
  br i1 %662, label %663, label %668

663:                                              ; preds = %654
  %664 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %665 = load i32, i32* %664, align 8
  %666 = sext i32 %665 to i64
  %667 = shl nsw i64 %666, 1
  br label %673

668:                                              ; preds = %654
  store i64 %659, i64* %656, align 8
  %669 = add i64 %657, 1
  %670 = and i64 %669, 1
  %671 = icmp eq i64 %670, 0
  br i1 %671, label %672, label %673, !prof !29

672:                                              ; preds = %668
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

673:                                              ; preds = %668, %663
  %674 = phi i64 [ %667, %663 ], [ %669, %668 ]
  %675 = and i64 %674, 1
  %676 = icmp eq i64 %675, 0
  br i1 %676, label %677, label %681

677:                                              ; preds = %673
  %678 = tail call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %655, i32 %4, i32 0, i32 2) #12
  %679 = and i64 %678, 1
  %680 = icmp eq i64 %679, 0
  br i1 %680, label %1177, label %681

681:                                              ; preds = %677, %673
  %682 = phi i64 [ %678, %677 ], [ %674, %673 ]
  %683 = add i64 %682, -1
  %684 = inttoptr i64 %683 to i32*
  %685 = trunc i64 %1 to i32
  store atomic volatile i32 %685, i32* %684 monotonic, align 4
  %686 = add i64 %682, 3
  %687 = add i64 %3, 3
  %688 = add nsw i32 %4, -4
  %689 = sdiv i32 %688, 4
  %690 = sext i32 %689 to i64
  %691 = inttoptr i64 %686 to i32*
  %692 = inttoptr i64 %686 to i8*
  %693 = inttoptr i64 %687 to i32*
  %694 = inttoptr i64 %687 to i8*
  %695 = inttoptr i64 %686 to i8*
  %696 = add i32 %4, -1
  %697 = icmp ult i32 %696, 7
  br i1 %697, label %859, label %698

698:                                              ; preds = %681
  %699 = icmp ult i32 %689, 16
  br i1 %699, label %700, label %845

700:                                              ; preds = %698
  %701 = icmp ult i32 %689, 8
  br i1 %701, label %792, label %702

702:                                              ; preds = %700
  %703 = getelementptr i32, i32* %691, i64 %690
  %704 = bitcast i32* %703 to i8*
  %705 = getelementptr i32, i32* %693, i64 %690
  %706 = bitcast i32* %705 to i8*
  %707 = icmp ult i8* %692, %706
  %708 = icmp ult i8* %694, %704
  %709 = and i1 %707, %708
  br i1 %709, label %792, label %710

710:                                              ; preds = %702
  %711 = and i64 %690, -8
  %712 = getelementptr i32, i32* %693, i64 %711
  %713 = sub nsw i64 %690, %711
  %714 = getelementptr i32, i32* %691, i64 %711
  %715 = add nsw i64 %711, -8
  %716 = lshr exact i64 %715, 3
  %717 = add nuw nsw i64 %716, 1
  %718 = and i64 %717, 3
  %719 = icmp ult i64 %715, 24
  br i1 %719, label %771, label %720

720:                                              ; preds = %710
  %721 = sub nsw i64 %717, %718
  br label %722

722:                                              ; preds = %722, %720
  %723 = phi i64 [ 0, %720 ], [ %768, %722 ]
  %724 = phi i64 [ %721, %720 ], [ %769, %722 ]
  %725 = getelementptr i32, i32* %693, i64 %723
  %726 = getelementptr i32, i32* %691, i64 %723
  %727 = bitcast i32* %725 to <4 x i32>*
  %728 = load <4 x i32>, <4 x i32>* %727, align 4, !alias.scope !135
  %729 = getelementptr i32, i32* %725, i64 4
  %730 = bitcast i32* %729 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !135
  %732 = bitcast i32* %726 to <4 x i32>*
  store <4 x i32> %728, <4 x i32>* %732, align 4, !alias.scope !138, !noalias !135
  %733 = getelementptr i32, i32* %726, i64 4
  %734 = bitcast i32* %733 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %734, align 4, !alias.scope !138, !noalias !135
  %735 = or i64 %723, 8
  %736 = getelementptr i32, i32* %693, i64 %735
  %737 = getelementptr i32, i32* %691, i64 %735
  %738 = bitcast i32* %736 to <4 x i32>*
  %739 = load <4 x i32>, <4 x i32>* %738, align 4, !alias.scope !135
  %740 = getelementptr i32, i32* %736, i64 4
  %741 = bitcast i32* %740 to <4 x i32>*
  %742 = load <4 x i32>, <4 x i32>* %741, align 4, !alias.scope !135
  %743 = bitcast i32* %737 to <4 x i32>*
  store <4 x i32> %739, <4 x i32>* %743, align 4, !alias.scope !138, !noalias !135
  %744 = getelementptr i32, i32* %737, i64 4
  %745 = bitcast i32* %744 to <4 x i32>*
  store <4 x i32> %742, <4 x i32>* %745, align 4, !alias.scope !138, !noalias !135
  %746 = or i64 %723, 16
  %747 = getelementptr i32, i32* %693, i64 %746
  %748 = getelementptr i32, i32* %691, i64 %746
  %749 = bitcast i32* %747 to <4 x i32>*
  %750 = load <4 x i32>, <4 x i32>* %749, align 4, !alias.scope !135
  %751 = getelementptr i32, i32* %747, i64 4
  %752 = bitcast i32* %751 to <4 x i32>*
  %753 = load <4 x i32>, <4 x i32>* %752, align 4, !alias.scope !135
  %754 = bitcast i32* %748 to <4 x i32>*
  store <4 x i32> %750, <4 x i32>* %754, align 4, !alias.scope !138, !noalias !135
  %755 = getelementptr i32, i32* %748, i64 4
  %756 = bitcast i32* %755 to <4 x i32>*
  store <4 x i32> %753, <4 x i32>* %756, align 4, !alias.scope !138, !noalias !135
  %757 = or i64 %723, 24
  %758 = getelementptr i32, i32* %693, i64 %757
  %759 = getelementptr i32, i32* %691, i64 %757
  %760 = bitcast i32* %758 to <4 x i32>*
  %761 = load <4 x i32>, <4 x i32>* %760, align 4, !alias.scope !135
  %762 = getelementptr i32, i32* %758, i64 4
  %763 = bitcast i32* %762 to <4 x i32>*
  %764 = load <4 x i32>, <4 x i32>* %763, align 4, !alias.scope !135
  %765 = bitcast i32* %759 to <4 x i32>*
  store <4 x i32> %761, <4 x i32>* %765, align 4, !alias.scope !138, !noalias !135
  %766 = getelementptr i32, i32* %759, i64 4
  %767 = bitcast i32* %766 to <4 x i32>*
  store <4 x i32> %764, <4 x i32>* %767, align 4, !alias.scope !138, !noalias !135
  %768 = add i64 %723, 32
  %769 = add i64 %724, -4
  %770 = icmp eq i64 %769, 0
  br i1 %770, label %771, label %722, !llvm.loop !140

771:                                              ; preds = %722, %710
  %772 = phi i64 [ 0, %710 ], [ %768, %722 ]
  %773 = icmp eq i64 %718, 0
  br i1 %773, label %790, label %774

774:                                              ; preds = %771, %774
  %775 = phi i64 [ %787, %774 ], [ %772, %771 ]
  %776 = phi i64 [ %788, %774 ], [ %718, %771 ]
  %777 = getelementptr i32, i32* %693, i64 %775
  %778 = getelementptr i32, i32* %691, i64 %775
  %779 = bitcast i32* %777 to <4 x i32>*
  %780 = load <4 x i32>, <4 x i32>* %779, align 4, !alias.scope !135
  %781 = getelementptr i32, i32* %777, i64 4
  %782 = bitcast i32* %781 to <4 x i32>*
  %783 = load <4 x i32>, <4 x i32>* %782, align 4, !alias.scope !135
  %784 = bitcast i32* %778 to <4 x i32>*
  store <4 x i32> %780, <4 x i32>* %784, align 4, !alias.scope !138, !noalias !135
  %785 = getelementptr i32, i32* %778, i64 4
  %786 = bitcast i32* %785 to <4 x i32>*
  store <4 x i32> %783, <4 x i32>* %786, align 4, !alias.scope !138, !noalias !135
  %787 = add i64 %775, 8
  %788 = add i64 %776, -1
  %789 = icmp eq i64 %788, 0
  br i1 %789, label %790, label %774, !llvm.loop !141

790:                                              ; preds = %774, %771
  %791 = icmp eq i64 %711, %690
  br i1 %791, label %859, label %792

792:                                              ; preds = %790, %702, %700
  %793 = phi i32* [ %693, %702 ], [ %693, %700 ], [ %712, %790 ]
  %794 = phi i64 [ %690, %702 ], [ %690, %700 ], [ %713, %790 ]
  %795 = phi i32* [ %691, %702 ], [ %691, %700 ], [ %714, %790 ]
  %796 = add nsw i64 %794, -1
  %797 = and i64 %794, 7
  %798 = icmp eq i64 %797, 0
  br i1 %798, label %810, label %799

799:                                              ; preds = %792, %799
  %800 = phi i32* [ %805, %799 ], [ %793, %792 ]
  %801 = phi i64 [ %804, %799 ], [ %794, %792 ]
  %802 = phi i32* [ %807, %799 ], [ %795, %792 ]
  %803 = phi i64 [ %808, %799 ], [ %797, %792 ]
  %804 = add i64 %801, -1
  %805 = getelementptr inbounds i32, i32* %800, i64 1
  %806 = load i32, i32* %800, align 4
  %807 = getelementptr inbounds i32, i32* %802, i64 1
  store i32 %806, i32* %802, align 4
  %808 = add i64 %803, -1
  %809 = icmp eq i64 %808, 0
  br i1 %809, label %810, label %799, !llvm.loop !142

810:                                              ; preds = %799, %792
  %811 = phi i32* [ %793, %792 ], [ %805, %799 ]
  %812 = phi i64 [ %794, %792 ], [ %804, %799 ]
  %813 = phi i32* [ %795, %792 ], [ %807, %799 ]
  %814 = icmp ult i64 %796, 7
  br i1 %814, label %859, label %815

815:                                              ; preds = %810, %815
  %816 = phi i32* [ %841, %815 ], [ %811, %810 ]
  %817 = phi i64 [ %840, %815 ], [ %812, %810 ]
  %818 = phi i32* [ %843, %815 ], [ %813, %810 ]
  %819 = getelementptr inbounds i32, i32* %816, i64 1
  %820 = load i32, i32* %816, align 4
  %821 = getelementptr inbounds i32, i32* %818, i64 1
  store i32 %820, i32* %818, align 4
  %822 = getelementptr inbounds i32, i32* %816, i64 2
  %823 = load i32, i32* %819, align 4
  %824 = getelementptr inbounds i32, i32* %818, i64 2
  store i32 %823, i32* %821, align 4
  %825 = getelementptr inbounds i32, i32* %816, i64 3
  %826 = load i32, i32* %822, align 4
  %827 = getelementptr inbounds i32, i32* %818, i64 3
  store i32 %826, i32* %824, align 4
  %828 = getelementptr inbounds i32, i32* %816, i64 4
  %829 = load i32, i32* %825, align 4
  %830 = getelementptr inbounds i32, i32* %818, i64 4
  store i32 %829, i32* %827, align 4
  %831 = getelementptr inbounds i32, i32* %816, i64 5
  %832 = load i32, i32* %828, align 4
  %833 = getelementptr inbounds i32, i32* %818, i64 5
  store i32 %832, i32* %830, align 4
  %834 = getelementptr inbounds i32, i32* %816, i64 6
  %835 = load i32, i32* %831, align 4
  %836 = getelementptr inbounds i32, i32* %818, i64 6
  store i32 %835, i32* %833, align 4
  %837 = getelementptr inbounds i32, i32* %816, i64 7
  %838 = load i32, i32* %834, align 4
  %839 = getelementptr inbounds i32, i32* %818, i64 7
  store i32 %838, i32* %836, align 4
  %840 = add i64 %817, -8
  %841 = getelementptr inbounds i32, i32* %816, i64 8
  %842 = load i32, i32* %837, align 4
  %843 = getelementptr inbounds i32, i32* %818, i64 8
  store i32 %842, i32* %839, align 4
  %844 = icmp eq i64 %840, 0
  br i1 %844, label %859, label %815, !llvm.loop !143

845:                                              ; preds = %698
  %846 = inttoptr i64 %687 to i8*
  %847 = shl nsw i64 %690, 2
  %848 = add nsw i64 %847, -4
  %849 = lshr exact i64 %848, 2
  switch i64 %849, label %858 [
    i64 3, label %857
    i64 1, label %852
    i64 2, label %856
    i64 0, label %850
  ]

850:                                              ; preds = %845
  %851 = load i32, i32* %693, align 1
  store i32 %851, i32* %691, align 1
  br label %859

852:                                              ; preds = %845
  %853 = inttoptr i64 %687 to i64*
  %854 = inttoptr i64 %686 to i64*
  %855 = load i64, i64* %853, align 1
  store i64 %855, i64* %854, align 1
  br label %859

856:                                              ; preds = %845
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %695, i8* align 1 %846, i64 12, i1 false) #12
  br label %859

857:                                              ; preds = %845
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %695, i8* align 1 %846, i64 16, i1 false) #12
  br label %859

858:                                              ; preds = %845
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %695, i8* align 1 %846, i64 %847, i1 false) #12
  br label %859

859:                                              ; preds = %810, %815, %790, %858, %857, %856, %852, %850, %681
  %860 = trunc i64 %683 to i32
  %861 = inttoptr i64 %101 to i32*
  %862 = cmpxchg volatile i32* %861, i32 %685, i32 %860 release monotonic
  %863 = extractvalue { i32, i1 } %862, 1
  br i1 %863, label %864, label %1072

864:                                              ; preds = %859
  %865 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %866 = load i8, i8* %865, align 8, !range !2
  %867 = icmp eq i8 %866, 0
  br i1 %867, label %870, label %868, !prof !60

868:                                              ; preds = %864
  %869 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %99, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %869, i64 %682, i64 %3, i32 %4) #12
  br label %870

870:                                              ; preds = %868, %864
  %871 = load i8, i8* %22, align 1, !range !2
  %872 = icmp eq i8 %871, 0
  br i1 %872, label %1000, label %873

873:                                              ; preds = %870
  %874 = and i64 %682, -262144
  %875 = or i64 %874, 272
  %876 = sub i64 %682, %874
  %877 = trunc i64 %876 to i32
  %878 = lshr i32 %877, 2
  %879 = and i32 %878, 31
  %880 = shl i32 1, %879
  %881 = inttoptr i64 %875 to i32*
  %882 = lshr i64 %876, 7
  %883 = and i64 %882, 33554431
  %884 = getelementptr inbounds i32, i32* %881, i64 %883
  %885 = load atomic i32, i32* %884 acquire, align 4
  %886 = and i32 %885, %880
  %887 = icmp eq i32 %886, 0
  br i1 %887, label %897, label %888

888:                                              ; preds = %873
  %889 = shl i32 %880, 1
  %890 = icmp eq i32 %889, 0
  %891 = getelementptr inbounds i32, i32* %884, i64 1
  %892 = select i1 %890, i32 1, i32 %889
  %893 = select i1 %890, i32* %891, i32* %884
  %894 = load atomic i32, i32* %893 acquire, align 4
  %895 = and i32 %894, %892
  %896 = icmp eq i32 %895, 0
  br i1 %896, label %897, label %1000

897:                                              ; preds = %888, %873
  %898 = or i64 %34, 272
  %899 = sub i64 %3, %34
  %900 = trunc i64 %899 to i32
  %901 = lshr i32 %900, 2
  %902 = and i32 %901, 31
  %903 = shl i32 1, %902
  %904 = inttoptr i64 %898 to i32*
  %905 = lshr i64 %899, 7
  %906 = and i64 %905, 33554431
  %907 = getelementptr inbounds i32, i32* %904, i64 %906
  %908 = load atomic i32, i32* %907 acquire, align 4
  %909 = and i32 %908, %903
  %910 = icmp eq i32 %909, 0
  br i1 %910, label %931, label %911

911:                                              ; preds = %897
  %912 = shl i32 %903, 1
  %913 = icmp eq i32 %912, 0
  %914 = getelementptr inbounds i32, i32* %907, i64 1
  %915 = select i1 %913, i32 1, i32 %912
  %916 = select i1 %913, i32* %914, i32* %907
  %917 = load atomic i32, i32* %916 acquire, align 4
  %918 = and i32 %917, %915
  %919 = icmp eq i32 %918, 0
  br i1 %919, label %920, label %931

920:                                              ; preds = %911
  %921 = load atomic i32, i32* %884 monotonic, align 4
  br label %922

922:                                              ; preds = %926, %920
  %923 = phi i32 [ %921, %920 ], [ %929, %926 ]
  %924 = and i32 %923, %880
  %925 = icmp eq i32 %924, %880
  br i1 %925, label %1000, label %926

926:                                              ; preds = %922
  %927 = or i32 %923, %880
  %928 = cmpxchg volatile i32* %884, i32 %923, i32 %927 release monotonic
  %929 = extractvalue { i32, i1 } %928, 0
  %930 = extractvalue { i32, i1 } %928, 1
  br i1 %930, label %1000, label %922

931:                                              ; preds = %911, %897
  %932 = load atomic i32, i32* %907 acquire, align 4
  %933 = and i32 %932, %903
  %934 = icmp eq i32 %933, 0
  br i1 %934, label %1000, label %935

935:                                              ; preds = %931
  %936 = shl i32 %903, 1
  %937 = icmp eq i32 %936, 0
  %938 = getelementptr inbounds i32, i32* %907, i64 1
  %939 = select i1 %937, i32 1, i32 %936
  %940 = select i1 %937, i32* %938, i32* %907
  %941 = load atomic i32, i32* %940 acquire, align 4
  %942 = and i32 %941, %939
  %943 = icmp eq i32 %942, 0
  br i1 %943, label %1000, label %944

944:                                              ; preds = %935
  %945 = load atomic i32, i32* %884 monotonic, align 4
  br label %946

946:                                              ; preds = %950, %944
  %947 = phi i32 [ %945, %944 ], [ %953, %950 ]
  %948 = and i32 %947, %880
  %949 = icmp eq i32 %948, %880
  br i1 %949, label %1000, label %950

950:                                              ; preds = %946
  %951 = or i32 %947, %880
  %952 = cmpxchg volatile i32* %884, i32 %947, i32 %951 release monotonic
  %953 = extractvalue { i32, i1 } %952, 0
  %954 = extractvalue { i32, i1 } %952, 1
  br i1 %954, label %955, label %946

955:                                              ; preds = %950
  %956 = bitcast %"class.v8::internal::HeapObject"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %956) #12
  %957 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %682, i64* %957, align 8
  %958 = xor i64 %874, -1
  %959 = add i64 %682, %958
  %960 = trunc i64 %959 to i32
  %961 = lshr i32 %960, 2
  %962 = and i32 %961, 31
  %963 = shl i32 1, %962
  %964 = lshr i64 %959, 7
  %965 = and i64 %964, 33554431
  %966 = getelementptr inbounds i32, i32* %881, i64 %965
  %967 = load atomic i32, i32* %966 acquire, align 4
  %968 = and i32 %967, %963
  %969 = icmp eq i32 %968, 0
  br i1 %969, label %999, label %970

970:                                              ; preds = %955
  %971 = shl i32 %963, 1
  %972 = icmp eq i32 %971, 0
  %973 = getelementptr inbounds i32, i32* %966, i64 1
  %974 = select i1 %972, i32 1, i32 %971
  %975 = select i1 %972, i32* %973, i32* %966
  %976 = load atomic i32, i32* %975 monotonic, align 4
  br label %977

977:                                              ; preds = %981, %970
  %978 = phi i32 [ %976, %970 ], [ %984, %981 ]
  %979 = and i32 %978, %974
  %980 = icmp eq i32 %979, %974
  br i1 %980, label %999, label %981

981:                                              ; preds = %977
  %982 = or i32 %978, %974
  %983 = cmpxchg volatile i32* %975, i32 %978, i32 %982 release monotonic
  %984 = extractvalue { i32, i1 } %983, 0
  %985 = extractvalue { i32, i1 } %983, 1
  br i1 %985, label %986, label %977

986:                                              ; preds = %981
  %987 = inttoptr i64 %874 to %"class.v8::internal::MemoryChunk"*
  %988 = load i64, i64* %957, align 8
  %989 = and i64 %988, -4294967296
  %990 = add i64 %988, -1
  %991 = inttoptr i64 %990 to i32*
  %992 = load atomic i32, i32* %991 monotonic, align 4
  %993 = zext i32 %992 to i64
  %994 = or i64 %989, %993
  %995 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %11, i64 %994) #12
  %996 = sext i32 %995 to i64
  %997 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %987, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %998 = atomicrmw add i64* %997, i64 %996 seq_cst
  br label %999

999:                                              ; preds = %977, %986, %955
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %956) #12
  br label %1000

1000:                                             ; preds = %926, %922, %946, %999, %935, %931, %888, %870
  %1001 = bitcast %"class.v8::internal::Heap"** %99 to i64*
  %1002 = load i64, i64* %1001, align 8
  %1003 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1004 = icmp eq i8 %1003, 0
  br i1 %1004, label %1106, label %1005

1005:                                             ; preds = %1000
  %1006 = add i64 %1, 7
  %1007 = inttoptr i64 %1006 to i16*
  %1008 = load atomic i16, i16* %1007 monotonic, align 2
  switch i16 %1008, label %1106 [
    i16 1085, label %1009
    i16 1057, label %1009
  ]

1009:                                             ; preds = %1005, %1005
  %1010 = bitcast %"class.v8::internal::HeapObject"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1010) #12
  %1011 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %12, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1011, align 8
  %1012 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %12, i64 %1) #12
  %1013 = sext i32 %1012 to i64
  %1014 = add i64 %101, %1013
  %1015 = add i64 %1014, 4
  %1016 = and i64 %1015, -262144
  %1017 = inttoptr i64 %1016 to %"class.v8::internal::Page"*
  %1018 = icmp eq %"class.v8::internal::Page"* %103, %1017
  br i1 %1018, label %1019, label %1049

1019:                                             ; preds = %1009
  %1020 = add i64 %1013, %3
  %1021 = add i64 %1002, -41416
  %1022 = inttoptr i64 %1021 to %"class.v8::internal::Isolate"*
  %1023 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1022, i64 0, i32 0, i32 7, i32 0, i64 534
  %1024 = load i64, i64* %1023, align 8
  %1025 = inttoptr i64 %1014 to i32*
  %1026 = load atomic i32, i32* %1025 monotonic, align 4
  %1027 = trunc i64 %1024 to i32
  %1028 = icmp eq i32 %1026, %1027
  br i1 %1028, label %1029, label %1049

1029:                                             ; preds = %1019
  %1030 = load i64, i64* %108, align 8
  %1031 = and i64 %1030, 524288
  %1032 = icmp eq i64 %1031, 0
  br i1 %1032, label %1050, label %1033

1033:                                             ; preds = %1029
  %1034 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 8, i32 0
  %1035 = bitcast %"struct.std::__1::__atomic_base.69"* %1034 to i64*
  %1036 = load atomic i64, i64* %1035 seq_cst, align 64
  %1037 = inttoptr i64 %1036 to %"class.v8::internal::SemiSpace"*
  %1038 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1037, i64 0, i32 5
  %1039 = load i64, i64* %1038, align 8
  %1040 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 3
  %1041 = load i64, i64* %1040, align 8
  %1042 = icmp ugt i64 %1041, %1039
  br i1 %1042, label %1049, label %1043

1043:                                             ; preds = %1033
  %1044 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 4
  %1045 = load i64, i64* %1044, align 32
  %1046 = icmp ule i64 %1045, %1039
  %1047 = icmp ult i64 %101, %1039
  %1048 = or i1 %1047, %1046
  br i1 %1048, label %1049, label %1050

1049:                                             ; preds = %1043, %1033, %1019, %1009
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1010) #12
  br label %1106

1050:                                             ; preds = %1043, %1029
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1010) #12
  %1051 = trunc i64 %1020 to i32
  %1052 = icmp eq i32 %1051, 0
  br i1 %1052, label %1106, label %1053

1053:                                             ; preds = %1050
  %1054 = and i64 %1020, -4294967296
  %1055 = add i64 %1020, 3
  %1056 = inttoptr i64 %1055 to i32*
  %1057 = load i32, i32* %1056, align 4
  %1058 = zext i32 %1057 to i64
  %1059 = or i64 %1054, %1058
  %1060 = bitcast %"class.v8::internal::AllocationSite"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1060) #12
  %1061 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1059, i64* %1061, align 8
  %1062 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1063 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1063) #12
  %1064 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %15, %"class.v8::internal::AllocationSite"** %1064, align 8
  %1065 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1065) #12
  %1066 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1062, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %14) #12
  %1067 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1066, 0
  %1068 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1067, i64 3
  %1069 = bitcast %"struct.std::__1::__hash_node_base.518"* %1068 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1065) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1063) #12
  %1070 = load i64, i64* %1069, align 8
  %1071 = add i64 %1070, 1
  store i64 %1071, i64* %1069, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1060) #12
  br label %1106

1072:                                             ; preds = %859
  %1073 = load i64, i64* %656, align 8
  %1074 = icmp ne i64 %1073, 0
  %1075 = sub i64 %1073, %658
  %1076 = icmp eq i64 %1075, %683
  %1077 = and i1 %1074, %1076
  br i1 %1077, label %1078, label %1079

1078:                                             ; preds = %1072
  store i64 %683, i64* %656, align 8
  br label %1083

1079:                                             ; preds = %1072
  %1080 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %1081 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1080, align 8
  %1082 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1081, i64 %683, i32 %4, i32 1) #12
  br label %1083

1083:                                             ; preds = %1079, %1078
  %1084 = load atomic i32, i32* %861 acquire, align 4
  %1085 = add i32 %1084, 1
  %1086 = inttoptr i64 %2 to i32*
  %1087 = load i32, i32* %1086, align 4
  %1088 = and i32 %1087, 2
  %1089 = or i32 %1088, %1085
  store i32 %1089, i32* %1086, align 4
  %1090 = zext i32 %1089 to i64
  %1091 = and i64 %1090, 1
  %1092 = icmp ne i64 %1091, 0
  %1093 = icmp ne i32 %1089, 3
  %1094 = and i1 %1093, %1092
  br i1 %1094, label %1095, label %1708

1095:                                             ; preds = %1083
  %1096 = and i64 %2, -4294967296
  %1097 = and i64 %1090, 4294705152
  %1098 = or i64 %1097, %1096
  %1099 = inttoptr i64 %1098 to %"class.v8::internal::BasicMemoryChunk"*
  %1100 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1099, i64 0, i32 1
  %1101 = load i64, i64* %1100, align 8
  %1102 = lshr i64 %1101, 4
  %1103 = trunc i64 %1102 to i32
  %1104 = and i32 %1103, 1
  %1105 = xor i32 %1104, 1
  br label %1708

1106:                                             ; preds = %1053, %1050, %1049, %1005, %1000
  %1107 = inttoptr i64 %2 to i32*
  %1108 = load i32, i32* %1107, align 4
  %1109 = and i32 %1108, 2
  %1110 = trunc i64 %682 to i32
  %1111 = or i32 %1109, %1110
  store i32 %1111, i32* %1107, align 4
  %1112 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1113 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1112, align 8
  %1114 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1115 = load i32, i32* %1114, align 8
  %1116 = sext i32 %1115 to i64
  %1117 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1113, i64 0, i32 0, i32 0, i64 %1116, i32 0
  %1118 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1117, align 8
  %1119 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1118, i64 0, i32 1
  %1120 = load i64, i64* %1119, align 8
  %1121 = icmp eq i64 %1120, 256
  br i1 %1121, label %1126, label %1122

1122:                                             ; preds = %1106
  %1123 = add i64 %1120, 1
  store i64 %1123, i64* %1119, align 8
  %1124 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1118, i64 0, i32 2, i64 %1120, i32 0, i32 0, i32 0, i32 0
  store i64 %682, i64* %1124, align 8
  %1125 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1118, i64 0, i32 2, i64 %1120, i32 1
  br label %1171

1126:                                             ; preds = %1106
  %1127 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1113, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1127) #12
  %1128 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1113, i64 0, i32 0, i32 1, i32 1
  %1129 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1128 to i64*
  %1130 = load i64, i64* %1129, align 8
  %1131 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1118 to i64*
  store i64 %1130, i64* %1131, align 8
  %1132 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1118 to i64
  store atomic volatile i64 %1132, i64* %1129 monotonic, align 8
  %1133 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1113, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1134 = atomicrmw add i64* %1133, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1127) #12
  %1135 = call i8* @_Znwm(i64 4112) #17
  %1136 = getelementptr inbounds i8, i8* %1135, i64 8
  %1137 = bitcast i8* %1136 to i64*
  store i64 0, i64* %1137, align 8
  %1138 = getelementptr inbounds i8, i8* %1135, i64 16
  %1139 = bitcast i8* %1138 to %"struct.std::__1::pair.1282"*
  %1140 = getelementptr inbounds i8, i8* %1135, i64 4112
  %1141 = bitcast i8* %1140 to %"struct.std::__1::pair.1282"*
  br label %1142

1142:                                             ; preds = %1142, %1126
  %1143 = phi %"struct.std::__1::pair.1282"* [ %1139, %1126 ], [ %1160, %1142 ]
  %1144 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1144, align 8
  %1145 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 0, i32 1
  store i32 0, i32* %1145, align 8
  %1146 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1146, align 8
  %1147 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 1, i32 1
  store i32 0, i32* %1147, align 8
  %1148 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1148, align 8
  %1149 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 2, i32 1
  store i32 0, i32* %1149, align 8
  %1150 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1150, align 8
  %1151 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 3, i32 1
  store i32 0, i32* %1151, align 8
  %1152 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1152, align 8
  %1153 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 4, i32 1
  store i32 0, i32* %1153, align 8
  %1154 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1154, align 8
  %1155 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 5, i32 1
  store i32 0, i32* %1155, align 8
  %1156 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1156, align 8
  %1157 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 6, i32 1
  store i32 0, i32* %1157, align 8
  %1158 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1158, align 8
  %1159 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 7, i32 1
  store i32 0, i32* %1159, align 8
  %1160 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1143, i64 8
  %1161 = icmp eq %"struct.std::__1::pair.1282"* %1160, %1141
  br i1 %1161, label %1162, label %1142

1162:                                             ; preds = %1142
  %1163 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1117 to i8**
  store i8* %1135, i8** %1163, align 8
  %1164 = bitcast i8* %1135 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1165 = load i64, i64* %1137, align 8
  %1166 = icmp eq i64 %1165, 256
  br i1 %1166, label %1173, label %1167

1167:                                             ; preds = %1162
  %1168 = add i64 %1165, 1
  store i64 %1168, i64* %1137, align 8
  %1169 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1164, i64 0, i32 2, i64 %1165, i32 0, i32 0, i32 0, i32 0
  store i64 %682, i64* %1169, align 8
  %1170 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1164, i64 0, i32 2, i64 %1165, i32 1
  br label %1171

1171:                                             ; preds = %1122, %1167
  %1172 = phi i32* [ %1170, %1167 ], [ %1125, %1122 ]
  store i32 %4, i32* %1172, align 8
  br label %1173

1173:                                             ; preds = %1171, %1162
  %1174 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1175 = load i64, i64* %1174, align 8
  %1176 = add i64 %1175, %658
  store i64 %1176, i64* %1174, align 8
  br label %1708

1177:                                             ; preds = %677
  %1178 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1179 = icmp sgt i32 %4, 8192
  br i1 %1179, label %1180, label %1204

1180:                                             ; preds = %1177
  %1181 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1182 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1181, align 8
  %1183 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1182, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1183) #12
  %1184 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1182, i64 0, i32 0
  %1185 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1182, i64 0, i32 0, i32 1, i32 1
  %1186 = load i64, i64* %1185, align 8
  %1187 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1182, i64 0, i32 0, i32 1, i32 2
  %1188 = load i64, i64* %1187, align 8
  %1189 = add i64 %1186, %658
  %1190 = icmp ult i64 %1188, %1189
  br i1 %1190, label %1200, label %1191

1191:                                             ; preds = %1180
  %1192 = add i64 %1186, 1
  store i64 %1189, i64* %1185, align 8
  %1193 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1194 = icmp eq i8 %1193, 0
  br i1 %1194, label %1196, label %1195

1195:                                             ; preds = %1191
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1184, i32 2) #12
  br label %1196

1196:                                             ; preds = %1195, %1191
  %1197 = and i64 %1192, 1
  %1198 = icmp eq i64 %1197, 0
  br i1 %1198, label %1199, label %1202, !prof !29

1199:                                             ; preds = %1196
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1200:                                             ; preds = %1180
  %1201 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1182, i32 %4, i32 0, i32 2) #12
  br label %1202

1202:                                             ; preds = %1200, %1196
  %1203 = phi i64 [ %1201, %1200 ], [ %1192, %1196 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1183) #12
  br label %1206

1204:                                             ; preds = %1177
  %1205 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1178, i32 %4, i32 0) #12
  br label %1206

1206:                                             ; preds = %1204, %1202
  %1207 = phi i64 [ %1203, %1202 ], [ %1205, %1204 ]
  %1208 = and i64 %1207, 1
  %1209 = icmp eq i64 %1208, 0
  br i1 %1209, label %1706, label %1210

1210:                                             ; preds = %1206
  %1211 = add i64 %1207, -1
  %1212 = inttoptr i64 %1211 to i32*
  %1213 = trunc i64 %1 to i32
  store atomic volatile i32 %1213, i32* %1212 monotonic, align 4
  %1214 = add i64 %1207, 3
  %1215 = add i64 %3, 3
  %1216 = add nsw i32 %4, -4
  %1217 = sdiv i32 %1216, 4
  %1218 = sext i32 %1217 to i64
  %1219 = inttoptr i64 %1214 to i32*
  %1220 = inttoptr i64 %1214 to i8*
  %1221 = inttoptr i64 %1215 to i32*
  %1222 = inttoptr i64 %1215 to i8*
  %1223 = inttoptr i64 %1214 to i8*
  %1224 = add i32 %4, -1
  %1225 = icmp ult i32 %1224, 7
  br i1 %1225, label %1387, label %1226

1226:                                             ; preds = %1210
  %1227 = icmp ult i32 %1217, 16
  br i1 %1227, label %1228, label %1373

1228:                                             ; preds = %1226
  %1229 = icmp ult i32 %1217, 8
  br i1 %1229, label %1320, label %1230

1230:                                             ; preds = %1228
  %1231 = getelementptr i32, i32* %1219, i64 %1218
  %1232 = bitcast i32* %1231 to i8*
  %1233 = getelementptr i32, i32* %1221, i64 %1218
  %1234 = bitcast i32* %1233 to i8*
  %1235 = icmp ult i8* %1220, %1234
  %1236 = icmp ult i8* %1222, %1232
  %1237 = and i1 %1235, %1236
  br i1 %1237, label %1320, label %1238

1238:                                             ; preds = %1230
  %1239 = and i64 %1218, -8
  %1240 = getelementptr i32, i32* %1221, i64 %1239
  %1241 = sub nsw i64 %1218, %1239
  %1242 = getelementptr i32, i32* %1219, i64 %1239
  %1243 = add nsw i64 %1239, -8
  %1244 = lshr exact i64 %1243, 3
  %1245 = add nuw nsw i64 %1244, 1
  %1246 = and i64 %1245, 3
  %1247 = icmp ult i64 %1243, 24
  br i1 %1247, label %1299, label %1248

1248:                                             ; preds = %1238
  %1249 = sub nsw i64 %1245, %1246
  br label %1250

1250:                                             ; preds = %1250, %1248
  %1251 = phi i64 [ 0, %1248 ], [ %1296, %1250 ]
  %1252 = phi i64 [ %1249, %1248 ], [ %1297, %1250 ]
  %1253 = getelementptr i32, i32* %1221, i64 %1251
  %1254 = getelementptr i32, i32* %1219, i64 %1251
  %1255 = bitcast i32* %1253 to <4 x i32>*
  %1256 = load <4 x i32>, <4 x i32>* %1255, align 4, !alias.scope !144
  %1257 = getelementptr i32, i32* %1253, i64 4
  %1258 = bitcast i32* %1257 to <4 x i32>*
  %1259 = load <4 x i32>, <4 x i32>* %1258, align 4, !alias.scope !144
  %1260 = bitcast i32* %1254 to <4 x i32>*
  store <4 x i32> %1256, <4 x i32>* %1260, align 4, !alias.scope !147, !noalias !144
  %1261 = getelementptr i32, i32* %1254, i64 4
  %1262 = bitcast i32* %1261 to <4 x i32>*
  store <4 x i32> %1259, <4 x i32>* %1262, align 4, !alias.scope !147, !noalias !144
  %1263 = or i64 %1251, 8
  %1264 = getelementptr i32, i32* %1221, i64 %1263
  %1265 = getelementptr i32, i32* %1219, i64 %1263
  %1266 = bitcast i32* %1264 to <4 x i32>*
  %1267 = load <4 x i32>, <4 x i32>* %1266, align 4, !alias.scope !144
  %1268 = getelementptr i32, i32* %1264, i64 4
  %1269 = bitcast i32* %1268 to <4 x i32>*
  %1270 = load <4 x i32>, <4 x i32>* %1269, align 4, !alias.scope !144
  %1271 = bitcast i32* %1265 to <4 x i32>*
  store <4 x i32> %1267, <4 x i32>* %1271, align 4, !alias.scope !147, !noalias !144
  %1272 = getelementptr i32, i32* %1265, i64 4
  %1273 = bitcast i32* %1272 to <4 x i32>*
  store <4 x i32> %1270, <4 x i32>* %1273, align 4, !alias.scope !147, !noalias !144
  %1274 = or i64 %1251, 16
  %1275 = getelementptr i32, i32* %1221, i64 %1274
  %1276 = getelementptr i32, i32* %1219, i64 %1274
  %1277 = bitcast i32* %1275 to <4 x i32>*
  %1278 = load <4 x i32>, <4 x i32>* %1277, align 4, !alias.scope !144
  %1279 = getelementptr i32, i32* %1275, i64 4
  %1280 = bitcast i32* %1279 to <4 x i32>*
  %1281 = load <4 x i32>, <4 x i32>* %1280, align 4, !alias.scope !144
  %1282 = bitcast i32* %1276 to <4 x i32>*
  store <4 x i32> %1278, <4 x i32>* %1282, align 4, !alias.scope !147, !noalias !144
  %1283 = getelementptr i32, i32* %1276, i64 4
  %1284 = bitcast i32* %1283 to <4 x i32>*
  store <4 x i32> %1281, <4 x i32>* %1284, align 4, !alias.scope !147, !noalias !144
  %1285 = or i64 %1251, 24
  %1286 = getelementptr i32, i32* %1221, i64 %1285
  %1287 = getelementptr i32, i32* %1219, i64 %1285
  %1288 = bitcast i32* %1286 to <4 x i32>*
  %1289 = load <4 x i32>, <4 x i32>* %1288, align 4, !alias.scope !144
  %1290 = getelementptr i32, i32* %1286, i64 4
  %1291 = bitcast i32* %1290 to <4 x i32>*
  %1292 = load <4 x i32>, <4 x i32>* %1291, align 4, !alias.scope !144
  %1293 = bitcast i32* %1287 to <4 x i32>*
  store <4 x i32> %1289, <4 x i32>* %1293, align 4, !alias.scope !147, !noalias !144
  %1294 = getelementptr i32, i32* %1287, i64 4
  %1295 = bitcast i32* %1294 to <4 x i32>*
  store <4 x i32> %1292, <4 x i32>* %1295, align 4, !alias.scope !147, !noalias !144
  %1296 = add i64 %1251, 32
  %1297 = add i64 %1252, -4
  %1298 = icmp eq i64 %1297, 0
  br i1 %1298, label %1299, label %1250, !llvm.loop !149

1299:                                             ; preds = %1250, %1238
  %1300 = phi i64 [ 0, %1238 ], [ %1296, %1250 ]
  %1301 = icmp eq i64 %1246, 0
  br i1 %1301, label %1318, label %1302

1302:                                             ; preds = %1299, %1302
  %1303 = phi i64 [ %1315, %1302 ], [ %1300, %1299 ]
  %1304 = phi i64 [ %1316, %1302 ], [ %1246, %1299 ]
  %1305 = getelementptr i32, i32* %1221, i64 %1303
  %1306 = getelementptr i32, i32* %1219, i64 %1303
  %1307 = bitcast i32* %1305 to <4 x i32>*
  %1308 = load <4 x i32>, <4 x i32>* %1307, align 4, !alias.scope !144
  %1309 = getelementptr i32, i32* %1305, i64 4
  %1310 = bitcast i32* %1309 to <4 x i32>*
  %1311 = load <4 x i32>, <4 x i32>* %1310, align 4, !alias.scope !144
  %1312 = bitcast i32* %1306 to <4 x i32>*
  store <4 x i32> %1308, <4 x i32>* %1312, align 4, !alias.scope !147, !noalias !144
  %1313 = getelementptr i32, i32* %1306, i64 4
  %1314 = bitcast i32* %1313 to <4 x i32>*
  store <4 x i32> %1311, <4 x i32>* %1314, align 4, !alias.scope !147, !noalias !144
  %1315 = add i64 %1303, 8
  %1316 = add i64 %1304, -1
  %1317 = icmp eq i64 %1316, 0
  br i1 %1317, label %1318, label %1302, !llvm.loop !150

1318:                                             ; preds = %1302, %1299
  %1319 = icmp eq i64 %1239, %1218
  br i1 %1319, label %1387, label %1320

1320:                                             ; preds = %1318, %1230, %1228
  %1321 = phi i32* [ %1221, %1230 ], [ %1221, %1228 ], [ %1240, %1318 ]
  %1322 = phi i64 [ %1218, %1230 ], [ %1218, %1228 ], [ %1241, %1318 ]
  %1323 = phi i32* [ %1219, %1230 ], [ %1219, %1228 ], [ %1242, %1318 ]
  %1324 = add nsw i64 %1322, -1
  %1325 = and i64 %1322, 7
  %1326 = icmp eq i64 %1325, 0
  br i1 %1326, label %1338, label %1327

1327:                                             ; preds = %1320, %1327
  %1328 = phi i32* [ %1333, %1327 ], [ %1321, %1320 ]
  %1329 = phi i64 [ %1332, %1327 ], [ %1322, %1320 ]
  %1330 = phi i32* [ %1335, %1327 ], [ %1323, %1320 ]
  %1331 = phi i64 [ %1336, %1327 ], [ %1325, %1320 ]
  %1332 = add i64 %1329, -1
  %1333 = getelementptr inbounds i32, i32* %1328, i64 1
  %1334 = load i32, i32* %1328, align 4
  %1335 = getelementptr inbounds i32, i32* %1330, i64 1
  store i32 %1334, i32* %1330, align 4
  %1336 = add i64 %1331, -1
  %1337 = icmp eq i64 %1336, 0
  br i1 %1337, label %1338, label %1327, !llvm.loop !151

1338:                                             ; preds = %1327, %1320
  %1339 = phi i32* [ %1321, %1320 ], [ %1333, %1327 ]
  %1340 = phi i64 [ %1322, %1320 ], [ %1332, %1327 ]
  %1341 = phi i32* [ %1323, %1320 ], [ %1335, %1327 ]
  %1342 = icmp ult i64 %1324, 7
  br i1 %1342, label %1387, label %1343

1343:                                             ; preds = %1338, %1343
  %1344 = phi i32* [ %1369, %1343 ], [ %1339, %1338 ]
  %1345 = phi i64 [ %1368, %1343 ], [ %1340, %1338 ]
  %1346 = phi i32* [ %1371, %1343 ], [ %1341, %1338 ]
  %1347 = getelementptr inbounds i32, i32* %1344, i64 1
  %1348 = load i32, i32* %1344, align 4
  %1349 = getelementptr inbounds i32, i32* %1346, i64 1
  store i32 %1348, i32* %1346, align 4
  %1350 = getelementptr inbounds i32, i32* %1344, i64 2
  %1351 = load i32, i32* %1347, align 4
  %1352 = getelementptr inbounds i32, i32* %1346, i64 2
  store i32 %1351, i32* %1349, align 4
  %1353 = getelementptr inbounds i32, i32* %1344, i64 3
  %1354 = load i32, i32* %1350, align 4
  %1355 = getelementptr inbounds i32, i32* %1346, i64 3
  store i32 %1354, i32* %1352, align 4
  %1356 = getelementptr inbounds i32, i32* %1344, i64 4
  %1357 = load i32, i32* %1353, align 4
  %1358 = getelementptr inbounds i32, i32* %1346, i64 4
  store i32 %1357, i32* %1355, align 4
  %1359 = getelementptr inbounds i32, i32* %1344, i64 5
  %1360 = load i32, i32* %1356, align 4
  %1361 = getelementptr inbounds i32, i32* %1346, i64 5
  store i32 %1360, i32* %1358, align 4
  %1362 = getelementptr inbounds i32, i32* %1344, i64 6
  %1363 = load i32, i32* %1359, align 4
  %1364 = getelementptr inbounds i32, i32* %1346, i64 6
  store i32 %1363, i32* %1361, align 4
  %1365 = getelementptr inbounds i32, i32* %1344, i64 7
  %1366 = load i32, i32* %1362, align 4
  %1367 = getelementptr inbounds i32, i32* %1346, i64 7
  store i32 %1366, i32* %1364, align 4
  %1368 = add i64 %1345, -8
  %1369 = getelementptr inbounds i32, i32* %1344, i64 8
  %1370 = load i32, i32* %1365, align 4
  %1371 = getelementptr inbounds i32, i32* %1346, i64 8
  store i32 %1370, i32* %1367, align 4
  %1372 = icmp eq i64 %1368, 0
  br i1 %1372, label %1387, label %1343, !llvm.loop !152

1373:                                             ; preds = %1226
  %1374 = inttoptr i64 %1215 to i8*
  %1375 = shl nsw i64 %1218, 2
  %1376 = add nsw i64 %1375, -4
  %1377 = lshr exact i64 %1376, 2
  switch i64 %1377, label %1386 [
    i64 3, label %1385
    i64 1, label %1380
    i64 2, label %1384
    i64 0, label %1378
  ]

1378:                                             ; preds = %1373
  %1379 = load i32, i32* %1221, align 1
  store i32 %1379, i32* %1219, align 1
  br label %1387

1380:                                             ; preds = %1373
  %1381 = inttoptr i64 %1215 to i64*
  %1382 = inttoptr i64 %1214 to i64*
  %1383 = load i64, i64* %1381, align 1
  store i64 %1383, i64* %1382, align 1
  br label %1387

1384:                                             ; preds = %1373
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1223, i8* align 1 %1374, i64 12, i1 false) #12
  br label %1387

1385:                                             ; preds = %1373
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1223, i8* align 1 %1374, i64 16, i1 false) #12
  br label %1387

1386:                                             ; preds = %1373
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1223, i8* align 1 %1374, i64 %1375, i1 false) #12
  br label %1387

1387:                                             ; preds = %1338, %1343, %1318, %1386, %1385, %1384, %1380, %1378, %1210
  %1388 = trunc i64 %1211 to i32
  %1389 = inttoptr i64 %101 to i32*
  %1390 = cmpxchg volatile i32* %1389, i32 %1213, i32 %1388 release monotonic
  %1391 = extractvalue { i32, i1 } %1390, 1
  br i1 %1391, label %1392, label %1600

1392:                                             ; preds = %1387
  %1393 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %1394 = load i8, i8* %1393, align 8, !range !2
  %1395 = icmp eq i8 %1394, 0
  br i1 %1395, label %1398, label %1396, !prof !60

1396:                                             ; preds = %1392
  %1397 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %99, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %1397, i64 %1207, i64 %3, i32 %4) #12
  br label %1398

1398:                                             ; preds = %1396, %1392
  %1399 = load i8, i8* %22, align 1, !range !2
  %1400 = icmp eq i8 %1399, 0
  br i1 %1400, label %1528, label %1401

1401:                                             ; preds = %1398
  %1402 = and i64 %1207, -262144
  %1403 = or i64 %1402, 272
  %1404 = sub i64 %1207, %1402
  %1405 = trunc i64 %1404 to i32
  %1406 = lshr i32 %1405, 2
  %1407 = and i32 %1406, 31
  %1408 = shl i32 1, %1407
  %1409 = inttoptr i64 %1403 to i32*
  %1410 = lshr i64 %1404, 7
  %1411 = and i64 %1410, 33554431
  %1412 = getelementptr inbounds i32, i32* %1409, i64 %1411
  %1413 = load atomic i32, i32* %1412 acquire, align 4
  %1414 = and i32 %1413, %1408
  %1415 = icmp eq i32 %1414, 0
  br i1 %1415, label %1425, label %1416

1416:                                             ; preds = %1401
  %1417 = shl i32 %1408, 1
  %1418 = icmp eq i32 %1417, 0
  %1419 = getelementptr inbounds i32, i32* %1412, i64 1
  %1420 = select i1 %1418, i32 1, i32 %1417
  %1421 = select i1 %1418, i32* %1419, i32* %1412
  %1422 = load atomic i32, i32* %1421 acquire, align 4
  %1423 = and i32 %1422, %1420
  %1424 = icmp eq i32 %1423, 0
  br i1 %1424, label %1425, label %1528

1425:                                             ; preds = %1416, %1401
  %1426 = or i64 %34, 272
  %1427 = sub i64 %3, %34
  %1428 = trunc i64 %1427 to i32
  %1429 = lshr i32 %1428, 2
  %1430 = and i32 %1429, 31
  %1431 = shl i32 1, %1430
  %1432 = inttoptr i64 %1426 to i32*
  %1433 = lshr i64 %1427, 7
  %1434 = and i64 %1433, 33554431
  %1435 = getelementptr inbounds i32, i32* %1432, i64 %1434
  %1436 = load atomic i32, i32* %1435 acquire, align 4
  %1437 = and i32 %1436, %1431
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1459, label %1439

1439:                                             ; preds = %1425
  %1440 = shl i32 %1431, 1
  %1441 = icmp eq i32 %1440, 0
  %1442 = getelementptr inbounds i32, i32* %1435, i64 1
  %1443 = select i1 %1441, i32 1, i32 %1440
  %1444 = select i1 %1441, i32* %1442, i32* %1435
  %1445 = load atomic i32, i32* %1444 acquire, align 4
  %1446 = and i32 %1445, %1443
  %1447 = icmp eq i32 %1446, 0
  br i1 %1447, label %1448, label %1459

1448:                                             ; preds = %1439
  %1449 = load atomic i32, i32* %1412 monotonic, align 4
  br label %1450

1450:                                             ; preds = %1454, %1448
  %1451 = phi i32 [ %1449, %1448 ], [ %1457, %1454 ]
  %1452 = and i32 %1451, %1408
  %1453 = icmp eq i32 %1452, %1408
  br i1 %1453, label %1528, label %1454

1454:                                             ; preds = %1450
  %1455 = or i32 %1451, %1408
  %1456 = cmpxchg volatile i32* %1412, i32 %1451, i32 %1455 release monotonic
  %1457 = extractvalue { i32, i1 } %1456, 0
  %1458 = extractvalue { i32, i1 } %1456, 1
  br i1 %1458, label %1528, label %1450

1459:                                             ; preds = %1439, %1425
  %1460 = load atomic i32, i32* %1435 acquire, align 4
  %1461 = and i32 %1460, %1431
  %1462 = icmp eq i32 %1461, 0
  br i1 %1462, label %1528, label %1463

1463:                                             ; preds = %1459
  %1464 = shl i32 %1431, 1
  %1465 = icmp eq i32 %1464, 0
  %1466 = getelementptr inbounds i32, i32* %1435, i64 1
  %1467 = select i1 %1465, i32 1, i32 %1464
  %1468 = select i1 %1465, i32* %1466, i32* %1435
  %1469 = load atomic i32, i32* %1468 acquire, align 4
  %1470 = and i32 %1469, %1467
  %1471 = icmp eq i32 %1470, 0
  br i1 %1471, label %1528, label %1472

1472:                                             ; preds = %1463
  %1473 = load atomic i32, i32* %1412 monotonic, align 4
  br label %1474

1474:                                             ; preds = %1478, %1472
  %1475 = phi i32 [ %1473, %1472 ], [ %1481, %1478 ]
  %1476 = and i32 %1475, %1408
  %1477 = icmp eq i32 %1476, %1408
  br i1 %1477, label %1528, label %1478

1478:                                             ; preds = %1474
  %1479 = or i32 %1475, %1408
  %1480 = cmpxchg volatile i32* %1412, i32 %1475, i32 %1479 release monotonic
  %1481 = extractvalue { i32, i1 } %1480, 0
  %1482 = extractvalue { i32, i1 } %1480, 1
  br i1 %1482, label %1483, label %1474

1483:                                             ; preds = %1478
  %1484 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1484) #12
  %1485 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1207, i64* %1485, align 8
  %1486 = xor i64 %1402, -1
  %1487 = add i64 %1207, %1486
  %1488 = trunc i64 %1487 to i32
  %1489 = lshr i32 %1488, 2
  %1490 = and i32 %1489, 31
  %1491 = shl i32 1, %1490
  %1492 = lshr i64 %1487, 7
  %1493 = and i64 %1492, 33554431
  %1494 = getelementptr inbounds i32, i32* %1409, i64 %1493
  %1495 = load atomic i32, i32* %1494 acquire, align 4
  %1496 = and i32 %1495, %1491
  %1497 = icmp eq i32 %1496, 0
  br i1 %1497, label %1527, label %1498

1498:                                             ; preds = %1483
  %1499 = shl i32 %1491, 1
  %1500 = icmp eq i32 %1499, 0
  %1501 = getelementptr inbounds i32, i32* %1494, i64 1
  %1502 = select i1 %1500, i32 1, i32 %1499
  %1503 = select i1 %1500, i32* %1501, i32* %1494
  %1504 = load atomic i32, i32* %1503 monotonic, align 4
  br label %1505

1505:                                             ; preds = %1509, %1498
  %1506 = phi i32 [ %1504, %1498 ], [ %1512, %1509 ]
  %1507 = and i32 %1506, %1502
  %1508 = icmp eq i32 %1507, %1502
  br i1 %1508, label %1527, label %1509

1509:                                             ; preds = %1505
  %1510 = or i32 %1506, %1502
  %1511 = cmpxchg volatile i32* %1503, i32 %1506, i32 %1510 release monotonic
  %1512 = extractvalue { i32, i1 } %1511, 0
  %1513 = extractvalue { i32, i1 } %1511, 1
  br i1 %1513, label %1514, label %1505

1514:                                             ; preds = %1509
  %1515 = inttoptr i64 %1402 to %"class.v8::internal::MemoryChunk"*
  %1516 = load i64, i64* %1485, align 8
  %1517 = and i64 %1516, -4294967296
  %1518 = add i64 %1516, -1
  %1519 = inttoptr i64 %1518 to i32*
  %1520 = load atomic i32, i32* %1519 monotonic, align 4
  %1521 = zext i32 %1520 to i64
  %1522 = or i64 %1517, %1521
  %1523 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %1522) #12
  %1524 = sext i32 %1523 to i64
  %1525 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1515, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1526 = atomicrmw add i64* %1525, i64 %1524 seq_cst
  br label %1527

1527:                                             ; preds = %1505, %1514, %1483
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1484) #12
  br label %1528

1528:                                             ; preds = %1454, %1450, %1474, %1527, %1463, %1459, %1416, %1398
  %1529 = bitcast %"class.v8::internal::Heap"** %99 to i64*
  %1530 = load i64, i64* %1529, align 8
  %1531 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1532 = icmp eq i8 %1531, 0
  br i1 %1532, label %1635, label %1533

1533:                                             ; preds = %1528
  %1534 = add i64 %1, 7
  %1535 = inttoptr i64 %1534 to i16*
  %1536 = load atomic i16, i16* %1535 monotonic, align 2
  switch i16 %1536, label %1635 [
    i16 1085, label %1537
    i16 1057, label %1537
  ]

1537:                                             ; preds = %1533, %1533
  %1538 = bitcast %"class.v8::internal::HeapObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1538) #12
  %1539 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1539, align 8
  %1540 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %7, i64 %1) #12
  %1541 = sext i32 %1540 to i64
  %1542 = add i64 %101, %1541
  %1543 = add i64 %1542, 4
  %1544 = and i64 %1543, -262144
  %1545 = inttoptr i64 %1544 to %"class.v8::internal::Page"*
  %1546 = icmp eq %"class.v8::internal::Page"* %103, %1545
  br i1 %1546, label %1547, label %1577

1547:                                             ; preds = %1537
  %1548 = add i64 %1541, %3
  %1549 = add i64 %1530, -41416
  %1550 = inttoptr i64 %1549 to %"class.v8::internal::Isolate"*
  %1551 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1550, i64 0, i32 0, i32 7, i32 0, i64 534
  %1552 = load i64, i64* %1551, align 8
  %1553 = inttoptr i64 %1542 to i32*
  %1554 = load atomic i32, i32* %1553 monotonic, align 4
  %1555 = trunc i64 %1552 to i32
  %1556 = icmp eq i32 %1554, %1555
  br i1 %1556, label %1557, label %1577

1557:                                             ; preds = %1547
  %1558 = load i64, i64* %108, align 8
  %1559 = and i64 %1558, 524288
  %1560 = icmp eq i64 %1559, 0
  br i1 %1560, label %1578, label %1561

1561:                                             ; preds = %1557
  %1562 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 8, i32 0
  %1563 = bitcast %"struct.std::__1::__atomic_base.69"* %1562 to i64*
  %1564 = load atomic i64, i64* %1563 seq_cst, align 64
  %1565 = inttoptr i64 %1564 to %"class.v8::internal::SemiSpace"*
  %1566 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1565, i64 0, i32 5
  %1567 = load i64, i64* %1566, align 8
  %1568 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 3
  %1569 = load i64, i64* %1568, align 8
  %1570 = icmp ugt i64 %1569, %1567
  br i1 %1570, label %1577, label %1571

1571:                                             ; preds = %1561
  %1572 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %103, i64 0, i32 0, i32 0, i32 4
  %1573 = load i64, i64* %1572, align 32
  %1574 = icmp ule i64 %1573, %1567
  %1575 = icmp ult i64 %101, %1567
  %1576 = or i1 %1575, %1574
  br i1 %1576, label %1577, label %1578

1577:                                             ; preds = %1571, %1561, %1547, %1537
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1538) #12
  br label %1635

1578:                                             ; preds = %1571, %1557
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1538) #12
  %1579 = trunc i64 %1548 to i32
  %1580 = icmp eq i32 %1579, 0
  br i1 %1580, label %1635, label %1581

1581:                                             ; preds = %1578
  %1582 = and i64 %1548, -4294967296
  %1583 = add i64 %1548, 3
  %1584 = inttoptr i64 %1583 to i32*
  %1585 = load i32, i32* %1584, align 4
  %1586 = zext i32 %1585 to i64
  %1587 = or i64 %1582, %1586
  %1588 = bitcast %"class.v8::internal::AllocationSite"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1588) #12
  %1589 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1587, i64* %1589, align 8
  %1590 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1591 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1591) #12
  %1592 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %10, %"class.v8::internal::AllocationSite"** %1592, align 8
  %1593 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1593) #12
  %1594 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1590, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %9) #12
  %1595 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1594, 0
  %1596 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1595, i64 3
  %1597 = bitcast %"struct.std::__1::__hash_node_base.518"* %1596 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1593) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1591) #12
  %1598 = load i64, i64* %1597, align 8
  %1599 = add i64 %1598, 1
  store i64 %1599, i64* %1597, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1588) #12
  br label %1635

1600:                                             ; preds = %1387
  %1601 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %1602 = load i64, i64* %1601, align 8
  %1603 = icmp ne i64 %1602, 0
  %1604 = sub i64 %1602, %658
  %1605 = icmp eq i64 %1604, %1211
  %1606 = and i1 %1603, %1605
  br i1 %1606, label %1607, label %1608

1607:                                             ; preds = %1600
  store i64 %1211, i64* %1601, align 8
  br label %1612

1608:                                             ; preds = %1600
  %1609 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1178, i64 0, i32 0
  %1610 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1609, align 8
  %1611 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1610, i64 %1211, i32 %4, i32 1) #12
  br label %1612

1612:                                             ; preds = %1608, %1607
  %1613 = load atomic i32, i32* %1389 acquire, align 4
  %1614 = add i32 %1613, 1
  %1615 = inttoptr i64 %2 to i32*
  %1616 = load i32, i32* %1615, align 4
  %1617 = and i32 %1616, 2
  %1618 = or i32 %1617, %1614
  store i32 %1618, i32* %1615, align 4
  %1619 = zext i32 %1618 to i64
  %1620 = and i64 %1619, 1
  %1621 = icmp ne i64 %1620, 0
  %1622 = icmp ne i32 %1618, 3
  %1623 = and i1 %1622, %1621
  br i1 %1623, label %1624, label %1708

1624:                                             ; preds = %1612
  %1625 = and i64 %2, -4294967296
  %1626 = and i64 %1619, 4294705152
  %1627 = or i64 %1626, %1625
  %1628 = inttoptr i64 %1627 to %"class.v8::internal::BasicMemoryChunk"*
  %1629 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1628, i64 0, i32 1
  %1630 = load i64, i64* %1629, align 8
  %1631 = lshr i64 %1630, 4
  %1632 = trunc i64 %1631 to i32
  %1633 = and i32 %1632, 1
  %1634 = xor i32 %1633, 1
  br label %1708

1635:                                             ; preds = %1581, %1578, %1577, %1533, %1528
  %1636 = inttoptr i64 %2 to i32*
  %1637 = load i32, i32* %1636, align 4
  %1638 = and i32 %1637, 2
  %1639 = trunc i64 %1207 to i32
  %1640 = or i32 %1638, %1639
  store i32 %1640, i32* %1636, align 4
  %1641 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %1642 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %1641, align 8
  %1643 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %1644 = load i32, i32* %1643, align 8
  %1645 = sext i32 %1644 to i64
  %1646 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1642, i64 0, i32 0, i64 %1645, i32 0
  %1647 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1646, align 8
  %1648 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1647, i64 0, i32 1
  %1649 = load i64, i64* %1648, align 8
  %1650 = icmp eq i64 %1649, 256
  br i1 %1650, label %1655, label %1651

1651:                                             ; preds = %1635
  %1652 = add i64 %1649, 1
  store i64 %1652, i64* %1648, align 8
  %1653 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1647, i64 0, i32 2, i64 %1649, i32 0, i32 0, i32 0, i32 0
  store i64 %1207, i64* %1653, align 8
  %1654 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1647, i64 0, i32 2, i64 %1649, i32 1
  br label %1700

1655:                                             ; preds = %1635
  %1656 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1642, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1656) #12
  %1657 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1642, i64 0, i32 1, i32 1
  %1658 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1657 to i64*
  %1659 = load i64, i64* %1658, align 8
  %1660 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1647 to i64*
  store i64 %1659, i64* %1660, align 8
  %1661 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1647 to i64
  store atomic volatile i64 %1661, i64* %1658 monotonic, align 8
  %1662 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1642, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1663 = atomicrmw add i64* %1662, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1656) #12
  %1664 = call i8* @_Znwm(i64 4112) #17
  %1665 = getelementptr inbounds i8, i8* %1664, i64 8
  %1666 = bitcast i8* %1665 to i64*
  store i64 0, i64* %1666, align 8
  %1667 = getelementptr inbounds i8, i8* %1664, i64 16
  %1668 = bitcast i8* %1667 to %"struct.std::__1::pair.1282"*
  %1669 = getelementptr inbounds i8, i8* %1664, i64 4112
  %1670 = bitcast i8* %1669 to %"struct.std::__1::pair.1282"*
  br label %1671

1671:                                             ; preds = %1671, %1655
  %1672 = phi %"struct.std::__1::pair.1282"* [ %1668, %1655 ], [ %1689, %1671 ]
  %1673 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1673, align 8
  %1674 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 0, i32 1
  store i32 0, i32* %1674, align 8
  %1675 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1675, align 8
  %1676 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 1, i32 1
  store i32 0, i32* %1676, align 8
  %1677 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1677, align 8
  %1678 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 2, i32 1
  store i32 0, i32* %1678, align 8
  %1679 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1679, align 8
  %1680 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 3, i32 1
  store i32 0, i32* %1680, align 8
  %1681 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1681, align 8
  %1682 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 4, i32 1
  store i32 0, i32* %1682, align 8
  %1683 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1683, align 8
  %1684 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 5, i32 1
  store i32 0, i32* %1684, align 8
  %1685 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1685, align 8
  %1686 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 6, i32 1
  store i32 0, i32* %1686, align 8
  %1687 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1687, align 8
  %1688 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 7, i32 1
  store i32 0, i32* %1688, align 8
  %1689 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1672, i64 8
  %1690 = icmp eq %"struct.std::__1::pair.1282"* %1689, %1670
  br i1 %1690, label %1691, label %1671

1691:                                             ; preds = %1671
  %1692 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1646 to i8**
  store i8* %1664, i8** %1692, align 8
  %1693 = bitcast i8* %1664 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1694 = load i64, i64* %1666, align 8
  %1695 = icmp eq i64 %1694, 256
  br i1 %1695, label %1702, label %1696

1696:                                             ; preds = %1691
  %1697 = add i64 %1694, 1
  store i64 %1697, i64* %1666, align 8
  %1698 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1693, i64 0, i32 2, i64 %1694, i32 0, i32 0, i32 0, i32 0
  store i64 %1207, i64* %1698, align 8
  %1699 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1693, i64 0, i32 2, i64 %1694, i32 1
  br label %1700

1700:                                             ; preds = %1651, %1696
  %1701 = phi i32* [ %1699, %1696 ], [ %1654, %1651 ]
  store i32 %4, i32* %1701, align 8
  br label %1702

1702:                                             ; preds = %1700, %1691
  %1703 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %1704 = load i64, i64* %1703, align 8
  %1705 = add i64 %1704, %658
  store i64 %1705, i64* %1703, align 8
  br label %1708

1706:                                             ; preds = %1206
  %1707 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %99, align 8
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %1707, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

1708:                                             ; preds = %1702, %1624, %1612, %1173, %1095, %1083, %649, %571, %559, %76, %71, %43, %25
  %1709 = phi i32 [ 1, %25 ], [ 0, %43 ], [ 0, %71 ], [ 0, %76 ], [ 1, %559 ], [ %581, %571 ], [ 0, %649 ], [ 1, %1083 ], [ %1105, %1095 ], [ 1, %1173 ], [ 1, %1612 ], [ %1634, %1624 ], [ 0, %1702 ]
  ret i32 %1709
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal9Scavenger25EvacuateShortcutCandidateINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ConsStringEi(%"class.v8::internal::Scavenger"*, i64, i64, i64, i32) local_unnamed_addr #7 comdat align 2 {
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = alloca %"class.v8::internal::HeapObject", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.1327", align 1
  %10 = alloca %"class.v8::internal::AllocationSite", align 8
  %11 = alloca %"class.v8::internal::HeapObject", align 8
  %12 = alloca %"class.v8::internal::HeapObject", align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.1327", align 1
  %15 = alloca %"class.v8::internal::AllocationSite", align 8
  %16 = alloca %"class.v8::internal::HeapObject", align 8
  %17 = alloca %"class.v8::internal::HeapObject", align 8
  %18 = alloca %"class.std::__1::tuple", align 8
  %19 = alloca %"class.std::__1::tuple.1327", align 1
  %20 = alloca %"class.v8::internal::AllocationSite", align 8
  %21 = alloca %"struct.std::__1::pair.1246", align 8
  %22 = alloca %"class.v8::internal::HeapObject", align 8
  %23 = alloca %"class.v8::internal::HeapObject", align 8
  %24 = alloca %"class.std::__1::tuple", align 8
  %25 = alloca %"class.std::__1::tuple.1327", align 1
  %26 = alloca %"class.v8::internal::AllocationSite", align 8
  %27 = alloca %"class.v8::internal::HeapObject", align 8
  %28 = alloca %"class.v8::internal::HeapObject", align 8
  %29 = alloca %"class.std::__1::tuple", align 8
  %30 = alloca %"class.std::__1::tuple.1327", align 1
  %31 = alloca %"class.v8::internal::AllocationSite", align 8
  %32 = alloca %"class.v8::internal::HeapObject", align 8
  %33 = alloca %"class.v8::internal::HeapObject", align 8
  %34 = alloca %"class.std::__1::tuple", align 8
  %35 = alloca %"class.std::__1::tuple.1327", align 1
  %36 = alloca %"class.v8::internal::AllocationSite", align 8
  %37 = alloca %"struct.std::__1::pair.1246", align 8
  %38 = alloca %"class.v8::internal::HeapObject", align 8
  %39 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %1777

42:                                               ; preds = %5
  %43 = add i64 %3, 15
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %47 = bitcast %"class.v8::internal::Heap"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, -41416
  %50 = inttoptr i64 %49 to %"class.v8::internal::Isolate"*
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 0, i32 7, i32 0, i64 9
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %45, %53
  br i1 %54, label %55, label %1777

55:                                               ; preds = %42
  %56 = and i64 %3, -4294967296
  %57 = bitcast %"class.v8::internal::HeapObject"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  %58 = add i64 %3, 11
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %56, %61
  %63 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %38, i64 0, i32 0, i32 0, i32 0
  store i64 %62, i64* %63, align 8
  %64 = inttoptr i64 %2 to i32*
  %65 = load i32, i32* %64, align 4
  %66 = and i32 %65, 2
  %67 = or i32 %66, %60
  store i32 %67, i32* %64, align 4
  %68 = load i64, i64* %63, align 8
  %69 = and i64 %68, -262144
  %70 = inttoptr i64 %69 to %"class.v8::internal::BasicMemoryChunk"*
  %71 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %70, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %55
  %76 = add i64 %3, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = trunc i64 %68 to i32
  %79 = add i32 %78, -1
  store atomic volatile i32 %79, i32* %77 release, align 4
  br label %1775

80:                                               ; preds = %55
  %81 = and i64 %68, -4294967296
  %82 = add i64 %68, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 acquire, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = and i64 %85, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %104

89:                                               ; preds = %80
  %90 = add i64 %86, 1
  %91 = load i32, i32* %64, align 4
  %92 = and i32 %91, 2
  %93 = trunc i64 %90 to i32
  %94 = or i32 %92, %93
  store i32 %94, i32* %64, align 4
  %95 = add i64 %3, -1
  %96 = inttoptr i64 %95 to i32*
  store atomic volatile i32 %84, i32* %96 release, align 4
  %97 = and i64 %90, -262144
  %98 = inttoptr i64 %97 to %"class.v8::internal::BasicMemoryChunk"*
  %99 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %98, i64 0, i32 1
  %100 = load i64, i64* %99, align 8
  %101 = and i64 %100, 24
  %102 = icmp eq i64 %101, 0
  %103 = zext i1 %102 to i32
  br label %1775

104:                                              ; preds = %80
  %105 = load i64, i64* %63, align 8
  %106 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %38, i64 %86) #12
  %107 = add i64 %86, 6
  %108 = inttoptr i64 %107 to i8*
  %109 = load atomic i8, i8* %108 monotonic, align 1
  %110 = icmp ugt i8 %109, 5
  %111 = and i64 %105, -262144
  %112 = inttoptr i64 %111 to %"class.v8::internal::BasicMemoryChunk"*
  %113 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %112, i64 0, i32 1
  %114 = load i64, i64* %113, align 8
  %115 = and i64 %114, 24
  %116 = icmp ne i64 %115, 0
  %117 = and i64 %114, 32
  %118 = icmp ne i64 %117, 0
  %119 = and i1 %118, %116
  br i1 %119, label %120, label %175, !prof !29

120:                                              ; preds = %104
  %121 = add i64 %105, -1
  %122 = trunc i64 %121 to i32
  %123 = inttoptr i64 %121 to i32*
  %124 = cmpxchg volatile i32* %123, i32 %84, i32 %122 release monotonic
  %125 = extractvalue { i32, i1 } %124, 1
  br i1 %125, label %126, label %1769

126:                                              ; preds = %120
  %127 = bitcast %"struct.std::__1::pair.1246"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %127) #12
  %128 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %128, align 8
  %129 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %86, i64* %129, align 8
  %130 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %131 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0
  %132 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %130, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %131, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %127) #12
  %133 = sext i32 %106 to i64
  %134 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %135 = load i64, i64* %134, align 8
  %136 = add i64 %135, %133
  store i64 %136, i64* %134, align 8
  br i1 %110, label %137, label %1769

137:                                              ; preds = %126
  %138 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %139 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %138, align 8
  %140 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %141 = load i32, i32* %140, align 8
  %142 = sext i32 %141 to i64
  %143 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %139, i64 0, i32 1, i32 0, i64 %142, i32 0
  %144 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %143, align 8
  %145 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %144, i64 0, i32 1
  %146 = load i64, i64* %145, align 8
  %147 = icmp eq i64 %146, 4
  br i1 %147, label %153, label %148

148:                                              ; preds = %137
  %149 = add i64 %146, 1
  store i64 %149, i64* %145, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %144, i64 0, i32 2, i64 %146, i32 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %144, i64 0, i32 2, i64 %146, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %86, i64* %151, align 8
  %152 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %144, i64 0, i32 2, i64 %146, i32 2
  store i32 %106, i32* %152, align 8
  br label %1769

153:                                              ; preds = %137
  %154 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %139, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %154) #12
  %155 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %139, i64 0, i32 1, i32 1, i32 1
  %156 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %155 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %144 to i64*
  store i64 %157, i64* %158, align 8
  %159 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %144 to i64
  store atomic volatile i64 %159, i64* %156 monotonic, align 8
  %160 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %139, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %161 = atomicrmw add i64* %160, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %154) #12
  %162 = call i8* @_Znwm(i64 112) #17
  %163 = getelementptr inbounds i8, i8* %162, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 16, i1 false) #12
  %164 = getelementptr inbounds i8, i8* %162, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 16, i1 false) #12
  %165 = getelementptr inbounds i8, i8* %162, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #12
  %166 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %143 to i8**
  store i8* %162, i8** %166, align 8
  %167 = getelementptr inbounds i8, i8* %162, i64 8
  %168 = bitcast i8* %167 to i64*
  store i64 1, i64* %168, align 8
  %169 = getelementptr inbounds i8, i8* %162, i64 16
  %170 = bitcast i8* %169 to i64*
  store i64 %105, i64* %170, align 8
  %171 = getelementptr inbounds i8, i8* %162, i64 24
  %172 = bitcast i8* %171 to i64*
  store i64 %86, i64* %172, align 8
  %173 = getelementptr inbounds i8, i8* %162, i64 32
  %174 = bitcast i8* %173 to i32*
  store i32 %106, i32* %174, align 8
  br label %1769

175:                                              ; preds = %104
  %176 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  %177 = add i64 %105, -1
  %178 = and i64 %177, -262144
  %179 = inttoptr i64 %178 to %"class.v8::internal::Page"*
  %180 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %176, i64 0, i32 24
  %181 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %180, align 8
  %182 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %181, i64 0, i32 5, i32 5
  %183 = load i64, i64* %182, align 8
  %184 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  %186 = and i64 %185, 524288
  %187 = icmp eq i64 %186, 0
  br i1 %187, label %198, label %188

188:                                              ; preds = %175
  %189 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 3
  %190 = load i64, i64* %189, align 8
  %191 = icmp ugt i64 %190, %183
  br i1 %191, label %725, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 4
  %194 = load i64, i64* %193, align 32
  %195 = icmp ult i64 %194, %183
  %196 = icmp ugt i64 %183, %177
  %197 = or i1 %196, %195
  br i1 %197, label %725, label %198

198:                                              ; preds = %192, %175
  %199 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %200 = icmp sgt i32 %106, 8192
  br i1 %200, label %201, label %226

201:                                              ; preds = %198
  %202 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %203 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %202, align 8
  %204 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %203, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %204) #12
  %205 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %203, i64 0, i32 0
  %206 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %203, i64 0, i32 0, i32 1, i32 1
  %207 = load i64, i64* %206, align 8
  %208 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %203, i64 0, i32 0, i32 1, i32 2
  %209 = load i64, i64* %208, align 8
  %210 = sext i32 %106 to i64
  %211 = add i64 %207, %210
  %212 = icmp ult i64 %209, %211
  br i1 %212, label %222, label %213

213:                                              ; preds = %201
  %214 = add i64 %207, 1
  store i64 %211, i64* %206, align 8
  %215 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %216 = icmp eq i8 %215, 0
  br i1 %216, label %218, label %217

217:                                              ; preds = %213
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %205, i32 2) #12
  br label %218

218:                                              ; preds = %217, %213
  %219 = and i64 %214, 1
  %220 = icmp eq i64 %219, 0
  br i1 %220, label %221, label %224, !prof !29

221:                                              ; preds = %218
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

222:                                              ; preds = %201
  %223 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %203, i32 %106, i32 0, i32 2) #12
  br label %224

224:                                              ; preds = %222, %218
  %225 = phi i64 [ %223, %222 ], [ %214, %218 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %204) #12
  br label %228

226:                                              ; preds = %198
  %227 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %199, i32 %106, i32 0) #12
  br label %228

228:                                              ; preds = %226, %224
  %229 = phi i64 [ %225, %224 ], [ %227, %226 ]
  %230 = and i64 %229, 1
  %231 = icmp eq i64 %230, 0
  br i1 %231, label %725, label %232

232:                                              ; preds = %228
  %233 = add i64 %229, -1
  %234 = inttoptr i64 %233 to i32*
  store atomic volatile i32 %84, i32* %234 monotonic, align 4
  %235 = add i64 %229, 3
  %236 = add i64 %105, 3
  %237 = add nsw i32 %106, -4
  %238 = sdiv i32 %237, 4
  %239 = sext i32 %238 to i64
  %240 = inttoptr i64 %235 to i32*
  %241 = inttoptr i64 %235 to i8*
  %242 = inttoptr i64 %236 to i32*
  %243 = inttoptr i64 %236 to i8*
  %244 = inttoptr i64 %235 to i8*
  %245 = add i32 %106, -1
  %246 = icmp ult i32 %245, 7
  br i1 %246, label %408, label %247

247:                                              ; preds = %232
  %248 = icmp ult i32 %238, 16
  br i1 %248, label %249, label %394

249:                                              ; preds = %247
  %250 = icmp ult i32 %238, 8
  br i1 %250, label %341, label %251

251:                                              ; preds = %249
  %252 = getelementptr i32, i32* %240, i64 %239
  %253 = bitcast i32* %252 to i8*
  %254 = getelementptr i32, i32* %242, i64 %239
  %255 = bitcast i32* %254 to i8*
  %256 = icmp ult i8* %241, %255
  %257 = icmp ult i8* %243, %253
  %258 = and i1 %256, %257
  br i1 %258, label %341, label %259

259:                                              ; preds = %251
  %260 = and i64 %239, -8
  %261 = getelementptr i32, i32* %242, i64 %260
  %262 = sub nsw i64 %239, %260
  %263 = getelementptr i32, i32* %240, i64 %260
  %264 = add nsw i64 %260, -8
  %265 = lshr exact i64 %264, 3
  %266 = add nuw nsw i64 %265, 1
  %267 = and i64 %266, 3
  %268 = icmp ult i64 %264, 24
  br i1 %268, label %320, label %269

269:                                              ; preds = %259
  %270 = sub nsw i64 %266, %267
  br label %271

271:                                              ; preds = %271, %269
  %272 = phi i64 [ 0, %269 ], [ %317, %271 ]
  %273 = phi i64 [ %270, %269 ], [ %318, %271 ]
  %274 = getelementptr i32, i32* %242, i64 %272
  %275 = getelementptr i32, i32* %240, i64 %272
  %276 = bitcast i32* %274 to <4 x i32>*
  %277 = load <4 x i32>, <4 x i32>* %276, align 4, !alias.scope !153
  %278 = getelementptr i32, i32* %274, i64 4
  %279 = bitcast i32* %278 to <4 x i32>*
  %280 = load <4 x i32>, <4 x i32>* %279, align 4, !alias.scope !153
  %281 = bitcast i32* %275 to <4 x i32>*
  store <4 x i32> %277, <4 x i32>* %281, align 4, !alias.scope !156, !noalias !153
  %282 = getelementptr i32, i32* %275, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %280, <4 x i32>* %283, align 4, !alias.scope !156, !noalias !153
  %284 = or i64 %272, 8
  %285 = getelementptr i32, i32* %242, i64 %284
  %286 = getelementptr i32, i32* %240, i64 %284
  %287 = bitcast i32* %285 to <4 x i32>*
  %288 = load <4 x i32>, <4 x i32>* %287, align 4, !alias.scope !153
  %289 = getelementptr i32, i32* %285, i64 4
  %290 = bitcast i32* %289 to <4 x i32>*
  %291 = load <4 x i32>, <4 x i32>* %290, align 4, !alias.scope !153
  %292 = bitcast i32* %286 to <4 x i32>*
  store <4 x i32> %288, <4 x i32>* %292, align 4, !alias.scope !156, !noalias !153
  %293 = getelementptr i32, i32* %286, i64 4
  %294 = bitcast i32* %293 to <4 x i32>*
  store <4 x i32> %291, <4 x i32>* %294, align 4, !alias.scope !156, !noalias !153
  %295 = or i64 %272, 16
  %296 = getelementptr i32, i32* %242, i64 %295
  %297 = getelementptr i32, i32* %240, i64 %295
  %298 = bitcast i32* %296 to <4 x i32>*
  %299 = load <4 x i32>, <4 x i32>* %298, align 4, !alias.scope !153
  %300 = getelementptr i32, i32* %296, i64 4
  %301 = bitcast i32* %300 to <4 x i32>*
  %302 = load <4 x i32>, <4 x i32>* %301, align 4, !alias.scope !153
  %303 = bitcast i32* %297 to <4 x i32>*
  store <4 x i32> %299, <4 x i32>* %303, align 4, !alias.scope !156, !noalias !153
  %304 = getelementptr i32, i32* %297, i64 4
  %305 = bitcast i32* %304 to <4 x i32>*
  store <4 x i32> %302, <4 x i32>* %305, align 4, !alias.scope !156, !noalias !153
  %306 = or i64 %272, 24
  %307 = getelementptr i32, i32* %242, i64 %306
  %308 = getelementptr i32, i32* %240, i64 %306
  %309 = bitcast i32* %307 to <4 x i32>*
  %310 = load <4 x i32>, <4 x i32>* %309, align 4, !alias.scope !153
  %311 = getelementptr i32, i32* %307, i64 4
  %312 = bitcast i32* %311 to <4 x i32>*
  %313 = load <4 x i32>, <4 x i32>* %312, align 4, !alias.scope !153
  %314 = bitcast i32* %308 to <4 x i32>*
  store <4 x i32> %310, <4 x i32>* %314, align 4, !alias.scope !156, !noalias !153
  %315 = getelementptr i32, i32* %308, i64 4
  %316 = bitcast i32* %315 to <4 x i32>*
  store <4 x i32> %313, <4 x i32>* %316, align 4, !alias.scope !156, !noalias !153
  %317 = add i64 %272, 32
  %318 = add i64 %273, -4
  %319 = icmp eq i64 %318, 0
  br i1 %319, label %320, label %271, !llvm.loop !158

320:                                              ; preds = %271, %259
  %321 = phi i64 [ 0, %259 ], [ %317, %271 ]
  %322 = icmp eq i64 %267, 0
  br i1 %322, label %339, label %323

323:                                              ; preds = %320, %323
  %324 = phi i64 [ %336, %323 ], [ %321, %320 ]
  %325 = phi i64 [ %337, %323 ], [ %267, %320 ]
  %326 = getelementptr i32, i32* %242, i64 %324
  %327 = getelementptr i32, i32* %240, i64 %324
  %328 = bitcast i32* %326 to <4 x i32>*
  %329 = load <4 x i32>, <4 x i32>* %328, align 4, !alias.scope !153
  %330 = getelementptr i32, i32* %326, i64 4
  %331 = bitcast i32* %330 to <4 x i32>*
  %332 = load <4 x i32>, <4 x i32>* %331, align 4, !alias.scope !153
  %333 = bitcast i32* %327 to <4 x i32>*
  store <4 x i32> %329, <4 x i32>* %333, align 4, !alias.scope !156, !noalias !153
  %334 = getelementptr i32, i32* %327, i64 4
  %335 = bitcast i32* %334 to <4 x i32>*
  store <4 x i32> %332, <4 x i32>* %335, align 4, !alias.scope !156, !noalias !153
  %336 = add i64 %324, 8
  %337 = add i64 %325, -1
  %338 = icmp eq i64 %337, 0
  br i1 %338, label %339, label %323, !llvm.loop !159

339:                                              ; preds = %323, %320
  %340 = icmp eq i64 %260, %239
  br i1 %340, label %408, label %341

341:                                              ; preds = %339, %251, %249
  %342 = phi i32* [ %242, %251 ], [ %242, %249 ], [ %261, %339 ]
  %343 = phi i64 [ %239, %251 ], [ %239, %249 ], [ %262, %339 ]
  %344 = phi i32* [ %240, %251 ], [ %240, %249 ], [ %263, %339 ]
  %345 = add nsw i64 %343, -1
  %346 = and i64 %343, 7
  %347 = icmp eq i64 %346, 0
  br i1 %347, label %359, label %348

348:                                              ; preds = %341, %348
  %349 = phi i32* [ %354, %348 ], [ %342, %341 ]
  %350 = phi i64 [ %353, %348 ], [ %343, %341 ]
  %351 = phi i32* [ %356, %348 ], [ %344, %341 ]
  %352 = phi i64 [ %357, %348 ], [ %346, %341 ]
  %353 = add i64 %350, -1
  %354 = getelementptr inbounds i32, i32* %349, i64 1
  %355 = load i32, i32* %349, align 4
  %356 = getelementptr inbounds i32, i32* %351, i64 1
  store i32 %355, i32* %351, align 4
  %357 = add i64 %352, -1
  %358 = icmp eq i64 %357, 0
  br i1 %358, label %359, label %348, !llvm.loop !160

359:                                              ; preds = %348, %341
  %360 = phi i32* [ %342, %341 ], [ %354, %348 ]
  %361 = phi i64 [ %343, %341 ], [ %353, %348 ]
  %362 = phi i32* [ %344, %341 ], [ %356, %348 ]
  %363 = icmp ult i64 %345, 7
  br i1 %363, label %408, label %364

364:                                              ; preds = %359, %364
  %365 = phi i32* [ %390, %364 ], [ %360, %359 ]
  %366 = phi i64 [ %389, %364 ], [ %361, %359 ]
  %367 = phi i32* [ %392, %364 ], [ %362, %359 ]
  %368 = getelementptr inbounds i32, i32* %365, i64 1
  %369 = load i32, i32* %365, align 4
  %370 = getelementptr inbounds i32, i32* %367, i64 1
  store i32 %369, i32* %367, align 4
  %371 = getelementptr inbounds i32, i32* %365, i64 2
  %372 = load i32, i32* %368, align 4
  %373 = getelementptr inbounds i32, i32* %367, i64 2
  store i32 %372, i32* %370, align 4
  %374 = getelementptr inbounds i32, i32* %365, i64 3
  %375 = load i32, i32* %371, align 4
  %376 = getelementptr inbounds i32, i32* %367, i64 3
  store i32 %375, i32* %373, align 4
  %377 = getelementptr inbounds i32, i32* %365, i64 4
  %378 = load i32, i32* %374, align 4
  %379 = getelementptr inbounds i32, i32* %367, i64 4
  store i32 %378, i32* %376, align 4
  %380 = getelementptr inbounds i32, i32* %365, i64 5
  %381 = load i32, i32* %377, align 4
  %382 = getelementptr inbounds i32, i32* %367, i64 5
  store i32 %381, i32* %379, align 4
  %383 = getelementptr inbounds i32, i32* %365, i64 6
  %384 = load i32, i32* %380, align 4
  %385 = getelementptr inbounds i32, i32* %367, i64 6
  store i32 %384, i32* %382, align 4
  %386 = getelementptr inbounds i32, i32* %365, i64 7
  %387 = load i32, i32* %383, align 4
  %388 = getelementptr inbounds i32, i32* %367, i64 7
  store i32 %387, i32* %385, align 4
  %389 = add i64 %366, -8
  %390 = getelementptr inbounds i32, i32* %365, i64 8
  %391 = load i32, i32* %386, align 4
  %392 = getelementptr inbounds i32, i32* %367, i64 8
  store i32 %391, i32* %388, align 4
  %393 = icmp eq i64 %389, 0
  br i1 %393, label %408, label %364, !llvm.loop !161

394:                                              ; preds = %247
  %395 = inttoptr i64 %236 to i8*
  %396 = shl nsw i64 %239, 2
  %397 = add nsw i64 %396, -4
  %398 = lshr exact i64 %397, 2
  switch i64 %398, label %407 [
    i64 3, label %406
    i64 1, label %401
    i64 2, label %405
    i64 0, label %399
  ]

399:                                              ; preds = %394
  %400 = load i32, i32* %242, align 1
  store i32 %400, i32* %240, align 1
  br label %408

401:                                              ; preds = %394
  %402 = inttoptr i64 %236 to i64*
  %403 = inttoptr i64 %235 to i64*
  %404 = load i64, i64* %402, align 1
  store i64 %404, i64* %403, align 1
  br label %408

405:                                              ; preds = %394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %244, i8* align 1 %395, i64 12, i1 false) #12
  br label %408

406:                                              ; preds = %394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %244, i8* align 1 %395, i64 16, i1 false) #12
  br label %408

407:                                              ; preds = %394
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %244, i8* align 1 %395, i64 %396, i1 false) #12
  br label %408

408:                                              ; preds = %359, %364, %339, %407, %406, %405, %401, %399, %232
  %409 = trunc i64 %233 to i32
  %410 = inttoptr i64 %177 to i32*
  %411 = cmpxchg volatile i32* %410, i32 %84, i32 %409 release monotonic
  %412 = extractvalue { i32, i1 } %411, 1
  br i1 %412, label %413, label %620

413:                                              ; preds = %408
  %414 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %415 = load i8, i8* %414, align 8, !range !2
  %416 = icmp eq i8 %415, 0
  br i1 %416, label %419, label %417, !prof !60

417:                                              ; preds = %413
  %418 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %418, i64 %229, i64 %105, i32 %106) #12
  br label %419

419:                                              ; preds = %417, %413
  %420 = load i8, i8* %39, align 1, !range !2
  %421 = icmp eq i8 %420, 0
  br i1 %421, label %549, label %422

422:                                              ; preds = %419
  %423 = and i64 %229, -262144
  %424 = or i64 %423, 272
  %425 = sub i64 %229, %423
  %426 = trunc i64 %425 to i32
  %427 = lshr i32 %426, 2
  %428 = and i32 %427, 31
  %429 = shl i32 1, %428
  %430 = inttoptr i64 %424 to i32*
  %431 = lshr i64 %425, 7
  %432 = and i64 %431, 33554431
  %433 = getelementptr inbounds i32, i32* %430, i64 %432
  %434 = load atomic i32, i32* %433 acquire, align 4
  %435 = and i32 %434, %429
  %436 = icmp eq i32 %435, 0
  br i1 %436, label %446, label %437

437:                                              ; preds = %422
  %438 = shl i32 %429, 1
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds i32, i32* %433, i64 1
  %441 = select i1 %439, i32 1, i32 %438
  %442 = select i1 %439, i32* %440, i32* %433
  %443 = load atomic i32, i32* %442 acquire, align 4
  %444 = and i32 %443, %441
  %445 = icmp eq i32 %444, 0
  br i1 %445, label %446, label %549

446:                                              ; preds = %437, %422
  %447 = or i64 %111, 272
  %448 = sub i64 %105, %111
  %449 = trunc i64 %448 to i32
  %450 = lshr i32 %449, 2
  %451 = and i32 %450, 31
  %452 = shl i32 1, %451
  %453 = inttoptr i64 %447 to i32*
  %454 = lshr i64 %448, 7
  %455 = and i64 %454, 33554431
  %456 = getelementptr inbounds i32, i32* %453, i64 %455
  %457 = load atomic i32, i32* %456 acquire, align 4
  %458 = and i32 %457, %452
  %459 = icmp eq i32 %458, 0
  br i1 %459, label %480, label %460

460:                                              ; preds = %446
  %461 = shl i32 %452, 1
  %462 = icmp eq i32 %461, 0
  %463 = getelementptr inbounds i32, i32* %456, i64 1
  %464 = select i1 %462, i32 1, i32 %461
  %465 = select i1 %462, i32* %463, i32* %456
  %466 = load atomic i32, i32* %465 acquire, align 4
  %467 = and i32 %466, %464
  %468 = icmp eq i32 %467, 0
  br i1 %468, label %469, label %480

469:                                              ; preds = %460
  %470 = load atomic i32, i32* %433 monotonic, align 4
  br label %471

471:                                              ; preds = %475, %469
  %472 = phi i32 [ %470, %469 ], [ %478, %475 ]
  %473 = and i32 %472, %429
  %474 = icmp eq i32 %473, %429
  br i1 %474, label %549, label %475

475:                                              ; preds = %471
  %476 = or i32 %472, %429
  %477 = cmpxchg volatile i32* %433, i32 %472, i32 %476 release monotonic
  %478 = extractvalue { i32, i1 } %477, 0
  %479 = extractvalue { i32, i1 } %477, 1
  br i1 %479, label %549, label %471

480:                                              ; preds = %460, %446
  %481 = load atomic i32, i32* %456 acquire, align 4
  %482 = and i32 %481, %452
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %549, label %484

484:                                              ; preds = %480
  %485 = shl i32 %452, 1
  %486 = icmp eq i32 %485, 0
  %487 = getelementptr inbounds i32, i32* %456, i64 1
  %488 = select i1 %486, i32 1, i32 %485
  %489 = select i1 %486, i32* %487, i32* %456
  %490 = load atomic i32, i32* %489 acquire, align 4
  %491 = and i32 %490, %488
  %492 = icmp eq i32 %491, 0
  br i1 %492, label %549, label %493

493:                                              ; preds = %484
  %494 = load atomic i32, i32* %433 monotonic, align 4
  br label %495

495:                                              ; preds = %499, %493
  %496 = phi i32 [ %494, %493 ], [ %502, %499 ]
  %497 = and i32 %496, %429
  %498 = icmp eq i32 %497, %429
  br i1 %498, label %549, label %499

499:                                              ; preds = %495
  %500 = or i32 %496, %429
  %501 = cmpxchg volatile i32* %433, i32 %496, i32 %500 release monotonic
  %502 = extractvalue { i32, i1 } %501, 0
  %503 = extractvalue { i32, i1 } %501, 1
  br i1 %503, label %504, label %495

504:                                              ; preds = %499
  %505 = bitcast %"class.v8::internal::HeapObject"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %505) #12
  %506 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %16, i64 0, i32 0, i32 0, i32 0
  store i64 %229, i64* %506, align 8
  %507 = xor i64 %423, -1
  %508 = add i64 %229, %507
  %509 = trunc i64 %508 to i32
  %510 = lshr i32 %509, 2
  %511 = and i32 %510, 31
  %512 = shl i32 1, %511
  %513 = lshr i64 %508, 7
  %514 = and i64 %513, 33554431
  %515 = getelementptr inbounds i32, i32* %430, i64 %514
  %516 = load atomic i32, i32* %515 acquire, align 4
  %517 = and i32 %516, %512
  %518 = icmp eq i32 %517, 0
  br i1 %518, label %548, label %519

519:                                              ; preds = %504
  %520 = shl i32 %512, 1
  %521 = icmp eq i32 %520, 0
  %522 = getelementptr inbounds i32, i32* %515, i64 1
  %523 = select i1 %521, i32 1, i32 %520
  %524 = select i1 %521, i32* %522, i32* %515
  %525 = load atomic i32, i32* %524 monotonic, align 4
  br label %526

526:                                              ; preds = %530, %519
  %527 = phi i32 [ %525, %519 ], [ %533, %530 ]
  %528 = and i32 %527, %523
  %529 = icmp eq i32 %528, %523
  br i1 %529, label %548, label %530

530:                                              ; preds = %526
  %531 = or i32 %527, %523
  %532 = cmpxchg volatile i32* %524, i32 %527, i32 %531 release monotonic
  %533 = extractvalue { i32, i1 } %532, 0
  %534 = extractvalue { i32, i1 } %532, 1
  br i1 %534, label %535, label %526

535:                                              ; preds = %530
  %536 = inttoptr i64 %423 to %"class.v8::internal::MemoryChunk"*
  %537 = load i64, i64* %506, align 8
  %538 = and i64 %537, -4294967296
  %539 = add i64 %537, -1
  %540 = inttoptr i64 %539 to i32*
  %541 = load atomic i32, i32* %540 monotonic, align 4
  %542 = zext i32 %541 to i64
  %543 = or i64 %538, %542
  %544 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %16, i64 %543) #12
  %545 = sext i32 %544 to i64
  %546 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %536, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %547 = atomicrmw add i64* %546, i64 %545 seq_cst
  br label %548

548:                                              ; preds = %526, %535, %504
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %505) #12
  br label %549

549:                                              ; preds = %475, %471, %495, %548, %484, %480, %437, %419
  %550 = load i64, i64* %47, align 8
  %551 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %552 = icmp eq i8 %551, 0
  br i1 %552, label %655, label %553

553:                                              ; preds = %549
  %554 = add i64 %86, 7
  %555 = inttoptr i64 %554 to i16*
  %556 = load atomic i16, i16* %555 monotonic, align 2
  switch i16 %556, label %655 [
    i16 1085, label %557
    i16 1057, label %557
  ]

557:                                              ; preds = %553, %553
  %558 = bitcast %"class.v8::internal::HeapObject"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %558) #12
  %559 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %17, i64 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %559, align 8
  %560 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %17, i64 %86) #12
  %561 = sext i32 %560 to i64
  %562 = add i64 %177, %561
  %563 = add i64 %562, 4
  %564 = and i64 %563, -262144
  %565 = inttoptr i64 %564 to %"class.v8::internal::Page"*
  %566 = icmp eq %"class.v8::internal::Page"* %179, %565
  br i1 %566, label %567, label %597

567:                                              ; preds = %557
  %568 = add i64 %105, %561
  %569 = add i64 %550, -41416
  %570 = inttoptr i64 %569 to %"class.v8::internal::Isolate"*
  %571 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %570, i64 0, i32 0, i32 7, i32 0, i64 534
  %572 = load i64, i64* %571, align 8
  %573 = inttoptr i64 %562 to i32*
  %574 = load atomic i32, i32* %573 monotonic, align 4
  %575 = trunc i64 %572 to i32
  %576 = icmp eq i32 %574, %575
  br i1 %576, label %577, label %597

577:                                              ; preds = %567
  %578 = load i64, i64* %184, align 8
  %579 = and i64 %578, 524288
  %580 = icmp eq i64 %579, 0
  br i1 %580, label %598, label %581

581:                                              ; preds = %577
  %582 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 8, i32 0
  %583 = bitcast %"struct.std::__1::__atomic_base.69"* %582 to i64*
  %584 = load atomic i64, i64* %583 seq_cst, align 64
  %585 = inttoptr i64 %584 to %"class.v8::internal::SemiSpace"*
  %586 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %585, i64 0, i32 5
  %587 = load i64, i64* %586, align 8
  %588 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 3
  %589 = load i64, i64* %588, align 8
  %590 = icmp ugt i64 %589, %587
  br i1 %590, label %597, label %591

591:                                              ; preds = %581
  %592 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 4
  %593 = load i64, i64* %592, align 32
  %594 = icmp ule i64 %593, %587
  %595 = icmp ult i64 %177, %587
  %596 = or i1 %595, %594
  br i1 %596, label %597, label %598

597:                                              ; preds = %591, %581, %567, %557
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #12
  br label %655

598:                                              ; preds = %591, %577
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %558) #12
  %599 = trunc i64 %568 to i32
  %600 = icmp eq i32 %599, 0
  br i1 %600, label %655, label %601

601:                                              ; preds = %598
  %602 = and i64 %568, -4294967296
  %603 = add i64 %568, 3
  %604 = inttoptr i64 %603 to i32*
  %605 = load i32, i32* %604, align 4
  %606 = zext i32 %605 to i64
  %607 = or i64 %602, %606
  %608 = bitcast %"class.v8::internal::AllocationSite"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %608) #12
  %609 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %607, i64* %609, align 8
  %610 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %611 = bitcast %"class.std::__1::tuple"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %611) #12
  %612 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %20, %"class.v8::internal::AllocationSite"** %612, align 8
  %613 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %613) #12
  %614 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %610, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %18, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %19) #12
  %615 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %614, 0
  %616 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %615, i64 3
  %617 = bitcast %"struct.std::__1::__hash_node_base.518"* %616 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %613) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %611) #12
  %618 = load i64, i64* %617, align 8
  %619 = add i64 %618, 1
  store i64 %619, i64* %617, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %608) #12
  br label %655

620:                                              ; preds = %408
  %621 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %622 = load i64, i64* %621, align 8
  %623 = icmp eq i64 %622, 0
  br i1 %623, label %629, label %624

624:                                              ; preds = %620
  %625 = sext i32 %106 to i64
  %626 = sub i64 %622, %625
  %627 = icmp eq i64 %626, %233
  br i1 %627, label %628, label %629

628:                                              ; preds = %624
  store i64 %233, i64* %621, align 8
  br label %633

629:                                              ; preds = %624, %620
  %630 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %199, i64 0, i32 0
  %631 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %630, align 8
  %632 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %631, i64 %233, i32 %106, i32 1) #12
  br label %633

633:                                              ; preds = %629, %628
  %634 = load atomic i32, i32* %410 acquire, align 4
  %635 = add i32 %634, 1
  %636 = load i32, i32* %64, align 4
  %637 = and i32 %636, 2
  %638 = or i32 %637, %635
  store i32 %638, i32* %64, align 4
  %639 = zext i32 %638 to i64
  %640 = and i64 %639, 1
  %641 = icmp ne i64 %640, 0
  %642 = icmp ne i32 %638, 3
  %643 = and i1 %642, %641
  br i1 %643, label %644, label %1769

644:                                              ; preds = %633
  %645 = and i64 %2, -4294967296
  %646 = and i64 %639, 4294705152
  %647 = or i64 %646, %645
  %648 = inttoptr i64 %647 to %"class.v8::internal::BasicMemoryChunk"*
  %649 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %648, i64 0, i32 1
  %650 = load i64, i64* %649, align 8
  %651 = lshr i64 %650, 4
  %652 = trunc i64 %651 to i32
  %653 = and i32 %652, 1
  %654 = xor i32 %653, 1
  br label %1769

655:                                              ; preds = %601, %598, %597, %553, %549
  %656 = load i32, i32* %64, align 4
  %657 = and i32 %656, 2
  %658 = trunc i64 %229 to i32
  %659 = or i32 %657, %658
  store i32 %659, i32* %64, align 4
  br i1 %110, label %660, label %720

660:                                              ; preds = %655
  %661 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %662 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %661, align 8
  %663 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %664 = load i32, i32* %663, align 8
  %665 = sext i32 %664 to i64
  %666 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %662, i64 0, i32 0, i64 %665, i32 0
  %667 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %666, align 8
  %668 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %667, i64 0, i32 1
  %669 = load i64, i64* %668, align 8
  %670 = icmp eq i64 %669, 256
  br i1 %670, label %675, label %671

671:                                              ; preds = %660
  %672 = add i64 %669, 1
  store i64 %672, i64* %668, align 8
  %673 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %667, i64 0, i32 2, i64 %669, i32 0, i32 0, i32 0, i32 0
  store i64 %229, i64* %673, align 8
  %674 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %667, i64 0, i32 2, i64 %669, i32 1
  store i32 %106, i32* %674, align 8
  br label %720

675:                                              ; preds = %660
  %676 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %662, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %676) #12
  %677 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %662, i64 0, i32 1, i32 1
  %678 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %677 to i64*
  %679 = load i64, i64* %678, align 8
  %680 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %667 to i64*
  store i64 %679, i64* %680, align 8
  %681 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %667 to i64
  store atomic volatile i64 %681, i64* %678 monotonic, align 8
  %682 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %662, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %683 = atomicrmw add i64* %682, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %676) #12
  %684 = call i8* @_Znwm(i64 4112) #17
  %685 = getelementptr inbounds i8, i8* %684, i64 8
  %686 = bitcast i8* %685 to i64*
  store i64 0, i64* %686, align 8
  %687 = getelementptr inbounds i8, i8* %684, i64 16
  %688 = bitcast i8* %687 to %"struct.std::__1::pair.1282"*
  %689 = getelementptr inbounds i8, i8* %684, i64 4112
  %690 = bitcast i8* %689 to %"struct.std::__1::pair.1282"*
  br label %691

691:                                              ; preds = %691, %675
  %692 = phi %"struct.std::__1::pair.1282"* [ %688, %675 ], [ %709, %691 ]
  %693 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %693, align 8
  %694 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 0, i32 1
  store i32 0, i32* %694, align 8
  %695 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %695, align 8
  %696 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 1, i32 1
  store i32 0, i32* %696, align 8
  %697 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %697, align 8
  %698 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 2, i32 1
  store i32 0, i32* %698, align 8
  %699 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %699, align 8
  %700 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 3, i32 1
  store i32 0, i32* %700, align 8
  %701 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %701, align 8
  %702 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 4, i32 1
  store i32 0, i32* %702, align 8
  %703 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %703, align 8
  %704 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 5, i32 1
  store i32 0, i32* %704, align 8
  %705 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %705, align 8
  %706 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 6, i32 1
  store i32 0, i32* %706, align 8
  %707 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %707, align 8
  %708 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 7, i32 1
  store i32 0, i32* %708, align 8
  %709 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %692, i64 8
  %710 = icmp eq %"struct.std::__1::pair.1282"* %709, %690
  br i1 %710, label %711, label %691

711:                                              ; preds = %691
  %712 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %666 to i8**
  store i8* %684, i8** %712, align 8
  %713 = bitcast i8* %684 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %714 = load i64, i64* %686, align 8
  %715 = icmp eq i64 %714, 256
  br i1 %715, label %720, label %716

716:                                              ; preds = %711
  %717 = add i64 %714, 1
  store i64 %717, i64* %686, align 8
  %718 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %713, i64 0, i32 2, i64 %714, i32 0, i32 0, i32 0, i32 0
  store i64 %229, i64* %718, align 8
  %719 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %713, i64 0, i32 2, i64 %714, i32 1
  store i32 %106, i32* %719, align 8
  br label %720

720:                                              ; preds = %716, %711, %671, %655
  %721 = sext i32 %106 to i64
  %722 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %723 = load i64, i64* %722, align 8
  %724 = add i64 %723, %721
  store i64 %724, i64* %722, align 8
  br label %1769

725:                                              ; preds = %228, %192, %188
  %726 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %727 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %728 = load i64, i64* %727, align 8
  %729 = sext i32 %106 to i64
  %730 = add i64 %728, %729
  %731 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %732 = load i64, i64* %731, align 8
  %733 = icmp ugt i64 %730, %732
  br i1 %733, label %734, label %739

734:                                              ; preds = %725
  %735 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %736 = load i32, i32* %735, align 8
  %737 = sext i32 %736 to i64
  %738 = shl nsw i64 %737, 1
  br label %744

739:                                              ; preds = %725
  store i64 %730, i64* %727, align 8
  %740 = add i64 %728, 1
  %741 = and i64 %740, 1
  %742 = icmp eq i64 %741, 0
  br i1 %742, label %743, label %744, !prof !29

743:                                              ; preds = %739
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

744:                                              ; preds = %739, %734
  %745 = phi i64 [ %738, %734 ], [ %740, %739 ]
  %746 = and i64 %745, 1
  %747 = icmp eq i64 %746, 0
  br i1 %747, label %748, label %752

748:                                              ; preds = %744
  %749 = call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %726, i32 %106, i32 0, i32 2) #12
  %750 = and i64 %749, 1
  %751 = icmp eq i64 %750, 0
  br i1 %751, label %1243, label %752

752:                                              ; preds = %748, %744
  %753 = phi i64 [ %749, %748 ], [ %745, %744 ]
  %754 = add i64 %753, -1
  %755 = inttoptr i64 %754 to i32*
  store atomic volatile i32 %84, i32* %755 monotonic, align 4
  %756 = add i64 %753, 3
  %757 = add i64 %105, 3
  %758 = add nsw i32 %106, -4
  %759 = sdiv i32 %758, 4
  %760 = sext i32 %759 to i64
  %761 = inttoptr i64 %756 to i32*
  %762 = inttoptr i64 %756 to i8*
  %763 = inttoptr i64 %757 to i32*
  %764 = inttoptr i64 %757 to i8*
  %765 = inttoptr i64 %756 to i8*
  %766 = add i32 %106, -1
  %767 = icmp ult i32 %766, 7
  br i1 %767, label %929, label %768

768:                                              ; preds = %752
  %769 = icmp ult i32 %759, 16
  br i1 %769, label %770, label %915

770:                                              ; preds = %768
  %771 = icmp ult i32 %759, 8
  br i1 %771, label %862, label %772

772:                                              ; preds = %770
  %773 = getelementptr i32, i32* %761, i64 %760
  %774 = bitcast i32* %773 to i8*
  %775 = getelementptr i32, i32* %763, i64 %760
  %776 = bitcast i32* %775 to i8*
  %777 = icmp ult i8* %762, %776
  %778 = icmp ult i8* %764, %774
  %779 = and i1 %777, %778
  br i1 %779, label %862, label %780

780:                                              ; preds = %772
  %781 = and i64 %760, -8
  %782 = getelementptr i32, i32* %763, i64 %781
  %783 = sub nsw i64 %760, %781
  %784 = getelementptr i32, i32* %761, i64 %781
  %785 = add nsw i64 %781, -8
  %786 = lshr exact i64 %785, 3
  %787 = add nuw nsw i64 %786, 1
  %788 = and i64 %787, 3
  %789 = icmp ult i64 %785, 24
  br i1 %789, label %841, label %790

790:                                              ; preds = %780
  %791 = sub nsw i64 %787, %788
  br label %792

792:                                              ; preds = %792, %790
  %793 = phi i64 [ 0, %790 ], [ %838, %792 ]
  %794 = phi i64 [ %791, %790 ], [ %839, %792 ]
  %795 = getelementptr i32, i32* %763, i64 %793
  %796 = getelementptr i32, i32* %761, i64 %793
  %797 = bitcast i32* %795 to <4 x i32>*
  %798 = load <4 x i32>, <4 x i32>* %797, align 4, !alias.scope !162
  %799 = getelementptr i32, i32* %795, i64 4
  %800 = bitcast i32* %799 to <4 x i32>*
  %801 = load <4 x i32>, <4 x i32>* %800, align 4, !alias.scope !162
  %802 = bitcast i32* %796 to <4 x i32>*
  store <4 x i32> %798, <4 x i32>* %802, align 4, !alias.scope !165, !noalias !162
  %803 = getelementptr i32, i32* %796, i64 4
  %804 = bitcast i32* %803 to <4 x i32>*
  store <4 x i32> %801, <4 x i32>* %804, align 4, !alias.scope !165, !noalias !162
  %805 = or i64 %793, 8
  %806 = getelementptr i32, i32* %763, i64 %805
  %807 = getelementptr i32, i32* %761, i64 %805
  %808 = bitcast i32* %806 to <4 x i32>*
  %809 = load <4 x i32>, <4 x i32>* %808, align 4, !alias.scope !162
  %810 = getelementptr i32, i32* %806, i64 4
  %811 = bitcast i32* %810 to <4 x i32>*
  %812 = load <4 x i32>, <4 x i32>* %811, align 4, !alias.scope !162
  %813 = bitcast i32* %807 to <4 x i32>*
  store <4 x i32> %809, <4 x i32>* %813, align 4, !alias.scope !165, !noalias !162
  %814 = getelementptr i32, i32* %807, i64 4
  %815 = bitcast i32* %814 to <4 x i32>*
  store <4 x i32> %812, <4 x i32>* %815, align 4, !alias.scope !165, !noalias !162
  %816 = or i64 %793, 16
  %817 = getelementptr i32, i32* %763, i64 %816
  %818 = getelementptr i32, i32* %761, i64 %816
  %819 = bitcast i32* %817 to <4 x i32>*
  %820 = load <4 x i32>, <4 x i32>* %819, align 4, !alias.scope !162
  %821 = getelementptr i32, i32* %817, i64 4
  %822 = bitcast i32* %821 to <4 x i32>*
  %823 = load <4 x i32>, <4 x i32>* %822, align 4, !alias.scope !162
  %824 = bitcast i32* %818 to <4 x i32>*
  store <4 x i32> %820, <4 x i32>* %824, align 4, !alias.scope !165, !noalias !162
  %825 = getelementptr i32, i32* %818, i64 4
  %826 = bitcast i32* %825 to <4 x i32>*
  store <4 x i32> %823, <4 x i32>* %826, align 4, !alias.scope !165, !noalias !162
  %827 = or i64 %793, 24
  %828 = getelementptr i32, i32* %763, i64 %827
  %829 = getelementptr i32, i32* %761, i64 %827
  %830 = bitcast i32* %828 to <4 x i32>*
  %831 = load <4 x i32>, <4 x i32>* %830, align 4, !alias.scope !162
  %832 = getelementptr i32, i32* %828, i64 4
  %833 = bitcast i32* %832 to <4 x i32>*
  %834 = load <4 x i32>, <4 x i32>* %833, align 4, !alias.scope !162
  %835 = bitcast i32* %829 to <4 x i32>*
  store <4 x i32> %831, <4 x i32>* %835, align 4, !alias.scope !165, !noalias !162
  %836 = getelementptr i32, i32* %829, i64 4
  %837 = bitcast i32* %836 to <4 x i32>*
  store <4 x i32> %834, <4 x i32>* %837, align 4, !alias.scope !165, !noalias !162
  %838 = add i64 %793, 32
  %839 = add i64 %794, -4
  %840 = icmp eq i64 %839, 0
  br i1 %840, label %841, label %792, !llvm.loop !167

841:                                              ; preds = %792, %780
  %842 = phi i64 [ 0, %780 ], [ %838, %792 ]
  %843 = icmp eq i64 %788, 0
  br i1 %843, label %860, label %844

844:                                              ; preds = %841, %844
  %845 = phi i64 [ %857, %844 ], [ %842, %841 ]
  %846 = phi i64 [ %858, %844 ], [ %788, %841 ]
  %847 = getelementptr i32, i32* %763, i64 %845
  %848 = getelementptr i32, i32* %761, i64 %845
  %849 = bitcast i32* %847 to <4 x i32>*
  %850 = load <4 x i32>, <4 x i32>* %849, align 4, !alias.scope !162
  %851 = getelementptr i32, i32* %847, i64 4
  %852 = bitcast i32* %851 to <4 x i32>*
  %853 = load <4 x i32>, <4 x i32>* %852, align 4, !alias.scope !162
  %854 = bitcast i32* %848 to <4 x i32>*
  store <4 x i32> %850, <4 x i32>* %854, align 4, !alias.scope !165, !noalias !162
  %855 = getelementptr i32, i32* %848, i64 4
  %856 = bitcast i32* %855 to <4 x i32>*
  store <4 x i32> %853, <4 x i32>* %856, align 4, !alias.scope !165, !noalias !162
  %857 = add i64 %845, 8
  %858 = add i64 %846, -1
  %859 = icmp eq i64 %858, 0
  br i1 %859, label %860, label %844, !llvm.loop !168

860:                                              ; preds = %844, %841
  %861 = icmp eq i64 %781, %760
  br i1 %861, label %929, label %862

862:                                              ; preds = %860, %772, %770
  %863 = phi i32* [ %763, %772 ], [ %763, %770 ], [ %782, %860 ]
  %864 = phi i64 [ %760, %772 ], [ %760, %770 ], [ %783, %860 ]
  %865 = phi i32* [ %761, %772 ], [ %761, %770 ], [ %784, %860 ]
  %866 = add nsw i64 %864, -1
  %867 = and i64 %864, 7
  %868 = icmp eq i64 %867, 0
  br i1 %868, label %880, label %869

869:                                              ; preds = %862, %869
  %870 = phi i32* [ %875, %869 ], [ %863, %862 ]
  %871 = phi i64 [ %874, %869 ], [ %864, %862 ]
  %872 = phi i32* [ %877, %869 ], [ %865, %862 ]
  %873 = phi i64 [ %878, %869 ], [ %867, %862 ]
  %874 = add i64 %871, -1
  %875 = getelementptr inbounds i32, i32* %870, i64 1
  %876 = load i32, i32* %870, align 4
  %877 = getelementptr inbounds i32, i32* %872, i64 1
  store i32 %876, i32* %872, align 4
  %878 = add i64 %873, -1
  %879 = icmp eq i64 %878, 0
  br i1 %879, label %880, label %869, !llvm.loop !169

880:                                              ; preds = %869, %862
  %881 = phi i32* [ %863, %862 ], [ %875, %869 ]
  %882 = phi i64 [ %864, %862 ], [ %874, %869 ]
  %883 = phi i32* [ %865, %862 ], [ %877, %869 ]
  %884 = icmp ult i64 %866, 7
  br i1 %884, label %929, label %885

885:                                              ; preds = %880, %885
  %886 = phi i32* [ %911, %885 ], [ %881, %880 ]
  %887 = phi i64 [ %910, %885 ], [ %882, %880 ]
  %888 = phi i32* [ %913, %885 ], [ %883, %880 ]
  %889 = getelementptr inbounds i32, i32* %886, i64 1
  %890 = load i32, i32* %886, align 4
  %891 = getelementptr inbounds i32, i32* %888, i64 1
  store i32 %890, i32* %888, align 4
  %892 = getelementptr inbounds i32, i32* %886, i64 2
  %893 = load i32, i32* %889, align 4
  %894 = getelementptr inbounds i32, i32* %888, i64 2
  store i32 %893, i32* %891, align 4
  %895 = getelementptr inbounds i32, i32* %886, i64 3
  %896 = load i32, i32* %892, align 4
  %897 = getelementptr inbounds i32, i32* %888, i64 3
  store i32 %896, i32* %894, align 4
  %898 = getelementptr inbounds i32, i32* %886, i64 4
  %899 = load i32, i32* %895, align 4
  %900 = getelementptr inbounds i32, i32* %888, i64 4
  store i32 %899, i32* %897, align 4
  %901 = getelementptr inbounds i32, i32* %886, i64 5
  %902 = load i32, i32* %898, align 4
  %903 = getelementptr inbounds i32, i32* %888, i64 5
  store i32 %902, i32* %900, align 4
  %904 = getelementptr inbounds i32, i32* %886, i64 6
  %905 = load i32, i32* %901, align 4
  %906 = getelementptr inbounds i32, i32* %888, i64 6
  store i32 %905, i32* %903, align 4
  %907 = getelementptr inbounds i32, i32* %886, i64 7
  %908 = load i32, i32* %904, align 4
  %909 = getelementptr inbounds i32, i32* %888, i64 7
  store i32 %908, i32* %906, align 4
  %910 = add i64 %887, -8
  %911 = getelementptr inbounds i32, i32* %886, i64 8
  %912 = load i32, i32* %907, align 4
  %913 = getelementptr inbounds i32, i32* %888, i64 8
  store i32 %912, i32* %909, align 4
  %914 = icmp eq i64 %910, 0
  br i1 %914, label %929, label %885, !llvm.loop !170

915:                                              ; preds = %768
  %916 = inttoptr i64 %757 to i8*
  %917 = shl nsw i64 %760, 2
  %918 = add nsw i64 %917, -4
  %919 = lshr exact i64 %918, 2
  switch i64 %919, label %928 [
    i64 3, label %927
    i64 1, label %922
    i64 2, label %926
    i64 0, label %920
  ]

920:                                              ; preds = %915
  %921 = load i32, i32* %763, align 1
  store i32 %921, i32* %761, align 1
  br label %929

922:                                              ; preds = %915
  %923 = inttoptr i64 %757 to i64*
  %924 = inttoptr i64 %756 to i64*
  %925 = load i64, i64* %923, align 1
  store i64 %925, i64* %924, align 1
  br label %929

926:                                              ; preds = %915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %765, i8* align 1 %916, i64 12, i1 false) #12
  br label %929

927:                                              ; preds = %915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %765, i8* align 1 %916, i64 16, i1 false) #12
  br label %929

928:                                              ; preds = %915
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %765, i8* align 1 %916, i64 %917, i1 false) #12
  br label %929

929:                                              ; preds = %880, %885, %860, %928, %927, %926, %922, %920, %752
  %930 = trunc i64 %754 to i32
  %931 = inttoptr i64 %177 to i32*
  %932 = cmpxchg volatile i32* %931, i32 %84, i32 %930 release monotonic
  %933 = extractvalue { i32, i1 } %932, 1
  br i1 %933, label %934, label %1141

934:                                              ; preds = %929
  %935 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %936 = load i8, i8* %935, align 8, !range !2
  %937 = icmp eq i8 %936, 0
  br i1 %937, label %940, label %938, !prof !60

938:                                              ; preds = %934
  %939 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %939, i64 %753, i64 %105, i32 %106) #12
  br label %940

940:                                              ; preds = %938, %934
  %941 = load i8, i8* %39, align 1, !range !2
  %942 = icmp eq i8 %941, 0
  br i1 %942, label %1070, label %943

943:                                              ; preds = %940
  %944 = and i64 %753, -262144
  %945 = or i64 %944, 272
  %946 = sub i64 %753, %944
  %947 = trunc i64 %946 to i32
  %948 = lshr i32 %947, 2
  %949 = and i32 %948, 31
  %950 = shl i32 1, %949
  %951 = inttoptr i64 %945 to i32*
  %952 = lshr i64 %946, 7
  %953 = and i64 %952, 33554431
  %954 = getelementptr inbounds i32, i32* %951, i64 %953
  %955 = load atomic i32, i32* %954 acquire, align 4
  %956 = and i32 %955, %950
  %957 = icmp eq i32 %956, 0
  br i1 %957, label %967, label %958

958:                                              ; preds = %943
  %959 = shl i32 %950, 1
  %960 = icmp eq i32 %959, 0
  %961 = getelementptr inbounds i32, i32* %954, i64 1
  %962 = select i1 %960, i32 1, i32 %959
  %963 = select i1 %960, i32* %961, i32* %954
  %964 = load atomic i32, i32* %963 acquire, align 4
  %965 = and i32 %964, %962
  %966 = icmp eq i32 %965, 0
  br i1 %966, label %967, label %1070

967:                                              ; preds = %958, %943
  %968 = or i64 %111, 272
  %969 = sub i64 %105, %111
  %970 = trunc i64 %969 to i32
  %971 = lshr i32 %970, 2
  %972 = and i32 %971, 31
  %973 = shl i32 1, %972
  %974 = inttoptr i64 %968 to i32*
  %975 = lshr i64 %969, 7
  %976 = and i64 %975, 33554431
  %977 = getelementptr inbounds i32, i32* %974, i64 %976
  %978 = load atomic i32, i32* %977 acquire, align 4
  %979 = and i32 %978, %973
  %980 = icmp eq i32 %979, 0
  br i1 %980, label %1001, label %981

981:                                              ; preds = %967
  %982 = shl i32 %973, 1
  %983 = icmp eq i32 %982, 0
  %984 = getelementptr inbounds i32, i32* %977, i64 1
  %985 = select i1 %983, i32 1, i32 %982
  %986 = select i1 %983, i32* %984, i32* %977
  %987 = load atomic i32, i32* %986 acquire, align 4
  %988 = and i32 %987, %985
  %989 = icmp eq i32 %988, 0
  br i1 %989, label %990, label %1001

990:                                              ; preds = %981
  %991 = load atomic i32, i32* %954 monotonic, align 4
  br label %992

992:                                              ; preds = %996, %990
  %993 = phi i32 [ %991, %990 ], [ %999, %996 ]
  %994 = and i32 %993, %950
  %995 = icmp eq i32 %994, %950
  br i1 %995, label %1070, label %996

996:                                              ; preds = %992
  %997 = or i32 %993, %950
  %998 = cmpxchg volatile i32* %954, i32 %993, i32 %997 release monotonic
  %999 = extractvalue { i32, i1 } %998, 0
  %1000 = extractvalue { i32, i1 } %998, 1
  br i1 %1000, label %1070, label %992

1001:                                             ; preds = %981, %967
  %1002 = load atomic i32, i32* %977 acquire, align 4
  %1003 = and i32 %1002, %973
  %1004 = icmp eq i32 %1003, 0
  br i1 %1004, label %1070, label %1005

1005:                                             ; preds = %1001
  %1006 = shl i32 %973, 1
  %1007 = icmp eq i32 %1006, 0
  %1008 = getelementptr inbounds i32, i32* %977, i64 1
  %1009 = select i1 %1007, i32 1, i32 %1006
  %1010 = select i1 %1007, i32* %1008, i32* %977
  %1011 = load atomic i32, i32* %1010 acquire, align 4
  %1012 = and i32 %1011, %1009
  %1013 = icmp eq i32 %1012, 0
  br i1 %1013, label %1070, label %1014

1014:                                             ; preds = %1005
  %1015 = load atomic i32, i32* %954 monotonic, align 4
  br label %1016

1016:                                             ; preds = %1020, %1014
  %1017 = phi i32 [ %1015, %1014 ], [ %1023, %1020 ]
  %1018 = and i32 %1017, %950
  %1019 = icmp eq i32 %1018, %950
  br i1 %1019, label %1070, label %1020

1020:                                             ; preds = %1016
  %1021 = or i32 %1017, %950
  %1022 = cmpxchg volatile i32* %954, i32 %1017, i32 %1021 release monotonic
  %1023 = extractvalue { i32, i1 } %1022, 0
  %1024 = extractvalue { i32, i1 } %1022, 1
  br i1 %1024, label %1025, label %1016

1025:                                             ; preds = %1020
  %1026 = bitcast %"class.v8::internal::HeapObject"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1026) #12
  %1027 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %753, i64* %1027, align 8
  %1028 = xor i64 %944, -1
  %1029 = add i64 %753, %1028
  %1030 = trunc i64 %1029 to i32
  %1031 = lshr i32 %1030, 2
  %1032 = and i32 %1031, 31
  %1033 = shl i32 1, %1032
  %1034 = lshr i64 %1029, 7
  %1035 = and i64 %1034, 33554431
  %1036 = getelementptr inbounds i32, i32* %951, i64 %1035
  %1037 = load atomic i32, i32* %1036 acquire, align 4
  %1038 = and i32 %1037, %1033
  %1039 = icmp eq i32 %1038, 0
  br i1 %1039, label %1069, label %1040

1040:                                             ; preds = %1025
  %1041 = shl i32 %1033, 1
  %1042 = icmp eq i32 %1041, 0
  %1043 = getelementptr inbounds i32, i32* %1036, i64 1
  %1044 = select i1 %1042, i32 1, i32 %1041
  %1045 = select i1 %1042, i32* %1043, i32* %1036
  %1046 = load atomic i32, i32* %1045 monotonic, align 4
  br label %1047

1047:                                             ; preds = %1051, %1040
  %1048 = phi i32 [ %1046, %1040 ], [ %1054, %1051 ]
  %1049 = and i32 %1048, %1044
  %1050 = icmp eq i32 %1049, %1044
  br i1 %1050, label %1069, label %1051

1051:                                             ; preds = %1047
  %1052 = or i32 %1048, %1044
  %1053 = cmpxchg volatile i32* %1045, i32 %1048, i32 %1052 release monotonic
  %1054 = extractvalue { i32, i1 } %1053, 0
  %1055 = extractvalue { i32, i1 } %1053, 1
  br i1 %1055, label %1056, label %1047

1056:                                             ; preds = %1051
  %1057 = inttoptr i64 %944 to %"class.v8::internal::MemoryChunk"*
  %1058 = load i64, i64* %1027, align 8
  %1059 = and i64 %1058, -4294967296
  %1060 = add i64 %1058, -1
  %1061 = inttoptr i64 %1060 to i32*
  %1062 = load atomic i32, i32* %1061 monotonic, align 4
  %1063 = zext i32 %1062 to i64
  %1064 = or i64 %1059, %1063
  %1065 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %11, i64 %1064) #12
  %1066 = sext i32 %1065 to i64
  %1067 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1057, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1068 = atomicrmw add i64* %1067, i64 %1066 seq_cst
  br label %1069

1069:                                             ; preds = %1047, %1056, %1025
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1026) #12
  br label %1070

1070:                                             ; preds = %996, %992, %1016, %1069, %1005, %1001, %958, %940
  %1071 = load i64, i64* %47, align 8
  %1072 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1073 = icmp eq i8 %1072, 0
  br i1 %1073, label %1174, label %1074

1074:                                             ; preds = %1070
  %1075 = add i64 %86, 7
  %1076 = inttoptr i64 %1075 to i16*
  %1077 = load atomic i16, i16* %1076 monotonic, align 2
  switch i16 %1077, label %1174 [
    i16 1085, label %1078
    i16 1057, label %1078
  ]

1078:                                             ; preds = %1074, %1074
  %1079 = bitcast %"class.v8::internal::HeapObject"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1079) #12
  %1080 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %12, i64 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %1080, align 8
  %1081 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %12, i64 %86) #12
  %1082 = sext i32 %1081 to i64
  %1083 = add i64 %177, %1082
  %1084 = add i64 %1083, 4
  %1085 = and i64 %1084, -262144
  %1086 = inttoptr i64 %1085 to %"class.v8::internal::Page"*
  %1087 = icmp eq %"class.v8::internal::Page"* %179, %1086
  br i1 %1087, label %1088, label %1118

1088:                                             ; preds = %1078
  %1089 = add i64 %105, %1082
  %1090 = add i64 %1071, -41416
  %1091 = inttoptr i64 %1090 to %"class.v8::internal::Isolate"*
  %1092 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1091, i64 0, i32 0, i32 7, i32 0, i64 534
  %1093 = load i64, i64* %1092, align 8
  %1094 = inttoptr i64 %1083 to i32*
  %1095 = load atomic i32, i32* %1094 monotonic, align 4
  %1096 = trunc i64 %1093 to i32
  %1097 = icmp eq i32 %1095, %1096
  br i1 %1097, label %1098, label %1118

1098:                                             ; preds = %1088
  %1099 = load i64, i64* %184, align 8
  %1100 = and i64 %1099, 524288
  %1101 = icmp eq i64 %1100, 0
  br i1 %1101, label %1119, label %1102

1102:                                             ; preds = %1098
  %1103 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 8, i32 0
  %1104 = bitcast %"struct.std::__1::__atomic_base.69"* %1103 to i64*
  %1105 = load atomic i64, i64* %1104 seq_cst, align 64
  %1106 = inttoptr i64 %1105 to %"class.v8::internal::SemiSpace"*
  %1107 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1106, i64 0, i32 5
  %1108 = load i64, i64* %1107, align 8
  %1109 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 3
  %1110 = load i64, i64* %1109, align 8
  %1111 = icmp ugt i64 %1110, %1108
  br i1 %1111, label %1118, label %1112

1112:                                             ; preds = %1102
  %1113 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 4
  %1114 = load i64, i64* %1113, align 32
  %1115 = icmp ule i64 %1114, %1108
  %1116 = icmp ult i64 %177, %1108
  %1117 = or i1 %1116, %1115
  br i1 %1117, label %1118, label %1119

1118:                                             ; preds = %1112, %1102, %1088, %1078
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1079) #12
  br label %1174

1119:                                             ; preds = %1112, %1098
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1079) #12
  %1120 = trunc i64 %1089 to i32
  %1121 = icmp eq i32 %1120, 0
  br i1 %1121, label %1174, label %1122

1122:                                             ; preds = %1119
  %1123 = and i64 %1089, -4294967296
  %1124 = add i64 %1089, 3
  %1125 = inttoptr i64 %1124 to i32*
  %1126 = load i32, i32* %1125, align 4
  %1127 = zext i32 %1126 to i64
  %1128 = or i64 %1123, %1127
  %1129 = bitcast %"class.v8::internal::AllocationSite"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1129) #12
  %1130 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1128, i64* %1130, align 8
  %1131 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1132 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1132) #12
  %1133 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %15, %"class.v8::internal::AllocationSite"** %1133, align 8
  %1134 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1134) #12
  %1135 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1131, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %14) #12
  %1136 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1135, 0
  %1137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1136, i64 3
  %1138 = bitcast %"struct.std::__1::__hash_node_base.518"* %1137 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1134) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1132) #12
  %1139 = load i64, i64* %1138, align 8
  %1140 = add i64 %1139, 1
  store i64 %1140, i64* %1138, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1129) #12
  br label %1174

1141:                                             ; preds = %929
  %1142 = load i64, i64* %727, align 8
  %1143 = icmp ne i64 %1142, 0
  %1144 = sub i64 %1142, %729
  %1145 = icmp eq i64 %1144, %754
  %1146 = and i1 %1143, %1145
  br i1 %1146, label %1147, label %1148

1147:                                             ; preds = %1141
  store i64 %754, i64* %727, align 8
  br label %1152

1148:                                             ; preds = %1141
  %1149 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %1150 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1149, align 8
  %1151 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1150, i64 %754, i32 %106, i32 1) #12
  br label %1152

1152:                                             ; preds = %1148, %1147
  %1153 = load atomic i32, i32* %931 acquire, align 4
  %1154 = add i32 %1153, 1
  %1155 = load i32, i32* %64, align 4
  %1156 = and i32 %1155, 2
  %1157 = or i32 %1156, %1154
  store i32 %1157, i32* %64, align 4
  %1158 = zext i32 %1157 to i64
  %1159 = and i64 %1158, 1
  %1160 = icmp ne i64 %1159, 0
  %1161 = icmp ne i32 %1157, 3
  %1162 = and i1 %1161, %1160
  br i1 %1162, label %1163, label %1769

1163:                                             ; preds = %1152
  %1164 = and i64 %2, -4294967296
  %1165 = and i64 %1158, 4294705152
  %1166 = or i64 %1165, %1164
  %1167 = inttoptr i64 %1166 to %"class.v8::internal::BasicMemoryChunk"*
  %1168 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1167, i64 0, i32 1
  %1169 = load i64, i64* %1168, align 8
  %1170 = lshr i64 %1169, 4
  %1171 = trunc i64 %1170 to i32
  %1172 = and i32 %1171, 1
  %1173 = xor i32 %1172, 1
  br label %1769

1174:                                             ; preds = %1122, %1119, %1118, %1074, %1070
  %1175 = load i32, i32* %64, align 4
  %1176 = and i32 %1175, 2
  %1177 = trunc i64 %753 to i32
  %1178 = or i32 %1176, %1177
  store i32 %1178, i32* %64, align 4
  br i1 %110, label %1179, label %1239

1179:                                             ; preds = %1174
  %1180 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1181 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1180, align 8
  %1182 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1183 = load i32, i32* %1182, align 8
  %1184 = sext i32 %1183 to i64
  %1185 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1181, i64 0, i32 0, i32 0, i64 %1184, i32 0
  %1186 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1185, align 8
  %1187 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1186, i64 0, i32 1
  %1188 = load i64, i64* %1187, align 8
  %1189 = icmp eq i64 %1188, 256
  br i1 %1189, label %1194, label %1190

1190:                                             ; preds = %1179
  %1191 = add i64 %1188, 1
  store i64 %1191, i64* %1187, align 8
  %1192 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1186, i64 0, i32 2, i64 %1188, i32 0, i32 0, i32 0, i32 0
  store i64 %753, i64* %1192, align 8
  %1193 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1186, i64 0, i32 2, i64 %1188, i32 1
  store i32 %106, i32* %1193, align 8
  br label %1239

1194:                                             ; preds = %1179
  %1195 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1181, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1195) #12
  %1196 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1181, i64 0, i32 0, i32 1, i32 1
  %1197 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1196 to i64*
  %1198 = load i64, i64* %1197, align 8
  %1199 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1186 to i64*
  store i64 %1198, i64* %1199, align 8
  %1200 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1186 to i64
  store atomic volatile i64 %1200, i64* %1197 monotonic, align 8
  %1201 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1181, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1202 = atomicrmw add i64* %1201, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1195) #12
  %1203 = call i8* @_Znwm(i64 4112) #17
  %1204 = getelementptr inbounds i8, i8* %1203, i64 8
  %1205 = bitcast i8* %1204 to i64*
  store i64 0, i64* %1205, align 8
  %1206 = getelementptr inbounds i8, i8* %1203, i64 16
  %1207 = bitcast i8* %1206 to %"struct.std::__1::pair.1282"*
  %1208 = getelementptr inbounds i8, i8* %1203, i64 4112
  %1209 = bitcast i8* %1208 to %"struct.std::__1::pair.1282"*
  br label %1210

1210:                                             ; preds = %1210, %1194
  %1211 = phi %"struct.std::__1::pair.1282"* [ %1207, %1194 ], [ %1228, %1210 ]
  %1212 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1212, align 8
  %1213 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 0, i32 1
  store i32 0, i32* %1213, align 8
  %1214 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1214, align 8
  %1215 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 1, i32 1
  store i32 0, i32* %1215, align 8
  %1216 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1216, align 8
  %1217 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 2, i32 1
  store i32 0, i32* %1217, align 8
  %1218 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1218, align 8
  %1219 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 3, i32 1
  store i32 0, i32* %1219, align 8
  %1220 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1220, align 8
  %1221 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 4, i32 1
  store i32 0, i32* %1221, align 8
  %1222 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1222, align 8
  %1223 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 5, i32 1
  store i32 0, i32* %1223, align 8
  %1224 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1224, align 8
  %1225 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 6, i32 1
  store i32 0, i32* %1225, align 8
  %1226 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1226, align 8
  %1227 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 7, i32 1
  store i32 0, i32* %1227, align 8
  %1228 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1211, i64 8
  %1229 = icmp eq %"struct.std::__1::pair.1282"* %1228, %1209
  br i1 %1229, label %1230, label %1210

1230:                                             ; preds = %1210
  %1231 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1185 to i8**
  store i8* %1203, i8** %1231, align 8
  %1232 = bitcast i8* %1203 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1233 = load i64, i64* %1205, align 8
  %1234 = icmp eq i64 %1233, 256
  br i1 %1234, label %1239, label %1235

1235:                                             ; preds = %1230
  %1236 = add i64 %1233, 1
  store i64 %1236, i64* %1205, align 8
  %1237 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1232, i64 0, i32 2, i64 %1233, i32 0, i32 0, i32 0, i32 0
  store i64 %753, i64* %1237, align 8
  %1238 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1232, i64 0, i32 2, i64 %1233, i32 1
  store i32 %106, i32* %1238, align 8
  br label %1239

1239:                                             ; preds = %1235, %1230, %1190, %1174
  %1240 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1241 = load i64, i64* %1240, align 8
  %1242 = add i64 %1241, %729
  store i64 %1242, i64* %1240, align 8
  br label %1769

1243:                                             ; preds = %748
  %1244 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1245 = icmp sgt i32 %106, 8192
  br i1 %1245, label %1246, label %1270

1246:                                             ; preds = %1243
  %1247 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1248 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1247, align 8
  %1249 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1248, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1249) #12
  %1250 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1248, i64 0, i32 0
  %1251 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1248, i64 0, i32 0, i32 1, i32 1
  %1252 = load i64, i64* %1251, align 8
  %1253 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1248, i64 0, i32 0, i32 1, i32 2
  %1254 = load i64, i64* %1253, align 8
  %1255 = add i64 %1252, %729
  %1256 = icmp ult i64 %1254, %1255
  br i1 %1256, label %1266, label %1257

1257:                                             ; preds = %1246
  %1258 = add i64 %1252, 1
  store i64 %1255, i64* %1251, align 8
  %1259 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1260 = icmp eq i8 %1259, 0
  br i1 %1260, label %1262, label %1261

1261:                                             ; preds = %1257
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1250, i32 2) #12
  br label %1262

1262:                                             ; preds = %1261, %1257
  %1263 = and i64 %1258, 1
  %1264 = icmp eq i64 %1263, 0
  br i1 %1264, label %1265, label %1268, !prof !29

1265:                                             ; preds = %1262
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1266:                                             ; preds = %1246
  %1267 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1248, i32 %106, i32 0, i32 2) #12
  br label %1268

1268:                                             ; preds = %1266, %1262
  %1269 = phi i64 [ %1267, %1266 ], [ %1258, %1262 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1249) #12
  br label %1272

1270:                                             ; preds = %1243
  %1271 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1244, i32 %106, i32 0) #12
  br label %1272

1272:                                             ; preds = %1270, %1268
  %1273 = phi i64 [ %1269, %1268 ], [ %1271, %1270 ]
  %1274 = and i64 %1273, 1
  %1275 = icmp eq i64 %1274, 0
  br i1 %1275, label %1767, label %1276

1276:                                             ; preds = %1272
  %1277 = add i64 %1273, -1
  %1278 = inttoptr i64 %1277 to i32*
  store atomic volatile i32 %84, i32* %1278 monotonic, align 4
  %1279 = add i64 %1273, 3
  %1280 = add i64 %105, 3
  %1281 = add nsw i32 %106, -4
  %1282 = sdiv i32 %1281, 4
  %1283 = sext i32 %1282 to i64
  %1284 = inttoptr i64 %1279 to i32*
  %1285 = inttoptr i64 %1279 to i8*
  %1286 = inttoptr i64 %1280 to i32*
  %1287 = inttoptr i64 %1280 to i8*
  %1288 = inttoptr i64 %1279 to i8*
  %1289 = add i32 %106, -1
  %1290 = icmp ult i32 %1289, 7
  br i1 %1290, label %1452, label %1291

1291:                                             ; preds = %1276
  %1292 = icmp ult i32 %1282, 16
  br i1 %1292, label %1293, label %1438

1293:                                             ; preds = %1291
  %1294 = icmp ult i32 %1282, 8
  br i1 %1294, label %1385, label %1295

1295:                                             ; preds = %1293
  %1296 = getelementptr i32, i32* %1284, i64 %1283
  %1297 = bitcast i32* %1296 to i8*
  %1298 = getelementptr i32, i32* %1286, i64 %1283
  %1299 = bitcast i32* %1298 to i8*
  %1300 = icmp ult i8* %1285, %1299
  %1301 = icmp ult i8* %1287, %1297
  %1302 = and i1 %1300, %1301
  br i1 %1302, label %1385, label %1303

1303:                                             ; preds = %1295
  %1304 = and i64 %1283, -8
  %1305 = getelementptr i32, i32* %1286, i64 %1304
  %1306 = sub nsw i64 %1283, %1304
  %1307 = getelementptr i32, i32* %1284, i64 %1304
  %1308 = add nsw i64 %1304, -8
  %1309 = lshr exact i64 %1308, 3
  %1310 = add nuw nsw i64 %1309, 1
  %1311 = and i64 %1310, 3
  %1312 = icmp ult i64 %1308, 24
  br i1 %1312, label %1364, label %1313

1313:                                             ; preds = %1303
  %1314 = sub nsw i64 %1310, %1311
  br label %1315

1315:                                             ; preds = %1315, %1313
  %1316 = phi i64 [ 0, %1313 ], [ %1361, %1315 ]
  %1317 = phi i64 [ %1314, %1313 ], [ %1362, %1315 ]
  %1318 = getelementptr i32, i32* %1286, i64 %1316
  %1319 = getelementptr i32, i32* %1284, i64 %1316
  %1320 = bitcast i32* %1318 to <4 x i32>*
  %1321 = load <4 x i32>, <4 x i32>* %1320, align 4, !alias.scope !171
  %1322 = getelementptr i32, i32* %1318, i64 4
  %1323 = bitcast i32* %1322 to <4 x i32>*
  %1324 = load <4 x i32>, <4 x i32>* %1323, align 4, !alias.scope !171
  %1325 = bitcast i32* %1319 to <4 x i32>*
  store <4 x i32> %1321, <4 x i32>* %1325, align 4, !alias.scope !174, !noalias !171
  %1326 = getelementptr i32, i32* %1319, i64 4
  %1327 = bitcast i32* %1326 to <4 x i32>*
  store <4 x i32> %1324, <4 x i32>* %1327, align 4, !alias.scope !174, !noalias !171
  %1328 = or i64 %1316, 8
  %1329 = getelementptr i32, i32* %1286, i64 %1328
  %1330 = getelementptr i32, i32* %1284, i64 %1328
  %1331 = bitcast i32* %1329 to <4 x i32>*
  %1332 = load <4 x i32>, <4 x i32>* %1331, align 4, !alias.scope !171
  %1333 = getelementptr i32, i32* %1329, i64 4
  %1334 = bitcast i32* %1333 to <4 x i32>*
  %1335 = load <4 x i32>, <4 x i32>* %1334, align 4, !alias.scope !171
  %1336 = bitcast i32* %1330 to <4 x i32>*
  store <4 x i32> %1332, <4 x i32>* %1336, align 4, !alias.scope !174, !noalias !171
  %1337 = getelementptr i32, i32* %1330, i64 4
  %1338 = bitcast i32* %1337 to <4 x i32>*
  store <4 x i32> %1335, <4 x i32>* %1338, align 4, !alias.scope !174, !noalias !171
  %1339 = or i64 %1316, 16
  %1340 = getelementptr i32, i32* %1286, i64 %1339
  %1341 = getelementptr i32, i32* %1284, i64 %1339
  %1342 = bitcast i32* %1340 to <4 x i32>*
  %1343 = load <4 x i32>, <4 x i32>* %1342, align 4, !alias.scope !171
  %1344 = getelementptr i32, i32* %1340, i64 4
  %1345 = bitcast i32* %1344 to <4 x i32>*
  %1346 = load <4 x i32>, <4 x i32>* %1345, align 4, !alias.scope !171
  %1347 = bitcast i32* %1341 to <4 x i32>*
  store <4 x i32> %1343, <4 x i32>* %1347, align 4, !alias.scope !174, !noalias !171
  %1348 = getelementptr i32, i32* %1341, i64 4
  %1349 = bitcast i32* %1348 to <4 x i32>*
  store <4 x i32> %1346, <4 x i32>* %1349, align 4, !alias.scope !174, !noalias !171
  %1350 = or i64 %1316, 24
  %1351 = getelementptr i32, i32* %1286, i64 %1350
  %1352 = getelementptr i32, i32* %1284, i64 %1350
  %1353 = bitcast i32* %1351 to <4 x i32>*
  %1354 = load <4 x i32>, <4 x i32>* %1353, align 4, !alias.scope !171
  %1355 = getelementptr i32, i32* %1351, i64 4
  %1356 = bitcast i32* %1355 to <4 x i32>*
  %1357 = load <4 x i32>, <4 x i32>* %1356, align 4, !alias.scope !171
  %1358 = bitcast i32* %1352 to <4 x i32>*
  store <4 x i32> %1354, <4 x i32>* %1358, align 4, !alias.scope !174, !noalias !171
  %1359 = getelementptr i32, i32* %1352, i64 4
  %1360 = bitcast i32* %1359 to <4 x i32>*
  store <4 x i32> %1357, <4 x i32>* %1360, align 4, !alias.scope !174, !noalias !171
  %1361 = add i64 %1316, 32
  %1362 = add i64 %1317, -4
  %1363 = icmp eq i64 %1362, 0
  br i1 %1363, label %1364, label %1315, !llvm.loop !176

1364:                                             ; preds = %1315, %1303
  %1365 = phi i64 [ 0, %1303 ], [ %1361, %1315 ]
  %1366 = icmp eq i64 %1311, 0
  br i1 %1366, label %1383, label %1367

1367:                                             ; preds = %1364, %1367
  %1368 = phi i64 [ %1380, %1367 ], [ %1365, %1364 ]
  %1369 = phi i64 [ %1381, %1367 ], [ %1311, %1364 ]
  %1370 = getelementptr i32, i32* %1286, i64 %1368
  %1371 = getelementptr i32, i32* %1284, i64 %1368
  %1372 = bitcast i32* %1370 to <4 x i32>*
  %1373 = load <4 x i32>, <4 x i32>* %1372, align 4, !alias.scope !171
  %1374 = getelementptr i32, i32* %1370, i64 4
  %1375 = bitcast i32* %1374 to <4 x i32>*
  %1376 = load <4 x i32>, <4 x i32>* %1375, align 4, !alias.scope !171
  %1377 = bitcast i32* %1371 to <4 x i32>*
  store <4 x i32> %1373, <4 x i32>* %1377, align 4, !alias.scope !174, !noalias !171
  %1378 = getelementptr i32, i32* %1371, i64 4
  %1379 = bitcast i32* %1378 to <4 x i32>*
  store <4 x i32> %1376, <4 x i32>* %1379, align 4, !alias.scope !174, !noalias !171
  %1380 = add i64 %1368, 8
  %1381 = add i64 %1369, -1
  %1382 = icmp eq i64 %1381, 0
  br i1 %1382, label %1383, label %1367, !llvm.loop !177

1383:                                             ; preds = %1367, %1364
  %1384 = icmp eq i64 %1304, %1283
  br i1 %1384, label %1452, label %1385

1385:                                             ; preds = %1383, %1295, %1293
  %1386 = phi i32* [ %1286, %1295 ], [ %1286, %1293 ], [ %1305, %1383 ]
  %1387 = phi i64 [ %1283, %1295 ], [ %1283, %1293 ], [ %1306, %1383 ]
  %1388 = phi i32* [ %1284, %1295 ], [ %1284, %1293 ], [ %1307, %1383 ]
  %1389 = add nsw i64 %1387, -1
  %1390 = and i64 %1387, 7
  %1391 = icmp eq i64 %1390, 0
  br i1 %1391, label %1403, label %1392

1392:                                             ; preds = %1385, %1392
  %1393 = phi i32* [ %1398, %1392 ], [ %1386, %1385 ]
  %1394 = phi i64 [ %1397, %1392 ], [ %1387, %1385 ]
  %1395 = phi i32* [ %1400, %1392 ], [ %1388, %1385 ]
  %1396 = phi i64 [ %1401, %1392 ], [ %1390, %1385 ]
  %1397 = add i64 %1394, -1
  %1398 = getelementptr inbounds i32, i32* %1393, i64 1
  %1399 = load i32, i32* %1393, align 4
  %1400 = getelementptr inbounds i32, i32* %1395, i64 1
  store i32 %1399, i32* %1395, align 4
  %1401 = add i64 %1396, -1
  %1402 = icmp eq i64 %1401, 0
  br i1 %1402, label %1403, label %1392, !llvm.loop !178

1403:                                             ; preds = %1392, %1385
  %1404 = phi i32* [ %1386, %1385 ], [ %1398, %1392 ]
  %1405 = phi i64 [ %1387, %1385 ], [ %1397, %1392 ]
  %1406 = phi i32* [ %1388, %1385 ], [ %1400, %1392 ]
  %1407 = icmp ult i64 %1389, 7
  br i1 %1407, label %1452, label %1408

1408:                                             ; preds = %1403, %1408
  %1409 = phi i32* [ %1434, %1408 ], [ %1404, %1403 ]
  %1410 = phi i64 [ %1433, %1408 ], [ %1405, %1403 ]
  %1411 = phi i32* [ %1436, %1408 ], [ %1406, %1403 ]
  %1412 = getelementptr inbounds i32, i32* %1409, i64 1
  %1413 = load i32, i32* %1409, align 4
  %1414 = getelementptr inbounds i32, i32* %1411, i64 1
  store i32 %1413, i32* %1411, align 4
  %1415 = getelementptr inbounds i32, i32* %1409, i64 2
  %1416 = load i32, i32* %1412, align 4
  %1417 = getelementptr inbounds i32, i32* %1411, i64 2
  store i32 %1416, i32* %1414, align 4
  %1418 = getelementptr inbounds i32, i32* %1409, i64 3
  %1419 = load i32, i32* %1415, align 4
  %1420 = getelementptr inbounds i32, i32* %1411, i64 3
  store i32 %1419, i32* %1417, align 4
  %1421 = getelementptr inbounds i32, i32* %1409, i64 4
  %1422 = load i32, i32* %1418, align 4
  %1423 = getelementptr inbounds i32, i32* %1411, i64 4
  store i32 %1422, i32* %1420, align 4
  %1424 = getelementptr inbounds i32, i32* %1409, i64 5
  %1425 = load i32, i32* %1421, align 4
  %1426 = getelementptr inbounds i32, i32* %1411, i64 5
  store i32 %1425, i32* %1423, align 4
  %1427 = getelementptr inbounds i32, i32* %1409, i64 6
  %1428 = load i32, i32* %1424, align 4
  %1429 = getelementptr inbounds i32, i32* %1411, i64 6
  store i32 %1428, i32* %1426, align 4
  %1430 = getelementptr inbounds i32, i32* %1409, i64 7
  %1431 = load i32, i32* %1427, align 4
  %1432 = getelementptr inbounds i32, i32* %1411, i64 7
  store i32 %1431, i32* %1429, align 4
  %1433 = add i64 %1410, -8
  %1434 = getelementptr inbounds i32, i32* %1409, i64 8
  %1435 = load i32, i32* %1430, align 4
  %1436 = getelementptr inbounds i32, i32* %1411, i64 8
  store i32 %1435, i32* %1432, align 4
  %1437 = icmp eq i64 %1433, 0
  br i1 %1437, label %1452, label %1408, !llvm.loop !179

1438:                                             ; preds = %1291
  %1439 = inttoptr i64 %1280 to i8*
  %1440 = shl nsw i64 %1283, 2
  %1441 = add nsw i64 %1440, -4
  %1442 = lshr exact i64 %1441, 2
  switch i64 %1442, label %1451 [
    i64 3, label %1450
    i64 1, label %1445
    i64 2, label %1449
    i64 0, label %1443
  ]

1443:                                             ; preds = %1438
  %1444 = load i32, i32* %1286, align 1
  store i32 %1444, i32* %1284, align 1
  br label %1452

1445:                                             ; preds = %1438
  %1446 = inttoptr i64 %1280 to i64*
  %1447 = inttoptr i64 %1279 to i64*
  %1448 = load i64, i64* %1446, align 1
  store i64 %1448, i64* %1447, align 1
  br label %1452

1449:                                             ; preds = %1438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1288, i8* align 1 %1439, i64 12, i1 false) #12
  br label %1452

1450:                                             ; preds = %1438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1288, i8* align 1 %1439, i64 16, i1 false) #12
  br label %1452

1451:                                             ; preds = %1438
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1288, i8* align 1 %1439, i64 %1440, i1 false) #12
  br label %1452

1452:                                             ; preds = %1403, %1408, %1383, %1451, %1450, %1449, %1445, %1443, %1276
  %1453 = trunc i64 %1277 to i32
  %1454 = inttoptr i64 %177 to i32*
  %1455 = cmpxchg volatile i32* %1454, i32 %84, i32 %1453 release monotonic
  %1456 = extractvalue { i32, i1 } %1455, 1
  br i1 %1456, label %1457, label %1664

1457:                                             ; preds = %1452
  %1458 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %1459 = load i8, i8* %1458, align 8, !range !2
  %1460 = icmp eq i8 %1459, 0
  br i1 %1460, label %1463, label %1461, !prof !60

1461:                                             ; preds = %1457
  %1462 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %1462, i64 %1273, i64 %105, i32 %106) #12
  br label %1463

1463:                                             ; preds = %1461, %1457
  %1464 = load i8, i8* %39, align 1, !range !2
  %1465 = icmp eq i8 %1464, 0
  br i1 %1465, label %1593, label %1466

1466:                                             ; preds = %1463
  %1467 = and i64 %1273, -262144
  %1468 = or i64 %1467, 272
  %1469 = sub i64 %1273, %1467
  %1470 = trunc i64 %1469 to i32
  %1471 = lshr i32 %1470, 2
  %1472 = and i32 %1471, 31
  %1473 = shl i32 1, %1472
  %1474 = inttoptr i64 %1468 to i32*
  %1475 = lshr i64 %1469, 7
  %1476 = and i64 %1475, 33554431
  %1477 = getelementptr inbounds i32, i32* %1474, i64 %1476
  %1478 = load atomic i32, i32* %1477 acquire, align 4
  %1479 = and i32 %1478, %1473
  %1480 = icmp eq i32 %1479, 0
  br i1 %1480, label %1490, label %1481

1481:                                             ; preds = %1466
  %1482 = shl i32 %1473, 1
  %1483 = icmp eq i32 %1482, 0
  %1484 = getelementptr inbounds i32, i32* %1477, i64 1
  %1485 = select i1 %1483, i32 1, i32 %1482
  %1486 = select i1 %1483, i32* %1484, i32* %1477
  %1487 = load atomic i32, i32* %1486 acquire, align 4
  %1488 = and i32 %1487, %1485
  %1489 = icmp eq i32 %1488, 0
  br i1 %1489, label %1490, label %1593

1490:                                             ; preds = %1481, %1466
  %1491 = or i64 %111, 272
  %1492 = sub i64 %105, %111
  %1493 = trunc i64 %1492 to i32
  %1494 = lshr i32 %1493, 2
  %1495 = and i32 %1494, 31
  %1496 = shl i32 1, %1495
  %1497 = inttoptr i64 %1491 to i32*
  %1498 = lshr i64 %1492, 7
  %1499 = and i64 %1498, 33554431
  %1500 = getelementptr inbounds i32, i32* %1497, i64 %1499
  %1501 = load atomic i32, i32* %1500 acquire, align 4
  %1502 = and i32 %1501, %1496
  %1503 = icmp eq i32 %1502, 0
  br i1 %1503, label %1524, label %1504

1504:                                             ; preds = %1490
  %1505 = shl i32 %1496, 1
  %1506 = icmp eq i32 %1505, 0
  %1507 = getelementptr inbounds i32, i32* %1500, i64 1
  %1508 = select i1 %1506, i32 1, i32 %1505
  %1509 = select i1 %1506, i32* %1507, i32* %1500
  %1510 = load atomic i32, i32* %1509 acquire, align 4
  %1511 = and i32 %1510, %1508
  %1512 = icmp eq i32 %1511, 0
  br i1 %1512, label %1513, label %1524

1513:                                             ; preds = %1504
  %1514 = load atomic i32, i32* %1477 monotonic, align 4
  br label %1515

1515:                                             ; preds = %1519, %1513
  %1516 = phi i32 [ %1514, %1513 ], [ %1522, %1519 ]
  %1517 = and i32 %1516, %1473
  %1518 = icmp eq i32 %1517, %1473
  br i1 %1518, label %1593, label %1519

1519:                                             ; preds = %1515
  %1520 = or i32 %1516, %1473
  %1521 = cmpxchg volatile i32* %1477, i32 %1516, i32 %1520 release monotonic
  %1522 = extractvalue { i32, i1 } %1521, 0
  %1523 = extractvalue { i32, i1 } %1521, 1
  br i1 %1523, label %1593, label %1515

1524:                                             ; preds = %1504, %1490
  %1525 = load atomic i32, i32* %1500 acquire, align 4
  %1526 = and i32 %1525, %1496
  %1527 = icmp eq i32 %1526, 0
  br i1 %1527, label %1593, label %1528

1528:                                             ; preds = %1524
  %1529 = shl i32 %1496, 1
  %1530 = icmp eq i32 %1529, 0
  %1531 = getelementptr inbounds i32, i32* %1500, i64 1
  %1532 = select i1 %1530, i32 1, i32 %1529
  %1533 = select i1 %1530, i32* %1531, i32* %1500
  %1534 = load atomic i32, i32* %1533 acquire, align 4
  %1535 = and i32 %1534, %1532
  %1536 = icmp eq i32 %1535, 0
  br i1 %1536, label %1593, label %1537

1537:                                             ; preds = %1528
  %1538 = load atomic i32, i32* %1477 monotonic, align 4
  br label %1539

1539:                                             ; preds = %1543, %1537
  %1540 = phi i32 [ %1538, %1537 ], [ %1546, %1543 ]
  %1541 = and i32 %1540, %1473
  %1542 = icmp eq i32 %1541, %1473
  br i1 %1542, label %1593, label %1543

1543:                                             ; preds = %1539
  %1544 = or i32 %1540, %1473
  %1545 = cmpxchg volatile i32* %1477, i32 %1540, i32 %1544 release monotonic
  %1546 = extractvalue { i32, i1 } %1545, 0
  %1547 = extractvalue { i32, i1 } %1545, 1
  br i1 %1547, label %1548, label %1539

1548:                                             ; preds = %1543
  %1549 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1549) #12
  %1550 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1273, i64* %1550, align 8
  %1551 = xor i64 %1467, -1
  %1552 = add i64 %1273, %1551
  %1553 = trunc i64 %1552 to i32
  %1554 = lshr i32 %1553, 2
  %1555 = and i32 %1554, 31
  %1556 = shl i32 1, %1555
  %1557 = lshr i64 %1552, 7
  %1558 = and i64 %1557, 33554431
  %1559 = getelementptr inbounds i32, i32* %1474, i64 %1558
  %1560 = load atomic i32, i32* %1559 acquire, align 4
  %1561 = and i32 %1560, %1556
  %1562 = icmp eq i32 %1561, 0
  br i1 %1562, label %1592, label %1563

1563:                                             ; preds = %1548
  %1564 = shl i32 %1556, 1
  %1565 = icmp eq i32 %1564, 0
  %1566 = getelementptr inbounds i32, i32* %1559, i64 1
  %1567 = select i1 %1565, i32 1, i32 %1564
  %1568 = select i1 %1565, i32* %1566, i32* %1559
  %1569 = load atomic i32, i32* %1568 monotonic, align 4
  br label %1570

1570:                                             ; preds = %1574, %1563
  %1571 = phi i32 [ %1569, %1563 ], [ %1577, %1574 ]
  %1572 = and i32 %1571, %1567
  %1573 = icmp eq i32 %1572, %1567
  br i1 %1573, label %1592, label %1574

1574:                                             ; preds = %1570
  %1575 = or i32 %1571, %1567
  %1576 = cmpxchg volatile i32* %1568, i32 %1571, i32 %1575 release monotonic
  %1577 = extractvalue { i32, i1 } %1576, 0
  %1578 = extractvalue { i32, i1 } %1576, 1
  br i1 %1578, label %1579, label %1570

1579:                                             ; preds = %1574
  %1580 = inttoptr i64 %1467 to %"class.v8::internal::MemoryChunk"*
  %1581 = load i64, i64* %1550, align 8
  %1582 = and i64 %1581, -4294967296
  %1583 = add i64 %1581, -1
  %1584 = inttoptr i64 %1583 to i32*
  %1585 = load atomic i32, i32* %1584 monotonic, align 4
  %1586 = zext i32 %1585 to i64
  %1587 = or i64 %1582, %1586
  %1588 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %1587) #12
  %1589 = sext i32 %1588 to i64
  %1590 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1580, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1591 = atomicrmw add i64* %1590, i64 %1589 seq_cst
  br label %1592

1592:                                             ; preds = %1570, %1579, %1548
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1549) #12
  br label %1593

1593:                                             ; preds = %1519, %1515, %1539, %1592, %1528, %1524, %1481, %1463
  %1594 = load i64, i64* %47, align 8
  %1595 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1596 = icmp eq i8 %1595, 0
  br i1 %1596, label %1698, label %1597

1597:                                             ; preds = %1593
  %1598 = add i64 %86, 7
  %1599 = inttoptr i64 %1598 to i16*
  %1600 = load atomic i16, i16* %1599 monotonic, align 2
  switch i16 %1600, label %1698 [
    i16 1085, label %1601
    i16 1057, label %1601
  ]

1601:                                             ; preds = %1597, %1597
  %1602 = bitcast %"class.v8::internal::HeapObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1602) #12
  %1603 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %105, i64* %1603, align 8
  %1604 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %7, i64 %86) #12
  %1605 = sext i32 %1604 to i64
  %1606 = add i64 %177, %1605
  %1607 = add i64 %1606, 4
  %1608 = and i64 %1607, -262144
  %1609 = inttoptr i64 %1608 to %"class.v8::internal::Page"*
  %1610 = icmp eq %"class.v8::internal::Page"* %179, %1609
  br i1 %1610, label %1611, label %1641

1611:                                             ; preds = %1601
  %1612 = add i64 %105, %1605
  %1613 = add i64 %1594, -41416
  %1614 = inttoptr i64 %1613 to %"class.v8::internal::Isolate"*
  %1615 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1614, i64 0, i32 0, i32 7, i32 0, i64 534
  %1616 = load i64, i64* %1615, align 8
  %1617 = inttoptr i64 %1606 to i32*
  %1618 = load atomic i32, i32* %1617 monotonic, align 4
  %1619 = trunc i64 %1616 to i32
  %1620 = icmp eq i32 %1618, %1619
  br i1 %1620, label %1621, label %1641

1621:                                             ; preds = %1611
  %1622 = load i64, i64* %184, align 8
  %1623 = and i64 %1622, 524288
  %1624 = icmp eq i64 %1623, 0
  br i1 %1624, label %1642, label %1625

1625:                                             ; preds = %1621
  %1626 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 8, i32 0
  %1627 = bitcast %"struct.std::__1::__atomic_base.69"* %1626 to i64*
  %1628 = load atomic i64, i64* %1627 seq_cst, align 64
  %1629 = inttoptr i64 %1628 to %"class.v8::internal::SemiSpace"*
  %1630 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1629, i64 0, i32 5
  %1631 = load i64, i64* %1630, align 8
  %1632 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 3
  %1633 = load i64, i64* %1632, align 8
  %1634 = icmp ugt i64 %1633, %1631
  br i1 %1634, label %1641, label %1635

1635:                                             ; preds = %1625
  %1636 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %179, i64 0, i32 0, i32 0, i32 4
  %1637 = load i64, i64* %1636, align 32
  %1638 = icmp ule i64 %1637, %1631
  %1639 = icmp ult i64 %177, %1631
  %1640 = or i1 %1639, %1638
  br i1 %1640, label %1641, label %1642

1641:                                             ; preds = %1635, %1625, %1611, %1601
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1602) #12
  br label %1698

1642:                                             ; preds = %1635, %1621
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1602) #12
  %1643 = trunc i64 %1612 to i32
  %1644 = icmp eq i32 %1643, 0
  br i1 %1644, label %1698, label %1645

1645:                                             ; preds = %1642
  %1646 = and i64 %1612, -4294967296
  %1647 = add i64 %1612, 3
  %1648 = inttoptr i64 %1647 to i32*
  %1649 = load i32, i32* %1648, align 4
  %1650 = zext i32 %1649 to i64
  %1651 = or i64 %1646, %1650
  %1652 = bitcast %"class.v8::internal::AllocationSite"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1652) #12
  %1653 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1651, i64* %1653, align 8
  %1654 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1655 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1655) #12
  %1656 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %10, %"class.v8::internal::AllocationSite"** %1656, align 8
  %1657 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1657) #12
  %1658 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1654, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %9) #12
  %1659 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1658, 0
  %1660 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1659, i64 3
  %1661 = bitcast %"struct.std::__1::__hash_node_base.518"* %1660 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1657) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1655) #12
  %1662 = load i64, i64* %1661, align 8
  %1663 = add i64 %1662, 1
  store i64 %1663, i64* %1661, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1652) #12
  br label %1698

1664:                                             ; preds = %1452
  %1665 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %1666 = load i64, i64* %1665, align 8
  %1667 = icmp ne i64 %1666, 0
  %1668 = sub i64 %1666, %729
  %1669 = icmp eq i64 %1668, %1277
  %1670 = and i1 %1667, %1669
  br i1 %1670, label %1671, label %1672

1671:                                             ; preds = %1664
  store i64 %1277, i64* %1665, align 8
  br label %1676

1672:                                             ; preds = %1664
  %1673 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1244, i64 0, i32 0
  %1674 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1673, align 8
  %1675 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1674, i64 %1277, i32 %106, i32 1) #12
  br label %1676

1676:                                             ; preds = %1672, %1671
  %1677 = load atomic i32, i32* %1454 acquire, align 4
  %1678 = add i32 %1677, 1
  %1679 = load i32, i32* %64, align 4
  %1680 = and i32 %1679, 2
  %1681 = or i32 %1680, %1678
  store i32 %1681, i32* %64, align 4
  %1682 = zext i32 %1681 to i64
  %1683 = and i64 %1682, 1
  %1684 = icmp ne i64 %1683, 0
  %1685 = icmp ne i32 %1681, 3
  %1686 = and i1 %1685, %1684
  br i1 %1686, label %1687, label %1769

1687:                                             ; preds = %1676
  %1688 = and i64 %2, -4294967296
  %1689 = and i64 %1682, 4294705152
  %1690 = or i64 %1689, %1688
  %1691 = inttoptr i64 %1690 to %"class.v8::internal::BasicMemoryChunk"*
  %1692 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1691, i64 0, i32 1
  %1693 = load i64, i64* %1692, align 8
  %1694 = lshr i64 %1693, 4
  %1695 = trunc i64 %1694 to i32
  %1696 = and i32 %1695, 1
  %1697 = xor i32 %1696, 1
  br label %1769

1698:                                             ; preds = %1645, %1642, %1641, %1597, %1593
  %1699 = load i32, i32* %64, align 4
  %1700 = and i32 %1699, 2
  %1701 = trunc i64 %1273 to i32
  %1702 = or i32 %1700, %1701
  store i32 %1702, i32* %64, align 4
  br i1 %110, label %1703, label %1763

1703:                                             ; preds = %1698
  %1704 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %1705 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %1704, align 8
  %1706 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %1707 = load i32, i32* %1706, align 8
  %1708 = sext i32 %1707 to i64
  %1709 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1705, i64 0, i32 0, i64 %1708, i32 0
  %1710 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1709, align 8
  %1711 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1710, i64 0, i32 1
  %1712 = load i64, i64* %1711, align 8
  %1713 = icmp eq i64 %1712, 256
  br i1 %1713, label %1718, label %1714

1714:                                             ; preds = %1703
  %1715 = add i64 %1712, 1
  store i64 %1715, i64* %1711, align 8
  %1716 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1710, i64 0, i32 2, i64 %1712, i32 0, i32 0, i32 0, i32 0
  store i64 %1273, i64* %1716, align 8
  %1717 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1710, i64 0, i32 2, i64 %1712, i32 1
  store i32 %106, i32* %1717, align 8
  br label %1763

1718:                                             ; preds = %1703
  %1719 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1705, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1719) #12
  %1720 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1705, i64 0, i32 1, i32 1
  %1721 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1720 to i64*
  %1722 = load i64, i64* %1721, align 8
  %1723 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1710 to i64*
  store i64 %1722, i64* %1723, align 8
  %1724 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1710 to i64
  store atomic volatile i64 %1724, i64* %1721 monotonic, align 8
  %1725 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1705, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1726 = atomicrmw add i64* %1725, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1719) #12
  %1727 = call i8* @_Znwm(i64 4112) #17
  %1728 = getelementptr inbounds i8, i8* %1727, i64 8
  %1729 = bitcast i8* %1728 to i64*
  store i64 0, i64* %1729, align 8
  %1730 = getelementptr inbounds i8, i8* %1727, i64 16
  %1731 = bitcast i8* %1730 to %"struct.std::__1::pair.1282"*
  %1732 = getelementptr inbounds i8, i8* %1727, i64 4112
  %1733 = bitcast i8* %1732 to %"struct.std::__1::pair.1282"*
  br label %1734

1734:                                             ; preds = %1734, %1718
  %1735 = phi %"struct.std::__1::pair.1282"* [ %1731, %1718 ], [ %1752, %1734 ]
  %1736 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1736, align 8
  %1737 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 0, i32 1
  store i32 0, i32* %1737, align 8
  %1738 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1738, align 8
  %1739 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 1, i32 1
  store i32 0, i32* %1739, align 8
  %1740 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1740, align 8
  %1741 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 2, i32 1
  store i32 0, i32* %1741, align 8
  %1742 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1742, align 8
  %1743 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 3, i32 1
  store i32 0, i32* %1743, align 8
  %1744 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1744, align 8
  %1745 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 4, i32 1
  store i32 0, i32* %1745, align 8
  %1746 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1746, align 8
  %1747 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 5, i32 1
  store i32 0, i32* %1747, align 8
  %1748 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1748, align 8
  %1749 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 6, i32 1
  store i32 0, i32* %1749, align 8
  %1750 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1750, align 8
  %1751 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 7, i32 1
  store i32 0, i32* %1751, align 8
  %1752 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1735, i64 8
  %1753 = icmp eq %"struct.std::__1::pair.1282"* %1752, %1733
  br i1 %1753, label %1754, label %1734

1754:                                             ; preds = %1734
  %1755 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1709 to i8**
  store i8* %1727, i8** %1755, align 8
  %1756 = bitcast i8* %1727 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1757 = load i64, i64* %1729, align 8
  %1758 = icmp eq i64 %1757, 256
  br i1 %1758, label %1763, label %1759

1759:                                             ; preds = %1754
  %1760 = add i64 %1757, 1
  store i64 %1760, i64* %1729, align 8
  %1761 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1756, i64 0, i32 2, i64 %1757, i32 0, i32 0, i32 0, i32 0
  store i64 %1273, i64* %1761, align 8
  %1762 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1756, i64 0, i32 2, i64 %1757, i32 1
  store i32 %106, i32* %1762, align 8
  br label %1763

1763:                                             ; preds = %1759, %1754, %1714, %1698
  %1764 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %1765 = load i64, i64* %1764, align 8
  %1766 = add i64 %1765, %729
  store i64 %1766, i64* %1764, align 8
  br label %1769

1767:                                             ; preds = %1272
  %1768 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %1768, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

1769:                                             ; preds = %120, %126, %148, %153, %633, %644, %720, %1152, %1163, %1239, %1676, %1687, %1763
  %1770 = phi i32 [ 0, %126 ], [ 0, %120 ], [ 0, %148 ], [ 0, %153 ], [ 1, %633 ], [ %654, %644 ], [ 0, %720 ], [ 1, %1152 ], [ %1173, %1163 ], [ 1, %1239 ], [ 1, %1676 ], [ %1697, %1687 ], [ 0, %1763 ]
  %1771 = load i32, i32* %64, align 4
  %1772 = add i32 %1771, -1
  %1773 = add i64 %3, -1
  %1774 = inttoptr i64 %1773 to i32*
  store atomic volatile i32 %1772, i32* %1774 release, align 4
  br label %1775

1775:                                             ; preds = %89, %1769, %75
  %1776 = phi i32 [ 1, %75 ], [ %103, %89 ], [ %1770, %1769 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  br label %3452

1777:                                             ; preds = %5, %42
  %1778 = and i64 %3, -262144
  %1779 = inttoptr i64 %1778 to %"class.v8::internal::BasicMemoryChunk"*
  %1780 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1779, i64 0, i32 1
  %1781 = load i64, i64* %1780, align 8
  %1782 = and i64 %1781, 24
  %1783 = icmp ne i64 %1782, 0
  %1784 = and i64 %1781, 32
  %1785 = icmp ne i64 %1784, 0
  %1786 = and i1 %1785, %1783
  br i1 %1786, label %1787, label %1842, !prof !29

1787:                                             ; preds = %1777
  %1788 = add i64 %3, -1
  %1789 = trunc i64 %1 to i32
  %1790 = trunc i64 %1788 to i32
  %1791 = inttoptr i64 %1788 to i32*
  %1792 = cmpxchg volatile i32* %1791, i32 %1789, i32 %1790 release monotonic
  %1793 = extractvalue { i32, i1 } %1792, 1
  br i1 %1793, label %1794, label %3452

1794:                                             ; preds = %1787
  %1795 = bitcast %"struct.std::__1::pair.1246"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1795) #12
  %1796 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1796, align 8
  %1797 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %1797, align 8
  %1798 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %1799 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %37, i64 0, i32 0
  %1800 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %1798, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %1799, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1795) #12
  %1801 = sext i32 %4 to i64
  %1802 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1803 = load i64, i64* %1802, align 8
  %1804 = add i64 %1803, %1801
  store i64 %1804, i64* %1802, align 8
  %1805 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1806 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1805, align 8
  %1807 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1808 = load i32, i32* %1807, align 8
  %1809 = sext i32 %1808 to i64
  %1810 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 0, i64 %1809, i32 0
  %1811 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %1810, align 8
  %1812 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 1
  %1813 = load i64, i64* %1812, align 8
  %1814 = icmp eq i64 %1813, 4
  br i1 %1814, label %1820, label %1815

1815:                                             ; preds = %1794
  %1816 = add i64 %1813, 1
  store i64 %1816, i64* %1812, align 8
  %1817 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 2, i64 %1813, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1817, align 8
  %1818 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 2, i64 %1813, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %1818, align 8
  %1819 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 2, i64 %1813, i32 2
  store i32 %4, i32* %1819, align 8
  br label %3452

1820:                                             ; preds = %1794
  %1821 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1821) #12
  %1822 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 1, i32 1
  %1823 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %1822 to i64*
  %1824 = load i64, i64* %1823, align 8
  %1825 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811 to i64*
  store i64 %1824, i64* %1825, align 8
  %1826 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811 to i64
  store atomic volatile i64 %1826, i64* %1823 monotonic, align 8
  %1827 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1828 = atomicrmw add i64* %1827, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1821) #12
  %1829 = call i8* @_Znwm(i64 112) #17
  %1830 = getelementptr inbounds i8, i8* %1829, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1830, i8 0, i64 16, i1 false) #12
  %1831 = getelementptr inbounds i8, i8* %1829, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %1831, i8 0, i64 16, i1 false) #12
  %1832 = getelementptr inbounds i8, i8* %1829, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %1832, i8 0, i64 16, i1 false) #12
  %1833 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %1810 to i8**
  store i8* %1829, i8** %1833, align 8
  %1834 = getelementptr inbounds i8, i8* %1829, i64 8
  %1835 = bitcast i8* %1834 to i64*
  store i64 1, i64* %1835, align 8
  %1836 = getelementptr inbounds i8, i8* %1829, i64 16
  %1837 = bitcast i8* %1836 to i64*
  store i64 %3, i64* %1837, align 8
  %1838 = getelementptr inbounds i8, i8* %1829, i64 24
  %1839 = bitcast i8* %1838 to i64*
  store i64 %1, i64* %1839, align 8
  %1840 = getelementptr inbounds i8, i8* %1829, i64 32
  %1841 = bitcast i8* %1840 to i32*
  store i32 %4, i32* %1841, align 8
  br label %3452

1842:                                             ; preds = %1777
  %1843 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %1844 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  %1845 = add i64 %3, -1
  %1846 = and i64 %1845, -262144
  %1847 = inttoptr i64 %1846 to %"class.v8::internal::Page"*
  %1848 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1844, i64 0, i32 24
  %1849 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1848, align 8
  %1850 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1849, i64 0, i32 5, i32 5
  %1851 = load i64, i64* %1850, align 8
  %1852 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 1
  %1853 = load i64, i64* %1852, align 8
  %1854 = and i64 %1853, 524288
  %1855 = icmp eq i64 %1854, 0
  br i1 %1855, label %1866, label %1856

1856:                                             ; preds = %1842
  %1857 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %1858 = load i64, i64* %1857, align 8
  %1859 = icmp ugt i64 %1858, %1851
  br i1 %1859, label %2398, label %1860

1860:                                             ; preds = %1856
  %1861 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %1862 = load i64, i64* %1861, align 32
  %1863 = icmp ult i64 %1862, %1851
  %1864 = icmp ugt i64 %1851, %1845
  %1865 = or i1 %1864, %1863
  br i1 %1865, label %2398, label %1866

1866:                                             ; preds = %1860, %1842
  %1867 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1868 = icmp sgt i32 %4, 8192
  br i1 %1868, label %1869, label %1894

1869:                                             ; preds = %1866
  %1870 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1871 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1870, align 8
  %1872 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1872) #12
  %1873 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 0
  %1874 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 0, i32 1, i32 1
  %1875 = load i64, i64* %1874, align 8
  %1876 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 0, i32 1, i32 2
  %1877 = load i64, i64* %1876, align 8
  %1878 = sext i32 %4 to i64
  %1879 = add i64 %1875, %1878
  %1880 = icmp ult i64 %1877, %1879
  br i1 %1880, label %1890, label %1881

1881:                                             ; preds = %1869
  %1882 = add i64 %1875, 1
  store i64 %1879, i64* %1874, align 8
  %1883 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1884 = icmp eq i8 %1883, 0
  br i1 %1884, label %1886, label %1885

1885:                                             ; preds = %1881
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1873, i32 2) #12
  br label %1886

1886:                                             ; preds = %1885, %1881
  %1887 = and i64 %1882, 1
  %1888 = icmp eq i64 %1887, 0
  br i1 %1888, label %1889, label %1892, !prof !29

1889:                                             ; preds = %1886
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1890:                                             ; preds = %1869
  %1891 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1871, i32 %4, i32 0, i32 2) #12
  br label %1892

1892:                                             ; preds = %1890, %1886
  %1893 = phi i64 [ %1891, %1890 ], [ %1882, %1886 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1872) #12
  br label %1896

1894:                                             ; preds = %1866
  %1895 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1867, i32 %4, i32 0) #12
  br label %1896

1896:                                             ; preds = %1894, %1892
  %1897 = phi i64 [ %1893, %1892 ], [ %1895, %1894 ]
  %1898 = and i64 %1897, 1
  %1899 = icmp eq i64 %1898, 0
  br i1 %1899, label %2398, label %1900

1900:                                             ; preds = %1896
  %1901 = add i64 %1897, -1
  %1902 = inttoptr i64 %1901 to i32*
  %1903 = trunc i64 %1 to i32
  store atomic volatile i32 %1903, i32* %1902 monotonic, align 4
  %1904 = add i64 %1897, 3
  %1905 = add i64 %3, 3
  %1906 = add nsw i32 %4, -4
  %1907 = sdiv i32 %1906, 4
  %1908 = sext i32 %1907 to i64
  %1909 = inttoptr i64 %1904 to i32*
  %1910 = inttoptr i64 %1904 to i8*
  %1911 = inttoptr i64 %1905 to i32*
  %1912 = inttoptr i64 %1905 to i8*
  %1913 = inttoptr i64 %1904 to i8*
  %1914 = add i32 %4, -1
  %1915 = icmp ult i32 %1914, 7
  br i1 %1915, label %2077, label %1916

1916:                                             ; preds = %1900
  %1917 = icmp ult i32 %1907, 16
  br i1 %1917, label %1918, label %2063

1918:                                             ; preds = %1916
  %1919 = icmp ult i32 %1907, 8
  br i1 %1919, label %2010, label %1920

1920:                                             ; preds = %1918
  %1921 = getelementptr i32, i32* %1909, i64 %1908
  %1922 = bitcast i32* %1921 to i8*
  %1923 = getelementptr i32, i32* %1911, i64 %1908
  %1924 = bitcast i32* %1923 to i8*
  %1925 = icmp ult i8* %1910, %1924
  %1926 = icmp ult i8* %1912, %1922
  %1927 = and i1 %1925, %1926
  br i1 %1927, label %2010, label %1928

1928:                                             ; preds = %1920
  %1929 = and i64 %1908, -8
  %1930 = getelementptr i32, i32* %1911, i64 %1929
  %1931 = sub nsw i64 %1908, %1929
  %1932 = getelementptr i32, i32* %1909, i64 %1929
  %1933 = add nsw i64 %1929, -8
  %1934 = lshr exact i64 %1933, 3
  %1935 = add nuw nsw i64 %1934, 1
  %1936 = and i64 %1935, 3
  %1937 = icmp ult i64 %1933, 24
  br i1 %1937, label %1989, label %1938

1938:                                             ; preds = %1928
  %1939 = sub nsw i64 %1935, %1936
  br label %1940

1940:                                             ; preds = %1940, %1938
  %1941 = phi i64 [ 0, %1938 ], [ %1986, %1940 ]
  %1942 = phi i64 [ %1939, %1938 ], [ %1987, %1940 ]
  %1943 = getelementptr i32, i32* %1911, i64 %1941
  %1944 = getelementptr i32, i32* %1909, i64 %1941
  %1945 = bitcast i32* %1943 to <4 x i32>*
  %1946 = load <4 x i32>, <4 x i32>* %1945, align 4, !alias.scope !180
  %1947 = getelementptr i32, i32* %1943, i64 4
  %1948 = bitcast i32* %1947 to <4 x i32>*
  %1949 = load <4 x i32>, <4 x i32>* %1948, align 4, !alias.scope !180
  %1950 = bitcast i32* %1944 to <4 x i32>*
  store <4 x i32> %1946, <4 x i32>* %1950, align 4, !alias.scope !183, !noalias !180
  %1951 = getelementptr i32, i32* %1944, i64 4
  %1952 = bitcast i32* %1951 to <4 x i32>*
  store <4 x i32> %1949, <4 x i32>* %1952, align 4, !alias.scope !183, !noalias !180
  %1953 = or i64 %1941, 8
  %1954 = getelementptr i32, i32* %1911, i64 %1953
  %1955 = getelementptr i32, i32* %1909, i64 %1953
  %1956 = bitcast i32* %1954 to <4 x i32>*
  %1957 = load <4 x i32>, <4 x i32>* %1956, align 4, !alias.scope !180
  %1958 = getelementptr i32, i32* %1954, i64 4
  %1959 = bitcast i32* %1958 to <4 x i32>*
  %1960 = load <4 x i32>, <4 x i32>* %1959, align 4, !alias.scope !180
  %1961 = bitcast i32* %1955 to <4 x i32>*
  store <4 x i32> %1957, <4 x i32>* %1961, align 4, !alias.scope !183, !noalias !180
  %1962 = getelementptr i32, i32* %1955, i64 4
  %1963 = bitcast i32* %1962 to <4 x i32>*
  store <4 x i32> %1960, <4 x i32>* %1963, align 4, !alias.scope !183, !noalias !180
  %1964 = or i64 %1941, 16
  %1965 = getelementptr i32, i32* %1911, i64 %1964
  %1966 = getelementptr i32, i32* %1909, i64 %1964
  %1967 = bitcast i32* %1965 to <4 x i32>*
  %1968 = load <4 x i32>, <4 x i32>* %1967, align 4, !alias.scope !180
  %1969 = getelementptr i32, i32* %1965, i64 4
  %1970 = bitcast i32* %1969 to <4 x i32>*
  %1971 = load <4 x i32>, <4 x i32>* %1970, align 4, !alias.scope !180
  %1972 = bitcast i32* %1966 to <4 x i32>*
  store <4 x i32> %1968, <4 x i32>* %1972, align 4, !alias.scope !183, !noalias !180
  %1973 = getelementptr i32, i32* %1966, i64 4
  %1974 = bitcast i32* %1973 to <4 x i32>*
  store <4 x i32> %1971, <4 x i32>* %1974, align 4, !alias.scope !183, !noalias !180
  %1975 = or i64 %1941, 24
  %1976 = getelementptr i32, i32* %1911, i64 %1975
  %1977 = getelementptr i32, i32* %1909, i64 %1975
  %1978 = bitcast i32* %1976 to <4 x i32>*
  %1979 = load <4 x i32>, <4 x i32>* %1978, align 4, !alias.scope !180
  %1980 = getelementptr i32, i32* %1976, i64 4
  %1981 = bitcast i32* %1980 to <4 x i32>*
  %1982 = load <4 x i32>, <4 x i32>* %1981, align 4, !alias.scope !180
  %1983 = bitcast i32* %1977 to <4 x i32>*
  store <4 x i32> %1979, <4 x i32>* %1983, align 4, !alias.scope !183, !noalias !180
  %1984 = getelementptr i32, i32* %1977, i64 4
  %1985 = bitcast i32* %1984 to <4 x i32>*
  store <4 x i32> %1982, <4 x i32>* %1985, align 4, !alias.scope !183, !noalias !180
  %1986 = add i64 %1941, 32
  %1987 = add i64 %1942, -4
  %1988 = icmp eq i64 %1987, 0
  br i1 %1988, label %1989, label %1940, !llvm.loop !185

1989:                                             ; preds = %1940, %1928
  %1990 = phi i64 [ 0, %1928 ], [ %1986, %1940 ]
  %1991 = icmp eq i64 %1936, 0
  br i1 %1991, label %2008, label %1992

1992:                                             ; preds = %1989, %1992
  %1993 = phi i64 [ %2005, %1992 ], [ %1990, %1989 ]
  %1994 = phi i64 [ %2006, %1992 ], [ %1936, %1989 ]
  %1995 = getelementptr i32, i32* %1911, i64 %1993
  %1996 = getelementptr i32, i32* %1909, i64 %1993
  %1997 = bitcast i32* %1995 to <4 x i32>*
  %1998 = load <4 x i32>, <4 x i32>* %1997, align 4, !alias.scope !180
  %1999 = getelementptr i32, i32* %1995, i64 4
  %2000 = bitcast i32* %1999 to <4 x i32>*
  %2001 = load <4 x i32>, <4 x i32>* %2000, align 4, !alias.scope !180
  %2002 = bitcast i32* %1996 to <4 x i32>*
  store <4 x i32> %1998, <4 x i32>* %2002, align 4, !alias.scope !183, !noalias !180
  %2003 = getelementptr i32, i32* %1996, i64 4
  %2004 = bitcast i32* %2003 to <4 x i32>*
  store <4 x i32> %2001, <4 x i32>* %2004, align 4, !alias.scope !183, !noalias !180
  %2005 = add i64 %1993, 8
  %2006 = add i64 %1994, -1
  %2007 = icmp eq i64 %2006, 0
  br i1 %2007, label %2008, label %1992, !llvm.loop !186

2008:                                             ; preds = %1992, %1989
  %2009 = icmp eq i64 %1929, %1908
  br i1 %2009, label %2077, label %2010

2010:                                             ; preds = %2008, %1920, %1918
  %2011 = phi i32* [ %1911, %1920 ], [ %1911, %1918 ], [ %1930, %2008 ]
  %2012 = phi i64 [ %1908, %1920 ], [ %1908, %1918 ], [ %1931, %2008 ]
  %2013 = phi i32* [ %1909, %1920 ], [ %1909, %1918 ], [ %1932, %2008 ]
  %2014 = add nsw i64 %2012, -1
  %2015 = and i64 %2012, 7
  %2016 = icmp eq i64 %2015, 0
  br i1 %2016, label %2028, label %2017

2017:                                             ; preds = %2010, %2017
  %2018 = phi i32* [ %2023, %2017 ], [ %2011, %2010 ]
  %2019 = phi i64 [ %2022, %2017 ], [ %2012, %2010 ]
  %2020 = phi i32* [ %2025, %2017 ], [ %2013, %2010 ]
  %2021 = phi i64 [ %2026, %2017 ], [ %2015, %2010 ]
  %2022 = add i64 %2019, -1
  %2023 = getelementptr inbounds i32, i32* %2018, i64 1
  %2024 = load i32, i32* %2018, align 4
  %2025 = getelementptr inbounds i32, i32* %2020, i64 1
  store i32 %2024, i32* %2020, align 4
  %2026 = add i64 %2021, -1
  %2027 = icmp eq i64 %2026, 0
  br i1 %2027, label %2028, label %2017, !llvm.loop !187

2028:                                             ; preds = %2017, %2010
  %2029 = phi i32* [ %2011, %2010 ], [ %2023, %2017 ]
  %2030 = phi i64 [ %2012, %2010 ], [ %2022, %2017 ]
  %2031 = phi i32* [ %2013, %2010 ], [ %2025, %2017 ]
  %2032 = icmp ult i64 %2014, 7
  br i1 %2032, label %2077, label %2033

2033:                                             ; preds = %2028, %2033
  %2034 = phi i32* [ %2059, %2033 ], [ %2029, %2028 ]
  %2035 = phi i64 [ %2058, %2033 ], [ %2030, %2028 ]
  %2036 = phi i32* [ %2061, %2033 ], [ %2031, %2028 ]
  %2037 = getelementptr inbounds i32, i32* %2034, i64 1
  %2038 = load i32, i32* %2034, align 4
  %2039 = getelementptr inbounds i32, i32* %2036, i64 1
  store i32 %2038, i32* %2036, align 4
  %2040 = getelementptr inbounds i32, i32* %2034, i64 2
  %2041 = load i32, i32* %2037, align 4
  %2042 = getelementptr inbounds i32, i32* %2036, i64 2
  store i32 %2041, i32* %2039, align 4
  %2043 = getelementptr inbounds i32, i32* %2034, i64 3
  %2044 = load i32, i32* %2040, align 4
  %2045 = getelementptr inbounds i32, i32* %2036, i64 3
  store i32 %2044, i32* %2042, align 4
  %2046 = getelementptr inbounds i32, i32* %2034, i64 4
  %2047 = load i32, i32* %2043, align 4
  %2048 = getelementptr inbounds i32, i32* %2036, i64 4
  store i32 %2047, i32* %2045, align 4
  %2049 = getelementptr inbounds i32, i32* %2034, i64 5
  %2050 = load i32, i32* %2046, align 4
  %2051 = getelementptr inbounds i32, i32* %2036, i64 5
  store i32 %2050, i32* %2048, align 4
  %2052 = getelementptr inbounds i32, i32* %2034, i64 6
  %2053 = load i32, i32* %2049, align 4
  %2054 = getelementptr inbounds i32, i32* %2036, i64 6
  store i32 %2053, i32* %2051, align 4
  %2055 = getelementptr inbounds i32, i32* %2034, i64 7
  %2056 = load i32, i32* %2052, align 4
  %2057 = getelementptr inbounds i32, i32* %2036, i64 7
  store i32 %2056, i32* %2054, align 4
  %2058 = add i64 %2035, -8
  %2059 = getelementptr inbounds i32, i32* %2034, i64 8
  %2060 = load i32, i32* %2055, align 4
  %2061 = getelementptr inbounds i32, i32* %2036, i64 8
  store i32 %2060, i32* %2057, align 4
  %2062 = icmp eq i64 %2058, 0
  br i1 %2062, label %2077, label %2033, !llvm.loop !188

2063:                                             ; preds = %1916
  %2064 = inttoptr i64 %1905 to i8*
  %2065 = shl nsw i64 %1908, 2
  %2066 = add nsw i64 %2065, -4
  %2067 = lshr exact i64 %2066, 2
  switch i64 %2067, label %2076 [
    i64 3, label %2075
    i64 1, label %2070
    i64 2, label %2074
    i64 0, label %2068
  ]

2068:                                             ; preds = %2063
  %2069 = load i32, i32* %1911, align 1
  store i32 %2069, i32* %1909, align 1
  br label %2077

2070:                                             ; preds = %2063
  %2071 = inttoptr i64 %1905 to i64*
  %2072 = inttoptr i64 %1904 to i64*
  %2073 = load i64, i64* %2071, align 1
  store i64 %2073, i64* %2072, align 1
  br label %2077

2074:                                             ; preds = %2063
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1913, i8* align 1 %2064, i64 12, i1 false) #12
  br label %2077

2075:                                             ; preds = %2063
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1913, i8* align 1 %2064, i64 16, i1 false) #12
  br label %2077

2076:                                             ; preds = %2063
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1913, i8* align 1 %2064, i64 %2065, i1 false) #12
  br label %2077

2077:                                             ; preds = %2028, %2033, %2008, %2076, %2075, %2074, %2070, %2068, %1900
  %2078 = trunc i64 %1901 to i32
  %2079 = inttoptr i64 %1845 to i32*
  %2080 = cmpxchg volatile i32* %2079, i32 %1903, i32 %2078 release monotonic
  %2081 = extractvalue { i32, i1 } %2080, 1
  br i1 %2081, label %2082, label %2290

2082:                                             ; preds = %2077
  %2083 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %2084 = load i8, i8* %2083, align 8, !range !2
  %2085 = icmp eq i8 %2084, 0
  br i1 %2085, label %2088, label %2086, !prof !60

2086:                                             ; preds = %2082
  %2087 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %2087, i64 %1897, i64 %3, i32 %4) #12
  br label %2088

2088:                                             ; preds = %2086, %2082
  %2089 = load i8, i8* %39, align 1, !range !2
  %2090 = icmp eq i8 %2089, 0
  br i1 %2090, label %2218, label %2091

2091:                                             ; preds = %2088
  %2092 = and i64 %1897, -262144
  %2093 = or i64 %2092, 272
  %2094 = sub i64 %1897, %2092
  %2095 = trunc i64 %2094 to i32
  %2096 = lshr i32 %2095, 2
  %2097 = and i32 %2096, 31
  %2098 = shl i32 1, %2097
  %2099 = inttoptr i64 %2093 to i32*
  %2100 = lshr i64 %2094, 7
  %2101 = and i64 %2100, 33554431
  %2102 = getelementptr inbounds i32, i32* %2099, i64 %2101
  %2103 = load atomic i32, i32* %2102 acquire, align 4
  %2104 = and i32 %2103, %2098
  %2105 = icmp eq i32 %2104, 0
  br i1 %2105, label %2115, label %2106

2106:                                             ; preds = %2091
  %2107 = shl i32 %2098, 1
  %2108 = icmp eq i32 %2107, 0
  %2109 = getelementptr inbounds i32, i32* %2102, i64 1
  %2110 = select i1 %2108, i32 1, i32 %2107
  %2111 = select i1 %2108, i32* %2109, i32* %2102
  %2112 = load atomic i32, i32* %2111 acquire, align 4
  %2113 = and i32 %2112, %2110
  %2114 = icmp eq i32 %2113, 0
  br i1 %2114, label %2115, label %2218

2115:                                             ; preds = %2106, %2091
  %2116 = or i64 %1778, 272
  %2117 = sub i64 %3, %1778
  %2118 = trunc i64 %2117 to i32
  %2119 = lshr i32 %2118, 2
  %2120 = and i32 %2119, 31
  %2121 = shl i32 1, %2120
  %2122 = inttoptr i64 %2116 to i32*
  %2123 = lshr i64 %2117, 7
  %2124 = and i64 %2123, 33554431
  %2125 = getelementptr inbounds i32, i32* %2122, i64 %2124
  %2126 = load atomic i32, i32* %2125 acquire, align 4
  %2127 = and i32 %2126, %2121
  %2128 = icmp eq i32 %2127, 0
  br i1 %2128, label %2149, label %2129

2129:                                             ; preds = %2115
  %2130 = shl i32 %2121, 1
  %2131 = icmp eq i32 %2130, 0
  %2132 = getelementptr inbounds i32, i32* %2125, i64 1
  %2133 = select i1 %2131, i32 1, i32 %2130
  %2134 = select i1 %2131, i32* %2132, i32* %2125
  %2135 = load atomic i32, i32* %2134 acquire, align 4
  %2136 = and i32 %2135, %2133
  %2137 = icmp eq i32 %2136, 0
  br i1 %2137, label %2138, label %2149

2138:                                             ; preds = %2129
  %2139 = load atomic i32, i32* %2102 monotonic, align 4
  br label %2140

2140:                                             ; preds = %2144, %2138
  %2141 = phi i32 [ %2139, %2138 ], [ %2147, %2144 ]
  %2142 = and i32 %2141, %2098
  %2143 = icmp eq i32 %2142, %2098
  br i1 %2143, label %2218, label %2144

2144:                                             ; preds = %2140
  %2145 = or i32 %2141, %2098
  %2146 = cmpxchg volatile i32* %2102, i32 %2141, i32 %2145 release monotonic
  %2147 = extractvalue { i32, i1 } %2146, 0
  %2148 = extractvalue { i32, i1 } %2146, 1
  br i1 %2148, label %2218, label %2140

2149:                                             ; preds = %2129, %2115
  %2150 = load atomic i32, i32* %2125 acquire, align 4
  %2151 = and i32 %2150, %2121
  %2152 = icmp eq i32 %2151, 0
  br i1 %2152, label %2218, label %2153

2153:                                             ; preds = %2149
  %2154 = shl i32 %2121, 1
  %2155 = icmp eq i32 %2154, 0
  %2156 = getelementptr inbounds i32, i32* %2125, i64 1
  %2157 = select i1 %2155, i32 1, i32 %2154
  %2158 = select i1 %2155, i32* %2156, i32* %2125
  %2159 = load atomic i32, i32* %2158 acquire, align 4
  %2160 = and i32 %2159, %2157
  %2161 = icmp eq i32 %2160, 0
  br i1 %2161, label %2218, label %2162

2162:                                             ; preds = %2153
  %2163 = load atomic i32, i32* %2102 monotonic, align 4
  br label %2164

2164:                                             ; preds = %2168, %2162
  %2165 = phi i32 [ %2163, %2162 ], [ %2171, %2168 ]
  %2166 = and i32 %2165, %2098
  %2167 = icmp eq i32 %2166, %2098
  br i1 %2167, label %2218, label %2168

2168:                                             ; preds = %2164
  %2169 = or i32 %2165, %2098
  %2170 = cmpxchg volatile i32* %2102, i32 %2165, i32 %2169 release monotonic
  %2171 = extractvalue { i32, i1 } %2170, 0
  %2172 = extractvalue { i32, i1 } %2170, 1
  br i1 %2172, label %2173, label %2164

2173:                                             ; preds = %2168
  %2174 = bitcast %"class.v8::internal::HeapObject"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2174) #12
  %2175 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %32, i64 0, i32 0, i32 0, i32 0
  store i64 %1897, i64* %2175, align 8
  %2176 = xor i64 %2092, -1
  %2177 = add i64 %1897, %2176
  %2178 = trunc i64 %2177 to i32
  %2179 = lshr i32 %2178, 2
  %2180 = and i32 %2179, 31
  %2181 = shl i32 1, %2180
  %2182 = lshr i64 %2177, 7
  %2183 = and i64 %2182, 33554431
  %2184 = getelementptr inbounds i32, i32* %2099, i64 %2183
  %2185 = load atomic i32, i32* %2184 acquire, align 4
  %2186 = and i32 %2185, %2181
  %2187 = icmp eq i32 %2186, 0
  br i1 %2187, label %2217, label %2188

2188:                                             ; preds = %2173
  %2189 = shl i32 %2181, 1
  %2190 = icmp eq i32 %2189, 0
  %2191 = getelementptr inbounds i32, i32* %2184, i64 1
  %2192 = select i1 %2190, i32 1, i32 %2189
  %2193 = select i1 %2190, i32* %2191, i32* %2184
  %2194 = load atomic i32, i32* %2193 monotonic, align 4
  br label %2195

2195:                                             ; preds = %2199, %2188
  %2196 = phi i32 [ %2194, %2188 ], [ %2202, %2199 ]
  %2197 = and i32 %2196, %2192
  %2198 = icmp eq i32 %2197, %2192
  br i1 %2198, label %2217, label %2199

2199:                                             ; preds = %2195
  %2200 = or i32 %2196, %2192
  %2201 = cmpxchg volatile i32* %2193, i32 %2196, i32 %2200 release monotonic
  %2202 = extractvalue { i32, i1 } %2201, 0
  %2203 = extractvalue { i32, i1 } %2201, 1
  br i1 %2203, label %2204, label %2195

2204:                                             ; preds = %2199
  %2205 = inttoptr i64 %2092 to %"class.v8::internal::MemoryChunk"*
  %2206 = load i64, i64* %2175, align 8
  %2207 = and i64 %2206, -4294967296
  %2208 = add i64 %2206, -1
  %2209 = inttoptr i64 %2208 to i32*
  %2210 = load atomic i32, i32* %2209 monotonic, align 4
  %2211 = zext i32 %2210 to i64
  %2212 = or i64 %2207, %2211
  %2213 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %32, i64 %2212) #12
  %2214 = sext i32 %2213 to i64
  %2215 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %2205, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %2216 = atomicrmw add i64* %2215, i64 %2214 seq_cst
  br label %2217

2217:                                             ; preds = %2195, %2204, %2173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2174) #12
  br label %2218

2218:                                             ; preds = %2144, %2140, %2164, %2217, %2153, %2149, %2106, %2088
  %2219 = bitcast %"class.v8::internal::Heap"** %1843 to i64*
  %2220 = load i64, i64* %2219, align 8
  %2221 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %2222 = icmp eq i8 %2221, 0
  br i1 %2222, label %2326, label %2223

2223:                                             ; preds = %2218
  %2224 = add i64 %1, 7
  %2225 = inttoptr i64 %2224 to i16*
  %2226 = load atomic i16, i16* %2225 monotonic, align 2
  switch i16 %2226, label %2326 [
    i16 1085, label %2227
    i16 1057, label %2227
  ]

2227:                                             ; preds = %2223, %2223
  %2228 = bitcast %"class.v8::internal::HeapObject"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2228) #12
  %2229 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %33, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %2229, align 8
  %2230 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %33, i64 %1) #12
  %2231 = sext i32 %2230 to i64
  %2232 = add i64 %1845, %2231
  %2233 = add i64 %2232, 4
  %2234 = and i64 %2233, -262144
  %2235 = inttoptr i64 %2234 to %"class.v8::internal::Page"*
  %2236 = icmp eq %"class.v8::internal::Page"* %1847, %2235
  br i1 %2236, label %2237, label %2267

2237:                                             ; preds = %2227
  %2238 = add i64 %2231, %3
  %2239 = add i64 %2220, -41416
  %2240 = inttoptr i64 %2239 to %"class.v8::internal::Isolate"*
  %2241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2240, i64 0, i32 0, i32 7, i32 0, i64 534
  %2242 = load i64, i64* %2241, align 8
  %2243 = inttoptr i64 %2232 to i32*
  %2244 = load atomic i32, i32* %2243 monotonic, align 4
  %2245 = trunc i64 %2242 to i32
  %2246 = icmp eq i32 %2244, %2245
  br i1 %2246, label %2247, label %2267

2247:                                             ; preds = %2237
  %2248 = load i64, i64* %1852, align 8
  %2249 = and i64 %2248, 524288
  %2250 = icmp eq i64 %2249, 0
  br i1 %2250, label %2268, label %2251

2251:                                             ; preds = %2247
  %2252 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 8, i32 0
  %2253 = bitcast %"struct.std::__1::__atomic_base.69"* %2252 to i64*
  %2254 = load atomic i64, i64* %2253 seq_cst, align 64
  %2255 = inttoptr i64 %2254 to %"class.v8::internal::SemiSpace"*
  %2256 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %2255, i64 0, i32 5
  %2257 = load i64, i64* %2256, align 8
  %2258 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %2259 = load i64, i64* %2258, align 8
  %2260 = icmp ugt i64 %2259, %2257
  br i1 %2260, label %2267, label %2261

2261:                                             ; preds = %2251
  %2262 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %2263 = load i64, i64* %2262, align 32
  %2264 = icmp ule i64 %2263, %2257
  %2265 = icmp ult i64 %1845, %2257
  %2266 = or i1 %2265, %2264
  br i1 %2266, label %2267, label %2268

2267:                                             ; preds = %2261, %2251, %2237, %2227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2228) #12
  br label %2326

2268:                                             ; preds = %2261, %2247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2228) #12
  %2269 = trunc i64 %2238 to i32
  %2270 = icmp eq i32 %2269, 0
  br i1 %2270, label %2326, label %2271

2271:                                             ; preds = %2268
  %2272 = and i64 %2238, -4294967296
  %2273 = add i64 %2238, 3
  %2274 = inttoptr i64 %2273 to i32*
  %2275 = load i32, i32* %2274, align 4
  %2276 = zext i32 %2275 to i64
  %2277 = or i64 %2272, %2276
  %2278 = bitcast %"class.v8::internal::AllocationSite"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2278) #12
  %2279 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2277, i64* %2279, align 8
  %2280 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %2281 = bitcast %"class.std::__1::tuple"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2281) #12
  %2282 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %34, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %36, %"class.v8::internal::AllocationSite"** %2282, align 8
  %2283 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2283) #12
  %2284 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %2280, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %36, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %34, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %35) #12
  %2285 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %2284, 0
  %2286 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %2285, i64 3
  %2287 = bitcast %"struct.std::__1::__hash_node_base.518"* %2286 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2283) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2281) #12
  %2288 = load i64, i64* %2287, align 8
  %2289 = add i64 %2288, 1
  store i64 %2289, i64* %2287, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2278) #12
  br label %2326

2290:                                             ; preds = %2077
  %2291 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %2292 = load i64, i64* %2291, align 8
  %2293 = icmp eq i64 %2292, 0
  br i1 %2293, label %2299, label %2294

2294:                                             ; preds = %2290
  %2295 = sext i32 %4 to i64
  %2296 = sub i64 %2292, %2295
  %2297 = icmp eq i64 %2296, %1901
  br i1 %2297, label %2298, label %2299

2298:                                             ; preds = %2294
  store i64 %1901, i64* %2291, align 8
  br label %2303

2299:                                             ; preds = %2294, %2290
  %2300 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1867, i64 0, i32 0
  %2301 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2300, align 8
  %2302 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %2301, i64 %1901, i32 %4, i32 1) #12
  br label %2303

2303:                                             ; preds = %2299, %2298
  %2304 = load atomic i32, i32* %2079 acquire, align 4
  %2305 = add i32 %2304, 1
  %2306 = inttoptr i64 %2 to i32*
  %2307 = load i32, i32* %2306, align 4
  %2308 = and i32 %2307, 2
  %2309 = or i32 %2308, %2305
  store i32 %2309, i32* %2306, align 4
  %2310 = zext i32 %2309 to i64
  %2311 = and i64 %2310, 1
  %2312 = icmp ne i64 %2311, 0
  %2313 = icmp ne i32 %2309, 3
  %2314 = and i1 %2313, %2312
  br i1 %2314, label %2315, label %3452

2315:                                             ; preds = %2303
  %2316 = and i64 %2, -4294967296
  %2317 = and i64 %2310, 4294705152
  %2318 = or i64 %2317, %2316
  %2319 = inttoptr i64 %2318 to %"class.v8::internal::BasicMemoryChunk"*
  %2320 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2319, i64 0, i32 1
  %2321 = load i64, i64* %2320, align 8
  %2322 = lshr i64 %2321, 4
  %2323 = trunc i64 %2322 to i32
  %2324 = and i32 %2323, 1
  %2325 = xor i32 %2324, 1
  br label %3452

2326:                                             ; preds = %2271, %2268, %2267, %2223, %2218
  %2327 = inttoptr i64 %2 to i32*
  %2328 = load i32, i32* %2327, align 4
  %2329 = and i32 %2328, 2
  %2330 = trunc i64 %1897 to i32
  %2331 = or i32 %2329, %2330
  store i32 %2331, i32* %2327, align 4
  %2332 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %2333 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %2332, align 8
  %2334 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %2335 = load i32, i32* %2334, align 8
  %2336 = sext i32 %2335 to i64
  %2337 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 0, i64 %2336, i32 0
  %2338 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2337, align 8
  %2339 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338, i64 0, i32 1
  %2340 = load i64, i64* %2339, align 8
  %2341 = icmp eq i64 %2340, 256
  br i1 %2341, label %2346, label %2342

2342:                                             ; preds = %2326
  %2343 = add i64 %2340, 1
  store i64 %2343, i64* %2339, align 8
  %2344 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338, i64 0, i32 2, i64 %2340, i32 0, i32 0, i32 0, i32 0
  store i64 %1897, i64* %2344, align 8
  %2345 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338, i64 0, i32 2, i64 %2340, i32 1
  br label %2391

2346:                                             ; preds = %2326
  %2347 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2347) #12
  %2348 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 1, i32 1
  %2349 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2348 to i64*
  %2350 = load i64, i64* %2349, align 8
  %2351 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338 to i64*
  store i64 %2350, i64* %2351, align 8
  %2352 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338 to i64
  store atomic volatile i64 %2352, i64* %2349 monotonic, align 8
  %2353 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2354 = atomicrmw add i64* %2353, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2347) #12
  %2355 = call i8* @_Znwm(i64 4112) #17
  %2356 = getelementptr inbounds i8, i8* %2355, i64 8
  %2357 = bitcast i8* %2356 to i64*
  store i64 0, i64* %2357, align 8
  %2358 = getelementptr inbounds i8, i8* %2355, i64 16
  %2359 = bitcast i8* %2358 to %"struct.std::__1::pair.1282"*
  %2360 = getelementptr inbounds i8, i8* %2355, i64 4112
  %2361 = bitcast i8* %2360 to %"struct.std::__1::pair.1282"*
  br label %2362

2362:                                             ; preds = %2362, %2346
  %2363 = phi %"struct.std::__1::pair.1282"* [ %2359, %2346 ], [ %2380, %2362 ]
  %2364 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2364, align 8
  %2365 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 0, i32 1
  store i32 0, i32* %2365, align 8
  %2366 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2366, align 8
  %2367 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 1, i32 1
  store i32 0, i32* %2367, align 8
  %2368 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2368, align 8
  %2369 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 2, i32 1
  store i32 0, i32* %2369, align 8
  %2370 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2370, align 8
  %2371 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 3, i32 1
  store i32 0, i32* %2371, align 8
  %2372 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2372, align 8
  %2373 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 4, i32 1
  store i32 0, i32* %2373, align 8
  %2374 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2374, align 8
  %2375 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 5, i32 1
  store i32 0, i32* %2375, align 8
  %2376 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2376, align 8
  %2377 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 6, i32 1
  store i32 0, i32* %2377, align 8
  %2378 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2378, align 8
  %2379 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 7, i32 1
  store i32 0, i32* %2379, align 8
  %2380 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 8
  %2381 = icmp eq %"struct.std::__1::pair.1282"* %2380, %2361
  br i1 %2381, label %2382, label %2362

2382:                                             ; preds = %2362
  %2383 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2337 to i8**
  store i8* %2355, i8** %2383, align 8
  %2384 = bitcast i8* %2355 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %2385 = load i64, i64* %2357, align 8
  %2386 = icmp eq i64 %2385, 256
  br i1 %2386, label %2393, label %2387

2387:                                             ; preds = %2382
  %2388 = add i64 %2385, 1
  store i64 %2388, i64* %2357, align 8
  %2389 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2384, i64 0, i32 2, i64 %2385, i32 0, i32 0, i32 0, i32 0
  store i64 %1897, i64* %2389, align 8
  %2390 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2384, i64 0, i32 2, i64 %2385, i32 1
  br label %2391

2391:                                             ; preds = %2342, %2387
  %2392 = phi i32* [ %2390, %2387 ], [ %2345, %2342 ]
  store i32 %4, i32* %2392, align 8
  br label %2393

2393:                                             ; preds = %2391, %2382
  %2394 = sext i32 %4 to i64
  %2395 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %2396 = load i64, i64* %2395, align 8
  %2397 = add i64 %2396, %2394
  store i64 %2397, i64* %2395, align 8
  br label %3452

2398:                                             ; preds = %1896, %1860, %1856
  %2399 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %2400 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %2401 = load i64, i64* %2400, align 8
  %2402 = sext i32 %4 to i64
  %2403 = add i64 %2401, %2402
  %2404 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %2405 = load i64, i64* %2404, align 8
  %2406 = icmp ugt i64 %2403, %2405
  br i1 %2406, label %2407, label %2412

2407:                                             ; preds = %2398
  %2408 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %2409 = load i32, i32* %2408, align 8
  %2410 = sext i32 %2409 to i64
  %2411 = shl nsw i64 %2410, 1
  br label %2417

2412:                                             ; preds = %2398
  store i64 %2403, i64* %2400, align 8
  %2413 = add i64 %2401, 1
  %2414 = and i64 %2413, 1
  %2415 = icmp eq i64 %2414, 0
  br i1 %2415, label %2416, label %2417, !prof !29

2416:                                             ; preds = %2412
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

2417:                                             ; preds = %2412, %2407
  %2418 = phi i64 [ %2411, %2407 ], [ %2413, %2412 ]
  %2419 = and i64 %2418, 1
  %2420 = icmp eq i64 %2419, 0
  br i1 %2420, label %2421, label %2425

2421:                                             ; preds = %2417
  %2422 = tail call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %2399, i32 %4, i32 0, i32 2) #12
  %2423 = and i64 %2422, 1
  %2424 = icmp eq i64 %2423, 0
  br i1 %2424, label %2921, label %2425

2425:                                             ; preds = %2421, %2417
  %2426 = phi i64 [ %2422, %2421 ], [ %2418, %2417 ]
  %2427 = add i64 %2426, -1
  %2428 = inttoptr i64 %2427 to i32*
  %2429 = trunc i64 %1 to i32
  store atomic volatile i32 %2429, i32* %2428 monotonic, align 4
  %2430 = add i64 %2426, 3
  %2431 = add i64 %3, 3
  %2432 = add nsw i32 %4, -4
  %2433 = sdiv i32 %2432, 4
  %2434 = sext i32 %2433 to i64
  %2435 = inttoptr i64 %2430 to i32*
  %2436 = inttoptr i64 %2430 to i8*
  %2437 = inttoptr i64 %2431 to i32*
  %2438 = inttoptr i64 %2431 to i8*
  %2439 = inttoptr i64 %2430 to i8*
  %2440 = add i32 %4, -1
  %2441 = icmp ult i32 %2440, 7
  br i1 %2441, label %2603, label %2442

2442:                                             ; preds = %2425
  %2443 = icmp ult i32 %2433, 16
  br i1 %2443, label %2444, label %2589

2444:                                             ; preds = %2442
  %2445 = icmp ult i32 %2433, 8
  br i1 %2445, label %2536, label %2446

2446:                                             ; preds = %2444
  %2447 = getelementptr i32, i32* %2435, i64 %2434
  %2448 = bitcast i32* %2447 to i8*
  %2449 = getelementptr i32, i32* %2437, i64 %2434
  %2450 = bitcast i32* %2449 to i8*
  %2451 = icmp ult i8* %2436, %2450
  %2452 = icmp ult i8* %2438, %2448
  %2453 = and i1 %2451, %2452
  br i1 %2453, label %2536, label %2454

2454:                                             ; preds = %2446
  %2455 = and i64 %2434, -8
  %2456 = getelementptr i32, i32* %2437, i64 %2455
  %2457 = sub nsw i64 %2434, %2455
  %2458 = getelementptr i32, i32* %2435, i64 %2455
  %2459 = add nsw i64 %2455, -8
  %2460 = lshr exact i64 %2459, 3
  %2461 = add nuw nsw i64 %2460, 1
  %2462 = and i64 %2461, 3
  %2463 = icmp ult i64 %2459, 24
  br i1 %2463, label %2515, label %2464

2464:                                             ; preds = %2454
  %2465 = sub nsw i64 %2461, %2462
  br label %2466

2466:                                             ; preds = %2466, %2464
  %2467 = phi i64 [ 0, %2464 ], [ %2512, %2466 ]
  %2468 = phi i64 [ %2465, %2464 ], [ %2513, %2466 ]
  %2469 = getelementptr i32, i32* %2437, i64 %2467
  %2470 = getelementptr i32, i32* %2435, i64 %2467
  %2471 = bitcast i32* %2469 to <4 x i32>*
  %2472 = load <4 x i32>, <4 x i32>* %2471, align 4, !alias.scope !189
  %2473 = getelementptr i32, i32* %2469, i64 4
  %2474 = bitcast i32* %2473 to <4 x i32>*
  %2475 = load <4 x i32>, <4 x i32>* %2474, align 4, !alias.scope !189
  %2476 = bitcast i32* %2470 to <4 x i32>*
  store <4 x i32> %2472, <4 x i32>* %2476, align 4, !alias.scope !192, !noalias !189
  %2477 = getelementptr i32, i32* %2470, i64 4
  %2478 = bitcast i32* %2477 to <4 x i32>*
  store <4 x i32> %2475, <4 x i32>* %2478, align 4, !alias.scope !192, !noalias !189
  %2479 = or i64 %2467, 8
  %2480 = getelementptr i32, i32* %2437, i64 %2479
  %2481 = getelementptr i32, i32* %2435, i64 %2479
  %2482 = bitcast i32* %2480 to <4 x i32>*
  %2483 = load <4 x i32>, <4 x i32>* %2482, align 4, !alias.scope !189
  %2484 = getelementptr i32, i32* %2480, i64 4
  %2485 = bitcast i32* %2484 to <4 x i32>*
  %2486 = load <4 x i32>, <4 x i32>* %2485, align 4, !alias.scope !189
  %2487 = bitcast i32* %2481 to <4 x i32>*
  store <4 x i32> %2483, <4 x i32>* %2487, align 4, !alias.scope !192, !noalias !189
  %2488 = getelementptr i32, i32* %2481, i64 4
  %2489 = bitcast i32* %2488 to <4 x i32>*
  store <4 x i32> %2486, <4 x i32>* %2489, align 4, !alias.scope !192, !noalias !189
  %2490 = or i64 %2467, 16
  %2491 = getelementptr i32, i32* %2437, i64 %2490
  %2492 = getelementptr i32, i32* %2435, i64 %2490
  %2493 = bitcast i32* %2491 to <4 x i32>*
  %2494 = load <4 x i32>, <4 x i32>* %2493, align 4, !alias.scope !189
  %2495 = getelementptr i32, i32* %2491, i64 4
  %2496 = bitcast i32* %2495 to <4 x i32>*
  %2497 = load <4 x i32>, <4 x i32>* %2496, align 4, !alias.scope !189
  %2498 = bitcast i32* %2492 to <4 x i32>*
  store <4 x i32> %2494, <4 x i32>* %2498, align 4, !alias.scope !192, !noalias !189
  %2499 = getelementptr i32, i32* %2492, i64 4
  %2500 = bitcast i32* %2499 to <4 x i32>*
  store <4 x i32> %2497, <4 x i32>* %2500, align 4, !alias.scope !192, !noalias !189
  %2501 = or i64 %2467, 24
  %2502 = getelementptr i32, i32* %2437, i64 %2501
  %2503 = getelementptr i32, i32* %2435, i64 %2501
  %2504 = bitcast i32* %2502 to <4 x i32>*
  %2505 = load <4 x i32>, <4 x i32>* %2504, align 4, !alias.scope !189
  %2506 = getelementptr i32, i32* %2502, i64 4
  %2507 = bitcast i32* %2506 to <4 x i32>*
  %2508 = load <4 x i32>, <4 x i32>* %2507, align 4, !alias.scope !189
  %2509 = bitcast i32* %2503 to <4 x i32>*
  store <4 x i32> %2505, <4 x i32>* %2509, align 4, !alias.scope !192, !noalias !189
  %2510 = getelementptr i32, i32* %2503, i64 4
  %2511 = bitcast i32* %2510 to <4 x i32>*
  store <4 x i32> %2508, <4 x i32>* %2511, align 4, !alias.scope !192, !noalias !189
  %2512 = add i64 %2467, 32
  %2513 = add i64 %2468, -4
  %2514 = icmp eq i64 %2513, 0
  br i1 %2514, label %2515, label %2466, !llvm.loop !194

2515:                                             ; preds = %2466, %2454
  %2516 = phi i64 [ 0, %2454 ], [ %2512, %2466 ]
  %2517 = icmp eq i64 %2462, 0
  br i1 %2517, label %2534, label %2518

2518:                                             ; preds = %2515, %2518
  %2519 = phi i64 [ %2531, %2518 ], [ %2516, %2515 ]
  %2520 = phi i64 [ %2532, %2518 ], [ %2462, %2515 ]
  %2521 = getelementptr i32, i32* %2437, i64 %2519
  %2522 = getelementptr i32, i32* %2435, i64 %2519
  %2523 = bitcast i32* %2521 to <4 x i32>*
  %2524 = load <4 x i32>, <4 x i32>* %2523, align 4, !alias.scope !189
  %2525 = getelementptr i32, i32* %2521, i64 4
  %2526 = bitcast i32* %2525 to <4 x i32>*
  %2527 = load <4 x i32>, <4 x i32>* %2526, align 4, !alias.scope !189
  %2528 = bitcast i32* %2522 to <4 x i32>*
  store <4 x i32> %2524, <4 x i32>* %2528, align 4, !alias.scope !192, !noalias !189
  %2529 = getelementptr i32, i32* %2522, i64 4
  %2530 = bitcast i32* %2529 to <4 x i32>*
  store <4 x i32> %2527, <4 x i32>* %2530, align 4, !alias.scope !192, !noalias !189
  %2531 = add i64 %2519, 8
  %2532 = add i64 %2520, -1
  %2533 = icmp eq i64 %2532, 0
  br i1 %2533, label %2534, label %2518, !llvm.loop !195

2534:                                             ; preds = %2518, %2515
  %2535 = icmp eq i64 %2455, %2434
  br i1 %2535, label %2603, label %2536

2536:                                             ; preds = %2534, %2446, %2444
  %2537 = phi i32* [ %2437, %2446 ], [ %2437, %2444 ], [ %2456, %2534 ]
  %2538 = phi i64 [ %2434, %2446 ], [ %2434, %2444 ], [ %2457, %2534 ]
  %2539 = phi i32* [ %2435, %2446 ], [ %2435, %2444 ], [ %2458, %2534 ]
  %2540 = add nsw i64 %2538, -1
  %2541 = and i64 %2538, 7
  %2542 = icmp eq i64 %2541, 0
  br i1 %2542, label %2554, label %2543

2543:                                             ; preds = %2536, %2543
  %2544 = phi i32* [ %2549, %2543 ], [ %2537, %2536 ]
  %2545 = phi i64 [ %2548, %2543 ], [ %2538, %2536 ]
  %2546 = phi i32* [ %2551, %2543 ], [ %2539, %2536 ]
  %2547 = phi i64 [ %2552, %2543 ], [ %2541, %2536 ]
  %2548 = add i64 %2545, -1
  %2549 = getelementptr inbounds i32, i32* %2544, i64 1
  %2550 = load i32, i32* %2544, align 4
  %2551 = getelementptr inbounds i32, i32* %2546, i64 1
  store i32 %2550, i32* %2546, align 4
  %2552 = add i64 %2547, -1
  %2553 = icmp eq i64 %2552, 0
  br i1 %2553, label %2554, label %2543, !llvm.loop !196

2554:                                             ; preds = %2543, %2536
  %2555 = phi i32* [ %2537, %2536 ], [ %2549, %2543 ]
  %2556 = phi i64 [ %2538, %2536 ], [ %2548, %2543 ]
  %2557 = phi i32* [ %2539, %2536 ], [ %2551, %2543 ]
  %2558 = icmp ult i64 %2540, 7
  br i1 %2558, label %2603, label %2559

2559:                                             ; preds = %2554, %2559
  %2560 = phi i32* [ %2585, %2559 ], [ %2555, %2554 ]
  %2561 = phi i64 [ %2584, %2559 ], [ %2556, %2554 ]
  %2562 = phi i32* [ %2587, %2559 ], [ %2557, %2554 ]
  %2563 = getelementptr inbounds i32, i32* %2560, i64 1
  %2564 = load i32, i32* %2560, align 4
  %2565 = getelementptr inbounds i32, i32* %2562, i64 1
  store i32 %2564, i32* %2562, align 4
  %2566 = getelementptr inbounds i32, i32* %2560, i64 2
  %2567 = load i32, i32* %2563, align 4
  %2568 = getelementptr inbounds i32, i32* %2562, i64 2
  store i32 %2567, i32* %2565, align 4
  %2569 = getelementptr inbounds i32, i32* %2560, i64 3
  %2570 = load i32, i32* %2566, align 4
  %2571 = getelementptr inbounds i32, i32* %2562, i64 3
  store i32 %2570, i32* %2568, align 4
  %2572 = getelementptr inbounds i32, i32* %2560, i64 4
  %2573 = load i32, i32* %2569, align 4
  %2574 = getelementptr inbounds i32, i32* %2562, i64 4
  store i32 %2573, i32* %2571, align 4
  %2575 = getelementptr inbounds i32, i32* %2560, i64 5
  %2576 = load i32, i32* %2572, align 4
  %2577 = getelementptr inbounds i32, i32* %2562, i64 5
  store i32 %2576, i32* %2574, align 4
  %2578 = getelementptr inbounds i32, i32* %2560, i64 6
  %2579 = load i32, i32* %2575, align 4
  %2580 = getelementptr inbounds i32, i32* %2562, i64 6
  store i32 %2579, i32* %2577, align 4
  %2581 = getelementptr inbounds i32, i32* %2560, i64 7
  %2582 = load i32, i32* %2578, align 4
  %2583 = getelementptr inbounds i32, i32* %2562, i64 7
  store i32 %2582, i32* %2580, align 4
  %2584 = add i64 %2561, -8
  %2585 = getelementptr inbounds i32, i32* %2560, i64 8
  %2586 = load i32, i32* %2581, align 4
  %2587 = getelementptr inbounds i32, i32* %2562, i64 8
  store i32 %2586, i32* %2583, align 4
  %2588 = icmp eq i64 %2584, 0
  br i1 %2588, label %2603, label %2559, !llvm.loop !197

2589:                                             ; preds = %2442
  %2590 = inttoptr i64 %2431 to i8*
  %2591 = shl nsw i64 %2434, 2
  %2592 = add nsw i64 %2591, -4
  %2593 = lshr exact i64 %2592, 2
  switch i64 %2593, label %2602 [
    i64 3, label %2601
    i64 1, label %2596
    i64 2, label %2600
    i64 0, label %2594
  ]

2594:                                             ; preds = %2589
  %2595 = load i32, i32* %2437, align 1
  store i32 %2595, i32* %2435, align 1
  br label %2603

2596:                                             ; preds = %2589
  %2597 = inttoptr i64 %2431 to i64*
  %2598 = inttoptr i64 %2430 to i64*
  %2599 = load i64, i64* %2597, align 1
  store i64 %2599, i64* %2598, align 1
  br label %2603

2600:                                             ; preds = %2589
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2439, i8* align 1 %2590, i64 12, i1 false) #12
  br label %2603

2601:                                             ; preds = %2589
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2439, i8* align 1 %2590, i64 16, i1 false) #12
  br label %2603

2602:                                             ; preds = %2589
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2439, i8* align 1 %2590, i64 %2591, i1 false) #12
  br label %2603

2603:                                             ; preds = %2554, %2559, %2534, %2602, %2601, %2600, %2596, %2594, %2425
  %2604 = trunc i64 %2427 to i32
  %2605 = inttoptr i64 %1845 to i32*
  %2606 = cmpxchg volatile i32* %2605, i32 %2429, i32 %2604 release monotonic
  %2607 = extractvalue { i32, i1 } %2606, 1
  br i1 %2607, label %2608, label %2816

2608:                                             ; preds = %2603
  %2609 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %2610 = load i8, i8* %2609, align 8, !range !2
  %2611 = icmp eq i8 %2610, 0
  br i1 %2611, label %2614, label %2612, !prof !60

2612:                                             ; preds = %2608
  %2613 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %2613, i64 %2426, i64 %3, i32 %4) #12
  br label %2614

2614:                                             ; preds = %2612, %2608
  %2615 = load i8, i8* %39, align 1, !range !2
  %2616 = icmp eq i8 %2615, 0
  br i1 %2616, label %2744, label %2617

2617:                                             ; preds = %2614
  %2618 = and i64 %2426, -262144
  %2619 = or i64 %2618, 272
  %2620 = sub i64 %2426, %2618
  %2621 = trunc i64 %2620 to i32
  %2622 = lshr i32 %2621, 2
  %2623 = and i32 %2622, 31
  %2624 = shl i32 1, %2623
  %2625 = inttoptr i64 %2619 to i32*
  %2626 = lshr i64 %2620, 7
  %2627 = and i64 %2626, 33554431
  %2628 = getelementptr inbounds i32, i32* %2625, i64 %2627
  %2629 = load atomic i32, i32* %2628 acquire, align 4
  %2630 = and i32 %2629, %2624
  %2631 = icmp eq i32 %2630, 0
  br i1 %2631, label %2641, label %2632

2632:                                             ; preds = %2617
  %2633 = shl i32 %2624, 1
  %2634 = icmp eq i32 %2633, 0
  %2635 = getelementptr inbounds i32, i32* %2628, i64 1
  %2636 = select i1 %2634, i32 1, i32 %2633
  %2637 = select i1 %2634, i32* %2635, i32* %2628
  %2638 = load atomic i32, i32* %2637 acquire, align 4
  %2639 = and i32 %2638, %2636
  %2640 = icmp eq i32 %2639, 0
  br i1 %2640, label %2641, label %2744

2641:                                             ; preds = %2632, %2617
  %2642 = or i64 %1778, 272
  %2643 = sub i64 %3, %1778
  %2644 = trunc i64 %2643 to i32
  %2645 = lshr i32 %2644, 2
  %2646 = and i32 %2645, 31
  %2647 = shl i32 1, %2646
  %2648 = inttoptr i64 %2642 to i32*
  %2649 = lshr i64 %2643, 7
  %2650 = and i64 %2649, 33554431
  %2651 = getelementptr inbounds i32, i32* %2648, i64 %2650
  %2652 = load atomic i32, i32* %2651 acquire, align 4
  %2653 = and i32 %2652, %2647
  %2654 = icmp eq i32 %2653, 0
  br i1 %2654, label %2675, label %2655

2655:                                             ; preds = %2641
  %2656 = shl i32 %2647, 1
  %2657 = icmp eq i32 %2656, 0
  %2658 = getelementptr inbounds i32, i32* %2651, i64 1
  %2659 = select i1 %2657, i32 1, i32 %2656
  %2660 = select i1 %2657, i32* %2658, i32* %2651
  %2661 = load atomic i32, i32* %2660 acquire, align 4
  %2662 = and i32 %2661, %2659
  %2663 = icmp eq i32 %2662, 0
  br i1 %2663, label %2664, label %2675

2664:                                             ; preds = %2655
  %2665 = load atomic i32, i32* %2628 monotonic, align 4
  br label %2666

2666:                                             ; preds = %2670, %2664
  %2667 = phi i32 [ %2665, %2664 ], [ %2673, %2670 ]
  %2668 = and i32 %2667, %2624
  %2669 = icmp eq i32 %2668, %2624
  br i1 %2669, label %2744, label %2670

2670:                                             ; preds = %2666
  %2671 = or i32 %2667, %2624
  %2672 = cmpxchg volatile i32* %2628, i32 %2667, i32 %2671 release monotonic
  %2673 = extractvalue { i32, i1 } %2672, 0
  %2674 = extractvalue { i32, i1 } %2672, 1
  br i1 %2674, label %2744, label %2666

2675:                                             ; preds = %2655, %2641
  %2676 = load atomic i32, i32* %2651 acquire, align 4
  %2677 = and i32 %2676, %2647
  %2678 = icmp eq i32 %2677, 0
  br i1 %2678, label %2744, label %2679

2679:                                             ; preds = %2675
  %2680 = shl i32 %2647, 1
  %2681 = icmp eq i32 %2680, 0
  %2682 = getelementptr inbounds i32, i32* %2651, i64 1
  %2683 = select i1 %2681, i32 1, i32 %2680
  %2684 = select i1 %2681, i32* %2682, i32* %2651
  %2685 = load atomic i32, i32* %2684 acquire, align 4
  %2686 = and i32 %2685, %2683
  %2687 = icmp eq i32 %2686, 0
  br i1 %2687, label %2744, label %2688

2688:                                             ; preds = %2679
  %2689 = load atomic i32, i32* %2628 monotonic, align 4
  br label %2690

2690:                                             ; preds = %2694, %2688
  %2691 = phi i32 [ %2689, %2688 ], [ %2697, %2694 ]
  %2692 = and i32 %2691, %2624
  %2693 = icmp eq i32 %2692, %2624
  br i1 %2693, label %2744, label %2694

2694:                                             ; preds = %2690
  %2695 = or i32 %2691, %2624
  %2696 = cmpxchg volatile i32* %2628, i32 %2691, i32 %2695 release monotonic
  %2697 = extractvalue { i32, i1 } %2696, 0
  %2698 = extractvalue { i32, i1 } %2696, 1
  br i1 %2698, label %2699, label %2690

2699:                                             ; preds = %2694
  %2700 = bitcast %"class.v8::internal::HeapObject"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2700) #12
  %2701 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %27, i64 0, i32 0, i32 0, i32 0
  store i64 %2426, i64* %2701, align 8
  %2702 = xor i64 %2618, -1
  %2703 = add i64 %2426, %2702
  %2704 = trunc i64 %2703 to i32
  %2705 = lshr i32 %2704, 2
  %2706 = and i32 %2705, 31
  %2707 = shl i32 1, %2706
  %2708 = lshr i64 %2703, 7
  %2709 = and i64 %2708, 33554431
  %2710 = getelementptr inbounds i32, i32* %2625, i64 %2709
  %2711 = load atomic i32, i32* %2710 acquire, align 4
  %2712 = and i32 %2711, %2707
  %2713 = icmp eq i32 %2712, 0
  br i1 %2713, label %2743, label %2714

2714:                                             ; preds = %2699
  %2715 = shl i32 %2707, 1
  %2716 = icmp eq i32 %2715, 0
  %2717 = getelementptr inbounds i32, i32* %2710, i64 1
  %2718 = select i1 %2716, i32 1, i32 %2715
  %2719 = select i1 %2716, i32* %2717, i32* %2710
  %2720 = load atomic i32, i32* %2719 monotonic, align 4
  br label %2721

2721:                                             ; preds = %2725, %2714
  %2722 = phi i32 [ %2720, %2714 ], [ %2728, %2725 ]
  %2723 = and i32 %2722, %2718
  %2724 = icmp eq i32 %2723, %2718
  br i1 %2724, label %2743, label %2725

2725:                                             ; preds = %2721
  %2726 = or i32 %2722, %2718
  %2727 = cmpxchg volatile i32* %2719, i32 %2722, i32 %2726 release monotonic
  %2728 = extractvalue { i32, i1 } %2727, 0
  %2729 = extractvalue { i32, i1 } %2727, 1
  br i1 %2729, label %2730, label %2721

2730:                                             ; preds = %2725
  %2731 = inttoptr i64 %2618 to %"class.v8::internal::MemoryChunk"*
  %2732 = load i64, i64* %2701, align 8
  %2733 = and i64 %2732, -4294967296
  %2734 = add i64 %2732, -1
  %2735 = inttoptr i64 %2734 to i32*
  %2736 = load atomic i32, i32* %2735 monotonic, align 4
  %2737 = zext i32 %2736 to i64
  %2738 = or i64 %2733, %2737
  %2739 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %27, i64 %2738) #12
  %2740 = sext i32 %2739 to i64
  %2741 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %2731, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %2742 = atomicrmw add i64* %2741, i64 %2740 seq_cst
  br label %2743

2743:                                             ; preds = %2721, %2730, %2699
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2700) #12
  br label %2744

2744:                                             ; preds = %2670, %2666, %2690, %2743, %2679, %2675, %2632, %2614
  %2745 = bitcast %"class.v8::internal::Heap"** %1843 to i64*
  %2746 = load i64, i64* %2745, align 8
  %2747 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %2748 = icmp eq i8 %2747, 0
  br i1 %2748, label %2850, label %2749

2749:                                             ; preds = %2744
  %2750 = add i64 %1, 7
  %2751 = inttoptr i64 %2750 to i16*
  %2752 = load atomic i16, i16* %2751 monotonic, align 2
  switch i16 %2752, label %2850 [
    i16 1085, label %2753
    i16 1057, label %2753
  ]

2753:                                             ; preds = %2749, %2749
  %2754 = bitcast %"class.v8::internal::HeapObject"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2754) #12
  %2755 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %28, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %2755, align 8
  %2756 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %28, i64 %1) #12
  %2757 = sext i32 %2756 to i64
  %2758 = add i64 %1845, %2757
  %2759 = add i64 %2758, 4
  %2760 = and i64 %2759, -262144
  %2761 = inttoptr i64 %2760 to %"class.v8::internal::Page"*
  %2762 = icmp eq %"class.v8::internal::Page"* %1847, %2761
  br i1 %2762, label %2763, label %2793

2763:                                             ; preds = %2753
  %2764 = add i64 %2757, %3
  %2765 = add i64 %2746, -41416
  %2766 = inttoptr i64 %2765 to %"class.v8::internal::Isolate"*
  %2767 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2766, i64 0, i32 0, i32 7, i32 0, i64 534
  %2768 = load i64, i64* %2767, align 8
  %2769 = inttoptr i64 %2758 to i32*
  %2770 = load atomic i32, i32* %2769 monotonic, align 4
  %2771 = trunc i64 %2768 to i32
  %2772 = icmp eq i32 %2770, %2771
  br i1 %2772, label %2773, label %2793

2773:                                             ; preds = %2763
  %2774 = load i64, i64* %1852, align 8
  %2775 = and i64 %2774, 524288
  %2776 = icmp eq i64 %2775, 0
  br i1 %2776, label %2794, label %2777

2777:                                             ; preds = %2773
  %2778 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 8, i32 0
  %2779 = bitcast %"struct.std::__1::__atomic_base.69"* %2778 to i64*
  %2780 = load atomic i64, i64* %2779 seq_cst, align 64
  %2781 = inttoptr i64 %2780 to %"class.v8::internal::SemiSpace"*
  %2782 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %2781, i64 0, i32 5
  %2783 = load i64, i64* %2782, align 8
  %2784 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %2785 = load i64, i64* %2784, align 8
  %2786 = icmp ugt i64 %2785, %2783
  br i1 %2786, label %2793, label %2787

2787:                                             ; preds = %2777
  %2788 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %2789 = load i64, i64* %2788, align 32
  %2790 = icmp ule i64 %2789, %2783
  %2791 = icmp ult i64 %1845, %2783
  %2792 = or i1 %2791, %2790
  br i1 %2792, label %2793, label %2794

2793:                                             ; preds = %2787, %2777, %2763, %2753
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2754) #12
  br label %2850

2794:                                             ; preds = %2787, %2773
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2754) #12
  %2795 = trunc i64 %2764 to i32
  %2796 = icmp eq i32 %2795, 0
  br i1 %2796, label %2850, label %2797

2797:                                             ; preds = %2794
  %2798 = and i64 %2764, -4294967296
  %2799 = add i64 %2764, 3
  %2800 = inttoptr i64 %2799 to i32*
  %2801 = load i32, i32* %2800, align 4
  %2802 = zext i32 %2801 to i64
  %2803 = or i64 %2798, %2802
  %2804 = bitcast %"class.v8::internal::AllocationSite"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2804) #12
  %2805 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2803, i64* %2805, align 8
  %2806 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %2807 = bitcast %"class.std::__1::tuple"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2807) #12
  %2808 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %31, %"class.v8::internal::AllocationSite"** %2808, align 8
  %2809 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2809) #12
  %2810 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %2806, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %31, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %29, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %30) #12
  %2811 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %2810, 0
  %2812 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %2811, i64 3
  %2813 = bitcast %"struct.std::__1::__hash_node_base.518"* %2812 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2809) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2807) #12
  %2814 = load i64, i64* %2813, align 8
  %2815 = add i64 %2814, 1
  store i64 %2815, i64* %2813, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2804) #12
  br label %2850

2816:                                             ; preds = %2603
  %2817 = load i64, i64* %2400, align 8
  %2818 = icmp ne i64 %2817, 0
  %2819 = sub i64 %2817, %2402
  %2820 = icmp eq i64 %2819, %2427
  %2821 = and i1 %2818, %2820
  br i1 %2821, label %2822, label %2823

2822:                                             ; preds = %2816
  store i64 %2427, i64* %2400, align 8
  br label %2827

2823:                                             ; preds = %2816
  %2824 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %2825 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2824, align 8
  %2826 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %2825, i64 %2427, i32 %4, i32 1) #12
  br label %2827

2827:                                             ; preds = %2823, %2822
  %2828 = load atomic i32, i32* %2605 acquire, align 4
  %2829 = add i32 %2828, 1
  %2830 = inttoptr i64 %2 to i32*
  %2831 = load i32, i32* %2830, align 4
  %2832 = and i32 %2831, 2
  %2833 = or i32 %2832, %2829
  store i32 %2833, i32* %2830, align 4
  %2834 = zext i32 %2833 to i64
  %2835 = and i64 %2834, 1
  %2836 = icmp ne i64 %2835, 0
  %2837 = icmp ne i32 %2833, 3
  %2838 = and i1 %2837, %2836
  br i1 %2838, label %2839, label %3452

2839:                                             ; preds = %2827
  %2840 = and i64 %2, -4294967296
  %2841 = and i64 %2834, 4294705152
  %2842 = or i64 %2841, %2840
  %2843 = inttoptr i64 %2842 to %"class.v8::internal::BasicMemoryChunk"*
  %2844 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2843, i64 0, i32 1
  %2845 = load i64, i64* %2844, align 8
  %2846 = lshr i64 %2845, 4
  %2847 = trunc i64 %2846 to i32
  %2848 = and i32 %2847, 1
  %2849 = xor i32 %2848, 1
  br label %3452

2850:                                             ; preds = %2797, %2794, %2793, %2749, %2744
  %2851 = inttoptr i64 %2 to i32*
  %2852 = load i32, i32* %2851, align 4
  %2853 = and i32 %2852, 2
  %2854 = trunc i64 %2426 to i32
  %2855 = or i32 %2853, %2854
  store i32 %2855, i32* %2851, align 4
  %2856 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %2857 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %2856, align 8
  %2858 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %2859 = load i32, i32* %2858, align 8
  %2860 = sext i32 %2859 to i64
  %2861 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 0, i64 %2860, i32 0
  %2862 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2861, align 8
  %2863 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862, i64 0, i32 1
  %2864 = load i64, i64* %2863, align 8
  %2865 = icmp eq i64 %2864, 256
  br i1 %2865, label %2870, label %2866

2866:                                             ; preds = %2850
  %2867 = add i64 %2864, 1
  store i64 %2867, i64* %2863, align 8
  %2868 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862, i64 0, i32 2, i64 %2864, i32 0, i32 0, i32 0, i32 0
  store i64 %2426, i64* %2868, align 8
  %2869 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862, i64 0, i32 2, i64 %2864, i32 1
  br label %2915

2870:                                             ; preds = %2850
  %2871 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2871) #12
  %2872 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 1, i32 1
  %2873 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2872 to i64*
  %2874 = load i64, i64* %2873, align 8
  %2875 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862 to i64*
  store i64 %2874, i64* %2875, align 8
  %2876 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862 to i64
  store atomic volatile i64 %2876, i64* %2873 monotonic, align 8
  %2877 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2878 = atomicrmw add i64* %2877, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2871) #12
  %2879 = call i8* @_Znwm(i64 4112) #17
  %2880 = getelementptr inbounds i8, i8* %2879, i64 8
  %2881 = bitcast i8* %2880 to i64*
  store i64 0, i64* %2881, align 8
  %2882 = getelementptr inbounds i8, i8* %2879, i64 16
  %2883 = bitcast i8* %2882 to %"struct.std::__1::pair.1282"*
  %2884 = getelementptr inbounds i8, i8* %2879, i64 4112
  %2885 = bitcast i8* %2884 to %"struct.std::__1::pair.1282"*
  br label %2886

2886:                                             ; preds = %2886, %2870
  %2887 = phi %"struct.std::__1::pair.1282"* [ %2883, %2870 ], [ %2904, %2886 ]
  %2888 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2888, align 8
  %2889 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 0, i32 1
  store i32 0, i32* %2889, align 8
  %2890 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2890, align 8
  %2891 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 1, i32 1
  store i32 0, i32* %2891, align 8
  %2892 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2892, align 8
  %2893 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 2, i32 1
  store i32 0, i32* %2893, align 8
  %2894 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2894, align 8
  %2895 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 3, i32 1
  store i32 0, i32* %2895, align 8
  %2896 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2896, align 8
  %2897 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 4, i32 1
  store i32 0, i32* %2897, align 8
  %2898 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2898, align 8
  %2899 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 5, i32 1
  store i32 0, i32* %2899, align 8
  %2900 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2900, align 8
  %2901 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 6, i32 1
  store i32 0, i32* %2901, align 8
  %2902 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2902, align 8
  %2903 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 7, i32 1
  store i32 0, i32* %2903, align 8
  %2904 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 8
  %2905 = icmp eq %"struct.std::__1::pair.1282"* %2904, %2885
  br i1 %2905, label %2906, label %2886

2906:                                             ; preds = %2886
  %2907 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2861 to i8**
  store i8* %2879, i8** %2907, align 8
  %2908 = bitcast i8* %2879 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %2909 = load i64, i64* %2881, align 8
  %2910 = icmp eq i64 %2909, 256
  br i1 %2910, label %2917, label %2911

2911:                                             ; preds = %2906
  %2912 = add i64 %2909, 1
  store i64 %2912, i64* %2881, align 8
  %2913 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2908, i64 0, i32 2, i64 %2909, i32 0, i32 0, i32 0, i32 0
  store i64 %2426, i64* %2913, align 8
  %2914 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2908, i64 0, i32 2, i64 %2909, i32 1
  br label %2915

2915:                                             ; preds = %2866, %2911
  %2916 = phi i32* [ %2914, %2911 ], [ %2869, %2866 ]
  store i32 %4, i32* %2916, align 8
  br label %2917

2917:                                             ; preds = %2915, %2906
  %2918 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %2919 = load i64, i64* %2918, align 8
  %2920 = add i64 %2919, %2402
  store i64 %2920, i64* %2918, align 8
  br label %3452

2921:                                             ; preds = %2421
  %2922 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %2923 = icmp sgt i32 %4, 8192
  br i1 %2923, label %2924, label %2948

2924:                                             ; preds = %2921
  %2925 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %2926 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %2925, align 8
  %2927 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2927) #12
  %2928 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 0
  %2929 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 0, i32 1, i32 1
  %2930 = load i64, i64* %2929, align 8
  %2931 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 0, i32 1, i32 2
  %2932 = load i64, i64* %2931, align 8
  %2933 = add i64 %2930, %2402
  %2934 = icmp ult i64 %2932, %2933
  br i1 %2934, label %2944, label %2935

2935:                                             ; preds = %2924
  %2936 = add i64 %2930, 1
  store i64 %2933, i64* %2929, align 8
  %2937 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %2938 = icmp eq i8 %2937, 0
  br i1 %2938, label %2940, label %2939

2939:                                             ; preds = %2935
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %2928, i32 2) #12
  br label %2940

2940:                                             ; preds = %2939, %2935
  %2941 = and i64 %2936, 1
  %2942 = icmp eq i64 %2941, 0
  br i1 %2942, label %2943, label %2946, !prof !29

2943:                                             ; preds = %2940
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

2944:                                             ; preds = %2924
  %2945 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %2926, i32 %4, i32 0, i32 2) #12
  br label %2946

2946:                                             ; preds = %2944, %2940
  %2947 = phi i64 [ %2945, %2944 ], [ %2936, %2940 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2927) #12
  br label %2950

2948:                                             ; preds = %2921
  %2949 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %2922, i32 %4, i32 0) #12
  br label %2950

2950:                                             ; preds = %2948, %2946
  %2951 = phi i64 [ %2947, %2946 ], [ %2949, %2948 ]
  %2952 = and i64 %2951, 1
  %2953 = icmp eq i64 %2952, 0
  br i1 %2953, label %3450, label %2954

2954:                                             ; preds = %2950
  %2955 = add i64 %2951, -1
  %2956 = inttoptr i64 %2955 to i32*
  %2957 = trunc i64 %1 to i32
  store atomic volatile i32 %2957, i32* %2956 monotonic, align 4
  %2958 = add i64 %2951, 3
  %2959 = add i64 %3, 3
  %2960 = add nsw i32 %4, -4
  %2961 = sdiv i32 %2960, 4
  %2962 = sext i32 %2961 to i64
  %2963 = inttoptr i64 %2958 to i32*
  %2964 = inttoptr i64 %2958 to i8*
  %2965 = inttoptr i64 %2959 to i32*
  %2966 = inttoptr i64 %2959 to i8*
  %2967 = inttoptr i64 %2958 to i8*
  %2968 = add i32 %4, -1
  %2969 = icmp ult i32 %2968, 7
  br i1 %2969, label %3131, label %2970

2970:                                             ; preds = %2954
  %2971 = icmp ult i32 %2961, 16
  br i1 %2971, label %2972, label %3117

2972:                                             ; preds = %2970
  %2973 = icmp ult i32 %2961, 8
  br i1 %2973, label %3064, label %2974

2974:                                             ; preds = %2972
  %2975 = getelementptr i32, i32* %2963, i64 %2962
  %2976 = bitcast i32* %2975 to i8*
  %2977 = getelementptr i32, i32* %2965, i64 %2962
  %2978 = bitcast i32* %2977 to i8*
  %2979 = icmp ult i8* %2964, %2978
  %2980 = icmp ult i8* %2966, %2976
  %2981 = and i1 %2979, %2980
  br i1 %2981, label %3064, label %2982

2982:                                             ; preds = %2974
  %2983 = and i64 %2962, -8
  %2984 = getelementptr i32, i32* %2965, i64 %2983
  %2985 = sub nsw i64 %2962, %2983
  %2986 = getelementptr i32, i32* %2963, i64 %2983
  %2987 = add nsw i64 %2983, -8
  %2988 = lshr exact i64 %2987, 3
  %2989 = add nuw nsw i64 %2988, 1
  %2990 = and i64 %2989, 3
  %2991 = icmp ult i64 %2987, 24
  br i1 %2991, label %3043, label %2992

2992:                                             ; preds = %2982
  %2993 = sub nsw i64 %2989, %2990
  br label %2994

2994:                                             ; preds = %2994, %2992
  %2995 = phi i64 [ 0, %2992 ], [ %3040, %2994 ]
  %2996 = phi i64 [ %2993, %2992 ], [ %3041, %2994 ]
  %2997 = getelementptr i32, i32* %2965, i64 %2995
  %2998 = getelementptr i32, i32* %2963, i64 %2995
  %2999 = bitcast i32* %2997 to <4 x i32>*
  %3000 = load <4 x i32>, <4 x i32>* %2999, align 4, !alias.scope !198
  %3001 = getelementptr i32, i32* %2997, i64 4
  %3002 = bitcast i32* %3001 to <4 x i32>*
  %3003 = load <4 x i32>, <4 x i32>* %3002, align 4, !alias.scope !198
  %3004 = bitcast i32* %2998 to <4 x i32>*
  store <4 x i32> %3000, <4 x i32>* %3004, align 4, !alias.scope !201, !noalias !198
  %3005 = getelementptr i32, i32* %2998, i64 4
  %3006 = bitcast i32* %3005 to <4 x i32>*
  store <4 x i32> %3003, <4 x i32>* %3006, align 4, !alias.scope !201, !noalias !198
  %3007 = or i64 %2995, 8
  %3008 = getelementptr i32, i32* %2965, i64 %3007
  %3009 = getelementptr i32, i32* %2963, i64 %3007
  %3010 = bitcast i32* %3008 to <4 x i32>*
  %3011 = load <4 x i32>, <4 x i32>* %3010, align 4, !alias.scope !198
  %3012 = getelementptr i32, i32* %3008, i64 4
  %3013 = bitcast i32* %3012 to <4 x i32>*
  %3014 = load <4 x i32>, <4 x i32>* %3013, align 4, !alias.scope !198
  %3015 = bitcast i32* %3009 to <4 x i32>*
  store <4 x i32> %3011, <4 x i32>* %3015, align 4, !alias.scope !201, !noalias !198
  %3016 = getelementptr i32, i32* %3009, i64 4
  %3017 = bitcast i32* %3016 to <4 x i32>*
  store <4 x i32> %3014, <4 x i32>* %3017, align 4, !alias.scope !201, !noalias !198
  %3018 = or i64 %2995, 16
  %3019 = getelementptr i32, i32* %2965, i64 %3018
  %3020 = getelementptr i32, i32* %2963, i64 %3018
  %3021 = bitcast i32* %3019 to <4 x i32>*
  %3022 = load <4 x i32>, <4 x i32>* %3021, align 4, !alias.scope !198
  %3023 = getelementptr i32, i32* %3019, i64 4
  %3024 = bitcast i32* %3023 to <4 x i32>*
  %3025 = load <4 x i32>, <4 x i32>* %3024, align 4, !alias.scope !198
  %3026 = bitcast i32* %3020 to <4 x i32>*
  store <4 x i32> %3022, <4 x i32>* %3026, align 4, !alias.scope !201, !noalias !198
  %3027 = getelementptr i32, i32* %3020, i64 4
  %3028 = bitcast i32* %3027 to <4 x i32>*
  store <4 x i32> %3025, <4 x i32>* %3028, align 4, !alias.scope !201, !noalias !198
  %3029 = or i64 %2995, 24
  %3030 = getelementptr i32, i32* %2965, i64 %3029
  %3031 = getelementptr i32, i32* %2963, i64 %3029
  %3032 = bitcast i32* %3030 to <4 x i32>*
  %3033 = load <4 x i32>, <4 x i32>* %3032, align 4, !alias.scope !198
  %3034 = getelementptr i32, i32* %3030, i64 4
  %3035 = bitcast i32* %3034 to <4 x i32>*
  %3036 = load <4 x i32>, <4 x i32>* %3035, align 4, !alias.scope !198
  %3037 = bitcast i32* %3031 to <4 x i32>*
  store <4 x i32> %3033, <4 x i32>* %3037, align 4, !alias.scope !201, !noalias !198
  %3038 = getelementptr i32, i32* %3031, i64 4
  %3039 = bitcast i32* %3038 to <4 x i32>*
  store <4 x i32> %3036, <4 x i32>* %3039, align 4, !alias.scope !201, !noalias !198
  %3040 = add i64 %2995, 32
  %3041 = add i64 %2996, -4
  %3042 = icmp eq i64 %3041, 0
  br i1 %3042, label %3043, label %2994, !llvm.loop !203

3043:                                             ; preds = %2994, %2982
  %3044 = phi i64 [ 0, %2982 ], [ %3040, %2994 ]
  %3045 = icmp eq i64 %2990, 0
  br i1 %3045, label %3062, label %3046

3046:                                             ; preds = %3043, %3046
  %3047 = phi i64 [ %3059, %3046 ], [ %3044, %3043 ]
  %3048 = phi i64 [ %3060, %3046 ], [ %2990, %3043 ]
  %3049 = getelementptr i32, i32* %2965, i64 %3047
  %3050 = getelementptr i32, i32* %2963, i64 %3047
  %3051 = bitcast i32* %3049 to <4 x i32>*
  %3052 = load <4 x i32>, <4 x i32>* %3051, align 4, !alias.scope !198
  %3053 = getelementptr i32, i32* %3049, i64 4
  %3054 = bitcast i32* %3053 to <4 x i32>*
  %3055 = load <4 x i32>, <4 x i32>* %3054, align 4, !alias.scope !198
  %3056 = bitcast i32* %3050 to <4 x i32>*
  store <4 x i32> %3052, <4 x i32>* %3056, align 4, !alias.scope !201, !noalias !198
  %3057 = getelementptr i32, i32* %3050, i64 4
  %3058 = bitcast i32* %3057 to <4 x i32>*
  store <4 x i32> %3055, <4 x i32>* %3058, align 4, !alias.scope !201, !noalias !198
  %3059 = add i64 %3047, 8
  %3060 = add i64 %3048, -1
  %3061 = icmp eq i64 %3060, 0
  br i1 %3061, label %3062, label %3046, !llvm.loop !204

3062:                                             ; preds = %3046, %3043
  %3063 = icmp eq i64 %2983, %2962
  br i1 %3063, label %3131, label %3064

3064:                                             ; preds = %3062, %2974, %2972
  %3065 = phi i32* [ %2965, %2974 ], [ %2965, %2972 ], [ %2984, %3062 ]
  %3066 = phi i64 [ %2962, %2974 ], [ %2962, %2972 ], [ %2985, %3062 ]
  %3067 = phi i32* [ %2963, %2974 ], [ %2963, %2972 ], [ %2986, %3062 ]
  %3068 = add nsw i64 %3066, -1
  %3069 = and i64 %3066, 7
  %3070 = icmp eq i64 %3069, 0
  br i1 %3070, label %3082, label %3071

3071:                                             ; preds = %3064, %3071
  %3072 = phi i32* [ %3077, %3071 ], [ %3065, %3064 ]
  %3073 = phi i64 [ %3076, %3071 ], [ %3066, %3064 ]
  %3074 = phi i32* [ %3079, %3071 ], [ %3067, %3064 ]
  %3075 = phi i64 [ %3080, %3071 ], [ %3069, %3064 ]
  %3076 = add i64 %3073, -1
  %3077 = getelementptr inbounds i32, i32* %3072, i64 1
  %3078 = load i32, i32* %3072, align 4
  %3079 = getelementptr inbounds i32, i32* %3074, i64 1
  store i32 %3078, i32* %3074, align 4
  %3080 = add i64 %3075, -1
  %3081 = icmp eq i64 %3080, 0
  br i1 %3081, label %3082, label %3071, !llvm.loop !205

3082:                                             ; preds = %3071, %3064
  %3083 = phi i32* [ %3065, %3064 ], [ %3077, %3071 ]
  %3084 = phi i64 [ %3066, %3064 ], [ %3076, %3071 ]
  %3085 = phi i32* [ %3067, %3064 ], [ %3079, %3071 ]
  %3086 = icmp ult i64 %3068, 7
  br i1 %3086, label %3131, label %3087

3087:                                             ; preds = %3082, %3087
  %3088 = phi i32* [ %3113, %3087 ], [ %3083, %3082 ]
  %3089 = phi i64 [ %3112, %3087 ], [ %3084, %3082 ]
  %3090 = phi i32* [ %3115, %3087 ], [ %3085, %3082 ]
  %3091 = getelementptr inbounds i32, i32* %3088, i64 1
  %3092 = load i32, i32* %3088, align 4
  %3093 = getelementptr inbounds i32, i32* %3090, i64 1
  store i32 %3092, i32* %3090, align 4
  %3094 = getelementptr inbounds i32, i32* %3088, i64 2
  %3095 = load i32, i32* %3091, align 4
  %3096 = getelementptr inbounds i32, i32* %3090, i64 2
  store i32 %3095, i32* %3093, align 4
  %3097 = getelementptr inbounds i32, i32* %3088, i64 3
  %3098 = load i32, i32* %3094, align 4
  %3099 = getelementptr inbounds i32, i32* %3090, i64 3
  store i32 %3098, i32* %3096, align 4
  %3100 = getelementptr inbounds i32, i32* %3088, i64 4
  %3101 = load i32, i32* %3097, align 4
  %3102 = getelementptr inbounds i32, i32* %3090, i64 4
  store i32 %3101, i32* %3099, align 4
  %3103 = getelementptr inbounds i32, i32* %3088, i64 5
  %3104 = load i32, i32* %3100, align 4
  %3105 = getelementptr inbounds i32, i32* %3090, i64 5
  store i32 %3104, i32* %3102, align 4
  %3106 = getelementptr inbounds i32, i32* %3088, i64 6
  %3107 = load i32, i32* %3103, align 4
  %3108 = getelementptr inbounds i32, i32* %3090, i64 6
  store i32 %3107, i32* %3105, align 4
  %3109 = getelementptr inbounds i32, i32* %3088, i64 7
  %3110 = load i32, i32* %3106, align 4
  %3111 = getelementptr inbounds i32, i32* %3090, i64 7
  store i32 %3110, i32* %3108, align 4
  %3112 = add i64 %3089, -8
  %3113 = getelementptr inbounds i32, i32* %3088, i64 8
  %3114 = load i32, i32* %3109, align 4
  %3115 = getelementptr inbounds i32, i32* %3090, i64 8
  store i32 %3114, i32* %3111, align 4
  %3116 = icmp eq i64 %3112, 0
  br i1 %3116, label %3131, label %3087, !llvm.loop !206

3117:                                             ; preds = %2970
  %3118 = inttoptr i64 %2959 to i8*
  %3119 = shl nsw i64 %2962, 2
  %3120 = add nsw i64 %3119, -4
  %3121 = lshr exact i64 %3120, 2
  switch i64 %3121, label %3130 [
    i64 3, label %3129
    i64 1, label %3124
    i64 2, label %3128
    i64 0, label %3122
  ]

3122:                                             ; preds = %3117
  %3123 = load i32, i32* %2965, align 1
  store i32 %3123, i32* %2963, align 1
  br label %3131

3124:                                             ; preds = %3117
  %3125 = inttoptr i64 %2959 to i64*
  %3126 = inttoptr i64 %2958 to i64*
  %3127 = load i64, i64* %3125, align 1
  store i64 %3127, i64* %3126, align 1
  br label %3131

3128:                                             ; preds = %3117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2967, i8* align 1 %3118, i64 12, i1 false) #12
  br label %3131

3129:                                             ; preds = %3117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2967, i8* align 1 %3118, i64 16, i1 false) #12
  br label %3131

3130:                                             ; preds = %3117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2967, i8* align 1 %3118, i64 %3119, i1 false) #12
  br label %3131

3131:                                             ; preds = %3082, %3087, %3062, %3130, %3129, %3128, %3124, %3122, %2954
  %3132 = trunc i64 %2955 to i32
  %3133 = inttoptr i64 %1845 to i32*
  %3134 = cmpxchg volatile i32* %3133, i32 %2957, i32 %3132 release monotonic
  %3135 = extractvalue { i32, i1 } %3134, 1
  br i1 %3135, label %3136, label %3344

3136:                                             ; preds = %3131
  %3137 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %3138 = load i8, i8* %3137, align 8, !range !2
  %3139 = icmp eq i8 %3138, 0
  br i1 %3139, label %3142, label %3140, !prof !60

3140:                                             ; preds = %3136
  %3141 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %3141, i64 %2951, i64 %3, i32 %4) #12
  br label %3142

3142:                                             ; preds = %3140, %3136
  %3143 = load i8, i8* %39, align 1, !range !2
  %3144 = icmp eq i8 %3143, 0
  br i1 %3144, label %3272, label %3145

3145:                                             ; preds = %3142
  %3146 = and i64 %2951, -262144
  %3147 = or i64 %3146, 272
  %3148 = sub i64 %2951, %3146
  %3149 = trunc i64 %3148 to i32
  %3150 = lshr i32 %3149, 2
  %3151 = and i32 %3150, 31
  %3152 = shl i32 1, %3151
  %3153 = inttoptr i64 %3147 to i32*
  %3154 = lshr i64 %3148, 7
  %3155 = and i64 %3154, 33554431
  %3156 = getelementptr inbounds i32, i32* %3153, i64 %3155
  %3157 = load atomic i32, i32* %3156 acquire, align 4
  %3158 = and i32 %3157, %3152
  %3159 = icmp eq i32 %3158, 0
  br i1 %3159, label %3169, label %3160

3160:                                             ; preds = %3145
  %3161 = shl i32 %3152, 1
  %3162 = icmp eq i32 %3161, 0
  %3163 = getelementptr inbounds i32, i32* %3156, i64 1
  %3164 = select i1 %3162, i32 1, i32 %3161
  %3165 = select i1 %3162, i32* %3163, i32* %3156
  %3166 = load atomic i32, i32* %3165 acquire, align 4
  %3167 = and i32 %3166, %3164
  %3168 = icmp eq i32 %3167, 0
  br i1 %3168, label %3169, label %3272

3169:                                             ; preds = %3160, %3145
  %3170 = or i64 %1778, 272
  %3171 = sub i64 %3, %1778
  %3172 = trunc i64 %3171 to i32
  %3173 = lshr i32 %3172, 2
  %3174 = and i32 %3173, 31
  %3175 = shl i32 1, %3174
  %3176 = inttoptr i64 %3170 to i32*
  %3177 = lshr i64 %3171, 7
  %3178 = and i64 %3177, 33554431
  %3179 = getelementptr inbounds i32, i32* %3176, i64 %3178
  %3180 = load atomic i32, i32* %3179 acquire, align 4
  %3181 = and i32 %3180, %3175
  %3182 = icmp eq i32 %3181, 0
  br i1 %3182, label %3203, label %3183

3183:                                             ; preds = %3169
  %3184 = shl i32 %3175, 1
  %3185 = icmp eq i32 %3184, 0
  %3186 = getelementptr inbounds i32, i32* %3179, i64 1
  %3187 = select i1 %3185, i32 1, i32 %3184
  %3188 = select i1 %3185, i32* %3186, i32* %3179
  %3189 = load atomic i32, i32* %3188 acquire, align 4
  %3190 = and i32 %3189, %3187
  %3191 = icmp eq i32 %3190, 0
  br i1 %3191, label %3192, label %3203

3192:                                             ; preds = %3183
  %3193 = load atomic i32, i32* %3156 monotonic, align 4
  br label %3194

3194:                                             ; preds = %3198, %3192
  %3195 = phi i32 [ %3193, %3192 ], [ %3201, %3198 ]
  %3196 = and i32 %3195, %3152
  %3197 = icmp eq i32 %3196, %3152
  br i1 %3197, label %3272, label %3198

3198:                                             ; preds = %3194
  %3199 = or i32 %3195, %3152
  %3200 = cmpxchg volatile i32* %3156, i32 %3195, i32 %3199 release monotonic
  %3201 = extractvalue { i32, i1 } %3200, 0
  %3202 = extractvalue { i32, i1 } %3200, 1
  br i1 %3202, label %3272, label %3194

3203:                                             ; preds = %3183, %3169
  %3204 = load atomic i32, i32* %3179 acquire, align 4
  %3205 = and i32 %3204, %3175
  %3206 = icmp eq i32 %3205, 0
  br i1 %3206, label %3272, label %3207

3207:                                             ; preds = %3203
  %3208 = shl i32 %3175, 1
  %3209 = icmp eq i32 %3208, 0
  %3210 = getelementptr inbounds i32, i32* %3179, i64 1
  %3211 = select i1 %3209, i32 1, i32 %3208
  %3212 = select i1 %3209, i32* %3210, i32* %3179
  %3213 = load atomic i32, i32* %3212 acquire, align 4
  %3214 = and i32 %3213, %3211
  %3215 = icmp eq i32 %3214, 0
  br i1 %3215, label %3272, label %3216

3216:                                             ; preds = %3207
  %3217 = load atomic i32, i32* %3156 monotonic, align 4
  br label %3218

3218:                                             ; preds = %3222, %3216
  %3219 = phi i32 [ %3217, %3216 ], [ %3225, %3222 ]
  %3220 = and i32 %3219, %3152
  %3221 = icmp eq i32 %3220, %3152
  br i1 %3221, label %3272, label %3222

3222:                                             ; preds = %3218
  %3223 = or i32 %3219, %3152
  %3224 = cmpxchg volatile i32* %3156, i32 %3219, i32 %3223 release monotonic
  %3225 = extractvalue { i32, i1 } %3224, 0
  %3226 = extractvalue { i32, i1 } %3224, 1
  br i1 %3226, label %3227, label %3218

3227:                                             ; preds = %3222
  %3228 = bitcast %"class.v8::internal::HeapObject"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3228) #12
  %3229 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %22, i64 0, i32 0, i32 0, i32 0
  store i64 %2951, i64* %3229, align 8
  %3230 = xor i64 %3146, -1
  %3231 = add i64 %2951, %3230
  %3232 = trunc i64 %3231 to i32
  %3233 = lshr i32 %3232, 2
  %3234 = and i32 %3233, 31
  %3235 = shl i32 1, %3234
  %3236 = lshr i64 %3231, 7
  %3237 = and i64 %3236, 33554431
  %3238 = getelementptr inbounds i32, i32* %3153, i64 %3237
  %3239 = load atomic i32, i32* %3238 acquire, align 4
  %3240 = and i32 %3239, %3235
  %3241 = icmp eq i32 %3240, 0
  br i1 %3241, label %3271, label %3242

3242:                                             ; preds = %3227
  %3243 = shl i32 %3235, 1
  %3244 = icmp eq i32 %3243, 0
  %3245 = getelementptr inbounds i32, i32* %3238, i64 1
  %3246 = select i1 %3244, i32 1, i32 %3243
  %3247 = select i1 %3244, i32* %3245, i32* %3238
  %3248 = load atomic i32, i32* %3247 monotonic, align 4
  br label %3249

3249:                                             ; preds = %3253, %3242
  %3250 = phi i32 [ %3248, %3242 ], [ %3256, %3253 ]
  %3251 = and i32 %3250, %3246
  %3252 = icmp eq i32 %3251, %3246
  br i1 %3252, label %3271, label %3253

3253:                                             ; preds = %3249
  %3254 = or i32 %3250, %3246
  %3255 = cmpxchg volatile i32* %3247, i32 %3250, i32 %3254 release monotonic
  %3256 = extractvalue { i32, i1 } %3255, 0
  %3257 = extractvalue { i32, i1 } %3255, 1
  br i1 %3257, label %3258, label %3249

3258:                                             ; preds = %3253
  %3259 = inttoptr i64 %3146 to %"class.v8::internal::MemoryChunk"*
  %3260 = load i64, i64* %3229, align 8
  %3261 = and i64 %3260, -4294967296
  %3262 = add i64 %3260, -1
  %3263 = inttoptr i64 %3262 to i32*
  %3264 = load atomic i32, i32* %3263 monotonic, align 4
  %3265 = zext i32 %3264 to i64
  %3266 = or i64 %3261, %3265
  %3267 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %22, i64 %3266) #12
  %3268 = sext i32 %3267 to i64
  %3269 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %3259, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3270 = atomicrmw add i64* %3269, i64 %3268 seq_cst
  br label %3271

3271:                                             ; preds = %3249, %3258, %3227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3228) #12
  br label %3272

3272:                                             ; preds = %3198, %3194, %3218, %3271, %3207, %3203, %3160, %3142
  %3273 = bitcast %"class.v8::internal::Heap"** %1843 to i64*
  %3274 = load i64, i64* %3273, align 8
  %3275 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %3276 = icmp eq i8 %3275, 0
  br i1 %3276, label %3379, label %3277

3277:                                             ; preds = %3272
  %3278 = add i64 %1, 7
  %3279 = inttoptr i64 %3278 to i16*
  %3280 = load atomic i16, i16* %3279 monotonic, align 2
  switch i16 %3280, label %3379 [
    i16 1085, label %3281
    i16 1057, label %3281
  ]

3281:                                             ; preds = %3277, %3277
  %3282 = bitcast %"class.v8::internal::HeapObject"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3282) #12
  %3283 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %23, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %3283, align 8
  %3284 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %23, i64 %1) #12
  %3285 = sext i32 %3284 to i64
  %3286 = add i64 %1845, %3285
  %3287 = add i64 %3286, 4
  %3288 = and i64 %3287, -262144
  %3289 = inttoptr i64 %3288 to %"class.v8::internal::Page"*
  %3290 = icmp eq %"class.v8::internal::Page"* %1847, %3289
  br i1 %3290, label %3291, label %3321

3291:                                             ; preds = %3281
  %3292 = add i64 %3285, %3
  %3293 = add i64 %3274, -41416
  %3294 = inttoptr i64 %3293 to %"class.v8::internal::Isolate"*
  %3295 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3294, i64 0, i32 0, i32 7, i32 0, i64 534
  %3296 = load i64, i64* %3295, align 8
  %3297 = inttoptr i64 %3286 to i32*
  %3298 = load atomic i32, i32* %3297 monotonic, align 4
  %3299 = trunc i64 %3296 to i32
  %3300 = icmp eq i32 %3298, %3299
  br i1 %3300, label %3301, label %3321

3301:                                             ; preds = %3291
  %3302 = load i64, i64* %1852, align 8
  %3303 = and i64 %3302, 524288
  %3304 = icmp eq i64 %3303, 0
  br i1 %3304, label %3322, label %3305

3305:                                             ; preds = %3301
  %3306 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 8, i32 0
  %3307 = bitcast %"struct.std::__1::__atomic_base.69"* %3306 to i64*
  %3308 = load atomic i64, i64* %3307 seq_cst, align 64
  %3309 = inttoptr i64 %3308 to %"class.v8::internal::SemiSpace"*
  %3310 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %3309, i64 0, i32 5
  %3311 = load i64, i64* %3310, align 8
  %3312 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %3313 = load i64, i64* %3312, align 8
  %3314 = icmp ugt i64 %3313, %3311
  br i1 %3314, label %3321, label %3315

3315:                                             ; preds = %3305
  %3316 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %3317 = load i64, i64* %3316, align 32
  %3318 = icmp ule i64 %3317, %3311
  %3319 = icmp ult i64 %1845, %3311
  %3320 = or i1 %3319, %3318
  br i1 %3320, label %3321, label %3322

3321:                                             ; preds = %3315, %3305, %3291, %3281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3282) #12
  br label %3379

3322:                                             ; preds = %3315, %3301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3282) #12
  %3323 = trunc i64 %3292 to i32
  %3324 = icmp eq i32 %3323, 0
  br i1 %3324, label %3379, label %3325

3325:                                             ; preds = %3322
  %3326 = and i64 %3292, -4294967296
  %3327 = add i64 %3292, 3
  %3328 = inttoptr i64 %3327 to i32*
  %3329 = load i32, i32* %3328, align 4
  %3330 = zext i32 %3329 to i64
  %3331 = or i64 %3326, %3330
  %3332 = bitcast %"class.v8::internal::AllocationSite"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3332) #12
  %3333 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3331, i64* %3333, align 8
  %3334 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %3335 = bitcast %"class.std::__1::tuple"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3335) #12
  %3336 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %26, %"class.v8::internal::AllocationSite"** %3336, align 8
  %3337 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3337) #12
  %3338 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %3334, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %24, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %25) #12
  %3339 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %3338, 0
  %3340 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %3339, i64 3
  %3341 = bitcast %"struct.std::__1::__hash_node_base.518"* %3340 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3337) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3335) #12
  %3342 = load i64, i64* %3341, align 8
  %3343 = add i64 %3342, 1
  store i64 %3343, i64* %3341, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3332) #12
  br label %3379

3344:                                             ; preds = %3131
  %3345 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %3346 = load i64, i64* %3345, align 8
  %3347 = icmp ne i64 %3346, 0
  %3348 = sub i64 %3346, %2402
  %3349 = icmp eq i64 %3348, %2955
  %3350 = and i1 %3347, %3349
  br i1 %3350, label %3351, label %3352

3351:                                             ; preds = %3344
  store i64 %2955, i64* %3345, align 8
  br label %3356

3352:                                             ; preds = %3344
  %3353 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %2922, i64 0, i32 0
  %3354 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3353, align 8
  %3355 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %3354, i64 %2955, i32 %4, i32 1) #12
  br label %3356

3356:                                             ; preds = %3352, %3351
  %3357 = load atomic i32, i32* %3133 acquire, align 4
  %3358 = add i32 %3357, 1
  %3359 = inttoptr i64 %2 to i32*
  %3360 = load i32, i32* %3359, align 4
  %3361 = and i32 %3360, 2
  %3362 = or i32 %3361, %3358
  store i32 %3362, i32* %3359, align 4
  %3363 = zext i32 %3362 to i64
  %3364 = and i64 %3363, 1
  %3365 = icmp ne i64 %3364, 0
  %3366 = icmp ne i32 %3362, 3
  %3367 = and i1 %3366, %3365
  br i1 %3367, label %3368, label %3452

3368:                                             ; preds = %3356
  %3369 = and i64 %2, -4294967296
  %3370 = and i64 %3363, 4294705152
  %3371 = or i64 %3370, %3369
  %3372 = inttoptr i64 %3371 to %"class.v8::internal::BasicMemoryChunk"*
  %3373 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %3372, i64 0, i32 1
  %3374 = load i64, i64* %3373, align 8
  %3375 = lshr i64 %3374, 4
  %3376 = trunc i64 %3375 to i32
  %3377 = and i32 %3376, 1
  %3378 = xor i32 %3377, 1
  br label %3452

3379:                                             ; preds = %3325, %3322, %3321, %3277, %3272
  %3380 = inttoptr i64 %2 to i32*
  %3381 = load i32, i32* %3380, align 4
  %3382 = and i32 %3381, 2
  %3383 = trunc i64 %2951 to i32
  %3384 = or i32 %3382, %3383
  store i32 %3384, i32* %3380, align 4
  %3385 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %3386 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %3385, align 8
  %3387 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %3388 = load i32, i32* %3387, align 8
  %3389 = sext i32 %3388 to i64
  %3390 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 0, i64 %3389, i32 0
  %3391 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %3390, align 8
  %3392 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391, i64 0, i32 1
  %3393 = load i64, i64* %3392, align 8
  %3394 = icmp eq i64 %3393, 256
  br i1 %3394, label %3399, label %3395

3395:                                             ; preds = %3379
  %3396 = add i64 %3393, 1
  store i64 %3396, i64* %3392, align 8
  %3397 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391, i64 0, i32 2, i64 %3393, i32 0, i32 0, i32 0, i32 0
  store i64 %2951, i64* %3397, align 8
  %3398 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391, i64 0, i32 2, i64 %3393, i32 1
  br label %3444

3399:                                             ; preds = %3379
  %3400 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3400) #12
  %3401 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 1, i32 1
  %3402 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %3401 to i64*
  %3403 = load i64, i64* %3402, align 8
  %3404 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391 to i64*
  store i64 %3403, i64* %3404, align 8
  %3405 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391 to i64
  store atomic volatile i64 %3405, i64* %3402 monotonic, align 8
  %3406 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3407 = atomicrmw add i64* %3406, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3400) #12
  %3408 = call i8* @_Znwm(i64 4112) #17
  %3409 = getelementptr inbounds i8, i8* %3408, i64 8
  %3410 = bitcast i8* %3409 to i64*
  store i64 0, i64* %3410, align 8
  %3411 = getelementptr inbounds i8, i8* %3408, i64 16
  %3412 = bitcast i8* %3411 to %"struct.std::__1::pair.1282"*
  %3413 = getelementptr inbounds i8, i8* %3408, i64 4112
  %3414 = bitcast i8* %3413 to %"struct.std::__1::pair.1282"*
  br label %3415

3415:                                             ; preds = %3415, %3399
  %3416 = phi %"struct.std::__1::pair.1282"* [ %3412, %3399 ], [ %3433, %3415 ]
  %3417 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3417, align 8
  %3418 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 0, i32 1
  store i32 0, i32* %3418, align 8
  %3419 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3419, align 8
  %3420 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 1, i32 1
  store i32 0, i32* %3420, align 8
  %3421 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3421, align 8
  %3422 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 2, i32 1
  store i32 0, i32* %3422, align 8
  %3423 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3423, align 8
  %3424 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 3, i32 1
  store i32 0, i32* %3424, align 8
  %3425 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3425, align 8
  %3426 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 4, i32 1
  store i32 0, i32* %3426, align 8
  %3427 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3427, align 8
  %3428 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 5, i32 1
  store i32 0, i32* %3428, align 8
  %3429 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3429, align 8
  %3430 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 6, i32 1
  store i32 0, i32* %3430, align 8
  %3431 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3431, align 8
  %3432 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 7, i32 1
  store i32 0, i32* %3432, align 8
  %3433 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 8
  %3434 = icmp eq %"struct.std::__1::pair.1282"* %3433, %3414
  br i1 %3434, label %3435, label %3415

3435:                                             ; preds = %3415
  %3436 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %3390 to i8**
  store i8* %3408, i8** %3436, align 8
  %3437 = bitcast i8* %3408 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %3438 = load i64, i64* %3410, align 8
  %3439 = icmp eq i64 %3438, 256
  br i1 %3439, label %3446, label %3440

3440:                                             ; preds = %3435
  %3441 = add i64 %3438, 1
  store i64 %3441, i64* %3410, align 8
  %3442 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3437, i64 0, i32 2, i64 %3438, i32 0, i32 0, i32 0, i32 0
  store i64 %2951, i64* %3442, align 8
  %3443 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3437, i64 0, i32 2, i64 %3438, i32 1
  br label %3444

3444:                                             ; preds = %3395, %3440
  %3445 = phi i32* [ %3443, %3440 ], [ %3398, %3395 ]
  store i32 %4, i32* %3445, align 8
  br label %3446

3446:                                             ; preds = %3444, %3435
  %3447 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %3448 = load i64, i64* %3447, align 8
  %3449 = add i64 %3448, %2402
  store i64 %3449, i64* %3447, align 8
  br label %3452

3450:                                             ; preds = %2950
  %3451 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %3451, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

3452:                                             ; preds = %3446, %3368, %3356, %2917, %2839, %2827, %2393, %2315, %2303, %1820, %1815, %1787, %1775
  %3453 = phi i32 [ %1776, %1775 ], [ 0, %1787 ], [ 0, %1815 ], [ 0, %1820 ], [ 1, %2303 ], [ %2325, %2315 ], [ 0, %2393 ], [ 1, %2827 ], [ %2849, %2839 ], [ 1, %2917 ], [ 1, %3356 ], [ %3378, %3368 ], [ 0, %3446 ]
  ret i32 %3453
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"*, i8*) local_unnamed_addr #13

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"*, %"class.v8::internal::HeapObject"* dereferenceable(8), %"struct.std::__1::pair.1246"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967295
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %72, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !207
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  %29 = trunc i64 %5 to i32
  br i1 %12, label %30, label %53

30:                                               ; preds = %27, %47
  %31 = phi %"struct.std::__1::__hash_node_base.1153"* [ %33, %47 ], [ %25, %27 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %33, null
  br i1 %34, label %72, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1153"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %6
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %8
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %47, label %72

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.1153"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %51, %29
  br i1 %52, label %158, label %30

53:                                               ; preds = %27, %66
  %54 = phi %"struct.std::__1::__hash_node_base.1153"* [ %56, %66 ], [ %25, %27 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1153"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %6
  %63 = and i64 %61, %28
  %64 = icmp eq i64 %63, %21
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %56, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.1153"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %70, %29
  br i1 %71, label %158, label %53

72:                                               ; preds = %58, %53, %44, %30, %20, %3
  %73 = phi i64 [ %21, %20 ], [ undef, %3 ], [ %21, %30 ], [ %21, %44 ], [ %21, %53 ], [ %21, %58 ]
  %74 = tail call i8* @_Znwm(i64 32) #17, !noalias !208
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast %"struct.std::__1::pair.1246"* %2 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %75, i8* align 8 %76, i64 16, i1 false) #12, !noalias !208
  %77 = getelementptr inbounds i8, i8* %74, i64 8
  %78 = bitcast i8* %77 to i64*
  store i64 %6, i64* %78, align 8, !noalias !208
  %79 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1153"**
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %79, align 8, !noalias !208
  %80 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 2, i32 0, i32 0
  %81 = load i64, i64* %80, align 8
  %82 = add i64 %81, 1
  %83 = uitofp i64 %82 to float
  %84 = uitofp i64 %8 to float
  %85 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 3, i32 0, i32 0
  %86 = load float, float* %85, align 4
  %87 = fmul float %86, %84
  %88 = fcmp olt float %87, %83
  %89 = or i1 %9, %88
  br i1 %89, label %90, label %113

90:                                               ; preds = %72
  %91 = shl i64 %8, 1
  %92 = icmp ult i64 %8, 3
  %93 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !207
  %94 = icmp ugt i64 %93, 1
  %95 = or i1 %92, %94
  %96 = zext i1 %95 to i64
  %97 = or i64 %91, %96
  %98 = fdiv float %83, %86
  %99 = tail call float @llvm.ceil.f32(float %98) #12
  %100 = fptoui float %99 to i64
  %101 = icmp ult i64 %97, %100
  %102 = select i1 %101, i64 %100, i64 %97
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1149"* %0, i64 %102)
  %103 = load i64, i64* %7, align 8
  %104 = tail call i64 @llvm.ctpop.i64(i64 %103) #12, !range !207
  %105 = icmp ugt i64 %104, 1
  br i1 %105, label %109, label %106

106:                                              ; preds = %90
  %107 = add i64 %103, 4294967295
  %108 = and i64 %107, %6
  br label %113

109:                                              ; preds = %90
  %110 = icmp ult i64 %6, %103
  br i1 %110, label %113, label %111

111:                                              ; preds = %109
  %112 = urem i64 %6, %103
  br label %113

113:                                              ; preds = %111, %109, %106, %72
  %114 = phi i64 [ %8, %72 ], [ %103, %106 ], [ %103, %109 ], [ %103, %111 ]
  %115 = phi i64 [ %73, %72 ], [ %108, %106 ], [ %6, %109 ], [ %112, %111 ]
  %116 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %117 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %116, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %117, i64 %115
  %119 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %118, align 8
  %120 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %119, null
  br i1 %120, label %121, label %147

121:                                              ; preds = %113
  %122 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 1, i32 0, i32 0
  %123 = bitcast %"struct.std::__1::__hash_node_base.1153"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast i8* %74 to i64*
  store i64 %124, i64* %125, align 8
  %126 = bitcast %"struct.std::__1::__hash_node_base.1153"* %122 to i8**
  store i8* %74, i8** %126, align 8
  store %"struct.std::__1::__hash_node_base.1153"* %122, %"struct.std::__1::__hash_node_base.1153"** %118, align 8
  %127 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %79, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %127, null
  br i1 %128, label %154, label %129

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %127, i64 1
  %131 = bitcast %"struct.std::__1::__hash_node_base.1153"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = tail call i64 @llvm.ctpop.i64(i64 %114) #12, !range !207
  %134 = icmp ugt i64 %133, 1
  br i1 %134, label %138, label %135

135:                                              ; preds = %129
  %136 = add i64 %114, -1
  %137 = and i64 %132, %136
  br label %142

138:                                              ; preds = %129
  %139 = icmp ult i64 %132, %114
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = urem i64 %132, %114
  br label %142

142:                                              ; preds = %135, %138, %140
  %143 = phi i64 [ %137, %135 ], [ %141, %140 ], [ %132, %138 ]
  %144 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %116, align 8
  %145 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %144, i64 %143
  %146 = bitcast %"struct.std::__1::__hash_node_base.1153"** %145 to i8**
  br label %152

147:                                              ; preds = %113
  %148 = bitcast %"struct.std::__1::__hash_node_base.1153"* %119 to i64*
  %149 = load i64, i64* %148, align 8
  %150 = bitcast i8* %74 to i64*
  store i64 %149, i64* %150, align 8
  %151 = bitcast %"struct.std::__1::__hash_node_base.1153"* %119 to i8**
  br label %152

152:                                              ; preds = %142, %147
  %153 = phi i8** [ %151, %147 ], [ %146, %142 ]
  store i8* %74, i8** %153, align 8
  br label %154

154:                                              ; preds = %152, %121
  %155 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1153"*
  %156 = load i64, i64* %80, align 8
  %157 = add i64 %156, 1
  store i64 %157, i64* %80, align 8
  br label %158

158:                                              ; preds = %66, %47, %154
  %159 = phi i8 [ 1, %154 ], [ 0, %47 ], [ 0, %66 ]
  %160 = phi %"struct.std::__1::__hash_node_base.1153"* [ %155, %154 ], [ %33, %47 ], [ %56, %66 ]
  %161 = insertvalue { %"struct.std::__1::__hash_node_base.1153"*, i8 } undef, %"struct.std::__1::__hash_node_base.1153"* %160, 0
  %162 = insertvalue { %"struct.std::__1::__hash_node_base.1153"*, i8 } %161, i8 %159, 1
  ret { %"struct.std::__1::__hash_node_base.1153"*, i8 } %162
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1149"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !207
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1149"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !207
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !207
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1149"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

declare i64 @_ZNSt3__112__next_primeEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE8__rehashEm(%"class.std::__1::__hash_table.1149"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %183, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1149"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1153"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1153"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1155", %"class.std::__1::__bucket_list_deallocator.1155"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !211

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %38, null
  br i1 %39, label %191, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1153"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !207
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1153"* %36, %"struct.std::__1::__hash_node_base.1153"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %75, null
  br i1 %76, label %191, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %133

79:                                               ; preds = %77, %124
  %80 = phi %"struct.std::__1::__hash_node_base.1153"* [ %128, %124 ], [ %75, %77 ]
  %81 = phi i64 [ %126, %124 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1153"* [ %125, %124 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1153"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %95, null
  br i1 %96, label %123, label %130

97:                                               ; preds = %130, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1153"* [ %100, %102 ], [ %80, %130 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1153"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %132, align 8
  %107 = trunc i64 %106 to i32
  %108 = trunc i64 %105 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %97, label %110

110:                                              ; preds = %102, %97
  %111 = ptrtoint %"struct.std::__1::__hash_node_base.1153"* %100 to i64
  %112 = bitcast %"struct.std::__1::__hash_node_base.1153"* %98 to i64*
  %113 = bitcast %"struct.std::__1::__hash_node_base.1153"* %82 to i64*
  store i64 %111, i64* %113, align 8
  %114 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %114, i64 %90
  %116 = bitcast %"struct.std::__1::__hash_node_base.1153"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %112, align 8
  %119 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %119, i64 %90
  %121 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %121, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1153"* %80, %"struct.std::__1::__hash_node_base.1153"** %122, align 8
  br label %124

123:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1153"* %82, %"struct.std::__1::__hash_node_base.1153"** %94, align 8
  br label %124

124:                                              ; preds = %123, %110, %89
  %125 = phi %"struct.std::__1::__hash_node_base.1153"* [ %80, %123 ], [ %82, %110 ], [ %80, %89 ]
  %126 = phi i64 [ %90, %123 ], [ %81, %110 ], [ %81, %89 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %125, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %128, null
  br i1 %129, label %191, label %79

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %80, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.1153"* %131 to i64*
  br label %97

133:                                              ; preds = %77, %177
  %134 = phi %"struct.std::__1::__hash_node_base.1153"* [ %181, %177 ], [ %75, %77 ]
  %135 = phi i64 [ %179, %177 ], [ %71, %77 ]
  %136 = phi %"struct.std::__1::__hash_node_base.1153"* [ %178, %177 ], [ %38, %77 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.1153"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, %78
  %141 = icmp eq i64 %140, %135
  br i1 %141, label %177, label %142

142:                                              ; preds = %133
  %143 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %143, i64 %140
  %145 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %134, i64 2
  %149 = bitcast %"struct.std::__1::__hash_node_base.1153"* %148 to i64*
  br label %151

150:                                              ; preds = %142
  store %"struct.std::__1::__hash_node_base.1153"* %136, %"struct.std::__1::__hash_node_base.1153"** %144, align 8
  br label %177

151:                                              ; preds = %147, %156
  %152 = phi %"struct.std::__1::__hash_node_base.1153"* [ %154, %156 ], [ %134, %147 ]
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %152, i64 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %154, null
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %154, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.1153"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %149, align 8
  %161 = trunc i64 %160 to i32
  %162 = trunc i64 %159 to i32
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %151, label %164

164:                                              ; preds = %151, %156
  %165 = ptrtoint %"struct.std::__1::__hash_node_base.1153"* %154 to i64
  %166 = bitcast %"struct.std::__1::__hash_node_base.1153"* %152 to i64*
  %167 = bitcast %"struct.std::__1::__hash_node_base.1153"* %136 to i64*
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %168, i64 %140
  %170 = bitcast %"struct.std::__1::__hash_node_base.1153"** %169 to i64**
  %171 = load i64*, i64** %170, align 8
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %166, align 8
  %173 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %173, i64 %140
  %175 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %175, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1153"* %134, %"struct.std::__1::__hash_node_base.1153"** %176, align 8
  br label %177

177:                                              ; preds = %133, %164, %150
  %178 = phi %"struct.std::__1::__hash_node_base.1153"* [ %134, %150 ], [ %136, %164 ], [ %134, %133 ]
  %179 = phi i64 [ %140, %150 ], [ %135, %164 ], [ %135, %133 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %178, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %181, null
  br i1 %182, label %191, label %133

183:                                              ; preds = %2
  %184 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %184, align 8
  store %"struct.std::__1::__hash_node_base.1153"** null, %"struct.std::__1::__hash_node_base.1153"*** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.1153"** %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = bitcast %"struct.std::__1::__hash_node_base.1153"** %185 to i8*
  tail call void @_ZdlPv(i8* %188) #17
  br label %189

189:                                              ; preds = %183, %187
  %190 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1155", %"class.std::__1::__bucket_list_deallocator.1155"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %190, align 8
  br label %191

191:                                              ; preds = %177, %124, %70, %35, %189
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctlz.i64(i64, i1 immarg) #14

; Function Attrs: nounwind readnone speculatable
declare float @llvm.ceil.f32(float) #14

declare void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

declare void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"*, i32, i32) local_unnamed_addr #7 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 3
  %5 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 3, i32 1, i32 1
  %6 = load i64, i64* %5, align 8
  %7 = icmp eq i64 %6, 0
  br i1 %7, label %8, label %12

8:                                                ; preds = %3
  %9 = tail call zeroext i1 @_ZN2v88internal19EvacuationAllocator24NewLocalAllocationBufferEv(%"class.v8::internal::EvacuationAllocator"* %0)
  br i1 %9, label %10, label %69

10:                                               ; preds = %8
  %11 = load i64, i64* %5, align 8
  br label %12

12:                                               ; preds = %10, %3
  %13 = phi i64 [ %11, %10 ], [ %6, %3 ]
  %14 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %13, i32 %2) #12
  %15 = sext i32 %14 to i64
  %16 = sext i32 %1 to i64
  %17 = add i64 %13, %16
  %18 = add i64 %17, %15
  %19 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 3, i32 1, i32 2
  %20 = load i64, i64* %19, align 8
  %21 = icmp ugt i64 %18, %20
  br i1 %21, label %40, label %22

22:                                               ; preds = %12
  store i64 %18, i64* %5, align 8
  %23 = icmp sgt i32 %14, 0
  br i1 %23, label %24, label %35

24:                                               ; preds = %22
  %25 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %4 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = add i64 %26, -41416
  %28 = inttoptr i64 %27 to %"class.v8::internal::Isolate"*
  %29 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %28, i64 0, i32 0, i32 7, i32 0, i64 0
  %30 = add i64 %13, 1
  %31 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %29, i64 %30, i32 %14) #12
  %32 = and i64 %31, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %69, !prof !29

34:                                               ; preds = %24
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

35:                                               ; preds = %22
  %36 = add i64 %13, 1
  %37 = and i64 %36, 1
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %39, label %69, !prof !29

39:                                               ; preds = %35
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

40:                                               ; preds = %12
  %41 = tail call zeroext i1 @_ZN2v88internal19EvacuationAllocator24NewLocalAllocationBufferEv(%"class.v8::internal::EvacuationAllocator"* %0)
  br i1 %41, label %42, label %69

42:                                               ; preds = %40
  %43 = load i64, i64* %5, align 8
  %44 = tail call i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64 %43, i32 %2) #12
  %45 = sext i32 %44 to i64
  %46 = add i64 %43, %16
  %47 = add i64 %46, %45
  %48 = load i64, i64* %19, align 8
  %49 = icmp ugt i64 %47, %48
  br i1 %49, label %68, label %50

50:                                               ; preds = %42
  store i64 %47, i64* %5, align 8
  %51 = icmp sgt i32 %44, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %50
  %53 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %4 to i64*
  %54 = load i64, i64* %53, align 8
  %55 = add i64 %54, -41416
  %56 = inttoptr i64 %55 to %"class.v8::internal::Isolate"*
  %57 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %56, i64 0, i32 0, i32 7, i32 0, i64 0
  %58 = add i64 %43, 1
  %59 = tail call i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64* %57, i64 %58, i32 %44) #12
  %60 = and i64 %59, 1
  %61 = icmp eq i64 %60, 0
  br i1 %61, label %62, label %69, !prof !29

62:                                               ; preds = %52
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

63:                                               ; preds = %50
  %64 = add i64 %43, 1
  %65 = and i64 %64, 1
  %66 = icmp eq i64 %65, 0
  br i1 %66, label %67, label %69, !prof !29

67:                                               ; preds = %63
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

68:                                               ; preds = %42
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.16, i64 0, i64 0)) #16
  unreachable

69:                                               ; preds = %63, %52, %35, %24, %40, %8
  %70 = phi i64 [ 2, %8 ], [ 2, %40 ], [ %31, %24 ], [ %36, %35 ], [ %59, %52 ], [ %64, %63 ]
  ret i64 %70
}

declare i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"*, i32, i32, i32) local_unnamed_addr #1

declare i32 @_ZN2v88internal4Heap14GetFillToAlignEmNS0_19AllocationAlignmentE(i64, i32) local_unnamed_addr #1

declare i64 @_ZN2v88internal4Heap17PrecedeWithFillerENS0_13ReadOnlyRootsENS0_10HeapObjectEi(i64*, i64, i32) local_unnamed_addr #1

declare void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"*, i32) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal19EvacuationAllocator24NewLocalAllocationBufferEv(%"class.v8::internal::EvacuationAllocator"*) local_unnamed_addr #7 comdat align 2 {
  %2 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %3 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %4 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %5 = alloca %"class.v8::internal::LocalAllocationBuffer", align 8
  %6 = alloca %"class.v8::internal::LocalAllocationBuffer", align 8
  %7 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %8 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 4
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %11, label %66

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 1
  %13 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %12, align 8
  %14 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %13, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %14) #12
  %15 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %13, i64 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %13, i64 0, i32 0, i32 1, i32 1
  %17 = load i64, i64* %16, align 8
  %18 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %13, i64 0, i32 0, i32 1, i32 2
  %19 = load i64, i64* %18, align 8
  %20 = add i64 %17, 32768
  %21 = icmp ult i64 %19, %20
  br i1 %21, label %31, label %22

22:                                               ; preds = %11
  %23 = add i64 %17, 1
  store i64 %20, i64* %16, align 8
  %24 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %22
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %15, i32 1) #12
  br label %27

27:                                               ; preds = %26, %22
  %28 = and i64 %23, 1
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %30, label %33, !prof !29

30:                                               ; preds = %27
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

31:                                               ; preds = %11
  %32 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %13, i32 32768, i32 0, i32 1) #12
  br label %33

33:                                               ; preds = %27, %31
  %34 = phi i64 [ %32, %31 ], [ %23, %27 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %14) #12
  %35 = and i64 %34, 1
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %38

37:                                               ; preds = %33
  store i8 1, i8* %8, align 8
  br label %66

38:                                               ; preds = %33
  %39 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %39) #12
  %40 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 3
  call void @_ZN2v88internal21LocalAllocationBufferC1EOS1_(%"class.v8::internal::LocalAllocationBuffer"* nonnull %5, %"class.v8::internal::LocalAllocationBuffer"* dereferenceable(32) %40) #12
  %41 = bitcast %"class.v8::internal::LocalAllocationBuffer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #12
  %42 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 0
  %43 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %42, align 8
  %44 = bitcast %"class.v8::internal::LinearAllocationArea"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %44)
  %45 = add i64 %34, -1
  %46 = add i64 %34, 32767
  %47 = getelementptr inbounds %"class.v8::internal::LinearAllocationArea", %"class.v8::internal::LinearAllocationArea"* %4, i64 0, i32 0
  store i64 %45, i64* %47, align 8, !noalias !212
  %48 = getelementptr inbounds %"class.v8::internal::LinearAllocationArea", %"class.v8::internal::LinearAllocationArea"* %4, i64 0, i32 1
  store i64 %45, i64* %48, align 8, !noalias !212
  %49 = getelementptr inbounds %"class.v8::internal::LinearAllocationArea", %"class.v8::internal::LinearAllocationArea"* %4, i64 0, i32 2
  store i64 %46, i64* %49, align 8, !noalias !212
  call void @_ZN2v88internal21LocalAllocationBufferC1EPNS0_4HeapENS0_20LinearAllocationAreaE(%"class.v8::internal::LocalAllocationBuffer"* nonnull %6, %"class.v8::internal::Heap"* %43, %"class.v8::internal::LinearAllocationArea"* nonnull byval(%"class.v8::internal::LinearAllocationArea") align 8 %4) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %44)
  %50 = call dereferenceable(32) %"class.v8::internal::LocalAllocationBuffer"* @_ZN2v88internal21LocalAllocationBufferaSEOS1_(%"class.v8::internal::LocalAllocationBuffer"* %40, %"class.v8::internal::LocalAllocationBuffer"* nonnull dereferenceable(32) %6) #12
  %51 = bitcast %"class.v8::internal::LinearAllocationArea"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %51) #12
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %3, %"class.v8::internal::LocalAllocationBuffer"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %51) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #12
  %52 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %0, i64 0, i32 3, i32 1, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = getelementptr inbounds %"class.v8::internal::LocalAllocationBuffer", %"class.v8::internal::LocalAllocationBuffer"* %5, i64 0, i32 1, i32 2
  %55 = load i64, i64* %54, align 8
  %56 = icmp eq i64 %53, %55
  br i1 %56, label %57, label %62

57:                                               ; preds = %38
  %58 = getelementptr inbounds %"class.v8::internal::LocalAllocationBuffer", %"class.v8::internal::LocalAllocationBuffer"* %5, i64 0, i32 1, i32 1
  %59 = load i64, i64* %58, align 8
  store i64 %59, i64* %52, align 8
  %60 = getelementptr inbounds %"class.v8::internal::LocalAllocationBuffer", %"class.v8::internal::LocalAllocationBuffer"* %5, i64 0, i32 1, i32 0
  %61 = bitcast i64* %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #12
  br label %64

62:                                               ; preds = %38
  %63 = bitcast %"class.v8::internal::LinearAllocationArea"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %63) #12
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %7, %"class.v8::internal::LocalAllocationBuffer"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %63) #12
  br label %64

64:                                               ; preds = %57, %62
  %65 = bitcast %"class.v8::internal::LinearAllocationArea"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %65) #12
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %2, %"class.v8::internal::LocalAllocationBuffer"* nonnull %5) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %65) #12
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %39) #12
  br label %66

66:                                               ; preds = %37, %64, %1
  %67 = phi i1 [ false, %1 ], [ false, %37 ], [ true, %64 ]
  ret i1 %67
}

; Function Attrs: nounwind
declare void @_ZN2v88internal21LocalAllocationBufferC1EOS1_(%"class.v8::internal::LocalAllocationBuffer"*, %"class.v8::internal::LocalAllocationBuffer"* dereferenceable(32)) unnamed_addr #3

; Function Attrs: nounwind
declare dereferenceable(32) %"class.v8::internal::LocalAllocationBuffer"* @_ZN2v88internal21LocalAllocationBufferaSEOS1_(%"class.v8::internal::LocalAllocationBuffer"*, %"class.v8::internal::LocalAllocationBuffer"* dereferenceable(32)) local_unnamed_addr #3

declare void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* sret, %"class.v8::internal::LocalAllocationBuffer"*) local_unnamed_addr #1

declare i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"*, i32, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"*, i64, i64, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"*, %"class.v8::internal::AllocationSite"* dereferenceable(8), %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.1327"* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %6 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = and i64 %7, 4294967295
  %9 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i64, i64* %9, align 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %74, label %12

12:                                               ; preds = %5
  %13 = tail call i64 @llvm.ctpop.i64(i64 %10) #12, !range !207
  %14 = icmp ugt i64 %13, 1
  br i1 %14, label %18, label %15

15:                                               ; preds = %12
  %16 = add i64 %10, 4294967295
  %17 = and i64 %16, %8
  br label %22

18:                                               ; preds = %12
  %19 = icmp ult i64 %8, %10
  br i1 %19, label %22, label %20

20:                                               ; preds = %18
  %21 = urem i64 %8, %10
  br label %22

22:                                               ; preds = %15, %18, %20
  %23 = phi i64 [ %17, %15 ], [ %21, %20 ], [ %8, %18 ]
  %24 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %25 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %24, align 8
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %25, i64 %23
  %27 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.518"* %27, null
  br i1 %28, label %74, label %29

29:                                               ; preds = %22
  %30 = add i64 %10, -1
  %31 = trunc i64 %7 to i32
  br i1 %14, label %32, label %55

32:                                               ; preds = %29, %49
  %33 = phi %"struct.std::__1::__hash_node_base.518"* [ %35, %49 ], [ %27, %29 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %34, align 8
  %36 = icmp eq %"struct.std::__1::__hash_node_base.518"* %35, null
  br i1 %36, label %74, label %37

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %35, i64 1
  %39 = bitcast %"struct.std::__1::__hash_node_base.518"* %38 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = icmp eq i64 %40, %8
  br i1 %41, label %49, label %42

42:                                               ; preds = %37
  %43 = icmp ult i64 %40, %10
  br i1 %43, label %46, label %44

44:                                               ; preds = %42
  %45 = urem i64 %40, %10
  br label %46

46:                                               ; preds = %44, %42
  %47 = phi i64 [ %45, %44 ], [ %40, %42 ]
  %48 = icmp eq i64 %47, %23
  br i1 %48, label %49, label %74

49:                                               ; preds = %46, %37
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %35, i64 2
  %51 = bitcast %"struct.std::__1::__hash_node_base.518"* %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %53, %31
  br i1 %54, label %166, label %32

55:                                               ; preds = %29, %68
  %56 = phi %"struct.std::__1::__hash_node_base.518"* [ %58, %68 ], [ %27, %29 ]
  %57 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %56, i64 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.518"* %58, null
  br i1 %59, label %74, label %60

60:                                               ; preds = %55
  %61 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %58, i64 1
  %62 = bitcast %"struct.std::__1::__hash_node_base.518"* %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = icmp eq i64 %63, %8
  %65 = and i64 %63, %30
  %66 = icmp eq i64 %65, %23
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %74

68:                                               ; preds = %60
  %69 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %58, i64 2
  %70 = bitcast %"struct.std::__1::__hash_node_base.518"* %69 to i64*
  %71 = load i64, i64* %70, align 8
  %72 = trunc i64 %71 to i32
  %73 = icmp eq i32 %72, %31
  br i1 %73, label %166, label %55

74:                                               ; preds = %60, %55, %46, %32, %22, %5
  %75 = phi i64 [ %23, %22 ], [ undef, %5 ], [ %23, %32 ], [ %23, %46 ], [ %23, %55 ], [ %23, %60 ]
  %76 = tail call i8* @_Znwm(i64 32) #17, !noalias !215
  %77 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %78 = load %"class.v8::internal::AllocationSite"*, %"class.v8::internal::AllocationSite"** %77, align 8, !noalias !215
  %79 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %78, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = getelementptr inbounds i8, i8* %76, i64 16
  %81 = bitcast i8* %80 to i64*
  %82 = load i64, i64* %79, align 8, !noalias !215
  store i64 %82, i64* %81, align 8, !noalias !215
  %83 = getelementptr inbounds i8, i8* %76, i64 24
  %84 = bitcast i8* %83 to i64*
  store i64 0, i64* %84, align 8, !noalias !215
  %85 = getelementptr inbounds i8, i8* %76, i64 8
  %86 = bitcast i8* %85 to i64*
  store i64 %8, i64* %86, align 8, !noalias !215
  %87 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.518"**
  store %"struct.std::__1::__hash_node_base.518"* null, %"struct.std::__1::__hash_node_base.518"** %87, align 8, !noalias !215
  %88 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 2, i32 0, i32 0
  %89 = load i64, i64* %88, align 8
  %90 = add i64 %89, 1
  %91 = uitofp i64 %90 to float
  %92 = uitofp i64 %10 to float
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 3, i32 0, i32 0
  %94 = load float, float* %93, align 4
  %95 = fmul float %94, %92
  %96 = fcmp olt float %95, %91
  %97 = or i1 %11, %96
  br i1 %97, label %98, label %121

98:                                               ; preds = %74
  %99 = shl i64 %10, 1
  %100 = icmp ult i64 %10, 3
  %101 = tail call i64 @llvm.ctpop.i64(i64 %10) #12, !range !207
  %102 = icmp ugt i64 %101, 1
  %103 = or i1 %100, %102
  %104 = zext i1 %103 to i64
  %105 = or i64 %99, %104
  %106 = fdiv float %91, %94
  %107 = tail call float @llvm.ceil.f32(float %106) #12
  %108 = fptoui float %107 to i64
  %109 = icmp ult i64 %105, %108
  %110 = select i1 %109, i64 %108, i64 %105
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.514"* %0, i64 %110)
  %111 = load i64, i64* %9, align 8
  %112 = tail call i64 @llvm.ctpop.i64(i64 %111) #12, !range !207
  %113 = icmp ugt i64 %112, 1
  br i1 %113, label %117, label %114

114:                                              ; preds = %98
  %115 = add i64 %111, 4294967295
  %116 = and i64 %115, %8
  br label %121

117:                                              ; preds = %98
  %118 = icmp ult i64 %8, %111
  br i1 %118, label %121, label %119

119:                                              ; preds = %117
  %120 = urem i64 %8, %111
  br label %121

121:                                              ; preds = %119, %117, %114, %74
  %122 = phi i64 [ %10, %74 ], [ %111, %114 ], [ %111, %117 ], [ %111, %119 ]
  %123 = phi i64 [ %75, %74 ], [ %116, %114 ], [ %8, %117 ], [ %120, %119 ]
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %125 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %124, align 8
  %126 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %125, i64 %123
  %127 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %126, align 8
  %128 = icmp eq %"struct.std::__1::__hash_node_base.518"* %127, null
  br i1 %128, label %129, label %155

129:                                              ; preds = %121
  %130 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 1, i32 0, i32 0
  %131 = bitcast %"struct.std::__1::__hash_node_base.518"* %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = bitcast i8* %76 to i64*
  store i64 %132, i64* %133, align 8
  %134 = bitcast %"struct.std::__1::__hash_node_base.518"* %130 to i8**
  store i8* %76, i8** %134, align 8
  store %"struct.std::__1::__hash_node_base.518"* %130, %"struct.std::__1::__hash_node_base.518"** %126, align 8
  %135 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %87, align 8
  %136 = icmp eq %"struct.std::__1::__hash_node_base.518"* %135, null
  br i1 %136, label %162, label %137

137:                                              ; preds = %129
  %138 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %135, i64 1
  %139 = bitcast %"struct.std::__1::__hash_node_base.518"* %138 to i64*
  %140 = load i64, i64* %139, align 8
  %141 = tail call i64 @llvm.ctpop.i64(i64 %122) #12, !range !207
  %142 = icmp ugt i64 %141, 1
  br i1 %142, label %146, label %143

143:                                              ; preds = %137
  %144 = add i64 %122, -1
  %145 = and i64 %140, %144
  br label %150

146:                                              ; preds = %137
  %147 = icmp ult i64 %140, %122
  br i1 %147, label %150, label %148

148:                                              ; preds = %146
  %149 = urem i64 %140, %122
  br label %150

150:                                              ; preds = %143, %146, %148
  %151 = phi i64 [ %145, %143 ], [ %149, %148 ], [ %140, %146 ]
  %152 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %124, align 8
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %152, i64 %151
  %154 = bitcast %"struct.std::__1::__hash_node_base.518"** %153 to i8**
  br label %160

155:                                              ; preds = %121
  %156 = bitcast %"struct.std::__1::__hash_node_base.518"* %127 to i64*
  %157 = load i64, i64* %156, align 8
  %158 = bitcast i8* %76 to i64*
  store i64 %157, i64* %158, align 8
  %159 = bitcast %"struct.std::__1::__hash_node_base.518"* %127 to i8**
  br label %160

160:                                              ; preds = %150, %155
  %161 = phi i8** [ %159, %155 ], [ %154, %150 ]
  store i8* %76, i8** %161, align 8
  br label %162

162:                                              ; preds = %160, %129
  %163 = bitcast i8* %76 to %"struct.std::__1::__hash_node_base.518"*
  %164 = load i64, i64* %88, align 8
  %165 = add i64 %164, 1
  store i64 %165, i64* %88, align 8
  br label %166

166:                                              ; preds = %68, %49, %162
  %167 = phi i8 [ 1, %162 ], [ 0, %49 ], [ 0, %68 ]
  %168 = phi %"struct.std::__1::__hash_node_base.518"* [ %163, %162 ], [ %35, %49 ], [ %58, %68 ]
  %169 = insertvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } undef, %"struct.std::__1::__hash_node_base.518"* %168, 0
  %170 = insertvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %169, i8 %167, 1
  ret { %"struct.std::__1::__hash_node_base.518"*, i8 } %170
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE6rehashEm(%"class.std::__1::__hash_table.514"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !207
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.514"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !207
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !207
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.514"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE8__rehashEm(%"class.std::__1::__hash_table.514"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %183, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.514"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.518"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.518"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.520", %"class.std::__1::__bucket_list_deallocator.520"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.518"* null, %"struct.std::__1::__hash_node_base.518"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !218

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.518"* %38, null
  br i1 %39, label %191, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.518"* null, %"struct.std::__1::__hash_node_base.518"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.518"* null, %"struct.std::__1::__hash_node_base.518"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.518"* null, %"struct.std::__1::__hash_node_base.518"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.518"* null, %"struct.std::__1::__hash_node_base.518"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.518"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !207
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.518"* %36, %"struct.std::__1::__hash_node_base.518"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.518"* %75, null
  br i1 %76, label %191, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %133

79:                                               ; preds = %77, %124
  %80 = phi %"struct.std::__1::__hash_node_base.518"* [ %128, %124 ], [ %75, %77 ]
  %81 = phi i64 [ %126, %124 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.518"* [ %125, %124 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.518"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.518"* %95, null
  br i1 %96, label %123, label %130

97:                                               ; preds = %130, %102
  %98 = phi %"struct.std::__1::__hash_node_base.518"* [ %100, %102 ], [ %80, %130 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.518"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.518"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %132, align 8
  %107 = trunc i64 %106 to i32
  %108 = trunc i64 %105 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %97, label %110

110:                                              ; preds = %102, %97
  %111 = ptrtoint %"struct.std::__1::__hash_node_base.518"* %100 to i64
  %112 = bitcast %"struct.std::__1::__hash_node_base.518"* %98 to i64*
  %113 = bitcast %"struct.std::__1::__hash_node_base.518"* %82 to i64*
  store i64 %111, i64* %113, align 8
  %114 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %114, i64 %90
  %116 = bitcast %"struct.std::__1::__hash_node_base.518"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %112, align 8
  %119 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %119, i64 %90
  %121 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %121, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.518"* %80, %"struct.std::__1::__hash_node_base.518"** %122, align 8
  br label %124

123:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.518"* %82, %"struct.std::__1::__hash_node_base.518"** %94, align 8
  br label %124

124:                                              ; preds = %123, %110, %89
  %125 = phi %"struct.std::__1::__hash_node_base.518"* [ %80, %123 ], [ %82, %110 ], [ %80, %89 ]
  %126 = phi i64 [ %90, %123 ], [ %81, %110 ], [ %81, %89 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %125, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base.518"* %128, null
  br i1 %129, label %191, label %79

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %80, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base.518"* %131 to i64*
  br label %97

133:                                              ; preds = %77, %177
  %134 = phi %"struct.std::__1::__hash_node_base.518"* [ %181, %177 ], [ %75, %77 ]
  %135 = phi i64 [ %179, %177 ], [ %71, %77 ]
  %136 = phi %"struct.std::__1::__hash_node_base.518"* [ %178, %177 ], [ %38, %77 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base.518"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, %78
  %141 = icmp eq i64 %140, %135
  br i1 %141, label %177, label %142

142:                                              ; preds = %133
  %143 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %143, i64 %140
  %145 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base.518"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %134, i64 2
  %149 = bitcast %"struct.std::__1::__hash_node_base.518"* %148 to i64*
  br label %151

150:                                              ; preds = %142
  store %"struct.std::__1::__hash_node_base.518"* %136, %"struct.std::__1::__hash_node_base.518"** %144, align 8
  br label %177

151:                                              ; preds = %147, %156
  %152 = phi %"struct.std::__1::__hash_node_base.518"* [ %154, %156 ], [ %134, %147 ]
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %152, i64 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base.518"* %154, null
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %154, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base.518"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %149, align 8
  %161 = trunc i64 %160 to i32
  %162 = trunc i64 %159 to i32
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %151, label %164

164:                                              ; preds = %151, %156
  %165 = ptrtoint %"struct.std::__1::__hash_node_base.518"* %154 to i64
  %166 = bitcast %"struct.std::__1::__hash_node_base.518"* %152 to i64*
  %167 = bitcast %"struct.std::__1::__hash_node_base.518"* %136 to i64*
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %168, i64 %140
  %170 = bitcast %"struct.std::__1::__hash_node_base.518"** %169 to i64**
  %171 = load i64*, i64** %170, align 8
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %166, align 8
  %173 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %173, i64 %140
  %175 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %175, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.518"* %134, %"struct.std::__1::__hash_node_base.518"** %176, align 8
  br label %177

177:                                              ; preds = %133, %164, %150
  %178 = phi %"struct.std::__1::__hash_node_base.518"* [ %134, %150 ], [ %136, %164 ], [ %134, %133 ]
  %179 = phi i64 [ %140, %150 ], [ %135, %164 ], [ %135, %133 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %178, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.518"* %181, null
  br i1 %182, label %191, label %133

183:                                              ; preds = %2
  %184 = getelementptr inbounds %"class.std::__1::__hash_table.514", %"class.std::__1::__hash_table.514"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %184, align 8
  store %"struct.std::__1::__hash_node_base.518"** null, %"struct.std::__1::__hash_node_base.518"*** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base.518"** %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = bitcast %"struct.std::__1::__hash_node_base.518"** %185 to i8*
  tail call void @_ZdlPv(i8* %188) #17
  br label %189

189:                                              ; preds = %183, %187
  %190 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.520", %"class.std::__1::__bucket_list_deallocator.520"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %190, align 8
  br label %191

191:                                              ; preds = %177, %124, %70, %35, %189
  ret void
}

declare i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"*, i64, i32, i32) local_unnamed_addr #1

declare %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

declare i8* @_ZN2v88internal8MallocednwEm(i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN2v88internal8MalloceddlEPv(i8*) local_unnamed_addr #3

declare %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

declare %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

declare i8* @_ZN2v88internal7Isolate23CurrentEmbeddedBlobCodeEv() local_unnamed_addr #1

declare i32 @_ZN2v88internal7Isolate27CurrentEmbeddedBlobCodeSizeEv() local_unnamed_addr #1

declare void @_ZN2v88internal11MemoryChunk18SetReadAndWritableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %11, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #12
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeIN2v88internal10HeapObjectENS2_6Object8ComparerENS_9allocatorIS3_EEE7destroyEPNS_11__tree_nodeIS3_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #12
  %10 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  ret void

11:                                               ; preds = %2
  ret void
}

declare void @_ZN2v88internal11MemoryChunk11SetReadableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

declare void @_ZN2v88internal11MemoryChunk20SetReadAndExecutableEv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE3PopEiPS5_(%"class.v8::internal::Worklist.1179"*, i32, %"struct.std::__1::pair.1282"*) local_unnamed_addr #0 comdat align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %4, i32 1
  %6 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %6 to i64
  br i1 %9, label %19, label %11

11:                                               ; preds = %3
  %12 = add i64 %8, -1
  store i64 %12, i64* %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %6, i64 0, i32 2, i64 %12, i32 0, i32 0, i32 0, i32 0
  %14 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %15 = load i64, i64* %13, align 8
  store i64 %15, i64* %14, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %6, i64 0, i32 2, i64 %12, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2, i64 0, i32 1
  store i32 %17, i32* %18, align 8
  br label %64

19:                                               ; preds = %3
  %20 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %4, i32 0
  %21 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %20, align 8
  %22 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %21, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %29, label %25

25:                                               ; preds = %19
  %26 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %21 to i64
  %27 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %5 to i64*
  %28 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %20 to i64*
  store i64 %26, i64* %27, align 8
  store i64 %10, i64* %28, align 8
  br label %51

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 1
  %31 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %30 to i64*
  %32 = load atomic i64, i64* %31 monotonic, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %64, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %35) #12
  %36 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %30, align 8
  %37 = icmp eq %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %36, null
  br i1 %37, label %38, label %39

38:                                               ; preds = %34
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %35) #12
  br label %64

39:                                               ; preds = %34
  %40 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %36 to i64*
  %41 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %36 to i64
  %42 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = atomicrmw sub i64* %42, i64 1 monotonic
  %44 = load i64, i64* %40, align 8
  store atomic volatile i64 %44, i64* %31 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %35) #12
  %45 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %5, align 8
  %46 = icmp eq %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %45, null
  br i1 %46, label %49, label %47

47:                                               ; preds = %39
  %48 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %45 to i8*
  tail call void @_ZdlPv(i8* %48) #17
  br label %49

49:                                               ; preds = %39, %47
  %50 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %5 to i64*
  store i64 %41, i64* %50, align 8
  br label %51

51:                                               ; preds = %49, %25
  %52 = phi %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* [ %36, %49 ], [ %21, %25 ]
  %53 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %52, i64 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %64, label %56

56:                                               ; preds = %51
  %57 = add i64 %54, -1
  store i64 %57, i64* %53, align 8
  %58 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %52, i64 0, i32 2, i64 %57, i32 0, i32 0, i32 0, i32 0
  %59 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i64, i64* %58, align 8
  store i64 %60, i64* %59, align 8
  %61 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %52, i64 0, i32 2, i64 %57, i32 1
  %62 = load i32, i32* %61, align 8
  %63 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2, i64 0, i32 1
  store i32 %62, i32* %63, align 8
  br label %64

64:                                               ; preds = %38, %29, %56, %51, %11
  %65 = phi i1 [ true, %11 ], [ true, %51 ], [ true, %56 ], [ false, %29 ], [ false, %38 ]
  ret i1 %65
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE3PopEiPS3_(%"class.v8::internal::Worklist.1181"*, i32, %"struct.v8::internal::Scavenger::PromotionListEntry"*) local_unnamed_addr #0 comdat align 2 {
  %4 = sext i32 %1 to i64
  %5 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %4, i32 1
  %6 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %5, align 8
  %7 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %6, i64 0, i32 1
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  %10 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %6 to i64
  br i1 %9, label %16, label %11

11:                                               ; preds = %3
  %12 = add i64 %8, -1
  store i64 %12, i64* %7, align 8
  %13 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %6, i64 0, i32 2, i64 %12
  %14 = bitcast %"struct.v8::internal::Scavenger::PromotionListEntry"* %2 to i8*
  %15 = bitcast %"struct.v8::internal::Scavenger::PromotionListEntry"* %13 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 20, i1 false) #12
  br label %58

16:                                               ; preds = %3
  %17 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %4, i32 0
  %18 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %17, align 8
  %19 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %18, i64 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = icmp eq i64 %20, 0
  br i1 %21, label %26, label %22

22:                                               ; preds = %16
  %23 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %18 to i64
  %24 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %5 to i64*
  %25 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %17 to i64*
  store i64 %23, i64* %24, align 8
  store i64 %10, i64* %25, align 8
  br label %48

26:                                               ; preds = %16
  %27 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 1
  %28 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %27 to i64*
  %29 = load atomic i64, i64* %28 monotonic, align 8
  %30 = icmp eq i64 %29, 0
  br i1 %30, label %58, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %32) #12
  %33 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %27, align 8
  %34 = icmp eq %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %33, null
  br i1 %34, label %35, label %36

35:                                               ; preds = %31
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %32) #12
  br label %58

36:                                               ; preds = %31
  %37 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %33 to i64*
  %38 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %33 to i64
  %39 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = atomicrmw sub i64* %39, i64 1 monotonic
  %41 = load i64, i64* %37, align 8
  store atomic volatile i64 %41, i64* %28 monotonic, align 8
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %32) #12
  %42 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %5, align 8
  %43 = icmp eq %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %42, null
  br i1 %43, label %46, label %44

44:                                               ; preds = %36
  %45 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %42 to i8*
  tail call void @_ZdlPv(i8* %45) #17
  br label %46

46:                                               ; preds = %36, %44
  %47 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %5 to i64*
  store i64 %38, i64* %47, align 8
  br label %48

48:                                               ; preds = %46, %22
  %49 = phi %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* [ %33, %46 ], [ %18, %22 ]
  %50 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %49, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %58, label %53

53:                                               ; preds = %48
  %54 = add i64 %51, -1
  store i64 %54, i64* %50, align 8
  %55 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %49, i64 0, i32 2, i64 %54
  %56 = bitcast %"struct.v8::internal::Scavenger::PromotionListEntry"* %2 to i8*
  %57 = bitcast %"struct.v8::internal::Scavenger::PromotionListEntry"* %55 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %56, i8* align 8 %57, i64 20, i1 false) #12
  br label %58

58:                                               ; preds = %35, %26, %53, %48, %11
  %59 = phi i1 [ true, %11 ], [ true, %48 ], [ true, %53 ], [ false, %26 ], [ false, %35 ]
  ret i1 %59
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal26ScavengeWeakObjectRetainerD0Ev(%"class.v8::internal::ScavengeWeakObjectRetainer"*) unnamed_addr #7 comdat align 2 {
  %2 = bitcast %"class.v8::internal::ScavengeWeakObjectRetainer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN2v88internal26ScavengeWeakObjectRetainer8RetainAsENS0_6ObjectE(%"class.v8::internal::ScavengeWeakObjectRetainer"*, i64) unnamed_addr #0 comdat align 2 {
  %3 = and i64 %1, 1
  %4 = icmp eq i64 %3, 0
  br i1 %4, label %23, label %5

5:                                                ; preds = %2
  %6 = and i64 %1, -262144
  %7 = inttoptr i64 %6 to %"class.v8::internal::BasicMemoryChunk"*
  %8 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %7, i64 0, i32 1
  %9 = load i64, i64* %8, align 8
  %10 = and i64 %9, 8
  %11 = icmp eq i64 %10, 0
  br i1 %11, label %23, label %12

12:                                               ; preds = %5
  %13 = and i64 %1, -4294967296
  %14 = add i64 %1, -1
  %15 = inttoptr i64 %14 to i32*
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = zext i32 %16 to i64
  %18 = or i64 %13, %17
  %19 = and i64 %17, 3
  %20 = icmp eq i64 %19, 0
  %21 = add i64 %18, 1
  %22 = select i1 %20, i64 %21, i64 0
  ret i64 %22

23:                                               ; preds = %5, %2
  ret i64 %1
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18WeakObjectRetainerD2Ev(%"class.v8::internal::WeakObjectRetainer"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN2v88internal10PagedSpace15MergeLocalSpaceEPNS0_10LocalSpaceE(%"class.v8::internal::PagedSpace"*, %"class.v8::internal::LocalSpace"*) local_unnamed_addr #1

declare void @_ZN2v88internal8NewSpace18MaybeFreeUnusedLabENS0_20LinearAllocationAreaE(%"class.v8::internal::NewSpace"*, %"class.v8::internal::LinearAllocationArea"* byval(%"class.v8::internal::LinearAllocationArea") align 8) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINSt3__14pairINS0_10HeapObjectEiEELi256EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1179"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %47, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #12
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #12
  %18 = tail call i8* @_Znwm(i64 4112) #17
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = getelementptr inbounds i8, i8* %18, i64 16
  %22 = bitcast i8* %21 to %"struct.std::__1::pair.1282"*
  %23 = getelementptr inbounds i8, i8* %18, i64 4112
  %24 = bitcast i8* %23 to %"struct.std::__1::pair.1282"*
  br label %25

25:                                               ; preds = %25, %9
  %26 = phi %"struct.std::__1::pair.1282"* [ %22, %9 ], [ %43, %25 ]
  %27 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %27, align 8
  %28 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 0, i32 1
  store i32 0, i32* %28, align 8
  %29 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %29, align 8
  %30 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 1, i32 1
  store i32 0, i32* %30, align 8
  %31 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 2, i32 1
  store i32 0, i32* %32, align 8
  %33 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 3, i32 1
  store i32 0, i32* %34, align 8
  %35 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %35, align 8
  %36 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 4, i32 1
  store i32 0, i32* %36, align 8
  %37 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %37, align 8
  %38 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 5, i32 1
  store i32 0, i32* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %39, align 8
  %40 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 6, i32 1
  store i32 0, i32* %40, align 8
  %41 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 7, i32 1
  store i32 0, i32* %42, align 8
  %43 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %26, i64 8
  %44 = icmp eq %"struct.std::__1::pair.1282"* %43, %24
  br i1 %44, label %45, label %25

45:                                               ; preds = %25
  %46 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %4 to i8**
  store i8* %18, i8** %46, align 8
  br label %47

47:                                               ; preds = %2, %45
  %48 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 0, i64 %3, i32 1
  %49 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %48, align 8
  %50 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %49, i64 0, i32 1
  %51 = load i64, i64* %50, align 8
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %91, label %53

53:                                               ; preds = %47
  %54 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %54) #12
  %55 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 1
  %56 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %49 to i64*
  store i64 %57, i64* %58, align 8
  %59 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %49 to i64
  store atomic volatile i64 %59, i64* %56 monotonic, align 8
  %60 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = atomicrmw add i64* %60, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %54) #12
  %62 = tail call i8* @_Znwm(i64 4112) #17
  %63 = getelementptr inbounds i8, i8* %62, i64 8
  %64 = bitcast i8* %63 to i64*
  store i64 0, i64* %64, align 8
  %65 = getelementptr inbounds i8, i8* %62, i64 16
  %66 = bitcast i8* %65 to %"struct.std::__1::pair.1282"*
  %67 = getelementptr inbounds i8, i8* %62, i64 4112
  %68 = bitcast i8* %67 to %"struct.std::__1::pair.1282"*
  br label %69

69:                                               ; preds = %69, %53
  %70 = phi %"struct.std::__1::pair.1282"* [ %66, %53 ], [ %87, %69 ]
  %71 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 0, i32 1
  store i32 0, i32* %72, align 8
  %73 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 1, i32 1
  store i32 0, i32* %74, align 8
  %75 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %75, align 8
  %76 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 2, i32 1
  store i32 0, i32* %76, align 8
  %77 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %77, align 8
  %78 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 3, i32 1
  store i32 0, i32* %78, align 8
  %79 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %79, align 8
  %80 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 4, i32 1
  store i32 0, i32* %80, align 8
  %81 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %81, align 8
  %82 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 5, i32 1
  store i32 0, i32* %82, align 8
  %83 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %83, align 8
  %84 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 6, i32 1
  store i32 0, i32* %84, align 8
  %85 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %85, align 8
  %86 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 7, i32 1
  store i32 0, i32* %86, align 8
  %87 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %70, i64 8
  %88 = icmp eq %"struct.std::__1::pair.1282"* %87, %68
  br i1 %88, label %89, label %69

89:                                               ; preds = %69
  %90 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %48 to i8**
  store i8* %62, i8** %90, align 8
  br label %91

91:                                               ; preds = %47, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_9Scavenger18PromotionListEntryELi4EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1181"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %24, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #12
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #12
  %18 = tail call i8* @_Znwm(i64 112) #17
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = getelementptr inbounds i8, i8* %18, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 16, i1 false) #12
  %21 = getelementptr inbounds i8, i8* %18, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 16, i1 false) #12
  %22 = getelementptr inbounds i8, i8* %18, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 16, i1 false) #12
  %23 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %4 to i8**
  store i8* %18, i8** %23, align 8
  br label %24

24:                                               ; preds = %2, %9
  %25 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 0, i64 %3, i32 1
  %26 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %25, align 8
  %27 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %26, i64 0, i32 1
  %28 = load i64, i64* %27, align 8
  %29 = icmp eq i64 %28, 0
  br i1 %29, label %45, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %31) #12
  %32 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 1
  %33 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %32 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %26 to i64*
  store i64 %34, i64* %35, align 8
  %36 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %26 to i64
  store atomic volatile i64 %36, i64* %33 monotonic, align 8
  %37 = getelementptr inbounds %"class.v8::internal::Worklist.1181", %"class.v8::internal::Worklist.1181"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = atomicrmw add i64* %37, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %31) #12
  %39 = tail call i8* @_Znwm(i64 112) #17
  %40 = getelementptr inbounds i8, i8* %39, i64 8
  %41 = getelementptr inbounds i8, i8* %39, i64 40
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %40, i8 0, i64 24, i1 false) #12
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 16, i1 false) #12
  %42 = getelementptr inbounds i8, i8* %39, i64 64
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 16, i1 false) #12
  %43 = getelementptr inbounds i8, i8* %39, i64 88
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 16, i1 false) #12
  %44 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %25 to i8**
  store i8* %39, i8** %44, align 8
  br label %45

45:                                               ; preds = %24, %30
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal11RootVisitorD2Ev(%"class.v8::internal::RootVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal13ObjectVisitorD2Ev(%"class.v8::internal::ObjectVisitor"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal14IndexGeneratorD2Ev(%"class.v8::internal::IndexGenerator"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1
  %3 = load %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"*** %2, align 8
  %4 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = lshr i64 %5, 8
  %7 = getelementptr inbounds %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %3, i64 %6
  %8 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 2
  %9 = load %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"*** %8, align 8
  %10 = icmp eq %"struct.std::__1::pair.1209"** %9, %3
  %11 = ptrtoint %"struct.std::__1::pair.1209"** %9 to i64
  %12 = ptrtoint %"struct.std::__1::pair.1209"** %3 to i64
  br i1 %10, label %13, label %15

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %28

15:                                               ; preds = %1
  %16 = load %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %7, align 8
  %17 = and i64 %5, 255
  %18 = getelementptr inbounds %"struct.std::__1::pair.1209", %"struct.std::__1::pair.1209"* %16, i64 %17
  %19 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, %5
  %22 = lshr i64 %21, 8
  %23 = getelementptr inbounds %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %3, i64 %22
  %24 = load %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %23, align 8
  %25 = and i64 %21, 255
  %26 = getelementptr inbounds %"struct.std::__1::pair.1209", %"struct.std::__1::pair.1209"* %24, i64 %25
  %27 = icmp eq %"struct.std::__1::pair.1209"* %26, %18
  br i1 %27, label %28, label %34

28:                                               ; preds = %47, %15, %13
  %29 = phi i64* [ %14, %13 ], [ %19, %15 ], [ %19, %47 ]
  store i64 0, i64* %29, align 8
  %30 = bitcast %"struct.std::__1::pair.1209"*** %8 to i64*
  %31 = sub i64 %11, %12
  %32 = ashr exact i64 %31, 3
  %33 = icmp ugt i64 %32, 2
  br i1 %33, label %52, label %65

34:                                               ; preds = %15, %47
  %35 = phi %"struct.std::__1::pair.1209"* [ %50, %47 ], [ %18, %15 ]
  %36 = phi %"struct.std::__1::pair.1209"** [ %48, %47 ], [ %7, %15 ]
  %37 = getelementptr inbounds %"struct.std::__1::pair.1209", %"struct.std::__1::pair.1209"* %35, i64 1
  %38 = ptrtoint %"struct.std::__1::pair.1209"* %37 to i64
  %39 = bitcast %"struct.std::__1::pair.1209"** %36 to i64*
  %40 = load i64, i64* %39, align 8
  %41 = sub i64 %38, %40
  %42 = icmp eq i64 %41, 4096
  br i1 %42, label %43, label %47

43:                                               ; preds = %34
  %44 = getelementptr inbounds %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %36, i64 1
  %45 = bitcast %"struct.std::__1::pair.1209"** %44 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %43, %34
  %48 = phi %"struct.std::__1::pair.1209"** [ %44, %43 ], [ %36, %34 ]
  %49 = phi i64 [ %46, %43 ], [ %38, %34 ]
  %50 = inttoptr i64 %49 to %"struct.std::__1::pair.1209"*
  %51 = icmp eq %"struct.std::__1::pair.1209"* %26, %50
  br i1 %51, label %28, label %34

52:                                               ; preds = %28, %52
  %53 = phi %"struct.std::__1::pair.1209"** [ %57, %52 ], [ %3, %28 ]
  %54 = bitcast %"struct.std::__1::pair.1209"** %53 to i8**
  %55 = load i8*, i8** %54, align 8
  tail call void @_ZdlPv(i8* %55) #17
  %56 = load %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"*** %2, align 8
  %57 = getelementptr inbounds %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %56, i64 1
  store %"struct.std::__1::pair.1209"** %57, %"struct.std::__1::pair.1209"*** %2, align 8
  %58 = load i64, i64* %30, align 8
  %59 = ptrtoint %"struct.std::__1::pair.1209"** %57 to i64
  %60 = sub i64 %58, %59
  %61 = ashr exact i64 %60, 3
  %62 = icmp ugt i64 %61, 2
  br i1 %62, label %52, label %63

63:                                               ; preds = %52
  %64 = inttoptr i64 %58 to %"struct.std::__1::pair.1209"**
  br label %65

65:                                               ; preds = %63, %28
  %66 = phi %"struct.std::__1::pair.1209"** [ %9, %28 ], [ %64, %63 ]
  %67 = phi %"struct.std::__1::pair.1209"** [ %3, %28 ], [ %57, %63 ]
  %68 = phi i64 [ %32, %28 ], [ %61, %63 ]
  switch i64 %68, label %72 [
    i64 1, label %70
    i64 2, label %69
  ]

69:                                               ; preds = %65
  br label %70

70:                                               ; preds = %65, %69
  %71 = phi i64 [ 256, %69 ], [ 128, %65 ]
  store i64 %71, i64* %4, align 8
  br label %72

72:                                               ; preds = %70, %65
  %73 = icmp eq %"struct.std::__1::pair.1209"** %67, %66
  br i1 %73, label %92, label %74

74:                                               ; preds = %72, %74
  %75 = phi %"struct.std::__1::pair.1209"** [ %78, %74 ], [ %67, %72 ]
  %76 = bitcast %"struct.std::__1::pair.1209"** %75 to i8**
  %77 = load i8*, i8** %76, align 8
  tail call void @_ZdlPv(i8* %77) #17
  %78 = getelementptr inbounds %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %75, i64 1
  %79 = icmp eq %"struct.std::__1::pair.1209"** %78, %66
  br i1 %79, label %80, label %74

80:                                               ; preds = %74
  %81 = load %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"*** %2, align 8
  %82 = load %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"*** %8, align 8
  %83 = icmp eq %"struct.std::__1::pair.1209"** %82, %81
  br i1 %83, label %92, label %84

84:                                               ; preds = %80
  %85 = ptrtoint %"struct.std::__1::pair.1209"** %81 to i64
  %86 = getelementptr %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %82, i64 -1
  %87 = ptrtoint %"struct.std::__1::pair.1209"** %86 to i64
  %88 = sub i64 %87, %85
  %89 = lshr i64 %88, 3
  %90 = xor i64 %89, -1
  %91 = getelementptr %"struct.std::__1::pair.1209"*, %"struct.std::__1::pair.1209"** %82, i64 %90
  store %"struct.std::__1::pair.1209"** %91, %"struct.std::__1::pair.1209"*** %8, align 8
  br label %92

92:                                               ; preds = %84, %80, %72
  %93 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %94 = load %"struct.std::__1::pair.1209"**, %"struct.std::__1::pair.1209"*** %93, align 8
  %95 = icmp eq %"struct.std::__1::pair.1209"** %94, null
  br i1 %95, label %98, label %96

96:                                               ; preds = %92
  %97 = bitcast %"struct.std::__1::pair.1209"** %94 to i8*
  tail call void @_ZdlPv(i8* %97) #17
  br label %98

98:                                               ; preds = %92, %96
  %99 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %100 = load i64**, i64*** %99, align 8
  %101 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 1
  %102 = load i64, i64* %101, align 8
  %103 = lshr i64 %102, 9
  %104 = getelementptr inbounds i64*, i64** %100, i64 %103
  %105 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %106 = load i64**, i64*** %105, align 8
  %107 = icmp eq i64** %106, %100
  %108 = ptrtoint i64** %106 to i64
  %109 = ptrtoint i64** %100 to i64
  br i1 %107, label %110, label %112

110:                                              ; preds = %98
  %111 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  br label %125

112:                                              ; preds = %98
  %113 = load i64*, i64** %104, align 8
  %114 = and i64 %102, 511
  %115 = getelementptr inbounds i64, i64* %113, i64 %114
  %116 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %117 = load i64, i64* %116, align 8
  %118 = add i64 %117, %102
  %119 = lshr i64 %118, 9
  %120 = getelementptr inbounds i64*, i64** %100, i64 %119
  %121 = load i64*, i64** %120, align 8
  %122 = and i64 %118, 511
  %123 = getelementptr inbounds i64, i64* %121, i64 %122
  %124 = icmp eq i64* %123, %115
  br i1 %124, label %125, label %131

125:                                              ; preds = %144, %112, %110
  %126 = phi i64* [ %111, %110 ], [ %116, %112 ], [ %116, %144 ]
  store i64 0, i64* %126, align 8
  %127 = bitcast i64*** %105 to i64*
  %128 = sub i64 %108, %109
  %129 = ashr exact i64 %128, 3
  %130 = icmp ugt i64 %129, 2
  br i1 %130, label %149, label %162

131:                                              ; preds = %112, %144
  %132 = phi i64* [ %147, %144 ], [ %115, %112 ]
  %133 = phi i64** [ %145, %144 ], [ %104, %112 ]
  %134 = getelementptr inbounds i64, i64* %132, i64 1
  %135 = ptrtoint i64* %134 to i64
  %136 = bitcast i64** %133 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = sub i64 %135, %137
  %139 = icmp eq i64 %138, 4096
  br i1 %139, label %140, label %144

140:                                              ; preds = %131
  %141 = getelementptr inbounds i64*, i64** %133, i64 1
  %142 = bitcast i64** %141 to i64*
  %143 = load i64, i64* %142, align 8
  br label %144

144:                                              ; preds = %140, %131
  %145 = phi i64** [ %141, %140 ], [ %133, %131 ]
  %146 = phi i64 [ %143, %140 ], [ %135, %131 ]
  %147 = inttoptr i64 %146 to i64*
  %148 = icmp eq i64* %123, %147
  br i1 %148, label %125, label %131

149:                                              ; preds = %125, %149
  %150 = phi i64** [ %154, %149 ], [ %100, %125 ]
  %151 = bitcast i64** %150 to i8**
  %152 = load i8*, i8** %151, align 8
  tail call void @_ZdlPv(i8* %152) #17
  %153 = load i64**, i64*** %99, align 8
  %154 = getelementptr inbounds i64*, i64** %153, i64 1
  store i64** %154, i64*** %99, align 8
  %155 = load i64, i64* %127, align 8
  %156 = ptrtoint i64** %154 to i64
  %157 = sub i64 %155, %156
  %158 = ashr exact i64 %157, 3
  %159 = icmp ugt i64 %158, 2
  br i1 %159, label %149, label %160

160:                                              ; preds = %149
  %161 = inttoptr i64 %155 to i64**
  br label %162

162:                                              ; preds = %160, %125
  %163 = phi i64** [ %106, %125 ], [ %161, %160 ]
  %164 = phi i64** [ %100, %125 ], [ %154, %160 ]
  %165 = phi i64 [ %129, %125 ], [ %158, %160 ]
  switch i64 %165, label %169 [
    i64 1, label %167
    i64 2, label %166
  ]

166:                                              ; preds = %162
  br label %167

167:                                              ; preds = %162, %166
  %168 = phi i64 [ 512, %166 ], [ 256, %162 ]
  store i64 %168, i64* %101, align 8
  br label %169

169:                                              ; preds = %167, %162
  %170 = icmp eq i64** %164, %163
  br i1 %170, label %189, label %171

171:                                              ; preds = %169, %171
  %172 = phi i64** [ %175, %171 ], [ %164, %169 ]
  %173 = bitcast i64** %172 to i8**
  %174 = load i8*, i8** %173, align 8
  tail call void @_ZdlPv(i8* %174) #17
  %175 = getelementptr inbounds i64*, i64** %172, i64 1
  %176 = icmp eq i64** %175, %163
  br i1 %176, label %177, label %171

177:                                              ; preds = %171
  %178 = load i64**, i64*** %99, align 8
  %179 = load i64**, i64*** %105, align 8
  %180 = icmp eq i64** %179, %178
  br i1 %180, label %189, label %181

181:                                              ; preds = %177
  %182 = ptrtoint i64** %178 to i64
  %183 = getelementptr i64*, i64** %179, i64 -1
  %184 = ptrtoint i64** %183 to i64
  %185 = sub i64 %184, %182
  %186 = lshr i64 %185, 3
  %187 = xor i64 %186, -1
  %188 = getelementptr i64*, i64** %179, i64 %187
  store i64** %188, i64*** %105, align 8
  br label %189

189:                                              ; preds = %181, %177, %169
  %190 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %191 = load i64**, i64*** %190, align 8
  %192 = icmp eq i64** %191, null
  br i1 %192, label %195, label %193

193:                                              ; preds = %189
  %194 = bitcast i64** %191 to i8*
  tail call void @_ZdlPv(i8* %194) #17
  br label %195

195:                                              ; preds = %189, %193
  %196 = getelementptr inbounds %"class.v8::internal::IndexGenerator", %"class.v8::internal::IndexGenerator"* %0, i64 0, i32 0
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %196) #12
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal9ScavengerD2Ev(%"class.v8::internal::Scavenger"*) unnamed_addr #7 comdat align 2 {
  %2 = alloca %"class.v8::internal::LinearAllocationArea", align 8
  %3 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 11, i32 0, i32 1, i32 0, i32 0, i32 0
  %4 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %3, align 8
  %5 = icmp eq %"struct.std::__1::__hash_node_base"* %4, null
  br i1 %5, label %30, label %6

6:                                                ; preds = %1, %27
  %7 = phi %"struct.std::__1::__hash_node_base"* [ %9, %27 ], [ %4, %1 ]
  %8 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 0, i32 0
  %9 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %8, align 8
  %10 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 5
  %11 = bitcast %"struct.std::__1::__hash_node_base"* %10 to %"struct.std::__1::__hash_node_base.1259"**
  %12 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %11, align 8
  %13 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %12, null
  br i1 %13, label %20, label %14

14:                                               ; preds = %6, %14
  %15 = phi %"struct.std::__1::__hash_node_base.1259"* [ %17, %14 ], [ %12, %6 ]
  %16 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %15, i64 0, i32 0
  %17 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %16, align 8
  %18 = bitcast %"struct.std::__1::__hash_node_base.1259"* %15 to i8*
  tail call void @_ZdlPv(i8* %18) #17
  %19 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %17, null
  br i1 %19, label %20, label %14

20:                                               ; preds = %14, %6
  %21 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %7, i64 3
  %22 = bitcast %"struct.std::__1::__hash_node_base"* %21 to %"struct.std::__1::__hash_node_base.1259"***
  %23 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %22, align 8
  store %"struct.std::__1::__hash_node_base.1259"** null, %"struct.std::__1::__hash_node_base.1259"*** %22, align 8
  %24 = icmp eq %"struct.std::__1::__hash_node_base.1259"** %23, null
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = bitcast %"struct.std::__1::__hash_node_base.1259"** %23 to i8*
  tail call void @_ZdlPv(i8* %26) #17
  br label %27

27:                                               ; preds = %25, %20
  %28 = bitcast %"struct.std::__1::__hash_node_base"* %7 to i8*
  tail call void @_ZdlPv(i8* %28) #17
  %29 = icmp eq %"struct.std::__1::__hash_node_base"* %9, null
  br i1 %29, label %30, label %6

30:                                               ; preds = %27, %1
  %31 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 11, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %31, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %31, align 8
  %33 = icmp eq %"struct.std::__1::__hash_node_base"** %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast %"struct.std::__1::__hash_node_base"** %32 to i8*
  tail call void @_ZdlPv(i8* %35) #17
  br label %36

36:                                               ; preds = %30, %34
  %37 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %38, null
  br i1 %39, label %46, label %40

40:                                               ; preds = %36, %40
  %41 = phi %"struct.std::__1::__hash_node_base.1153"* [ %43, %40 ], [ %38, %36 ]
  %42 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %41, i64 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %42, align 8
  %44 = bitcast %"struct.std::__1::__hash_node_base.1153"* %41 to i8*
  tail call void @_ZdlPv(i8* %44) #17
  %45 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %43, null
  br i1 %45, label %46, label %40

46:                                               ; preds = %40, %36
  %47 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %47, align 8
  store %"struct.std::__1::__hash_node_base.1153"** null, %"struct.std::__1::__hash_node_base.1153"*** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.1153"** %48, null
  br i1 %49, label %52, label %50

50:                                               ; preds = %46
  %51 = bitcast %"struct.std::__1::__hash_node_base.1153"** %48 to i8*
  tail call void @_ZdlPv(i8* %51) #17
  br label %52

52:                                               ; preds = %46, %50
  %53 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3
  %54 = bitcast %"class.v8::internal::LinearAllocationArea"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #12
  call void @_ZN2v88internal21LocalAllocationBuffer20CloseAndMakeIterableEv(%"class.v8::internal::LinearAllocationArea"* nonnull sret %2, %"class.v8::internal::LocalAllocationBuffer"* %53) #12
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 2, i32 0
  call void @_ZN2v88internal10LocalSpaceD2Ev(%"class.v8::internal::LocalSpace"* %55) #12
  %56 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0
  call void @_ZN2v88internal10LocalSpaceD2Ev(%"class.v8::internal::LocalSpace"* %56) #12
  %57 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0, i32 1, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.518"* %58, null
  br i1 %59, label %66, label %60

60:                                               ; preds = %52, %60
  %61 = phi %"struct.std::__1::__hash_node_base.518"* [ %63, %60 ], [ %58, %52 ]
  %62 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %61, i64 0, i32 0
  %63 = load %"struct.std::__1::__hash_node_base.518"*, %"struct.std::__1::__hash_node_base.518"** %62, align 8
  %64 = bitcast %"struct.std::__1::__hash_node_base.518"* %61 to i8*
  call void @_ZdlPv(i8* %64) #17
  %65 = icmp eq %"struct.std::__1::__hash_node_base.518"* %63, null
  br i1 %65, label %66, label %60

66:                                               ; preds = %60, %52
  %67 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.518"**, %"struct.std::__1::__hash_node_base.518"*** %67, align 8
  store %"struct.std::__1::__hash_node_base.518"** null, %"struct.std::__1::__hash_node_base.518"*** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.518"** %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %66
  %71 = bitcast %"struct.std::__1::__hash_node_base.518"** %68 to i8*
  call void @_ZdlPv(i8* %71) #17
  br label %72

72:                                               ; preds = %66, %70
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal10LocalSpaceD2Ev(%"class.v8::internal::LocalSpace"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal10LocalSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.v8::internal::Page"**, %"class.v8::internal::Page"*** %3, align 8
  %5 = icmp eq %"class.v8::internal::Page"** %4, null
  br i1 %5, label %11, label %6

6:                                                ; preds = %1
  %7 = ptrtoint %"class.v8::internal::Page"** %4 to i64
  %8 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.v8::internal::Page"*** %8 to i64*
  store i64 %7, i64* %9, align 8
  %10 = bitcast %"class.v8::internal::Page"** %4 to i8*
  tail call void @_ZdlPv(i8* %10) #17
  br label %11

11:                                               ; preds = %1, %6
  %12 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN2v88internal10PagedSpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  tail call void @_ZN2v88internal10PagedSpace8TearDownEv(%"class.v8::internal::PagedSpace"* %12) #12
  %13 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 5
  tail call void @_ZN2v84base5MutexD1Ev(%"class.v8::base::Mutex"* %13) #12
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [18 x i8*] }, { [18 x i8*] }* @_ZTVN2v88internal5SpaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %14 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 3
  %15 = load %"struct.std::__1::atomic.19"*, %"struct.std::__1::atomic.19"** %14, align 8
  %16 = icmp eq %"struct.std::__1::atomic.19"* %15, null
  br i1 %16, label %19, label %17

17:                                               ; preds = %11
  %18 = bitcast %"struct.std::__1::atomic.19"* %15 to i8*
  tail call void @_ZdaPv(i8* %18) #17
  br label %19

19:                                               ; preds = %17, %11
  store %"struct.std::__1::atomic.19"* null, %"struct.std::__1::atomic.19"** %14, align 8
  %20 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %21 = load %"class.v8::internal::FreeList"*, %"class.v8::internal::FreeList"** %20, align 8
  store %"class.v8::internal::FreeList"* null, %"class.v8::internal::FreeList"** %20, align 8
  %22 = icmp eq %"class.v8::internal::FreeList"* %21, null
  br i1 %22, label %28, label %23

23:                                               ; preds = %19
  %24 = bitcast %"class.v8::internal::FreeList"* %21 to void (%"class.v8::internal::FreeList"*)***
  %25 = load void (%"class.v8::internal::FreeList"*)**, void (%"class.v8::internal::FreeList"*)*** %24, align 8
  %26 = getelementptr inbounds void (%"class.v8::internal::FreeList"*)*, void (%"class.v8::internal::FreeList"*)** %25, i64 1
  %27 = load void (%"class.v8::internal::FreeList"*)*, void (%"class.v8::internal::FreeList"*)** %26, align 8
  tail call void %27(%"class.v8::internal::FreeList"* nonnull %21) #12
  br label %28

28:                                               ; preds = %19, %23
  %29 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 1, i32 0, i32 0, i32 0
  %30 = load %"struct.std::__1::__hash_node_base.49"*, %"struct.std::__1::__hash_node_base.49"** %29, align 8
  %31 = icmp eq %"struct.std::__1::__hash_node_base.49"* %30, null
  br i1 %31, label %38, label %32

32:                                               ; preds = %28, %32
  %33 = phi %"struct.std::__1::__hash_node_base.49"* [ %35, %32 ], [ %30, %28 ]
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.49", %"struct.std::__1::__hash_node_base.49"* %33, i64 0, i32 0
  %35 = load %"struct.std::__1::__hash_node_base.49"*, %"struct.std::__1::__hash_node_base.49"** %34, align 8
  %36 = bitcast %"struct.std::__1::__hash_node_base.49"* %33 to i8*
  tail call void @_ZdlPv(i8* %36) #17
  %37 = icmp eq %"struct.std::__1::__hash_node_base.49"* %35, null
  br i1 %37, label %38, label %32

38:                                               ; preds = %32, %28
  %39 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base.49"**, %"struct.std::__1::__hash_node_base.49"*** %39, align 8
  store %"struct.std::__1::__hash_node_base.49"** null, %"struct.std::__1::__hash_node_base.49"*** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base.49"** %40, null
  br i1 %41, label %44, label %42

42:                                               ; preds = %38
  %43 = bitcast %"struct.std::__1::__hash_node_base.49"** %40 to i8*
  tail call void @_ZdlPv(i8* %43) #17
  br label %44

44:                                               ; preds = %42, %38
  %45 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 0
  %46 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %45, align 8
  %47 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %46, null
  br i1 %47, label %53, label %48

48:                                               ; preds = %44
  %49 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %46 to i64
  %50 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 1, i32 0, i32 1
  %51 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %50 to i64*
  store i64 %49, i64* %51, align 8
  %52 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %46 to i8*
  tail call void @_ZdlPv(i8* %52) #17
  br label %53

53:                                               ; preds = %48, %44
  %54 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %55 = load %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"*, %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %54, align 8
  %56 = icmp eq %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %55, null
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = ptrtoint %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %55 to i64
  %59 = getelementptr inbounds %"class.v8::internal::LocalSpace", %"class.v8::internal::LocalSpace"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"** %59 to i64*
  store i64 %58, i64* %60, align 8
  %61 = bitcast %"struct.v8::internal::AllocationCounter::AllocationObserverCounter"* %55 to i8*
  tail call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %53, %57
  ret void
}

declare void @_ZN2v88internal10PagedSpace8TearDownEv(%"class.v8::internal::PagedSpace"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #11

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #13

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN2v88internal9ScavengerENS_14default_deleteIS4_EEEENS_9allocatorIS7_EEE24__emplace_back_slow_pathIJPS4_EEEvDpOT_(%"class.std::__1::vector.1172"*, %"class.v8::internal::Scavenger"** dereferenceable(8)) local_unnamed_addr #7 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.1174"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.1172"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.1172"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #16
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.1174"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #16
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.1174"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.1174"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.1174"* %38 to i64
  %40 = bitcast %"class.v8::internal::Scavenger"** %1 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::unique_ptr.1174"* %37 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %37, i64 1
  %44 = ptrtoint %"class.std::__1::unique_ptr.1174"* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::vector.1172", %"class.std::__1::vector.1172"* %0, i64 0, i32 0, i32 0
  %46 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %45, align 8
  %47 = ptrtoint %"class.std::__1::unique_ptr.1174"* %46 to i64
  %48 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %3, align 8
  %49 = icmp eq %"class.std::__1::unique_ptr.1174"* %48, %46
  br i1 %49, label %131, label %50

50:                                               ; preds = %34
  %51 = getelementptr %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %48, i64 -1, i32 0, i32 0, i32 0
  %52 = ptrtoint %"class.v8::internal::Scavenger"** %51 to i64
  %53 = sub i64 %52, %47
  %54 = lshr i64 %53, 3
  %55 = add nuw nsw i64 %54, 1
  %56 = and i64 %55, 7
  %57 = icmp eq i64 %56, 0
  br i1 %57, label %70, label %58

58:                                               ; preds = %50, %58
  %59 = phi %"class.std::__1::unique_ptr.1174"* [ %62, %58 ], [ %37, %50 ]
  %60 = phi %"class.std::__1::unique_ptr.1174"* [ %63, %58 ], [ %48, %50 ]
  %61 = phi i64 [ %68, %58 ], [ %56, %50 ]
  %62 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %59, i64 -1
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = bitcast %"class.std::__1::unique_ptr.1174"* %63 to i64*
  %66 = load i64, i64* %65, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %64, align 8
  %67 = bitcast %"class.std::__1::unique_ptr.1174"* %62 to i64*
  store i64 %66, i64* %67, align 8
  %68 = add i64 %61, -1
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %70, label %58, !llvm.loop !219

70:                                               ; preds = %58, %50
  %71 = phi %"class.std::__1::unique_ptr.1174"* [ undef, %50 ], [ %62, %58 ]
  %72 = phi %"class.std::__1::unique_ptr.1174"* [ %37, %50 ], [ %62, %58 ]
  %73 = phi %"class.std::__1::unique_ptr.1174"* [ %48, %50 ], [ %63, %58 ]
  %74 = icmp ult i64 %53, 56
  br i1 %74, label %127, label %75

75:                                               ; preds = %70, %75
  %76 = phi %"class.std::__1::unique_ptr.1174"* [ %120, %75 ], [ %72, %70 ]
  %77 = phi %"class.std::__1::unique_ptr.1174"* [ %121, %75 ], [ %73, %70 ]
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -1
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %79, i64 0, i32 0, i32 0, i32 0
  %81 = bitcast %"class.std::__1::unique_ptr.1174"* %79 to i64*
  %82 = load i64, i64* %81, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %80, align 8
  %83 = bitcast %"class.std::__1::unique_ptr.1174"* %78 to i64*
  store i64 %82, i64* %83, align 8
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -2
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %85, i64 0, i32 0, i32 0, i32 0
  %87 = bitcast %"class.std::__1::unique_ptr.1174"* %85 to i64*
  %88 = load i64, i64* %87, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %86, align 8
  %89 = bitcast %"class.std::__1::unique_ptr.1174"* %84 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -3
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.1174"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %92, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.1174"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -4
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %97, i64 0, i32 0, i32 0, i32 0
  %99 = bitcast %"class.std::__1::unique_ptr.1174"* %97 to i64*
  %100 = load i64, i64* %99, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %98, align 8
  %101 = bitcast %"class.std::__1::unique_ptr.1174"* %96 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -5
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %103, i64 0, i32 0, i32 0, i32 0
  %105 = bitcast %"class.std::__1::unique_ptr.1174"* %103 to i64*
  %106 = load i64, i64* %105, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %104, align 8
  %107 = bitcast %"class.std::__1::unique_ptr.1174"* %102 to i64*
  store i64 %106, i64* %107, align 8
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -6
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %109, i64 0, i32 0, i32 0, i32 0
  %111 = bitcast %"class.std::__1::unique_ptr.1174"* %109 to i64*
  %112 = load i64, i64* %111, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %110, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.1174"* %108 to i64*
  store i64 %112, i64* %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -7
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %115, i64 0, i32 0, i32 0, i32 0
  %117 = bitcast %"class.std::__1::unique_ptr.1174"* %115 to i64*
  %118 = load i64, i64* %117, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %116, align 8
  %119 = bitcast %"class.std::__1::unique_ptr.1174"* %114 to i64*
  store i64 %118, i64* %119, align 8
  %120 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %76, i64 -8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %121, i64 0, i32 0, i32 0, i32 0
  %123 = bitcast %"class.std::__1::unique_ptr.1174"* %121 to i64*
  %124 = load i64, i64* %123, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %122, align 8
  %125 = bitcast %"class.std::__1::unique_ptr.1174"* %120 to i64*
  store i64 %124, i64* %125, align 8
  %126 = icmp eq %"class.std::__1::unique_ptr.1174"* %121, %46
  br i1 %126, label %127, label %75

127:                                              ; preds = %75, %70
  %128 = phi %"class.std::__1::unique_ptr.1174"* [ %71, %70 ], [ %120, %75 ]
  %129 = load i64, i64* %6, align 8
  %130 = load %"class.std::__1::unique_ptr.1174"*, %"class.std::__1::unique_ptr.1174"** %3, align 8
  br label %131

131:                                              ; preds = %34, %127
  %132 = phi %"class.std::__1::unique_ptr.1174"* [ %130, %127 ], [ %46, %34 ]
  %133 = phi %"class.std::__1::unique_ptr.1174"* [ %128, %127 ], [ %37, %34 ]
  %134 = phi i64 [ %129, %127 ], [ %47, %34 ]
  %135 = ptrtoint %"class.std::__1::unique_ptr.1174"* %133 to i64
  store i64 %135, i64* %6, align 8
  store i64 %44, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %136 = inttoptr i64 %134 to %"class.std::__1::unique_ptr.1174"*
  %137 = icmp eq %"class.std::__1::unique_ptr.1174"* %132, %136
  br i1 %137, label %148, label %138

138:                                              ; preds = %131, %146
  %139 = phi %"class.std::__1::unique_ptr.1174"* [ %140, %146 ], [ %132, %131 ]
  %140 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %139, i64 -1
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.1174", %"class.std::__1::unique_ptr.1174"* %140, i64 0, i32 0, i32 0, i32 0
  %142 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %141, align 8
  store %"class.v8::internal::Scavenger"* null, %"class.v8::internal::Scavenger"** %141, align 8
  %143 = icmp eq %"class.v8::internal::Scavenger"* %142, null
  br i1 %143, label %146, label %144

144:                                              ; preds = %138
  tail call void @_ZN2v88internal9ScavengerD2Ev(%"class.v8::internal::Scavenger"* nonnull %142) #12
  %145 = bitcast %"class.v8::internal::Scavenger"* %142 to i8*
  tail call void @_ZdlPv(i8* %145) #17
  br label %146

146:                                              ; preds = %144, %138
  %147 = icmp eq %"class.std::__1::unique_ptr.1174"* %140, %136
  br i1 %147, label %148, label %138

148:                                              ; preds = %146, %131
  %149 = icmp eq i64 %134, 0
  br i1 %149, label %152, label %150

150:                                              ; preds = %148
  %151 = inttoptr i64 %134 to i8*
  tail call void @_ZdlPv(i8* %151) #17
  br label %152

152:                                              ; preds = %148, %150
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define internal zeroext i1 @"_ZNSt3__110__function16__policy_invokerIFbN2v88internal10HeapObjectEEE11__call_implINS0_20__default_alloc_funcIZNS3_18ScavengerCollector14CollectGarbageEvE3$_2S5_EEEEbPKNS0_16__policy_storageEOS4_"(%"union.std::__1::__function::__policy_storage"* nocapture readnone, %"class.v8::internal::HeapObject"* nocapture readnone dereferenceable(8)) #15 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal7SlotSet25CheckPossiblyEmptyBucketsEmPNS0_20PossiblyEmptyBucketsE(%"class.v8::internal::SlotSet"*, i64, %"class.v8::internal::PossiblyEmptyBuckets"*) local_unnamed_addr #0 comdat align 2 {
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %8, label %5

5:                                                ; preds = %3
  %6 = bitcast %"class.v8::internal::SlotSet"* %0 to %"class.v8::internal::SlotSet::Bucket"**
  %7 = getelementptr inbounds %"class.v8::internal::PossiblyEmptyBuckets", %"class.v8::internal::PossiblyEmptyBuckets"* %2, i64 0, i32 0
  br label %20

8:                                                ; preds = %56, %3
  %9 = phi i8 [ 1, %3 ], [ %57, %56 ]
  %10 = getelementptr inbounds %"class.v8::internal::PossiblyEmptyBuckets", %"class.v8::internal::PossiblyEmptyBuckets"* %2, i64 0, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = and i64 %11, 1
  %13 = icmp eq i64 %12, 0
  br i1 %13, label %17, label %14

14:                                               ; preds = %8
  %15 = and i64 %11, -2
  %16 = inttoptr i64 %15 to i8*
  tail call void @_ZN2v88internal11AlignedFreeEPv(i8* %16) #12
  br label %17

17:                                               ; preds = %8, %14
  store i64 0, i64* %10, align 8
  %18 = and i8 %9, 1
  %19 = icmp ne i8 %18, 0
  ret i1 %19

20:                                               ; preds = %56, %5
  %21 = phi i8 [ 1, %5 ], [ %57, %56 ]
  %22 = phi i64 [ 0, %5 ], [ %58, %56 ]
  %23 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %6, i64 %22
  %24 = bitcast %"class.v8::internal::SlotSet::Bucket"** %23 to i64*
  %25 = load atomic i64, i64* %24 acquire, align 8
  %26 = inttoptr i64 %25 to %"class.v8::internal::SlotSet::Bucket"*
  %27 = icmp eq i64 %25, 0
  br i1 %27, label %56, label %28

28:                                               ; preds = %20
  %29 = load i64, i64* %7, align 8
  %30 = and i64 %29, 1
  %31 = icmp eq i64 %30, 0
  br i1 %31, label %42, label %32

32:                                               ; preds = %28
  %33 = lshr i64 %22, 6
  %34 = and i64 %29, -2
  %35 = inttoptr i64 %34 to i64*
  %36 = getelementptr inbounds i64, i64* %35, i64 %33
  %37 = load i64, i64* %36, align 8
  %38 = and i64 %22, 63
  %39 = shl i64 1, %38
  %40 = and i64 %37, %39
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %56, label %49

42:                                               ; preds = %28
  %43 = add nuw i64 %22, 1
  %44 = icmp ult i64 %43, 64
  br i1 %44, label %45, label %56

45:                                               ; preds = %42
  %46 = shl i64 1, %43
  %47 = and i64 %29, %46
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %56, label %49

49:                                               ; preds = %45, %32
  %50 = tail call zeroext i1 @_ZN2v88internal7SlotSet6Bucket7IsEmptyEv(%"class.v8::internal::SlotSet::Bucket"* nonnull %26)
  br i1 %50, label %51, label %56

51:                                               ; preds = %49
  %52 = load atomic i64, i64* %24 acquire, align 8
  store atomic volatile i64 0, i64* %24 release, align 8
  %53 = icmp eq i64 %52, 0
  br i1 %53, label %56, label %54

54:                                               ; preds = %51
  %55 = inttoptr i64 %52 to i8*
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %55) #12
  br label %56

56:                                               ; preds = %45, %32, %42, %54, %51, %49, %20
  %57 = phi i8 [ %21, %20 ], [ 0, %49 ], [ 0, %45 ], [ 0, %32 ], [ %21, %51 ], [ %21, %54 ], [ 0, %42 ]
  %58 = add nuw i64 %22, 1
  %59 = icmp eq i64 %58, %1
  br i1 %59, label %8, label %20
}

declare void @_ZN2v88internal11MemoryChunk14ReleaseSlotSetILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal7SlotSet6Bucket7IsEmptyEv(%"class.v8::internal::SlotSet::Bucket"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 0
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 1
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %122, %118, %114, %110, %106, %102, %98, %94, %90, %86, %82, %78, %74, %70, %66, %62, %58, %54, %50, %46, %42, %38, %34, %30, %26, %22, %18, %14, %10, %5, %1
  ret i1 false

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 2
  %12 = load i32, i32* %11, align 4
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %14, label %9

14:                                               ; preds = %10
  %15 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 3
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %9

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 4
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %9

22:                                               ; preds = %18
  %23 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 5
  %24 = load i32, i32* %23, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %26, label %9

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 6
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %9

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 7
  %32 = load i32, i32* %31, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %9

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 8
  %36 = load i32, i32* %35, align 4
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %9

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 9
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %9

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 10
  %44 = load i32, i32* %43, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %9

46:                                               ; preds = %42
  %47 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 11
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %9

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 12
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %9

54:                                               ; preds = %50
  %55 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 13
  %56 = load i32, i32* %55, align 4
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %9

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 14
  %60 = load i32, i32* %59, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %9

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 15
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %9

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 16
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %9

70:                                               ; preds = %66
  %71 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 17
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %9

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 18
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %9

78:                                               ; preds = %74
  %79 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 19
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %9

82:                                               ; preds = %78
  %83 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 20
  %84 = load i32, i32* %83, align 4
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %9

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 21
  %88 = load i32, i32* %87, align 4
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %9

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 22
  %92 = load i32, i32* %91, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %9

94:                                               ; preds = %90
  %95 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 23
  %96 = load i32, i32* %95, align 4
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %9

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 24
  %100 = load i32, i32* %99, align 4
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %9

102:                                              ; preds = %98
  %103 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 25
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %106, label %9

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 26
  %108 = load i32, i32* %107, align 4
  %109 = icmp eq i32 %108, 0
  br i1 %109, label %110, label %9

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 27
  %112 = load i32, i32* %111, align 4
  %113 = icmp eq i32 %112, 0
  br i1 %113, label %114, label %9

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 28
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %9

118:                                              ; preds = %114
  %119 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 29
  %120 = load i32, i32* %119, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %9

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 30
  %124 = load i32, i32* %123, align 4
  %125 = icmp eq i32 %124, 0
  br i1 %125, label %126, label %9

126:                                              ; preds = %122
  %127 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %0, i64 0, i32 0, i64 31
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 0
  ret i1 %129
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JRNS_4pairIS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"*, %"class.v8::internal::HeapObject"* dereferenceable(8), %"struct.std::__1::pair.1245"* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967295
  %7 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %72, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !207
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  %29 = trunc i64 %5 to i32
  br i1 %12, label %30, label %53

30:                                               ; preds = %27, %47
  %31 = phi %"struct.std::__1::__hash_node_base.1153"* [ %33, %47 ], [ %25, %27 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %33, null
  br i1 %34, label %72, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base.1153"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %6
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %8
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %47, label %72

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base.1153"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %51, %29
  br i1 %52, label %160, label %30

53:                                               ; preds = %27, %66
  %54 = phi %"struct.std::__1::__hash_node_base.1153"* [ %56, %66 ], [ %25, %27 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base.1153"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %6
  %63 = and i64 %61, %28
  %64 = icmp eq i64 %63, %21
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %56, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base.1153"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %70, %29
  br i1 %71, label %160, label %53

72:                                               ; preds = %58, %53, %44, %30, %20, %3
  %73 = phi i64 [ %21, %20 ], [ undef, %3 ], [ %21, %30 ], [ %21, %44 ], [ %21, %53 ], [ %21, %58 ]
  %74 = tail call i8* @_Znwm(i64 32) #17, !noalias !220
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = bitcast %"struct.std::__1::pair.1245"* %2 to <2 x i64>*
  %77 = load <2 x i64>, <2 x i64>* %76, align 8, !noalias !220
  %78 = bitcast i8* %75 to <2 x i64>*
  store <2 x i64> %77, <2 x i64>* %78, align 8, !noalias !220
  %79 = getelementptr inbounds i8, i8* %74, i64 8
  %80 = bitcast i8* %79 to i64*
  store i64 %6, i64* %80, align 8, !noalias !220
  %81 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1153"**
  store %"struct.std::__1::__hash_node_base.1153"* null, %"struct.std::__1::__hash_node_base.1153"** %81, align 8, !noalias !220
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 2, i32 0, i32 0
  %83 = load i64, i64* %82, align 8
  %84 = add i64 %83, 1
  %85 = uitofp i64 %84 to float
  %86 = uitofp i64 %8 to float
  %87 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 3, i32 0, i32 0
  %88 = load float, float* %87, align 4
  %89 = fmul float %88, %86
  %90 = fcmp olt float %89, %85
  %91 = or i1 %9, %90
  br i1 %91, label %92, label %115

92:                                               ; preds = %72
  %93 = shl i64 %8, 1
  %94 = icmp ult i64 %8, 3
  %95 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !207
  %96 = icmp ugt i64 %95, 1
  %97 = or i1 %94, %96
  %98 = zext i1 %97 to i64
  %99 = or i64 %93, %98
  %100 = fdiv float %85, %88
  %101 = tail call float @llvm.ceil.f32(float %100) #12
  %102 = fptoui float %101 to i64
  %103 = icmp ult i64 %99, %102
  %104 = select i1 %103, i64 %102, i64 %99
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE6rehashEm(%"class.std::__1::__hash_table.1149"* %0, i64 %104)
  %105 = load i64, i64* %7, align 8
  %106 = tail call i64 @llvm.ctpop.i64(i64 %105) #12, !range !207
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %92
  %109 = add i64 %105, 4294967295
  %110 = and i64 %109, %6
  br label %115

111:                                              ; preds = %92
  %112 = icmp ult i64 %6, %105
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %6, %105
  br label %115

115:                                              ; preds = %113, %111, %108, %72
  %116 = phi i64 [ %8, %72 ], [ %105, %108 ], [ %105, %111 ], [ %105, %113 ]
  %117 = phi i64 [ %73, %72 ], [ %110, %108 ], [ %6, %111 ], [ %114, %113 ]
  %118 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %119, i64 %117
  %121 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %120, align 8
  %122 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %121, null
  br i1 %122, label %123, label %149

123:                                              ; preds = %115
  %124 = getelementptr inbounds %"class.std::__1::__hash_table.1149", %"class.std::__1::__hash_table.1149"* %0, i64 0, i32 1, i32 0, i32 0
  %125 = bitcast %"struct.std::__1::__hash_node_base.1153"* %124 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast i8* %74 to i64*
  store i64 %126, i64* %127, align 8
  %128 = bitcast %"struct.std::__1::__hash_node_base.1153"* %124 to i8**
  store i8* %74, i8** %128, align 8
  store %"struct.std::__1::__hash_node_base.1153"* %124, %"struct.std::__1::__hash_node_base.1153"** %120, align 8
  %129 = load %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %81, align 8
  %130 = icmp eq %"struct.std::__1::__hash_node_base.1153"* %129, null
  br i1 %130, label %156, label %131

131:                                              ; preds = %123
  %132 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153", %"struct.std::__1::__hash_node_base.1153"* %129, i64 1
  %133 = bitcast %"struct.std::__1::__hash_node_base.1153"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = tail call i64 @llvm.ctpop.i64(i64 %116) #12, !range !207
  %136 = icmp ugt i64 %135, 1
  br i1 %136, label %140, label %137

137:                                              ; preds = %131
  %138 = add i64 %116, -1
  %139 = and i64 %134, %138
  br label %144

140:                                              ; preds = %131
  %141 = icmp ult i64 %134, %116
  br i1 %141, label %144, label %142

142:                                              ; preds = %140
  %143 = urem i64 %134, %116
  br label %144

144:                                              ; preds = %137, %140, %142
  %145 = phi i64 [ %139, %137 ], [ %143, %142 ], [ %134, %140 ]
  %146 = load %"struct.std::__1::__hash_node_base.1153"**, %"struct.std::__1::__hash_node_base.1153"*** %118, align 8
  %147 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1153"*, %"struct.std::__1::__hash_node_base.1153"** %146, i64 %145
  %148 = bitcast %"struct.std::__1::__hash_node_base.1153"** %147 to i8**
  br label %154

149:                                              ; preds = %115
  %150 = bitcast %"struct.std::__1::__hash_node_base.1153"* %121 to i64*
  %151 = load i64, i64* %150, align 8
  %152 = bitcast i8* %74 to i64*
  store i64 %151, i64* %152, align 8
  %153 = bitcast %"struct.std::__1::__hash_node_base.1153"* %121 to i8**
  br label %154

154:                                              ; preds = %144, %149
  %155 = phi i8** [ %153, %149 ], [ %148, %144 ]
  store i8* %74, i8** %155, align 8
  br label %156

156:                                              ; preds = %154, %123
  %157 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base.1153"*
  %158 = load i64, i64* %82, align 8
  %159 = add i64 %158, 1
  store i64 %159, i64* %82, align 8
  br label %160

160:                                              ; preds = %66, %47, %156
  %161 = phi i8 [ 1, %156 ], [ 0, %47 ], [ 0, %66 ]
  %162 = phi %"struct.std::__1::__hash_node_base.1153"* [ %157, %156 ], [ %33, %47 ], [ %56, %66 ]
  %163 = insertvalue { %"struct.std::__1::__hash_node_base.1153"*, i8 } undef, %"struct.std::__1::__hash_node_base.1153"* %162, 0
  %164 = insertvalue { %"struct.std::__1::__hash_node_base.1153"*, i8 } %163, i8 %161, 1
  ret { %"struct.std::__1::__hash_node_base.1153"*, i8 } %164
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal19BodyDescriptorApplyINS0_15CallIterateBodyEvNS0_3MapENS0_10HeapObjectEiPNS0_40IterateAndScavengePromotedObjectsVisitorEEET0_NS0_12InstanceTypeET1_T2_T3_T4_(i16 zeroext, i64, i64, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.v8::internal::RelocIterator", align 8
  %7 = zext i16 %0 to i32
  %8 = icmp ult i16 %0, 64
  br i1 %8, label %9, label %15

9:                                                ; preds = %5
  %10 = and i32 %7, 7
  switch i32 %10, label %14 [
    i32 0, label %441
    i32 1, label %11
    i32 5, label %12
    i32 3, label %13
    i32 2, label %441
  ]

11:                                               ; preds = %9
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

12:                                               ; preds = %9
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

13:                                               ; preds = %9
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

14:                                               ; preds = %9
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

15:                                               ; preds = %5
  switch i16 %0, label %440 [
    i16 165, label %16
    i16 130, label %32
    i16 129, label %32
    i16 120, label %32
    i16 125, label %32
    i16 126, label %32
    i16 127, label %32
    i16 123, label %32
    i16 122, label %32
    i16 124, label %32
    i16 128, label %32
    i16 131, label %32
    i16 121, label %33
    i16 137, label %48
    i16 138, label %48
    i16 139, label %48
    i16 140, label %48
    i16 141, label %48
    i16 142, label %48
    i16 143, label %48
    i16 145, label %48
    i16 146, label %48
    i16 144, label %49
    i16 134, label %441
    i16 166, label %441
    i16 176, label %57
    i16 160, label %58
    i16 102, label %59
    i16 164, label %441
    i16 186, label %60
    i16 72, label %84
    i16 73, label %85
    i16 74, label %86
    i16 187, label %87
    i16 75, label %145
    i16 1056, label %157
    i16 1055, label %157
    i16 1042, label %157
    i16 1087, label %157
    i16 1085, label %157
    i16 1088, label %157
    i16 1053, label %157
    i16 1054, label %157
    i16 1058, label %157
    i16 1090, label %157
    i16 1091, label %157
    i16 1094, label %157
    i16 1095, label %157
    i16 1052, label %157
    i16 189, label %157
    i16 190, label %157
    i16 1043, label %157
    i16 1044, label %157
    i16 1074, label %157
    i16 1075, label %157
    i16 1081, label %157
    i16 1076, label %157
    i16 1098, label %157
    i16 191, label %157
    i16 1045, label %157
    i16 1057, label %157
    i16 1041, label %157
    i16 1046, label %157
    i16 1101, label %157
    i16 1047, label %157
    i16 1103, label %157
    i16 1102, label %157
    i16 1048, label %157
    i16 1077, label %157
    i16 1049, label %157
    i16 1082, label %157
    i16 1078, label %157
    i16 1040, label %157
    i16 1050, label %157
    i16 1108, label %157
    i16 1051, label %157
    i16 1109, label %157
    i16 1089, label %157
    i16 1092, label %157
    i16 1093, label %157
    i16 1096, label %157
    i16 1097, label %157
    i16 1099, label %157
    i16 1100, label %157
    i16 1104, label %157
    i16 1105, label %157
    i16 1106, label %157
    i16 1107, label %157
    i16 1111, label %157
    i16 1112, label %157
    i16 1114, label %157
    i16 1115, label %157
    i16 1116, label %157
    i16 1117, label %157
    i16 1113, label %193
    i16 1083, label %194
    i16 1084, label %194
    i16 1086, label %230
    i16 1079, label %231
    i16 1080, label %232
    i16 1059, label %233
    i16 1072, label %233
    i16 1073, label %233
    i16 1071, label %233
    i16 1070, label %233
    i16 1066, label %233
    i16 1067, label %233
    i16 1064, label %233
    i16 1068, label %233
    i16 1065, label %233
    i16 1062, label %233
    i16 1063, label %233
    i16 1069, label %233
    i16 1061, label %233
    i16 1060, label %233
    i16 185, label %269
    i16 1110, label %281
    i16 188, label %282
    i16 70, label %441
    i16 172, label %283
    i16 162, label %291
    i16 161, label %294
    i16 177, label %295
    i16 64, label %296
    i16 133, label %297
    i16 151, label %313
    i16 150, label %320
    i16 152, label %327
    i16 183, label %334
    i16 163, label %340
    i16 175, label %348
    i16 66, label %441
    i16 168, label %441
    i16 132, label %441
    i16 169, label %441
    i16 65, label %441
    i16 90, label %359
    i16 76, label %369
    i16 77, label %369
    i16 78, label %369
    i16 79, label %369
    i16 80, label %369
    i16 83, label %369
    i16 84, label %369
    i16 85, label %369
    i16 86, label %369
    i16 87, label %369
    i16 88, label %369
    i16 89, label %369
    i16 91, label %369
    i16 92, label %369
    i16 93, label %369
    i16 94, label %369
    i16 95, label %369
    i16 96, label %369
    i16 97, label %369
    i16 99, label %369
    i16 100, label %369
    i16 101, label %369
    i16 103, label %369
    i16 104, label %369
    i16 105, label %369
    i16 106, label %369
    i16 107, label %369
    i16 108, label %369
    i16 109, label %369
    i16 110, label %369
    i16 111, label %369
    i16 112, label %369
    i16 113, label %369
    i16 114, label %369
    i16 115, label %369
    i16 116, label %369
    i16 117, label %369
    i16 118, label %369
    i16 98, label %380
    i16 81, label %381
    i16 82, label %381
    i16 155, label %382
    i16 156, label %383
    i16 67, label %384
    i16 119, label %385
    i16 159, label %386
    i16 136, label %387
    i16 178, label %388
    i16 153, label %389
    i16 154, label %390
    i16 167, label %391
    i16 184, label %392
    i16 173, label %393
    i16 179, label %394
    i16 158, label %402
    i16 157, label %403
    i16 174, label %416
    i16 170, label %417
    i16 181, label %418
    i16 180, label %419
    i16 147, label %420
    i16 148, label %421
    i16 68, label %441
    i16 69, label %441
    i16 135, label %429
    i16 171, label %430
    i16 149, label %431
    i16 182, label %439
  ]

16:                                               ; preds = %15
  %17 = icmp sgt i32 %3, 8
  br i1 %17, label %18, label %441

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %20 = add i64 %2, -1
  %21 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  br label %22

22:                                               ; preds = %22, %18
  %23 = phi i64 [ 8, %18 ], [ %29, %22 ]
  %24 = add i64 %20, %23
  %25 = add i64 %24, 4
  %26 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %21, align 8
  %27 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %26, i64 2
  %28 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %27, align 8
  tail call void %28(%"class.v8::internal::ObjectVisitor"* %19, i64 %2, i64 %24, i64 %25) #12
  %29 = add nuw i64 %23, 8
  %30 = trunc i64 %29 to i32
  %31 = icmp slt i32 %30, %3
  br i1 %31, label %22, label %441

32:                                               ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

33:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 8, i32 20, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %34 = add i64 %2, 15
  %35 = inttoptr i64 %34 to i32*
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = ashr i32 %36, 1
  %38 = sext i32 %37 to i64
  %39 = icmp eq i32 %37, 0
  br i1 %39, label %441, label %40

40:                                               ; preds = %33, %40
  %41 = phi i64 [ %46, %40 ], [ 0, %33 ]
  %42 = trunc i64 %41 to i32
  %43 = shl i32 %42, 3
  %44 = add i32 %43, 20
  %45 = add i32 %43, 24
  tail call void @_ZN2v88internal18BodyDescriptorBase16IterateEphemeronINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiiPT_(i64 %2, i32 %42, i32 %44, i32 %45, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %46 = add i64 %41, 1
  %47 = icmp eq i64 %46, %38
  br i1 %47, label %441, label %40

48:                                               ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

49:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 1016, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %50 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %51 = add i64 %2, 1015
  %52 = add i64 %2, 1027
  %53 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %54 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %54, i64 2
  %56 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %55, align 8
  tail call void %56(%"class.v8::internal::ObjectVisitor"* %50, i64 %2, i64 %51, i64 %52) #12
  br label %441

57:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 8, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

58:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

59:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 8, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

60:                                               ; preds = %15
  %61 = and i64 %1, -4294967296
  %62 = add i64 %1, 19
  %63 = inttoptr i64 %62 to i32*
  %64 = load i32, i32* %63, align 4
  %65 = zext i32 %64 to i64
  %66 = or i64 %61, %65
  %67 = add i64 %66, -1
  %68 = inttoptr i64 %67 to i32*
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = zext i32 %69 to i64
  %71 = or i64 %61, %70
  %72 = and i64 %70, 3
  %73 = icmp eq i64 %72, 0
  %74 = add i64 %71, 1
  %75 = select i1 %73, i64 %74, i64 %66
  %76 = add i64 %75, 3
  %77 = inttoptr i64 %76 to %"class.v8::internal::wasm::ArrayType"**
  %78 = load %"class.v8::internal::wasm::ArrayType"*, %"class.v8::internal::wasm::ArrayType"** %77, align 1
  %79 = getelementptr inbounds %"class.v8::internal::wasm::ArrayType", %"class.v8::internal::wasm::ArrayType"* %78, i64 0, i32 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = and i32 %80, 28
  %82 = icmp eq i32 %81, 8
  br i1 %82, label %83, label %441

83:                                               ; preds = %60
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

84:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 28, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

85:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 44, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

86:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 36, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

87:                                               ; preds = %15
  %88 = and i64 %1, -4294967296
  %89 = add i64 %1, 19
  %90 = inttoptr i64 %89 to i32*
  %91 = load i32, i32* %90, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %88, %92
  %94 = add i64 %93, -1
  %95 = inttoptr i64 %94 to i32*
  %96 = load atomic i32, i32* %95 monotonic, align 4
  %97 = zext i32 %96 to i64
  %98 = or i64 %88, %97
  %99 = and i64 %97, 3
  %100 = icmp eq i64 %99, 0
  %101 = add i64 %98, 1
  %102 = select i1 %100, i64 %101, i64 %93
  %103 = add i64 %102, 3
  %104 = inttoptr i64 %103 to %"class.v8::internal::wasm::StructType"**
  %105 = load %"class.v8::internal::wasm::StructType"*, %"class.v8::internal::wasm::StructType"** %104, align 1
  %106 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %105, i64 0, i32 0
  %107 = load i32, i32* %106, align 8
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %441, label %109

109:                                              ; preds = %87
  %110 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %105, i64 0, i32 2
  %111 = getelementptr inbounds %"class.v8::internal::wasm::StructType", %"class.v8::internal::wasm::StructType"* %105, i64 0, i32 1
  %112 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %113 = add i64 %2, 7
  %114 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  br label %115

115:                                              ; preds = %140, %109
  %116 = phi i32 [ %107, %109 ], [ %141, %140 ]
  %117 = phi i64 [ 0, %109 ], [ %142, %140 ]
  %118 = load %"class.v8::internal::wasm::ValueType"*, %"class.v8::internal::wasm::ValueType"** %110, align 8
  %119 = getelementptr inbounds %"class.v8::internal::wasm::ValueType", %"class.v8::internal::wasm::ValueType"* %118, i64 %117, i32 0
  %120 = load i32, i32* %119, align 4
  %121 = and i32 %120, 28
  %122 = icmp eq i32 %121, 8
  br i1 %122, label %123, label %140

123:                                              ; preds = %115
  %124 = icmp eq i64 %117, 0
  br i1 %124, label %131, label %125

125:                                              ; preds = %123
  %126 = load i32*, i32** %111, align 8
  %127 = add nuw nsw i64 %117, 4294967295
  %128 = and i64 %127, 4294967295
  %129 = getelementptr inbounds i32, i32* %126, i64 %128
  %130 = load i32, i32* %129, align 4
  br label %131

131:                                              ; preds = %125, %123
  %132 = phi i32 [ %130, %125 ], [ 0, %123 ]
  %133 = sext i32 %132 to i64
  %134 = add i64 %113, %133
  %135 = add i64 %134, 4
  %136 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %114, align 8
  %137 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %136, i64 2
  %138 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %137, align 8
  tail call void %138(%"class.v8::internal::ObjectVisitor"* %112, i64 %2, i64 %134, i64 %135) #12
  %139 = load i32, i32* %106, align 8
  br label %140

140:                                              ; preds = %131, %115
  %141 = phi i32 [ %116, %115 ], [ %139, %131 ]
  %142 = add nuw nsw i64 %117, 1
  %143 = zext i32 %141 to i64
  %144 = icmp ult i64 %142, %143
  br i1 %144, label %115, label %441

145:                                              ; preds = %15
  %146 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %147 = add i64 %2, 11
  %148 = add i64 %2, 15
  %149 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %150 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %149, align 8
  %151 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %150, i64 2
  %152 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %151, align 8
  tail call void %152(%"class.v8::internal::ObjectVisitor"* %146, i64 %2, i64 %147, i64 %148) #12
  %153 = add i64 %2, 19
  %154 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %149, align 8
  %155 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %154, i64 2
  %156 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %155, align 8
  tail call void %156(%"class.v8::internal::ObjectVisitor"* %146, i64 %2, i64 %148, i64 %153) #12
  br label %441

157:                                              ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15
  %158 = add i64 %1, 7
  %159 = inttoptr i64 %158 to i16*
  %160 = load atomic i16, i16* %159 monotonic, align 2
  %161 = icmp eq i16 %160, 1057
  br i1 %161, label %168, label %162

162:                                              ; preds = %157
  %163 = add i64 %1, 9
  %164 = inttoptr i64 %163 to i8*
  %165 = load atomic i8, i8* %164 monotonic, align 1
  %166 = icmp slt i8 %165, 0
  %167 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %160, i1 zeroext %166) #12
  br label %168

168:                                              ; preds = %162, %157
  %169 = phi i32 [ %167, %162 ], [ 12, %157 ]
  %170 = add i64 %1, 4
  %171 = inttoptr i64 %170 to i8*
  %172 = load atomic i8, i8* %171 monotonic, align 1
  %173 = zext i8 %172 to i32
  %174 = shl nuw nsw i32 %173, 2
  %175 = icmp slt i32 %169, %174
  br i1 %175, label %176, label %191

176:                                              ; preds = %168
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %169, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %177 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %178 = add i64 %2, -1
  %179 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %180 = sext i32 %169 to i64
  %181 = zext i32 %174 to i64
  br label %182

182:                                              ; preds = %182, %176
  %183 = phi i64 [ %180, %176 ], [ %189, %182 ]
  %184 = add i64 %178, %183
  %185 = add i64 %184, 4
  %186 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %179, align 8
  %187 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %186, i64 2
  %188 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %187, align 8
  tail call void %188(%"class.v8::internal::ObjectVisitor"* %177, i64 %2, i64 %184, i64 %185) #12
  %189 = add nsw i64 %183, 8
  %190 = icmp slt i64 %189, %181
  br i1 %190, label %182, label %191

191:                                              ; preds = %182, %168
  %192 = phi i32 [ 4, %168 ], [ %174, %182 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 %192, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

193:                                              ; preds = %15
  tail call void @_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

194:                                              ; preds = %15, %15
  %195 = add i64 %1, 7
  %196 = inttoptr i64 %195 to i16*
  %197 = load atomic i16, i16* %196 monotonic, align 2
  %198 = icmp eq i16 %197, 1057
  br i1 %198, label %205, label %199

199:                                              ; preds = %194
  %200 = add i64 %1, 9
  %201 = inttoptr i64 %200 to i8*
  %202 = load atomic i8, i8* %201 monotonic, align 1
  %203 = icmp slt i8 %202, 0
  %204 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %197, i1 zeroext %203) #12
  br label %205

205:                                              ; preds = %199, %194
  %206 = phi i32 [ %204, %199 ], [ 12, %194 ]
  %207 = add i64 %1, 4
  %208 = inttoptr i64 %207 to i8*
  %209 = load atomic i8, i8* %208 monotonic, align 1
  %210 = zext i8 %209 to i32
  %211 = shl nuw nsw i32 %210, 2
  %212 = icmp slt i32 %206, %211
  br i1 %212, label %213, label %228

213:                                              ; preds = %205
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %206, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %214 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %215 = add i64 %2, -1
  %216 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %217 = sext i32 %206 to i64
  %218 = zext i32 %211 to i64
  br label %219

219:                                              ; preds = %219, %213
  %220 = phi i64 [ %217, %213 ], [ %226, %219 ]
  %221 = add i64 %215, %220
  %222 = add i64 %221, 4
  %223 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %216, align 8
  %224 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %223, i64 2
  %225 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %224, align 8
  tail call void %225(%"class.v8::internal::ObjectVisitor"* %214, i64 %2, i64 %221, i64 %222) #12
  %226 = add nsw i64 %220, 8
  %227 = icmp slt i64 %226, %218
  br i1 %227, label %219, label %228

228:                                              ; preds = %219, %205
  %229 = phi i32 [ 4, %205 ], [ %211, %219 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 %229, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

230:                                              ; preds = %15
  tail call void @_ZN2v88internal15CallIterateBody5applyINS0_13JSArrayBuffer14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4)
  br label %441

231:                                              ; preds = %15
  tail call void @_ZN2v88internal15CallIterateBody5applyINS0_10JSDataView14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4)
  br label %441

232:                                              ; preds = %15
  tail call void @_ZN2v88internal15CallIterateBody5applyINS0_12JSTypedArray14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4)
  br label %441

233:                                              ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15
  %234 = add i64 %1, 7
  %235 = inttoptr i64 %234 to i16*
  %236 = load atomic i16, i16* %235 monotonic, align 2
  %237 = icmp eq i16 %236, 1057
  br i1 %237, label %244, label %238

238:                                              ; preds = %233
  %239 = add i64 %1, 9
  %240 = inttoptr i64 %239 to i8*
  %241 = load atomic i8, i8* %240 monotonic, align 1
  %242 = icmp slt i8 %241, 0
  %243 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %236, i1 zeroext %242) #12
  br label %244

244:                                              ; preds = %238, %233
  %245 = phi i32 [ %243, %238 ], [ 12, %233 ]
  %246 = add i64 %1, 4
  %247 = inttoptr i64 %246 to i8*
  %248 = load atomic i8, i8* %247 monotonic, align 1
  %249 = zext i8 %248 to i32
  %250 = shl nuw nsw i32 %249, 2
  %251 = icmp slt i32 %245, %250
  br i1 %251, label %252, label %267

252:                                              ; preds = %244
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %245, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %253 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %254 = add i64 %2, -1
  %255 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %256 = sext i32 %245 to i64
  %257 = zext i32 %250 to i64
  br label %258

258:                                              ; preds = %258, %252
  %259 = phi i64 [ %256, %252 ], [ %265, %258 ]
  %260 = add i64 %254, %259
  %261 = add i64 %260, 4
  %262 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %255, align 8
  %263 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %262, i64 2
  %264 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %263, align 8
  tail call void %264(%"class.v8::internal::ObjectVisitor"* %253, i64 %2, i64 %260, i64 %261) #12
  %265 = add nsw i64 %259, 8
  %266 = icmp slt i64 %265, %257
  br i1 %266, label %258, label %267

267:                                              ; preds = %258, %244
  %268 = phi i32 [ 4, %244 ], [ %250, %258 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 %268, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

269:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 8, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %270 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %271 = add i64 %2, 7
  %272 = add i64 %2, 11
  %273 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %274 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %273, align 8
  %275 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %274, i64 4
  %276 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %275, align 8
  tail call void %276(%"class.v8::internal::ObjectVisitor"* %270, i64 %2, i64 %271, i64 %272) #12
  %277 = add i64 %2, 15
  %278 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %273, align 8
  %279 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %278, i64 4
  %280 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %279, align 8
  tail call void %280(%"class.v8::internal::ObjectVisitor"* %270, i64 %2, i64 %272, i64 %277) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 16, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

281:                                              ; preds = %15
  tail call void @_ZN2v88internal15CallIterateBody5applyINS0_9JSWeakRef14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64 %1, i64 %2, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4)
  br label %441

282:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 16, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

283:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 16, i32 36, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %284 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %285 = add i64 %2, 35
  %286 = add i64 %2, 39
  %287 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %288 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %287, align 8
  %289 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %288, i64 3
  %290 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %289, align 8
  tail call void %290(%"class.v8::internal::ObjectVisitor"* %284, i64 %2, i64 %285, i64 %286) #12
  br label %441

291:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 20, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %292 = bitcast %"class.v8::internal::RelocIterator"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 64, i8* nonnull %292) #12
  call void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"* nonnull %6, i64 %2, i32 7998) #12
  %293 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  call void @_ZN2v88internal13ObjectVisitor14VisitRelocInfoEPNS0_13RelocIteratorE(%"class.v8::internal::ObjectVisitor"* %293, %"class.v8::internal::RelocIterator"* nonnull %6) #12
  call void @llvm.lifetime.end.p0i8(i64 64, i8* nonnull %292) #12
  br label %441

294:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 8, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

295:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 20, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

296:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 16, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

297:                                              ; preds = %15
  %298 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %299 = add i64 %2, 7
  %300 = add i64 %2, 11
  %301 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %302 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %301, align 8
  %303 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %302, i64 2
  %304 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %303, align 8
  tail call void %304(%"class.v8::internal::ObjectVisitor"* %298, i64 %2, i64 %299, i64 %300) #12
  %305 = add i64 %2, 15
  %306 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %301, align 8
  %307 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %306, i64 2
  %308 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %307, align 8
  tail call void %308(%"class.v8::internal::ObjectVisitor"* %298, i64 %2, i64 %300, i64 %305) #12
  %309 = add i64 %2, 19
  %310 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %301, align 8
  %311 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %310, i64 2
  %312 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %311, align 8
  tail call void %312(%"class.v8::internal::ObjectVisitor"* %298, i64 %2, i64 %305, i64 %309) #12
  br label %441

313:                                              ; preds = %15
  %314 = add i64 %2, 5
  %315 = inttoptr i64 %314 to i8*
  %316 = load i8, i8* %315, align 1
  %317 = zext i8 %316 to i32
  %318 = shl nuw nsw i32 %317, 3
  %319 = add nuw nsw i32 %318, 8
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 8, i32 %319, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

320:                                              ; preds = %15
  %321 = add i64 %2, 5
  %322 = inttoptr i64 %321 to i8*
  %323 = load i8, i8* %322, align 1
  %324 = zext i8 %323 to i32
  %325 = shl nuw nsw i32 %324, 4
  %326 = or i32 %325, 8
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 8, i32 %326, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

327:                                              ; preds = %15
  %328 = add i64 %2, 9
  %329 = inttoptr i64 %328 to i8*
  %330 = load i8, i8* %329, align 1
  %331 = zext i8 %330 to i32
  %332 = mul nuw nsw i32 %331, 24
  %333 = add nuw nsw i32 %332, 12
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %333, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

334:                                              ; preds = %15
  %335 = add i64 %2, 7
  %336 = inttoptr i64 %335 to i32*
  %337 = load i32, i32* %336, align 4
  %338 = shl i32 %337, 3
  %339 = add nsw i32 %338, 16
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %339, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

340:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 4, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %341 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %342 = add i64 %2, 3
  %343 = add i64 %2, 7
  %344 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %345 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %344, align 8
  %346 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %345, i64 2
  %347 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %346, align 8
  tail call void %347(%"class.v8::internal::ObjectVisitor"* %341, i64 %2, i64 %342, i64 %343) #12
  br label %441

348:                                              ; preds = %15
  %349 = add i64 %2, 3
  %350 = inttoptr i64 %349 to i32*
  %351 = load i32, i32* %350, align 4
  %352 = add i32 %351, 15
  %353 = and i32 %352, -4
  %354 = add i64 %2, 7
  %355 = inttoptr i64 %354 to i32*
  %356 = load i32, i32* %355, align 4
  %357 = shl i32 %356, 2
  %358 = add nsw i32 %353, %357
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 %353, i32 %358, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

359:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 16, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %360 = icmp eq i32 %3, 28
  br i1 %360, label %361, label %441

361:                                              ; preds = %359
  %362 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %363 = add i64 %2, 23
  %364 = add i64 %2, 27
  %365 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %366 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %365, align 8
  %367 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %366, i64 2
  %368 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %367, align 8
  tail call void %368(%"class.v8::internal::ObjectVisitor"* %362, i64 %2, i64 %363, i64 %364) #12
  br label %441

369:                                              ; preds = %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15, %15
  switch i16 %0, label %379 [
    i16 110, label %370
    i16 118, label %378
  ]

370:                                              ; preds = %369
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 20, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %371 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %372 = add i64 %2, 19
  %373 = add i64 %2, 23
  %374 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %375 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %374, align 8
  %376 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %375, i64 3
  %377 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %376, align 8
  tail call void %377(%"class.v8::internal::ObjectVisitor"* %371, i64 %2, i64 %372, i64 %373) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 24, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

378:                                              ; preds = %369
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 24, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

379:                                              ; preds = %369
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

380:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

381:                                              ; preds = %15, %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 12, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

382:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 28, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 28, i32 72, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

383:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 28, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 28, i32 40, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

384:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

385:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

386:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

387:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

388:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

389:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

390:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

391:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 20, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

392:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

393:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

394:                                              ; preds = %15
  %395 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %396 = add i64 %2, 3
  %397 = add i64 %2, 7
  %398 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %399 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %398, align 8
  %400 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %399, i64 4
  %401 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %400, align 8
  tail call void %401(%"class.v8::internal::ObjectVisitor"* %395, i64 %2, i64 %396, i64 %397) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 8, i32 20, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

402:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 8, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

403:                                              ; preds = %15
  %404 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %405 = add i64 %2, 3
  %406 = add i64 %2, 7
  %407 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %408 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %407, align 8
  %409 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %408, i64 2
  %410 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %409, align 8
  tail call void %410(%"class.v8::internal::ObjectVisitor"* %404, i64 %2, i64 %405, i64 %406) #12
  %411 = add i64 %2, 15
  %412 = add i64 %2, 19
  %413 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %407, align 8
  %414 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %413, i64 2
  %415 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %414, align 8
  tail call void %415(%"class.v8::internal::ObjectVisitor"* %404, i64 %2, i64 %411, i64 %412) #12
  br label %441

416:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

417:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

418:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

419:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

420:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

421:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 12, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %422 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %423 = add i64 %2, 19
  %424 = add i64 %2, 23
  %425 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %426 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %425, align 8
  %427 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %426, i64 2
  %428 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %427, align 8
  tail call void %428(%"class.v8::internal::ObjectVisitor"* %422, i64 %2, i64 %423, i64 %424) #12
  br label %441

429:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

430:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 12, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

431:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 12, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  %432 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %433 = add i64 %2, 19
  %434 = add i64 %2, 23
  %435 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %436 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %435, align 8
  %437 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %436, i64 2
  %438 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %437, align 8
  tail call void %438(%"class.v8::internal::ObjectVisitor"* %432, i64 %2, i64 %433, i64 %434) #12
  br label %441

439:                                              ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %2, i32 4, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4) #12
  br label %441

440:                                              ; preds = %15
  tail call void (i8*, ...) @_ZN2v88internal6PrintFEPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.19, i64 0, i64 0), i32 %7) #12
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

441:                                              ; preds = %140, %40, %22, %9, %15, %15, %361, %359, %15, %87, %83, %60, %15, %15, %33, %16, %15, %15, %15, %15, %15, %15, %9, %439, %431, %430, %429, %421, %420, %419, %418, %417, %416, %403, %402, %394, %393, %392, %391, %390, %389, %388, %387, %386, %385, %384, %383, %382, %381, %380, %379, %378, %370, %348, %340, %334, %327, %320, %313, %297, %296, %295, %294, %291, %283, %282, %281, %269, %267, %232, %231, %230, %228, %193, %191, %145, %86, %85, %84, %59, %58, %57, %49, %48, %32, %13, %12, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CallIterateBody5applyINS0_13JSArrayBuffer14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64, i64, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 4, i32 12, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %5 = add i64 %0, 7
  %6 = inttoptr i64 %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp eq i16 %7, 1057
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = add i64 %0, 9
  %11 = inttoptr i64 %10 to i8*
  %12 = load atomic i8, i8* %11 monotonic, align 1
  %13 = icmp slt i8 %12, 0
  %14 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %7, i1 zeroext %13) #12
  br label %15

15:                                               ; preds = %9, %4
  %16 = phi i32 [ %14, %9 ], [ 12, %4 ]
  %17 = add i64 %0, 4
  %18 = inttoptr i64 %17 to i8*
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 2
  %22 = icmp slt i32 %16, %21
  br i1 %22, label %23, label %38

23:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 48, i32 %16, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %24 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 0
  %25 = add i64 %1, -1
  %26 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %27 = sext i32 %16 to i64
  %28 = zext i32 %21 to i64
  br label %29

29:                                               ; preds = %29, %23
  %30 = phi i64 [ %27, %23 ], [ %36, %29 ]
  %31 = add i64 %25, %30
  %32 = add i64 %31, 4
  %33 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %26, align 8
  %34 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %33, i64 2
  %35 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %34, align 8
  tail call void %35(%"class.v8::internal::ObjectVisitor"* %24, i64 %1, i64 %31, i64 %32) #12
  %36 = add nsw i64 %30, 8
  %37 = icmp slt i64 %36, %28
  br i1 %37, label %29, label %38

38:                                               ; preds = %29, %15
  %39 = phi i32 [ 48, %15 ], [ %21, %29 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 %39, i32 %2, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CallIterateBody5applyINS0_10JSDataView14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64, i64, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 4, i32 16, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %5 = add i64 %0, 7
  %6 = inttoptr i64 %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp eq i16 %7, 1057
  br i1 %8, label %15, label %9

9:                                                ; preds = %4
  %10 = add i64 %0, 9
  %11 = inttoptr i64 %10 to i8*
  %12 = load atomic i8, i8* %11 monotonic, align 1
  %13 = icmp slt i8 %12, 0
  %14 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %7, i1 zeroext %13) #12
  br label %15

15:                                               ; preds = %9, %4
  %16 = phi i32 [ %14, %9 ], [ 12, %4 ]
  %17 = add i64 %0, 4
  %18 = inttoptr i64 %17 to i8*
  %19 = load atomic i8, i8* %18 monotonic, align 1
  %20 = zext i8 %19 to i32
  %21 = shl nuw nsw i32 %20, 2
  %22 = icmp slt i32 %16, %21
  br i1 %22, label %23, label %38

23:                                               ; preds = %15
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 40, i32 %16, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %24 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 0
  %25 = add i64 %1, -1
  %26 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %27 = sext i32 %16 to i64
  %28 = zext i32 %21 to i64
  br label %29

29:                                               ; preds = %29, %23
  %30 = phi i64 [ %27, %23 ], [ %36, %29 ]
  %31 = add i64 %25, %30
  %32 = add i64 %31, 4
  %33 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %26, align 8
  %34 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %33, i64 2
  %35 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %34, align 8
  tail call void %35(%"class.v8::internal::ObjectVisitor"* %24, i64 %1, i64 %31, i64 %32) #12
  %36 = add nsw i64 %30, 8
  %37 = icmp slt i64 %36, %28
  br i1 %37, label %29, label %38

38:                                               ; preds = %29, %15
  %39 = phi i32 [ 40, %15 ], [ %21, %29 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 %39, i32 %2, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CallIterateBody5applyINS0_12JSTypedArray14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64, i64, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 4, i32 16, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %5 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 0
  %6 = add i64 %1, -1
  %7 = add i64 %1, 47
  %8 = add i64 %1, 51
  %9 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %10 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, i64 2
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %11, align 8
  tail call void %12(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %7, i64 %8) #12
  %13 = add i64 %0, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 1057
  br i1 %16, label %23, label %17

17:                                               ; preds = %4
  %18 = add i64 %0, 9
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = icmp slt i8 %20, 0
  %22 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %15, i1 zeroext %21) #12
  br label %23

23:                                               ; preds = %17, %4
  %24 = phi i32 [ %22, %17 ], [ 12, %4 ]
  %25 = add i64 %0, 4
  %26 = inttoptr i64 %25 to i8*
  %27 = load atomic i8, i8* %26 monotonic, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 2
  %30 = icmp slt i32 %24, %29
  br i1 %30, label %31, label %43

31:                                               ; preds = %23
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 56, i32 %24, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %32 = sext i32 %24 to i64
  %33 = zext i32 %29 to i64
  br label %34

34:                                               ; preds = %34, %31
  %35 = phi i64 [ %32, %31 ], [ %41, %34 ]
  %36 = add i64 %6, %35
  %37 = add i64 %36, 4
  %38 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %9, align 8
  %39 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %38, i64 2
  %40 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %39, align 8
  tail call void %40(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %36, i64 %37) #12
  %41 = add nsw i64 %35, 8
  %42 = icmp slt i64 %41, %33
  br i1 %42, label %34, label %43

43:                                               ; preds = %34, %23
  %44 = phi i32 [ 56, %23 ], [ %29, %34 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 %44, i32 %2, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal15CallIterateBody5applyINS0_9JSWeakRef14BodyDescriptorENS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT0_(i64, i64, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #0 comdat align 2 {
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 4, i32 12, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %5 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 0
  %6 = add i64 %1, -1
  %7 = add i64 %1, 11
  %8 = add i64 %1, 15
  %9 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %10 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, i64 4
  %12 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %11, align 8
  tail call void %12(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %7, i64 %8) #12
  %13 = add i64 %0, 7
  %14 = inttoptr i64 %13 to i16*
  %15 = load atomic i16, i16* %14 monotonic, align 2
  %16 = icmp eq i16 %15, 1057
  br i1 %16, label %23, label %17

17:                                               ; preds = %4
  %18 = add i64 %0, 9
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = icmp slt i8 %20, 0
  %22 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %15, i1 zeroext %21) #12
  br label %23

23:                                               ; preds = %17, %4
  %24 = phi i32 [ %22, %17 ], [ 12, %4 ]
  %25 = add i64 %0, 4
  %26 = inttoptr i64 %25 to i8*
  %27 = load atomic i8, i8* %26 monotonic, align 1
  %28 = zext i8 %27 to i32
  %29 = shl nuw nsw i32 %28, 2
  %30 = icmp slt i32 %24, %29
  br i1 %30, label %31, label %43

31:                                               ; preds = %23
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 16, i32 %24, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  %32 = sext i32 %24 to i64
  %33 = zext i32 %29 to i64
  br label %34

34:                                               ; preds = %34, %31
  %35 = phi i64 [ %32, %31 ], [ %41, %34 ]
  %36 = add i64 %6, %35
  %37 = add i64 %36, 4
  %38 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %9, align 8
  %39 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %38, i64 2
  %40 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %39, align 8
  tail call void %40(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %36, i64 %37) #12
  %41 = add nsw i64 %35, 8
  %42 = icmp slt i64 %41, %33
  br i1 %42, label %34, label %43

43:                                               ; preds = %34, %23
  %44 = phi i32 [ 16, %23 ], [ %29, %34 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 %44, i32 %2, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3) #12
  ret void
}

declare void @_ZN2v88internal6PrintFEPKcz(i8*, ...) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64, i32, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #7 comdat align 2 {
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %4
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.14, i64 0, i64 0)) #16
  unreachable

7:                                                ; preds = %4
  %8 = sext i32 %1 to i64
  %9 = add i64 %0, -1
  %10 = add i64 %9, %8
  %11 = sext i32 %2 to i64
  %12 = add i64 %9, %11
  %13 = icmp ult i64 %10, %12
  br i1 %13, label %14, label %213

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 1
  %16 = and i64 %0, -262144
  %17 = inttoptr i64 %16 to %"class.v8::internal::MemoryChunk"*
  %18 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %17, i64 0, i32 4
  %19 = bitcast %"class.v8::internal::SlotSet"** %18 to i64*
  %20 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %17, i64 0, i32 1, i64 0
  %21 = bitcast %"class.v8::internal::SlotSet"** %20 to i64*
  %22 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 2
  %23 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %17, i64 0, i32 1, i64 1
  %24 = bitcast %"class.v8::internal::SlotSet"** %23 to i64*
  br label %25

25:                                               ; preds = %210, %14
  %26 = phi i64 [ %10, %14 ], [ %211, %210 ]
  %27 = inttoptr i64 %26 to i32*
  %28 = load i32, i32* %27, align 4
  %29 = and i64 %26, -4294967296
  %30 = zext i32 %28 to i64
  %31 = or i64 %29, %30
  %32 = and i64 %30, 1
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %210, label %34

34:                                               ; preds = %25
  %35 = and i64 %31, -262144
  %36 = inttoptr i64 %35 to %"class.v8::internal::BasicMemoryChunk"*
  %37 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %36, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %150, label %41

41:                                               ; preds = %34
  %42 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %15, align 8
  %43 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %42, i64 %26, i64 %31) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %210

45:                                               ; preds = %41
  %46 = load atomic i64, i64* %19 acquire, align 128
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %99, label %48

48:                                               ; preds = %45
  %49 = load atomic i64, i64* %19 acquire, align 128
  %50 = inttoptr i64 %49 to %"class.v8::internal::SlotSet"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"* %17) #12
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi %"class.v8::internal::SlotSet"* [ %53, %52 ], [ %50, %48 ]
  %56 = sub i64 %26, %16
  %57 = lshr i64 %56, 2
  %58 = lshr i64 %56, 12
  %59 = lshr i64 %56, 7
  %60 = and i64 %59, 31
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 31
  %63 = bitcast %"class.v8::internal::SlotSet"* %55 to %"class.v8::internal::SlotSet::Bucket"**
  %64 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %63, i64 %58
  %65 = bitcast %"class.v8::internal::SlotSet::Bucket"** %64 to i64*
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = inttoptr i64 %66 to %"class.v8::internal::SlotSet::Bucket"*
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %54
  %70 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %71 = bitcast i8* %70 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 128, i1 false) #12
  %72 = ptrtoint i8* %70 to i64
  %73 = cmpxchg volatile i64* %65, i64 0, i64 %72 release monotonic
  %74 = extractvalue { i64, i1 } %73, 1
  br i1 %74, label %81, label %75

75:                                               ; preds = %69
  %76 = icmp eq i8* %70, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %75
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %70) #12
  br label %78

78:                                               ; preds = %77, %75
  %79 = load atomic i64, i64* %65 acquire, align 8
  %80 = inttoptr i64 %79 to %"class.v8::internal::SlotSet::Bucket"*
  br label %81

81:                                               ; preds = %78, %69, %54
  %82 = phi %"class.v8::internal::SlotSet::Bucket"* [ %71, %69 ], [ %80, %78 ], [ %67, %54 ]
  %83 = shl i32 1, %62
  %84 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %82, i64 0, i32 0, i64 %60
  %85 = load atomic i32, i32* %84 acquire, align 4
  %86 = and i32 %85, %83
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %210

88:                                               ; preds = %81
  %89 = load atomic i32, i32* %84 monotonic, align 4
  br label %90

90:                                               ; preds = %94, %88
  %91 = phi i32 [ %89, %88 ], [ %97, %94 ]
  %92 = and i32 %91, %83
  %93 = icmp eq i32 %92, %83
  br i1 %93, label %210, label %94

94:                                               ; preds = %90
  %95 = or i32 %91, %83
  %96 = cmpxchg volatile i32* %84, i32 %91, i32 %95 release monotonic
  %97 = extractvalue { i32, i1 } %96, 0
  %98 = extractvalue { i32, i1 } %96, 1
  br i1 %98, label %210, label %90

99:                                               ; preds = %45
  %100 = load atomic i64, i64* %21 acquire, align 32
  %101 = inttoptr i64 %100 to %"class.v8::internal::SlotSet"*
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %17) #12
  br label %105

105:                                              ; preds = %103, %99
  %106 = phi %"class.v8::internal::SlotSet"* [ %104, %103 ], [ %101, %99 ]
  %107 = sub i64 %26, %16
  %108 = lshr i64 %107, 2
  %109 = lshr i64 %107, 12
  %110 = lshr i64 %107, 7
  %111 = and i64 %110, 31
  %112 = trunc i64 %108 to i32
  %113 = and i32 %112, 31
  %114 = bitcast %"class.v8::internal::SlotSet"* %106 to %"class.v8::internal::SlotSet::Bucket"**
  %115 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %114, i64 %109
  %116 = bitcast %"class.v8::internal::SlotSet::Bucket"** %115 to i64*
  %117 = load atomic i64, i64* %116 acquire, align 8
  %118 = inttoptr i64 %117 to %"class.v8::internal::SlotSet::Bucket"*
  %119 = icmp eq i64 %117, 0
  br i1 %119, label %120, label %132

120:                                              ; preds = %105
  %121 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %122 = bitcast i8* %121 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 128, i1 false) #12
  %123 = ptrtoint i8* %121 to i64
  %124 = cmpxchg volatile i64* %116, i64 0, i64 %123 release monotonic
  %125 = extractvalue { i64, i1 } %124, 1
  br i1 %125, label %132, label %126

126:                                              ; preds = %120
  %127 = icmp eq i8* %121, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %126
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %121) #12
  br label %129

129:                                              ; preds = %128, %126
  %130 = load atomic i64, i64* %116 acquire, align 8
  %131 = inttoptr i64 %130 to %"class.v8::internal::SlotSet::Bucket"*
  br label %132

132:                                              ; preds = %129, %120, %105
  %133 = phi %"class.v8::internal::SlotSet::Bucket"* [ %122, %120 ], [ %131, %129 ], [ %118, %105 ]
  %134 = shl i32 1, %113
  %135 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %133, i64 0, i32 0, i64 %111
  %136 = load atomic i32, i32* %135 acquire, align 4
  %137 = and i32 %136, %134
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %210

139:                                              ; preds = %132
  %140 = load atomic i32, i32* %135 monotonic, align 4
  br label %141

141:                                              ; preds = %145, %139
  %142 = phi i32 [ %140, %139 ], [ %148, %145 ]
  %143 = and i32 %142, %134
  %144 = icmp eq i32 %143, %134
  br i1 %144, label %210, label %145

145:                                              ; preds = %141
  %146 = or i32 %142, %134
  %147 = cmpxchg volatile i32* %135, i32 %142, i32 %146 release monotonic
  %148 = extractvalue { i32, i1 } %147, 0
  %149 = extractvalue { i32, i1 } %147, 1
  br i1 %149, label %210, label %141

150:                                              ; preds = %34
  %151 = load i8, i8* %22, align 8, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %210, label %153

153:                                              ; preds = %150
  %154 = inttoptr i64 %35 to %"class.v8::internal::Page"*
  %155 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %154, i64 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = and i64 %156, 64
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %210, label %159

159:                                              ; preds = %153
  %160 = load atomic i64, i64* %24 acquire, align 8
  %161 = inttoptr i64 %160 to %"class.v8::internal::SlotSet"*
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %17) #12
  br label %165

165:                                              ; preds = %163, %159
  %166 = phi %"class.v8::internal::SlotSet"* [ %164, %163 ], [ %161, %159 ]
  %167 = sub i64 %26, %16
  %168 = lshr i64 %167, 2
  %169 = lshr i64 %167, 12
  %170 = lshr i64 %167, 7
  %171 = and i64 %170, 31
  %172 = trunc i64 %168 to i32
  %173 = and i32 %172, 31
  %174 = bitcast %"class.v8::internal::SlotSet"* %166 to %"class.v8::internal::SlotSet::Bucket"**
  %175 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %174, i64 %169
  %176 = bitcast %"class.v8::internal::SlotSet::Bucket"** %175 to i64*
  %177 = load atomic i64, i64* %176 acquire, align 8
  %178 = inttoptr i64 %177 to %"class.v8::internal::SlotSet::Bucket"*
  %179 = icmp eq i64 %177, 0
  br i1 %179, label %180, label %192

180:                                              ; preds = %165
  %181 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %182 = bitcast i8* %181 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %181, i8 0, i64 128, i1 false) #12
  %183 = ptrtoint i8* %181 to i64
  %184 = cmpxchg volatile i64* %176, i64 0, i64 %183 release monotonic
  %185 = extractvalue { i64, i1 } %184, 1
  br i1 %185, label %192, label %186

186:                                              ; preds = %180
  %187 = icmp eq i8* %181, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %186
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %181) #12
  br label %189

189:                                              ; preds = %188, %186
  %190 = load atomic i64, i64* %176 acquire, align 8
  %191 = inttoptr i64 %190 to %"class.v8::internal::SlotSet::Bucket"*
  br label %192

192:                                              ; preds = %189, %180, %165
  %193 = phi %"class.v8::internal::SlotSet::Bucket"* [ %182, %180 ], [ %191, %189 ], [ %178, %165 ]
  %194 = shl i32 1, %173
  %195 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %193, i64 0, i32 0, i64 %171
  %196 = load atomic i32, i32* %195 acquire, align 4
  %197 = and i32 %196, %194
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %210

199:                                              ; preds = %192
  %200 = load atomic i32, i32* %195 monotonic, align 4
  br label %201

201:                                              ; preds = %205, %199
  %202 = phi i32 [ %200, %199 ], [ %208, %205 ]
  %203 = and i32 %202, %194
  %204 = icmp eq i32 %203, %194
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = or i32 %202, %194
  %207 = cmpxchg volatile i32* %195, i32 %202, i32 %206 release monotonic
  %208 = extractvalue { i32, i1 } %207, 0
  %209 = extractvalue { i32, i1 } %207, 1
  br i1 %209, label %210, label %201

210:                                              ; preds = %94, %90, %145, %141, %205, %201, %192, %153, %150, %132, %81, %41, %25
  %211 = add i64 %26, 4
  %212 = icmp ult i64 %211, %12
  br i1 %212, label %25, label %213

213:                                              ; preds = %210, %7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18BodyDescriptorBase16IterateEphemeronINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiiPT_(i64, i32, i32, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #7 comdat align 2 {
  %6 = alloca i32, align 4
  %7 = alloca %"struct.std::__1::pair.1253", align 8
  %8 = sext i32 %2 to i64
  %9 = add i64 %0, -1
  %10 = add i64 %9, %8
  %11 = sext i32 %3 to i64
  %12 = add i64 %9, %11
  %13 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %14 = add i64 %12, 4
  %15 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %16, i64 2
  %18 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %17, align 8
  tail call void %18(%"class.v8::internal::ObjectVisitor"* %13, i64 %0, i64 %12, i64 %14) #12
  %19 = inttoptr i64 %10 to i32*
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i64
  %22 = and i64 %21, 1
  %23 = icmp eq i64 %22, 0
  br i1 %23, label %66, label %24

24:                                               ; preds = %5
  %25 = and i64 %10, -4294967296
  %26 = and i64 %21, 4294705152
  %27 = or i64 %25, %26
  %28 = or i64 %27, 8
  %29 = inttoptr i64 %28 to i64*
  %30 = load i64, i64* %29, align 8
  %31 = and i64 %30, 24
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %66, label %33

33:                                               ; preds = %24
  %34 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 1
  %35 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %34, align 8
  %36 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %36)
  store i32 %1, i32* %6, align 4
  %37 = bitcast %"struct.std::__1::pair.1253"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %37) #12
  %38 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %0, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %7, i64 0, i32 1
  %40 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %7, i64 0, i32 1, i32 0, i32 3
  %41 = bitcast %"class.std::__1::__compressed_pair.1273"* %40 to i32*
  %42 = bitcast %"class.std::__1::unordered_set.1254"* %39 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %42, i8 0, i64 32, i1 false) #12
  store i32 1065353216, i32* %41, align 8
  %43 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %35, i64 0, i32 11, i32 0
  %44 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %7, i64 0, i32 0
  %45 = call { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_SC_EEEEENSO_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"* %43, %"class.v8::internal::EphemeronHashTable"* nonnull dereferenceable(8) %44, %"struct.std::__1::pair.1253"* nonnull dereferenceable(48) %7) #12
  %46 = extractvalue { %"struct.std::__1::__hash_node_base"*, i8 } %45, 0
  %47 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %7, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %47, align 8
  %49 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %33, %50
  %51 = phi %"struct.std::__1::__hash_node_base.1259"* [ %53, %50 ], [ %48, %33 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %52, align 8
  %54 = bitcast %"struct.std::__1::__hash_node_base.1259"* %51 to i8*
  call void @_ZdlPv(i8* %54) #17
  %55 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %53, null
  br i1 %55, label %56, label %50

56:                                               ; preds = %50, %33
  %57 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %57, align 8
  store %"struct.std::__1::__hash_node_base.1259"** null, %"struct.std::__1::__hash_node_base.1259"*** %57, align 8
  %59 = icmp eq %"struct.std::__1::__hash_node_base.1259"** %58, null
  br i1 %59, label %62, label %60

60:                                               ; preds = %56
  %61 = bitcast %"struct.std::__1::__hash_node_base.1259"** %58 to i8*
  call void @_ZdlPv(i8* %61) #17
  br label %62

62:                                               ; preds = %56, %60
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %37) #12
  %63 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 3
  %64 = bitcast %"struct.std::__1::__hash_node_base"* %63 to %"class.std::__1::__hash_table.1255"*
  %65 = call { %"struct.std::__1::__hash_node_base.1259"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1255"* %64, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %6) #12
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %36)
  br label %71

66:                                               ; preds = %24, %5
  %67 = add i64 %10, 4
  %68 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %15, align 8
  %69 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %68, i64 2
  %70 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %69, align 8
  tail call void %70(%"class.v8::internal::ObjectVisitor"* %13, i64 %0, i64 %10, i64 %67) #12
  br label %71

71:                                               ; preds = %62, %66
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18BodyDescriptorBase24IterateMaybeWeakPointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64, i32, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #7 comdat align 2 {
  %5 = sext i32 %1 to i64
  %6 = add i64 %0, -1
  %7 = add i64 %6, %5
  %8 = sext i32 %2 to i64
  %9 = add i64 %6, %8
  %10 = icmp ult i64 %7, %9
  br i1 %10, label %11, label %213

11:                                               ; preds = %4
  %12 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 1
  %13 = and i64 %0, -262144
  %14 = inttoptr i64 %13 to %"class.v8::internal::MemoryChunk"*
  %15 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %14, i64 0, i32 4
  %16 = bitcast %"class.v8::internal::SlotSet"** %15 to i64*
  %17 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %14, i64 0, i32 1, i64 0
  %18 = bitcast %"class.v8::internal::SlotSet"** %17 to i64*
  %19 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 2
  %20 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %14, i64 0, i32 1, i64 1
  %21 = bitcast %"class.v8::internal::SlotSet"** %20 to i64*
  br label %22

22:                                               ; preds = %210, %11
  %23 = phi i64 [ %7, %11 ], [ %211, %210 ]
  %24 = inttoptr i64 %23 to i32*
  %25 = load i32, i32* %24, align 4
  %26 = zext i32 %25 to i64
  %27 = and i64 %26, 1
  %28 = icmp ne i64 %27, 0
  %29 = icmp ne i32 %25, 3
  %30 = and i1 %29, %28
  br i1 %30, label %31, label %210

31:                                               ; preds = %22
  %32 = and i64 %23, -4294967296
  %33 = and i64 %26, 4294967293
  %34 = or i64 %33, %32
  %35 = and i64 %34, -262144
  %36 = inttoptr i64 %35 to %"class.v8::internal::BasicMemoryChunk"*
  %37 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %36, i64 0, i32 1
  %38 = load i64, i64* %37, align 8
  %39 = and i64 %38, 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %150, label %41

41:                                               ; preds = %31
  %42 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %12, align 8
  %43 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %42, i64 %23, i64 %34) #12
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %210

45:                                               ; preds = %41
  %46 = load atomic i64, i64* %16 acquire, align 128
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %99, label %48

48:                                               ; preds = %45
  %49 = load atomic i64, i64* %16 acquire, align 128
  %50 = inttoptr i64 %49 to %"class.v8::internal::SlotSet"*
  %51 = icmp eq i64 %49, 0
  br i1 %51, label %52, label %54

52:                                               ; preds = %48
  %53 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk23AllocateSweepingSlotSetEv(%"class.v8::internal::MemoryChunk"* %14) #12
  br label %54

54:                                               ; preds = %52, %48
  %55 = phi %"class.v8::internal::SlotSet"* [ %53, %52 ], [ %50, %48 ]
  %56 = sub i64 %23, %13
  %57 = lshr i64 %56, 2
  %58 = lshr i64 %56, 12
  %59 = lshr i64 %56, 7
  %60 = and i64 %59, 31
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 31
  %63 = bitcast %"class.v8::internal::SlotSet"* %55 to %"class.v8::internal::SlotSet::Bucket"**
  %64 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %63, i64 %58
  %65 = bitcast %"class.v8::internal::SlotSet::Bucket"** %64 to i64*
  %66 = load atomic i64, i64* %65 acquire, align 8
  %67 = inttoptr i64 %66 to %"class.v8::internal::SlotSet::Bucket"*
  %68 = icmp eq i64 %66, 0
  br i1 %68, label %69, label %81

69:                                               ; preds = %54
  %70 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %71 = bitcast i8* %70 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %70, i8 0, i64 128, i1 false) #12
  %72 = ptrtoint i8* %70 to i64
  %73 = cmpxchg volatile i64* %65, i64 0, i64 %72 release monotonic
  %74 = extractvalue { i64, i1 } %73, 1
  br i1 %74, label %81, label %75

75:                                               ; preds = %69
  %76 = icmp eq i8* %70, null
  br i1 %76, label %78, label %77

77:                                               ; preds = %75
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %70) #12
  br label %78

78:                                               ; preds = %77, %75
  %79 = load atomic i64, i64* %65 acquire, align 8
  %80 = inttoptr i64 %79 to %"class.v8::internal::SlotSet::Bucket"*
  br label %81

81:                                               ; preds = %78, %69, %54
  %82 = phi %"class.v8::internal::SlotSet::Bucket"* [ %71, %69 ], [ %80, %78 ], [ %67, %54 ]
  %83 = shl i32 1, %62
  %84 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %82, i64 0, i32 0, i64 %60
  %85 = load atomic i32, i32* %84 acquire, align 4
  %86 = and i32 %85, %83
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %210

88:                                               ; preds = %81
  %89 = load atomic i32, i32* %84 monotonic, align 4
  br label %90

90:                                               ; preds = %94, %88
  %91 = phi i32 [ %89, %88 ], [ %97, %94 ]
  %92 = and i32 %91, %83
  %93 = icmp eq i32 %92, %83
  br i1 %93, label %210, label %94

94:                                               ; preds = %90
  %95 = or i32 %91, %83
  %96 = cmpxchg volatile i32* %84, i32 %91, i32 %95 release monotonic
  %97 = extractvalue { i32, i1 } %96, 0
  %98 = extractvalue { i32, i1 } %96, 1
  br i1 %98, label %210, label %90

99:                                               ; preds = %45
  %100 = load atomic i64, i64* %18 acquire, align 32
  %101 = inttoptr i64 %100 to %"class.v8::internal::SlotSet"*
  %102 = icmp eq i64 %100, 0
  br i1 %102, label %103, label %105

103:                                              ; preds = %99
  %104 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE0EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %14) #12
  br label %105

105:                                              ; preds = %103, %99
  %106 = phi %"class.v8::internal::SlotSet"* [ %104, %103 ], [ %101, %99 ]
  %107 = sub i64 %23, %13
  %108 = lshr i64 %107, 2
  %109 = lshr i64 %107, 12
  %110 = lshr i64 %107, 7
  %111 = and i64 %110, 31
  %112 = trunc i64 %108 to i32
  %113 = and i32 %112, 31
  %114 = bitcast %"class.v8::internal::SlotSet"* %106 to %"class.v8::internal::SlotSet::Bucket"**
  %115 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %114, i64 %109
  %116 = bitcast %"class.v8::internal::SlotSet::Bucket"** %115 to i64*
  %117 = load atomic i64, i64* %116 acquire, align 8
  %118 = inttoptr i64 %117 to %"class.v8::internal::SlotSet::Bucket"*
  %119 = icmp eq i64 %117, 0
  br i1 %119, label %120, label %132

120:                                              ; preds = %105
  %121 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %122 = bitcast i8* %121 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %121, i8 0, i64 128, i1 false) #12
  %123 = ptrtoint i8* %121 to i64
  %124 = cmpxchg volatile i64* %116, i64 0, i64 %123 release monotonic
  %125 = extractvalue { i64, i1 } %124, 1
  br i1 %125, label %132, label %126

126:                                              ; preds = %120
  %127 = icmp eq i8* %121, null
  br i1 %127, label %129, label %128

128:                                              ; preds = %126
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %121) #12
  br label %129

129:                                              ; preds = %128, %126
  %130 = load atomic i64, i64* %116 acquire, align 8
  %131 = inttoptr i64 %130 to %"class.v8::internal::SlotSet::Bucket"*
  br label %132

132:                                              ; preds = %129, %120, %105
  %133 = phi %"class.v8::internal::SlotSet::Bucket"* [ %122, %120 ], [ %131, %129 ], [ %118, %105 ]
  %134 = shl i32 1, %113
  %135 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %133, i64 0, i32 0, i64 %111
  %136 = load atomic i32, i32* %135 acquire, align 4
  %137 = and i32 %136, %134
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %210

139:                                              ; preds = %132
  %140 = load atomic i32, i32* %135 monotonic, align 4
  br label %141

141:                                              ; preds = %145, %139
  %142 = phi i32 [ %140, %139 ], [ %148, %145 ]
  %143 = and i32 %142, %134
  %144 = icmp eq i32 %143, %134
  br i1 %144, label %210, label %145

145:                                              ; preds = %141
  %146 = or i32 %142, %134
  %147 = cmpxchg volatile i32* %135, i32 %142, i32 %146 release monotonic
  %148 = extractvalue { i32, i1 } %147, 0
  %149 = extractvalue { i32, i1 } %147, 1
  br i1 %149, label %210, label %141

150:                                              ; preds = %31
  %151 = load i8, i8* %19, align 8, !range !2
  %152 = icmp eq i8 %151, 0
  br i1 %152, label %210, label %153

153:                                              ; preds = %150
  %154 = inttoptr i64 %35 to %"class.v8::internal::Page"*
  %155 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %154, i64 0, i32 0, i32 0, i32 1
  %156 = load i64, i64* %155, align 8
  %157 = and i64 %156, 64
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %210, label %159

159:                                              ; preds = %153
  %160 = load atomic i64, i64* %21 acquire, align 8
  %161 = inttoptr i64 %160 to %"class.v8::internal::SlotSet"*
  %162 = icmp eq i64 %160, 0
  br i1 %162, label %163, label %165

163:                                              ; preds = %159
  %164 = tail call %"class.v8::internal::SlotSet"* @_ZN2v88internal11MemoryChunk15AllocateSlotSetILNS0_17RememberedSetTypeE1EEEPNS0_7SlotSetEv(%"class.v8::internal::MemoryChunk"* %14) #12
  br label %165

165:                                              ; preds = %163, %159
  %166 = phi %"class.v8::internal::SlotSet"* [ %164, %163 ], [ %161, %159 ]
  %167 = sub i64 %23, %13
  %168 = lshr i64 %167, 2
  %169 = lshr i64 %167, 12
  %170 = lshr i64 %167, 7
  %171 = and i64 %170, 31
  %172 = trunc i64 %168 to i32
  %173 = and i32 %172, 31
  %174 = bitcast %"class.v8::internal::SlotSet"* %166 to %"class.v8::internal::SlotSet::Bucket"**
  %175 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket"*, %"class.v8::internal::SlotSet::Bucket"** %174, i64 %169
  %176 = bitcast %"class.v8::internal::SlotSet::Bucket"** %175 to i64*
  %177 = load atomic i64, i64* %176 acquire, align 8
  %178 = inttoptr i64 %177 to %"class.v8::internal::SlotSet::Bucket"*
  %179 = icmp eq i64 %177, 0
  br i1 %179, label %180, label %192

180:                                              ; preds = %165
  %181 = tail call i8* @_ZN2v88internal8MallocednwEm(i64 128) #12
  %182 = bitcast i8* %181 to %"class.v8::internal::SlotSet::Bucket"*
  tail call void @llvm.memset.p0i8.i64(i8* align 4 %181, i8 0, i64 128, i1 false) #12
  %183 = ptrtoint i8* %181 to i64
  %184 = cmpxchg volatile i64* %176, i64 0, i64 %183 release monotonic
  %185 = extractvalue { i64, i1 } %184, 1
  br i1 %185, label %192, label %186

186:                                              ; preds = %180
  %187 = icmp eq i8* %181, null
  br i1 %187, label %189, label %188

188:                                              ; preds = %186
  tail call void @_ZN2v88internal8MalloceddlEPv(i8* nonnull %181) #12
  br label %189

189:                                              ; preds = %188, %186
  %190 = load atomic i64, i64* %176 acquire, align 8
  %191 = inttoptr i64 %190 to %"class.v8::internal::SlotSet::Bucket"*
  br label %192

192:                                              ; preds = %189, %180, %165
  %193 = phi %"class.v8::internal::SlotSet::Bucket"* [ %182, %180 ], [ %191, %189 ], [ %178, %165 ]
  %194 = shl i32 1, %173
  %195 = getelementptr inbounds %"class.v8::internal::SlotSet::Bucket", %"class.v8::internal::SlotSet::Bucket"* %193, i64 0, i32 0, i64 %171
  %196 = load atomic i32, i32* %195 acquire, align 4
  %197 = and i32 %196, %194
  %198 = icmp eq i32 %197, 0
  br i1 %198, label %199, label %210

199:                                              ; preds = %192
  %200 = load atomic i32, i32* %195 monotonic, align 4
  br label %201

201:                                              ; preds = %205, %199
  %202 = phi i32 [ %200, %199 ], [ %208, %205 ]
  %203 = and i32 %202, %194
  %204 = icmp eq i32 %203, %194
  br i1 %204, label %210, label %205

205:                                              ; preds = %201
  %206 = or i32 %202, %194
  %207 = cmpxchg volatile i32* %195, i32 %202, i32 %206 release monotonic
  %208 = extractvalue { i32, i1 } %207, 0
  %209 = extractvalue { i32, i1 } %207, 1
  br i1 %209, label %210, label %201

210:                                              ; preds = %94, %90, %145, %141, %205, %201, %192, %153, %150, %132, %81, %41, %22
  %211 = add i64 %23, 4
  %212 = icmp ult i64 %211, %9
  br i1 %212, label %22, label %213

213:                                              ; preds = %210, %4
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64, i64, i32, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #7 comdat align 2 {
  %6 = add i64 %0, 7
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = icmp eq i16 %8, 1057
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = add i64 %0, 9
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = icmp slt i8 %13, 0
  %15 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %8, i1 zeroext %14) #12
  br label %16

16:                                               ; preds = %5, %10
  %17 = phi i32 [ %15, %10 ], [ 12, %5 ]
  %18 = add i64 %0, 4
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = icmp slt i32 %17, %22
  br i1 %23, label %24, label %39

24:                                               ; preds = %16
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 %2, i32 %17, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4)
  %25 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4, i64 0, i32 0
  %26 = add i64 %1, -1
  %27 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %28 = sext i32 %17 to i64
  %29 = zext i32 %22 to i64
  br label %30

30:                                               ; preds = %24, %30
  %31 = phi i64 [ %28, %24 ], [ %37, %30 ]
  %32 = add i64 %26, %31
  %33 = add i64 %32, 4
  %34 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %27, align 8
  %35 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %34, i64 2
  %36 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %35, align 8
  tail call void %36(%"class.v8::internal::ObjectVisitor"* %25, i64 %1, i64 %32, i64 %33) #12
  %37 = add nsw i64 %31, 8
  %38 = icmp slt i64 %37, %29
  br i1 %38, label %30, label %39

39:                                               ; preds = %30, %16
  %40 = phi i32 [ %2, %16 ], [ %22, %30 ]
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 %40, i32 %3, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %4)
  ret void
}

declare i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext, i1 zeroext) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64, i64, i32, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"*) local_unnamed_addr #7 comdat align 2 {
  tail call void @_ZN2v88internal18BodyDescriptorBase15IteratePointersINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_10HeapObjectEiiPT_(i64 %1, i32 4, i32 12, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3)
  %5 = getelementptr inbounds %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor", %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3, i64 0, i32 0
  %6 = bitcast %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %7 = add i64 %1, 43
  %8 = add i64 %1, 47
  %9 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %10 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %9, i64 2
  %11 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %10, align 8
  tail call void %11(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %7, i64 %8) #12
  %12 = add i64 %1, 55
  %13 = add i64 %1, 59
  %14 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %15 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %14, i64 2
  %16 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %15, align 8
  tail call void %16(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %12, i64 %13) #12
  %17 = add i64 %1, 111
  %18 = add i64 %1, 115
  %19 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %20 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %19, i64 2
  %21 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %20, align 8
  tail call void %21(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %17, i64 %18) #12
  %22 = add i64 %1, 115
  %23 = add i64 %1, 119
  %24 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %25 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %24, i64 2
  %26 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %25, align 8
  tail call void %26(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %22, i64 %23) #12
  %27 = add i64 %1, 119
  %28 = add i64 %1, 123
  %29 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %30 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %29, i64 2
  %31 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %30, align 8
  tail call void %31(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %27, i64 %28) #12
  %32 = add i64 %1, 123
  %33 = add i64 %1, 127
  %34 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %35 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %34, i64 2
  %36 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %35, align 8
  tail call void %36(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %32, i64 %33) #12
  %37 = add i64 %1, 127
  %38 = add i64 %1, 131
  %39 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %40 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %39, i64 2
  %41 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %40, align 8
  tail call void %41(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %37, i64 %38) #12
  %42 = add i64 %1, 131
  %43 = add i64 %1, 135
  %44 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %45 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %44, i64 2
  %46 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %45, align 8
  tail call void %46(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %42, i64 %43) #12
  %47 = add i64 %1, 135
  %48 = add i64 %1, 139
  %49 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %50 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %49, i64 2
  %51 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %50, align 8
  tail call void %51(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %47, i64 %48) #12
  %52 = add i64 %1, 139
  %53 = add i64 %1, 143
  %54 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %55 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %54, i64 2
  %56 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %55, align 8
  tail call void %56(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %52, i64 %53) #12
  %57 = add i64 %1, 143
  %58 = add i64 %1, 147
  %59 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %60 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %59, i64 2
  %61 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %60, align 8
  tail call void %61(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %57, i64 %58) #12
  %62 = add i64 %1, 147
  %63 = add i64 %1, 151
  %64 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %65 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %64, i64 2
  %66 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %65, align 8
  tail call void %66(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %62, i64 %63) #12
  %67 = add i64 %1, 151
  %68 = add i64 %1, 155
  %69 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %70 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %69, i64 2
  %71 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %70, align 8
  tail call void %71(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %67, i64 %68) #12
  %72 = add i64 %1, 155
  %73 = add i64 %1, 159
  %74 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %75 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %74, i64 2
  %76 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %75, align 8
  tail call void %76(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %72, i64 %73) #12
  %77 = add i64 %1, 159
  %78 = add i64 %1, 163
  %79 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %6, align 8
  %80 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %79, i64 2
  %81 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %80, align 8
  tail call void %81(%"class.v8::internal::ObjectVisitor"* %5, i64 %1, i64 %77, i64 %78) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_40IterateAndScavengePromotedObjectsVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %0, i64 %1, i32 216, i32 %2, %"class.v8::internal::IterateAndScavengePromotedObjectsVisitor"* %3)
  ret void
}

declare void @_ZN2v88internal13RelocIteratorC1ENS0_4CodeEi(%"class.v8::internal::RelocIterator"*, i64, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_SC_EEEEENSO_INS_15__hash_iteratorIPNS_11__hash_nodeISD_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table"*, %"class.v8::internal::EphemeronHashTable"* dereferenceable(8), %"struct.std::__1::pair.1253"* dereferenceable(48)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.v8::internal::EphemeronHashTable", %"class.v8::internal::EphemeronHashTable"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = and i64 %5, 4294967295
  %7 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %8 = load i64, i64* %7, align 8
  %9 = icmp eq i64 %8, 0
  br i1 %9, label %72, label %10

10:                                               ; preds = %3
  %11 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !207
  %12 = icmp ugt i64 %11, 1
  br i1 %12, label %16, label %13

13:                                               ; preds = %10
  %14 = add i64 %8, 4294967295
  %15 = and i64 %14, %6
  br label %20

16:                                               ; preds = %10
  %17 = icmp ult i64 %6, %8
  br i1 %17, label %20, label %18

18:                                               ; preds = %16
  %19 = urem i64 %6, %8
  br label %20

20:                                               ; preds = %13, %16, %18
  %21 = phi i64 [ %15, %13 ], [ %19, %18 ], [ %6, %16 ]
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %23 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %22, align 8
  %24 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %23, i64 %21
  %25 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %24, align 8
  %26 = icmp eq %"struct.std::__1::__hash_node_base"* %25, null
  br i1 %26, label %72, label %27

27:                                               ; preds = %20
  %28 = add i64 %8, -1
  %29 = trunc i64 %5 to i32
  br i1 %12, label %30, label %53

30:                                               ; preds = %27, %47
  %31 = phi %"struct.std::__1::__hash_node_base"* [ %33, %47 ], [ %25, %27 ]
  %32 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %31, i64 0, i32 0
  %33 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %32, align 8
  %34 = icmp eq %"struct.std::__1::__hash_node_base"* %33, null
  br i1 %34, label %72, label %35

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 1
  %37 = bitcast %"struct.std::__1::__hash_node_base"* %36 to i64*
  %38 = load i64, i64* %37, align 8
  %39 = icmp eq i64 %38, %6
  br i1 %39, label %47, label %40

40:                                               ; preds = %35
  %41 = icmp ult i64 %38, %8
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %38, %8
  br label %44

44:                                               ; preds = %42, %40
  %45 = phi i64 [ %43, %42 ], [ %38, %40 ]
  %46 = icmp eq i64 %45, %21
  br i1 %46, label %47, label %72

47:                                               ; preds = %44, %35
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %33, i64 2
  %49 = bitcast %"struct.std::__1::__hash_node_base"* %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %51, %29
  br i1 %52, label %202, label %30

53:                                               ; preds = %27, %66
  %54 = phi %"struct.std::__1::__hash_node_base"* [ %56, %66 ], [ %25, %27 ]
  %55 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %54, i64 0, i32 0
  %56 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %55, align 8
  %57 = icmp eq %"struct.std::__1::__hash_node_base"* %56, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 1
  %60 = bitcast %"struct.std::__1::__hash_node_base"* %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = icmp eq i64 %61, %6
  %63 = and i64 %61, %28
  %64 = icmp eq i64 %63, %21
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %72

66:                                               ; preds = %58
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %56, i64 2
  %68 = bitcast %"struct.std::__1::__hash_node_base"* %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = trunc i64 %69 to i32
  %71 = icmp eq i32 %70, %29
  br i1 %71, label %202, label %53

72:                                               ; preds = %58, %53, %44, %30, %20, %3
  %73 = phi i64 [ %21, %20 ], [ undef, %3 ], [ %21, %30 ], [ %21, %44 ], [ %21, %53 ], [ %21, %58 ]
  %74 = tail call i8* @_Znwm(i64 64) #17, !noalias !223
  %75 = getelementptr inbounds i8, i8* %74, i64 16
  %76 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = bitcast %"struct.std::__1::pair.1253"* %2 to <2 x i64>*
  %78 = load <2 x i64>, <2 x i64>* %77, align 8, !noalias !223
  store %"struct.std::__1::__hash_node_base.1259"** null, %"struct.std::__1::__hash_node_base.1259"*** %76, align 8, !noalias !223
  %79 = bitcast i8* %75 to <2 x i64>*
  store <2 x i64> %78, <2 x i64>* %79, align 8, !noalias !223
  %80 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %2, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %81 = getelementptr inbounds i8, i8* %74, i64 32
  %82 = bitcast i8* %81 to i64*
  %83 = load i64, i64* %80, align 8, !noalias !223
  store i64 %83, i64* %82, align 8, !noalias !223
  store i64 0, i64* %80, align 8, !noalias !223
  %84 = getelementptr inbounds i8, i8* %74, i64 40
  %85 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %2, i64 0, i32 1, i32 0, i32 1
  %86 = bitcast %"class.std::__1::__compressed_pair.1266"* %85 to i64*
  %87 = bitcast i8* %84 to i64*
  %88 = load i64, i64* %86, align 8, !noalias !223
  store i64 %88, i64* %87, align 8, !noalias !223
  %89 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %2, i64 0, i32 1, i32 0, i32 2, i32 0, i32 0
  %90 = getelementptr inbounds i8, i8* %74, i64 48
  %91 = bitcast i8* %90 to i64*
  %92 = load i64, i64* %89, align 8, !noalias !223
  store i64 %92, i64* %91, align 8, !noalias !223
  %93 = getelementptr inbounds i8, i8* %74, i64 56
  %94 = getelementptr inbounds %"struct.std::__1::pair.1253", %"struct.std::__1::pair.1253"* %2, i64 0, i32 1, i32 0, i32 3
  %95 = bitcast %"class.std::__1::__compressed_pair.1273"* %94 to i32*
  %96 = bitcast i8* %93 to i32*
  %97 = load i32, i32* %95, align 4, !noalias !223
  store i32 %97, i32* %96, align 8, !noalias !223
  %98 = icmp eq i64 %92, 0
  %99 = extractelement <2 x i64> %78, i32 1
  %100 = inttoptr i64 %99 to %"struct.std::__1::__hash_node_base.1259"**
  br i1 %98, label %120, label %101

101:                                              ; preds = %72
  %102 = inttoptr i64 %88 to %"struct.std::__1::__hash_node_base.1259"*
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %102, i64 1
  %104 = bitcast %"struct.std::__1::__hash_node_base.1259"* %103 to i64*
  %105 = load i64, i64* %104, align 8, !noalias !223
  %106 = tail call i64 @llvm.ctpop.i64(i64 %83) #12, !range !207
  %107 = icmp ugt i64 %106, 1
  br i1 %107, label %111, label %108

108:                                              ; preds = %101
  %109 = add i64 %83, -1
  %110 = and i64 %105, %109
  br label %115

111:                                              ; preds = %101
  %112 = icmp ult i64 %105, %83
  br i1 %112, label %115, label %113

113:                                              ; preds = %111
  %114 = urem i64 %105, %83
  br label %115

115:                                              ; preds = %113, %111, %108
  %116 = phi i64 [ %110, %108 ], [ %114, %113 ], [ %105, %111 ]
  %117 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %100, i64 %116
  %118 = bitcast %"struct.std::__1::__hash_node_base.1259"** %117 to i8**
  store i8* %84, i8** %118, align 8, !noalias !223
  %119 = bitcast %"class.std::__1::__compressed_pair.1266"* %85 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %119, i8 0, i64 16, i1 false) #12, !noalias !223
  br label %120

120:                                              ; preds = %72, %115
  %121 = getelementptr inbounds i8, i8* %74, i64 8
  %122 = bitcast i8* %121 to i64*
  store i64 %6, i64* %122, align 8, !noalias !223
  %123 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base"**
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %123, align 8, !noalias !223
  %124 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %125 = load i64, i64* %124, align 8
  %126 = add i64 %125, 1
  %127 = uitofp i64 %126 to float
  %128 = uitofp i64 %8 to float
  %129 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %130 = load float, float* %129, align 4
  %131 = fmul float %130, %128
  %132 = fcmp olt float %131, %127
  %133 = or i1 %9, %132
  br i1 %133, label %134, label %157

134:                                              ; preds = %120
  %135 = shl i64 %8, 1
  %136 = icmp ult i64 %8, 3
  %137 = tail call i64 @llvm.ctpop.i64(i64 %8) #12, !range !207
  %138 = icmp ugt i64 %137, 1
  %139 = or i1 %136, %138
  %140 = zext i1 %139 to i64
  %141 = or i64 %135, %140
  %142 = fdiv float %127, %130
  %143 = tail call float @llvm.ceil.f32(float %142) #12
  %144 = fptoui float %143 to i64
  %145 = icmp ult i64 %141, %144
  %146 = select i1 %145, i64 %144, i64 %141
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"* %0, i64 %146)
  %147 = load i64, i64* %7, align 8
  %148 = tail call i64 @llvm.ctpop.i64(i64 %147) #12, !range !207
  %149 = icmp ugt i64 %148, 1
  br i1 %149, label %153, label %150

150:                                              ; preds = %134
  %151 = add i64 %147, 4294967295
  %152 = and i64 %151, %6
  br label %157

153:                                              ; preds = %134
  %154 = icmp ult i64 %6, %147
  br i1 %154, label %157, label %155

155:                                              ; preds = %153
  %156 = urem i64 %6, %147
  br label %157

157:                                              ; preds = %155, %153, %150, %120
  %158 = phi i64 [ %8, %120 ], [ %147, %150 ], [ %147, %153 ], [ %147, %155 ]
  %159 = phi i64 [ %73, %120 ], [ %152, %150 ], [ %6, %153 ], [ %156, %155 ]
  %160 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %161 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %160, align 8
  %162 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %161, i64 %159
  %163 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %162, align 8
  %164 = icmp eq %"struct.std::__1::__hash_node_base"* %163, null
  br i1 %164, label %165, label %191

165:                                              ; preds = %157
  %166 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %167 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i64*
  %168 = load i64, i64* %167, align 8
  %169 = bitcast i8* %74 to i64*
  store i64 %168, i64* %169, align 8
  %170 = bitcast %"struct.std::__1::__hash_node_base"* %166 to i8**
  store i8* %74, i8** %170, align 8
  store %"struct.std::__1::__hash_node_base"* %166, %"struct.std::__1::__hash_node_base"** %162, align 8
  %171 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %123, align 8
  %172 = icmp eq %"struct.std::__1::__hash_node_base"* %171, null
  br i1 %172, label %198, label %173

173:                                              ; preds = %165
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %171, i64 1
  %175 = bitcast %"struct.std::__1::__hash_node_base"* %174 to i64*
  %176 = load i64, i64* %175, align 8
  %177 = tail call i64 @llvm.ctpop.i64(i64 %158) #12, !range !207
  %178 = icmp ugt i64 %177, 1
  br i1 %178, label %182, label %179

179:                                              ; preds = %173
  %180 = add i64 %158, -1
  %181 = and i64 %176, %180
  br label %186

182:                                              ; preds = %173
  %183 = icmp ult i64 %176, %158
  br i1 %183, label %186, label %184

184:                                              ; preds = %182
  %185 = urem i64 %176, %158
  br label %186

186:                                              ; preds = %179, %182, %184
  %187 = phi i64 [ %181, %179 ], [ %185, %184 ], [ %176, %182 ]
  %188 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %160, align 8
  %189 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %188, i64 %187
  %190 = bitcast %"struct.std::__1::__hash_node_base"** %189 to i8**
  br label %196

191:                                              ; preds = %157
  %192 = bitcast %"struct.std::__1::__hash_node_base"* %163 to i64*
  %193 = load i64, i64* %192, align 8
  %194 = bitcast i8* %74 to i64*
  store i64 %193, i64* %194, align 8
  %195 = bitcast %"struct.std::__1::__hash_node_base"* %163 to i8**
  br label %196

196:                                              ; preds = %186, %191
  %197 = phi i8** [ %195, %191 ], [ %190, %186 ]
  store i8* %74, i8** %197, align 8
  br label %198

198:                                              ; preds = %196, %165
  %199 = bitcast i8* %74 to %"struct.std::__1::__hash_node_base"*
  %200 = load i64, i64* %124, align 8
  %201 = add i64 %200, 1
  store i64 %201, i64* %124, align 8
  br label %202

202:                                              ; preds = %66, %47, %198
  %203 = phi i8 [ 1, %198 ], [ 0, %47 ], [ 0, %66 ]
  %204 = phi %"struct.std::__1::__hash_node_base"* [ %199, %198 ], [ %33, %47 ], [ %56, %66 ]
  %205 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } undef, %"struct.std::__1::__hash_node_base"* %204, 0
  %206 = insertvalue { %"struct.std::__1::__hash_node_base"*, i8 } %205, i8 %203, 1
  ret { %"struct.std::__1::__hash_node_base"*, i8 } %206
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE6rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !207
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !207
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !207
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE8__rehashEm(%"class.std::__1::__hash_table"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %183, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !226

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base"* %38, null
  br i1 %39, label %191, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !207
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base"* %36, %"struct.std::__1::__hash_node_base"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base"* %75, null
  br i1 %76, label %191, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %133

79:                                               ; preds = %77, %124
  %80 = phi %"struct.std::__1::__hash_node_base"* [ %128, %124 ], [ %75, %77 ]
  %81 = phi i64 [ %126, %124 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base"* [ %125, %124 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %124, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base"* %95, null
  br i1 %96, label %123, label %130

97:                                               ; preds = %130, %102
  %98 = phi %"struct.std::__1::__hash_node_base"* [ %100, %102 ], [ %80, %130 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base"* %100, null
  br i1 %101, label %110, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base"* %103 to i64*
  %105 = load i64, i64* %104, align 8
  %106 = load i64, i64* %132, align 8
  %107 = trunc i64 %106 to i32
  %108 = trunc i64 %105 to i32
  %109 = icmp eq i32 %107, %108
  br i1 %109, label %97, label %110

110:                                              ; preds = %102, %97
  %111 = ptrtoint %"struct.std::__1::__hash_node_base"* %100 to i64
  %112 = bitcast %"struct.std::__1::__hash_node_base"* %98 to i64*
  %113 = bitcast %"struct.std::__1::__hash_node_base"* %82 to i64*
  store i64 %111, i64* %113, align 8
  %114 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %114, i64 %90
  %116 = bitcast %"struct.std::__1::__hash_node_base"** %115 to i64**
  %117 = load i64*, i64** %116, align 8
  %118 = load i64, i64* %117, align 8
  store i64 %118, i64* %112, align 8
  %119 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %119, i64 %90
  %121 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %120, align 8
  %122 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %121, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %80, %"struct.std::__1::__hash_node_base"** %122, align 8
  br label %124

123:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base"* %82, %"struct.std::__1::__hash_node_base"** %94, align 8
  br label %124

124:                                              ; preds = %123, %110, %89
  %125 = phi %"struct.std::__1::__hash_node_base"* [ %80, %123 ], [ %82, %110 ], [ %80, %89 ]
  %126 = phi i64 [ %90, %123 ], [ %81, %110 ], [ %81, %89 ]
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %125, i64 0, i32 0
  %128 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %127, align 8
  %129 = icmp eq %"struct.std::__1::__hash_node_base"* %128, null
  br i1 %129, label %191, label %79

130:                                              ; preds = %92
  %131 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %80, i64 2
  %132 = bitcast %"struct.std::__1::__hash_node_base"* %131 to i64*
  br label %97

133:                                              ; preds = %77, %177
  %134 = phi %"struct.std::__1::__hash_node_base"* [ %181, %177 ], [ %75, %77 ]
  %135 = phi i64 [ %179, %177 ], [ %71, %77 ]
  %136 = phi %"struct.std::__1::__hash_node_base"* [ %178, %177 ], [ %38, %77 ]
  %137 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %134, i64 1
  %138 = bitcast %"struct.std::__1::__hash_node_base"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = and i64 %139, %78
  %141 = icmp eq i64 %140, %135
  br i1 %141, label %177, label %142

142:                                              ; preds = %133
  %143 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %144 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %143, i64 %140
  %145 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %144, align 8
  %146 = icmp eq %"struct.std::__1::__hash_node_base"* %145, null
  br i1 %146, label %150, label %147

147:                                              ; preds = %142
  %148 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %134, i64 2
  %149 = bitcast %"struct.std::__1::__hash_node_base"* %148 to i64*
  br label %151

150:                                              ; preds = %142
  store %"struct.std::__1::__hash_node_base"* %136, %"struct.std::__1::__hash_node_base"** %144, align 8
  br label %177

151:                                              ; preds = %147, %156
  %152 = phi %"struct.std::__1::__hash_node_base"* [ %154, %156 ], [ %134, %147 ]
  %153 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %152, i64 0, i32 0
  %154 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %153, align 8
  %155 = icmp eq %"struct.std::__1::__hash_node_base"* %154, null
  br i1 %155, label %164, label %156

156:                                              ; preds = %151
  %157 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %154, i64 2
  %158 = bitcast %"struct.std::__1::__hash_node_base"* %157 to i64*
  %159 = load i64, i64* %158, align 8
  %160 = load i64, i64* %149, align 8
  %161 = trunc i64 %160 to i32
  %162 = trunc i64 %159 to i32
  %163 = icmp eq i32 %161, %162
  br i1 %163, label %151, label %164

164:                                              ; preds = %151, %156
  %165 = ptrtoint %"struct.std::__1::__hash_node_base"* %154 to i64
  %166 = bitcast %"struct.std::__1::__hash_node_base"* %152 to i64*
  %167 = bitcast %"struct.std::__1::__hash_node_base"* %136 to i64*
  store i64 %165, i64* %167, align 8
  %168 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %169 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %168, i64 %140
  %170 = bitcast %"struct.std::__1::__hash_node_base"** %169 to i64**
  %171 = load i64*, i64** %170, align 8
  %172 = load i64, i64* %171, align 8
  store i64 %172, i64* %166, align 8
  %173 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %11, align 8
  %174 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %173, i64 %140
  %175 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %174, align 8
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %175, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base"* %134, %"struct.std::__1::__hash_node_base"** %176, align 8
  br label %177

177:                                              ; preds = %133, %164, %150
  %178 = phi %"struct.std::__1::__hash_node_base"* [ %134, %150 ], [ %136, %164 ], [ %134, %133 ]
  %179 = phi i64 [ %140, %150 ], [ %135, %164 ], [ %135, %133 ]
  %180 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %178, i64 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base"* %181, null
  br i1 %182, label %191, label %133

183:                                              ; preds = %2
  %184 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %185 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %184, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %184, align 8
  %186 = icmp eq %"struct.std::__1::__hash_node_base"** %185, null
  br i1 %186, label %189, label %187

187:                                              ; preds = %183
  %188 = bitcast %"struct.std::__1::__hash_node_base"** %185 to i8*
  tail call void @_ZdlPv(i8* %188) #17
  br label %189

189:                                              ; preds = %183, %187
  %190 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator", %"class.std::__1::__bucket_list_deallocator"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %190, align 8
  br label %191

191:                                              ; preds = %177, %124, %70, %35, %189
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.std::__1::__hash_node_base.1259"*, i8 } @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE25__emplace_unique_key_argsIiJRKiEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIiPvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1255"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = load i32, i32* %1, align 4
  %5 = sext i32 %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %68, label %9

9:                                                ; preds = %3
  %10 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !207
  %11 = icmp ugt i64 %10, 1
  br i1 %11, label %15, label %12

12:                                               ; preds = %9
  %13 = add i64 %7, -1
  %14 = and i64 %13, %5
  br label %19

15:                                               ; preds = %9
  %16 = icmp ugt i64 %7, %5
  br i1 %16, label %19, label %17

17:                                               ; preds = %15
  %18 = urem i64 %5, %7
  br label %19

19:                                               ; preds = %12, %15, %17
  %20 = phi i64 [ %14, %12 ], [ %18, %17 ], [ %5, %15 ]
  %21 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %21, align 8
  %23 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %22, i64 %20
  %24 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %23, align 8
  %25 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %24, null
  br i1 %25, label %68, label %26

26:                                               ; preds = %19
  %27 = add i64 %7, -1
  br i1 %11, label %28, label %50

28:                                               ; preds = %26, %45
  %29 = phi %"struct.std::__1::__hash_node_base.1259"* [ %31, %45 ], [ %24, %26 ]
  %30 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %29, i64 0, i32 0
  %31 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %30, align 8
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %31, null
  br i1 %32, label %68, label %33

33:                                               ; preds = %28
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %31, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1259"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = icmp eq i64 %36, %5
  br i1 %37, label %45, label %38

38:                                               ; preds = %33
  %39 = icmp ult i64 %36, %7
  br i1 %39, label %42, label %40

40:                                               ; preds = %38
  %41 = urem i64 %36, %7
  br label %42

42:                                               ; preds = %40, %38
  %43 = phi i64 [ %41, %40 ], [ %36, %38 ]
  %44 = icmp eq i64 %43, %20
  br i1 %44, label %45, label %68

45:                                               ; preds = %42, %33
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %31, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base.1259"* %46 to i32*
  %48 = load i32, i32* %47, align 4
  %49 = icmp eq i32 %48, %4
  br i1 %49, label %155, label %28

50:                                               ; preds = %26, %63
  %51 = phi %"struct.std::__1::__hash_node_base.1259"* [ %53, %63 ], [ %24, %26 ]
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %51, i64 0, i32 0
  %53 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %52, align 8
  %54 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %53, i64 1
  %57 = bitcast %"struct.std::__1::__hash_node_base.1259"* %56 to i64*
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, %5
  %60 = and i64 %58, %27
  %61 = icmp eq i64 %60, %20
  %62 = or i1 %59, %61
  br i1 %62, label %63, label %68

63:                                               ; preds = %55
  %64 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %53, i64 2
  %65 = bitcast %"struct.std::__1::__hash_node_base.1259"* %64 to i32*
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, %4
  br i1 %67, label %155, label %50

68:                                               ; preds = %55, %50, %42, %28, %19, %3
  %69 = phi i64 [ %20, %19 ], [ undef, %3 ], [ %20, %28 ], [ %20, %42 ], [ %20, %50 ], [ %20, %55 ]
  %70 = tail call i8* @_Znwm(i64 24) #17, !noalias !227
  %71 = getelementptr inbounds i8, i8* %70, i64 16
  %72 = bitcast i8* %71 to i32*
  %73 = load i32, i32* %2, align 4, !noalias !227
  store i32 %73, i32* %72, align 4, !noalias !227
  %74 = getelementptr inbounds i8, i8* %70, i64 8
  %75 = bitcast i8* %74 to i64*
  store i64 %5, i64* %75, align 8, !noalias !227
  %76 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.1259"**
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %76, align 8, !noalias !227
  %77 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 2, i32 0, i32 0
  %78 = load i64, i64* %77, align 8
  %79 = add i64 %78, 1
  %80 = uitofp i64 %79 to float
  %81 = uitofp i64 %7 to float
  %82 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 3, i32 0, i32 0
  %83 = load float, float* %82, align 4
  %84 = fmul float %83, %81
  %85 = fcmp olt float %84, %80
  %86 = or i1 %8, %85
  br i1 %86, label %87, label %110

87:                                               ; preds = %68
  %88 = shl i64 %7, 1
  %89 = icmp ult i64 %7, 3
  %90 = tail call i64 @llvm.ctpop.i64(i64 %7) #12, !range !207
  %91 = icmp ugt i64 %90, 1
  %92 = or i1 %89, %91
  %93 = zext i1 %92 to i64
  %94 = or i64 %88, %93
  %95 = fdiv float %80, %83
  %96 = tail call float @llvm.ceil.f32(float %95) #12
  %97 = fptoui float %96 to i64
  %98 = icmp ult i64 %94, %97
  %99 = select i1 %98, i64 %97, i64 %94
  tail call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEm(%"class.std::__1::__hash_table.1255"* %0, i64 %99)
  %100 = load i64, i64* %6, align 8
  %101 = tail call i64 @llvm.ctpop.i64(i64 %100) #12, !range !207
  %102 = icmp ugt i64 %101, 1
  br i1 %102, label %106, label %103

103:                                              ; preds = %87
  %104 = add i64 %100, -1
  %105 = and i64 %104, %5
  br label %110

106:                                              ; preds = %87
  %107 = icmp ugt i64 %100, %5
  br i1 %107, label %110, label %108

108:                                              ; preds = %106
  %109 = urem i64 %5, %100
  br label %110

110:                                              ; preds = %108, %106, %103, %68
  %111 = phi i64 [ %7, %68 ], [ %100, %103 ], [ %100, %106 ], [ %100, %108 ]
  %112 = phi i64 [ %69, %68 ], [ %105, %103 ], [ %5, %106 ], [ %109, %108 ]
  %113 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %114 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %113, align 8
  %115 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %114, i64 %112
  %116 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %115, align 8
  %117 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %116, null
  br i1 %117, label %118, label %144

118:                                              ; preds = %110
  %119 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 1, i32 0, i32 0
  %120 = bitcast %"struct.std::__1::__hash_node_base.1259"* %119 to i64*
  %121 = load i64, i64* %120, align 8
  %122 = bitcast i8* %70 to i64*
  store i64 %121, i64* %122, align 8
  %123 = bitcast %"struct.std::__1::__hash_node_base.1259"* %119 to i8**
  store i8* %70, i8** %123, align 8
  store %"struct.std::__1::__hash_node_base.1259"* %119, %"struct.std::__1::__hash_node_base.1259"** %115, align 8
  %124 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %76, align 8
  %125 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %124, null
  br i1 %125, label %151, label %126

126:                                              ; preds = %118
  %127 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %124, i64 1
  %128 = bitcast %"struct.std::__1::__hash_node_base.1259"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = tail call i64 @llvm.ctpop.i64(i64 %111) #12, !range !207
  %131 = icmp ugt i64 %130, 1
  br i1 %131, label %135, label %132

132:                                              ; preds = %126
  %133 = add i64 %111, -1
  %134 = and i64 %129, %133
  br label %139

135:                                              ; preds = %126
  %136 = icmp ult i64 %129, %111
  br i1 %136, label %139, label %137

137:                                              ; preds = %135
  %138 = urem i64 %129, %111
  br label %139

139:                                              ; preds = %132, %135, %137
  %140 = phi i64 [ %134, %132 ], [ %138, %137 ], [ %129, %135 ]
  %141 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %113, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %141, i64 %140
  %143 = bitcast %"struct.std::__1::__hash_node_base.1259"** %142 to i8**
  br label %149

144:                                              ; preds = %110
  %145 = bitcast %"struct.std::__1::__hash_node_base.1259"* %116 to i64*
  %146 = load i64, i64* %145, align 8
  %147 = bitcast i8* %70 to i64*
  store i64 %146, i64* %147, align 8
  %148 = bitcast %"struct.std::__1::__hash_node_base.1259"* %116 to i8**
  br label %149

149:                                              ; preds = %139, %144
  %150 = phi i8** [ %148, %144 ], [ %143, %139 ]
  store i8* %70, i8** %150, align 8
  br label %151

151:                                              ; preds = %149, %118
  %152 = bitcast i8* %70 to %"struct.std::__1::__hash_node_base.1259"*
  %153 = load i64, i64* %77, align 8
  %154 = add i64 %153, 1
  store i64 %154, i64* %77, align 8
  br label %155

155:                                              ; preds = %63, %45, %151
  %156 = phi i8 [ 1, %151 ], [ 0, %45 ], [ 0, %63 ]
  %157 = phi %"struct.std::__1::__hash_node_base.1259"* [ %152, %151 ], [ %31, %45 ], [ %53, %63 ]
  %158 = insertvalue { %"struct.std::__1::__hash_node_base.1259"*, i8 } undef, %"struct.std::__1::__hash_node_base.1259"* %157, 0
  %159 = insertvalue { %"struct.std::__1::__hash_node_base.1259"*, i8 } %158, i8 %156, 1
  ret { %"struct.std::__1::__hash_node_base.1259"*, i8 } %159
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6rehashEm(%"class.std::__1::__hash_table.1255"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i64 %1, 1
  br i1 %3, label %9, label %4

4:                                                ; preds = %2
  %5 = tail call i64 @llvm.ctpop.i64(i64 %1), !range !207
  %6 = icmp ugt i64 %5, 1
  br i1 %6, label %7, label %9

7:                                                ; preds = %4
  %8 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %1) #12
  br label %9

9:                                                ; preds = %2, %4, %7
  %10 = phi i64 [ %8, %7 ], [ %1, %4 ], [ 2, %2 ]
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load i64, i64* %11, align 8
  %13 = icmp ugt i64 %10, %12
  br i1 %13, label %14, label %15

14:                                               ; preds = %9
  tail call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm(%"class.std::__1::__hash_table.1255"* %0, i64 %10)
  br label %45

15:                                               ; preds = %9
  %16 = icmp ult i64 %10, %12
  br i1 %16, label %17, label %45

17:                                               ; preds = %15
  %18 = icmp ugt i64 %12, 2
  %19 = tail call i64 @llvm.ctpop.i64(i64 %12) #12, !range !207
  %20 = icmp ult i64 %19, 2
  %21 = and i1 %18, %20
  %22 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 2, i32 0, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = uitofp i64 %23 to float
  %25 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 3, i32 0, i32 0
  %26 = load float, float* %25, align 4
  %27 = fdiv float %24, %26
  %28 = tail call float @llvm.ceil.f32(float %27) #12
  %29 = fptoui float %28 to i64
  br i1 %21, label %30, label %37

30:                                               ; preds = %17
  %31 = icmp ult i64 %29, 2
  br i1 %31, label %39, label %32

32:                                               ; preds = %30
  %33 = add i64 %29, -1
  %34 = tail call i64 @llvm.ctlz.i64(i64 %33, i1 true) #12, !range !207
  %35 = sub nuw nsw i64 64, %34
  %36 = shl i64 1, %35
  br label %39

37:                                               ; preds = %17
  %38 = tail call i64 @_ZNSt3__112__next_primeEm(i64 %29) #12
  br label %39

39:                                               ; preds = %32, %30, %37
  %40 = phi i64 [ %38, %37 ], [ %36, %32 ], [ %29, %30 ]
  %41 = icmp ult i64 %10, %40
  %42 = select i1 %41, i64 %40, i64 %10
  %43 = icmp ult i64 %42, %12
  br i1 %43, label %44, label %45

44:                                               ; preds = %39
  tail call void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm(%"class.std::__1::__hash_table.1255"* %0, i64 %42)
  br label %45

45:                                               ; preds = %15, %44, %39, %14
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE8__rehashEm(%"class.std::__1::__hash_table.1255"*, i64) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %4 = icmp eq i64 %1, 0
  br i1 %4, label %179, label %5

5:                                                ; preds = %2
  %6 = icmp ugt i64 %1, 2305843009213693951
  br i1 %6, label %7, label %8

7:                                                ; preds = %5
  tail call void @abort() #16
  unreachable

8:                                                ; preds = %5
  %9 = shl i64 %1, 3
  %10 = tail call i8* @_Znwm(i64 %9) #17
  %11 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %13 = bitcast %"class.std::__1::__hash_table.1255"* %0 to i8**
  store i8* %10, i8** %13, align 8
  %14 = icmp eq %"struct.std::__1::__hash_node_base.1259"** %12, null
  br i1 %14, label %17, label %15

15:                                               ; preds = %8
  %16 = bitcast %"struct.std::__1::__hash_node_base.1259"** %12 to i8*
  tail call void @_ZdlPv(i8* %16) #17
  br label %17

17:                                               ; preds = %15, %8
  %18 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1261", %"class.std::__1::__bucket_list_deallocator.1261"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %18, align 8
  %19 = add i64 %1, -1
  %20 = and i64 %1, 3
  %21 = icmp ult i64 %19, 3
  br i1 %21, label %24, label %22

22:                                               ; preds = %17
  %23 = sub i64 %1, %20
  br label %40

24:                                               ; preds = %40, %17
  %25 = phi i64 [ 0, %17 ], [ %54, %40 ]
  %26 = icmp eq i64 %20, 0
  br i1 %26, label %35, label %27

27:                                               ; preds = %24, %27
  %28 = phi i64 [ %32, %27 ], [ %25, %24 ]
  %29 = phi i64 [ %33, %27 ], [ %20, %24 ]
  %30 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %31 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %30, i64 %28
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %31, align 8
  %32 = add nuw i64 %28, 1
  %33 = add i64 %29, -1
  %34 = icmp eq i64 %33, 0
  br i1 %34, label %35, label %27, !llvm.loop !230

35:                                               ; preds = %27, %24
  %36 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 1, i32 0, i32 0
  %37 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %36, i64 0, i32 0
  %38 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %37, align 8
  %39 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %38, null
  br i1 %39, label %187, label %57

40:                                               ; preds = %40, %22
  %41 = phi i64 [ 0, %22 ], [ %54, %40 ]
  %42 = phi i64 [ %23, %22 ], [ %55, %40 ]
  %43 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %43, i64 %41
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %44, align 8
  %45 = or i64 %41, 1
  %46 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %46, i64 %45
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %47, align 8
  %48 = or i64 %41, 2
  %49 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %50 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %49, i64 %48
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %50, align 8
  %51 = or i64 %41, 3
  %52 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %53 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %52, i64 %51
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %53, align 8
  %54 = add nuw i64 %41, 4
  %55 = add i64 %42, -4
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %24, label %40

57:                                               ; preds = %35
  %58 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %38, i64 1
  %59 = bitcast %"struct.std::__1::__hash_node_base.1259"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = tail call i64 @llvm.ctpop.i64(i64 %1) #12, !range !207
  %62 = icmp ugt i64 %61, 1
  br i1 %62, label %66, label %63

63:                                               ; preds = %57
  %64 = add i64 %1, -1
  %65 = and i64 %60, %64
  br label %70

66:                                               ; preds = %57
  %67 = icmp ult i64 %60, %1
  br i1 %67, label %70, label %68

68:                                               ; preds = %66
  %69 = urem i64 %60, %1
  br label %70

70:                                               ; preds = %63, %66, %68
  %71 = phi i64 [ %65, %63 ], [ %69, %68 ], [ %60, %66 ]
  %72 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %73 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %72, i64 %71
  store %"struct.std::__1::__hash_node_base.1259"* %36, %"struct.std::__1::__hash_node_base.1259"** %73, align 8
  %74 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %38, i64 0, i32 0
  %75 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %74, align 8
  %76 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %75, null
  br i1 %76, label %187, label %77

77:                                               ; preds = %70
  %78 = add i64 %1, -1
  br i1 %62, label %79, label %131

79:                                               ; preds = %77, %122
  %80 = phi %"struct.std::__1::__hash_node_base.1259"* [ %126, %122 ], [ %75, %77 ]
  %81 = phi i64 [ %124, %122 ], [ %71, %77 ]
  %82 = phi %"struct.std::__1::__hash_node_base.1259"* [ %123, %122 ], [ %38, %77 ]
  %83 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %80, i64 1
  %84 = bitcast %"struct.std::__1::__hash_node_base.1259"* %83 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = icmp ult i64 %85, %1
  br i1 %86, label %89, label %87

87:                                               ; preds = %79
  %88 = urem i64 %85, %1
  br label %89

89:                                               ; preds = %87, %79
  %90 = phi i64 [ %88, %87 ], [ %85, %79 ]
  %91 = icmp eq i64 %90, %81
  br i1 %91, label %122, label %92

92:                                               ; preds = %89
  %93 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %94 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %93, i64 %90
  %95 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %94, align 8
  %96 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %95, null
  br i1 %96, label %121, label %128

97:                                               ; preds = %128, %102
  %98 = phi %"struct.std::__1::__hash_node_base.1259"* [ %100, %102 ], [ %80, %128 ]
  %99 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %98, i64 0, i32 0
  %100 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %99, align 8
  %101 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %100, null
  br i1 %101, label %108, label %102

102:                                              ; preds = %97
  %103 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %100, i64 2
  %104 = bitcast %"struct.std::__1::__hash_node_base.1259"* %103 to i32*
  %105 = load i32, i32* %130, align 4
  %106 = load i32, i32* %104, align 4
  %107 = icmp eq i32 %105, %106
  br i1 %107, label %97, label %108

108:                                              ; preds = %102, %97
  %109 = ptrtoint %"struct.std::__1::__hash_node_base.1259"* %100 to i64
  %110 = bitcast %"struct.std::__1::__hash_node_base.1259"* %98 to i64*
  %111 = bitcast %"struct.std::__1::__hash_node_base.1259"* %82 to i64*
  store i64 %109, i64* %111, align 8
  %112 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %113 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %112, i64 %90
  %114 = bitcast %"struct.std::__1::__hash_node_base.1259"** %113 to i64**
  %115 = load i64*, i64** %114, align 8
  %116 = load i64, i64* %115, align 8
  store i64 %116, i64* %110, align 8
  %117 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %118 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %117, i64 %90
  %119 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %118, align 8
  %120 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %119, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1259"* %80, %"struct.std::__1::__hash_node_base.1259"** %120, align 8
  br label %122

121:                                              ; preds = %92
  store %"struct.std::__1::__hash_node_base.1259"* %82, %"struct.std::__1::__hash_node_base.1259"** %94, align 8
  br label %122

122:                                              ; preds = %121, %108, %89
  %123 = phi %"struct.std::__1::__hash_node_base.1259"* [ %80, %121 ], [ %82, %108 ], [ %80, %89 ]
  %124 = phi i64 [ %90, %121 ], [ %81, %108 ], [ %81, %89 ]
  %125 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %123, i64 0, i32 0
  %126 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %125, align 8
  %127 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %126, null
  br i1 %127, label %187, label %79

128:                                              ; preds = %92
  %129 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %80, i64 2
  %130 = bitcast %"struct.std::__1::__hash_node_base.1259"* %129 to i32*
  br label %97

131:                                              ; preds = %77, %173
  %132 = phi %"struct.std::__1::__hash_node_base.1259"* [ %177, %173 ], [ %75, %77 ]
  %133 = phi i64 [ %175, %173 ], [ %71, %77 ]
  %134 = phi %"struct.std::__1::__hash_node_base.1259"* [ %174, %173 ], [ %38, %77 ]
  %135 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %132, i64 1
  %136 = bitcast %"struct.std::__1::__hash_node_base.1259"* %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = and i64 %137, %78
  %139 = icmp eq i64 %138, %133
  br i1 %139, label %173, label %140

140:                                              ; preds = %131
  %141 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %142 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %141, i64 %138
  %143 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %142, align 8
  %144 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %143, null
  br i1 %144, label %148, label %145

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %132, i64 2
  %147 = bitcast %"struct.std::__1::__hash_node_base.1259"* %146 to i32*
  br label %149

148:                                              ; preds = %140
  store %"struct.std::__1::__hash_node_base.1259"* %134, %"struct.std::__1::__hash_node_base.1259"** %142, align 8
  br label %173

149:                                              ; preds = %145, %154
  %150 = phi %"struct.std::__1::__hash_node_base.1259"* [ %152, %154 ], [ %132, %145 ]
  %151 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %150, i64 0, i32 0
  %152 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %151, align 8
  %153 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %152, null
  br i1 %153, label %160, label %154

154:                                              ; preds = %149
  %155 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %152, i64 2
  %156 = bitcast %"struct.std::__1::__hash_node_base.1259"* %155 to i32*
  %157 = load i32, i32* %147, align 4
  %158 = load i32, i32* %156, align 4
  %159 = icmp eq i32 %157, %158
  br i1 %159, label %149, label %160

160:                                              ; preds = %149, %154
  %161 = ptrtoint %"struct.std::__1::__hash_node_base.1259"* %152 to i64
  %162 = bitcast %"struct.std::__1::__hash_node_base.1259"* %150 to i64*
  %163 = bitcast %"struct.std::__1::__hash_node_base.1259"* %134 to i64*
  store i64 %161, i64* %163, align 8
  %164 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %165 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %164, i64 %138
  %166 = bitcast %"struct.std::__1::__hash_node_base.1259"** %165 to i64**
  %167 = load i64*, i64** %166, align 8
  %168 = load i64, i64* %167, align 8
  store i64 %168, i64* %162, align 8
  %169 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %11, align 8
  %170 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %169, i64 %138
  %171 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %170, align 8
  %172 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %171, i64 0, i32 0
  store %"struct.std::__1::__hash_node_base.1259"* %132, %"struct.std::__1::__hash_node_base.1259"** %172, align 8
  br label %173

173:                                              ; preds = %131, %160, %148
  %174 = phi %"struct.std::__1::__hash_node_base.1259"* [ %132, %148 ], [ %134, %160 ], [ %132, %131 ]
  %175 = phi i64 [ %138, %148 ], [ %133, %160 ], [ %133, %131 ]
  %176 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %174, i64 0, i32 0
  %177 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %176, align 8
  %178 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %177, null
  br i1 %178, label %187, label %131

179:                                              ; preds = %2
  %180 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %181 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %180, align 8
  store %"struct.std::__1::__hash_node_base.1259"** null, %"struct.std::__1::__hash_node_base.1259"*** %180, align 8
  %182 = icmp eq %"struct.std::__1::__hash_node_base.1259"** %181, null
  br i1 %182, label %185, label %183

183:                                              ; preds = %179
  %184 = bitcast %"struct.std::__1::__hash_node_base.1259"** %181 to i8*
  tail call void @_ZdlPv(i8* %184) #17
  br label %185

185:                                              ; preds = %179, %183
  %186 = getelementptr inbounds %"class.std::__1::__bucket_list_deallocator.1261", %"class.std::__1::__bucket_list_deallocator.1261"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 0, i64* %186, align 8
  br label %187

187:                                              ; preds = %173, %122, %70, %35, %185
  ret void
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.cttz.i32(i32, i1 immarg) #14

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN2v88internal22InvalidatedSlotsFilter7IsValidEm(%"class.v8::internal::InvalidatedSlotsFilter"*, i64) local_unnamed_addr #7 comdat align 2 {
  %3 = alloca %"class.v8::internal::HeapObject", align 8
  %4 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 3
  %5 = load i64, i64* %4, align 8
  %6 = icmp ugt i64 %5, %1
  br i1 %6, label %141, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 4
  %9 = load i64, i64* %8, align 8
  %10 = icmp ugt i64 %9, %1
  %11 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 5
  br i1 %10, label %12, label %14

12:                                               ; preds = %7
  %13 = load i32, i32* %11, align 8
  br label %64

14:                                               ; preds = %7
  %15 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 0, i32 0
  %16 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 2
  %18 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %19 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %16, align 8
  br label %20

20:                                               ; preds = %14, %60
  %21 = phi %"class.std::__1::__tree_end_node"* [ %18, %14 ], [ %62, %60 ]
  %22 = phi i64 [ %9, %14 ], [ %61, %60 ]
  store i64 %22, i64* %4, align 8
  store i32 0, i32* %11, align 8
  %23 = icmp eq %"class.std::__1::__tree_end_node"* %21, %19
  br i1 %23, label %24, label %26

24:                                               ; preds = %20
  %25 = load i64, i64* %17, align 8
  store i64 %25, i64* %8, align 8
  br label %60

26:                                               ; preds = %20
  %27 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 4
  %28 = bitcast %"class.std::__1::__tree_end_node"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = add i64 %29, -1
  store i64 %30, i64* %8, align 8
  %31 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 1, i32 0
  %32 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %31, align 8
  %33 = icmp eq %"class.std::__1::__tree_node_base"* %32, null
  br i1 %33, label %34, label %42

34:                                               ; preds = %26
  %35 = bitcast %"class.std::__1::__tree_end_node"* %21 to %"class.std::__1::__tree_node_base"*
  %36 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %21, i64 2
  %37 = bitcast %"class.std::__1::__tree_end_node"* %36 to %"class.std::__1::__tree_end_node"**
  %38 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %38, i64 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, %35
  br i1 %41, label %58, label %49

42:                                               ; preds = %26, %42
  %43 = phi %"class.std::__1::__tree_node_base"* [ %45, %42 ], [ %32, %26 ]
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0, i32 0
  %45 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %44, align 8
  %46 = icmp eq %"class.std::__1::__tree_node_base"* %45, null
  br i1 %46, label %47, label %42

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %43, i64 0, i32 0
  br label %58

49:                                               ; preds = %34, %49
  %50 = phi %"class.std::__1::__tree_end_node"** [ %53, %49 ], [ %37, %34 ]
  %51 = bitcast %"class.std::__1::__tree_end_node"** %50 to %"class.std::__1::__tree_node_base"**
  %52 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %52, i64 0, i32 2
  %54 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %53, align 8
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %54, i64 0, i32 0
  %56 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %55, align 8
  %57 = icmp eq %"class.std::__1::__tree_node_base"* %56, %52
  br i1 %57, label %58, label %49

58:                                               ; preds = %49, %47, %34
  %59 = phi %"class.std::__1::__tree_end_node"* [ %48, %47 ], [ %38, %34 ], [ %54, %49 ]
  store %"class.std::__1::__tree_end_node"* %59, %"class.std::__1::__tree_end_node"** %15, align 8
  br label %60

60:                                               ; preds = %24, %58
  %61 = phi i64 [ %25, %24 ], [ %30, %58 ]
  %62 = phi %"class.std::__1::__tree_end_node"* [ %19, %24 ], [ %59, %58 ]
  %63 = icmp ugt i64 %61, %1
  br i1 %63, label %64, label %20

64:                                               ; preds = %60, %12
  %65 = phi i32 [ %13, %12 ], [ 0, %60 ]
  %66 = phi i64 [ %5, %12 ], [ %22, %60 ]
  %67 = bitcast %"class.v8::internal::HeapObject"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #12
  %68 = add i64 %66, 1
  %69 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %3, i64 0, i32 0, i32 0, i32 0
  store i64 %68, i64* %69, align 8
  %70 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 5
  %71 = icmp eq i32 %65, 0
  br i1 %71, label %72, label %80

72:                                               ; preds = %64
  %73 = and i64 %68, -4294967296
  %74 = inttoptr i64 %66 to i32*
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = zext i32 %75 to i64
  %77 = or i64 %73, %76
  %78 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %3, i64 %77) #12
  store i32 %78, i32* %70, align 8
  %79 = load i64, i64* %4, align 8
  br label %80

80:                                               ; preds = %72, %64
  %81 = phi i32 [ %78, %72 ], [ %65, %64 ]
  %82 = phi i64 [ %79, %72 ], [ %66, %64 ]
  %83 = sub i64 %1, %82
  %84 = trunc i64 %83 to i32
  %85 = icmp sgt i32 %81, %84
  br i1 %85, label %86, label %95

86:                                               ; preds = %80
  %87 = load i64, i64* %69, align 8
  %88 = and i64 %87, -4294967296
  %89 = add i64 %87, -1
  %90 = inttoptr i64 %89 to i32*
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = zext i32 %91 to i64
  %93 = or i64 %88, %92
  %94 = call zeroext i1 @_ZN2v88internal10HeapObject11IsValidSlotENS0_3MapEi(%"class.v8::internal::HeapObject"* nonnull %3, i64 %93, i32 %84) #12
  br label %139

95:                                               ; preds = %80
  %96 = load i64, i64* %8, align 8
  store i64 %96, i64* %4, align 8
  store i32 0, i32* %70, align 8
  %97 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 0, i32 0
  %98 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %97, align 8
  %99 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 1, i32 0
  %100 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %99, align 8
  %101 = icmp eq %"class.std::__1::__tree_end_node"* %98, %100
  br i1 %101, label %102, label %105

102:                                              ; preds = %95
  %103 = getelementptr inbounds %"class.v8::internal::InvalidatedSlotsFilter", %"class.v8::internal::InvalidatedSlotsFilter"* %0, i64 0, i32 2
  %104 = load i64, i64* %103, align 8
  store i64 %104, i64* %8, align 8
  br label %139

105:                                              ; preds = %95
  %106 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 4
  %107 = bitcast %"class.std::__1::__tree_end_node"* %106 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = add i64 %108, -1
  store i64 %109, i64* %8, align 8
  %110 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 1, i32 0
  %111 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %110, align 8
  %112 = icmp eq %"class.std::__1::__tree_node_base"* %111, null
  br i1 %112, label %113, label %121

113:                                              ; preds = %105
  %114 = bitcast %"class.std::__1::__tree_end_node"* %98 to %"class.std::__1::__tree_node_base"*
  %115 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %98, i64 2
  %116 = bitcast %"class.std::__1::__tree_end_node"* %115 to %"class.std::__1::__tree_end_node"**
  %117 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %116, align 8
  %118 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %117, i64 0, i32 0
  %119 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %118, align 8
  %120 = icmp eq %"class.std::__1::__tree_node_base"* %119, %114
  br i1 %120, label %137, label %128

121:                                              ; preds = %105, %121
  %122 = phi %"class.std::__1::__tree_node_base"* [ %124, %121 ], [ %111, %105 ]
  %123 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %122, i64 0, i32 0, i32 0
  %124 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %123, align 8
  %125 = icmp eq %"class.std::__1::__tree_node_base"* %124, null
  br i1 %125, label %126, label %121

126:                                              ; preds = %121
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %122, i64 0, i32 0
  br label %137

128:                                              ; preds = %113, %128
  %129 = phi %"class.std::__1::__tree_end_node"** [ %132, %128 ], [ %116, %113 ]
  %130 = bitcast %"class.std::__1::__tree_end_node"** %129 to %"class.std::__1::__tree_node_base"**
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  %132 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  %133 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %132, align 8
  %134 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %133, i64 0, i32 0
  %135 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %134, align 8
  %136 = icmp eq %"class.std::__1::__tree_node_base"* %135, %131
  br i1 %136, label %137, label %128

137:                                              ; preds = %128, %126, %113
  %138 = phi %"class.std::__1::__tree_end_node"* [ %127, %126 ], [ %117, %113 ], [ %133, %128 ]
  store %"class.std::__1::__tree_end_node"* %138, %"class.std::__1::__tree_end_node"** %97, align 8
  br label %139

139:                                              ; preds = %137, %102, %86
  %140 = phi i1 [ %94, %86 ], [ true, %102 ], [ true, %137 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #12
  br label %141

141:                                              ; preds = %2, %139
  %142 = phi i1 [ %140, %139 ], [ true, %2 ]
  ret i1 %142
}

declare zeroext i1 @_ZN2v88internal10HeapObject11IsValidSlotENS0_3MapEi(%"class.v8::internal::HeapObject"*, i64, i32) local_unnamed_addr #1

declare i8* @_ZN2v88internal12AlignedAllocEmm(i64, i64) local_unnamed_addr #1

declare void @_ZN2v88internal11MemoryChunk19ReleaseTypedSlotSetILNS0_17RememberedSetTypeE0EEEvv(%"class.v8::internal::MemoryChunk"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc i32 @"_ZN2v88internal21UpdateTypedSlotHelper21UpdateEmbeddedPointerIZZNS0_9Scavenger12ScavengePageEPNS0_11MemoryChunkEENK3$_5clENS0_8SlotTypeEmEUlNS0_19FullMaybeObjectSlotEE_EENS0_18SlotCallbackResultEPNS0_4HeapEPNS0_9RelocInfoET_"(%"class.v8::internal::Heap"*, %"class.v8::internal::RelocInfo"*, %"class.v8::internal::Scavenger"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.v8::internal::HeapObject", align 8
  %5 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %1, i64 0, i32 1
  %6 = load i8, i8* %5, align 8
  %7 = icmp eq i8 %6, 3
  %8 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %1, i64 0, i32 0
  %9 = load i64, i64* %8, align 8
  br i1 %7, label %10, label %22

10:                                               ; preds = %3
  %11 = ptrtoint %"class.v8::internal::Heap"* %0 to i64
  %12 = add i64 %11, -41416
  %13 = inttoptr i64 %12 to %"class.v8::internal::Isolate"*
  %14 = inttoptr i64 %9 to i32*
  %15 = load i32, i32* %14, align 1
  %16 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %13, i64 0, i32 0, i32 4
  %17 = load i64, i64* %16, align 8
  %18 = and i64 %17, 4294967295
  %19 = icmp eq i64 %18, 0
  tail call void @llvm.assume(i1 %19) #12
  %20 = zext i32 %15 to i64
  %21 = or i64 %17, %20
  br label %25

22:                                               ; preds = %3
  %23 = inttoptr i64 %9 to i64*
  %24 = load i64, i64* %23, align 1
  br label %25

25:                                               ; preds = %10, %22
  %26 = phi i64 [ %21, %10 ], [ %24, %22 ]
  %27 = bitcast %"class.v8::internal::HeapObject"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #12
  %28 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %4, i64 0, i32 0, i32 0, i32 0
  store i64 %26, i64* %28, align 8
  %29 = ptrtoint %"class.v8::internal::HeapObject"* %4 to i64
  %30 = and i64 %26, 1
  %31 = icmp ne i64 %30, 0
  %32 = trunc i64 %26 to i32
  %33 = icmp ne i32 %32, 3
  %34 = and i1 %33, %31
  br i1 %34, label %35, label %88

35:                                               ; preds = %25
  %36 = and i64 %26, -262144
  %37 = inttoptr i64 %36 to %"class.v8::internal::BasicMemoryChunk"*
  %38 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %37, i64 0, i32 1
  %39 = load i64, i64* %38, align 8
  %40 = and i64 %39, 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %47

42:                                               ; preds = %35
  %43 = lshr i64 %39, 4
  %44 = trunc i64 %43 to i32
  %45 = and i32 %44, 1
  %46 = xor i32 %45, 1
  br label %88

47:                                               ; preds = %35
  %48 = and i64 %26, -3
  %49 = call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %2, i64 %29, i64 %48) #12
  %50 = load i64, i64* %28, align 8
  %51 = trunc i64 %50 to i32
  %52 = icmp eq i32 %51, %32
  br i1 %52, label %88, label %53

53:                                               ; preds = %47
  %54 = load i8, i8* %5, align 8
  %55 = icmp eq i8 %54, 3
  br i1 %55, label %56, label %59

56:                                               ; preds = %53
  %57 = bitcast %"class.v8::internal::RelocInfo"* %1 to i32**
  %58 = load i32*, i32** %57, align 8
  store i32 %51, i32* %58, align 1
  br label %62

59:                                               ; preds = %53
  %60 = bitcast %"class.v8::internal::RelocInfo"* %1 to i64**
  %61 = load i64*, i64** %60, align 8
  store i64 %50, i64* %61, align 1
  br label %62

62:                                               ; preds = %59, %56
  %63 = bitcast %"class.v8::internal::RelocInfo"* %1 to i8**
  %64 = load i8*, i8** %63, align 8
  call void @_ZN2v88internal21FlushInstructionCacheEPvm(i8* %64, i64 8) #12
  %65 = getelementptr inbounds %"class.v8::internal::RelocInfo", %"class.v8::internal::RelocInfo"* %1, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0
  %66 = load i64, i64* %65, align 8
  %67 = trunc i64 %66 to i32
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %88, label %69

69:                                               ; preds = %62
  %70 = and i64 %50, -262144
  %71 = or i64 %70, 8
  %72 = inttoptr i64 %71 to i64*
  %73 = load i64, i64* %72, align 8
  %74 = and i64 %73, 24
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %69
  call void @_ZN2v88internal35Heap_GenerationalBarrierForCodeSlowENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64 %66, %"class.v8::internal::RelocInfo"* %1, i64 %50) #12
  br label %77

77:                                               ; preds = %76, %69
  %78 = and i64 %66, -262144
  %79 = or i64 %78, 8
  %80 = inttoptr i64 %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = and i64 %81, 262144
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %88, label %84

84:                                               ; preds = %77
  %85 = or i64 %78, 16
  %86 = inttoptr i64 %85 to %"class.v8::internal::Heap"**
  %87 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %86, align 16
  call void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"* %87, i64 %66, %"class.v8::internal::RelocInfo"* %1, i64 %50) #12
  br label %88

88:                                               ; preds = %42, %25, %47, %84, %77, %62
  %89 = phi i32 [ %49, %47 ], [ %49, %84 ], [ %49, %77 ], [ %49, %62 ], [ %46, %42 ], [ 1, %25 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #12
  ret i32 %89
}

declare void @_ZN2v88internal9RelocInfo18set_target_addressEmNS0_16WriteBarrierModeENS0_15ICacheFlushModeE(%"class.v8::internal::RelocInfo"*, i64, i32, i32) local_unnamed_addr #1

declare void @_ZN2v88internal21FlushInstructionCacheEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal35Heap_GenerationalBarrierForCodeSlowENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal12WriteBarrier11MarkingSlowEPNS0_4HeapENS0_4CodeEPNS0_9RelocInfoENS0_10HeapObjectE(%"class.v8::internal::Heap"*, i64, %"class.v8::internal::RelocInfo"*, i64) local_unnamed_addr #1

declare void @_ZN2v88internal13JSArrayBuffer18YoungMarkExtensionEv(%"class.v8::internal::JSArrayBuffer"*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64, i64, i32, i32, %"class.v8::internal::ScavengeVisitor"*) local_unnamed_addr #7 comdat align 2 {
  %6 = add i64 %0, 7
  %7 = inttoptr i64 %6 to i16*
  %8 = load atomic i16, i16* %7 monotonic, align 2
  %9 = icmp eq i16 %8, 1057
  br i1 %9, label %16, label %10

10:                                               ; preds = %5
  %11 = add i64 %0, 9
  %12 = inttoptr i64 %11 to i8*
  %13 = load atomic i8, i8* %12 monotonic, align 1
  %14 = icmp slt i8 %13, 0
  %15 = tail call i32 @_ZN2v88internal8JSObject13GetHeaderSizeENS0_12InstanceTypeEb(i16 zeroext %8, i1 zeroext %14) #12
  br label %16

16:                                               ; preds = %5, %10
  %17 = phi i32 [ %15, %10 ], [ 12, %5 ]
  %18 = add i64 %0, 4
  %19 = inttoptr i64 %18 to i8*
  %20 = load atomic i8, i8* %19 monotonic, align 1
  %21 = zext i8 %20 to i32
  %22 = shl nuw nsw i32 %21, 2
  %23 = icmp slt i32 %17, %22
  br i1 %23, label %26, label %24

24:                                               ; preds = %16
  %25 = add i64 %1, -1
  br label %72

26:                                               ; preds = %16
  %27 = icmp eq i32 %2, 0
  %28 = select i1 %27, i32 4, i32 %2
  %29 = sext i32 %28 to i64
  %30 = add i64 %1, -1
  %31 = add i64 %30, %29
  %32 = sext i32 %17 to i64
  %33 = add i64 %30, %32
  %34 = icmp ult i64 %31, %33
  br i1 %34, label %35, label %59

35:                                               ; preds = %26
  %36 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %4, i64 0, i32 1
  br label %37

37:                                               ; preds = %56, %35
  %38 = phi i64 [ %31, %35 ], [ %57, %56 ]
  %39 = inttoptr i64 %38 to i32*
  %40 = load i32, i32* %39, align 4
  %41 = and i64 %38, -4294967296
  %42 = zext i32 %40 to i64
  %43 = or i64 %41, %42
  %44 = and i64 %42, 1
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %56, label %46

46:                                               ; preds = %37
  %47 = and i64 %43, -262144
  %48 = inttoptr i64 %47 to %"class.v8::internal::BasicMemoryChunk"*
  %49 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %48, i64 0, i32 1
  %50 = load i64, i64* %49, align 8
  %51 = and i64 %50, 24
  %52 = icmp eq i64 %51, 0
  br i1 %52, label %56, label %53

53:                                               ; preds = %46
  %54 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %36, align 8
  %55 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %54, i64 %38, i64 %43) #12
  br label %56

56:                                               ; preds = %53, %46, %37
  %57 = add i64 %38, 4
  %58 = icmp ult i64 %57, %33
  br i1 %58, label %37, label %59

59:                                               ; preds = %56, %26
  %60 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %4, i64 0, i32 0, i32 0, i32 0
  %61 = bitcast %"class.v8::internal::ScavengeVisitor"* %4 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %62 = zext i32 %22 to i64
  br label %63

63:                                               ; preds = %59, %63
  %64 = phi i64 [ %32, %59 ], [ %70, %63 ]
  %65 = add i64 %30, %64
  %66 = add i64 %65, 4
  %67 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %61, align 8
  %68 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %67, i64 2
  %69 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %68, align 8
  tail call void %69(%"class.v8::internal::ObjectVisitor"* %60, i64 %1, i64 %65, i64 %66) #12
  %70 = add nsw i64 %64, 8
  %71 = icmp slt i64 %70, %62
  br i1 %71, label %63, label %72

72:                                               ; preds = %63, %24
  %73 = phi i64 [ %25, %24 ], [ %30, %63 ]
  %74 = phi i32 [ %2, %24 ], [ %22, %63 ]
  %75 = icmp eq i32 %74, 0
  %76 = select i1 %75, i32 4, i32 %74
  %77 = sext i32 %76 to i64
  %78 = add i64 %73, %77
  %79 = sext i32 %3 to i64
  %80 = add i64 %73, %79
  %81 = icmp ult i64 %78, %80
  br i1 %81, label %82, label %106

82:                                               ; preds = %72
  %83 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %4, i64 0, i32 1
  br label %84

84:                                               ; preds = %103, %82
  %85 = phi i64 [ %78, %82 ], [ %104, %103 ]
  %86 = inttoptr i64 %85 to i32*
  %87 = load i32, i32* %86, align 4
  %88 = and i64 %85, -4294967296
  %89 = zext i32 %87 to i64
  %90 = or i64 %88, %89
  %91 = and i64 %89, 1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %103, label %93

93:                                               ; preds = %84
  %94 = and i64 %90, -262144
  %95 = inttoptr i64 %94 to %"class.v8::internal::BasicMemoryChunk"*
  %96 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %95, i64 0, i32 1
  %97 = load i64, i64* %96, align 8
  %98 = and i64 %97, 24
  %99 = icmp eq i64 %98, 0
  br i1 %99, label %103, label %100

100:                                              ; preds = %93
  %101 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %83, align 8
  %102 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %101, i64 %85, i64 %90) #12
  br label %103

103:                                              ; preds = %100, %93, %84
  %104 = add i64 %85, 4
  %105 = icmp ult i64 %104, %80
  br i1 %105, label %84, label %106

106:                                              ; preds = %103, %72
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal18WasmInstanceObject14BodyDescriptor11IterateBodyINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiPT_(i64, i64, i32, %"class.v8::internal::ScavengeVisitor"*) local_unnamed_addr #7 comdat align 2 {
  %5 = add i64 %1, 3
  %6 = add i64 %1, 11
  %7 = icmp ult i64 %5, %6
  br i1 %7, label %8, label %32

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %3, i64 0, i32 1
  br label %10

10:                                               ; preds = %29, %8
  %11 = phi i64 [ %5, %8 ], [ %30, %29 ]
  %12 = inttoptr i64 %11 to i32*
  %13 = load i32, i32* %12, align 4
  %14 = and i64 %11, -4294967296
  %15 = zext i32 %13 to i64
  %16 = or i64 %14, %15
  %17 = and i64 %15, 1
  %18 = icmp eq i64 %17, 0
  br i1 %18, label %29, label %19

19:                                               ; preds = %10
  %20 = and i64 %16, -262144
  %21 = inttoptr i64 %20 to %"class.v8::internal::BasicMemoryChunk"*
  %22 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %21, i64 0, i32 1
  %23 = load i64, i64* %22, align 8
  %24 = and i64 %23, 24
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = load %"class.v8::internal::Scavenger"*, %"class.v8::internal::Scavenger"** %9, align 8
  %28 = tail call i32 @_ZN2v88internal9Scavenger14ScavengeObjectINS0_24CompressedHeapObjectSlotEEENS0_18SlotCallbackResultET_NS0_10HeapObjectE(%"class.v8::internal::Scavenger"* %27, i64 %11, i64 %16) #12
  br label %29

29:                                               ; preds = %26, %19, %10
  %30 = add i64 %11, 4
  %31 = icmp ult i64 %30, %6
  br i1 %31, label %10, label %32

32:                                               ; preds = %29, %4
  %33 = getelementptr inbounds %"class.v8::internal::ScavengeVisitor", %"class.v8::internal::ScavengeVisitor"* %3, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.v8::internal::ScavengeVisitor"* %3 to void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)***
  %35 = add i64 %1, 43
  %36 = add i64 %1, 47
  %37 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %38 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %37, i64 2
  %39 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %38, align 8
  tail call void %39(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %35, i64 %36) #12
  %40 = add i64 %1, 55
  %41 = add i64 %1, 59
  %42 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %43 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %42, i64 2
  %44 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %43, align 8
  tail call void %44(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %40, i64 %41) #12
  %45 = add i64 %1, 111
  %46 = add i64 %1, 115
  %47 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %48 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %47, i64 2
  %49 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %48, align 8
  tail call void %49(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %45, i64 %46) #12
  %50 = add i64 %1, 115
  %51 = add i64 %1, 119
  %52 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %53 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %52, i64 2
  %54 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %53, align 8
  tail call void %54(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %50, i64 %51) #12
  %55 = add i64 %1, 119
  %56 = add i64 %1, 123
  %57 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %58 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %57, i64 2
  %59 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %58, align 8
  tail call void %59(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %55, i64 %56) #12
  %60 = add i64 %1, 123
  %61 = add i64 %1, 127
  %62 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %63 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %62, i64 2
  %64 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %63, align 8
  tail call void %64(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %60, i64 %61) #12
  %65 = add i64 %1, 127
  %66 = add i64 %1, 131
  %67 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %68 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %67, i64 2
  %69 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %68, align 8
  tail call void %69(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %65, i64 %66) #12
  %70 = add i64 %1, 131
  %71 = add i64 %1, 135
  %72 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %73 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %72, i64 2
  %74 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %73, align 8
  tail call void %74(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %70, i64 %71) #12
  %75 = add i64 %1, 135
  %76 = add i64 %1, 139
  %77 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %78 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %77, i64 2
  %79 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %78, align 8
  tail call void %79(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %75, i64 %76) #12
  %80 = add i64 %1, 139
  %81 = add i64 %1, 143
  %82 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %83 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %82, i64 2
  %84 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %83, align 8
  tail call void %84(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %80, i64 %81) #12
  %85 = add i64 %1, 143
  %86 = add i64 %1, 147
  %87 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %88 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %87, i64 2
  %89 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %88, align 8
  tail call void %89(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %85, i64 %86) #12
  %90 = add i64 %1, 147
  %91 = add i64 %1, 151
  %92 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %93 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %92, i64 2
  %94 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %93, align 8
  tail call void %94(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %90, i64 %91) #12
  %95 = add i64 %1, 151
  %96 = add i64 %1, 155
  %97 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %98 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %97, i64 2
  %99 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %98, align 8
  tail call void %99(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %95, i64 %96) #12
  %100 = add i64 %1, 155
  %101 = add i64 %1, 159
  %102 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %103 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %102, i64 2
  %104 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %103, align 8
  tail call void %104(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %100, i64 %101) #12
  %105 = add i64 %1, 159
  %106 = add i64 %1, 163
  %107 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)**, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*** %34, align 8
  %108 = getelementptr inbounds void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %107, i64 2
  %109 = load void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)*, void (%"class.v8::internal::ObjectVisitor"*, i64, i64, i64)** %108, align 8
  tail call void %109(%"class.v8::internal::ObjectVisitor"* %33, i64 %1, i64 %105, i64 %106) #12
  tail call void @_ZN2v88internal18BodyDescriptorBase23IterateJSObjectBodyImplINS0_15ScavengeVisitorEEEvNS0_3MapENS0_10HeapObjectEiiPT_(i64 %0, i64 %1, i32 216, i32 %2, %"class.v8::internal::ScavengeVisitor"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeIiPvEEEE(%"class.std::__1::unique_ptr.1371"* noalias sret, %"class.std::__1::__hash_table.1255"*, %"struct.std::__1::__hash_node_base.1259"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base.1259"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !207
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base.1259"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.1266", %"class.std::__1::__compressed_pair.1266"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base.1259"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base.1259"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base.1259"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base.1259"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259", %"struct.std::__1::__hash_node_base.1259"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base.1259"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base.1259"**, %"struct.std::__1::__hash_node_base.1259"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base.1259"*, %"struct.std::__1::__hash_node_base.1259"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base.1259"* %25, %"struct.std::__1::__hash_node_base.1259"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base.1259"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base.1259"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base.1259"* null, %"struct.std::__1::__hash_node_base.1259"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table.1255", %"class.std::__1::__hash_table.1255"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base.1259"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1371"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1371", %"class.std::__1::unique_ptr.1371"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.1269"** %98 to %"class.std::__1::__compressed_pair.1266"**
  store %"class.std::__1::__compressed_pair.1266"* %30, %"class.std::__1::__compressed_pair.1266"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1371", %"class.std::__1::unique_ptr.1371"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE6removeENS_21__hash_const_iteratorIPNS_11__hash_nodeISD_PvEEEE(%"class.std::__1::unique_ptr.1362"* noalias sret, %"class.std::__1::__hash_table"*, %"struct.std::__1::__hash_node_base"*) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 1
  %7 = bitcast %"struct.std::__1::__hash_node_base"* %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = tail call i64 @llvm.ctpop.i64(i64 %5) #12, !range !207
  %10 = icmp ugt i64 %9, 1
  br i1 %10, label %14, label %11

11:                                               ; preds = %3
  %12 = add i64 %5, -1
  %13 = and i64 %12, %8
  br label %18

14:                                               ; preds = %3
  %15 = icmp ult i64 %8, %5
  br i1 %15, label %18, label %16

16:                                               ; preds = %14
  %17 = urem i64 %8, %5
  br label %18

18:                                               ; preds = %11, %14, %16
  %19 = phi i64 [ %13, %11 ], [ %17, %16 ], [ %8, %14 ]
  %20 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %21 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %22 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %21, i64 %19
  %23 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %24

24:                                               ; preds = %24, %18
  %25 = phi %"struct.std::__1::__hash_node_base"* [ %23, %18 ], [ %27, %24 ]
  %26 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 0, i32 0
  %27 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %26, align 8
  %28 = icmp eq %"struct.std::__1::__hash_node_base"* %27, %2
  br i1 %28, label %29, label %24

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 1
  %31 = getelementptr inbounds %"class.std::__1::__compressed_pair.9", %"class.std::__1::__compressed_pair.9"* %30, i64 0, i32 0, i32 0
  %32 = icmp eq %"struct.std::__1::__hash_node_base"* %25, %31
  br i1 %32, label %47, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %25, i64 1
  %35 = bitcast %"struct.std::__1::__hash_node_base"* %34 to i64*
  %36 = load i64, i64* %35, align 8
  br i1 %10, label %40, label %37

37:                                               ; preds = %33
  %38 = add i64 %5, -1
  %39 = and i64 %36, %38
  br label %44

40:                                               ; preds = %33
  %41 = icmp ult i64 %36, %5
  br i1 %41, label %44, label %42

42:                                               ; preds = %40
  %43 = urem i64 %36, %5
  br label %44

44:                                               ; preds = %37, %40, %42
  %45 = phi i64 [ %39, %37 ], [ %43, %42 ], [ %36, %40 ]
  %46 = icmp eq i64 %45, %19
  br i1 %46, label %66, label %47

47:                                               ; preds = %44, %29
  %48 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %49 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %48, align 8
  %50 = icmp eq %"struct.std::__1::__hash_node_base"* %49, null
  br i1 %50, label %65, label %51

51:                                               ; preds = %47
  %52 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %49, i64 1
  %53 = bitcast %"struct.std::__1::__hash_node_base"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  br i1 %10, label %58, label %55

55:                                               ; preds = %51
  %56 = add i64 %5, -1
  %57 = and i64 %54, %56
  br label %62

58:                                               ; preds = %51
  %59 = icmp ult i64 %54, %5
  br i1 %59, label %62, label %60

60:                                               ; preds = %58
  %61 = urem i64 %54, %5
  br label %62

62:                                               ; preds = %55, %58, %60
  %63 = phi i64 [ %57, %55 ], [ %61, %60 ], [ %54, %58 ]
  %64 = icmp eq i64 %63, %19
  br i1 %64, label %66, label %65

65:                                               ; preds = %62, %47
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %22, align 8
  br label %66

66:                                               ; preds = %62, %44, %65
  %67 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %2, i64 0, i32 0
  %68 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %67, align 8
  %69 = icmp eq %"struct.std::__1::__hash_node_base"* %68, null
  %70 = ptrtoint %"struct.std::__1::__hash_node_base"* %68 to i64
  br i1 %69, label %90, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %68, i64 1
  %73 = bitcast %"struct.std::__1::__hash_node_base"* %72 to i64*
  %74 = load i64, i64* %73, align 8
  br i1 %10, label %78, label %75

75:                                               ; preds = %71
  %76 = add i64 %5, -1
  %77 = and i64 %74, %76
  br label %82

78:                                               ; preds = %71
  %79 = icmp ult i64 %74, %5
  br i1 %79, label %82, label %80

80:                                               ; preds = %78
  %81 = urem i64 %74, %5
  br label %82

82:                                               ; preds = %75, %78, %80
  %83 = phi i64 [ %77, %75 ], [ %81, %80 ], [ %74, %78 ]
  %84 = icmp eq i64 %83, %19
  br i1 %84, label %90, label %85

85:                                               ; preds = %82
  %86 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %20, align 8
  %87 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %86, i64 %83
  store %"struct.std::__1::__hash_node_base"* %25, %"struct.std::__1::__hash_node_base"** %87, align 8
  %88 = bitcast %"struct.std::__1::__hash_node_base"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  br label %90

90:                                               ; preds = %85, %82, %66
  %91 = phi i64 [ %89, %85 ], [ %70, %82 ], [ %70, %66 ]
  %92 = bitcast %"struct.std::__1::__hash_node_base"* %25 to i64*
  store i64 %91, i64* %92, align 8
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %67, align 8
  %93 = getelementptr inbounds %"class.std::__1::__hash_table", %"class.std::__1::__hash_table"* %1, i64 0, i32 2, i32 0, i32 0
  %94 = load i64, i64* %93, align 8
  %95 = add i64 %94, -1
  store i64 %95, i64* %93, align 8
  %96 = ptrtoint %"struct.std::__1::__hash_node_base"* %2 to i64
  %97 = bitcast %"class.std::__1::unique_ptr.1362"* %0 to i64*
  store i64 %96, i64* %97, align 8
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.1362", %"class.std::__1::unique_ptr.1362"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %99 = bitcast %"class.std::__1::allocator.12"** %98 to %"class.std::__1::__compressed_pair.9"**
  store %"class.std::__1::__compressed_pair.9"* %30, %"class.std::__1::__compressed_pair.9"** %99, align 8
  %100 = getelementptr inbounds %"class.std::__1::unique_ptr.1362", %"class.std::__1::unique_ptr.1362"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  store i8 1, i8* %100, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistIPNS0_11MemoryChunkELi64EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1177"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %22, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #12
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #12
  %18 = tail call i8* @_Znwm(i64 528) #17
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  %20 = bitcast i8* %19 to i64*
  store i64 0, i64* %20, align 8
  %21 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %4 to i8**
  store i8* %18, i8** %21, align 8
  br label %22

22:                                               ; preds = %2, %9
  %23 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 0, i64 %3, i32 1
  %24 = load %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"*, %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %23, align 8
  %25 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment", %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %24, i64 0, i32 1
  %26 = load i64, i64* %25, align 8
  %27 = icmp eq i64 %26, 0
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %29) #12
  %30 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 1
  %31 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %24 to i64*
  store i64 %32, i64* %33, align 8
  %34 = ptrtoint %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"* %24 to i64
  store atomic volatile i64 %34, i64* %31 monotonic, align 8
  %35 = getelementptr inbounds %"class.v8::internal::Worklist.1177", %"class.v8::internal::Worklist.1177"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = atomicrmw add i64* %35, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %29) #12
  %37 = tail call i8* @_Znwm(i64 528) #17
  %38 = getelementptr inbounds i8, i8* %37, i64 8
  %39 = bitcast i8* %38 to i64*
  store i64 0, i64* %39, align 8
  %40 = bitcast %"class.v8::internal::Worklist<v8::internal::MemoryChunk *, 64>::Segment"** %23 to i8**
  store i8* %37, i8** %40, align 8
  br label %41

41:                                               ; preds = %22, %28
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN2v88internal8WorklistINS0_18EphemeronHashTableELi128EE13FlushToGlobalEi(%"class.v8::internal::Worklist.1183"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = sext i32 %1 to i64
  %4 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 0, i64 %3, i32 0
  %5 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %4, align 8
  %6 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %5, i64 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %21, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %10) #12
  %11 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 1
  %12 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %5 to i64*
  store i64 %13, i64* %14, align 8
  %15 = ptrtoint %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %5 to i64
  store atomic volatile i64 %15, i64* %12 monotonic, align 8
  %16 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %17 = atomicrmw add i64* %16, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %10) #12
  %18 = tail call i8* @_Znwm(i64 1040) #17
  %19 = getelementptr inbounds i8, i8* %18, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 1032, i1 false) #12
  %20 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %4 to i8**
  store i8* %18, i8** %20, align 8
  br label %21

21:                                               ; preds = %2, %9
  %22 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 0, i64 %3, i32 1
  %23 = load %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"*, %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %22, align 8
  %24 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment", %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %23, i64 0, i32 1
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %39, label %27

27:                                               ; preds = %21
  %28 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 0
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %28) #12
  %29 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 1
  %30 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %29 to i64*
  %31 = load i64, i64* %30, align 8
  %32 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %23 to i64*
  store i64 %31, i64* %32, align 8
  %33 = ptrtoint %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"* %23 to i64
  store atomic volatile i64 %33, i64* %30 monotonic, align 8
  %34 = getelementptr inbounds %"class.v8::internal::Worklist.1183", %"class.v8::internal::Worklist.1183"* %0, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = atomicrmw add i64* %34, i64 1 monotonic
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %28) #12
  %36 = tail call i8* @_Znwm(i64 1040) #17
  %37 = getelementptr inbounds i8, i8* %36, i64 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %37, i8 0, i64 1032, i1 false) #12
  %38 = bitcast %"class.v8::internal::Worklist<v8::internal::EphemeronHashTable, 128>::Segment"** %22 to i8**
  store i8* %36, i8** %38, align 8
  br label %39

39:                                               ; preds = %21, %27
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal9Scavenger18EvacuateThinStringINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ThinStringEi(%"class.v8::internal::Scavenger"*, i64, i64, i64, i32) local_unnamed_addr #7 comdat align 2 {
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = alloca %"class.v8::internal::HeapObject", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.1327", align 1
  %10 = alloca %"class.v8::internal::AllocationSite", align 8
  %11 = alloca %"class.v8::internal::HeapObject", align 8
  %12 = alloca %"class.v8::internal::HeapObject", align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.1327", align 1
  %15 = alloca %"class.v8::internal::AllocationSite", align 8
  %16 = alloca %"class.v8::internal::HeapObject", align 8
  %17 = alloca %"class.v8::internal::HeapObject", align 8
  %18 = alloca %"class.std::__1::tuple", align 8
  %19 = alloca %"class.std::__1::tuple.1327", align 1
  %20 = alloca %"class.v8::internal::AllocationSite", align 8
  %21 = alloca %"struct.std::__1::pair.1246", align 8
  %22 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %23 = load i8, i8* %22, align 1, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %25, label %36

25:                                               ; preds = %5
  %26 = and i64 %3, -4294967296
  %27 = add i64 %3, 11
  %28 = inttoptr i64 %27 to i32*
  %29 = load i32, i32* %28, align 4
  %30 = zext i32 %29 to i64
  %31 = or i64 %26, %30
  %32 = inttoptr i64 %2 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = and i64 %33, 2
  %35 = or i64 %31, %34
  store i64 %35, i64* %32, align 8
  br label %1711

36:                                               ; preds = %5
  %37 = and i64 %3, -262144
  %38 = inttoptr i64 %37 to %"class.v8::internal::BasicMemoryChunk"*
  %39 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %38, i64 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = and i64 %40, 24
  %42 = icmp ne i64 %41, 0
  %43 = and i64 %40, 32
  %44 = icmp ne i64 %43, 0
  %45 = and i1 %44, %42
  br i1 %45, label %46, label %101, !prof !29

46:                                               ; preds = %36
  %47 = add i64 %3, -1
  %48 = trunc i64 %1 to i32
  %49 = trunc i64 %47 to i32
  %50 = inttoptr i64 %47 to i32*
  %51 = cmpxchg volatile i32* %50, i32 %48, i32 %49 release monotonic
  %52 = extractvalue { i32, i1 } %51, 1
  br i1 %52, label %53, label %1711

53:                                               ; preds = %46
  %54 = bitcast %"struct.std::__1::pair.1246"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %54) #12
  %55 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %55, align 8
  %56 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %56, align 8
  %57 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %58 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0
  %59 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %57, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %58, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %54) #12
  %60 = sext i32 %4 to i64
  %61 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %62 = load i64, i64* %61, align 8
  %63 = add i64 %62, %60
  store i64 %63, i64* %61, align 8
  %64 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %65 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %64, align 8
  %66 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %67 = load i32, i32* %66, align 8
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %65, i64 0, i32 1, i32 0, i64 %68, i32 0
  %70 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %69, align 8
  %71 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %70, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = icmp eq i64 %72, 4
  br i1 %73, label %79, label %74

74:                                               ; preds = %53
  %75 = add i64 %72, 1
  store i64 %75, i64* %71, align 8
  %76 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %70, i64 0, i32 2, i64 %72, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %76, align 8
  %77 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %70, i64 0, i32 2, i64 %72, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %77, align 8
  %78 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %70, i64 0, i32 2, i64 %72, i32 2
  store i32 %4, i32* %78, align 8
  br label %1711

79:                                               ; preds = %53
  %80 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %65, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %80) #12
  %81 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %65, i64 0, i32 1, i32 1, i32 1
  %82 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %81 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %70 to i64*
  store i64 %83, i64* %84, align 8
  %85 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %70 to i64
  store atomic volatile i64 %85, i64* %82 monotonic, align 8
  %86 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %65, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %87 = atomicrmw add i64* %86, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %80) #12
  %88 = call i8* @_Znwm(i64 112) #17
  %89 = getelementptr inbounds i8, i8* %88, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %89, i8 0, i64 16, i1 false) #12
  %90 = getelementptr inbounds i8, i8* %88, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %90, i8 0, i64 16, i1 false) #12
  %91 = getelementptr inbounds i8, i8* %88, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %91, i8 0, i64 16, i1 false) #12
  %92 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %69 to i8**
  store i8* %88, i8** %92, align 8
  %93 = getelementptr inbounds i8, i8* %88, i64 8
  %94 = bitcast i8* %93 to i64*
  store i64 1, i64* %94, align 8
  %95 = getelementptr inbounds i8, i8* %88, i64 16
  %96 = bitcast i8* %95 to i64*
  store i64 %3, i64* %96, align 8
  %97 = getelementptr inbounds i8, i8* %88, i64 24
  %98 = bitcast i8* %97 to i64*
  store i64 %1, i64* %98, align 8
  %99 = getelementptr inbounds i8, i8* %88, i64 32
  %100 = bitcast i8* %99 to i32*
  store i32 %4, i32* %100, align 8
  br label %1711

101:                                              ; preds = %36
  %102 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %103 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 8
  %104 = add i64 %3, -1
  %105 = and i64 %104, -262144
  %106 = inttoptr i64 %105 to %"class.v8::internal::Page"*
  %107 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %103, i64 0, i32 24
  %108 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %107, align 8
  %109 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %108, i64 0, i32 5, i32 5
  %110 = load i64, i64* %109, align 8
  %111 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 1
  %112 = load i64, i64* %111, align 8
  %113 = and i64 %112, 524288
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %125, label %115

115:                                              ; preds = %101
  %116 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 3
  %117 = load i64, i64* %116, align 8
  %118 = icmp ugt i64 %117, %110
  br i1 %118, label %657, label %119

119:                                              ; preds = %115
  %120 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 4
  %121 = load i64, i64* %120, align 32
  %122 = icmp ult i64 %121, %110
  %123 = icmp ugt i64 %110, %104
  %124 = or i1 %123, %122
  br i1 %124, label %657, label %125

125:                                              ; preds = %119, %101
  %126 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %127 = icmp sgt i32 %4, 8192
  br i1 %127, label %128, label %153

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %130 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %129, align 8
  %131 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %130, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %131) #12
  %132 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %130, i64 0, i32 0
  %133 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %130, i64 0, i32 0, i32 1, i32 1
  %134 = load i64, i64* %133, align 8
  %135 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %130, i64 0, i32 0, i32 1, i32 2
  %136 = load i64, i64* %135, align 8
  %137 = sext i32 %4 to i64
  %138 = add i64 %134, %137
  %139 = icmp ult i64 %136, %138
  br i1 %139, label %149, label %140

140:                                              ; preds = %128
  %141 = add i64 %134, 1
  store i64 %138, i64* %133, align 8
  %142 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %143 = icmp eq i8 %142, 0
  br i1 %143, label %145, label %144

144:                                              ; preds = %140
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %132, i32 2) #12
  br label %145

145:                                              ; preds = %144, %140
  %146 = and i64 %141, 1
  %147 = icmp eq i64 %146, 0
  br i1 %147, label %148, label %151, !prof !29

148:                                              ; preds = %145
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

149:                                              ; preds = %128
  %150 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %130, i32 %4, i32 0, i32 2) #12
  br label %151

151:                                              ; preds = %149, %145
  %152 = phi i64 [ %150, %149 ], [ %141, %145 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %131) #12
  br label %155

153:                                              ; preds = %125
  %154 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %126, i32 %4, i32 0) #12
  br label %155

155:                                              ; preds = %153, %151
  %156 = phi i64 [ %152, %151 ], [ %154, %153 ]
  %157 = and i64 %156, 1
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %657, label %159

159:                                              ; preds = %155
  %160 = add i64 %156, -1
  %161 = inttoptr i64 %160 to i32*
  %162 = trunc i64 %1 to i32
  store atomic volatile i32 %162, i32* %161 monotonic, align 4
  %163 = add i64 %156, 3
  %164 = add i64 %3, 3
  %165 = add nsw i32 %4, -4
  %166 = sdiv i32 %165, 4
  %167 = sext i32 %166 to i64
  %168 = inttoptr i64 %163 to i32*
  %169 = inttoptr i64 %163 to i8*
  %170 = inttoptr i64 %164 to i32*
  %171 = inttoptr i64 %164 to i8*
  %172 = inttoptr i64 %163 to i8*
  %173 = add i32 %4, -1
  %174 = icmp ult i32 %173, 7
  br i1 %174, label %336, label %175

175:                                              ; preds = %159
  %176 = icmp ult i32 %166, 16
  br i1 %176, label %177, label %322

177:                                              ; preds = %175
  %178 = icmp ult i32 %166, 8
  br i1 %178, label %269, label %179

179:                                              ; preds = %177
  %180 = getelementptr i32, i32* %168, i64 %167
  %181 = bitcast i32* %180 to i8*
  %182 = getelementptr i32, i32* %170, i64 %167
  %183 = bitcast i32* %182 to i8*
  %184 = icmp ult i8* %169, %183
  %185 = icmp ult i8* %171, %181
  %186 = and i1 %184, %185
  br i1 %186, label %269, label %187

187:                                              ; preds = %179
  %188 = and i64 %167, -8
  %189 = getelementptr i32, i32* %170, i64 %188
  %190 = sub nsw i64 %167, %188
  %191 = getelementptr i32, i32* %168, i64 %188
  %192 = add nsw i64 %188, -8
  %193 = lshr exact i64 %192, 3
  %194 = add nuw nsw i64 %193, 1
  %195 = and i64 %194, 3
  %196 = icmp ult i64 %192, 24
  br i1 %196, label %248, label %197

197:                                              ; preds = %187
  %198 = sub nsw i64 %194, %195
  br label %199

199:                                              ; preds = %199, %197
  %200 = phi i64 [ 0, %197 ], [ %245, %199 ]
  %201 = phi i64 [ %198, %197 ], [ %246, %199 ]
  %202 = getelementptr i32, i32* %170, i64 %200
  %203 = getelementptr i32, i32* %168, i64 %200
  %204 = bitcast i32* %202 to <4 x i32>*
  %205 = load <4 x i32>, <4 x i32>* %204, align 4, !alias.scope !231
  %206 = getelementptr i32, i32* %202, i64 4
  %207 = bitcast i32* %206 to <4 x i32>*
  %208 = load <4 x i32>, <4 x i32>* %207, align 4, !alias.scope !231
  %209 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> %205, <4 x i32>* %209, align 4, !alias.scope !234, !noalias !231
  %210 = getelementptr i32, i32* %203, i64 4
  %211 = bitcast i32* %210 to <4 x i32>*
  store <4 x i32> %208, <4 x i32>* %211, align 4, !alias.scope !234, !noalias !231
  %212 = or i64 %200, 8
  %213 = getelementptr i32, i32* %170, i64 %212
  %214 = getelementptr i32, i32* %168, i64 %212
  %215 = bitcast i32* %213 to <4 x i32>*
  %216 = load <4 x i32>, <4 x i32>* %215, align 4, !alias.scope !231
  %217 = getelementptr i32, i32* %213, i64 4
  %218 = bitcast i32* %217 to <4 x i32>*
  %219 = load <4 x i32>, <4 x i32>* %218, align 4, !alias.scope !231
  %220 = bitcast i32* %214 to <4 x i32>*
  store <4 x i32> %216, <4 x i32>* %220, align 4, !alias.scope !234, !noalias !231
  %221 = getelementptr i32, i32* %214, i64 4
  %222 = bitcast i32* %221 to <4 x i32>*
  store <4 x i32> %219, <4 x i32>* %222, align 4, !alias.scope !234, !noalias !231
  %223 = or i64 %200, 16
  %224 = getelementptr i32, i32* %170, i64 %223
  %225 = getelementptr i32, i32* %168, i64 %223
  %226 = bitcast i32* %224 to <4 x i32>*
  %227 = load <4 x i32>, <4 x i32>* %226, align 4, !alias.scope !231
  %228 = getelementptr i32, i32* %224, i64 4
  %229 = bitcast i32* %228 to <4 x i32>*
  %230 = load <4 x i32>, <4 x i32>* %229, align 4, !alias.scope !231
  %231 = bitcast i32* %225 to <4 x i32>*
  store <4 x i32> %227, <4 x i32>* %231, align 4, !alias.scope !234, !noalias !231
  %232 = getelementptr i32, i32* %225, i64 4
  %233 = bitcast i32* %232 to <4 x i32>*
  store <4 x i32> %230, <4 x i32>* %233, align 4, !alias.scope !234, !noalias !231
  %234 = or i64 %200, 24
  %235 = getelementptr i32, i32* %170, i64 %234
  %236 = getelementptr i32, i32* %168, i64 %234
  %237 = bitcast i32* %235 to <4 x i32>*
  %238 = load <4 x i32>, <4 x i32>* %237, align 4, !alias.scope !231
  %239 = getelementptr i32, i32* %235, i64 4
  %240 = bitcast i32* %239 to <4 x i32>*
  %241 = load <4 x i32>, <4 x i32>* %240, align 4, !alias.scope !231
  %242 = bitcast i32* %236 to <4 x i32>*
  store <4 x i32> %238, <4 x i32>* %242, align 4, !alias.scope !234, !noalias !231
  %243 = getelementptr i32, i32* %236, i64 4
  %244 = bitcast i32* %243 to <4 x i32>*
  store <4 x i32> %241, <4 x i32>* %244, align 4, !alias.scope !234, !noalias !231
  %245 = add i64 %200, 32
  %246 = add i64 %201, -4
  %247 = icmp eq i64 %246, 0
  br i1 %247, label %248, label %199, !llvm.loop !236

248:                                              ; preds = %199, %187
  %249 = phi i64 [ 0, %187 ], [ %245, %199 ]
  %250 = icmp eq i64 %195, 0
  br i1 %250, label %267, label %251

251:                                              ; preds = %248, %251
  %252 = phi i64 [ %264, %251 ], [ %249, %248 ]
  %253 = phi i64 [ %265, %251 ], [ %195, %248 ]
  %254 = getelementptr i32, i32* %170, i64 %252
  %255 = getelementptr i32, i32* %168, i64 %252
  %256 = bitcast i32* %254 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4, !alias.scope !231
  %258 = getelementptr i32, i32* %254, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4, !alias.scope !231
  %261 = bitcast i32* %255 to <4 x i32>*
  store <4 x i32> %257, <4 x i32>* %261, align 4, !alias.scope !234, !noalias !231
  %262 = getelementptr i32, i32* %255, i64 4
  %263 = bitcast i32* %262 to <4 x i32>*
  store <4 x i32> %260, <4 x i32>* %263, align 4, !alias.scope !234, !noalias !231
  %264 = add i64 %252, 8
  %265 = add i64 %253, -1
  %266 = icmp eq i64 %265, 0
  br i1 %266, label %267, label %251, !llvm.loop !237

267:                                              ; preds = %251, %248
  %268 = icmp eq i64 %188, %167
  br i1 %268, label %336, label %269

269:                                              ; preds = %267, %179, %177
  %270 = phi i32* [ %170, %179 ], [ %170, %177 ], [ %189, %267 ]
  %271 = phi i64 [ %167, %179 ], [ %167, %177 ], [ %190, %267 ]
  %272 = phi i32* [ %168, %179 ], [ %168, %177 ], [ %191, %267 ]
  %273 = add nsw i64 %271, -1
  %274 = and i64 %271, 7
  %275 = icmp eq i64 %274, 0
  br i1 %275, label %287, label %276

276:                                              ; preds = %269, %276
  %277 = phi i32* [ %282, %276 ], [ %270, %269 ]
  %278 = phi i64 [ %281, %276 ], [ %271, %269 ]
  %279 = phi i32* [ %284, %276 ], [ %272, %269 ]
  %280 = phi i64 [ %285, %276 ], [ %274, %269 ]
  %281 = add i64 %278, -1
  %282 = getelementptr inbounds i32, i32* %277, i64 1
  %283 = load i32, i32* %277, align 4
  %284 = getelementptr inbounds i32, i32* %279, i64 1
  store i32 %283, i32* %279, align 4
  %285 = add i64 %280, -1
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %276, !llvm.loop !238

287:                                              ; preds = %276, %269
  %288 = phi i32* [ %270, %269 ], [ %282, %276 ]
  %289 = phi i64 [ %271, %269 ], [ %281, %276 ]
  %290 = phi i32* [ %272, %269 ], [ %284, %276 ]
  %291 = icmp ult i64 %273, 7
  br i1 %291, label %336, label %292

292:                                              ; preds = %287, %292
  %293 = phi i32* [ %318, %292 ], [ %288, %287 ]
  %294 = phi i64 [ %317, %292 ], [ %289, %287 ]
  %295 = phi i32* [ %320, %292 ], [ %290, %287 ]
  %296 = getelementptr inbounds i32, i32* %293, i64 1
  %297 = load i32, i32* %293, align 4
  %298 = getelementptr inbounds i32, i32* %295, i64 1
  store i32 %297, i32* %295, align 4
  %299 = getelementptr inbounds i32, i32* %293, i64 2
  %300 = load i32, i32* %296, align 4
  %301 = getelementptr inbounds i32, i32* %295, i64 2
  store i32 %300, i32* %298, align 4
  %302 = getelementptr inbounds i32, i32* %293, i64 3
  %303 = load i32, i32* %299, align 4
  %304 = getelementptr inbounds i32, i32* %295, i64 3
  store i32 %303, i32* %301, align 4
  %305 = getelementptr inbounds i32, i32* %293, i64 4
  %306 = load i32, i32* %302, align 4
  %307 = getelementptr inbounds i32, i32* %295, i64 4
  store i32 %306, i32* %304, align 4
  %308 = getelementptr inbounds i32, i32* %293, i64 5
  %309 = load i32, i32* %305, align 4
  %310 = getelementptr inbounds i32, i32* %295, i64 5
  store i32 %309, i32* %307, align 4
  %311 = getelementptr inbounds i32, i32* %293, i64 6
  %312 = load i32, i32* %308, align 4
  %313 = getelementptr inbounds i32, i32* %295, i64 6
  store i32 %312, i32* %310, align 4
  %314 = getelementptr inbounds i32, i32* %293, i64 7
  %315 = load i32, i32* %311, align 4
  %316 = getelementptr inbounds i32, i32* %295, i64 7
  store i32 %315, i32* %313, align 4
  %317 = add i64 %294, -8
  %318 = getelementptr inbounds i32, i32* %293, i64 8
  %319 = load i32, i32* %314, align 4
  %320 = getelementptr inbounds i32, i32* %295, i64 8
  store i32 %319, i32* %316, align 4
  %321 = icmp eq i64 %317, 0
  br i1 %321, label %336, label %292, !llvm.loop !239

322:                                              ; preds = %175
  %323 = inttoptr i64 %164 to i8*
  %324 = shl nsw i64 %167, 2
  %325 = add nsw i64 %324, -4
  %326 = lshr exact i64 %325, 2
  switch i64 %326, label %335 [
    i64 3, label %334
    i64 1, label %329
    i64 2, label %333
    i64 0, label %327
  ]

327:                                              ; preds = %322
  %328 = load i32, i32* %170, align 1
  store i32 %328, i32* %168, align 1
  br label %336

329:                                              ; preds = %322
  %330 = inttoptr i64 %164 to i64*
  %331 = inttoptr i64 %163 to i64*
  %332 = load i64, i64* %330, align 1
  store i64 %332, i64* %331, align 1
  br label %336

333:                                              ; preds = %322
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %323, i64 12, i1 false) #12
  br label %336

334:                                              ; preds = %322
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %323, i64 16, i1 false) #12
  br label %336

335:                                              ; preds = %322
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %172, i8* align 1 %323, i64 %324, i1 false) #12
  br label %336

336:                                              ; preds = %287, %292, %267, %335, %334, %333, %329, %327, %159
  %337 = trunc i64 %160 to i32
  %338 = inttoptr i64 %104 to i32*
  %339 = cmpxchg volatile i32* %338, i32 %162, i32 %337 release monotonic
  %340 = extractvalue { i32, i1 } %339, 1
  br i1 %340, label %341, label %549

341:                                              ; preds = %336
  %342 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %343 = load i8, i8* %342, align 8, !range !2
  %344 = icmp eq i8 %343, 0
  br i1 %344, label %347, label %345, !prof !60

345:                                              ; preds = %341
  %346 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %346, i64 %156, i64 %3, i32 %4) #12
  br label %347

347:                                              ; preds = %345, %341
  %348 = load i8, i8* %22, align 1, !range !2
  %349 = icmp eq i8 %348, 0
  br i1 %349, label %477, label %350

350:                                              ; preds = %347
  %351 = and i64 %156, -262144
  %352 = or i64 %351, 272
  %353 = sub i64 %156, %351
  %354 = trunc i64 %353 to i32
  %355 = lshr i32 %354, 2
  %356 = and i32 %355, 31
  %357 = shl i32 1, %356
  %358 = inttoptr i64 %352 to i32*
  %359 = lshr i64 %353, 7
  %360 = and i64 %359, 33554431
  %361 = getelementptr inbounds i32, i32* %358, i64 %360
  %362 = load atomic i32, i32* %361 acquire, align 4
  %363 = and i32 %362, %357
  %364 = icmp eq i32 %363, 0
  br i1 %364, label %374, label %365

365:                                              ; preds = %350
  %366 = shl i32 %357, 1
  %367 = icmp eq i32 %366, 0
  %368 = getelementptr inbounds i32, i32* %361, i64 1
  %369 = select i1 %367, i32 1, i32 %366
  %370 = select i1 %367, i32* %368, i32* %361
  %371 = load atomic i32, i32* %370 acquire, align 4
  %372 = and i32 %371, %369
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %477

374:                                              ; preds = %365, %350
  %375 = or i64 %37, 272
  %376 = sub i64 %3, %37
  %377 = trunc i64 %376 to i32
  %378 = lshr i32 %377, 2
  %379 = and i32 %378, 31
  %380 = shl i32 1, %379
  %381 = inttoptr i64 %375 to i32*
  %382 = lshr i64 %376, 7
  %383 = and i64 %382, 33554431
  %384 = getelementptr inbounds i32, i32* %381, i64 %383
  %385 = load atomic i32, i32* %384 acquire, align 4
  %386 = and i32 %385, %380
  %387 = icmp eq i32 %386, 0
  br i1 %387, label %408, label %388

388:                                              ; preds = %374
  %389 = shl i32 %380, 1
  %390 = icmp eq i32 %389, 0
  %391 = getelementptr inbounds i32, i32* %384, i64 1
  %392 = select i1 %390, i32 1, i32 %389
  %393 = select i1 %390, i32* %391, i32* %384
  %394 = load atomic i32, i32* %393 acquire, align 4
  %395 = and i32 %394, %392
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %408

397:                                              ; preds = %388
  %398 = load atomic i32, i32* %361 monotonic, align 4
  br label %399

399:                                              ; preds = %403, %397
  %400 = phi i32 [ %398, %397 ], [ %406, %403 ]
  %401 = and i32 %400, %357
  %402 = icmp eq i32 %401, %357
  br i1 %402, label %477, label %403

403:                                              ; preds = %399
  %404 = or i32 %400, %357
  %405 = cmpxchg volatile i32* %361, i32 %400, i32 %404 release monotonic
  %406 = extractvalue { i32, i1 } %405, 0
  %407 = extractvalue { i32, i1 } %405, 1
  br i1 %407, label %477, label %399

408:                                              ; preds = %388, %374
  %409 = load atomic i32, i32* %384 acquire, align 4
  %410 = and i32 %409, %380
  %411 = icmp eq i32 %410, 0
  br i1 %411, label %477, label %412

412:                                              ; preds = %408
  %413 = shl i32 %380, 1
  %414 = icmp eq i32 %413, 0
  %415 = getelementptr inbounds i32, i32* %384, i64 1
  %416 = select i1 %414, i32 1, i32 %413
  %417 = select i1 %414, i32* %415, i32* %384
  %418 = load atomic i32, i32* %417 acquire, align 4
  %419 = and i32 %418, %416
  %420 = icmp eq i32 %419, 0
  br i1 %420, label %477, label %421

421:                                              ; preds = %412
  %422 = load atomic i32, i32* %361 monotonic, align 4
  br label %423

423:                                              ; preds = %427, %421
  %424 = phi i32 [ %422, %421 ], [ %430, %427 ]
  %425 = and i32 %424, %357
  %426 = icmp eq i32 %425, %357
  br i1 %426, label %477, label %427

427:                                              ; preds = %423
  %428 = or i32 %424, %357
  %429 = cmpxchg volatile i32* %361, i32 %424, i32 %428 release monotonic
  %430 = extractvalue { i32, i1 } %429, 0
  %431 = extractvalue { i32, i1 } %429, 1
  br i1 %431, label %432, label %423

432:                                              ; preds = %427
  %433 = bitcast %"class.v8::internal::HeapObject"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %433) #12
  %434 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %16, i64 0, i32 0, i32 0, i32 0
  store i64 %156, i64* %434, align 8
  %435 = xor i64 %351, -1
  %436 = add i64 %156, %435
  %437 = trunc i64 %436 to i32
  %438 = lshr i32 %437, 2
  %439 = and i32 %438, 31
  %440 = shl i32 1, %439
  %441 = lshr i64 %436, 7
  %442 = and i64 %441, 33554431
  %443 = getelementptr inbounds i32, i32* %358, i64 %442
  %444 = load atomic i32, i32* %443 acquire, align 4
  %445 = and i32 %444, %440
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %476, label %447

447:                                              ; preds = %432
  %448 = shl i32 %440, 1
  %449 = icmp eq i32 %448, 0
  %450 = getelementptr inbounds i32, i32* %443, i64 1
  %451 = select i1 %449, i32 1, i32 %448
  %452 = select i1 %449, i32* %450, i32* %443
  %453 = load atomic i32, i32* %452 monotonic, align 4
  br label %454

454:                                              ; preds = %458, %447
  %455 = phi i32 [ %453, %447 ], [ %461, %458 ]
  %456 = and i32 %455, %451
  %457 = icmp eq i32 %456, %451
  br i1 %457, label %476, label %458

458:                                              ; preds = %454
  %459 = or i32 %455, %451
  %460 = cmpxchg volatile i32* %452, i32 %455, i32 %459 release monotonic
  %461 = extractvalue { i32, i1 } %460, 0
  %462 = extractvalue { i32, i1 } %460, 1
  br i1 %462, label %463, label %454

463:                                              ; preds = %458
  %464 = inttoptr i64 %351 to %"class.v8::internal::MemoryChunk"*
  %465 = load i64, i64* %434, align 8
  %466 = and i64 %465, -4294967296
  %467 = add i64 %465, -1
  %468 = inttoptr i64 %467 to i32*
  %469 = load atomic i32, i32* %468 monotonic, align 4
  %470 = zext i32 %469 to i64
  %471 = or i64 %466, %470
  %472 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %16, i64 %471) #12
  %473 = sext i32 %472 to i64
  %474 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %464, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %475 = atomicrmw add i64* %474, i64 %473 seq_cst
  br label %476

476:                                              ; preds = %454, %463, %432
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %433) #12
  br label %477

477:                                              ; preds = %403, %399, %423, %476, %412, %408, %365, %347
  %478 = bitcast %"class.v8::internal::Heap"** %102 to i64*
  %479 = load i64, i64* %478, align 8
  %480 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %481 = icmp eq i8 %480, 0
  br i1 %481, label %586, label %482

482:                                              ; preds = %477
  %483 = add i64 %1, 7
  %484 = inttoptr i64 %483 to i16*
  %485 = load atomic i16, i16* %484 monotonic, align 2
  switch i16 %485, label %586 [
    i16 1085, label %486
    i16 1057, label %486
  ]

486:                                              ; preds = %482, %482
  %487 = bitcast %"class.v8::internal::HeapObject"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %487) #12
  %488 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %17, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %488, align 8
  %489 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %17, i64 %1) #12
  %490 = sext i32 %489 to i64
  %491 = add i64 %104, %490
  %492 = add i64 %491, 4
  %493 = and i64 %492, -262144
  %494 = inttoptr i64 %493 to %"class.v8::internal::Page"*
  %495 = icmp eq %"class.v8::internal::Page"* %106, %494
  br i1 %495, label %496, label %526

496:                                              ; preds = %486
  %497 = add i64 %490, %3
  %498 = add i64 %479, -41416
  %499 = inttoptr i64 %498 to %"class.v8::internal::Isolate"*
  %500 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %499, i64 0, i32 0, i32 7, i32 0, i64 534
  %501 = load i64, i64* %500, align 8
  %502 = inttoptr i64 %491 to i32*
  %503 = load atomic i32, i32* %502 monotonic, align 4
  %504 = trunc i64 %501 to i32
  %505 = icmp eq i32 %503, %504
  br i1 %505, label %506, label %526

506:                                              ; preds = %496
  %507 = load i64, i64* %111, align 8
  %508 = and i64 %507, 524288
  %509 = icmp eq i64 %508, 0
  br i1 %509, label %527, label %510

510:                                              ; preds = %506
  %511 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 8, i32 0
  %512 = bitcast %"struct.std::__1::__atomic_base.69"* %511 to i64*
  %513 = load atomic i64, i64* %512 seq_cst, align 64
  %514 = inttoptr i64 %513 to %"class.v8::internal::SemiSpace"*
  %515 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %514, i64 0, i32 5
  %516 = load i64, i64* %515, align 8
  %517 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 3
  %518 = load i64, i64* %517, align 8
  %519 = icmp ugt i64 %518, %516
  br i1 %519, label %526, label %520

520:                                              ; preds = %510
  %521 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 4
  %522 = load i64, i64* %521, align 32
  %523 = icmp ule i64 %522, %516
  %524 = icmp ult i64 %104, %516
  %525 = or i1 %524, %523
  br i1 %525, label %526, label %527

526:                                              ; preds = %520, %510, %496, %486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #12
  br label %586

527:                                              ; preds = %520, %506
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %487) #12
  %528 = trunc i64 %497 to i32
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %586, label %530

530:                                              ; preds = %527
  %531 = and i64 %497, -4294967296
  %532 = add i64 %497, 3
  %533 = inttoptr i64 %532 to i32*
  %534 = load i32, i32* %533, align 4
  %535 = zext i32 %534 to i64
  %536 = or i64 %531, %535
  %537 = bitcast %"class.v8::internal::AllocationSite"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %537) #12
  %538 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %536, i64* %538, align 8
  %539 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %540 = bitcast %"class.std::__1::tuple"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %540) #12
  %541 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %20, %"class.v8::internal::AllocationSite"** %541, align 8
  %542 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %542) #12
  %543 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %539, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %18, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %19) #12
  %544 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %543, 0
  %545 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %544, i64 3
  %546 = bitcast %"struct.std::__1::__hash_node_base.518"* %545 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %542) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %540) #12
  %547 = load i64, i64* %546, align 8
  %548 = add i64 %547, 1
  store i64 %548, i64* %546, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %537) #12
  br label %586

549:                                              ; preds = %336
  %550 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %551 = load i64, i64* %550, align 8
  %552 = icmp eq i64 %551, 0
  br i1 %552, label %558, label %553

553:                                              ; preds = %549
  %554 = sext i32 %4 to i64
  %555 = sub i64 %551, %554
  %556 = icmp eq i64 %555, %160
  br i1 %556, label %557, label %558

557:                                              ; preds = %553
  store i64 %160, i64* %550, align 8
  br label %562

558:                                              ; preds = %553, %549
  %559 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %126, i64 0, i32 0
  %560 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %559, align 8
  %561 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %560, i64 %160, i32 %4, i32 1) #12
  br label %562

562:                                              ; preds = %558, %557
  %563 = and i64 %3, -4294967296
  %564 = load atomic i32, i32* %338 acquire, align 4
  %565 = zext i32 %564 to i64
  %566 = or i64 %563, %565
  %567 = add i64 %566, 1
  %568 = inttoptr i64 %2 to i64*
  %569 = load i64, i64* %568, align 8
  %570 = and i64 %569, 2
  %571 = or i64 %567, %570
  store i64 %571, i64* %568, align 8
  %572 = and i64 %567, 1
  %573 = icmp ne i64 %572, 0
  %574 = trunc i64 %571 to i32
  %575 = icmp ne i32 %574, 3
  %576 = and i1 %573, %575
  br i1 %576, label %577, label %1711

577:                                              ; preds = %562
  %578 = and i64 %567, -262144
  %579 = inttoptr i64 %578 to %"class.v8::internal::BasicMemoryChunk"*
  %580 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %579, i64 0, i32 1
  %581 = load i64, i64* %580, align 8
  %582 = lshr i64 %581, 4
  %583 = trunc i64 %582 to i32
  %584 = and i32 %583, 1
  %585 = xor i32 %584, 1
  br label %1711

586:                                              ; preds = %530, %527, %526, %482, %477
  %587 = inttoptr i64 %2 to i64*
  %588 = load i64, i64* %587, align 8
  %589 = and i64 %588, 2
  %590 = or i64 %589, %156
  store i64 %590, i64* %587, align 8
  %591 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %592 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %591, align 8
  %593 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %594 = load i32, i32* %593, align 8
  %595 = sext i32 %594 to i64
  %596 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %592, i64 0, i32 0, i64 %595, i32 0
  %597 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %596, align 8
  %598 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %597, i64 0, i32 1
  %599 = load i64, i64* %598, align 8
  %600 = icmp eq i64 %599, 256
  br i1 %600, label %605, label %601

601:                                              ; preds = %586
  %602 = add i64 %599, 1
  store i64 %602, i64* %598, align 8
  %603 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %597, i64 0, i32 2, i64 %599, i32 0, i32 0, i32 0, i32 0
  store i64 %156, i64* %603, align 8
  %604 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %597, i64 0, i32 2, i64 %599, i32 1
  br label %650

605:                                              ; preds = %586
  %606 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %592, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %606) #12
  %607 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %592, i64 0, i32 1, i32 1
  %608 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %607 to i64*
  %609 = load i64, i64* %608, align 8
  %610 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %597 to i64*
  store i64 %609, i64* %610, align 8
  %611 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %597 to i64
  store atomic volatile i64 %611, i64* %608 monotonic, align 8
  %612 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %592, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %613 = atomicrmw add i64* %612, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %606) #12
  %614 = call i8* @_Znwm(i64 4112) #17
  %615 = getelementptr inbounds i8, i8* %614, i64 8
  %616 = bitcast i8* %615 to i64*
  store i64 0, i64* %616, align 8
  %617 = getelementptr inbounds i8, i8* %614, i64 16
  %618 = bitcast i8* %617 to %"struct.std::__1::pair.1282"*
  %619 = getelementptr inbounds i8, i8* %614, i64 4112
  %620 = bitcast i8* %619 to %"struct.std::__1::pair.1282"*
  br label %621

621:                                              ; preds = %621, %605
  %622 = phi %"struct.std::__1::pair.1282"* [ %618, %605 ], [ %639, %621 ]
  %623 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %623, align 8
  %624 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 0, i32 1
  store i32 0, i32* %624, align 8
  %625 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %625, align 8
  %626 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 1, i32 1
  store i32 0, i32* %626, align 8
  %627 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %627, align 8
  %628 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 2, i32 1
  store i32 0, i32* %628, align 8
  %629 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %629, align 8
  %630 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 3, i32 1
  store i32 0, i32* %630, align 8
  %631 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %631, align 8
  %632 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 4, i32 1
  store i32 0, i32* %632, align 8
  %633 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %633, align 8
  %634 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 5, i32 1
  store i32 0, i32* %634, align 8
  %635 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %635, align 8
  %636 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 6, i32 1
  store i32 0, i32* %636, align 8
  %637 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %637, align 8
  %638 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 7, i32 1
  store i32 0, i32* %638, align 8
  %639 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %622, i64 8
  %640 = icmp eq %"struct.std::__1::pair.1282"* %639, %620
  br i1 %640, label %641, label %621

641:                                              ; preds = %621
  %642 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %596 to i8**
  store i8* %614, i8** %642, align 8
  %643 = bitcast i8* %614 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %644 = load i64, i64* %616, align 8
  %645 = icmp eq i64 %644, 256
  br i1 %645, label %652, label %646

646:                                              ; preds = %641
  %647 = add i64 %644, 1
  store i64 %647, i64* %616, align 8
  %648 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %643, i64 0, i32 2, i64 %644, i32 0, i32 0, i32 0, i32 0
  store i64 %156, i64* %648, align 8
  %649 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %643, i64 0, i32 2, i64 %644, i32 1
  br label %650

650:                                              ; preds = %601, %646
  %651 = phi i32* [ %649, %646 ], [ %604, %601 ]
  store i32 %4, i32* %651, align 8
  br label %652

652:                                              ; preds = %650, %641
  %653 = sext i32 %4 to i64
  %654 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %655 = load i64, i64* %654, align 8
  %656 = add i64 %655, %653
  store i64 %656, i64* %654, align 8
  br label %1711

657:                                              ; preds = %155, %119, %115
  %658 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %659 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %660 = load i64, i64* %659, align 8
  %661 = sext i32 %4 to i64
  %662 = add i64 %660, %661
  %663 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %664 = load i64, i64* %663, align 8
  %665 = icmp ugt i64 %662, %664
  br i1 %665, label %666, label %671

666:                                              ; preds = %657
  %667 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %668 = load i32, i32* %667, align 8
  %669 = sext i32 %668 to i64
  %670 = shl nsw i64 %669, 1
  br label %676

671:                                              ; preds = %657
  store i64 %662, i64* %659, align 8
  %672 = add i64 %660, 1
  %673 = and i64 %672, 1
  %674 = icmp eq i64 %673, 0
  br i1 %674, label %675, label %676, !prof !29

675:                                              ; preds = %671
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

676:                                              ; preds = %671, %666
  %677 = phi i64 [ %670, %666 ], [ %672, %671 ]
  %678 = and i64 %677, 1
  %679 = icmp eq i64 %678, 0
  br i1 %679, label %680, label %684

680:                                              ; preds = %676
  %681 = tail call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %658, i32 %4, i32 0, i32 2) #12
  %682 = and i64 %681, 1
  %683 = icmp eq i64 %682, 0
  br i1 %683, label %1180, label %684

684:                                              ; preds = %680, %676
  %685 = phi i64 [ %681, %680 ], [ %677, %676 ]
  %686 = add i64 %685, -1
  %687 = inttoptr i64 %686 to i32*
  %688 = trunc i64 %1 to i32
  store atomic volatile i32 %688, i32* %687 monotonic, align 4
  %689 = add i64 %685, 3
  %690 = add i64 %3, 3
  %691 = add nsw i32 %4, -4
  %692 = sdiv i32 %691, 4
  %693 = sext i32 %692 to i64
  %694 = inttoptr i64 %689 to i32*
  %695 = inttoptr i64 %689 to i8*
  %696 = inttoptr i64 %690 to i32*
  %697 = inttoptr i64 %690 to i8*
  %698 = inttoptr i64 %689 to i8*
  %699 = add i32 %4, -1
  %700 = icmp ult i32 %699, 7
  br i1 %700, label %862, label %701

701:                                              ; preds = %684
  %702 = icmp ult i32 %692, 16
  br i1 %702, label %703, label %848

703:                                              ; preds = %701
  %704 = icmp ult i32 %692, 8
  br i1 %704, label %795, label %705

705:                                              ; preds = %703
  %706 = getelementptr i32, i32* %694, i64 %693
  %707 = bitcast i32* %706 to i8*
  %708 = getelementptr i32, i32* %696, i64 %693
  %709 = bitcast i32* %708 to i8*
  %710 = icmp ult i8* %695, %709
  %711 = icmp ult i8* %697, %707
  %712 = and i1 %710, %711
  br i1 %712, label %795, label %713

713:                                              ; preds = %705
  %714 = and i64 %693, -8
  %715 = getelementptr i32, i32* %696, i64 %714
  %716 = sub nsw i64 %693, %714
  %717 = getelementptr i32, i32* %694, i64 %714
  %718 = add nsw i64 %714, -8
  %719 = lshr exact i64 %718, 3
  %720 = add nuw nsw i64 %719, 1
  %721 = and i64 %720, 3
  %722 = icmp ult i64 %718, 24
  br i1 %722, label %774, label %723

723:                                              ; preds = %713
  %724 = sub nsw i64 %720, %721
  br label %725

725:                                              ; preds = %725, %723
  %726 = phi i64 [ 0, %723 ], [ %771, %725 ]
  %727 = phi i64 [ %724, %723 ], [ %772, %725 ]
  %728 = getelementptr i32, i32* %696, i64 %726
  %729 = getelementptr i32, i32* %694, i64 %726
  %730 = bitcast i32* %728 to <4 x i32>*
  %731 = load <4 x i32>, <4 x i32>* %730, align 4, !alias.scope !240
  %732 = getelementptr i32, i32* %728, i64 4
  %733 = bitcast i32* %732 to <4 x i32>*
  %734 = load <4 x i32>, <4 x i32>* %733, align 4, !alias.scope !240
  %735 = bitcast i32* %729 to <4 x i32>*
  store <4 x i32> %731, <4 x i32>* %735, align 4, !alias.scope !243, !noalias !240
  %736 = getelementptr i32, i32* %729, i64 4
  %737 = bitcast i32* %736 to <4 x i32>*
  store <4 x i32> %734, <4 x i32>* %737, align 4, !alias.scope !243, !noalias !240
  %738 = or i64 %726, 8
  %739 = getelementptr i32, i32* %696, i64 %738
  %740 = getelementptr i32, i32* %694, i64 %738
  %741 = bitcast i32* %739 to <4 x i32>*
  %742 = load <4 x i32>, <4 x i32>* %741, align 4, !alias.scope !240
  %743 = getelementptr i32, i32* %739, i64 4
  %744 = bitcast i32* %743 to <4 x i32>*
  %745 = load <4 x i32>, <4 x i32>* %744, align 4, !alias.scope !240
  %746 = bitcast i32* %740 to <4 x i32>*
  store <4 x i32> %742, <4 x i32>* %746, align 4, !alias.scope !243, !noalias !240
  %747 = getelementptr i32, i32* %740, i64 4
  %748 = bitcast i32* %747 to <4 x i32>*
  store <4 x i32> %745, <4 x i32>* %748, align 4, !alias.scope !243, !noalias !240
  %749 = or i64 %726, 16
  %750 = getelementptr i32, i32* %696, i64 %749
  %751 = getelementptr i32, i32* %694, i64 %749
  %752 = bitcast i32* %750 to <4 x i32>*
  %753 = load <4 x i32>, <4 x i32>* %752, align 4, !alias.scope !240
  %754 = getelementptr i32, i32* %750, i64 4
  %755 = bitcast i32* %754 to <4 x i32>*
  %756 = load <4 x i32>, <4 x i32>* %755, align 4, !alias.scope !240
  %757 = bitcast i32* %751 to <4 x i32>*
  store <4 x i32> %753, <4 x i32>* %757, align 4, !alias.scope !243, !noalias !240
  %758 = getelementptr i32, i32* %751, i64 4
  %759 = bitcast i32* %758 to <4 x i32>*
  store <4 x i32> %756, <4 x i32>* %759, align 4, !alias.scope !243, !noalias !240
  %760 = or i64 %726, 24
  %761 = getelementptr i32, i32* %696, i64 %760
  %762 = getelementptr i32, i32* %694, i64 %760
  %763 = bitcast i32* %761 to <4 x i32>*
  %764 = load <4 x i32>, <4 x i32>* %763, align 4, !alias.scope !240
  %765 = getelementptr i32, i32* %761, i64 4
  %766 = bitcast i32* %765 to <4 x i32>*
  %767 = load <4 x i32>, <4 x i32>* %766, align 4, !alias.scope !240
  %768 = bitcast i32* %762 to <4 x i32>*
  store <4 x i32> %764, <4 x i32>* %768, align 4, !alias.scope !243, !noalias !240
  %769 = getelementptr i32, i32* %762, i64 4
  %770 = bitcast i32* %769 to <4 x i32>*
  store <4 x i32> %767, <4 x i32>* %770, align 4, !alias.scope !243, !noalias !240
  %771 = add i64 %726, 32
  %772 = add i64 %727, -4
  %773 = icmp eq i64 %772, 0
  br i1 %773, label %774, label %725, !llvm.loop !245

774:                                              ; preds = %725, %713
  %775 = phi i64 [ 0, %713 ], [ %771, %725 ]
  %776 = icmp eq i64 %721, 0
  br i1 %776, label %793, label %777

777:                                              ; preds = %774, %777
  %778 = phi i64 [ %790, %777 ], [ %775, %774 ]
  %779 = phi i64 [ %791, %777 ], [ %721, %774 ]
  %780 = getelementptr i32, i32* %696, i64 %778
  %781 = getelementptr i32, i32* %694, i64 %778
  %782 = bitcast i32* %780 to <4 x i32>*
  %783 = load <4 x i32>, <4 x i32>* %782, align 4, !alias.scope !240
  %784 = getelementptr i32, i32* %780, i64 4
  %785 = bitcast i32* %784 to <4 x i32>*
  %786 = load <4 x i32>, <4 x i32>* %785, align 4, !alias.scope !240
  %787 = bitcast i32* %781 to <4 x i32>*
  store <4 x i32> %783, <4 x i32>* %787, align 4, !alias.scope !243, !noalias !240
  %788 = getelementptr i32, i32* %781, i64 4
  %789 = bitcast i32* %788 to <4 x i32>*
  store <4 x i32> %786, <4 x i32>* %789, align 4, !alias.scope !243, !noalias !240
  %790 = add i64 %778, 8
  %791 = add i64 %779, -1
  %792 = icmp eq i64 %791, 0
  br i1 %792, label %793, label %777, !llvm.loop !246

793:                                              ; preds = %777, %774
  %794 = icmp eq i64 %714, %693
  br i1 %794, label %862, label %795

795:                                              ; preds = %793, %705, %703
  %796 = phi i32* [ %696, %705 ], [ %696, %703 ], [ %715, %793 ]
  %797 = phi i64 [ %693, %705 ], [ %693, %703 ], [ %716, %793 ]
  %798 = phi i32* [ %694, %705 ], [ %694, %703 ], [ %717, %793 ]
  %799 = add nsw i64 %797, -1
  %800 = and i64 %797, 7
  %801 = icmp eq i64 %800, 0
  br i1 %801, label %813, label %802

802:                                              ; preds = %795, %802
  %803 = phi i32* [ %808, %802 ], [ %796, %795 ]
  %804 = phi i64 [ %807, %802 ], [ %797, %795 ]
  %805 = phi i32* [ %810, %802 ], [ %798, %795 ]
  %806 = phi i64 [ %811, %802 ], [ %800, %795 ]
  %807 = add i64 %804, -1
  %808 = getelementptr inbounds i32, i32* %803, i64 1
  %809 = load i32, i32* %803, align 4
  %810 = getelementptr inbounds i32, i32* %805, i64 1
  store i32 %809, i32* %805, align 4
  %811 = add i64 %806, -1
  %812 = icmp eq i64 %811, 0
  br i1 %812, label %813, label %802, !llvm.loop !247

813:                                              ; preds = %802, %795
  %814 = phi i32* [ %796, %795 ], [ %808, %802 ]
  %815 = phi i64 [ %797, %795 ], [ %807, %802 ]
  %816 = phi i32* [ %798, %795 ], [ %810, %802 ]
  %817 = icmp ult i64 %799, 7
  br i1 %817, label %862, label %818

818:                                              ; preds = %813, %818
  %819 = phi i32* [ %844, %818 ], [ %814, %813 ]
  %820 = phi i64 [ %843, %818 ], [ %815, %813 ]
  %821 = phi i32* [ %846, %818 ], [ %816, %813 ]
  %822 = getelementptr inbounds i32, i32* %819, i64 1
  %823 = load i32, i32* %819, align 4
  %824 = getelementptr inbounds i32, i32* %821, i64 1
  store i32 %823, i32* %821, align 4
  %825 = getelementptr inbounds i32, i32* %819, i64 2
  %826 = load i32, i32* %822, align 4
  %827 = getelementptr inbounds i32, i32* %821, i64 2
  store i32 %826, i32* %824, align 4
  %828 = getelementptr inbounds i32, i32* %819, i64 3
  %829 = load i32, i32* %825, align 4
  %830 = getelementptr inbounds i32, i32* %821, i64 3
  store i32 %829, i32* %827, align 4
  %831 = getelementptr inbounds i32, i32* %819, i64 4
  %832 = load i32, i32* %828, align 4
  %833 = getelementptr inbounds i32, i32* %821, i64 4
  store i32 %832, i32* %830, align 4
  %834 = getelementptr inbounds i32, i32* %819, i64 5
  %835 = load i32, i32* %831, align 4
  %836 = getelementptr inbounds i32, i32* %821, i64 5
  store i32 %835, i32* %833, align 4
  %837 = getelementptr inbounds i32, i32* %819, i64 6
  %838 = load i32, i32* %834, align 4
  %839 = getelementptr inbounds i32, i32* %821, i64 6
  store i32 %838, i32* %836, align 4
  %840 = getelementptr inbounds i32, i32* %819, i64 7
  %841 = load i32, i32* %837, align 4
  %842 = getelementptr inbounds i32, i32* %821, i64 7
  store i32 %841, i32* %839, align 4
  %843 = add i64 %820, -8
  %844 = getelementptr inbounds i32, i32* %819, i64 8
  %845 = load i32, i32* %840, align 4
  %846 = getelementptr inbounds i32, i32* %821, i64 8
  store i32 %845, i32* %842, align 4
  %847 = icmp eq i64 %843, 0
  br i1 %847, label %862, label %818, !llvm.loop !248

848:                                              ; preds = %701
  %849 = inttoptr i64 %690 to i8*
  %850 = shl nsw i64 %693, 2
  %851 = add nsw i64 %850, -4
  %852 = lshr exact i64 %851, 2
  switch i64 %852, label %861 [
    i64 3, label %860
    i64 1, label %855
    i64 2, label %859
    i64 0, label %853
  ]

853:                                              ; preds = %848
  %854 = load i32, i32* %696, align 1
  store i32 %854, i32* %694, align 1
  br label %862

855:                                              ; preds = %848
  %856 = inttoptr i64 %690 to i64*
  %857 = inttoptr i64 %689 to i64*
  %858 = load i64, i64* %856, align 1
  store i64 %858, i64* %857, align 1
  br label %862

859:                                              ; preds = %848
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %698, i8* align 1 %849, i64 12, i1 false) #12
  br label %862

860:                                              ; preds = %848
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %698, i8* align 1 %849, i64 16, i1 false) #12
  br label %862

861:                                              ; preds = %848
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %698, i8* align 1 %849, i64 %850, i1 false) #12
  br label %862

862:                                              ; preds = %813, %818, %793, %861, %860, %859, %855, %853, %684
  %863 = trunc i64 %686 to i32
  %864 = inttoptr i64 %104 to i32*
  %865 = cmpxchg volatile i32* %864, i32 %688, i32 %863 release monotonic
  %866 = extractvalue { i32, i1 } %865, 1
  br i1 %866, label %867, label %1075

867:                                              ; preds = %862
  %868 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %869 = load i8, i8* %868, align 8, !range !2
  %870 = icmp eq i8 %869, 0
  br i1 %870, label %873, label %871, !prof !60

871:                                              ; preds = %867
  %872 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %872, i64 %685, i64 %3, i32 %4) #12
  br label %873

873:                                              ; preds = %871, %867
  %874 = load i8, i8* %22, align 1, !range !2
  %875 = icmp eq i8 %874, 0
  br i1 %875, label %1003, label %876

876:                                              ; preds = %873
  %877 = and i64 %685, -262144
  %878 = or i64 %877, 272
  %879 = sub i64 %685, %877
  %880 = trunc i64 %879 to i32
  %881 = lshr i32 %880, 2
  %882 = and i32 %881, 31
  %883 = shl i32 1, %882
  %884 = inttoptr i64 %878 to i32*
  %885 = lshr i64 %879, 7
  %886 = and i64 %885, 33554431
  %887 = getelementptr inbounds i32, i32* %884, i64 %886
  %888 = load atomic i32, i32* %887 acquire, align 4
  %889 = and i32 %888, %883
  %890 = icmp eq i32 %889, 0
  br i1 %890, label %900, label %891

891:                                              ; preds = %876
  %892 = shl i32 %883, 1
  %893 = icmp eq i32 %892, 0
  %894 = getelementptr inbounds i32, i32* %887, i64 1
  %895 = select i1 %893, i32 1, i32 %892
  %896 = select i1 %893, i32* %894, i32* %887
  %897 = load atomic i32, i32* %896 acquire, align 4
  %898 = and i32 %897, %895
  %899 = icmp eq i32 %898, 0
  br i1 %899, label %900, label %1003

900:                                              ; preds = %891, %876
  %901 = or i64 %37, 272
  %902 = sub i64 %3, %37
  %903 = trunc i64 %902 to i32
  %904 = lshr i32 %903, 2
  %905 = and i32 %904, 31
  %906 = shl i32 1, %905
  %907 = inttoptr i64 %901 to i32*
  %908 = lshr i64 %902, 7
  %909 = and i64 %908, 33554431
  %910 = getelementptr inbounds i32, i32* %907, i64 %909
  %911 = load atomic i32, i32* %910 acquire, align 4
  %912 = and i32 %911, %906
  %913 = icmp eq i32 %912, 0
  br i1 %913, label %934, label %914

914:                                              ; preds = %900
  %915 = shl i32 %906, 1
  %916 = icmp eq i32 %915, 0
  %917 = getelementptr inbounds i32, i32* %910, i64 1
  %918 = select i1 %916, i32 1, i32 %915
  %919 = select i1 %916, i32* %917, i32* %910
  %920 = load atomic i32, i32* %919 acquire, align 4
  %921 = and i32 %920, %918
  %922 = icmp eq i32 %921, 0
  br i1 %922, label %923, label %934

923:                                              ; preds = %914
  %924 = load atomic i32, i32* %887 monotonic, align 4
  br label %925

925:                                              ; preds = %929, %923
  %926 = phi i32 [ %924, %923 ], [ %932, %929 ]
  %927 = and i32 %926, %883
  %928 = icmp eq i32 %927, %883
  br i1 %928, label %1003, label %929

929:                                              ; preds = %925
  %930 = or i32 %926, %883
  %931 = cmpxchg volatile i32* %887, i32 %926, i32 %930 release monotonic
  %932 = extractvalue { i32, i1 } %931, 0
  %933 = extractvalue { i32, i1 } %931, 1
  br i1 %933, label %1003, label %925

934:                                              ; preds = %914, %900
  %935 = load atomic i32, i32* %910 acquire, align 4
  %936 = and i32 %935, %906
  %937 = icmp eq i32 %936, 0
  br i1 %937, label %1003, label %938

938:                                              ; preds = %934
  %939 = shl i32 %906, 1
  %940 = icmp eq i32 %939, 0
  %941 = getelementptr inbounds i32, i32* %910, i64 1
  %942 = select i1 %940, i32 1, i32 %939
  %943 = select i1 %940, i32* %941, i32* %910
  %944 = load atomic i32, i32* %943 acquire, align 4
  %945 = and i32 %944, %942
  %946 = icmp eq i32 %945, 0
  br i1 %946, label %1003, label %947

947:                                              ; preds = %938
  %948 = load atomic i32, i32* %887 monotonic, align 4
  br label %949

949:                                              ; preds = %953, %947
  %950 = phi i32 [ %948, %947 ], [ %956, %953 ]
  %951 = and i32 %950, %883
  %952 = icmp eq i32 %951, %883
  br i1 %952, label %1003, label %953

953:                                              ; preds = %949
  %954 = or i32 %950, %883
  %955 = cmpxchg volatile i32* %887, i32 %950, i32 %954 release monotonic
  %956 = extractvalue { i32, i1 } %955, 0
  %957 = extractvalue { i32, i1 } %955, 1
  br i1 %957, label %958, label %949

958:                                              ; preds = %953
  %959 = bitcast %"class.v8::internal::HeapObject"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %959) #12
  %960 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %685, i64* %960, align 8
  %961 = xor i64 %877, -1
  %962 = add i64 %685, %961
  %963 = trunc i64 %962 to i32
  %964 = lshr i32 %963, 2
  %965 = and i32 %964, 31
  %966 = shl i32 1, %965
  %967 = lshr i64 %962, 7
  %968 = and i64 %967, 33554431
  %969 = getelementptr inbounds i32, i32* %884, i64 %968
  %970 = load atomic i32, i32* %969 acquire, align 4
  %971 = and i32 %970, %966
  %972 = icmp eq i32 %971, 0
  br i1 %972, label %1002, label %973

973:                                              ; preds = %958
  %974 = shl i32 %966, 1
  %975 = icmp eq i32 %974, 0
  %976 = getelementptr inbounds i32, i32* %969, i64 1
  %977 = select i1 %975, i32 1, i32 %974
  %978 = select i1 %975, i32* %976, i32* %969
  %979 = load atomic i32, i32* %978 monotonic, align 4
  br label %980

980:                                              ; preds = %984, %973
  %981 = phi i32 [ %979, %973 ], [ %987, %984 ]
  %982 = and i32 %981, %977
  %983 = icmp eq i32 %982, %977
  br i1 %983, label %1002, label %984

984:                                              ; preds = %980
  %985 = or i32 %981, %977
  %986 = cmpxchg volatile i32* %978, i32 %981, i32 %985 release monotonic
  %987 = extractvalue { i32, i1 } %986, 0
  %988 = extractvalue { i32, i1 } %986, 1
  br i1 %988, label %989, label %980

989:                                              ; preds = %984
  %990 = inttoptr i64 %877 to %"class.v8::internal::MemoryChunk"*
  %991 = load i64, i64* %960, align 8
  %992 = and i64 %991, -4294967296
  %993 = add i64 %991, -1
  %994 = inttoptr i64 %993 to i32*
  %995 = load atomic i32, i32* %994 monotonic, align 4
  %996 = zext i32 %995 to i64
  %997 = or i64 %992, %996
  %998 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %11, i64 %997) #12
  %999 = sext i32 %998 to i64
  %1000 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %990, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1001 = atomicrmw add i64* %1000, i64 %999 seq_cst
  br label %1002

1002:                                             ; preds = %980, %989, %958
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %959) #12
  br label %1003

1003:                                             ; preds = %929, %925, %949, %1002, %938, %934, %891, %873
  %1004 = bitcast %"class.v8::internal::Heap"** %102 to i64*
  %1005 = load i64, i64* %1004, align 8
  %1006 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1007 = icmp eq i8 %1006, 0
  br i1 %1007, label %1110, label %1008

1008:                                             ; preds = %1003
  %1009 = add i64 %1, 7
  %1010 = inttoptr i64 %1009 to i16*
  %1011 = load atomic i16, i16* %1010 monotonic, align 2
  switch i16 %1011, label %1110 [
    i16 1085, label %1012
    i16 1057, label %1012
  ]

1012:                                             ; preds = %1008, %1008
  %1013 = bitcast %"class.v8::internal::HeapObject"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1013) #12
  %1014 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %12, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1014, align 8
  %1015 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %12, i64 %1) #12
  %1016 = sext i32 %1015 to i64
  %1017 = add i64 %104, %1016
  %1018 = add i64 %1017, 4
  %1019 = and i64 %1018, -262144
  %1020 = inttoptr i64 %1019 to %"class.v8::internal::Page"*
  %1021 = icmp eq %"class.v8::internal::Page"* %106, %1020
  br i1 %1021, label %1022, label %1052

1022:                                             ; preds = %1012
  %1023 = add i64 %1016, %3
  %1024 = add i64 %1005, -41416
  %1025 = inttoptr i64 %1024 to %"class.v8::internal::Isolate"*
  %1026 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1025, i64 0, i32 0, i32 7, i32 0, i64 534
  %1027 = load i64, i64* %1026, align 8
  %1028 = inttoptr i64 %1017 to i32*
  %1029 = load atomic i32, i32* %1028 monotonic, align 4
  %1030 = trunc i64 %1027 to i32
  %1031 = icmp eq i32 %1029, %1030
  br i1 %1031, label %1032, label %1052

1032:                                             ; preds = %1022
  %1033 = load i64, i64* %111, align 8
  %1034 = and i64 %1033, 524288
  %1035 = icmp eq i64 %1034, 0
  br i1 %1035, label %1053, label %1036

1036:                                             ; preds = %1032
  %1037 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 8, i32 0
  %1038 = bitcast %"struct.std::__1::__atomic_base.69"* %1037 to i64*
  %1039 = load atomic i64, i64* %1038 seq_cst, align 64
  %1040 = inttoptr i64 %1039 to %"class.v8::internal::SemiSpace"*
  %1041 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1040, i64 0, i32 5
  %1042 = load i64, i64* %1041, align 8
  %1043 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 3
  %1044 = load i64, i64* %1043, align 8
  %1045 = icmp ugt i64 %1044, %1042
  br i1 %1045, label %1052, label %1046

1046:                                             ; preds = %1036
  %1047 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 4
  %1048 = load i64, i64* %1047, align 32
  %1049 = icmp ule i64 %1048, %1042
  %1050 = icmp ult i64 %104, %1042
  %1051 = or i1 %1050, %1049
  br i1 %1051, label %1052, label %1053

1052:                                             ; preds = %1046, %1036, %1022, %1012
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1013) #12
  br label %1110

1053:                                             ; preds = %1046, %1032
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1013) #12
  %1054 = trunc i64 %1023 to i32
  %1055 = icmp eq i32 %1054, 0
  br i1 %1055, label %1110, label %1056

1056:                                             ; preds = %1053
  %1057 = and i64 %1023, -4294967296
  %1058 = add i64 %1023, 3
  %1059 = inttoptr i64 %1058 to i32*
  %1060 = load i32, i32* %1059, align 4
  %1061 = zext i32 %1060 to i64
  %1062 = or i64 %1057, %1061
  %1063 = bitcast %"class.v8::internal::AllocationSite"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1063) #12
  %1064 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1062, i64* %1064, align 8
  %1065 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1066 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1066) #12
  %1067 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %15, %"class.v8::internal::AllocationSite"** %1067, align 8
  %1068 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1068) #12
  %1069 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1065, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %14) #12
  %1070 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1069, 0
  %1071 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1070, i64 3
  %1072 = bitcast %"struct.std::__1::__hash_node_base.518"* %1071 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1068) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1066) #12
  %1073 = load i64, i64* %1072, align 8
  %1074 = add i64 %1073, 1
  store i64 %1074, i64* %1072, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1063) #12
  br label %1110

1075:                                             ; preds = %862
  %1076 = load i64, i64* %659, align 8
  %1077 = icmp ne i64 %1076, 0
  %1078 = sub i64 %1076, %661
  %1079 = icmp eq i64 %1078, %686
  %1080 = and i1 %1077, %1079
  br i1 %1080, label %1081, label %1082

1081:                                             ; preds = %1075
  store i64 %686, i64* %659, align 8
  br label %1086

1082:                                             ; preds = %1075
  %1083 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %1084 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1083, align 8
  %1085 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1084, i64 %686, i32 %4, i32 1) #12
  br label %1086

1086:                                             ; preds = %1082, %1081
  %1087 = and i64 %3, -4294967296
  %1088 = load atomic i32, i32* %864 acquire, align 4
  %1089 = zext i32 %1088 to i64
  %1090 = or i64 %1087, %1089
  %1091 = add i64 %1090, 1
  %1092 = inttoptr i64 %2 to i64*
  %1093 = load i64, i64* %1092, align 8
  %1094 = and i64 %1093, 2
  %1095 = or i64 %1091, %1094
  store i64 %1095, i64* %1092, align 8
  %1096 = and i64 %1091, 1
  %1097 = icmp ne i64 %1096, 0
  %1098 = trunc i64 %1095 to i32
  %1099 = icmp ne i32 %1098, 3
  %1100 = and i1 %1097, %1099
  br i1 %1100, label %1101, label %1711

1101:                                             ; preds = %1086
  %1102 = and i64 %1091, -262144
  %1103 = inttoptr i64 %1102 to %"class.v8::internal::BasicMemoryChunk"*
  %1104 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1103, i64 0, i32 1
  %1105 = load i64, i64* %1104, align 8
  %1106 = lshr i64 %1105, 4
  %1107 = trunc i64 %1106 to i32
  %1108 = and i32 %1107, 1
  %1109 = xor i32 %1108, 1
  br label %1711

1110:                                             ; preds = %1056, %1053, %1052, %1008, %1003
  %1111 = inttoptr i64 %2 to i64*
  %1112 = load i64, i64* %1111, align 8
  %1113 = and i64 %1112, 2
  %1114 = or i64 %1113, %685
  store i64 %1114, i64* %1111, align 8
  %1115 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1116 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1115, align 8
  %1117 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1118 = load i32, i32* %1117, align 8
  %1119 = sext i32 %1118 to i64
  %1120 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1116, i64 0, i32 0, i32 0, i64 %1119, i32 0
  %1121 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1120, align 8
  %1122 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1121, i64 0, i32 1
  %1123 = load i64, i64* %1122, align 8
  %1124 = icmp eq i64 %1123, 256
  br i1 %1124, label %1129, label %1125

1125:                                             ; preds = %1110
  %1126 = add i64 %1123, 1
  store i64 %1126, i64* %1122, align 8
  %1127 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1121, i64 0, i32 2, i64 %1123, i32 0, i32 0, i32 0, i32 0
  store i64 %685, i64* %1127, align 8
  %1128 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1121, i64 0, i32 2, i64 %1123, i32 1
  br label %1174

1129:                                             ; preds = %1110
  %1130 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1116, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1130) #12
  %1131 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1116, i64 0, i32 0, i32 1, i32 1
  %1132 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1131 to i64*
  %1133 = load i64, i64* %1132, align 8
  %1134 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1121 to i64*
  store i64 %1133, i64* %1134, align 8
  %1135 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1121 to i64
  store atomic volatile i64 %1135, i64* %1132 monotonic, align 8
  %1136 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1116, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1137 = atomicrmw add i64* %1136, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1130) #12
  %1138 = call i8* @_Znwm(i64 4112) #17
  %1139 = getelementptr inbounds i8, i8* %1138, i64 8
  %1140 = bitcast i8* %1139 to i64*
  store i64 0, i64* %1140, align 8
  %1141 = getelementptr inbounds i8, i8* %1138, i64 16
  %1142 = bitcast i8* %1141 to %"struct.std::__1::pair.1282"*
  %1143 = getelementptr inbounds i8, i8* %1138, i64 4112
  %1144 = bitcast i8* %1143 to %"struct.std::__1::pair.1282"*
  br label %1145

1145:                                             ; preds = %1145, %1129
  %1146 = phi %"struct.std::__1::pair.1282"* [ %1142, %1129 ], [ %1163, %1145 ]
  %1147 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1147, align 8
  %1148 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 0, i32 1
  store i32 0, i32* %1148, align 8
  %1149 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1149, align 8
  %1150 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 1, i32 1
  store i32 0, i32* %1150, align 8
  %1151 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1151, align 8
  %1152 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 2, i32 1
  store i32 0, i32* %1152, align 8
  %1153 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1153, align 8
  %1154 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 3, i32 1
  store i32 0, i32* %1154, align 8
  %1155 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1155, align 8
  %1156 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 4, i32 1
  store i32 0, i32* %1156, align 8
  %1157 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1157, align 8
  %1158 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 5, i32 1
  store i32 0, i32* %1158, align 8
  %1159 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1159, align 8
  %1160 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 6, i32 1
  store i32 0, i32* %1160, align 8
  %1161 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1161, align 8
  %1162 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 7, i32 1
  store i32 0, i32* %1162, align 8
  %1163 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1146, i64 8
  %1164 = icmp eq %"struct.std::__1::pair.1282"* %1163, %1144
  br i1 %1164, label %1165, label %1145

1165:                                             ; preds = %1145
  %1166 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1120 to i8**
  store i8* %1138, i8** %1166, align 8
  %1167 = bitcast i8* %1138 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1168 = load i64, i64* %1140, align 8
  %1169 = icmp eq i64 %1168, 256
  br i1 %1169, label %1176, label %1170

1170:                                             ; preds = %1165
  %1171 = add i64 %1168, 1
  store i64 %1171, i64* %1140, align 8
  %1172 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1167, i64 0, i32 2, i64 %1168, i32 0, i32 0, i32 0, i32 0
  store i64 %685, i64* %1172, align 8
  %1173 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1167, i64 0, i32 2, i64 %1168, i32 1
  br label %1174

1174:                                             ; preds = %1125, %1170
  %1175 = phi i32* [ %1173, %1170 ], [ %1128, %1125 ]
  store i32 %4, i32* %1175, align 8
  br label %1176

1176:                                             ; preds = %1174, %1165
  %1177 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1178 = load i64, i64* %1177, align 8
  %1179 = add i64 %1178, %661
  store i64 %1179, i64* %1177, align 8
  br label %1711

1180:                                             ; preds = %680
  %1181 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1182 = icmp sgt i32 %4, 8192
  br i1 %1182, label %1183, label %1207

1183:                                             ; preds = %1180
  %1184 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1185 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1184, align 8
  %1186 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1185, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1186) #12
  %1187 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1185, i64 0, i32 0
  %1188 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1185, i64 0, i32 0, i32 1, i32 1
  %1189 = load i64, i64* %1188, align 8
  %1190 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1185, i64 0, i32 0, i32 1, i32 2
  %1191 = load i64, i64* %1190, align 8
  %1192 = add i64 %1189, %661
  %1193 = icmp ult i64 %1191, %1192
  br i1 %1193, label %1203, label %1194

1194:                                             ; preds = %1183
  %1195 = add i64 %1189, 1
  store i64 %1192, i64* %1188, align 8
  %1196 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1197 = icmp eq i8 %1196, 0
  br i1 %1197, label %1199, label %1198

1198:                                             ; preds = %1194
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1187, i32 2) #12
  br label %1199

1199:                                             ; preds = %1198, %1194
  %1200 = and i64 %1195, 1
  %1201 = icmp eq i64 %1200, 0
  br i1 %1201, label %1202, label %1205, !prof !29

1202:                                             ; preds = %1199
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1203:                                             ; preds = %1183
  %1204 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1185, i32 %4, i32 0, i32 2) #12
  br label %1205

1205:                                             ; preds = %1203, %1199
  %1206 = phi i64 [ %1204, %1203 ], [ %1195, %1199 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1186) #12
  br label %1209

1207:                                             ; preds = %1180
  %1208 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1181, i32 %4, i32 0) #12
  br label %1209

1209:                                             ; preds = %1207, %1205
  %1210 = phi i64 [ %1206, %1205 ], [ %1208, %1207 ]
  %1211 = and i64 %1210, 1
  %1212 = icmp eq i64 %1211, 0
  br i1 %1212, label %1709, label %1213

1213:                                             ; preds = %1209
  %1214 = add i64 %1210, -1
  %1215 = inttoptr i64 %1214 to i32*
  %1216 = trunc i64 %1 to i32
  store atomic volatile i32 %1216, i32* %1215 monotonic, align 4
  %1217 = add i64 %1210, 3
  %1218 = add i64 %3, 3
  %1219 = add nsw i32 %4, -4
  %1220 = sdiv i32 %1219, 4
  %1221 = sext i32 %1220 to i64
  %1222 = inttoptr i64 %1217 to i32*
  %1223 = inttoptr i64 %1217 to i8*
  %1224 = inttoptr i64 %1218 to i32*
  %1225 = inttoptr i64 %1218 to i8*
  %1226 = inttoptr i64 %1217 to i8*
  %1227 = add i32 %4, -1
  %1228 = icmp ult i32 %1227, 7
  br i1 %1228, label %1390, label %1229

1229:                                             ; preds = %1213
  %1230 = icmp ult i32 %1220, 16
  br i1 %1230, label %1231, label %1376

1231:                                             ; preds = %1229
  %1232 = icmp ult i32 %1220, 8
  br i1 %1232, label %1323, label %1233

1233:                                             ; preds = %1231
  %1234 = getelementptr i32, i32* %1222, i64 %1221
  %1235 = bitcast i32* %1234 to i8*
  %1236 = getelementptr i32, i32* %1224, i64 %1221
  %1237 = bitcast i32* %1236 to i8*
  %1238 = icmp ult i8* %1223, %1237
  %1239 = icmp ult i8* %1225, %1235
  %1240 = and i1 %1238, %1239
  br i1 %1240, label %1323, label %1241

1241:                                             ; preds = %1233
  %1242 = and i64 %1221, -8
  %1243 = getelementptr i32, i32* %1224, i64 %1242
  %1244 = sub nsw i64 %1221, %1242
  %1245 = getelementptr i32, i32* %1222, i64 %1242
  %1246 = add nsw i64 %1242, -8
  %1247 = lshr exact i64 %1246, 3
  %1248 = add nuw nsw i64 %1247, 1
  %1249 = and i64 %1248, 3
  %1250 = icmp ult i64 %1246, 24
  br i1 %1250, label %1302, label %1251

1251:                                             ; preds = %1241
  %1252 = sub nsw i64 %1248, %1249
  br label %1253

1253:                                             ; preds = %1253, %1251
  %1254 = phi i64 [ 0, %1251 ], [ %1299, %1253 ]
  %1255 = phi i64 [ %1252, %1251 ], [ %1300, %1253 ]
  %1256 = getelementptr i32, i32* %1224, i64 %1254
  %1257 = getelementptr i32, i32* %1222, i64 %1254
  %1258 = bitcast i32* %1256 to <4 x i32>*
  %1259 = load <4 x i32>, <4 x i32>* %1258, align 4, !alias.scope !249
  %1260 = getelementptr i32, i32* %1256, i64 4
  %1261 = bitcast i32* %1260 to <4 x i32>*
  %1262 = load <4 x i32>, <4 x i32>* %1261, align 4, !alias.scope !249
  %1263 = bitcast i32* %1257 to <4 x i32>*
  store <4 x i32> %1259, <4 x i32>* %1263, align 4, !alias.scope !252, !noalias !249
  %1264 = getelementptr i32, i32* %1257, i64 4
  %1265 = bitcast i32* %1264 to <4 x i32>*
  store <4 x i32> %1262, <4 x i32>* %1265, align 4, !alias.scope !252, !noalias !249
  %1266 = or i64 %1254, 8
  %1267 = getelementptr i32, i32* %1224, i64 %1266
  %1268 = getelementptr i32, i32* %1222, i64 %1266
  %1269 = bitcast i32* %1267 to <4 x i32>*
  %1270 = load <4 x i32>, <4 x i32>* %1269, align 4, !alias.scope !249
  %1271 = getelementptr i32, i32* %1267, i64 4
  %1272 = bitcast i32* %1271 to <4 x i32>*
  %1273 = load <4 x i32>, <4 x i32>* %1272, align 4, !alias.scope !249
  %1274 = bitcast i32* %1268 to <4 x i32>*
  store <4 x i32> %1270, <4 x i32>* %1274, align 4, !alias.scope !252, !noalias !249
  %1275 = getelementptr i32, i32* %1268, i64 4
  %1276 = bitcast i32* %1275 to <4 x i32>*
  store <4 x i32> %1273, <4 x i32>* %1276, align 4, !alias.scope !252, !noalias !249
  %1277 = or i64 %1254, 16
  %1278 = getelementptr i32, i32* %1224, i64 %1277
  %1279 = getelementptr i32, i32* %1222, i64 %1277
  %1280 = bitcast i32* %1278 to <4 x i32>*
  %1281 = load <4 x i32>, <4 x i32>* %1280, align 4, !alias.scope !249
  %1282 = getelementptr i32, i32* %1278, i64 4
  %1283 = bitcast i32* %1282 to <4 x i32>*
  %1284 = load <4 x i32>, <4 x i32>* %1283, align 4, !alias.scope !249
  %1285 = bitcast i32* %1279 to <4 x i32>*
  store <4 x i32> %1281, <4 x i32>* %1285, align 4, !alias.scope !252, !noalias !249
  %1286 = getelementptr i32, i32* %1279, i64 4
  %1287 = bitcast i32* %1286 to <4 x i32>*
  store <4 x i32> %1284, <4 x i32>* %1287, align 4, !alias.scope !252, !noalias !249
  %1288 = or i64 %1254, 24
  %1289 = getelementptr i32, i32* %1224, i64 %1288
  %1290 = getelementptr i32, i32* %1222, i64 %1288
  %1291 = bitcast i32* %1289 to <4 x i32>*
  %1292 = load <4 x i32>, <4 x i32>* %1291, align 4, !alias.scope !249
  %1293 = getelementptr i32, i32* %1289, i64 4
  %1294 = bitcast i32* %1293 to <4 x i32>*
  %1295 = load <4 x i32>, <4 x i32>* %1294, align 4, !alias.scope !249
  %1296 = bitcast i32* %1290 to <4 x i32>*
  store <4 x i32> %1292, <4 x i32>* %1296, align 4, !alias.scope !252, !noalias !249
  %1297 = getelementptr i32, i32* %1290, i64 4
  %1298 = bitcast i32* %1297 to <4 x i32>*
  store <4 x i32> %1295, <4 x i32>* %1298, align 4, !alias.scope !252, !noalias !249
  %1299 = add i64 %1254, 32
  %1300 = add i64 %1255, -4
  %1301 = icmp eq i64 %1300, 0
  br i1 %1301, label %1302, label %1253, !llvm.loop !254

1302:                                             ; preds = %1253, %1241
  %1303 = phi i64 [ 0, %1241 ], [ %1299, %1253 ]
  %1304 = icmp eq i64 %1249, 0
  br i1 %1304, label %1321, label %1305

1305:                                             ; preds = %1302, %1305
  %1306 = phi i64 [ %1318, %1305 ], [ %1303, %1302 ]
  %1307 = phi i64 [ %1319, %1305 ], [ %1249, %1302 ]
  %1308 = getelementptr i32, i32* %1224, i64 %1306
  %1309 = getelementptr i32, i32* %1222, i64 %1306
  %1310 = bitcast i32* %1308 to <4 x i32>*
  %1311 = load <4 x i32>, <4 x i32>* %1310, align 4, !alias.scope !249
  %1312 = getelementptr i32, i32* %1308, i64 4
  %1313 = bitcast i32* %1312 to <4 x i32>*
  %1314 = load <4 x i32>, <4 x i32>* %1313, align 4, !alias.scope !249
  %1315 = bitcast i32* %1309 to <4 x i32>*
  store <4 x i32> %1311, <4 x i32>* %1315, align 4, !alias.scope !252, !noalias !249
  %1316 = getelementptr i32, i32* %1309, i64 4
  %1317 = bitcast i32* %1316 to <4 x i32>*
  store <4 x i32> %1314, <4 x i32>* %1317, align 4, !alias.scope !252, !noalias !249
  %1318 = add i64 %1306, 8
  %1319 = add i64 %1307, -1
  %1320 = icmp eq i64 %1319, 0
  br i1 %1320, label %1321, label %1305, !llvm.loop !255

1321:                                             ; preds = %1305, %1302
  %1322 = icmp eq i64 %1242, %1221
  br i1 %1322, label %1390, label %1323

1323:                                             ; preds = %1321, %1233, %1231
  %1324 = phi i32* [ %1224, %1233 ], [ %1224, %1231 ], [ %1243, %1321 ]
  %1325 = phi i64 [ %1221, %1233 ], [ %1221, %1231 ], [ %1244, %1321 ]
  %1326 = phi i32* [ %1222, %1233 ], [ %1222, %1231 ], [ %1245, %1321 ]
  %1327 = add nsw i64 %1325, -1
  %1328 = and i64 %1325, 7
  %1329 = icmp eq i64 %1328, 0
  br i1 %1329, label %1341, label %1330

1330:                                             ; preds = %1323, %1330
  %1331 = phi i32* [ %1336, %1330 ], [ %1324, %1323 ]
  %1332 = phi i64 [ %1335, %1330 ], [ %1325, %1323 ]
  %1333 = phi i32* [ %1338, %1330 ], [ %1326, %1323 ]
  %1334 = phi i64 [ %1339, %1330 ], [ %1328, %1323 ]
  %1335 = add i64 %1332, -1
  %1336 = getelementptr inbounds i32, i32* %1331, i64 1
  %1337 = load i32, i32* %1331, align 4
  %1338 = getelementptr inbounds i32, i32* %1333, i64 1
  store i32 %1337, i32* %1333, align 4
  %1339 = add i64 %1334, -1
  %1340 = icmp eq i64 %1339, 0
  br i1 %1340, label %1341, label %1330, !llvm.loop !256

1341:                                             ; preds = %1330, %1323
  %1342 = phi i32* [ %1324, %1323 ], [ %1336, %1330 ]
  %1343 = phi i64 [ %1325, %1323 ], [ %1335, %1330 ]
  %1344 = phi i32* [ %1326, %1323 ], [ %1338, %1330 ]
  %1345 = icmp ult i64 %1327, 7
  br i1 %1345, label %1390, label %1346

1346:                                             ; preds = %1341, %1346
  %1347 = phi i32* [ %1372, %1346 ], [ %1342, %1341 ]
  %1348 = phi i64 [ %1371, %1346 ], [ %1343, %1341 ]
  %1349 = phi i32* [ %1374, %1346 ], [ %1344, %1341 ]
  %1350 = getelementptr inbounds i32, i32* %1347, i64 1
  %1351 = load i32, i32* %1347, align 4
  %1352 = getelementptr inbounds i32, i32* %1349, i64 1
  store i32 %1351, i32* %1349, align 4
  %1353 = getelementptr inbounds i32, i32* %1347, i64 2
  %1354 = load i32, i32* %1350, align 4
  %1355 = getelementptr inbounds i32, i32* %1349, i64 2
  store i32 %1354, i32* %1352, align 4
  %1356 = getelementptr inbounds i32, i32* %1347, i64 3
  %1357 = load i32, i32* %1353, align 4
  %1358 = getelementptr inbounds i32, i32* %1349, i64 3
  store i32 %1357, i32* %1355, align 4
  %1359 = getelementptr inbounds i32, i32* %1347, i64 4
  %1360 = load i32, i32* %1356, align 4
  %1361 = getelementptr inbounds i32, i32* %1349, i64 4
  store i32 %1360, i32* %1358, align 4
  %1362 = getelementptr inbounds i32, i32* %1347, i64 5
  %1363 = load i32, i32* %1359, align 4
  %1364 = getelementptr inbounds i32, i32* %1349, i64 5
  store i32 %1363, i32* %1361, align 4
  %1365 = getelementptr inbounds i32, i32* %1347, i64 6
  %1366 = load i32, i32* %1362, align 4
  %1367 = getelementptr inbounds i32, i32* %1349, i64 6
  store i32 %1366, i32* %1364, align 4
  %1368 = getelementptr inbounds i32, i32* %1347, i64 7
  %1369 = load i32, i32* %1365, align 4
  %1370 = getelementptr inbounds i32, i32* %1349, i64 7
  store i32 %1369, i32* %1367, align 4
  %1371 = add i64 %1348, -8
  %1372 = getelementptr inbounds i32, i32* %1347, i64 8
  %1373 = load i32, i32* %1368, align 4
  %1374 = getelementptr inbounds i32, i32* %1349, i64 8
  store i32 %1373, i32* %1370, align 4
  %1375 = icmp eq i64 %1371, 0
  br i1 %1375, label %1390, label %1346, !llvm.loop !257

1376:                                             ; preds = %1229
  %1377 = inttoptr i64 %1218 to i8*
  %1378 = shl nsw i64 %1221, 2
  %1379 = add nsw i64 %1378, -4
  %1380 = lshr exact i64 %1379, 2
  switch i64 %1380, label %1389 [
    i64 3, label %1388
    i64 1, label %1383
    i64 2, label %1387
    i64 0, label %1381
  ]

1381:                                             ; preds = %1376
  %1382 = load i32, i32* %1224, align 1
  store i32 %1382, i32* %1222, align 1
  br label %1390

1383:                                             ; preds = %1376
  %1384 = inttoptr i64 %1218 to i64*
  %1385 = inttoptr i64 %1217 to i64*
  %1386 = load i64, i64* %1384, align 1
  store i64 %1386, i64* %1385, align 1
  br label %1390

1387:                                             ; preds = %1376
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1226, i8* align 1 %1377, i64 12, i1 false) #12
  br label %1390

1388:                                             ; preds = %1376
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1226, i8* align 1 %1377, i64 16, i1 false) #12
  br label %1390

1389:                                             ; preds = %1376
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1226, i8* align 1 %1377, i64 %1378, i1 false) #12
  br label %1390

1390:                                             ; preds = %1341, %1346, %1321, %1389, %1388, %1387, %1383, %1381, %1213
  %1391 = trunc i64 %1214 to i32
  %1392 = inttoptr i64 %104 to i32*
  %1393 = cmpxchg volatile i32* %1392, i32 %1216, i32 %1391 release monotonic
  %1394 = extractvalue { i32, i1 } %1393, 1
  br i1 %1394, label %1395, label %1603

1395:                                             ; preds = %1390
  %1396 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %1397 = load i8, i8* %1396, align 8, !range !2
  %1398 = icmp eq i8 %1397, 0
  br i1 %1398, label %1401, label %1399, !prof !60

1399:                                             ; preds = %1395
  %1400 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %1400, i64 %1210, i64 %3, i32 %4) #12
  br label %1401

1401:                                             ; preds = %1399, %1395
  %1402 = load i8, i8* %22, align 1, !range !2
  %1403 = icmp eq i8 %1402, 0
  br i1 %1403, label %1531, label %1404

1404:                                             ; preds = %1401
  %1405 = and i64 %1210, -262144
  %1406 = or i64 %1405, 272
  %1407 = sub i64 %1210, %1405
  %1408 = trunc i64 %1407 to i32
  %1409 = lshr i32 %1408, 2
  %1410 = and i32 %1409, 31
  %1411 = shl i32 1, %1410
  %1412 = inttoptr i64 %1406 to i32*
  %1413 = lshr i64 %1407, 7
  %1414 = and i64 %1413, 33554431
  %1415 = getelementptr inbounds i32, i32* %1412, i64 %1414
  %1416 = load atomic i32, i32* %1415 acquire, align 4
  %1417 = and i32 %1416, %1411
  %1418 = icmp eq i32 %1417, 0
  br i1 %1418, label %1428, label %1419

1419:                                             ; preds = %1404
  %1420 = shl i32 %1411, 1
  %1421 = icmp eq i32 %1420, 0
  %1422 = getelementptr inbounds i32, i32* %1415, i64 1
  %1423 = select i1 %1421, i32 1, i32 %1420
  %1424 = select i1 %1421, i32* %1422, i32* %1415
  %1425 = load atomic i32, i32* %1424 acquire, align 4
  %1426 = and i32 %1425, %1423
  %1427 = icmp eq i32 %1426, 0
  br i1 %1427, label %1428, label %1531

1428:                                             ; preds = %1419, %1404
  %1429 = or i64 %37, 272
  %1430 = sub i64 %3, %37
  %1431 = trunc i64 %1430 to i32
  %1432 = lshr i32 %1431, 2
  %1433 = and i32 %1432, 31
  %1434 = shl i32 1, %1433
  %1435 = inttoptr i64 %1429 to i32*
  %1436 = lshr i64 %1430, 7
  %1437 = and i64 %1436, 33554431
  %1438 = getelementptr inbounds i32, i32* %1435, i64 %1437
  %1439 = load atomic i32, i32* %1438 acquire, align 4
  %1440 = and i32 %1439, %1434
  %1441 = icmp eq i32 %1440, 0
  br i1 %1441, label %1462, label %1442

1442:                                             ; preds = %1428
  %1443 = shl i32 %1434, 1
  %1444 = icmp eq i32 %1443, 0
  %1445 = getelementptr inbounds i32, i32* %1438, i64 1
  %1446 = select i1 %1444, i32 1, i32 %1443
  %1447 = select i1 %1444, i32* %1445, i32* %1438
  %1448 = load atomic i32, i32* %1447 acquire, align 4
  %1449 = and i32 %1448, %1446
  %1450 = icmp eq i32 %1449, 0
  br i1 %1450, label %1451, label %1462

1451:                                             ; preds = %1442
  %1452 = load atomic i32, i32* %1415 monotonic, align 4
  br label %1453

1453:                                             ; preds = %1457, %1451
  %1454 = phi i32 [ %1452, %1451 ], [ %1460, %1457 ]
  %1455 = and i32 %1454, %1411
  %1456 = icmp eq i32 %1455, %1411
  br i1 %1456, label %1531, label %1457

1457:                                             ; preds = %1453
  %1458 = or i32 %1454, %1411
  %1459 = cmpxchg volatile i32* %1415, i32 %1454, i32 %1458 release monotonic
  %1460 = extractvalue { i32, i1 } %1459, 0
  %1461 = extractvalue { i32, i1 } %1459, 1
  br i1 %1461, label %1531, label %1453

1462:                                             ; preds = %1442, %1428
  %1463 = load atomic i32, i32* %1438 acquire, align 4
  %1464 = and i32 %1463, %1434
  %1465 = icmp eq i32 %1464, 0
  br i1 %1465, label %1531, label %1466

1466:                                             ; preds = %1462
  %1467 = shl i32 %1434, 1
  %1468 = icmp eq i32 %1467, 0
  %1469 = getelementptr inbounds i32, i32* %1438, i64 1
  %1470 = select i1 %1468, i32 1, i32 %1467
  %1471 = select i1 %1468, i32* %1469, i32* %1438
  %1472 = load atomic i32, i32* %1471 acquire, align 4
  %1473 = and i32 %1472, %1470
  %1474 = icmp eq i32 %1473, 0
  br i1 %1474, label %1531, label %1475

1475:                                             ; preds = %1466
  %1476 = load atomic i32, i32* %1415 monotonic, align 4
  br label %1477

1477:                                             ; preds = %1481, %1475
  %1478 = phi i32 [ %1476, %1475 ], [ %1484, %1481 ]
  %1479 = and i32 %1478, %1411
  %1480 = icmp eq i32 %1479, %1411
  br i1 %1480, label %1531, label %1481

1481:                                             ; preds = %1477
  %1482 = or i32 %1478, %1411
  %1483 = cmpxchg volatile i32* %1415, i32 %1478, i32 %1482 release monotonic
  %1484 = extractvalue { i32, i1 } %1483, 0
  %1485 = extractvalue { i32, i1 } %1483, 1
  br i1 %1485, label %1486, label %1477

1486:                                             ; preds = %1481
  %1487 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1487) #12
  %1488 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1210, i64* %1488, align 8
  %1489 = xor i64 %1405, -1
  %1490 = add i64 %1210, %1489
  %1491 = trunc i64 %1490 to i32
  %1492 = lshr i32 %1491, 2
  %1493 = and i32 %1492, 31
  %1494 = shl i32 1, %1493
  %1495 = lshr i64 %1490, 7
  %1496 = and i64 %1495, 33554431
  %1497 = getelementptr inbounds i32, i32* %1412, i64 %1496
  %1498 = load atomic i32, i32* %1497 acquire, align 4
  %1499 = and i32 %1498, %1494
  %1500 = icmp eq i32 %1499, 0
  br i1 %1500, label %1530, label %1501

1501:                                             ; preds = %1486
  %1502 = shl i32 %1494, 1
  %1503 = icmp eq i32 %1502, 0
  %1504 = getelementptr inbounds i32, i32* %1497, i64 1
  %1505 = select i1 %1503, i32 1, i32 %1502
  %1506 = select i1 %1503, i32* %1504, i32* %1497
  %1507 = load atomic i32, i32* %1506 monotonic, align 4
  br label %1508

1508:                                             ; preds = %1512, %1501
  %1509 = phi i32 [ %1507, %1501 ], [ %1515, %1512 ]
  %1510 = and i32 %1509, %1505
  %1511 = icmp eq i32 %1510, %1505
  br i1 %1511, label %1530, label %1512

1512:                                             ; preds = %1508
  %1513 = or i32 %1509, %1505
  %1514 = cmpxchg volatile i32* %1506, i32 %1509, i32 %1513 release monotonic
  %1515 = extractvalue { i32, i1 } %1514, 0
  %1516 = extractvalue { i32, i1 } %1514, 1
  br i1 %1516, label %1517, label %1508

1517:                                             ; preds = %1512
  %1518 = inttoptr i64 %1405 to %"class.v8::internal::MemoryChunk"*
  %1519 = load i64, i64* %1488, align 8
  %1520 = and i64 %1519, -4294967296
  %1521 = add i64 %1519, -1
  %1522 = inttoptr i64 %1521 to i32*
  %1523 = load atomic i32, i32* %1522 monotonic, align 4
  %1524 = zext i32 %1523 to i64
  %1525 = or i64 %1520, %1524
  %1526 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %1525) #12
  %1527 = sext i32 %1526 to i64
  %1528 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1518, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1529 = atomicrmw add i64* %1528, i64 %1527 seq_cst
  br label %1530

1530:                                             ; preds = %1508, %1517, %1486
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1487) #12
  br label %1531

1531:                                             ; preds = %1457, %1453, %1477, %1530, %1466, %1462, %1419, %1401
  %1532 = bitcast %"class.v8::internal::Heap"** %102 to i64*
  %1533 = load i64, i64* %1532, align 8
  %1534 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1535 = icmp eq i8 %1534, 0
  br i1 %1535, label %1639, label %1536

1536:                                             ; preds = %1531
  %1537 = add i64 %1, 7
  %1538 = inttoptr i64 %1537 to i16*
  %1539 = load atomic i16, i16* %1538 monotonic, align 2
  switch i16 %1539, label %1639 [
    i16 1085, label %1540
    i16 1057, label %1540
  ]

1540:                                             ; preds = %1536, %1536
  %1541 = bitcast %"class.v8::internal::HeapObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1541) #12
  %1542 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1542, align 8
  %1543 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %7, i64 %1) #12
  %1544 = sext i32 %1543 to i64
  %1545 = add i64 %104, %1544
  %1546 = add i64 %1545, 4
  %1547 = and i64 %1546, -262144
  %1548 = inttoptr i64 %1547 to %"class.v8::internal::Page"*
  %1549 = icmp eq %"class.v8::internal::Page"* %106, %1548
  br i1 %1549, label %1550, label %1580

1550:                                             ; preds = %1540
  %1551 = add i64 %1544, %3
  %1552 = add i64 %1533, -41416
  %1553 = inttoptr i64 %1552 to %"class.v8::internal::Isolate"*
  %1554 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1553, i64 0, i32 0, i32 7, i32 0, i64 534
  %1555 = load i64, i64* %1554, align 8
  %1556 = inttoptr i64 %1545 to i32*
  %1557 = load atomic i32, i32* %1556 monotonic, align 4
  %1558 = trunc i64 %1555 to i32
  %1559 = icmp eq i32 %1557, %1558
  br i1 %1559, label %1560, label %1580

1560:                                             ; preds = %1550
  %1561 = load i64, i64* %111, align 8
  %1562 = and i64 %1561, 524288
  %1563 = icmp eq i64 %1562, 0
  br i1 %1563, label %1581, label %1564

1564:                                             ; preds = %1560
  %1565 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 8, i32 0
  %1566 = bitcast %"struct.std::__1::__atomic_base.69"* %1565 to i64*
  %1567 = load atomic i64, i64* %1566 seq_cst, align 64
  %1568 = inttoptr i64 %1567 to %"class.v8::internal::SemiSpace"*
  %1569 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1568, i64 0, i32 5
  %1570 = load i64, i64* %1569, align 8
  %1571 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 3
  %1572 = load i64, i64* %1571, align 8
  %1573 = icmp ugt i64 %1572, %1570
  br i1 %1573, label %1580, label %1574

1574:                                             ; preds = %1564
  %1575 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %106, i64 0, i32 0, i32 0, i32 4
  %1576 = load i64, i64* %1575, align 32
  %1577 = icmp ule i64 %1576, %1570
  %1578 = icmp ult i64 %104, %1570
  %1579 = or i1 %1578, %1577
  br i1 %1579, label %1580, label %1581

1580:                                             ; preds = %1574, %1564, %1550, %1540
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1541) #12
  br label %1639

1581:                                             ; preds = %1574, %1560
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1541) #12
  %1582 = trunc i64 %1551 to i32
  %1583 = icmp eq i32 %1582, 0
  br i1 %1583, label %1639, label %1584

1584:                                             ; preds = %1581
  %1585 = and i64 %1551, -4294967296
  %1586 = add i64 %1551, 3
  %1587 = inttoptr i64 %1586 to i32*
  %1588 = load i32, i32* %1587, align 4
  %1589 = zext i32 %1588 to i64
  %1590 = or i64 %1585, %1589
  %1591 = bitcast %"class.v8::internal::AllocationSite"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1591) #12
  %1592 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1590, i64* %1592, align 8
  %1593 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1594 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1594) #12
  %1595 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %10, %"class.v8::internal::AllocationSite"** %1595, align 8
  %1596 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1596) #12
  %1597 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1593, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %9) #12
  %1598 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1597, 0
  %1599 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1598, i64 3
  %1600 = bitcast %"struct.std::__1::__hash_node_base.518"* %1599 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1596) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1594) #12
  %1601 = load i64, i64* %1600, align 8
  %1602 = add i64 %1601, 1
  store i64 %1602, i64* %1600, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1591) #12
  br label %1639

1603:                                             ; preds = %1390
  %1604 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %1605 = load i64, i64* %1604, align 8
  %1606 = icmp ne i64 %1605, 0
  %1607 = sub i64 %1605, %661
  %1608 = icmp eq i64 %1607, %1214
  %1609 = and i1 %1606, %1608
  br i1 %1609, label %1610, label %1611

1610:                                             ; preds = %1603
  store i64 %1214, i64* %1604, align 8
  br label %1615

1611:                                             ; preds = %1603
  %1612 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1181, i64 0, i32 0
  %1613 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1612, align 8
  %1614 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1613, i64 %1214, i32 %4, i32 1) #12
  br label %1615

1615:                                             ; preds = %1611, %1610
  %1616 = and i64 %3, -4294967296
  %1617 = load atomic i32, i32* %1392 acquire, align 4
  %1618 = zext i32 %1617 to i64
  %1619 = or i64 %1616, %1618
  %1620 = add i64 %1619, 1
  %1621 = inttoptr i64 %2 to i64*
  %1622 = load i64, i64* %1621, align 8
  %1623 = and i64 %1622, 2
  %1624 = or i64 %1620, %1623
  store i64 %1624, i64* %1621, align 8
  %1625 = and i64 %1620, 1
  %1626 = icmp ne i64 %1625, 0
  %1627 = trunc i64 %1624 to i32
  %1628 = icmp ne i32 %1627, 3
  %1629 = and i1 %1626, %1628
  br i1 %1629, label %1630, label %1711

1630:                                             ; preds = %1615
  %1631 = and i64 %1620, -262144
  %1632 = inttoptr i64 %1631 to %"class.v8::internal::BasicMemoryChunk"*
  %1633 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1632, i64 0, i32 1
  %1634 = load i64, i64* %1633, align 8
  %1635 = lshr i64 %1634, 4
  %1636 = trunc i64 %1635 to i32
  %1637 = and i32 %1636, 1
  %1638 = xor i32 %1637, 1
  br label %1711

1639:                                             ; preds = %1584, %1581, %1580, %1536, %1531
  %1640 = inttoptr i64 %2 to i64*
  %1641 = load i64, i64* %1640, align 8
  %1642 = and i64 %1641, 2
  %1643 = or i64 %1642, %1210
  store i64 %1643, i64* %1640, align 8
  %1644 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %1645 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %1644, align 8
  %1646 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %1647 = load i32, i32* %1646, align 8
  %1648 = sext i32 %1647 to i64
  %1649 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1645, i64 0, i32 0, i64 %1648, i32 0
  %1650 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1649, align 8
  %1651 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1650, i64 0, i32 1
  %1652 = load i64, i64* %1651, align 8
  %1653 = icmp eq i64 %1652, 256
  br i1 %1653, label %1658, label %1654

1654:                                             ; preds = %1639
  %1655 = add i64 %1652, 1
  store i64 %1655, i64* %1651, align 8
  %1656 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1650, i64 0, i32 2, i64 %1652, i32 0, i32 0, i32 0, i32 0
  store i64 %1210, i64* %1656, align 8
  %1657 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1650, i64 0, i32 2, i64 %1652, i32 1
  br label %1703

1658:                                             ; preds = %1639
  %1659 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1645, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1659) #12
  %1660 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1645, i64 0, i32 1, i32 1
  %1661 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1660 to i64*
  %1662 = load i64, i64* %1661, align 8
  %1663 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1650 to i64*
  store i64 %1662, i64* %1663, align 8
  %1664 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1650 to i64
  store atomic volatile i64 %1664, i64* %1661 monotonic, align 8
  %1665 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1645, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1666 = atomicrmw add i64* %1665, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1659) #12
  %1667 = call i8* @_Znwm(i64 4112) #17
  %1668 = getelementptr inbounds i8, i8* %1667, i64 8
  %1669 = bitcast i8* %1668 to i64*
  store i64 0, i64* %1669, align 8
  %1670 = getelementptr inbounds i8, i8* %1667, i64 16
  %1671 = bitcast i8* %1670 to %"struct.std::__1::pair.1282"*
  %1672 = getelementptr inbounds i8, i8* %1667, i64 4112
  %1673 = bitcast i8* %1672 to %"struct.std::__1::pair.1282"*
  br label %1674

1674:                                             ; preds = %1674, %1658
  %1675 = phi %"struct.std::__1::pair.1282"* [ %1671, %1658 ], [ %1692, %1674 ]
  %1676 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1676, align 8
  %1677 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 0, i32 1
  store i32 0, i32* %1677, align 8
  %1678 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1678, align 8
  %1679 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 1, i32 1
  store i32 0, i32* %1679, align 8
  %1680 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1680, align 8
  %1681 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 2, i32 1
  store i32 0, i32* %1681, align 8
  %1682 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1682, align 8
  %1683 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 3, i32 1
  store i32 0, i32* %1683, align 8
  %1684 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1684, align 8
  %1685 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 4, i32 1
  store i32 0, i32* %1685, align 8
  %1686 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1686, align 8
  %1687 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 5, i32 1
  store i32 0, i32* %1687, align 8
  %1688 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1688, align 8
  %1689 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 6, i32 1
  store i32 0, i32* %1689, align 8
  %1690 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1690, align 8
  %1691 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 7, i32 1
  store i32 0, i32* %1691, align 8
  %1692 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1675, i64 8
  %1693 = icmp eq %"struct.std::__1::pair.1282"* %1692, %1673
  br i1 %1693, label %1694, label %1674

1694:                                             ; preds = %1674
  %1695 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1649 to i8**
  store i8* %1667, i8** %1695, align 8
  %1696 = bitcast i8* %1667 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1697 = load i64, i64* %1669, align 8
  %1698 = icmp eq i64 %1697, 256
  br i1 %1698, label %1705, label %1699

1699:                                             ; preds = %1694
  %1700 = add i64 %1697, 1
  store i64 %1700, i64* %1669, align 8
  %1701 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1696, i64 0, i32 2, i64 %1697, i32 0, i32 0, i32 0, i32 0
  store i64 %1210, i64* %1701, align 8
  %1702 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1696, i64 0, i32 2, i64 %1697, i32 1
  br label %1703

1703:                                             ; preds = %1654, %1699
  %1704 = phi i32* [ %1702, %1699 ], [ %1657, %1654 ]
  store i32 %4, i32* %1704, align 8
  br label %1705

1705:                                             ; preds = %1703, %1694
  %1706 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %1707 = load i64, i64* %1706, align 8
  %1708 = add i64 %1707, %661
  store i64 %1708, i64* %1706, align 8
  br label %1711

1709:                                             ; preds = %1209
  %1710 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %102, align 8
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %1710, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

1711:                                             ; preds = %1705, %1630, %1615, %1176, %1101, %1086, %652, %577, %562, %79, %74, %46, %25
  %1712 = phi i32 [ 1, %25 ], [ 0, %46 ], [ 0, %74 ], [ 0, %79 ], [ 1, %562 ], [ %585, %577 ], [ 0, %652 ], [ 1, %1086 ], [ %1109, %1101 ], [ 1, %1176 ], [ 1, %1615 ], [ %1638, %1630 ], [ 0, %1705 ]
  ret i32 %1712
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN2v88internal9Scavenger25EvacuateShortcutCandidateINS0_18FullHeapObjectSlotEEENS0_18SlotCallbackResultENS0_3MapET_NS0_10ConsStringEi(%"class.v8::internal::Scavenger"*, i64, i64, i64, i32) local_unnamed_addr #7 comdat align 2 {
  %6 = alloca %"class.v8::internal::HeapObject", align 8
  %7 = alloca %"class.v8::internal::HeapObject", align 8
  %8 = alloca %"class.std::__1::tuple", align 8
  %9 = alloca %"class.std::__1::tuple.1327", align 1
  %10 = alloca %"class.v8::internal::AllocationSite", align 8
  %11 = alloca %"class.v8::internal::HeapObject", align 8
  %12 = alloca %"class.v8::internal::HeapObject", align 8
  %13 = alloca %"class.std::__1::tuple", align 8
  %14 = alloca %"class.std::__1::tuple.1327", align 1
  %15 = alloca %"class.v8::internal::AllocationSite", align 8
  %16 = alloca %"class.v8::internal::HeapObject", align 8
  %17 = alloca %"class.v8::internal::HeapObject", align 8
  %18 = alloca %"class.std::__1::tuple", align 8
  %19 = alloca %"class.std::__1::tuple.1327", align 1
  %20 = alloca %"class.v8::internal::AllocationSite", align 8
  %21 = alloca %"struct.std::__1::pair.1246", align 8
  %22 = alloca %"class.v8::internal::HeapObject", align 8
  %23 = alloca %"class.v8::internal::HeapObject", align 8
  %24 = alloca %"class.std::__1::tuple", align 8
  %25 = alloca %"class.std::__1::tuple.1327", align 1
  %26 = alloca %"class.v8::internal::AllocationSite", align 8
  %27 = alloca %"class.v8::internal::HeapObject", align 8
  %28 = alloca %"class.v8::internal::HeapObject", align 8
  %29 = alloca %"class.std::__1::tuple", align 8
  %30 = alloca %"class.std::__1::tuple.1327", align 1
  %31 = alloca %"class.v8::internal::AllocationSite", align 8
  %32 = alloca %"class.v8::internal::HeapObject", align 8
  %33 = alloca %"class.v8::internal::HeapObject", align 8
  %34 = alloca %"class.std::__1::tuple", align 8
  %35 = alloca %"class.std::__1::tuple.1327", align 1
  %36 = alloca %"class.v8::internal::AllocationSite", align 8
  %37 = alloca %"struct.std::__1::pair.1246", align 8
  %38 = alloca %"class.v8::internal::HeapObject", align 8
  %39 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 13
  %40 = load i8, i8* %39, align 1, !range !2
  %41 = icmp eq i8 %40, 0
  br i1 %41, label %42, label %1777

42:                                               ; preds = %5
  %43 = add i64 %3, 15
  %44 = inttoptr i64 %43 to i32*
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %47 = bitcast %"class.v8::internal::Heap"** %46 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = add i64 %48, -41416
  %50 = inttoptr i64 %49 to %"class.v8::internal::Isolate"*
  %51 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %50, i64 0, i32 0, i32 7, i32 0, i64 9
  %52 = load i64, i64* %51, align 8
  %53 = trunc i64 %52 to i32
  %54 = icmp eq i32 %45, %53
  br i1 %54, label %55, label %1777

55:                                               ; preds = %42
  %56 = and i64 %3, -4294967296
  %57 = bitcast %"class.v8::internal::HeapObject"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #12
  %58 = add i64 %3, 11
  %59 = inttoptr i64 %58 to i32*
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i64
  %62 = or i64 %56, %61
  %63 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %38, i64 0, i32 0, i32 0, i32 0
  store i64 %62, i64* %63, align 8
  %64 = inttoptr i64 %2 to i64*
  %65 = load i64, i64* %64, align 8
  %66 = and i64 %65, 2
  %67 = or i64 %66, %62
  store i64 %67, i64* %64, align 8
  %68 = load i64, i64* %63, align 8
  %69 = and i64 %68, -262144
  %70 = inttoptr i64 %69 to %"class.v8::internal::BasicMemoryChunk"*
  %71 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %70, i64 0, i32 1
  %72 = load i64, i64* %71, align 8
  %73 = and i64 %72, 24
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %80

75:                                               ; preds = %55
  %76 = add i64 %3, -1
  %77 = inttoptr i64 %76 to i32*
  %78 = trunc i64 %68 to i32
  %79 = add i32 %78, -1
  store atomic volatile i32 %79, i32* %77 release, align 4
  br label %1775

80:                                               ; preds = %55
  %81 = and i64 %68, -4294967296
  %82 = add i64 %68, -1
  %83 = inttoptr i64 %82 to i32*
  %84 = load atomic i32, i32* %83 acquire, align 4
  %85 = zext i32 %84 to i64
  %86 = or i64 %81, %85
  %87 = and i64 %85, 3
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %89, label %103

89:                                               ; preds = %80
  %90 = add i64 %86, 1
  %91 = load i64, i64* %64, align 8
  %92 = and i64 %91, 2
  %93 = or i64 %92, %90
  store i64 %93, i64* %64, align 8
  %94 = add i64 %3, -1
  %95 = inttoptr i64 %94 to i32*
  store atomic volatile i32 %84, i32* %95 release, align 4
  %96 = and i64 %90, -262144
  %97 = inttoptr i64 %96 to %"class.v8::internal::BasicMemoryChunk"*
  %98 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %97, i64 0, i32 1
  %99 = load i64, i64* %98, align 8
  %100 = and i64 %99, 24
  %101 = icmp eq i64 %100, 0
  %102 = zext i1 %101 to i32
  br label %1775

103:                                              ; preds = %80
  %104 = load i64, i64* %63, align 8
  %105 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %38, i64 %86) #12
  %106 = add i64 %86, 6
  %107 = inttoptr i64 %106 to i8*
  %108 = load atomic i8, i8* %107 monotonic, align 1
  %109 = icmp ugt i8 %108, 5
  %110 = and i64 %104, -262144
  %111 = inttoptr i64 %110 to %"class.v8::internal::BasicMemoryChunk"*
  %112 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %111, i64 0, i32 1
  %113 = load i64, i64* %112, align 8
  %114 = and i64 %113, 24
  %115 = icmp ne i64 %114, 0
  %116 = and i64 %113, 32
  %117 = icmp ne i64 %116, 0
  %118 = and i1 %117, %115
  br i1 %118, label %119, label %174, !prof !29

119:                                              ; preds = %103
  %120 = add i64 %104, -1
  %121 = trunc i64 %120 to i32
  %122 = inttoptr i64 %120 to i32*
  %123 = cmpxchg volatile i32* %122, i32 %84, i32 %121 release monotonic
  %124 = extractvalue { i32, i1 } %123, 1
  br i1 %124, label %125, label %1768

125:                                              ; preds = %119
  %126 = bitcast %"struct.std::__1::pair.1246"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %126) #12
  %127 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %104, i64* %127, align 8
  %128 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %86, i64* %128, align 8
  %129 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %130 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %21, i64 0, i32 0
  %131 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %129, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %130, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %21) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %126) #12
  %132 = sext i32 %105 to i64
  %133 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %134 = load i64, i64* %133, align 8
  %135 = add i64 %134, %132
  store i64 %135, i64* %133, align 8
  br i1 %109, label %136, label %1768

136:                                              ; preds = %125
  %137 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %138 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %137, align 8
  %139 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %140 = load i32, i32* %139, align 8
  %141 = sext i32 %140 to i64
  %142 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %138, i64 0, i32 1, i32 0, i64 %141, i32 0
  %143 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %142, align 8
  %144 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %143, i64 0, i32 1
  %145 = load i64, i64* %144, align 8
  %146 = icmp eq i64 %145, 4
  br i1 %146, label %152, label %147

147:                                              ; preds = %136
  %148 = add i64 %145, 1
  store i64 %148, i64* %144, align 8
  %149 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %143, i64 0, i32 2, i64 %145, i32 0, i32 0, i32 0, i32 0
  store i64 %104, i64* %149, align 8
  %150 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %143, i64 0, i32 2, i64 %145, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %86, i64* %150, align 8
  %151 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %143, i64 0, i32 2, i64 %145, i32 2
  store i32 %105, i32* %151, align 8
  br label %1768

152:                                              ; preds = %136
  %153 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %138, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %153) #12
  %154 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %138, i64 0, i32 1, i32 1, i32 1
  %155 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %154 to i64*
  %156 = load i64, i64* %155, align 8
  %157 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %143 to i64*
  store i64 %156, i64* %157, align 8
  %158 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %143 to i64
  store atomic volatile i64 %158, i64* %155 monotonic, align 8
  %159 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %138, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = atomicrmw add i64* %159, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %153) #12
  %161 = call i8* @_Znwm(i64 112) #17
  %162 = getelementptr inbounds i8, i8* %161, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %162, i8 0, i64 16, i1 false) #12
  %163 = getelementptr inbounds i8, i8* %161, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %163, i8 0, i64 16, i1 false) #12
  %164 = getelementptr inbounds i8, i8* %161, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %164, i8 0, i64 16, i1 false) #12
  %165 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %142 to i8**
  store i8* %161, i8** %165, align 8
  %166 = getelementptr inbounds i8, i8* %161, i64 8
  %167 = bitcast i8* %166 to i64*
  store i64 1, i64* %167, align 8
  %168 = getelementptr inbounds i8, i8* %161, i64 16
  %169 = bitcast i8* %168 to i64*
  store i64 %104, i64* %169, align 8
  %170 = getelementptr inbounds i8, i8* %161, i64 24
  %171 = bitcast i8* %170 to i64*
  store i64 %86, i64* %171, align 8
  %172 = getelementptr inbounds i8, i8* %161, i64 32
  %173 = bitcast i8* %172 to i32*
  store i32 %105, i32* %173, align 8
  br label %1768

174:                                              ; preds = %103
  %175 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  %176 = add i64 %104, -1
  %177 = and i64 %176, -262144
  %178 = inttoptr i64 %177 to %"class.v8::internal::Page"*
  %179 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %175, i64 0, i32 24
  %180 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %179, align 8
  %181 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %180, i64 0, i32 5, i32 5
  %182 = load i64, i64* %181, align 8
  %183 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 1
  %184 = load i64, i64* %183, align 8
  %185 = and i64 %184, 524288
  %186 = icmp eq i64 %185, 0
  br i1 %186, label %197, label %187

187:                                              ; preds = %174
  %188 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 3
  %189 = load i64, i64* %188, align 8
  %190 = icmp ugt i64 %189, %182
  br i1 %190, label %724, label %191

191:                                              ; preds = %187
  %192 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 4
  %193 = load i64, i64* %192, align 32
  %194 = icmp ult i64 %193, %182
  %195 = icmp ugt i64 %182, %176
  %196 = or i1 %195, %194
  br i1 %196, label %724, label %197

197:                                              ; preds = %191, %174
  %198 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %199 = icmp sgt i32 %105, 8192
  br i1 %199, label %200, label %225

200:                                              ; preds = %197
  %201 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %202 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %201, align 8
  %203 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %202, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %203) #12
  %204 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %202, i64 0, i32 0
  %205 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %202, i64 0, i32 0, i32 1, i32 1
  %206 = load i64, i64* %205, align 8
  %207 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %202, i64 0, i32 0, i32 1, i32 2
  %208 = load i64, i64* %207, align 8
  %209 = sext i32 %105 to i64
  %210 = add i64 %206, %209
  %211 = icmp ult i64 %208, %210
  br i1 %211, label %221, label %212

212:                                              ; preds = %200
  %213 = add i64 %206, 1
  store i64 %210, i64* %205, align 8
  %214 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %215 = icmp eq i8 %214, 0
  br i1 %215, label %217, label %216

216:                                              ; preds = %212
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %204, i32 2) #12
  br label %217

217:                                              ; preds = %216, %212
  %218 = and i64 %213, 1
  %219 = icmp eq i64 %218, 0
  br i1 %219, label %220, label %223, !prof !29

220:                                              ; preds = %217
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

221:                                              ; preds = %200
  %222 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %202, i32 %105, i32 0, i32 2) #12
  br label %223

223:                                              ; preds = %221, %217
  %224 = phi i64 [ %222, %221 ], [ %213, %217 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %203) #12
  br label %227

225:                                              ; preds = %197
  %226 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %198, i32 %105, i32 0) #12
  br label %227

227:                                              ; preds = %225, %223
  %228 = phi i64 [ %224, %223 ], [ %226, %225 ]
  %229 = and i64 %228, 1
  %230 = icmp eq i64 %229, 0
  br i1 %230, label %724, label %231

231:                                              ; preds = %227
  %232 = add i64 %228, -1
  %233 = inttoptr i64 %232 to i32*
  store atomic volatile i32 %84, i32* %233 monotonic, align 4
  %234 = add i64 %228, 3
  %235 = add i64 %104, 3
  %236 = add nsw i32 %105, -4
  %237 = sdiv i32 %236, 4
  %238 = sext i32 %237 to i64
  %239 = inttoptr i64 %234 to i32*
  %240 = inttoptr i64 %234 to i8*
  %241 = inttoptr i64 %235 to i32*
  %242 = inttoptr i64 %235 to i8*
  %243 = inttoptr i64 %234 to i8*
  %244 = add i32 %105, -1
  %245 = icmp ult i32 %244, 7
  br i1 %245, label %407, label %246

246:                                              ; preds = %231
  %247 = icmp ult i32 %237, 16
  br i1 %247, label %248, label %393

248:                                              ; preds = %246
  %249 = icmp ult i32 %237, 8
  br i1 %249, label %340, label %250

250:                                              ; preds = %248
  %251 = getelementptr i32, i32* %239, i64 %238
  %252 = bitcast i32* %251 to i8*
  %253 = getelementptr i32, i32* %241, i64 %238
  %254 = bitcast i32* %253 to i8*
  %255 = icmp ult i8* %240, %254
  %256 = icmp ult i8* %242, %252
  %257 = and i1 %255, %256
  br i1 %257, label %340, label %258

258:                                              ; preds = %250
  %259 = and i64 %238, -8
  %260 = getelementptr i32, i32* %241, i64 %259
  %261 = sub nsw i64 %238, %259
  %262 = getelementptr i32, i32* %239, i64 %259
  %263 = add nsw i64 %259, -8
  %264 = lshr exact i64 %263, 3
  %265 = add nuw nsw i64 %264, 1
  %266 = and i64 %265, 3
  %267 = icmp ult i64 %263, 24
  br i1 %267, label %319, label %268

268:                                              ; preds = %258
  %269 = sub nsw i64 %265, %266
  br label %270

270:                                              ; preds = %270, %268
  %271 = phi i64 [ 0, %268 ], [ %316, %270 ]
  %272 = phi i64 [ %269, %268 ], [ %317, %270 ]
  %273 = getelementptr i32, i32* %241, i64 %271
  %274 = getelementptr i32, i32* %239, i64 %271
  %275 = bitcast i32* %273 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !258
  %277 = getelementptr i32, i32* %273, i64 4
  %278 = bitcast i32* %277 to <4 x i32>*
  %279 = load <4 x i32>, <4 x i32>* %278, align 4, !alias.scope !258
  %280 = bitcast i32* %274 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %280, align 4, !alias.scope !261, !noalias !258
  %281 = getelementptr i32, i32* %274, i64 4
  %282 = bitcast i32* %281 to <4 x i32>*
  store <4 x i32> %279, <4 x i32>* %282, align 4, !alias.scope !261, !noalias !258
  %283 = or i64 %271, 8
  %284 = getelementptr i32, i32* %241, i64 %283
  %285 = getelementptr i32, i32* %239, i64 %283
  %286 = bitcast i32* %284 to <4 x i32>*
  %287 = load <4 x i32>, <4 x i32>* %286, align 4, !alias.scope !258
  %288 = getelementptr i32, i32* %284, i64 4
  %289 = bitcast i32* %288 to <4 x i32>*
  %290 = load <4 x i32>, <4 x i32>* %289, align 4, !alias.scope !258
  %291 = bitcast i32* %285 to <4 x i32>*
  store <4 x i32> %287, <4 x i32>* %291, align 4, !alias.scope !261, !noalias !258
  %292 = getelementptr i32, i32* %285, i64 4
  %293 = bitcast i32* %292 to <4 x i32>*
  store <4 x i32> %290, <4 x i32>* %293, align 4, !alias.scope !261, !noalias !258
  %294 = or i64 %271, 16
  %295 = getelementptr i32, i32* %241, i64 %294
  %296 = getelementptr i32, i32* %239, i64 %294
  %297 = bitcast i32* %295 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 4, !alias.scope !258
  %299 = getelementptr i32, i32* %295, i64 4
  %300 = bitcast i32* %299 to <4 x i32>*
  %301 = load <4 x i32>, <4 x i32>* %300, align 4, !alias.scope !258
  %302 = bitcast i32* %296 to <4 x i32>*
  store <4 x i32> %298, <4 x i32>* %302, align 4, !alias.scope !261, !noalias !258
  %303 = getelementptr i32, i32* %296, i64 4
  %304 = bitcast i32* %303 to <4 x i32>*
  store <4 x i32> %301, <4 x i32>* %304, align 4, !alias.scope !261, !noalias !258
  %305 = or i64 %271, 24
  %306 = getelementptr i32, i32* %241, i64 %305
  %307 = getelementptr i32, i32* %239, i64 %305
  %308 = bitcast i32* %306 to <4 x i32>*
  %309 = load <4 x i32>, <4 x i32>* %308, align 4, !alias.scope !258
  %310 = getelementptr i32, i32* %306, i64 4
  %311 = bitcast i32* %310 to <4 x i32>*
  %312 = load <4 x i32>, <4 x i32>* %311, align 4, !alias.scope !258
  %313 = bitcast i32* %307 to <4 x i32>*
  store <4 x i32> %309, <4 x i32>* %313, align 4, !alias.scope !261, !noalias !258
  %314 = getelementptr i32, i32* %307, i64 4
  %315 = bitcast i32* %314 to <4 x i32>*
  store <4 x i32> %312, <4 x i32>* %315, align 4, !alias.scope !261, !noalias !258
  %316 = add i64 %271, 32
  %317 = add i64 %272, -4
  %318 = icmp eq i64 %317, 0
  br i1 %318, label %319, label %270, !llvm.loop !263

319:                                              ; preds = %270, %258
  %320 = phi i64 [ 0, %258 ], [ %316, %270 ]
  %321 = icmp eq i64 %266, 0
  br i1 %321, label %338, label %322

322:                                              ; preds = %319, %322
  %323 = phi i64 [ %335, %322 ], [ %320, %319 ]
  %324 = phi i64 [ %336, %322 ], [ %266, %319 ]
  %325 = getelementptr i32, i32* %241, i64 %323
  %326 = getelementptr i32, i32* %239, i64 %323
  %327 = bitcast i32* %325 to <4 x i32>*
  %328 = load <4 x i32>, <4 x i32>* %327, align 4, !alias.scope !258
  %329 = getelementptr i32, i32* %325, i64 4
  %330 = bitcast i32* %329 to <4 x i32>*
  %331 = load <4 x i32>, <4 x i32>* %330, align 4, !alias.scope !258
  %332 = bitcast i32* %326 to <4 x i32>*
  store <4 x i32> %328, <4 x i32>* %332, align 4, !alias.scope !261, !noalias !258
  %333 = getelementptr i32, i32* %326, i64 4
  %334 = bitcast i32* %333 to <4 x i32>*
  store <4 x i32> %331, <4 x i32>* %334, align 4, !alias.scope !261, !noalias !258
  %335 = add i64 %323, 8
  %336 = add i64 %324, -1
  %337 = icmp eq i64 %336, 0
  br i1 %337, label %338, label %322, !llvm.loop !264

338:                                              ; preds = %322, %319
  %339 = icmp eq i64 %259, %238
  br i1 %339, label %407, label %340

340:                                              ; preds = %338, %250, %248
  %341 = phi i32* [ %241, %250 ], [ %241, %248 ], [ %260, %338 ]
  %342 = phi i64 [ %238, %250 ], [ %238, %248 ], [ %261, %338 ]
  %343 = phi i32* [ %239, %250 ], [ %239, %248 ], [ %262, %338 ]
  %344 = add nsw i64 %342, -1
  %345 = and i64 %342, 7
  %346 = icmp eq i64 %345, 0
  br i1 %346, label %358, label %347

347:                                              ; preds = %340, %347
  %348 = phi i32* [ %353, %347 ], [ %341, %340 ]
  %349 = phi i64 [ %352, %347 ], [ %342, %340 ]
  %350 = phi i32* [ %355, %347 ], [ %343, %340 ]
  %351 = phi i64 [ %356, %347 ], [ %345, %340 ]
  %352 = add i64 %349, -1
  %353 = getelementptr inbounds i32, i32* %348, i64 1
  %354 = load i32, i32* %348, align 4
  %355 = getelementptr inbounds i32, i32* %350, i64 1
  store i32 %354, i32* %350, align 4
  %356 = add i64 %351, -1
  %357 = icmp eq i64 %356, 0
  br i1 %357, label %358, label %347, !llvm.loop !265

358:                                              ; preds = %347, %340
  %359 = phi i32* [ %341, %340 ], [ %353, %347 ]
  %360 = phi i64 [ %342, %340 ], [ %352, %347 ]
  %361 = phi i32* [ %343, %340 ], [ %355, %347 ]
  %362 = icmp ult i64 %344, 7
  br i1 %362, label %407, label %363

363:                                              ; preds = %358, %363
  %364 = phi i32* [ %389, %363 ], [ %359, %358 ]
  %365 = phi i64 [ %388, %363 ], [ %360, %358 ]
  %366 = phi i32* [ %391, %363 ], [ %361, %358 ]
  %367 = getelementptr inbounds i32, i32* %364, i64 1
  %368 = load i32, i32* %364, align 4
  %369 = getelementptr inbounds i32, i32* %366, i64 1
  store i32 %368, i32* %366, align 4
  %370 = getelementptr inbounds i32, i32* %364, i64 2
  %371 = load i32, i32* %367, align 4
  %372 = getelementptr inbounds i32, i32* %366, i64 2
  store i32 %371, i32* %369, align 4
  %373 = getelementptr inbounds i32, i32* %364, i64 3
  %374 = load i32, i32* %370, align 4
  %375 = getelementptr inbounds i32, i32* %366, i64 3
  store i32 %374, i32* %372, align 4
  %376 = getelementptr inbounds i32, i32* %364, i64 4
  %377 = load i32, i32* %373, align 4
  %378 = getelementptr inbounds i32, i32* %366, i64 4
  store i32 %377, i32* %375, align 4
  %379 = getelementptr inbounds i32, i32* %364, i64 5
  %380 = load i32, i32* %376, align 4
  %381 = getelementptr inbounds i32, i32* %366, i64 5
  store i32 %380, i32* %378, align 4
  %382 = getelementptr inbounds i32, i32* %364, i64 6
  %383 = load i32, i32* %379, align 4
  %384 = getelementptr inbounds i32, i32* %366, i64 6
  store i32 %383, i32* %381, align 4
  %385 = getelementptr inbounds i32, i32* %364, i64 7
  %386 = load i32, i32* %382, align 4
  %387 = getelementptr inbounds i32, i32* %366, i64 7
  store i32 %386, i32* %384, align 4
  %388 = add i64 %365, -8
  %389 = getelementptr inbounds i32, i32* %364, i64 8
  %390 = load i32, i32* %385, align 4
  %391 = getelementptr inbounds i32, i32* %366, i64 8
  store i32 %390, i32* %387, align 4
  %392 = icmp eq i64 %388, 0
  br i1 %392, label %407, label %363, !llvm.loop !266

393:                                              ; preds = %246
  %394 = inttoptr i64 %235 to i8*
  %395 = shl nsw i64 %238, 2
  %396 = add nsw i64 %395, -4
  %397 = lshr exact i64 %396, 2
  switch i64 %397, label %406 [
    i64 3, label %405
    i64 1, label %400
    i64 2, label %404
    i64 0, label %398
  ]

398:                                              ; preds = %393
  %399 = load i32, i32* %241, align 1
  store i32 %399, i32* %239, align 1
  br label %407

400:                                              ; preds = %393
  %401 = inttoptr i64 %235 to i64*
  %402 = inttoptr i64 %234 to i64*
  %403 = load i64, i64* %401, align 1
  store i64 %403, i64* %402, align 1
  br label %407

404:                                              ; preds = %393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %243, i8* align 1 %394, i64 12, i1 false) #12
  br label %407

405:                                              ; preds = %393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %243, i8* align 1 %394, i64 16, i1 false) #12
  br label %407

406:                                              ; preds = %393
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %243, i8* align 1 %394, i64 %395, i1 false) #12
  br label %407

407:                                              ; preds = %358, %363, %338, %406, %405, %404, %400, %398, %231
  %408 = trunc i64 %232 to i32
  %409 = inttoptr i64 %176 to i32*
  %410 = cmpxchg volatile i32* %409, i32 %84, i32 %408 release monotonic
  %411 = extractvalue { i32, i1 } %410, 1
  br i1 %411, label %412, label %619

412:                                              ; preds = %407
  %413 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %414 = load i8, i8* %413, align 8, !range !2
  %415 = icmp eq i8 %414, 0
  br i1 %415, label %418, label %416, !prof !60

416:                                              ; preds = %412
  %417 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %417, i64 %228, i64 %104, i32 %105) #12
  br label %418

418:                                              ; preds = %416, %412
  %419 = load i8, i8* %39, align 1, !range !2
  %420 = icmp eq i8 %419, 0
  br i1 %420, label %548, label %421

421:                                              ; preds = %418
  %422 = and i64 %228, -262144
  %423 = or i64 %422, 272
  %424 = sub i64 %228, %422
  %425 = trunc i64 %424 to i32
  %426 = lshr i32 %425, 2
  %427 = and i32 %426, 31
  %428 = shl i32 1, %427
  %429 = inttoptr i64 %423 to i32*
  %430 = lshr i64 %424, 7
  %431 = and i64 %430, 33554431
  %432 = getelementptr inbounds i32, i32* %429, i64 %431
  %433 = load atomic i32, i32* %432 acquire, align 4
  %434 = and i32 %433, %428
  %435 = icmp eq i32 %434, 0
  br i1 %435, label %445, label %436

436:                                              ; preds = %421
  %437 = shl i32 %428, 1
  %438 = icmp eq i32 %437, 0
  %439 = getelementptr inbounds i32, i32* %432, i64 1
  %440 = select i1 %438, i32 1, i32 %437
  %441 = select i1 %438, i32* %439, i32* %432
  %442 = load atomic i32, i32* %441 acquire, align 4
  %443 = and i32 %442, %440
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %548

445:                                              ; preds = %436, %421
  %446 = or i64 %110, 272
  %447 = sub i64 %104, %110
  %448 = trunc i64 %447 to i32
  %449 = lshr i32 %448, 2
  %450 = and i32 %449, 31
  %451 = shl i32 1, %450
  %452 = inttoptr i64 %446 to i32*
  %453 = lshr i64 %447, 7
  %454 = and i64 %453, 33554431
  %455 = getelementptr inbounds i32, i32* %452, i64 %454
  %456 = load atomic i32, i32* %455 acquire, align 4
  %457 = and i32 %456, %451
  %458 = icmp eq i32 %457, 0
  br i1 %458, label %479, label %459

459:                                              ; preds = %445
  %460 = shl i32 %451, 1
  %461 = icmp eq i32 %460, 0
  %462 = getelementptr inbounds i32, i32* %455, i64 1
  %463 = select i1 %461, i32 1, i32 %460
  %464 = select i1 %461, i32* %462, i32* %455
  %465 = load atomic i32, i32* %464 acquire, align 4
  %466 = and i32 %465, %463
  %467 = icmp eq i32 %466, 0
  br i1 %467, label %468, label %479

468:                                              ; preds = %459
  %469 = load atomic i32, i32* %432 monotonic, align 4
  br label %470

470:                                              ; preds = %474, %468
  %471 = phi i32 [ %469, %468 ], [ %477, %474 ]
  %472 = and i32 %471, %428
  %473 = icmp eq i32 %472, %428
  br i1 %473, label %548, label %474

474:                                              ; preds = %470
  %475 = or i32 %471, %428
  %476 = cmpxchg volatile i32* %432, i32 %471, i32 %475 release monotonic
  %477 = extractvalue { i32, i1 } %476, 0
  %478 = extractvalue { i32, i1 } %476, 1
  br i1 %478, label %548, label %470

479:                                              ; preds = %459, %445
  %480 = load atomic i32, i32* %455 acquire, align 4
  %481 = and i32 %480, %451
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %548, label %483

483:                                              ; preds = %479
  %484 = shl i32 %451, 1
  %485 = icmp eq i32 %484, 0
  %486 = getelementptr inbounds i32, i32* %455, i64 1
  %487 = select i1 %485, i32 1, i32 %484
  %488 = select i1 %485, i32* %486, i32* %455
  %489 = load atomic i32, i32* %488 acquire, align 4
  %490 = and i32 %489, %487
  %491 = icmp eq i32 %490, 0
  br i1 %491, label %548, label %492

492:                                              ; preds = %483
  %493 = load atomic i32, i32* %432 monotonic, align 4
  br label %494

494:                                              ; preds = %498, %492
  %495 = phi i32 [ %493, %492 ], [ %501, %498 ]
  %496 = and i32 %495, %428
  %497 = icmp eq i32 %496, %428
  br i1 %497, label %548, label %498

498:                                              ; preds = %494
  %499 = or i32 %495, %428
  %500 = cmpxchg volatile i32* %432, i32 %495, i32 %499 release monotonic
  %501 = extractvalue { i32, i1 } %500, 0
  %502 = extractvalue { i32, i1 } %500, 1
  br i1 %502, label %503, label %494

503:                                              ; preds = %498
  %504 = bitcast %"class.v8::internal::HeapObject"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %504) #12
  %505 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %16, i64 0, i32 0, i32 0, i32 0
  store i64 %228, i64* %505, align 8
  %506 = xor i64 %422, -1
  %507 = add i64 %228, %506
  %508 = trunc i64 %507 to i32
  %509 = lshr i32 %508, 2
  %510 = and i32 %509, 31
  %511 = shl i32 1, %510
  %512 = lshr i64 %507, 7
  %513 = and i64 %512, 33554431
  %514 = getelementptr inbounds i32, i32* %429, i64 %513
  %515 = load atomic i32, i32* %514 acquire, align 4
  %516 = and i32 %515, %511
  %517 = icmp eq i32 %516, 0
  br i1 %517, label %547, label %518

518:                                              ; preds = %503
  %519 = shl i32 %511, 1
  %520 = icmp eq i32 %519, 0
  %521 = getelementptr inbounds i32, i32* %514, i64 1
  %522 = select i1 %520, i32 1, i32 %519
  %523 = select i1 %520, i32* %521, i32* %514
  %524 = load atomic i32, i32* %523 monotonic, align 4
  br label %525

525:                                              ; preds = %529, %518
  %526 = phi i32 [ %524, %518 ], [ %532, %529 ]
  %527 = and i32 %526, %522
  %528 = icmp eq i32 %527, %522
  br i1 %528, label %547, label %529

529:                                              ; preds = %525
  %530 = or i32 %526, %522
  %531 = cmpxchg volatile i32* %523, i32 %526, i32 %530 release monotonic
  %532 = extractvalue { i32, i1 } %531, 0
  %533 = extractvalue { i32, i1 } %531, 1
  br i1 %533, label %534, label %525

534:                                              ; preds = %529
  %535 = inttoptr i64 %422 to %"class.v8::internal::MemoryChunk"*
  %536 = load i64, i64* %505, align 8
  %537 = and i64 %536, -4294967296
  %538 = add i64 %536, -1
  %539 = inttoptr i64 %538 to i32*
  %540 = load atomic i32, i32* %539 monotonic, align 4
  %541 = zext i32 %540 to i64
  %542 = or i64 %537, %541
  %543 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %16, i64 %542) #12
  %544 = sext i32 %543 to i64
  %545 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %535, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %546 = atomicrmw add i64* %545, i64 %544 seq_cst
  br label %547

547:                                              ; preds = %525, %534, %503
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %504) #12
  br label %548

548:                                              ; preds = %474, %470, %494, %547, %483, %479, %436, %418
  %549 = load i64, i64* %47, align 8
  %550 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %551 = icmp eq i8 %550, 0
  br i1 %551, label %655, label %552

552:                                              ; preds = %548
  %553 = add i64 %86, 7
  %554 = inttoptr i64 %553 to i16*
  %555 = load atomic i16, i16* %554 monotonic, align 2
  switch i16 %555, label %655 [
    i16 1085, label %556
    i16 1057, label %556
  ]

556:                                              ; preds = %552, %552
  %557 = bitcast %"class.v8::internal::HeapObject"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %557) #12
  %558 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %17, i64 0, i32 0, i32 0, i32 0
  store i64 %104, i64* %558, align 8
  %559 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %17, i64 %86) #12
  %560 = sext i32 %559 to i64
  %561 = add i64 %176, %560
  %562 = add i64 %561, 4
  %563 = and i64 %562, -262144
  %564 = inttoptr i64 %563 to %"class.v8::internal::Page"*
  %565 = icmp eq %"class.v8::internal::Page"* %178, %564
  br i1 %565, label %566, label %596

566:                                              ; preds = %556
  %567 = add i64 %104, %560
  %568 = add i64 %549, -41416
  %569 = inttoptr i64 %568 to %"class.v8::internal::Isolate"*
  %570 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %569, i64 0, i32 0, i32 7, i32 0, i64 534
  %571 = load i64, i64* %570, align 8
  %572 = inttoptr i64 %561 to i32*
  %573 = load atomic i32, i32* %572 monotonic, align 4
  %574 = trunc i64 %571 to i32
  %575 = icmp eq i32 %573, %574
  br i1 %575, label %576, label %596

576:                                              ; preds = %566
  %577 = load i64, i64* %183, align 8
  %578 = and i64 %577, 524288
  %579 = icmp eq i64 %578, 0
  br i1 %579, label %597, label %580

580:                                              ; preds = %576
  %581 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 8, i32 0
  %582 = bitcast %"struct.std::__1::__atomic_base.69"* %581 to i64*
  %583 = load atomic i64, i64* %582 seq_cst, align 64
  %584 = inttoptr i64 %583 to %"class.v8::internal::SemiSpace"*
  %585 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %584, i64 0, i32 5
  %586 = load i64, i64* %585, align 8
  %587 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 3
  %588 = load i64, i64* %587, align 8
  %589 = icmp ugt i64 %588, %586
  br i1 %589, label %596, label %590

590:                                              ; preds = %580
  %591 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 4
  %592 = load i64, i64* %591, align 32
  %593 = icmp ule i64 %592, %586
  %594 = icmp ult i64 %176, %586
  %595 = or i1 %594, %593
  br i1 %595, label %596, label %597

596:                                              ; preds = %590, %580, %566, %556
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %557) #12
  br label %655

597:                                              ; preds = %590, %576
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %557) #12
  %598 = trunc i64 %567 to i32
  %599 = icmp eq i32 %598, 0
  br i1 %599, label %655, label %600

600:                                              ; preds = %597
  %601 = and i64 %567, -4294967296
  %602 = add i64 %567, 3
  %603 = inttoptr i64 %602 to i32*
  %604 = load i32, i32* %603, align 4
  %605 = zext i32 %604 to i64
  %606 = or i64 %601, %605
  %607 = bitcast %"class.v8::internal::AllocationSite"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %607) #12
  %608 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %606, i64* %608, align 8
  %609 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %610 = bitcast %"class.std::__1::tuple"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %610) #12
  %611 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %18, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %20, %"class.v8::internal::AllocationSite"** %611, align 8
  %612 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %19, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %612) #12
  %613 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %609, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %20, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %18, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %19) #12
  %614 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %613, 0
  %615 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %614, i64 3
  %616 = bitcast %"struct.std::__1::__hash_node_base.518"* %615 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %612) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %610) #12
  %617 = load i64, i64* %616, align 8
  %618 = add i64 %617, 1
  store i64 %618, i64* %616, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %607) #12
  br label %655

619:                                              ; preds = %407
  %620 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %621 = load i64, i64* %620, align 8
  %622 = icmp eq i64 %621, 0
  br i1 %622, label %628, label %623

623:                                              ; preds = %619
  %624 = sext i32 %105 to i64
  %625 = sub i64 %621, %624
  %626 = icmp eq i64 %625, %232
  br i1 %626, label %627, label %628

627:                                              ; preds = %623
  store i64 %232, i64* %620, align 8
  br label %632

628:                                              ; preds = %623, %619
  %629 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %198, i64 0, i32 0
  %630 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %629, align 8
  %631 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %630, i64 %232, i32 %105, i32 1) #12
  br label %632

632:                                              ; preds = %628, %627
  %633 = and i64 %104, -4294967296
  %634 = load atomic i32, i32* %409 acquire, align 4
  %635 = zext i32 %634 to i64
  %636 = or i64 %633, %635
  %637 = add i64 %636, 1
  %638 = load i64, i64* %64, align 8
  %639 = and i64 %638, 2
  %640 = or i64 %637, %639
  store i64 %640, i64* %64, align 8
  %641 = and i64 %637, 1
  %642 = icmp ne i64 %641, 0
  %643 = trunc i64 %640 to i32
  %644 = icmp ne i32 %643, 3
  %645 = and i1 %642, %644
  br i1 %645, label %646, label %1768

646:                                              ; preds = %632
  %647 = and i64 %637, -262144
  %648 = inttoptr i64 %647 to %"class.v8::internal::BasicMemoryChunk"*
  %649 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %648, i64 0, i32 1
  %650 = load i64, i64* %649, align 8
  %651 = lshr i64 %650, 4
  %652 = trunc i64 %651 to i32
  %653 = and i32 %652, 1
  %654 = xor i32 %653, 1
  br label %1768

655:                                              ; preds = %600, %597, %596, %552, %548
  %656 = load i64, i64* %64, align 8
  %657 = and i64 %656, 2
  %658 = or i64 %657, %228
  store i64 %658, i64* %64, align 8
  br i1 %109, label %659, label %719

659:                                              ; preds = %655
  %660 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %661 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %660, align 8
  %662 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %663 = load i32, i32* %662, align 8
  %664 = sext i32 %663 to i64
  %665 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %661, i64 0, i32 0, i64 %664, i32 0
  %666 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %665, align 8
  %667 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %666, i64 0, i32 1
  %668 = load i64, i64* %667, align 8
  %669 = icmp eq i64 %668, 256
  br i1 %669, label %674, label %670

670:                                              ; preds = %659
  %671 = add i64 %668, 1
  store i64 %671, i64* %667, align 8
  %672 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %666, i64 0, i32 2, i64 %668, i32 0, i32 0, i32 0, i32 0
  store i64 %228, i64* %672, align 8
  %673 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %666, i64 0, i32 2, i64 %668, i32 1
  store i32 %105, i32* %673, align 8
  br label %719

674:                                              ; preds = %659
  %675 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %661, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %675) #12
  %676 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %661, i64 0, i32 1, i32 1
  %677 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %676 to i64*
  %678 = load i64, i64* %677, align 8
  %679 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %666 to i64*
  store i64 %678, i64* %679, align 8
  %680 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %666 to i64
  store atomic volatile i64 %680, i64* %677 monotonic, align 8
  %681 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %661, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %682 = atomicrmw add i64* %681, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %675) #12
  %683 = call i8* @_Znwm(i64 4112) #17
  %684 = getelementptr inbounds i8, i8* %683, i64 8
  %685 = bitcast i8* %684 to i64*
  store i64 0, i64* %685, align 8
  %686 = getelementptr inbounds i8, i8* %683, i64 16
  %687 = bitcast i8* %686 to %"struct.std::__1::pair.1282"*
  %688 = getelementptr inbounds i8, i8* %683, i64 4112
  %689 = bitcast i8* %688 to %"struct.std::__1::pair.1282"*
  br label %690

690:                                              ; preds = %690, %674
  %691 = phi %"struct.std::__1::pair.1282"* [ %687, %674 ], [ %708, %690 ]
  %692 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %692, align 8
  %693 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 0, i32 1
  store i32 0, i32* %693, align 8
  %694 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %694, align 8
  %695 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 1, i32 1
  store i32 0, i32* %695, align 8
  %696 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %696, align 8
  %697 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 2, i32 1
  store i32 0, i32* %697, align 8
  %698 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %698, align 8
  %699 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 3, i32 1
  store i32 0, i32* %699, align 8
  %700 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %700, align 8
  %701 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 4, i32 1
  store i32 0, i32* %701, align 8
  %702 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %702, align 8
  %703 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 5, i32 1
  store i32 0, i32* %703, align 8
  %704 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %704, align 8
  %705 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 6, i32 1
  store i32 0, i32* %705, align 8
  %706 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %706, align 8
  %707 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 7, i32 1
  store i32 0, i32* %707, align 8
  %708 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %691, i64 8
  %709 = icmp eq %"struct.std::__1::pair.1282"* %708, %689
  br i1 %709, label %710, label %690

710:                                              ; preds = %690
  %711 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %665 to i8**
  store i8* %683, i8** %711, align 8
  %712 = bitcast i8* %683 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %713 = load i64, i64* %685, align 8
  %714 = icmp eq i64 %713, 256
  br i1 %714, label %719, label %715

715:                                              ; preds = %710
  %716 = add i64 %713, 1
  store i64 %716, i64* %685, align 8
  %717 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %712, i64 0, i32 2, i64 %713, i32 0, i32 0, i32 0, i32 0
  store i64 %228, i64* %717, align 8
  %718 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %712, i64 0, i32 2, i64 %713, i32 1
  store i32 %105, i32* %718, align 8
  br label %719

719:                                              ; preds = %715, %710, %670, %655
  %720 = sext i32 %105 to i64
  %721 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %722 = load i64, i64* %721, align 8
  %723 = add i64 %722, %720
  store i64 %723, i64* %721, align 8
  br label %1768

724:                                              ; preds = %227, %191, %187
  %725 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %726 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %727 = load i64, i64* %726, align 8
  %728 = sext i32 %105 to i64
  %729 = add i64 %727, %728
  %730 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %731 = load i64, i64* %730, align 8
  %732 = icmp ugt i64 %729, %731
  br i1 %732, label %733, label %738

733:                                              ; preds = %724
  %734 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %735 = load i32, i32* %734, align 8
  %736 = sext i32 %735 to i64
  %737 = shl nsw i64 %736, 1
  br label %743

738:                                              ; preds = %724
  store i64 %729, i64* %726, align 8
  %739 = add i64 %727, 1
  %740 = and i64 %739, 1
  %741 = icmp eq i64 %740, 0
  br i1 %741, label %742, label %743, !prof !29

742:                                              ; preds = %738
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

743:                                              ; preds = %738, %733
  %744 = phi i64 [ %737, %733 ], [ %739, %738 ]
  %745 = and i64 %744, 1
  %746 = icmp eq i64 %745, 0
  br i1 %746, label %747, label %751

747:                                              ; preds = %743
  %748 = call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %725, i32 %105, i32 0, i32 2) #12
  %749 = and i64 %748, 1
  %750 = icmp eq i64 %749, 0
  br i1 %750, label %1242, label %751

751:                                              ; preds = %747, %743
  %752 = phi i64 [ %748, %747 ], [ %744, %743 ]
  %753 = add i64 %752, -1
  %754 = inttoptr i64 %753 to i32*
  store atomic volatile i32 %84, i32* %754 monotonic, align 4
  %755 = add i64 %752, 3
  %756 = add i64 %104, 3
  %757 = add nsw i32 %105, -4
  %758 = sdiv i32 %757, 4
  %759 = sext i32 %758 to i64
  %760 = inttoptr i64 %755 to i32*
  %761 = inttoptr i64 %755 to i8*
  %762 = inttoptr i64 %756 to i32*
  %763 = inttoptr i64 %756 to i8*
  %764 = inttoptr i64 %755 to i8*
  %765 = add i32 %105, -1
  %766 = icmp ult i32 %765, 7
  br i1 %766, label %928, label %767

767:                                              ; preds = %751
  %768 = icmp ult i32 %758, 16
  br i1 %768, label %769, label %914

769:                                              ; preds = %767
  %770 = icmp ult i32 %758, 8
  br i1 %770, label %861, label %771

771:                                              ; preds = %769
  %772 = getelementptr i32, i32* %760, i64 %759
  %773 = bitcast i32* %772 to i8*
  %774 = getelementptr i32, i32* %762, i64 %759
  %775 = bitcast i32* %774 to i8*
  %776 = icmp ult i8* %761, %775
  %777 = icmp ult i8* %763, %773
  %778 = and i1 %776, %777
  br i1 %778, label %861, label %779

779:                                              ; preds = %771
  %780 = and i64 %759, -8
  %781 = getelementptr i32, i32* %762, i64 %780
  %782 = sub nsw i64 %759, %780
  %783 = getelementptr i32, i32* %760, i64 %780
  %784 = add nsw i64 %780, -8
  %785 = lshr exact i64 %784, 3
  %786 = add nuw nsw i64 %785, 1
  %787 = and i64 %786, 3
  %788 = icmp ult i64 %784, 24
  br i1 %788, label %840, label %789

789:                                              ; preds = %779
  %790 = sub nsw i64 %786, %787
  br label %791

791:                                              ; preds = %791, %789
  %792 = phi i64 [ 0, %789 ], [ %837, %791 ]
  %793 = phi i64 [ %790, %789 ], [ %838, %791 ]
  %794 = getelementptr i32, i32* %762, i64 %792
  %795 = getelementptr i32, i32* %760, i64 %792
  %796 = bitcast i32* %794 to <4 x i32>*
  %797 = load <4 x i32>, <4 x i32>* %796, align 4, !alias.scope !267
  %798 = getelementptr i32, i32* %794, i64 4
  %799 = bitcast i32* %798 to <4 x i32>*
  %800 = load <4 x i32>, <4 x i32>* %799, align 4, !alias.scope !267
  %801 = bitcast i32* %795 to <4 x i32>*
  store <4 x i32> %797, <4 x i32>* %801, align 4, !alias.scope !270, !noalias !267
  %802 = getelementptr i32, i32* %795, i64 4
  %803 = bitcast i32* %802 to <4 x i32>*
  store <4 x i32> %800, <4 x i32>* %803, align 4, !alias.scope !270, !noalias !267
  %804 = or i64 %792, 8
  %805 = getelementptr i32, i32* %762, i64 %804
  %806 = getelementptr i32, i32* %760, i64 %804
  %807 = bitcast i32* %805 to <4 x i32>*
  %808 = load <4 x i32>, <4 x i32>* %807, align 4, !alias.scope !267
  %809 = getelementptr i32, i32* %805, i64 4
  %810 = bitcast i32* %809 to <4 x i32>*
  %811 = load <4 x i32>, <4 x i32>* %810, align 4, !alias.scope !267
  %812 = bitcast i32* %806 to <4 x i32>*
  store <4 x i32> %808, <4 x i32>* %812, align 4, !alias.scope !270, !noalias !267
  %813 = getelementptr i32, i32* %806, i64 4
  %814 = bitcast i32* %813 to <4 x i32>*
  store <4 x i32> %811, <4 x i32>* %814, align 4, !alias.scope !270, !noalias !267
  %815 = or i64 %792, 16
  %816 = getelementptr i32, i32* %762, i64 %815
  %817 = getelementptr i32, i32* %760, i64 %815
  %818 = bitcast i32* %816 to <4 x i32>*
  %819 = load <4 x i32>, <4 x i32>* %818, align 4, !alias.scope !267
  %820 = getelementptr i32, i32* %816, i64 4
  %821 = bitcast i32* %820 to <4 x i32>*
  %822 = load <4 x i32>, <4 x i32>* %821, align 4, !alias.scope !267
  %823 = bitcast i32* %817 to <4 x i32>*
  store <4 x i32> %819, <4 x i32>* %823, align 4, !alias.scope !270, !noalias !267
  %824 = getelementptr i32, i32* %817, i64 4
  %825 = bitcast i32* %824 to <4 x i32>*
  store <4 x i32> %822, <4 x i32>* %825, align 4, !alias.scope !270, !noalias !267
  %826 = or i64 %792, 24
  %827 = getelementptr i32, i32* %762, i64 %826
  %828 = getelementptr i32, i32* %760, i64 %826
  %829 = bitcast i32* %827 to <4 x i32>*
  %830 = load <4 x i32>, <4 x i32>* %829, align 4, !alias.scope !267
  %831 = getelementptr i32, i32* %827, i64 4
  %832 = bitcast i32* %831 to <4 x i32>*
  %833 = load <4 x i32>, <4 x i32>* %832, align 4, !alias.scope !267
  %834 = bitcast i32* %828 to <4 x i32>*
  store <4 x i32> %830, <4 x i32>* %834, align 4, !alias.scope !270, !noalias !267
  %835 = getelementptr i32, i32* %828, i64 4
  %836 = bitcast i32* %835 to <4 x i32>*
  store <4 x i32> %833, <4 x i32>* %836, align 4, !alias.scope !270, !noalias !267
  %837 = add i64 %792, 32
  %838 = add i64 %793, -4
  %839 = icmp eq i64 %838, 0
  br i1 %839, label %840, label %791, !llvm.loop !272

840:                                              ; preds = %791, %779
  %841 = phi i64 [ 0, %779 ], [ %837, %791 ]
  %842 = icmp eq i64 %787, 0
  br i1 %842, label %859, label %843

843:                                              ; preds = %840, %843
  %844 = phi i64 [ %856, %843 ], [ %841, %840 ]
  %845 = phi i64 [ %857, %843 ], [ %787, %840 ]
  %846 = getelementptr i32, i32* %762, i64 %844
  %847 = getelementptr i32, i32* %760, i64 %844
  %848 = bitcast i32* %846 to <4 x i32>*
  %849 = load <4 x i32>, <4 x i32>* %848, align 4, !alias.scope !267
  %850 = getelementptr i32, i32* %846, i64 4
  %851 = bitcast i32* %850 to <4 x i32>*
  %852 = load <4 x i32>, <4 x i32>* %851, align 4, !alias.scope !267
  %853 = bitcast i32* %847 to <4 x i32>*
  store <4 x i32> %849, <4 x i32>* %853, align 4, !alias.scope !270, !noalias !267
  %854 = getelementptr i32, i32* %847, i64 4
  %855 = bitcast i32* %854 to <4 x i32>*
  store <4 x i32> %852, <4 x i32>* %855, align 4, !alias.scope !270, !noalias !267
  %856 = add i64 %844, 8
  %857 = add i64 %845, -1
  %858 = icmp eq i64 %857, 0
  br i1 %858, label %859, label %843, !llvm.loop !273

859:                                              ; preds = %843, %840
  %860 = icmp eq i64 %780, %759
  br i1 %860, label %928, label %861

861:                                              ; preds = %859, %771, %769
  %862 = phi i32* [ %762, %771 ], [ %762, %769 ], [ %781, %859 ]
  %863 = phi i64 [ %759, %771 ], [ %759, %769 ], [ %782, %859 ]
  %864 = phi i32* [ %760, %771 ], [ %760, %769 ], [ %783, %859 ]
  %865 = add nsw i64 %863, -1
  %866 = and i64 %863, 7
  %867 = icmp eq i64 %866, 0
  br i1 %867, label %879, label %868

868:                                              ; preds = %861, %868
  %869 = phi i32* [ %874, %868 ], [ %862, %861 ]
  %870 = phi i64 [ %873, %868 ], [ %863, %861 ]
  %871 = phi i32* [ %876, %868 ], [ %864, %861 ]
  %872 = phi i64 [ %877, %868 ], [ %866, %861 ]
  %873 = add i64 %870, -1
  %874 = getelementptr inbounds i32, i32* %869, i64 1
  %875 = load i32, i32* %869, align 4
  %876 = getelementptr inbounds i32, i32* %871, i64 1
  store i32 %875, i32* %871, align 4
  %877 = add i64 %872, -1
  %878 = icmp eq i64 %877, 0
  br i1 %878, label %879, label %868, !llvm.loop !274

879:                                              ; preds = %868, %861
  %880 = phi i32* [ %862, %861 ], [ %874, %868 ]
  %881 = phi i64 [ %863, %861 ], [ %873, %868 ]
  %882 = phi i32* [ %864, %861 ], [ %876, %868 ]
  %883 = icmp ult i64 %865, 7
  br i1 %883, label %928, label %884

884:                                              ; preds = %879, %884
  %885 = phi i32* [ %910, %884 ], [ %880, %879 ]
  %886 = phi i64 [ %909, %884 ], [ %881, %879 ]
  %887 = phi i32* [ %912, %884 ], [ %882, %879 ]
  %888 = getelementptr inbounds i32, i32* %885, i64 1
  %889 = load i32, i32* %885, align 4
  %890 = getelementptr inbounds i32, i32* %887, i64 1
  store i32 %889, i32* %887, align 4
  %891 = getelementptr inbounds i32, i32* %885, i64 2
  %892 = load i32, i32* %888, align 4
  %893 = getelementptr inbounds i32, i32* %887, i64 2
  store i32 %892, i32* %890, align 4
  %894 = getelementptr inbounds i32, i32* %885, i64 3
  %895 = load i32, i32* %891, align 4
  %896 = getelementptr inbounds i32, i32* %887, i64 3
  store i32 %895, i32* %893, align 4
  %897 = getelementptr inbounds i32, i32* %885, i64 4
  %898 = load i32, i32* %894, align 4
  %899 = getelementptr inbounds i32, i32* %887, i64 4
  store i32 %898, i32* %896, align 4
  %900 = getelementptr inbounds i32, i32* %885, i64 5
  %901 = load i32, i32* %897, align 4
  %902 = getelementptr inbounds i32, i32* %887, i64 5
  store i32 %901, i32* %899, align 4
  %903 = getelementptr inbounds i32, i32* %885, i64 6
  %904 = load i32, i32* %900, align 4
  %905 = getelementptr inbounds i32, i32* %887, i64 6
  store i32 %904, i32* %902, align 4
  %906 = getelementptr inbounds i32, i32* %885, i64 7
  %907 = load i32, i32* %903, align 4
  %908 = getelementptr inbounds i32, i32* %887, i64 7
  store i32 %907, i32* %905, align 4
  %909 = add i64 %886, -8
  %910 = getelementptr inbounds i32, i32* %885, i64 8
  %911 = load i32, i32* %906, align 4
  %912 = getelementptr inbounds i32, i32* %887, i64 8
  store i32 %911, i32* %908, align 4
  %913 = icmp eq i64 %909, 0
  br i1 %913, label %928, label %884, !llvm.loop !275

914:                                              ; preds = %767
  %915 = inttoptr i64 %756 to i8*
  %916 = shl nsw i64 %759, 2
  %917 = add nsw i64 %916, -4
  %918 = lshr exact i64 %917, 2
  switch i64 %918, label %927 [
    i64 3, label %926
    i64 1, label %921
    i64 2, label %925
    i64 0, label %919
  ]

919:                                              ; preds = %914
  %920 = load i32, i32* %762, align 1
  store i32 %920, i32* %760, align 1
  br label %928

921:                                              ; preds = %914
  %922 = inttoptr i64 %756 to i64*
  %923 = inttoptr i64 %755 to i64*
  %924 = load i64, i64* %922, align 1
  store i64 %924, i64* %923, align 1
  br label %928

925:                                              ; preds = %914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %764, i8* align 1 %915, i64 12, i1 false) #12
  br label %928

926:                                              ; preds = %914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %764, i8* align 1 %915, i64 16, i1 false) #12
  br label %928

927:                                              ; preds = %914
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %764, i8* align 1 %915, i64 %916, i1 false) #12
  br label %928

928:                                              ; preds = %879, %884, %859, %927, %926, %925, %921, %919, %751
  %929 = trunc i64 %753 to i32
  %930 = inttoptr i64 %176 to i32*
  %931 = cmpxchg volatile i32* %930, i32 %84, i32 %929 release monotonic
  %932 = extractvalue { i32, i1 } %931, 1
  br i1 %932, label %933, label %1140

933:                                              ; preds = %928
  %934 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %935 = load i8, i8* %934, align 8, !range !2
  %936 = icmp eq i8 %935, 0
  br i1 %936, label %939, label %937, !prof !60

937:                                              ; preds = %933
  %938 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %938, i64 %752, i64 %104, i32 %105) #12
  br label %939

939:                                              ; preds = %937, %933
  %940 = load i8, i8* %39, align 1, !range !2
  %941 = icmp eq i8 %940, 0
  br i1 %941, label %1069, label %942

942:                                              ; preds = %939
  %943 = and i64 %752, -262144
  %944 = or i64 %943, 272
  %945 = sub i64 %752, %943
  %946 = trunc i64 %945 to i32
  %947 = lshr i32 %946, 2
  %948 = and i32 %947, 31
  %949 = shl i32 1, %948
  %950 = inttoptr i64 %944 to i32*
  %951 = lshr i64 %945, 7
  %952 = and i64 %951, 33554431
  %953 = getelementptr inbounds i32, i32* %950, i64 %952
  %954 = load atomic i32, i32* %953 acquire, align 4
  %955 = and i32 %954, %949
  %956 = icmp eq i32 %955, 0
  br i1 %956, label %966, label %957

957:                                              ; preds = %942
  %958 = shl i32 %949, 1
  %959 = icmp eq i32 %958, 0
  %960 = getelementptr inbounds i32, i32* %953, i64 1
  %961 = select i1 %959, i32 1, i32 %958
  %962 = select i1 %959, i32* %960, i32* %953
  %963 = load atomic i32, i32* %962 acquire, align 4
  %964 = and i32 %963, %961
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %966, label %1069

966:                                              ; preds = %957, %942
  %967 = or i64 %110, 272
  %968 = sub i64 %104, %110
  %969 = trunc i64 %968 to i32
  %970 = lshr i32 %969, 2
  %971 = and i32 %970, 31
  %972 = shl i32 1, %971
  %973 = inttoptr i64 %967 to i32*
  %974 = lshr i64 %968, 7
  %975 = and i64 %974, 33554431
  %976 = getelementptr inbounds i32, i32* %973, i64 %975
  %977 = load atomic i32, i32* %976 acquire, align 4
  %978 = and i32 %977, %972
  %979 = icmp eq i32 %978, 0
  br i1 %979, label %1000, label %980

980:                                              ; preds = %966
  %981 = shl i32 %972, 1
  %982 = icmp eq i32 %981, 0
  %983 = getelementptr inbounds i32, i32* %976, i64 1
  %984 = select i1 %982, i32 1, i32 %981
  %985 = select i1 %982, i32* %983, i32* %976
  %986 = load atomic i32, i32* %985 acquire, align 4
  %987 = and i32 %986, %984
  %988 = icmp eq i32 %987, 0
  br i1 %988, label %989, label %1000

989:                                              ; preds = %980
  %990 = load atomic i32, i32* %953 monotonic, align 4
  br label %991

991:                                              ; preds = %995, %989
  %992 = phi i32 [ %990, %989 ], [ %998, %995 ]
  %993 = and i32 %992, %949
  %994 = icmp eq i32 %993, %949
  br i1 %994, label %1069, label %995

995:                                              ; preds = %991
  %996 = or i32 %992, %949
  %997 = cmpxchg volatile i32* %953, i32 %992, i32 %996 release monotonic
  %998 = extractvalue { i32, i1 } %997, 0
  %999 = extractvalue { i32, i1 } %997, 1
  br i1 %999, label %1069, label %991

1000:                                             ; preds = %980, %966
  %1001 = load atomic i32, i32* %976 acquire, align 4
  %1002 = and i32 %1001, %972
  %1003 = icmp eq i32 %1002, 0
  br i1 %1003, label %1069, label %1004

1004:                                             ; preds = %1000
  %1005 = shl i32 %972, 1
  %1006 = icmp eq i32 %1005, 0
  %1007 = getelementptr inbounds i32, i32* %976, i64 1
  %1008 = select i1 %1006, i32 1, i32 %1005
  %1009 = select i1 %1006, i32* %1007, i32* %976
  %1010 = load atomic i32, i32* %1009 acquire, align 4
  %1011 = and i32 %1010, %1008
  %1012 = icmp eq i32 %1011, 0
  br i1 %1012, label %1069, label %1013

1013:                                             ; preds = %1004
  %1014 = load atomic i32, i32* %953 monotonic, align 4
  br label %1015

1015:                                             ; preds = %1019, %1013
  %1016 = phi i32 [ %1014, %1013 ], [ %1022, %1019 ]
  %1017 = and i32 %1016, %949
  %1018 = icmp eq i32 %1017, %949
  br i1 %1018, label %1069, label %1019

1019:                                             ; preds = %1015
  %1020 = or i32 %1016, %949
  %1021 = cmpxchg volatile i32* %953, i32 %1016, i32 %1020 release monotonic
  %1022 = extractvalue { i32, i1 } %1021, 0
  %1023 = extractvalue { i32, i1 } %1021, 1
  br i1 %1023, label %1024, label %1015

1024:                                             ; preds = %1019
  %1025 = bitcast %"class.v8::internal::HeapObject"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1025) #12
  %1026 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %11, i64 0, i32 0, i32 0, i32 0
  store i64 %752, i64* %1026, align 8
  %1027 = xor i64 %943, -1
  %1028 = add i64 %752, %1027
  %1029 = trunc i64 %1028 to i32
  %1030 = lshr i32 %1029, 2
  %1031 = and i32 %1030, 31
  %1032 = shl i32 1, %1031
  %1033 = lshr i64 %1028, 7
  %1034 = and i64 %1033, 33554431
  %1035 = getelementptr inbounds i32, i32* %950, i64 %1034
  %1036 = load atomic i32, i32* %1035 acquire, align 4
  %1037 = and i32 %1036, %1032
  %1038 = icmp eq i32 %1037, 0
  br i1 %1038, label %1068, label %1039

1039:                                             ; preds = %1024
  %1040 = shl i32 %1032, 1
  %1041 = icmp eq i32 %1040, 0
  %1042 = getelementptr inbounds i32, i32* %1035, i64 1
  %1043 = select i1 %1041, i32 1, i32 %1040
  %1044 = select i1 %1041, i32* %1042, i32* %1035
  %1045 = load atomic i32, i32* %1044 monotonic, align 4
  br label %1046

1046:                                             ; preds = %1050, %1039
  %1047 = phi i32 [ %1045, %1039 ], [ %1053, %1050 ]
  %1048 = and i32 %1047, %1043
  %1049 = icmp eq i32 %1048, %1043
  br i1 %1049, label %1068, label %1050

1050:                                             ; preds = %1046
  %1051 = or i32 %1047, %1043
  %1052 = cmpxchg volatile i32* %1044, i32 %1047, i32 %1051 release monotonic
  %1053 = extractvalue { i32, i1 } %1052, 0
  %1054 = extractvalue { i32, i1 } %1052, 1
  br i1 %1054, label %1055, label %1046

1055:                                             ; preds = %1050
  %1056 = inttoptr i64 %943 to %"class.v8::internal::MemoryChunk"*
  %1057 = load i64, i64* %1026, align 8
  %1058 = and i64 %1057, -4294967296
  %1059 = add i64 %1057, -1
  %1060 = inttoptr i64 %1059 to i32*
  %1061 = load atomic i32, i32* %1060 monotonic, align 4
  %1062 = zext i32 %1061 to i64
  %1063 = or i64 %1058, %1062
  %1064 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %11, i64 %1063) #12
  %1065 = sext i32 %1064 to i64
  %1066 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1056, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1067 = atomicrmw add i64* %1066, i64 %1065 seq_cst
  br label %1068

1068:                                             ; preds = %1046, %1055, %1024
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1025) #12
  br label %1069

1069:                                             ; preds = %995, %991, %1015, %1068, %1004, %1000, %957, %939
  %1070 = load i64, i64* %47, align 8
  %1071 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1072 = icmp eq i8 %1071, 0
  br i1 %1072, label %1174, label %1073

1073:                                             ; preds = %1069
  %1074 = add i64 %86, 7
  %1075 = inttoptr i64 %1074 to i16*
  %1076 = load atomic i16, i16* %1075 monotonic, align 2
  switch i16 %1076, label %1174 [
    i16 1085, label %1077
    i16 1057, label %1077
  ]

1077:                                             ; preds = %1073, %1073
  %1078 = bitcast %"class.v8::internal::HeapObject"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1078) #12
  %1079 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %12, i64 0, i32 0, i32 0, i32 0
  store i64 %104, i64* %1079, align 8
  %1080 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %12, i64 %86) #12
  %1081 = sext i32 %1080 to i64
  %1082 = add i64 %176, %1081
  %1083 = add i64 %1082, 4
  %1084 = and i64 %1083, -262144
  %1085 = inttoptr i64 %1084 to %"class.v8::internal::Page"*
  %1086 = icmp eq %"class.v8::internal::Page"* %178, %1085
  br i1 %1086, label %1087, label %1117

1087:                                             ; preds = %1077
  %1088 = add i64 %104, %1081
  %1089 = add i64 %1070, -41416
  %1090 = inttoptr i64 %1089 to %"class.v8::internal::Isolate"*
  %1091 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1090, i64 0, i32 0, i32 7, i32 0, i64 534
  %1092 = load i64, i64* %1091, align 8
  %1093 = inttoptr i64 %1082 to i32*
  %1094 = load atomic i32, i32* %1093 monotonic, align 4
  %1095 = trunc i64 %1092 to i32
  %1096 = icmp eq i32 %1094, %1095
  br i1 %1096, label %1097, label %1117

1097:                                             ; preds = %1087
  %1098 = load i64, i64* %183, align 8
  %1099 = and i64 %1098, 524288
  %1100 = icmp eq i64 %1099, 0
  br i1 %1100, label %1118, label %1101

1101:                                             ; preds = %1097
  %1102 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 8, i32 0
  %1103 = bitcast %"struct.std::__1::__atomic_base.69"* %1102 to i64*
  %1104 = load atomic i64, i64* %1103 seq_cst, align 64
  %1105 = inttoptr i64 %1104 to %"class.v8::internal::SemiSpace"*
  %1106 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1105, i64 0, i32 5
  %1107 = load i64, i64* %1106, align 8
  %1108 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 3
  %1109 = load i64, i64* %1108, align 8
  %1110 = icmp ugt i64 %1109, %1107
  br i1 %1110, label %1117, label %1111

1111:                                             ; preds = %1101
  %1112 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 4
  %1113 = load i64, i64* %1112, align 32
  %1114 = icmp ule i64 %1113, %1107
  %1115 = icmp ult i64 %176, %1107
  %1116 = or i1 %1115, %1114
  br i1 %1116, label %1117, label %1118

1117:                                             ; preds = %1111, %1101, %1087, %1077
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1078) #12
  br label %1174

1118:                                             ; preds = %1111, %1097
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1078) #12
  %1119 = trunc i64 %1088 to i32
  %1120 = icmp eq i32 %1119, 0
  br i1 %1120, label %1174, label %1121

1121:                                             ; preds = %1118
  %1122 = and i64 %1088, -4294967296
  %1123 = add i64 %1088, 3
  %1124 = inttoptr i64 %1123 to i32*
  %1125 = load i32, i32* %1124, align 4
  %1126 = zext i32 %1125 to i64
  %1127 = or i64 %1122, %1126
  %1128 = bitcast %"class.v8::internal::AllocationSite"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1128) #12
  %1129 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1127, i64* %1129, align 8
  %1130 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1131 = bitcast %"class.std::__1::tuple"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1131) #12
  %1132 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %13, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %15, %"class.v8::internal::AllocationSite"** %1132, align 8
  %1133 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %14, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1133) #12
  %1134 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1130, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %15, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %13, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %14) #12
  %1135 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1134, 0
  %1136 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1135, i64 3
  %1137 = bitcast %"struct.std::__1::__hash_node_base.518"* %1136 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1133) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1131) #12
  %1138 = load i64, i64* %1137, align 8
  %1139 = add i64 %1138, 1
  store i64 %1139, i64* %1137, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1128) #12
  br label %1174

1140:                                             ; preds = %928
  %1141 = load i64, i64* %726, align 8
  %1142 = icmp ne i64 %1141, 0
  %1143 = sub i64 %1141, %728
  %1144 = icmp eq i64 %1143, %753
  %1145 = and i1 %1142, %1144
  br i1 %1145, label %1146, label %1147

1146:                                             ; preds = %1140
  store i64 %753, i64* %726, align 8
  br label %1151

1147:                                             ; preds = %1140
  %1148 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %1149 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1148, align 8
  %1150 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1149, i64 %753, i32 %105, i32 1) #12
  br label %1151

1151:                                             ; preds = %1147, %1146
  %1152 = and i64 %104, -4294967296
  %1153 = load atomic i32, i32* %930 acquire, align 4
  %1154 = zext i32 %1153 to i64
  %1155 = or i64 %1152, %1154
  %1156 = add i64 %1155, 1
  %1157 = load i64, i64* %64, align 8
  %1158 = and i64 %1157, 2
  %1159 = or i64 %1156, %1158
  store i64 %1159, i64* %64, align 8
  %1160 = and i64 %1156, 1
  %1161 = icmp ne i64 %1160, 0
  %1162 = trunc i64 %1159 to i32
  %1163 = icmp ne i32 %1162, 3
  %1164 = and i1 %1161, %1163
  br i1 %1164, label %1165, label %1768

1165:                                             ; preds = %1151
  %1166 = and i64 %1156, -262144
  %1167 = inttoptr i64 %1166 to %"class.v8::internal::BasicMemoryChunk"*
  %1168 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1167, i64 0, i32 1
  %1169 = load i64, i64* %1168, align 8
  %1170 = lshr i64 %1169, 4
  %1171 = trunc i64 %1170 to i32
  %1172 = and i32 %1171, 1
  %1173 = xor i32 %1172, 1
  br label %1768

1174:                                             ; preds = %1121, %1118, %1117, %1073, %1069
  %1175 = load i64, i64* %64, align 8
  %1176 = and i64 %1175, 2
  %1177 = or i64 %1176, %752
  store i64 %1177, i64* %64, align 8
  br i1 %109, label %1178, label %1238

1178:                                             ; preds = %1174
  %1179 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1180 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1179, align 8
  %1181 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1182 = load i32, i32* %1181, align 8
  %1183 = sext i32 %1182 to i64
  %1184 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1180, i64 0, i32 0, i32 0, i64 %1183, i32 0
  %1185 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1184, align 8
  %1186 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1185, i64 0, i32 1
  %1187 = load i64, i64* %1186, align 8
  %1188 = icmp eq i64 %1187, 256
  br i1 %1188, label %1193, label %1189

1189:                                             ; preds = %1178
  %1190 = add i64 %1187, 1
  store i64 %1190, i64* %1186, align 8
  %1191 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1185, i64 0, i32 2, i64 %1187, i32 0, i32 0, i32 0, i32 0
  store i64 %752, i64* %1191, align 8
  %1192 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1185, i64 0, i32 2, i64 %1187, i32 1
  store i32 %105, i32* %1192, align 8
  br label %1238

1193:                                             ; preds = %1178
  %1194 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1180, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1194) #12
  %1195 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1180, i64 0, i32 0, i32 1, i32 1
  %1196 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1195 to i64*
  %1197 = load i64, i64* %1196, align 8
  %1198 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1185 to i64*
  store i64 %1197, i64* %1198, align 8
  %1199 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1185 to i64
  store atomic volatile i64 %1199, i64* %1196 monotonic, align 8
  %1200 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1180, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1201 = atomicrmw add i64* %1200, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1194) #12
  %1202 = call i8* @_Znwm(i64 4112) #17
  %1203 = getelementptr inbounds i8, i8* %1202, i64 8
  %1204 = bitcast i8* %1203 to i64*
  store i64 0, i64* %1204, align 8
  %1205 = getelementptr inbounds i8, i8* %1202, i64 16
  %1206 = bitcast i8* %1205 to %"struct.std::__1::pair.1282"*
  %1207 = getelementptr inbounds i8, i8* %1202, i64 4112
  %1208 = bitcast i8* %1207 to %"struct.std::__1::pair.1282"*
  br label %1209

1209:                                             ; preds = %1209, %1193
  %1210 = phi %"struct.std::__1::pair.1282"* [ %1206, %1193 ], [ %1227, %1209 ]
  %1211 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1211, align 8
  %1212 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 0, i32 1
  store i32 0, i32* %1212, align 8
  %1213 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1213, align 8
  %1214 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 1, i32 1
  store i32 0, i32* %1214, align 8
  %1215 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1215, align 8
  %1216 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 2, i32 1
  store i32 0, i32* %1216, align 8
  %1217 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1217, align 8
  %1218 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 3, i32 1
  store i32 0, i32* %1218, align 8
  %1219 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1219, align 8
  %1220 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 4, i32 1
  store i32 0, i32* %1220, align 8
  %1221 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1221, align 8
  %1222 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 5, i32 1
  store i32 0, i32* %1222, align 8
  %1223 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1223, align 8
  %1224 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 6, i32 1
  store i32 0, i32* %1224, align 8
  %1225 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1225, align 8
  %1226 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 7, i32 1
  store i32 0, i32* %1226, align 8
  %1227 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1210, i64 8
  %1228 = icmp eq %"struct.std::__1::pair.1282"* %1227, %1208
  br i1 %1228, label %1229, label %1209

1229:                                             ; preds = %1209
  %1230 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1184 to i8**
  store i8* %1202, i8** %1230, align 8
  %1231 = bitcast i8* %1202 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1232 = load i64, i64* %1204, align 8
  %1233 = icmp eq i64 %1232, 256
  br i1 %1233, label %1238, label %1234

1234:                                             ; preds = %1229
  %1235 = add i64 %1232, 1
  store i64 %1235, i64* %1204, align 8
  %1236 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1231, i64 0, i32 2, i64 %1232, i32 0, i32 0, i32 0, i32 0
  store i64 %752, i64* %1236, align 8
  %1237 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1231, i64 0, i32 2, i64 %1232, i32 1
  store i32 %105, i32* %1237, align 8
  br label %1238

1238:                                             ; preds = %1234, %1229, %1189, %1174
  %1239 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1240 = load i64, i64* %1239, align 8
  %1241 = add i64 %1240, %728
  store i64 %1241, i64* %1239, align 8
  br label %1768

1242:                                             ; preds = %747
  %1243 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1244 = icmp sgt i32 %105, 8192
  br i1 %1244, label %1245, label %1269

1245:                                             ; preds = %1242
  %1246 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1247 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1246, align 8
  %1248 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1247, i64 0, i32 1
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1248) #12
  %1249 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1247, i64 0, i32 0
  %1250 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1247, i64 0, i32 0, i32 1, i32 1
  %1251 = load i64, i64* %1250, align 8
  %1252 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1247, i64 0, i32 0, i32 1, i32 2
  %1253 = load i64, i64* %1252, align 8
  %1254 = add i64 %1251, %728
  %1255 = icmp ult i64 %1253, %1254
  br i1 %1255, label %1265, label %1256

1256:                                             ; preds = %1245
  %1257 = add i64 %1251, 1
  store i64 %1254, i64* %1250, align 8
  %1258 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1259 = icmp eq i8 %1258, 0
  br i1 %1259, label %1261, label %1260

1260:                                             ; preds = %1256
  call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1249, i32 2) #12
  br label %1261

1261:                                             ; preds = %1260, %1256
  %1262 = and i64 %1257, 1
  %1263 = icmp eq i64 %1262, 0
  br i1 %1263, label %1264, label %1267, !prof !29

1264:                                             ; preds = %1261
  call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1265:                                             ; preds = %1245
  %1266 = call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1247, i32 %105, i32 0, i32 2) #12
  br label %1267

1267:                                             ; preds = %1265, %1261
  %1268 = phi i64 [ %1266, %1265 ], [ %1257, %1261 ]
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1248) #12
  br label %1271

1269:                                             ; preds = %1242
  %1270 = call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1243, i32 %105, i32 0) #12
  br label %1271

1271:                                             ; preds = %1269, %1267
  %1272 = phi i64 [ %1268, %1267 ], [ %1270, %1269 ]
  %1273 = and i64 %1272, 1
  %1274 = icmp eq i64 %1273, 0
  br i1 %1274, label %1766, label %1275

1275:                                             ; preds = %1271
  %1276 = add i64 %1272, -1
  %1277 = inttoptr i64 %1276 to i32*
  store atomic volatile i32 %84, i32* %1277 monotonic, align 4
  %1278 = add i64 %1272, 3
  %1279 = add i64 %104, 3
  %1280 = add nsw i32 %105, -4
  %1281 = sdiv i32 %1280, 4
  %1282 = sext i32 %1281 to i64
  %1283 = inttoptr i64 %1278 to i32*
  %1284 = inttoptr i64 %1278 to i8*
  %1285 = inttoptr i64 %1279 to i32*
  %1286 = inttoptr i64 %1279 to i8*
  %1287 = inttoptr i64 %1278 to i8*
  %1288 = add i32 %105, -1
  %1289 = icmp ult i32 %1288, 7
  br i1 %1289, label %1451, label %1290

1290:                                             ; preds = %1275
  %1291 = icmp ult i32 %1281, 16
  br i1 %1291, label %1292, label %1437

1292:                                             ; preds = %1290
  %1293 = icmp ult i32 %1281, 8
  br i1 %1293, label %1384, label %1294

1294:                                             ; preds = %1292
  %1295 = getelementptr i32, i32* %1283, i64 %1282
  %1296 = bitcast i32* %1295 to i8*
  %1297 = getelementptr i32, i32* %1285, i64 %1282
  %1298 = bitcast i32* %1297 to i8*
  %1299 = icmp ult i8* %1284, %1298
  %1300 = icmp ult i8* %1286, %1296
  %1301 = and i1 %1299, %1300
  br i1 %1301, label %1384, label %1302

1302:                                             ; preds = %1294
  %1303 = and i64 %1282, -8
  %1304 = getelementptr i32, i32* %1285, i64 %1303
  %1305 = sub nsw i64 %1282, %1303
  %1306 = getelementptr i32, i32* %1283, i64 %1303
  %1307 = add nsw i64 %1303, -8
  %1308 = lshr exact i64 %1307, 3
  %1309 = add nuw nsw i64 %1308, 1
  %1310 = and i64 %1309, 3
  %1311 = icmp ult i64 %1307, 24
  br i1 %1311, label %1363, label %1312

1312:                                             ; preds = %1302
  %1313 = sub nsw i64 %1309, %1310
  br label %1314

1314:                                             ; preds = %1314, %1312
  %1315 = phi i64 [ 0, %1312 ], [ %1360, %1314 ]
  %1316 = phi i64 [ %1313, %1312 ], [ %1361, %1314 ]
  %1317 = getelementptr i32, i32* %1285, i64 %1315
  %1318 = getelementptr i32, i32* %1283, i64 %1315
  %1319 = bitcast i32* %1317 to <4 x i32>*
  %1320 = load <4 x i32>, <4 x i32>* %1319, align 4, !alias.scope !276
  %1321 = getelementptr i32, i32* %1317, i64 4
  %1322 = bitcast i32* %1321 to <4 x i32>*
  %1323 = load <4 x i32>, <4 x i32>* %1322, align 4, !alias.scope !276
  %1324 = bitcast i32* %1318 to <4 x i32>*
  store <4 x i32> %1320, <4 x i32>* %1324, align 4, !alias.scope !279, !noalias !276
  %1325 = getelementptr i32, i32* %1318, i64 4
  %1326 = bitcast i32* %1325 to <4 x i32>*
  store <4 x i32> %1323, <4 x i32>* %1326, align 4, !alias.scope !279, !noalias !276
  %1327 = or i64 %1315, 8
  %1328 = getelementptr i32, i32* %1285, i64 %1327
  %1329 = getelementptr i32, i32* %1283, i64 %1327
  %1330 = bitcast i32* %1328 to <4 x i32>*
  %1331 = load <4 x i32>, <4 x i32>* %1330, align 4, !alias.scope !276
  %1332 = getelementptr i32, i32* %1328, i64 4
  %1333 = bitcast i32* %1332 to <4 x i32>*
  %1334 = load <4 x i32>, <4 x i32>* %1333, align 4, !alias.scope !276
  %1335 = bitcast i32* %1329 to <4 x i32>*
  store <4 x i32> %1331, <4 x i32>* %1335, align 4, !alias.scope !279, !noalias !276
  %1336 = getelementptr i32, i32* %1329, i64 4
  %1337 = bitcast i32* %1336 to <4 x i32>*
  store <4 x i32> %1334, <4 x i32>* %1337, align 4, !alias.scope !279, !noalias !276
  %1338 = or i64 %1315, 16
  %1339 = getelementptr i32, i32* %1285, i64 %1338
  %1340 = getelementptr i32, i32* %1283, i64 %1338
  %1341 = bitcast i32* %1339 to <4 x i32>*
  %1342 = load <4 x i32>, <4 x i32>* %1341, align 4, !alias.scope !276
  %1343 = getelementptr i32, i32* %1339, i64 4
  %1344 = bitcast i32* %1343 to <4 x i32>*
  %1345 = load <4 x i32>, <4 x i32>* %1344, align 4, !alias.scope !276
  %1346 = bitcast i32* %1340 to <4 x i32>*
  store <4 x i32> %1342, <4 x i32>* %1346, align 4, !alias.scope !279, !noalias !276
  %1347 = getelementptr i32, i32* %1340, i64 4
  %1348 = bitcast i32* %1347 to <4 x i32>*
  store <4 x i32> %1345, <4 x i32>* %1348, align 4, !alias.scope !279, !noalias !276
  %1349 = or i64 %1315, 24
  %1350 = getelementptr i32, i32* %1285, i64 %1349
  %1351 = getelementptr i32, i32* %1283, i64 %1349
  %1352 = bitcast i32* %1350 to <4 x i32>*
  %1353 = load <4 x i32>, <4 x i32>* %1352, align 4, !alias.scope !276
  %1354 = getelementptr i32, i32* %1350, i64 4
  %1355 = bitcast i32* %1354 to <4 x i32>*
  %1356 = load <4 x i32>, <4 x i32>* %1355, align 4, !alias.scope !276
  %1357 = bitcast i32* %1351 to <4 x i32>*
  store <4 x i32> %1353, <4 x i32>* %1357, align 4, !alias.scope !279, !noalias !276
  %1358 = getelementptr i32, i32* %1351, i64 4
  %1359 = bitcast i32* %1358 to <4 x i32>*
  store <4 x i32> %1356, <4 x i32>* %1359, align 4, !alias.scope !279, !noalias !276
  %1360 = add i64 %1315, 32
  %1361 = add i64 %1316, -4
  %1362 = icmp eq i64 %1361, 0
  br i1 %1362, label %1363, label %1314, !llvm.loop !281

1363:                                             ; preds = %1314, %1302
  %1364 = phi i64 [ 0, %1302 ], [ %1360, %1314 ]
  %1365 = icmp eq i64 %1310, 0
  br i1 %1365, label %1382, label %1366

1366:                                             ; preds = %1363, %1366
  %1367 = phi i64 [ %1379, %1366 ], [ %1364, %1363 ]
  %1368 = phi i64 [ %1380, %1366 ], [ %1310, %1363 ]
  %1369 = getelementptr i32, i32* %1285, i64 %1367
  %1370 = getelementptr i32, i32* %1283, i64 %1367
  %1371 = bitcast i32* %1369 to <4 x i32>*
  %1372 = load <4 x i32>, <4 x i32>* %1371, align 4, !alias.scope !276
  %1373 = getelementptr i32, i32* %1369, i64 4
  %1374 = bitcast i32* %1373 to <4 x i32>*
  %1375 = load <4 x i32>, <4 x i32>* %1374, align 4, !alias.scope !276
  %1376 = bitcast i32* %1370 to <4 x i32>*
  store <4 x i32> %1372, <4 x i32>* %1376, align 4, !alias.scope !279, !noalias !276
  %1377 = getelementptr i32, i32* %1370, i64 4
  %1378 = bitcast i32* %1377 to <4 x i32>*
  store <4 x i32> %1375, <4 x i32>* %1378, align 4, !alias.scope !279, !noalias !276
  %1379 = add i64 %1367, 8
  %1380 = add i64 %1368, -1
  %1381 = icmp eq i64 %1380, 0
  br i1 %1381, label %1382, label %1366, !llvm.loop !282

1382:                                             ; preds = %1366, %1363
  %1383 = icmp eq i64 %1303, %1282
  br i1 %1383, label %1451, label %1384

1384:                                             ; preds = %1382, %1294, %1292
  %1385 = phi i32* [ %1285, %1294 ], [ %1285, %1292 ], [ %1304, %1382 ]
  %1386 = phi i64 [ %1282, %1294 ], [ %1282, %1292 ], [ %1305, %1382 ]
  %1387 = phi i32* [ %1283, %1294 ], [ %1283, %1292 ], [ %1306, %1382 ]
  %1388 = add nsw i64 %1386, -1
  %1389 = and i64 %1386, 7
  %1390 = icmp eq i64 %1389, 0
  br i1 %1390, label %1402, label %1391

1391:                                             ; preds = %1384, %1391
  %1392 = phi i32* [ %1397, %1391 ], [ %1385, %1384 ]
  %1393 = phi i64 [ %1396, %1391 ], [ %1386, %1384 ]
  %1394 = phi i32* [ %1399, %1391 ], [ %1387, %1384 ]
  %1395 = phi i64 [ %1400, %1391 ], [ %1389, %1384 ]
  %1396 = add i64 %1393, -1
  %1397 = getelementptr inbounds i32, i32* %1392, i64 1
  %1398 = load i32, i32* %1392, align 4
  %1399 = getelementptr inbounds i32, i32* %1394, i64 1
  store i32 %1398, i32* %1394, align 4
  %1400 = add i64 %1395, -1
  %1401 = icmp eq i64 %1400, 0
  br i1 %1401, label %1402, label %1391, !llvm.loop !283

1402:                                             ; preds = %1391, %1384
  %1403 = phi i32* [ %1385, %1384 ], [ %1397, %1391 ]
  %1404 = phi i64 [ %1386, %1384 ], [ %1396, %1391 ]
  %1405 = phi i32* [ %1387, %1384 ], [ %1399, %1391 ]
  %1406 = icmp ult i64 %1388, 7
  br i1 %1406, label %1451, label %1407

1407:                                             ; preds = %1402, %1407
  %1408 = phi i32* [ %1433, %1407 ], [ %1403, %1402 ]
  %1409 = phi i64 [ %1432, %1407 ], [ %1404, %1402 ]
  %1410 = phi i32* [ %1435, %1407 ], [ %1405, %1402 ]
  %1411 = getelementptr inbounds i32, i32* %1408, i64 1
  %1412 = load i32, i32* %1408, align 4
  %1413 = getelementptr inbounds i32, i32* %1410, i64 1
  store i32 %1412, i32* %1410, align 4
  %1414 = getelementptr inbounds i32, i32* %1408, i64 2
  %1415 = load i32, i32* %1411, align 4
  %1416 = getelementptr inbounds i32, i32* %1410, i64 2
  store i32 %1415, i32* %1413, align 4
  %1417 = getelementptr inbounds i32, i32* %1408, i64 3
  %1418 = load i32, i32* %1414, align 4
  %1419 = getelementptr inbounds i32, i32* %1410, i64 3
  store i32 %1418, i32* %1416, align 4
  %1420 = getelementptr inbounds i32, i32* %1408, i64 4
  %1421 = load i32, i32* %1417, align 4
  %1422 = getelementptr inbounds i32, i32* %1410, i64 4
  store i32 %1421, i32* %1419, align 4
  %1423 = getelementptr inbounds i32, i32* %1408, i64 5
  %1424 = load i32, i32* %1420, align 4
  %1425 = getelementptr inbounds i32, i32* %1410, i64 5
  store i32 %1424, i32* %1422, align 4
  %1426 = getelementptr inbounds i32, i32* %1408, i64 6
  %1427 = load i32, i32* %1423, align 4
  %1428 = getelementptr inbounds i32, i32* %1410, i64 6
  store i32 %1427, i32* %1425, align 4
  %1429 = getelementptr inbounds i32, i32* %1408, i64 7
  %1430 = load i32, i32* %1426, align 4
  %1431 = getelementptr inbounds i32, i32* %1410, i64 7
  store i32 %1430, i32* %1428, align 4
  %1432 = add i64 %1409, -8
  %1433 = getelementptr inbounds i32, i32* %1408, i64 8
  %1434 = load i32, i32* %1429, align 4
  %1435 = getelementptr inbounds i32, i32* %1410, i64 8
  store i32 %1434, i32* %1431, align 4
  %1436 = icmp eq i64 %1432, 0
  br i1 %1436, label %1451, label %1407, !llvm.loop !284

1437:                                             ; preds = %1290
  %1438 = inttoptr i64 %1279 to i8*
  %1439 = shl nsw i64 %1282, 2
  %1440 = add nsw i64 %1439, -4
  %1441 = lshr exact i64 %1440, 2
  switch i64 %1441, label %1450 [
    i64 3, label %1449
    i64 1, label %1444
    i64 2, label %1448
    i64 0, label %1442
  ]

1442:                                             ; preds = %1437
  %1443 = load i32, i32* %1285, align 1
  store i32 %1443, i32* %1283, align 1
  br label %1451

1444:                                             ; preds = %1437
  %1445 = inttoptr i64 %1279 to i64*
  %1446 = inttoptr i64 %1278 to i64*
  %1447 = load i64, i64* %1445, align 1
  store i64 %1447, i64* %1446, align 1
  br label %1451

1448:                                             ; preds = %1437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1287, i8* align 1 %1438, i64 12, i1 false) #12
  br label %1451

1449:                                             ; preds = %1437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1287, i8* align 1 %1438, i64 16, i1 false) #12
  br label %1451

1450:                                             ; preds = %1437
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1287, i8* align 1 %1438, i64 %1439, i1 false) #12
  br label %1451

1451:                                             ; preds = %1402, %1407, %1382, %1450, %1449, %1448, %1444, %1442, %1275
  %1452 = trunc i64 %1276 to i32
  %1453 = inttoptr i64 %176 to i32*
  %1454 = cmpxchg volatile i32* %1453, i32 %84, i32 %1452 release monotonic
  %1455 = extractvalue { i32, i1 } %1454, 1
  br i1 %1455, label %1456, label %1663

1456:                                             ; preds = %1451
  %1457 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %1458 = load i8, i8* %1457, align 8, !range !2
  %1459 = icmp eq i8 %1458, 0
  br i1 %1459, label %1462, label %1460, !prof !60

1460:                                             ; preds = %1456
  %1461 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %1461, i64 %1272, i64 %104, i32 %105) #12
  br label %1462

1462:                                             ; preds = %1460, %1456
  %1463 = load i8, i8* %39, align 1, !range !2
  %1464 = icmp eq i8 %1463, 0
  br i1 %1464, label %1592, label %1465

1465:                                             ; preds = %1462
  %1466 = and i64 %1272, -262144
  %1467 = or i64 %1466, 272
  %1468 = sub i64 %1272, %1466
  %1469 = trunc i64 %1468 to i32
  %1470 = lshr i32 %1469, 2
  %1471 = and i32 %1470, 31
  %1472 = shl i32 1, %1471
  %1473 = inttoptr i64 %1467 to i32*
  %1474 = lshr i64 %1468, 7
  %1475 = and i64 %1474, 33554431
  %1476 = getelementptr inbounds i32, i32* %1473, i64 %1475
  %1477 = load atomic i32, i32* %1476 acquire, align 4
  %1478 = and i32 %1477, %1472
  %1479 = icmp eq i32 %1478, 0
  br i1 %1479, label %1489, label %1480

1480:                                             ; preds = %1465
  %1481 = shl i32 %1472, 1
  %1482 = icmp eq i32 %1481, 0
  %1483 = getelementptr inbounds i32, i32* %1476, i64 1
  %1484 = select i1 %1482, i32 1, i32 %1481
  %1485 = select i1 %1482, i32* %1483, i32* %1476
  %1486 = load atomic i32, i32* %1485 acquire, align 4
  %1487 = and i32 %1486, %1484
  %1488 = icmp eq i32 %1487, 0
  br i1 %1488, label %1489, label %1592

1489:                                             ; preds = %1480, %1465
  %1490 = or i64 %110, 272
  %1491 = sub i64 %104, %110
  %1492 = trunc i64 %1491 to i32
  %1493 = lshr i32 %1492, 2
  %1494 = and i32 %1493, 31
  %1495 = shl i32 1, %1494
  %1496 = inttoptr i64 %1490 to i32*
  %1497 = lshr i64 %1491, 7
  %1498 = and i64 %1497, 33554431
  %1499 = getelementptr inbounds i32, i32* %1496, i64 %1498
  %1500 = load atomic i32, i32* %1499 acquire, align 4
  %1501 = and i32 %1500, %1495
  %1502 = icmp eq i32 %1501, 0
  br i1 %1502, label %1523, label %1503

1503:                                             ; preds = %1489
  %1504 = shl i32 %1495, 1
  %1505 = icmp eq i32 %1504, 0
  %1506 = getelementptr inbounds i32, i32* %1499, i64 1
  %1507 = select i1 %1505, i32 1, i32 %1504
  %1508 = select i1 %1505, i32* %1506, i32* %1499
  %1509 = load atomic i32, i32* %1508 acquire, align 4
  %1510 = and i32 %1509, %1507
  %1511 = icmp eq i32 %1510, 0
  br i1 %1511, label %1512, label %1523

1512:                                             ; preds = %1503
  %1513 = load atomic i32, i32* %1476 monotonic, align 4
  br label %1514

1514:                                             ; preds = %1518, %1512
  %1515 = phi i32 [ %1513, %1512 ], [ %1521, %1518 ]
  %1516 = and i32 %1515, %1472
  %1517 = icmp eq i32 %1516, %1472
  br i1 %1517, label %1592, label %1518

1518:                                             ; preds = %1514
  %1519 = or i32 %1515, %1472
  %1520 = cmpxchg volatile i32* %1476, i32 %1515, i32 %1519 release monotonic
  %1521 = extractvalue { i32, i1 } %1520, 0
  %1522 = extractvalue { i32, i1 } %1520, 1
  br i1 %1522, label %1592, label %1514

1523:                                             ; preds = %1503, %1489
  %1524 = load atomic i32, i32* %1499 acquire, align 4
  %1525 = and i32 %1524, %1495
  %1526 = icmp eq i32 %1525, 0
  br i1 %1526, label %1592, label %1527

1527:                                             ; preds = %1523
  %1528 = shl i32 %1495, 1
  %1529 = icmp eq i32 %1528, 0
  %1530 = getelementptr inbounds i32, i32* %1499, i64 1
  %1531 = select i1 %1529, i32 1, i32 %1528
  %1532 = select i1 %1529, i32* %1530, i32* %1499
  %1533 = load atomic i32, i32* %1532 acquire, align 4
  %1534 = and i32 %1533, %1531
  %1535 = icmp eq i32 %1534, 0
  br i1 %1535, label %1592, label %1536

1536:                                             ; preds = %1527
  %1537 = load atomic i32, i32* %1476 monotonic, align 4
  br label %1538

1538:                                             ; preds = %1542, %1536
  %1539 = phi i32 [ %1537, %1536 ], [ %1545, %1542 ]
  %1540 = and i32 %1539, %1472
  %1541 = icmp eq i32 %1540, %1472
  br i1 %1541, label %1592, label %1542

1542:                                             ; preds = %1538
  %1543 = or i32 %1539, %1472
  %1544 = cmpxchg volatile i32* %1476, i32 %1539, i32 %1543 release monotonic
  %1545 = extractvalue { i32, i1 } %1544, 0
  %1546 = extractvalue { i32, i1 } %1544, 1
  br i1 %1546, label %1547, label %1538

1547:                                             ; preds = %1542
  %1548 = bitcast %"class.v8::internal::HeapObject"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1548) #12
  %1549 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %6, i64 0, i32 0, i32 0, i32 0
  store i64 %1272, i64* %1549, align 8
  %1550 = xor i64 %1466, -1
  %1551 = add i64 %1272, %1550
  %1552 = trunc i64 %1551 to i32
  %1553 = lshr i32 %1552, 2
  %1554 = and i32 %1553, 31
  %1555 = shl i32 1, %1554
  %1556 = lshr i64 %1551, 7
  %1557 = and i64 %1556, 33554431
  %1558 = getelementptr inbounds i32, i32* %1473, i64 %1557
  %1559 = load atomic i32, i32* %1558 acquire, align 4
  %1560 = and i32 %1559, %1555
  %1561 = icmp eq i32 %1560, 0
  br i1 %1561, label %1591, label %1562

1562:                                             ; preds = %1547
  %1563 = shl i32 %1555, 1
  %1564 = icmp eq i32 %1563, 0
  %1565 = getelementptr inbounds i32, i32* %1558, i64 1
  %1566 = select i1 %1564, i32 1, i32 %1563
  %1567 = select i1 %1564, i32* %1565, i32* %1558
  %1568 = load atomic i32, i32* %1567 monotonic, align 4
  br label %1569

1569:                                             ; preds = %1573, %1562
  %1570 = phi i32 [ %1568, %1562 ], [ %1576, %1573 ]
  %1571 = and i32 %1570, %1566
  %1572 = icmp eq i32 %1571, %1566
  br i1 %1572, label %1591, label %1573

1573:                                             ; preds = %1569
  %1574 = or i32 %1570, %1566
  %1575 = cmpxchg volatile i32* %1567, i32 %1570, i32 %1574 release monotonic
  %1576 = extractvalue { i32, i1 } %1575, 0
  %1577 = extractvalue { i32, i1 } %1575, 1
  br i1 %1577, label %1578, label %1569

1578:                                             ; preds = %1573
  %1579 = inttoptr i64 %1466 to %"class.v8::internal::MemoryChunk"*
  %1580 = load i64, i64* %1549, align 8
  %1581 = and i64 %1580, -4294967296
  %1582 = add i64 %1580, -1
  %1583 = inttoptr i64 %1582 to i32*
  %1584 = load atomic i32, i32* %1583 monotonic, align 4
  %1585 = zext i32 %1584 to i64
  %1586 = or i64 %1581, %1585
  %1587 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %6, i64 %1586) #12
  %1588 = sext i32 %1587 to i64
  %1589 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %1579, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %1590 = atomicrmw add i64* %1589, i64 %1588 seq_cst
  br label %1591

1591:                                             ; preds = %1569, %1578, %1547
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1548) #12
  br label %1592

1592:                                             ; preds = %1518, %1514, %1538, %1591, %1527, %1523, %1480, %1462
  %1593 = load i64, i64* %47, align 8
  %1594 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %1595 = icmp eq i8 %1594, 0
  br i1 %1595, label %1698, label %1596

1596:                                             ; preds = %1592
  %1597 = add i64 %86, 7
  %1598 = inttoptr i64 %1597 to i16*
  %1599 = load atomic i16, i16* %1598 monotonic, align 2
  switch i16 %1599, label %1698 [
    i16 1085, label %1600
    i16 1057, label %1600
  ]

1600:                                             ; preds = %1596, %1596
  %1601 = bitcast %"class.v8::internal::HeapObject"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1601) #12
  %1602 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %7, i64 0, i32 0, i32 0, i32 0
  store i64 %104, i64* %1602, align 8
  %1603 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %7, i64 %86) #12
  %1604 = sext i32 %1603 to i64
  %1605 = add i64 %176, %1604
  %1606 = add i64 %1605, 4
  %1607 = and i64 %1606, -262144
  %1608 = inttoptr i64 %1607 to %"class.v8::internal::Page"*
  %1609 = icmp eq %"class.v8::internal::Page"* %178, %1608
  br i1 %1609, label %1610, label %1640

1610:                                             ; preds = %1600
  %1611 = add i64 %104, %1604
  %1612 = add i64 %1593, -41416
  %1613 = inttoptr i64 %1612 to %"class.v8::internal::Isolate"*
  %1614 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %1613, i64 0, i32 0, i32 7, i32 0, i64 534
  %1615 = load i64, i64* %1614, align 8
  %1616 = inttoptr i64 %1605 to i32*
  %1617 = load atomic i32, i32* %1616 monotonic, align 4
  %1618 = trunc i64 %1615 to i32
  %1619 = icmp eq i32 %1617, %1618
  br i1 %1619, label %1620, label %1640

1620:                                             ; preds = %1610
  %1621 = load i64, i64* %183, align 8
  %1622 = and i64 %1621, 524288
  %1623 = icmp eq i64 %1622, 0
  br i1 %1623, label %1641, label %1624

1624:                                             ; preds = %1620
  %1625 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 8, i32 0
  %1626 = bitcast %"struct.std::__1::__atomic_base.69"* %1625 to i64*
  %1627 = load atomic i64, i64* %1626 seq_cst, align 64
  %1628 = inttoptr i64 %1627 to %"class.v8::internal::SemiSpace"*
  %1629 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %1628, i64 0, i32 5
  %1630 = load i64, i64* %1629, align 8
  %1631 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 3
  %1632 = load i64, i64* %1631, align 8
  %1633 = icmp ugt i64 %1632, %1630
  br i1 %1633, label %1640, label %1634

1634:                                             ; preds = %1624
  %1635 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %178, i64 0, i32 0, i32 0, i32 4
  %1636 = load i64, i64* %1635, align 32
  %1637 = icmp ule i64 %1636, %1630
  %1638 = icmp ult i64 %176, %1630
  %1639 = or i1 %1638, %1637
  br i1 %1639, label %1640, label %1641

1640:                                             ; preds = %1634, %1624, %1610, %1600
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1601) #12
  br label %1698

1641:                                             ; preds = %1634, %1620
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1601) #12
  %1642 = trunc i64 %1611 to i32
  %1643 = icmp eq i32 %1642, 0
  br i1 %1643, label %1698, label %1644

1644:                                             ; preds = %1641
  %1645 = and i64 %1611, -4294967296
  %1646 = add i64 %1611, 3
  %1647 = inttoptr i64 %1646 to i32*
  %1648 = load i32, i32* %1647, align 4
  %1649 = zext i32 %1648 to i64
  %1650 = or i64 %1645, %1649
  %1651 = bitcast %"class.v8::internal::AllocationSite"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1651) #12
  %1652 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %1650, i64* %1652, align 8
  %1653 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %1654 = bitcast %"class.std::__1::tuple"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1654) #12
  %1655 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %10, %"class.v8::internal::AllocationSite"** %1655, align 8
  %1656 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %1656) #12
  %1657 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %1653, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %10, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %8, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %9) #12
  %1658 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %1657, 0
  %1659 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %1658, i64 3
  %1660 = bitcast %"struct.std::__1::__hash_node_base.518"* %1659 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %1656) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1654) #12
  %1661 = load i64, i64* %1660, align 8
  %1662 = add i64 %1661, 1
  store i64 %1662, i64* %1660, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1651) #12
  br label %1698

1663:                                             ; preds = %1451
  %1664 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %1665 = load i64, i64* %1664, align 8
  %1666 = icmp ne i64 %1665, 0
  %1667 = sub i64 %1665, %728
  %1668 = icmp eq i64 %1667, %1276
  %1669 = and i1 %1666, %1668
  br i1 %1669, label %1670, label %1671

1670:                                             ; preds = %1663
  store i64 %1276, i64* %1664, align 8
  br label %1675

1671:                                             ; preds = %1663
  %1672 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1243, i64 0, i32 0
  %1673 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1672, align 8
  %1674 = call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %1673, i64 %1276, i32 %105, i32 1) #12
  br label %1675

1675:                                             ; preds = %1671, %1670
  %1676 = and i64 %104, -4294967296
  %1677 = load atomic i32, i32* %1453 acquire, align 4
  %1678 = zext i32 %1677 to i64
  %1679 = or i64 %1676, %1678
  %1680 = add i64 %1679, 1
  %1681 = load i64, i64* %64, align 8
  %1682 = and i64 %1681, 2
  %1683 = or i64 %1680, %1682
  store i64 %1683, i64* %64, align 8
  %1684 = and i64 %1680, 1
  %1685 = icmp ne i64 %1684, 0
  %1686 = trunc i64 %1683 to i32
  %1687 = icmp ne i32 %1686, 3
  %1688 = and i1 %1685, %1687
  br i1 %1688, label %1689, label %1768

1689:                                             ; preds = %1675
  %1690 = and i64 %1680, -262144
  %1691 = inttoptr i64 %1690 to %"class.v8::internal::BasicMemoryChunk"*
  %1692 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1691, i64 0, i32 1
  %1693 = load i64, i64* %1692, align 8
  %1694 = lshr i64 %1693, 4
  %1695 = trunc i64 %1694 to i32
  %1696 = and i32 %1695, 1
  %1697 = xor i32 %1696, 1
  br label %1768

1698:                                             ; preds = %1644, %1641, %1640, %1596, %1592
  %1699 = load i64, i64* %64, align 8
  %1700 = and i64 %1699, 2
  %1701 = or i64 %1700, %1272
  store i64 %1701, i64* %64, align 8
  br i1 %109, label %1702, label %1762

1702:                                             ; preds = %1698
  %1703 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %1704 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %1703, align 8
  %1705 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %1706 = load i32, i32* %1705, align 8
  %1707 = sext i32 %1706 to i64
  %1708 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1704, i64 0, i32 0, i64 %1707, i32 0
  %1709 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1708, align 8
  %1710 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1709, i64 0, i32 1
  %1711 = load i64, i64* %1710, align 8
  %1712 = icmp eq i64 %1711, 256
  br i1 %1712, label %1717, label %1713

1713:                                             ; preds = %1702
  %1714 = add i64 %1711, 1
  store i64 %1714, i64* %1710, align 8
  %1715 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1709, i64 0, i32 2, i64 %1711, i32 0, i32 0, i32 0, i32 0
  store i64 %1272, i64* %1715, align 8
  %1716 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1709, i64 0, i32 2, i64 %1711, i32 1
  store i32 %105, i32* %1716, align 8
  br label %1762

1717:                                             ; preds = %1702
  %1718 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1704, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1718) #12
  %1719 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1704, i64 0, i32 1, i32 1
  %1720 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1719 to i64*
  %1721 = load i64, i64* %1720, align 8
  %1722 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1709 to i64*
  store i64 %1721, i64* %1722, align 8
  %1723 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1709 to i64
  store atomic volatile i64 %1723, i64* %1720 monotonic, align 8
  %1724 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %1704, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1725 = atomicrmw add i64* %1724, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1718) #12
  %1726 = call i8* @_Znwm(i64 4112) #17
  %1727 = getelementptr inbounds i8, i8* %1726, i64 8
  %1728 = bitcast i8* %1727 to i64*
  store i64 0, i64* %1728, align 8
  %1729 = getelementptr inbounds i8, i8* %1726, i64 16
  %1730 = bitcast i8* %1729 to %"struct.std::__1::pair.1282"*
  %1731 = getelementptr inbounds i8, i8* %1726, i64 4112
  %1732 = bitcast i8* %1731 to %"struct.std::__1::pair.1282"*
  br label %1733

1733:                                             ; preds = %1733, %1717
  %1734 = phi %"struct.std::__1::pair.1282"* [ %1730, %1717 ], [ %1751, %1733 ]
  %1735 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1735, align 8
  %1736 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 0, i32 1
  store i32 0, i32* %1736, align 8
  %1737 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1737, align 8
  %1738 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 1, i32 1
  store i32 0, i32* %1738, align 8
  %1739 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1739, align 8
  %1740 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 2, i32 1
  store i32 0, i32* %1740, align 8
  %1741 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1741, align 8
  %1742 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 3, i32 1
  store i32 0, i32* %1742, align 8
  %1743 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1743, align 8
  %1744 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 4, i32 1
  store i32 0, i32* %1744, align 8
  %1745 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1745, align 8
  %1746 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 5, i32 1
  store i32 0, i32* %1746, align 8
  %1747 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1747, align 8
  %1748 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 6, i32 1
  store i32 0, i32* %1748, align 8
  %1749 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %1749, align 8
  %1750 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 7, i32 1
  store i32 0, i32* %1750, align 8
  %1751 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %1734, i64 8
  %1752 = icmp eq %"struct.std::__1::pair.1282"* %1751, %1732
  br i1 %1752, label %1753, label %1733

1753:                                             ; preds = %1733
  %1754 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %1708 to i8**
  store i8* %1726, i8** %1754, align 8
  %1755 = bitcast i8* %1726 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %1756 = load i64, i64* %1728, align 8
  %1757 = icmp eq i64 %1756, 256
  br i1 %1757, label %1762, label %1758

1758:                                             ; preds = %1753
  %1759 = add i64 %1756, 1
  store i64 %1759, i64* %1728, align 8
  %1760 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1755, i64 0, i32 2, i64 %1756, i32 0, i32 0, i32 0, i32 0
  store i64 %1272, i64* %1760, align 8
  %1761 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %1755, i64 0, i32 2, i64 %1756, i32 1
  store i32 %105, i32* %1761, align 8
  br label %1762

1762:                                             ; preds = %1758, %1753, %1713, %1698
  %1763 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %1764 = load i64, i64* %1763, align 8
  %1765 = add i64 %1764, %728
  store i64 %1765, i64* %1763, align 8
  br label %1768

1766:                                             ; preds = %1271
  %1767 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %46, align 8
  call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %1767, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

1768:                                             ; preds = %119, %125, %147, %152, %632, %646, %719, %1151, %1165, %1238, %1675, %1689, %1762
  %1769 = phi i32 [ 0, %125 ], [ 0, %119 ], [ 0, %147 ], [ 0, %152 ], [ 1, %632 ], [ %654, %646 ], [ 0, %719 ], [ 1, %1151 ], [ %1173, %1165 ], [ 1, %1238 ], [ 1, %1675 ], [ %1697, %1689 ], [ 0, %1762 ]
  %1770 = load i64, i64* %64, align 8
  %1771 = add i64 %3, -1
  %1772 = inttoptr i64 %1771 to i32*
  %1773 = trunc i64 %1770 to i32
  %1774 = add i32 %1773, -1
  store atomic volatile i32 %1774, i32* %1772 release, align 4
  br label %1775

1775:                                             ; preds = %89, %1768, %75
  %1776 = phi i32 [ 1, %75 ], [ %102, %89 ], [ %1769, %1768 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #12
  br label %3452

1777:                                             ; preds = %5, %42
  %1778 = and i64 %3, -262144
  %1779 = inttoptr i64 %1778 to %"class.v8::internal::BasicMemoryChunk"*
  %1780 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %1779, i64 0, i32 1
  %1781 = load i64, i64* %1780, align 8
  %1782 = and i64 %1781, 24
  %1783 = icmp ne i64 %1782, 0
  %1784 = and i64 %1781, 32
  %1785 = icmp ne i64 %1784, 0
  %1786 = and i1 %1785, %1783
  br i1 %1786, label %1787, label %1842, !prof !29

1787:                                             ; preds = %1777
  %1788 = add i64 %3, -1
  %1789 = trunc i64 %1 to i32
  %1790 = trunc i64 %1788 to i32
  %1791 = inttoptr i64 %1788 to i32*
  %1792 = cmpxchg volatile i32* %1791, i32 %1789, i32 %1790 release monotonic
  %1793 = extractvalue { i32, i1 } %1792, 1
  br i1 %1793, label %1794, label %3452

1794:                                             ; preds = %1787
  %1795 = bitcast %"struct.std::__1::pair.1246"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1795) #12
  %1796 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %37, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1796, align 8
  %1797 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %37, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %1797, align 8
  %1798 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 10, i32 0
  %1799 = getelementptr inbounds %"struct.std::__1::pair.1246", %"struct.std::__1::pair.1246"* %37, i64 0, i32 0
  %1800 = call { %"struct.std::__1::__hash_node_base.1153"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE25__emplace_unique_key_argsIS4_JNS_4pairIKS4_S5_EEEEENSJ_INS_15__hash_iteratorIPNS_11__hash_nodeIS6_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.1149"* %1798, %"class.v8::internal::HeapObject"* nonnull dereferenceable(8) %1799, %"struct.std::__1::pair.1246"* nonnull dereferenceable(16) %37) #12
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1795) #12
  %1801 = sext i32 %4 to i64
  %1802 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %1803 = load i64, i64* %1802, align 8
  %1804 = add i64 %1803, %1801
  store i64 %1804, i64* %1802, align 8
  %1805 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %1806 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %1805, align 8
  %1807 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %1808 = load i32, i32* %1807, align 8
  %1809 = sext i32 %1808 to i64
  %1810 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 0, i64 %1809, i32 0
  %1811 = load %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"*, %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %1810, align 8
  %1812 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 1
  %1813 = load i64, i64* %1812, align 8
  %1814 = icmp eq i64 %1813, 4
  br i1 %1814, label %1820, label %1815

1815:                                             ; preds = %1794
  %1816 = add i64 %1813, 1
  store i64 %1816, i64* %1812, align 8
  %1817 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 2, i64 %1813, i32 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %1817, align 8
  %1818 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 2, i64 %1813, i32 1, i32 0, i32 0, i32 0, i32 0
  store i64 %1, i64* %1818, align 8
  %1819 = getelementptr inbounds %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment", %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811, i64 0, i32 2, i64 %1813, i32 2
  store i32 %4, i32* %1819, align 8
  br label %3452

1820:                                             ; preds = %1794
  %1821 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1821) #12
  %1822 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 1, i32 1
  %1823 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %1822 to i64*
  %1824 = load i64, i64* %1823, align 8
  %1825 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811 to i64*
  store i64 %1824, i64* %1825, align 8
  %1826 = ptrtoint %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"* %1811 to i64
  store atomic volatile i64 %1826, i64* %1823 monotonic, align 8
  %1827 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %1806, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1828 = atomicrmw add i64* %1827, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1821) #12
  %1829 = call i8* @_Znwm(i64 112) #17
  %1830 = getelementptr inbounds i8, i8* %1829, i64 40
  call void @llvm.memset.p0i8.i64(i8* align 8 %1830, i8 0, i64 16, i1 false) #12
  %1831 = getelementptr inbounds i8, i8* %1829, i64 64
  call void @llvm.memset.p0i8.i64(i8* align 8 %1831, i8 0, i64 16, i1 false) #12
  %1832 = getelementptr inbounds i8, i8* %1829, i64 88
  call void @llvm.memset.p0i8.i64(i8* align 8 %1832, i8 0, i64 16, i1 false) #12
  %1833 = bitcast %"class.v8::internal::Worklist<v8::internal::Scavenger::PromotionListEntry, 4>::Segment"** %1810 to i8**
  store i8* %1829, i8** %1833, align 8
  %1834 = getelementptr inbounds i8, i8* %1829, i64 8
  %1835 = bitcast i8* %1834 to i64*
  store i64 1, i64* %1835, align 8
  %1836 = getelementptr inbounds i8, i8* %1829, i64 16
  %1837 = bitcast i8* %1836 to i64*
  store i64 %3, i64* %1837, align 8
  %1838 = getelementptr inbounds i8, i8* %1829, i64 24
  %1839 = bitcast i8* %1838 to i64*
  store i64 %1, i64* %1839, align 8
  %1840 = getelementptr inbounds i8, i8* %1829, i64 32
  %1841 = bitcast i8* %1840 to i32*
  store i32 %4, i32* %1841, align 8
  br label %3452

1842:                                             ; preds = %1777
  %1843 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 1
  %1844 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  %1845 = add i64 %3, -1
  %1846 = and i64 %1845, -262144
  %1847 = inttoptr i64 %1846 to %"class.v8::internal::Page"*
  %1848 = getelementptr inbounds %"class.v8::internal::Heap", %"class.v8::internal::Heap"* %1844, i64 0, i32 24
  %1849 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1848, align 8
  %1850 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1849, i64 0, i32 5, i32 5
  %1851 = load i64, i64* %1850, align 8
  %1852 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 1
  %1853 = load i64, i64* %1852, align 8
  %1854 = and i64 %1853, 524288
  %1855 = icmp eq i64 %1854, 0
  br i1 %1855, label %1866, label %1856

1856:                                             ; preds = %1842
  %1857 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %1858 = load i64, i64* %1857, align 8
  %1859 = icmp ugt i64 %1858, %1851
  br i1 %1859, label %2398, label %1860

1860:                                             ; preds = %1856
  %1861 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %1862 = load i64, i64* %1861, align 32
  %1863 = icmp ult i64 %1862, %1851
  %1864 = icmp ugt i64 %1851, %1845
  %1865 = or i1 %1864, %1863
  br i1 %1865, label %2398, label %1866

1866:                                             ; preds = %1860, %1842
  %1867 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %1868 = icmp sgt i32 %4, 8192
  br i1 %1868, label %1869, label %1894

1869:                                             ; preds = %1866
  %1870 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %1871 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %1870, align 8
  %1872 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %1872) #12
  %1873 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 0
  %1874 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 0, i32 1, i32 1
  %1875 = load i64, i64* %1874, align 8
  %1876 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %1871, i64 0, i32 0, i32 1, i32 2
  %1877 = load i64, i64* %1876, align 8
  %1878 = sext i32 %4 to i64
  %1879 = add i64 %1875, %1878
  %1880 = icmp ult i64 %1877, %1879
  br i1 %1880, label %1890, label %1881

1881:                                             ; preds = %1869
  %1882 = add i64 %1875, 1
  store i64 %1879, i64* %1874, align 8
  %1883 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %1884 = icmp eq i8 %1883, 0
  br i1 %1884, label %1886, label %1885

1885:                                             ; preds = %1881
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %1873, i32 2) #12
  br label %1886

1886:                                             ; preds = %1885, %1881
  %1887 = and i64 %1882, 1
  %1888 = icmp eq i64 %1887, 0
  br i1 %1888, label %1889, label %1892, !prof !29

1889:                                             ; preds = %1886
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

1890:                                             ; preds = %1869
  %1891 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %1871, i32 %4, i32 0, i32 2) #12
  br label %1892

1892:                                             ; preds = %1890, %1886
  %1893 = phi i64 [ %1891, %1890 ], [ %1882, %1886 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %1872) #12
  br label %1896

1894:                                             ; preds = %1866
  %1895 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %1867, i32 %4, i32 0) #12
  br label %1896

1896:                                             ; preds = %1894, %1892
  %1897 = phi i64 [ %1893, %1892 ], [ %1895, %1894 ]
  %1898 = and i64 %1897, 1
  %1899 = icmp eq i64 %1898, 0
  br i1 %1899, label %2398, label %1900

1900:                                             ; preds = %1896
  %1901 = add i64 %1897, -1
  %1902 = inttoptr i64 %1901 to i32*
  %1903 = trunc i64 %1 to i32
  store atomic volatile i32 %1903, i32* %1902 monotonic, align 4
  %1904 = add i64 %1897, 3
  %1905 = add i64 %3, 3
  %1906 = add nsw i32 %4, -4
  %1907 = sdiv i32 %1906, 4
  %1908 = sext i32 %1907 to i64
  %1909 = inttoptr i64 %1904 to i32*
  %1910 = inttoptr i64 %1904 to i8*
  %1911 = inttoptr i64 %1905 to i32*
  %1912 = inttoptr i64 %1905 to i8*
  %1913 = inttoptr i64 %1904 to i8*
  %1914 = add i32 %4, -1
  %1915 = icmp ult i32 %1914, 7
  br i1 %1915, label %2077, label %1916

1916:                                             ; preds = %1900
  %1917 = icmp ult i32 %1907, 16
  br i1 %1917, label %1918, label %2063

1918:                                             ; preds = %1916
  %1919 = icmp ult i32 %1907, 8
  br i1 %1919, label %2010, label %1920

1920:                                             ; preds = %1918
  %1921 = getelementptr i32, i32* %1909, i64 %1908
  %1922 = bitcast i32* %1921 to i8*
  %1923 = getelementptr i32, i32* %1911, i64 %1908
  %1924 = bitcast i32* %1923 to i8*
  %1925 = icmp ult i8* %1910, %1924
  %1926 = icmp ult i8* %1912, %1922
  %1927 = and i1 %1925, %1926
  br i1 %1927, label %2010, label %1928

1928:                                             ; preds = %1920
  %1929 = and i64 %1908, -8
  %1930 = getelementptr i32, i32* %1911, i64 %1929
  %1931 = sub nsw i64 %1908, %1929
  %1932 = getelementptr i32, i32* %1909, i64 %1929
  %1933 = add nsw i64 %1929, -8
  %1934 = lshr exact i64 %1933, 3
  %1935 = add nuw nsw i64 %1934, 1
  %1936 = and i64 %1935, 3
  %1937 = icmp ult i64 %1933, 24
  br i1 %1937, label %1989, label %1938

1938:                                             ; preds = %1928
  %1939 = sub nsw i64 %1935, %1936
  br label %1940

1940:                                             ; preds = %1940, %1938
  %1941 = phi i64 [ 0, %1938 ], [ %1986, %1940 ]
  %1942 = phi i64 [ %1939, %1938 ], [ %1987, %1940 ]
  %1943 = getelementptr i32, i32* %1911, i64 %1941
  %1944 = getelementptr i32, i32* %1909, i64 %1941
  %1945 = bitcast i32* %1943 to <4 x i32>*
  %1946 = load <4 x i32>, <4 x i32>* %1945, align 4, !alias.scope !285
  %1947 = getelementptr i32, i32* %1943, i64 4
  %1948 = bitcast i32* %1947 to <4 x i32>*
  %1949 = load <4 x i32>, <4 x i32>* %1948, align 4, !alias.scope !285
  %1950 = bitcast i32* %1944 to <4 x i32>*
  store <4 x i32> %1946, <4 x i32>* %1950, align 4, !alias.scope !288, !noalias !285
  %1951 = getelementptr i32, i32* %1944, i64 4
  %1952 = bitcast i32* %1951 to <4 x i32>*
  store <4 x i32> %1949, <4 x i32>* %1952, align 4, !alias.scope !288, !noalias !285
  %1953 = or i64 %1941, 8
  %1954 = getelementptr i32, i32* %1911, i64 %1953
  %1955 = getelementptr i32, i32* %1909, i64 %1953
  %1956 = bitcast i32* %1954 to <4 x i32>*
  %1957 = load <4 x i32>, <4 x i32>* %1956, align 4, !alias.scope !285
  %1958 = getelementptr i32, i32* %1954, i64 4
  %1959 = bitcast i32* %1958 to <4 x i32>*
  %1960 = load <4 x i32>, <4 x i32>* %1959, align 4, !alias.scope !285
  %1961 = bitcast i32* %1955 to <4 x i32>*
  store <4 x i32> %1957, <4 x i32>* %1961, align 4, !alias.scope !288, !noalias !285
  %1962 = getelementptr i32, i32* %1955, i64 4
  %1963 = bitcast i32* %1962 to <4 x i32>*
  store <4 x i32> %1960, <4 x i32>* %1963, align 4, !alias.scope !288, !noalias !285
  %1964 = or i64 %1941, 16
  %1965 = getelementptr i32, i32* %1911, i64 %1964
  %1966 = getelementptr i32, i32* %1909, i64 %1964
  %1967 = bitcast i32* %1965 to <4 x i32>*
  %1968 = load <4 x i32>, <4 x i32>* %1967, align 4, !alias.scope !285
  %1969 = getelementptr i32, i32* %1965, i64 4
  %1970 = bitcast i32* %1969 to <4 x i32>*
  %1971 = load <4 x i32>, <4 x i32>* %1970, align 4, !alias.scope !285
  %1972 = bitcast i32* %1966 to <4 x i32>*
  store <4 x i32> %1968, <4 x i32>* %1972, align 4, !alias.scope !288, !noalias !285
  %1973 = getelementptr i32, i32* %1966, i64 4
  %1974 = bitcast i32* %1973 to <4 x i32>*
  store <4 x i32> %1971, <4 x i32>* %1974, align 4, !alias.scope !288, !noalias !285
  %1975 = or i64 %1941, 24
  %1976 = getelementptr i32, i32* %1911, i64 %1975
  %1977 = getelementptr i32, i32* %1909, i64 %1975
  %1978 = bitcast i32* %1976 to <4 x i32>*
  %1979 = load <4 x i32>, <4 x i32>* %1978, align 4, !alias.scope !285
  %1980 = getelementptr i32, i32* %1976, i64 4
  %1981 = bitcast i32* %1980 to <4 x i32>*
  %1982 = load <4 x i32>, <4 x i32>* %1981, align 4, !alias.scope !285
  %1983 = bitcast i32* %1977 to <4 x i32>*
  store <4 x i32> %1979, <4 x i32>* %1983, align 4, !alias.scope !288, !noalias !285
  %1984 = getelementptr i32, i32* %1977, i64 4
  %1985 = bitcast i32* %1984 to <4 x i32>*
  store <4 x i32> %1982, <4 x i32>* %1985, align 4, !alias.scope !288, !noalias !285
  %1986 = add i64 %1941, 32
  %1987 = add i64 %1942, -4
  %1988 = icmp eq i64 %1987, 0
  br i1 %1988, label %1989, label %1940, !llvm.loop !290

1989:                                             ; preds = %1940, %1928
  %1990 = phi i64 [ 0, %1928 ], [ %1986, %1940 ]
  %1991 = icmp eq i64 %1936, 0
  br i1 %1991, label %2008, label %1992

1992:                                             ; preds = %1989, %1992
  %1993 = phi i64 [ %2005, %1992 ], [ %1990, %1989 ]
  %1994 = phi i64 [ %2006, %1992 ], [ %1936, %1989 ]
  %1995 = getelementptr i32, i32* %1911, i64 %1993
  %1996 = getelementptr i32, i32* %1909, i64 %1993
  %1997 = bitcast i32* %1995 to <4 x i32>*
  %1998 = load <4 x i32>, <4 x i32>* %1997, align 4, !alias.scope !285
  %1999 = getelementptr i32, i32* %1995, i64 4
  %2000 = bitcast i32* %1999 to <4 x i32>*
  %2001 = load <4 x i32>, <4 x i32>* %2000, align 4, !alias.scope !285
  %2002 = bitcast i32* %1996 to <4 x i32>*
  store <4 x i32> %1998, <4 x i32>* %2002, align 4, !alias.scope !288, !noalias !285
  %2003 = getelementptr i32, i32* %1996, i64 4
  %2004 = bitcast i32* %2003 to <4 x i32>*
  store <4 x i32> %2001, <4 x i32>* %2004, align 4, !alias.scope !288, !noalias !285
  %2005 = add i64 %1993, 8
  %2006 = add i64 %1994, -1
  %2007 = icmp eq i64 %2006, 0
  br i1 %2007, label %2008, label %1992, !llvm.loop !291

2008:                                             ; preds = %1992, %1989
  %2009 = icmp eq i64 %1929, %1908
  br i1 %2009, label %2077, label %2010

2010:                                             ; preds = %2008, %1920, %1918
  %2011 = phi i32* [ %1911, %1920 ], [ %1911, %1918 ], [ %1930, %2008 ]
  %2012 = phi i64 [ %1908, %1920 ], [ %1908, %1918 ], [ %1931, %2008 ]
  %2013 = phi i32* [ %1909, %1920 ], [ %1909, %1918 ], [ %1932, %2008 ]
  %2014 = add nsw i64 %2012, -1
  %2015 = and i64 %2012, 7
  %2016 = icmp eq i64 %2015, 0
  br i1 %2016, label %2028, label %2017

2017:                                             ; preds = %2010, %2017
  %2018 = phi i32* [ %2023, %2017 ], [ %2011, %2010 ]
  %2019 = phi i64 [ %2022, %2017 ], [ %2012, %2010 ]
  %2020 = phi i32* [ %2025, %2017 ], [ %2013, %2010 ]
  %2021 = phi i64 [ %2026, %2017 ], [ %2015, %2010 ]
  %2022 = add i64 %2019, -1
  %2023 = getelementptr inbounds i32, i32* %2018, i64 1
  %2024 = load i32, i32* %2018, align 4
  %2025 = getelementptr inbounds i32, i32* %2020, i64 1
  store i32 %2024, i32* %2020, align 4
  %2026 = add i64 %2021, -1
  %2027 = icmp eq i64 %2026, 0
  br i1 %2027, label %2028, label %2017, !llvm.loop !292

2028:                                             ; preds = %2017, %2010
  %2029 = phi i32* [ %2011, %2010 ], [ %2023, %2017 ]
  %2030 = phi i64 [ %2012, %2010 ], [ %2022, %2017 ]
  %2031 = phi i32* [ %2013, %2010 ], [ %2025, %2017 ]
  %2032 = icmp ult i64 %2014, 7
  br i1 %2032, label %2077, label %2033

2033:                                             ; preds = %2028, %2033
  %2034 = phi i32* [ %2059, %2033 ], [ %2029, %2028 ]
  %2035 = phi i64 [ %2058, %2033 ], [ %2030, %2028 ]
  %2036 = phi i32* [ %2061, %2033 ], [ %2031, %2028 ]
  %2037 = getelementptr inbounds i32, i32* %2034, i64 1
  %2038 = load i32, i32* %2034, align 4
  %2039 = getelementptr inbounds i32, i32* %2036, i64 1
  store i32 %2038, i32* %2036, align 4
  %2040 = getelementptr inbounds i32, i32* %2034, i64 2
  %2041 = load i32, i32* %2037, align 4
  %2042 = getelementptr inbounds i32, i32* %2036, i64 2
  store i32 %2041, i32* %2039, align 4
  %2043 = getelementptr inbounds i32, i32* %2034, i64 3
  %2044 = load i32, i32* %2040, align 4
  %2045 = getelementptr inbounds i32, i32* %2036, i64 3
  store i32 %2044, i32* %2042, align 4
  %2046 = getelementptr inbounds i32, i32* %2034, i64 4
  %2047 = load i32, i32* %2043, align 4
  %2048 = getelementptr inbounds i32, i32* %2036, i64 4
  store i32 %2047, i32* %2045, align 4
  %2049 = getelementptr inbounds i32, i32* %2034, i64 5
  %2050 = load i32, i32* %2046, align 4
  %2051 = getelementptr inbounds i32, i32* %2036, i64 5
  store i32 %2050, i32* %2048, align 4
  %2052 = getelementptr inbounds i32, i32* %2034, i64 6
  %2053 = load i32, i32* %2049, align 4
  %2054 = getelementptr inbounds i32, i32* %2036, i64 6
  store i32 %2053, i32* %2051, align 4
  %2055 = getelementptr inbounds i32, i32* %2034, i64 7
  %2056 = load i32, i32* %2052, align 4
  %2057 = getelementptr inbounds i32, i32* %2036, i64 7
  store i32 %2056, i32* %2054, align 4
  %2058 = add i64 %2035, -8
  %2059 = getelementptr inbounds i32, i32* %2034, i64 8
  %2060 = load i32, i32* %2055, align 4
  %2061 = getelementptr inbounds i32, i32* %2036, i64 8
  store i32 %2060, i32* %2057, align 4
  %2062 = icmp eq i64 %2058, 0
  br i1 %2062, label %2077, label %2033, !llvm.loop !293

2063:                                             ; preds = %1916
  %2064 = inttoptr i64 %1905 to i8*
  %2065 = shl nsw i64 %1908, 2
  %2066 = add nsw i64 %2065, -4
  %2067 = lshr exact i64 %2066, 2
  switch i64 %2067, label %2076 [
    i64 3, label %2075
    i64 1, label %2070
    i64 2, label %2074
    i64 0, label %2068
  ]

2068:                                             ; preds = %2063
  %2069 = load i32, i32* %1911, align 1
  store i32 %2069, i32* %1909, align 1
  br label %2077

2070:                                             ; preds = %2063
  %2071 = inttoptr i64 %1905 to i64*
  %2072 = inttoptr i64 %1904 to i64*
  %2073 = load i64, i64* %2071, align 1
  store i64 %2073, i64* %2072, align 1
  br label %2077

2074:                                             ; preds = %2063
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1913, i8* align 1 %2064, i64 12, i1 false) #12
  br label %2077

2075:                                             ; preds = %2063
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1913, i8* align 1 %2064, i64 16, i1 false) #12
  br label %2077

2076:                                             ; preds = %2063
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %1913, i8* align 1 %2064, i64 %2065, i1 false) #12
  br label %2077

2077:                                             ; preds = %2028, %2033, %2008, %2076, %2075, %2074, %2070, %2068, %1900
  %2078 = trunc i64 %1901 to i32
  %2079 = inttoptr i64 %1845 to i32*
  %2080 = cmpxchg volatile i32* %2079, i32 %1903, i32 %2078 release monotonic
  %2081 = extractvalue { i32, i1 } %2080, 1
  br i1 %2081, label %2082, label %2290

2082:                                             ; preds = %2077
  %2083 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %2084 = load i8, i8* %2083, align 8, !range !2
  %2085 = icmp eq i8 %2084, 0
  br i1 %2085, label %2088, label %2086, !prof !60

2086:                                             ; preds = %2082
  %2087 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %2087, i64 %1897, i64 %3, i32 %4) #12
  br label %2088

2088:                                             ; preds = %2086, %2082
  %2089 = load i8, i8* %39, align 1, !range !2
  %2090 = icmp eq i8 %2089, 0
  br i1 %2090, label %2218, label %2091

2091:                                             ; preds = %2088
  %2092 = and i64 %1897, -262144
  %2093 = or i64 %2092, 272
  %2094 = sub i64 %1897, %2092
  %2095 = trunc i64 %2094 to i32
  %2096 = lshr i32 %2095, 2
  %2097 = and i32 %2096, 31
  %2098 = shl i32 1, %2097
  %2099 = inttoptr i64 %2093 to i32*
  %2100 = lshr i64 %2094, 7
  %2101 = and i64 %2100, 33554431
  %2102 = getelementptr inbounds i32, i32* %2099, i64 %2101
  %2103 = load atomic i32, i32* %2102 acquire, align 4
  %2104 = and i32 %2103, %2098
  %2105 = icmp eq i32 %2104, 0
  br i1 %2105, label %2115, label %2106

2106:                                             ; preds = %2091
  %2107 = shl i32 %2098, 1
  %2108 = icmp eq i32 %2107, 0
  %2109 = getelementptr inbounds i32, i32* %2102, i64 1
  %2110 = select i1 %2108, i32 1, i32 %2107
  %2111 = select i1 %2108, i32* %2109, i32* %2102
  %2112 = load atomic i32, i32* %2111 acquire, align 4
  %2113 = and i32 %2112, %2110
  %2114 = icmp eq i32 %2113, 0
  br i1 %2114, label %2115, label %2218

2115:                                             ; preds = %2106, %2091
  %2116 = or i64 %1778, 272
  %2117 = sub i64 %3, %1778
  %2118 = trunc i64 %2117 to i32
  %2119 = lshr i32 %2118, 2
  %2120 = and i32 %2119, 31
  %2121 = shl i32 1, %2120
  %2122 = inttoptr i64 %2116 to i32*
  %2123 = lshr i64 %2117, 7
  %2124 = and i64 %2123, 33554431
  %2125 = getelementptr inbounds i32, i32* %2122, i64 %2124
  %2126 = load atomic i32, i32* %2125 acquire, align 4
  %2127 = and i32 %2126, %2121
  %2128 = icmp eq i32 %2127, 0
  br i1 %2128, label %2149, label %2129

2129:                                             ; preds = %2115
  %2130 = shl i32 %2121, 1
  %2131 = icmp eq i32 %2130, 0
  %2132 = getelementptr inbounds i32, i32* %2125, i64 1
  %2133 = select i1 %2131, i32 1, i32 %2130
  %2134 = select i1 %2131, i32* %2132, i32* %2125
  %2135 = load atomic i32, i32* %2134 acquire, align 4
  %2136 = and i32 %2135, %2133
  %2137 = icmp eq i32 %2136, 0
  br i1 %2137, label %2138, label %2149

2138:                                             ; preds = %2129
  %2139 = load atomic i32, i32* %2102 monotonic, align 4
  br label %2140

2140:                                             ; preds = %2144, %2138
  %2141 = phi i32 [ %2139, %2138 ], [ %2147, %2144 ]
  %2142 = and i32 %2141, %2098
  %2143 = icmp eq i32 %2142, %2098
  br i1 %2143, label %2218, label %2144

2144:                                             ; preds = %2140
  %2145 = or i32 %2141, %2098
  %2146 = cmpxchg volatile i32* %2102, i32 %2141, i32 %2145 release monotonic
  %2147 = extractvalue { i32, i1 } %2146, 0
  %2148 = extractvalue { i32, i1 } %2146, 1
  br i1 %2148, label %2218, label %2140

2149:                                             ; preds = %2129, %2115
  %2150 = load atomic i32, i32* %2125 acquire, align 4
  %2151 = and i32 %2150, %2121
  %2152 = icmp eq i32 %2151, 0
  br i1 %2152, label %2218, label %2153

2153:                                             ; preds = %2149
  %2154 = shl i32 %2121, 1
  %2155 = icmp eq i32 %2154, 0
  %2156 = getelementptr inbounds i32, i32* %2125, i64 1
  %2157 = select i1 %2155, i32 1, i32 %2154
  %2158 = select i1 %2155, i32* %2156, i32* %2125
  %2159 = load atomic i32, i32* %2158 acquire, align 4
  %2160 = and i32 %2159, %2157
  %2161 = icmp eq i32 %2160, 0
  br i1 %2161, label %2218, label %2162

2162:                                             ; preds = %2153
  %2163 = load atomic i32, i32* %2102 monotonic, align 4
  br label %2164

2164:                                             ; preds = %2168, %2162
  %2165 = phi i32 [ %2163, %2162 ], [ %2171, %2168 ]
  %2166 = and i32 %2165, %2098
  %2167 = icmp eq i32 %2166, %2098
  br i1 %2167, label %2218, label %2168

2168:                                             ; preds = %2164
  %2169 = or i32 %2165, %2098
  %2170 = cmpxchg volatile i32* %2102, i32 %2165, i32 %2169 release monotonic
  %2171 = extractvalue { i32, i1 } %2170, 0
  %2172 = extractvalue { i32, i1 } %2170, 1
  br i1 %2172, label %2173, label %2164

2173:                                             ; preds = %2168
  %2174 = bitcast %"class.v8::internal::HeapObject"* %32 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2174) #12
  %2175 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %32, i64 0, i32 0, i32 0, i32 0
  store i64 %1897, i64* %2175, align 8
  %2176 = xor i64 %2092, -1
  %2177 = add i64 %1897, %2176
  %2178 = trunc i64 %2177 to i32
  %2179 = lshr i32 %2178, 2
  %2180 = and i32 %2179, 31
  %2181 = shl i32 1, %2180
  %2182 = lshr i64 %2177, 7
  %2183 = and i64 %2182, 33554431
  %2184 = getelementptr inbounds i32, i32* %2099, i64 %2183
  %2185 = load atomic i32, i32* %2184 acquire, align 4
  %2186 = and i32 %2185, %2181
  %2187 = icmp eq i32 %2186, 0
  br i1 %2187, label %2217, label %2188

2188:                                             ; preds = %2173
  %2189 = shl i32 %2181, 1
  %2190 = icmp eq i32 %2189, 0
  %2191 = getelementptr inbounds i32, i32* %2184, i64 1
  %2192 = select i1 %2190, i32 1, i32 %2189
  %2193 = select i1 %2190, i32* %2191, i32* %2184
  %2194 = load atomic i32, i32* %2193 monotonic, align 4
  br label %2195

2195:                                             ; preds = %2199, %2188
  %2196 = phi i32 [ %2194, %2188 ], [ %2202, %2199 ]
  %2197 = and i32 %2196, %2192
  %2198 = icmp eq i32 %2197, %2192
  br i1 %2198, label %2217, label %2199

2199:                                             ; preds = %2195
  %2200 = or i32 %2196, %2192
  %2201 = cmpxchg volatile i32* %2193, i32 %2196, i32 %2200 release monotonic
  %2202 = extractvalue { i32, i1 } %2201, 0
  %2203 = extractvalue { i32, i1 } %2201, 1
  br i1 %2203, label %2204, label %2195

2204:                                             ; preds = %2199
  %2205 = inttoptr i64 %2092 to %"class.v8::internal::MemoryChunk"*
  %2206 = load i64, i64* %2175, align 8
  %2207 = and i64 %2206, -4294967296
  %2208 = add i64 %2206, -1
  %2209 = inttoptr i64 %2208 to i32*
  %2210 = load atomic i32, i32* %2209 monotonic, align 4
  %2211 = zext i32 %2210 to i64
  %2212 = or i64 %2207, %2211
  %2213 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %32, i64 %2212) #12
  %2214 = sext i32 %2213 to i64
  %2215 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %2205, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %2216 = atomicrmw add i64* %2215, i64 %2214 seq_cst
  br label %2217

2217:                                             ; preds = %2195, %2204, %2173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2174) #12
  br label %2218

2218:                                             ; preds = %2144, %2140, %2164, %2217, %2153, %2149, %2106, %2088
  %2219 = bitcast %"class.v8::internal::Heap"** %1843 to i64*
  %2220 = load i64, i64* %2219, align 8
  %2221 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %2222 = icmp eq i8 %2221, 0
  br i1 %2222, label %2327, label %2223

2223:                                             ; preds = %2218
  %2224 = add i64 %1, 7
  %2225 = inttoptr i64 %2224 to i16*
  %2226 = load atomic i16, i16* %2225 monotonic, align 2
  switch i16 %2226, label %2327 [
    i16 1085, label %2227
    i16 1057, label %2227
  ]

2227:                                             ; preds = %2223, %2223
  %2228 = bitcast %"class.v8::internal::HeapObject"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2228) #12
  %2229 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %33, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %2229, align 8
  %2230 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %33, i64 %1) #12
  %2231 = sext i32 %2230 to i64
  %2232 = add i64 %1845, %2231
  %2233 = add i64 %2232, 4
  %2234 = and i64 %2233, -262144
  %2235 = inttoptr i64 %2234 to %"class.v8::internal::Page"*
  %2236 = icmp eq %"class.v8::internal::Page"* %1847, %2235
  br i1 %2236, label %2237, label %2267

2237:                                             ; preds = %2227
  %2238 = add i64 %2231, %3
  %2239 = add i64 %2220, -41416
  %2240 = inttoptr i64 %2239 to %"class.v8::internal::Isolate"*
  %2241 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2240, i64 0, i32 0, i32 7, i32 0, i64 534
  %2242 = load i64, i64* %2241, align 8
  %2243 = inttoptr i64 %2232 to i32*
  %2244 = load atomic i32, i32* %2243 monotonic, align 4
  %2245 = trunc i64 %2242 to i32
  %2246 = icmp eq i32 %2244, %2245
  br i1 %2246, label %2247, label %2267

2247:                                             ; preds = %2237
  %2248 = load i64, i64* %1852, align 8
  %2249 = and i64 %2248, 524288
  %2250 = icmp eq i64 %2249, 0
  br i1 %2250, label %2268, label %2251

2251:                                             ; preds = %2247
  %2252 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 8, i32 0
  %2253 = bitcast %"struct.std::__1::__atomic_base.69"* %2252 to i64*
  %2254 = load atomic i64, i64* %2253 seq_cst, align 64
  %2255 = inttoptr i64 %2254 to %"class.v8::internal::SemiSpace"*
  %2256 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %2255, i64 0, i32 5
  %2257 = load i64, i64* %2256, align 8
  %2258 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %2259 = load i64, i64* %2258, align 8
  %2260 = icmp ugt i64 %2259, %2257
  br i1 %2260, label %2267, label %2261

2261:                                             ; preds = %2251
  %2262 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %2263 = load i64, i64* %2262, align 32
  %2264 = icmp ule i64 %2263, %2257
  %2265 = icmp ult i64 %1845, %2257
  %2266 = or i1 %2265, %2264
  br i1 %2266, label %2267, label %2268

2267:                                             ; preds = %2261, %2251, %2237, %2227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2228) #12
  br label %2327

2268:                                             ; preds = %2261, %2247
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2228) #12
  %2269 = trunc i64 %2238 to i32
  %2270 = icmp eq i32 %2269, 0
  br i1 %2270, label %2327, label %2271

2271:                                             ; preds = %2268
  %2272 = and i64 %2238, -4294967296
  %2273 = add i64 %2238, 3
  %2274 = inttoptr i64 %2273 to i32*
  %2275 = load i32, i32* %2274, align 4
  %2276 = zext i32 %2275 to i64
  %2277 = or i64 %2272, %2276
  %2278 = bitcast %"class.v8::internal::AllocationSite"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2278) #12
  %2279 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2277, i64* %2279, align 8
  %2280 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %2281 = bitcast %"class.std::__1::tuple"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2281) #12
  %2282 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %34, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %36, %"class.v8::internal::AllocationSite"** %2282, align 8
  %2283 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %35, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2283) #12
  %2284 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %2280, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %36, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %34, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %35) #12
  %2285 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %2284, 0
  %2286 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %2285, i64 3
  %2287 = bitcast %"struct.std::__1::__hash_node_base.518"* %2286 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2283) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2281) #12
  %2288 = load i64, i64* %2287, align 8
  %2289 = add i64 %2288, 1
  store i64 %2289, i64* %2287, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2278) #12
  br label %2327

2290:                                             ; preds = %2077
  %2291 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %2292 = load i64, i64* %2291, align 8
  %2293 = icmp eq i64 %2292, 0
  br i1 %2293, label %2299, label %2294

2294:                                             ; preds = %2290
  %2295 = sext i32 %4 to i64
  %2296 = sub i64 %2292, %2295
  %2297 = icmp eq i64 %2296, %1901
  br i1 %2297, label %2298, label %2299

2298:                                             ; preds = %2294
  store i64 %1901, i64* %2291, align 8
  br label %2303

2299:                                             ; preds = %2294, %2290
  %2300 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %1867, i64 0, i32 0
  %2301 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2300, align 8
  %2302 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %2301, i64 %1901, i32 %4, i32 1) #12
  br label %2303

2303:                                             ; preds = %2299, %2298
  %2304 = and i64 %3, -4294967296
  %2305 = load atomic i32, i32* %2079 acquire, align 4
  %2306 = zext i32 %2305 to i64
  %2307 = or i64 %2304, %2306
  %2308 = add i64 %2307, 1
  %2309 = inttoptr i64 %2 to i64*
  %2310 = load i64, i64* %2309, align 8
  %2311 = and i64 %2310, 2
  %2312 = or i64 %2308, %2311
  store i64 %2312, i64* %2309, align 8
  %2313 = and i64 %2308, 1
  %2314 = icmp ne i64 %2313, 0
  %2315 = trunc i64 %2312 to i32
  %2316 = icmp ne i32 %2315, 3
  %2317 = and i1 %2314, %2316
  br i1 %2317, label %2318, label %3452

2318:                                             ; preds = %2303
  %2319 = and i64 %2308, -262144
  %2320 = inttoptr i64 %2319 to %"class.v8::internal::BasicMemoryChunk"*
  %2321 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2320, i64 0, i32 1
  %2322 = load i64, i64* %2321, align 8
  %2323 = lshr i64 %2322, 4
  %2324 = trunc i64 %2323 to i32
  %2325 = and i32 %2324, 1
  %2326 = xor i32 %2325, 1
  br label %3452

2327:                                             ; preds = %2271, %2268, %2267, %2223, %2218
  %2328 = inttoptr i64 %2 to i64*
  %2329 = load i64, i64* %2328, align 8
  %2330 = and i64 %2329, 2
  %2331 = or i64 %2330, %1897
  store i64 %2331, i64* %2328, align 8
  %2332 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %2333 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %2332, align 8
  %2334 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %2335 = load i32, i32* %2334, align 8
  %2336 = sext i32 %2335 to i64
  %2337 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 0, i64 %2336, i32 0
  %2338 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2337, align 8
  %2339 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338, i64 0, i32 1
  %2340 = load i64, i64* %2339, align 8
  %2341 = icmp eq i64 %2340, 256
  br i1 %2341, label %2346, label %2342

2342:                                             ; preds = %2327
  %2343 = add i64 %2340, 1
  store i64 %2343, i64* %2339, align 8
  %2344 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338, i64 0, i32 2, i64 %2340, i32 0, i32 0, i32 0, i32 0
  store i64 %1897, i64* %2344, align 8
  %2345 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338, i64 0, i32 2, i64 %2340, i32 1
  br label %2391

2346:                                             ; preds = %2327
  %2347 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2347) #12
  %2348 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 1, i32 1
  %2349 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2348 to i64*
  %2350 = load i64, i64* %2349, align 8
  %2351 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338 to i64*
  store i64 %2350, i64* %2351, align 8
  %2352 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2338 to i64
  store atomic volatile i64 %2352, i64* %2349 monotonic, align 8
  %2353 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %2333, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2354 = atomicrmw add i64* %2353, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2347) #12
  %2355 = call i8* @_Znwm(i64 4112) #17
  %2356 = getelementptr inbounds i8, i8* %2355, i64 8
  %2357 = bitcast i8* %2356 to i64*
  store i64 0, i64* %2357, align 8
  %2358 = getelementptr inbounds i8, i8* %2355, i64 16
  %2359 = bitcast i8* %2358 to %"struct.std::__1::pair.1282"*
  %2360 = getelementptr inbounds i8, i8* %2355, i64 4112
  %2361 = bitcast i8* %2360 to %"struct.std::__1::pair.1282"*
  br label %2362

2362:                                             ; preds = %2362, %2346
  %2363 = phi %"struct.std::__1::pair.1282"* [ %2359, %2346 ], [ %2380, %2362 ]
  %2364 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2364, align 8
  %2365 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 0, i32 1
  store i32 0, i32* %2365, align 8
  %2366 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2366, align 8
  %2367 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 1, i32 1
  store i32 0, i32* %2367, align 8
  %2368 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2368, align 8
  %2369 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 2, i32 1
  store i32 0, i32* %2369, align 8
  %2370 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2370, align 8
  %2371 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 3, i32 1
  store i32 0, i32* %2371, align 8
  %2372 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2372, align 8
  %2373 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 4, i32 1
  store i32 0, i32* %2373, align 8
  %2374 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2374, align 8
  %2375 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 5, i32 1
  store i32 0, i32* %2375, align 8
  %2376 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2376, align 8
  %2377 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 6, i32 1
  store i32 0, i32* %2377, align 8
  %2378 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2378, align 8
  %2379 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 7, i32 1
  store i32 0, i32* %2379, align 8
  %2380 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2363, i64 8
  %2381 = icmp eq %"struct.std::__1::pair.1282"* %2380, %2361
  br i1 %2381, label %2382, label %2362

2382:                                             ; preds = %2362
  %2383 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2337 to i8**
  store i8* %2355, i8** %2383, align 8
  %2384 = bitcast i8* %2355 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %2385 = load i64, i64* %2357, align 8
  %2386 = icmp eq i64 %2385, 256
  br i1 %2386, label %2393, label %2387

2387:                                             ; preds = %2382
  %2388 = add i64 %2385, 1
  store i64 %2388, i64* %2357, align 8
  %2389 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2384, i64 0, i32 2, i64 %2385, i32 0, i32 0, i32 0, i32 0
  store i64 %1897, i64* %2389, align 8
  %2390 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2384, i64 0, i32 2, i64 %2385, i32 1
  br label %2391

2391:                                             ; preds = %2342, %2387
  %2392 = phi i32* [ %2390, %2387 ], [ %2345, %2342 ]
  store i32 %4, i32* %2392, align 8
  br label %2393

2393:                                             ; preds = %2391, %2382
  %2394 = sext i32 %4 to i64
  %2395 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %2396 = load i64, i64* %2395, align 8
  %2397 = add i64 %2396, %2394
  store i64 %2397, i64* %2395, align 8
  br label %3452

2398:                                             ; preds = %1896, %1860, %1856
  %2399 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0
  %2400 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 1
  %2401 = load i64, i64* %2400, align 8
  %2402 = sext i32 %4 to i64
  %2403 = add i64 %2401, %2402
  %2404 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 1, i32 2
  %2405 = load i64, i64* %2404, align 8
  %2406 = icmp ugt i64 %2403, %2405
  br i1 %2406, label %2407, label %2412

2407:                                             ; preds = %2398
  %2408 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 2, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %2409 = load i32, i32* %2408, align 8
  %2410 = sext i32 %2409 to i64
  %2411 = shl nsw i64 %2410, 1
  br label %2417

2412:                                             ; preds = %2398
  store i64 %2403, i64* %2400, align 8
  %2413 = add i64 %2401, 1
  %2414 = and i64 %2413, 1
  %2415 = icmp eq i64 %2414, 0
  br i1 %2415, label %2416, label %2417, !prof !29

2416:                                             ; preds = %2412
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

2417:                                             ; preds = %2412, %2407
  %2418 = phi i64 [ %2411, %2407 ], [ %2413, %2412 ]
  %2419 = and i64 %2418, 1
  %2420 = icmp eq i64 %2419, 0
  br i1 %2420, label %2421, label %2425

2421:                                             ; preds = %2417
  %2422 = tail call i64 @_ZN2v88internal10PagedSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::PagedSpace"* %2399, i32 %4, i32 0, i32 2) #12
  %2423 = and i64 %2422, 1
  %2424 = icmp eq i64 %2423, 0
  br i1 %2424, label %2921, label %2425

2425:                                             ; preds = %2421, %2417
  %2426 = phi i64 [ %2422, %2421 ], [ %2418, %2417 ]
  %2427 = add i64 %2426, -1
  %2428 = inttoptr i64 %2427 to i32*
  %2429 = trunc i64 %1 to i32
  store atomic volatile i32 %2429, i32* %2428 monotonic, align 4
  %2430 = add i64 %2426, 3
  %2431 = add i64 %3, 3
  %2432 = add nsw i32 %4, -4
  %2433 = sdiv i32 %2432, 4
  %2434 = sext i32 %2433 to i64
  %2435 = inttoptr i64 %2430 to i32*
  %2436 = inttoptr i64 %2430 to i8*
  %2437 = inttoptr i64 %2431 to i32*
  %2438 = inttoptr i64 %2431 to i8*
  %2439 = inttoptr i64 %2430 to i8*
  %2440 = add i32 %4, -1
  %2441 = icmp ult i32 %2440, 7
  br i1 %2441, label %2603, label %2442

2442:                                             ; preds = %2425
  %2443 = icmp ult i32 %2433, 16
  br i1 %2443, label %2444, label %2589

2444:                                             ; preds = %2442
  %2445 = icmp ult i32 %2433, 8
  br i1 %2445, label %2536, label %2446

2446:                                             ; preds = %2444
  %2447 = getelementptr i32, i32* %2435, i64 %2434
  %2448 = bitcast i32* %2447 to i8*
  %2449 = getelementptr i32, i32* %2437, i64 %2434
  %2450 = bitcast i32* %2449 to i8*
  %2451 = icmp ult i8* %2436, %2450
  %2452 = icmp ult i8* %2438, %2448
  %2453 = and i1 %2451, %2452
  br i1 %2453, label %2536, label %2454

2454:                                             ; preds = %2446
  %2455 = and i64 %2434, -8
  %2456 = getelementptr i32, i32* %2437, i64 %2455
  %2457 = sub nsw i64 %2434, %2455
  %2458 = getelementptr i32, i32* %2435, i64 %2455
  %2459 = add nsw i64 %2455, -8
  %2460 = lshr exact i64 %2459, 3
  %2461 = add nuw nsw i64 %2460, 1
  %2462 = and i64 %2461, 3
  %2463 = icmp ult i64 %2459, 24
  br i1 %2463, label %2515, label %2464

2464:                                             ; preds = %2454
  %2465 = sub nsw i64 %2461, %2462
  br label %2466

2466:                                             ; preds = %2466, %2464
  %2467 = phi i64 [ 0, %2464 ], [ %2512, %2466 ]
  %2468 = phi i64 [ %2465, %2464 ], [ %2513, %2466 ]
  %2469 = getelementptr i32, i32* %2437, i64 %2467
  %2470 = getelementptr i32, i32* %2435, i64 %2467
  %2471 = bitcast i32* %2469 to <4 x i32>*
  %2472 = load <4 x i32>, <4 x i32>* %2471, align 4, !alias.scope !294
  %2473 = getelementptr i32, i32* %2469, i64 4
  %2474 = bitcast i32* %2473 to <4 x i32>*
  %2475 = load <4 x i32>, <4 x i32>* %2474, align 4, !alias.scope !294
  %2476 = bitcast i32* %2470 to <4 x i32>*
  store <4 x i32> %2472, <4 x i32>* %2476, align 4, !alias.scope !297, !noalias !294
  %2477 = getelementptr i32, i32* %2470, i64 4
  %2478 = bitcast i32* %2477 to <4 x i32>*
  store <4 x i32> %2475, <4 x i32>* %2478, align 4, !alias.scope !297, !noalias !294
  %2479 = or i64 %2467, 8
  %2480 = getelementptr i32, i32* %2437, i64 %2479
  %2481 = getelementptr i32, i32* %2435, i64 %2479
  %2482 = bitcast i32* %2480 to <4 x i32>*
  %2483 = load <4 x i32>, <4 x i32>* %2482, align 4, !alias.scope !294
  %2484 = getelementptr i32, i32* %2480, i64 4
  %2485 = bitcast i32* %2484 to <4 x i32>*
  %2486 = load <4 x i32>, <4 x i32>* %2485, align 4, !alias.scope !294
  %2487 = bitcast i32* %2481 to <4 x i32>*
  store <4 x i32> %2483, <4 x i32>* %2487, align 4, !alias.scope !297, !noalias !294
  %2488 = getelementptr i32, i32* %2481, i64 4
  %2489 = bitcast i32* %2488 to <4 x i32>*
  store <4 x i32> %2486, <4 x i32>* %2489, align 4, !alias.scope !297, !noalias !294
  %2490 = or i64 %2467, 16
  %2491 = getelementptr i32, i32* %2437, i64 %2490
  %2492 = getelementptr i32, i32* %2435, i64 %2490
  %2493 = bitcast i32* %2491 to <4 x i32>*
  %2494 = load <4 x i32>, <4 x i32>* %2493, align 4, !alias.scope !294
  %2495 = getelementptr i32, i32* %2491, i64 4
  %2496 = bitcast i32* %2495 to <4 x i32>*
  %2497 = load <4 x i32>, <4 x i32>* %2496, align 4, !alias.scope !294
  %2498 = bitcast i32* %2492 to <4 x i32>*
  store <4 x i32> %2494, <4 x i32>* %2498, align 4, !alias.scope !297, !noalias !294
  %2499 = getelementptr i32, i32* %2492, i64 4
  %2500 = bitcast i32* %2499 to <4 x i32>*
  store <4 x i32> %2497, <4 x i32>* %2500, align 4, !alias.scope !297, !noalias !294
  %2501 = or i64 %2467, 24
  %2502 = getelementptr i32, i32* %2437, i64 %2501
  %2503 = getelementptr i32, i32* %2435, i64 %2501
  %2504 = bitcast i32* %2502 to <4 x i32>*
  %2505 = load <4 x i32>, <4 x i32>* %2504, align 4, !alias.scope !294
  %2506 = getelementptr i32, i32* %2502, i64 4
  %2507 = bitcast i32* %2506 to <4 x i32>*
  %2508 = load <4 x i32>, <4 x i32>* %2507, align 4, !alias.scope !294
  %2509 = bitcast i32* %2503 to <4 x i32>*
  store <4 x i32> %2505, <4 x i32>* %2509, align 4, !alias.scope !297, !noalias !294
  %2510 = getelementptr i32, i32* %2503, i64 4
  %2511 = bitcast i32* %2510 to <4 x i32>*
  store <4 x i32> %2508, <4 x i32>* %2511, align 4, !alias.scope !297, !noalias !294
  %2512 = add i64 %2467, 32
  %2513 = add i64 %2468, -4
  %2514 = icmp eq i64 %2513, 0
  br i1 %2514, label %2515, label %2466, !llvm.loop !299

2515:                                             ; preds = %2466, %2454
  %2516 = phi i64 [ 0, %2454 ], [ %2512, %2466 ]
  %2517 = icmp eq i64 %2462, 0
  br i1 %2517, label %2534, label %2518

2518:                                             ; preds = %2515, %2518
  %2519 = phi i64 [ %2531, %2518 ], [ %2516, %2515 ]
  %2520 = phi i64 [ %2532, %2518 ], [ %2462, %2515 ]
  %2521 = getelementptr i32, i32* %2437, i64 %2519
  %2522 = getelementptr i32, i32* %2435, i64 %2519
  %2523 = bitcast i32* %2521 to <4 x i32>*
  %2524 = load <4 x i32>, <4 x i32>* %2523, align 4, !alias.scope !294
  %2525 = getelementptr i32, i32* %2521, i64 4
  %2526 = bitcast i32* %2525 to <4 x i32>*
  %2527 = load <4 x i32>, <4 x i32>* %2526, align 4, !alias.scope !294
  %2528 = bitcast i32* %2522 to <4 x i32>*
  store <4 x i32> %2524, <4 x i32>* %2528, align 4, !alias.scope !297, !noalias !294
  %2529 = getelementptr i32, i32* %2522, i64 4
  %2530 = bitcast i32* %2529 to <4 x i32>*
  store <4 x i32> %2527, <4 x i32>* %2530, align 4, !alias.scope !297, !noalias !294
  %2531 = add i64 %2519, 8
  %2532 = add i64 %2520, -1
  %2533 = icmp eq i64 %2532, 0
  br i1 %2533, label %2534, label %2518, !llvm.loop !300

2534:                                             ; preds = %2518, %2515
  %2535 = icmp eq i64 %2455, %2434
  br i1 %2535, label %2603, label %2536

2536:                                             ; preds = %2534, %2446, %2444
  %2537 = phi i32* [ %2437, %2446 ], [ %2437, %2444 ], [ %2456, %2534 ]
  %2538 = phi i64 [ %2434, %2446 ], [ %2434, %2444 ], [ %2457, %2534 ]
  %2539 = phi i32* [ %2435, %2446 ], [ %2435, %2444 ], [ %2458, %2534 ]
  %2540 = add nsw i64 %2538, -1
  %2541 = and i64 %2538, 7
  %2542 = icmp eq i64 %2541, 0
  br i1 %2542, label %2554, label %2543

2543:                                             ; preds = %2536, %2543
  %2544 = phi i32* [ %2549, %2543 ], [ %2537, %2536 ]
  %2545 = phi i64 [ %2548, %2543 ], [ %2538, %2536 ]
  %2546 = phi i32* [ %2551, %2543 ], [ %2539, %2536 ]
  %2547 = phi i64 [ %2552, %2543 ], [ %2541, %2536 ]
  %2548 = add i64 %2545, -1
  %2549 = getelementptr inbounds i32, i32* %2544, i64 1
  %2550 = load i32, i32* %2544, align 4
  %2551 = getelementptr inbounds i32, i32* %2546, i64 1
  store i32 %2550, i32* %2546, align 4
  %2552 = add i64 %2547, -1
  %2553 = icmp eq i64 %2552, 0
  br i1 %2553, label %2554, label %2543, !llvm.loop !301

2554:                                             ; preds = %2543, %2536
  %2555 = phi i32* [ %2537, %2536 ], [ %2549, %2543 ]
  %2556 = phi i64 [ %2538, %2536 ], [ %2548, %2543 ]
  %2557 = phi i32* [ %2539, %2536 ], [ %2551, %2543 ]
  %2558 = icmp ult i64 %2540, 7
  br i1 %2558, label %2603, label %2559

2559:                                             ; preds = %2554, %2559
  %2560 = phi i32* [ %2585, %2559 ], [ %2555, %2554 ]
  %2561 = phi i64 [ %2584, %2559 ], [ %2556, %2554 ]
  %2562 = phi i32* [ %2587, %2559 ], [ %2557, %2554 ]
  %2563 = getelementptr inbounds i32, i32* %2560, i64 1
  %2564 = load i32, i32* %2560, align 4
  %2565 = getelementptr inbounds i32, i32* %2562, i64 1
  store i32 %2564, i32* %2562, align 4
  %2566 = getelementptr inbounds i32, i32* %2560, i64 2
  %2567 = load i32, i32* %2563, align 4
  %2568 = getelementptr inbounds i32, i32* %2562, i64 2
  store i32 %2567, i32* %2565, align 4
  %2569 = getelementptr inbounds i32, i32* %2560, i64 3
  %2570 = load i32, i32* %2566, align 4
  %2571 = getelementptr inbounds i32, i32* %2562, i64 3
  store i32 %2570, i32* %2568, align 4
  %2572 = getelementptr inbounds i32, i32* %2560, i64 4
  %2573 = load i32, i32* %2569, align 4
  %2574 = getelementptr inbounds i32, i32* %2562, i64 4
  store i32 %2573, i32* %2571, align 4
  %2575 = getelementptr inbounds i32, i32* %2560, i64 5
  %2576 = load i32, i32* %2572, align 4
  %2577 = getelementptr inbounds i32, i32* %2562, i64 5
  store i32 %2576, i32* %2574, align 4
  %2578 = getelementptr inbounds i32, i32* %2560, i64 6
  %2579 = load i32, i32* %2575, align 4
  %2580 = getelementptr inbounds i32, i32* %2562, i64 6
  store i32 %2579, i32* %2577, align 4
  %2581 = getelementptr inbounds i32, i32* %2560, i64 7
  %2582 = load i32, i32* %2578, align 4
  %2583 = getelementptr inbounds i32, i32* %2562, i64 7
  store i32 %2582, i32* %2580, align 4
  %2584 = add i64 %2561, -8
  %2585 = getelementptr inbounds i32, i32* %2560, i64 8
  %2586 = load i32, i32* %2581, align 4
  %2587 = getelementptr inbounds i32, i32* %2562, i64 8
  store i32 %2586, i32* %2583, align 4
  %2588 = icmp eq i64 %2584, 0
  br i1 %2588, label %2603, label %2559, !llvm.loop !302

2589:                                             ; preds = %2442
  %2590 = inttoptr i64 %2431 to i8*
  %2591 = shl nsw i64 %2434, 2
  %2592 = add nsw i64 %2591, -4
  %2593 = lshr exact i64 %2592, 2
  switch i64 %2593, label %2602 [
    i64 3, label %2601
    i64 1, label %2596
    i64 2, label %2600
    i64 0, label %2594
  ]

2594:                                             ; preds = %2589
  %2595 = load i32, i32* %2437, align 1
  store i32 %2595, i32* %2435, align 1
  br label %2603

2596:                                             ; preds = %2589
  %2597 = inttoptr i64 %2431 to i64*
  %2598 = inttoptr i64 %2430 to i64*
  %2599 = load i64, i64* %2597, align 1
  store i64 %2599, i64* %2598, align 1
  br label %2603

2600:                                             ; preds = %2589
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2439, i8* align 1 %2590, i64 12, i1 false) #12
  br label %2603

2601:                                             ; preds = %2589
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2439, i8* align 1 %2590, i64 16, i1 false) #12
  br label %2603

2602:                                             ; preds = %2589
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2439, i8* align 1 %2590, i64 %2591, i1 false) #12
  br label %2603

2603:                                             ; preds = %2554, %2559, %2534, %2602, %2601, %2600, %2596, %2594, %2425
  %2604 = trunc i64 %2427 to i32
  %2605 = inttoptr i64 %1845 to i32*
  %2606 = cmpxchg volatile i32* %2605, i32 %2429, i32 %2604 release monotonic
  %2607 = extractvalue { i32, i1 } %2606, 1
  br i1 %2607, label %2608, label %2816

2608:                                             ; preds = %2603
  %2609 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %2610 = load i8, i8* %2609, align 8, !range !2
  %2611 = icmp eq i8 %2610, 0
  br i1 %2611, label %2614, label %2612, !prof !60

2612:                                             ; preds = %2608
  %2613 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %2613, i64 %2426, i64 %3, i32 %4) #12
  br label %2614

2614:                                             ; preds = %2612, %2608
  %2615 = load i8, i8* %39, align 1, !range !2
  %2616 = icmp eq i8 %2615, 0
  br i1 %2616, label %2744, label %2617

2617:                                             ; preds = %2614
  %2618 = and i64 %2426, -262144
  %2619 = or i64 %2618, 272
  %2620 = sub i64 %2426, %2618
  %2621 = trunc i64 %2620 to i32
  %2622 = lshr i32 %2621, 2
  %2623 = and i32 %2622, 31
  %2624 = shl i32 1, %2623
  %2625 = inttoptr i64 %2619 to i32*
  %2626 = lshr i64 %2620, 7
  %2627 = and i64 %2626, 33554431
  %2628 = getelementptr inbounds i32, i32* %2625, i64 %2627
  %2629 = load atomic i32, i32* %2628 acquire, align 4
  %2630 = and i32 %2629, %2624
  %2631 = icmp eq i32 %2630, 0
  br i1 %2631, label %2641, label %2632

2632:                                             ; preds = %2617
  %2633 = shl i32 %2624, 1
  %2634 = icmp eq i32 %2633, 0
  %2635 = getelementptr inbounds i32, i32* %2628, i64 1
  %2636 = select i1 %2634, i32 1, i32 %2633
  %2637 = select i1 %2634, i32* %2635, i32* %2628
  %2638 = load atomic i32, i32* %2637 acquire, align 4
  %2639 = and i32 %2638, %2636
  %2640 = icmp eq i32 %2639, 0
  br i1 %2640, label %2641, label %2744

2641:                                             ; preds = %2632, %2617
  %2642 = or i64 %1778, 272
  %2643 = sub i64 %3, %1778
  %2644 = trunc i64 %2643 to i32
  %2645 = lshr i32 %2644, 2
  %2646 = and i32 %2645, 31
  %2647 = shl i32 1, %2646
  %2648 = inttoptr i64 %2642 to i32*
  %2649 = lshr i64 %2643, 7
  %2650 = and i64 %2649, 33554431
  %2651 = getelementptr inbounds i32, i32* %2648, i64 %2650
  %2652 = load atomic i32, i32* %2651 acquire, align 4
  %2653 = and i32 %2652, %2647
  %2654 = icmp eq i32 %2653, 0
  br i1 %2654, label %2675, label %2655

2655:                                             ; preds = %2641
  %2656 = shl i32 %2647, 1
  %2657 = icmp eq i32 %2656, 0
  %2658 = getelementptr inbounds i32, i32* %2651, i64 1
  %2659 = select i1 %2657, i32 1, i32 %2656
  %2660 = select i1 %2657, i32* %2658, i32* %2651
  %2661 = load atomic i32, i32* %2660 acquire, align 4
  %2662 = and i32 %2661, %2659
  %2663 = icmp eq i32 %2662, 0
  br i1 %2663, label %2664, label %2675

2664:                                             ; preds = %2655
  %2665 = load atomic i32, i32* %2628 monotonic, align 4
  br label %2666

2666:                                             ; preds = %2670, %2664
  %2667 = phi i32 [ %2665, %2664 ], [ %2673, %2670 ]
  %2668 = and i32 %2667, %2624
  %2669 = icmp eq i32 %2668, %2624
  br i1 %2669, label %2744, label %2670

2670:                                             ; preds = %2666
  %2671 = or i32 %2667, %2624
  %2672 = cmpxchg volatile i32* %2628, i32 %2667, i32 %2671 release monotonic
  %2673 = extractvalue { i32, i1 } %2672, 0
  %2674 = extractvalue { i32, i1 } %2672, 1
  br i1 %2674, label %2744, label %2666

2675:                                             ; preds = %2655, %2641
  %2676 = load atomic i32, i32* %2651 acquire, align 4
  %2677 = and i32 %2676, %2647
  %2678 = icmp eq i32 %2677, 0
  br i1 %2678, label %2744, label %2679

2679:                                             ; preds = %2675
  %2680 = shl i32 %2647, 1
  %2681 = icmp eq i32 %2680, 0
  %2682 = getelementptr inbounds i32, i32* %2651, i64 1
  %2683 = select i1 %2681, i32 1, i32 %2680
  %2684 = select i1 %2681, i32* %2682, i32* %2651
  %2685 = load atomic i32, i32* %2684 acquire, align 4
  %2686 = and i32 %2685, %2683
  %2687 = icmp eq i32 %2686, 0
  br i1 %2687, label %2744, label %2688

2688:                                             ; preds = %2679
  %2689 = load atomic i32, i32* %2628 monotonic, align 4
  br label %2690

2690:                                             ; preds = %2694, %2688
  %2691 = phi i32 [ %2689, %2688 ], [ %2697, %2694 ]
  %2692 = and i32 %2691, %2624
  %2693 = icmp eq i32 %2692, %2624
  br i1 %2693, label %2744, label %2694

2694:                                             ; preds = %2690
  %2695 = or i32 %2691, %2624
  %2696 = cmpxchg volatile i32* %2628, i32 %2691, i32 %2695 release monotonic
  %2697 = extractvalue { i32, i1 } %2696, 0
  %2698 = extractvalue { i32, i1 } %2696, 1
  br i1 %2698, label %2699, label %2690

2699:                                             ; preds = %2694
  %2700 = bitcast %"class.v8::internal::HeapObject"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2700) #12
  %2701 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %27, i64 0, i32 0, i32 0, i32 0
  store i64 %2426, i64* %2701, align 8
  %2702 = xor i64 %2618, -1
  %2703 = add i64 %2426, %2702
  %2704 = trunc i64 %2703 to i32
  %2705 = lshr i32 %2704, 2
  %2706 = and i32 %2705, 31
  %2707 = shl i32 1, %2706
  %2708 = lshr i64 %2703, 7
  %2709 = and i64 %2708, 33554431
  %2710 = getelementptr inbounds i32, i32* %2625, i64 %2709
  %2711 = load atomic i32, i32* %2710 acquire, align 4
  %2712 = and i32 %2711, %2707
  %2713 = icmp eq i32 %2712, 0
  br i1 %2713, label %2743, label %2714

2714:                                             ; preds = %2699
  %2715 = shl i32 %2707, 1
  %2716 = icmp eq i32 %2715, 0
  %2717 = getelementptr inbounds i32, i32* %2710, i64 1
  %2718 = select i1 %2716, i32 1, i32 %2715
  %2719 = select i1 %2716, i32* %2717, i32* %2710
  %2720 = load atomic i32, i32* %2719 monotonic, align 4
  br label %2721

2721:                                             ; preds = %2725, %2714
  %2722 = phi i32 [ %2720, %2714 ], [ %2728, %2725 ]
  %2723 = and i32 %2722, %2718
  %2724 = icmp eq i32 %2723, %2718
  br i1 %2724, label %2743, label %2725

2725:                                             ; preds = %2721
  %2726 = or i32 %2722, %2718
  %2727 = cmpxchg volatile i32* %2719, i32 %2722, i32 %2726 release monotonic
  %2728 = extractvalue { i32, i1 } %2727, 0
  %2729 = extractvalue { i32, i1 } %2727, 1
  br i1 %2729, label %2730, label %2721

2730:                                             ; preds = %2725
  %2731 = inttoptr i64 %2618 to %"class.v8::internal::MemoryChunk"*
  %2732 = load i64, i64* %2701, align 8
  %2733 = and i64 %2732, -4294967296
  %2734 = add i64 %2732, -1
  %2735 = inttoptr i64 %2734 to i32*
  %2736 = load atomic i32, i32* %2735 monotonic, align 4
  %2737 = zext i32 %2736 to i64
  %2738 = or i64 %2733, %2737
  %2739 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %27, i64 %2738) #12
  %2740 = sext i32 %2739 to i64
  %2741 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %2731, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %2742 = atomicrmw add i64* %2741, i64 %2740 seq_cst
  br label %2743

2743:                                             ; preds = %2721, %2730, %2699
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2700) #12
  br label %2744

2744:                                             ; preds = %2670, %2666, %2690, %2743, %2679, %2675, %2632, %2614
  %2745 = bitcast %"class.v8::internal::Heap"** %1843 to i64*
  %2746 = load i64, i64* %2745, align 8
  %2747 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %2748 = icmp eq i8 %2747, 0
  br i1 %2748, label %2851, label %2749

2749:                                             ; preds = %2744
  %2750 = add i64 %1, 7
  %2751 = inttoptr i64 %2750 to i16*
  %2752 = load atomic i16, i16* %2751 monotonic, align 2
  switch i16 %2752, label %2851 [
    i16 1085, label %2753
    i16 1057, label %2753
  ]

2753:                                             ; preds = %2749, %2749
  %2754 = bitcast %"class.v8::internal::HeapObject"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2754) #12
  %2755 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %28, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %2755, align 8
  %2756 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %28, i64 %1) #12
  %2757 = sext i32 %2756 to i64
  %2758 = add i64 %1845, %2757
  %2759 = add i64 %2758, 4
  %2760 = and i64 %2759, -262144
  %2761 = inttoptr i64 %2760 to %"class.v8::internal::Page"*
  %2762 = icmp eq %"class.v8::internal::Page"* %1847, %2761
  br i1 %2762, label %2763, label %2793

2763:                                             ; preds = %2753
  %2764 = add i64 %2757, %3
  %2765 = add i64 %2746, -41416
  %2766 = inttoptr i64 %2765 to %"class.v8::internal::Isolate"*
  %2767 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %2766, i64 0, i32 0, i32 7, i32 0, i64 534
  %2768 = load i64, i64* %2767, align 8
  %2769 = inttoptr i64 %2758 to i32*
  %2770 = load atomic i32, i32* %2769 monotonic, align 4
  %2771 = trunc i64 %2768 to i32
  %2772 = icmp eq i32 %2770, %2771
  br i1 %2772, label %2773, label %2793

2773:                                             ; preds = %2763
  %2774 = load i64, i64* %1852, align 8
  %2775 = and i64 %2774, 524288
  %2776 = icmp eq i64 %2775, 0
  br i1 %2776, label %2794, label %2777

2777:                                             ; preds = %2773
  %2778 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 8, i32 0
  %2779 = bitcast %"struct.std::__1::__atomic_base.69"* %2778 to i64*
  %2780 = load atomic i64, i64* %2779 seq_cst, align 64
  %2781 = inttoptr i64 %2780 to %"class.v8::internal::SemiSpace"*
  %2782 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %2781, i64 0, i32 5
  %2783 = load i64, i64* %2782, align 8
  %2784 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %2785 = load i64, i64* %2784, align 8
  %2786 = icmp ugt i64 %2785, %2783
  br i1 %2786, label %2793, label %2787

2787:                                             ; preds = %2777
  %2788 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %2789 = load i64, i64* %2788, align 32
  %2790 = icmp ule i64 %2789, %2783
  %2791 = icmp ult i64 %1845, %2783
  %2792 = or i1 %2791, %2790
  br i1 %2792, label %2793, label %2794

2793:                                             ; preds = %2787, %2777, %2763, %2753
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2754) #12
  br label %2851

2794:                                             ; preds = %2787, %2773
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2754) #12
  %2795 = trunc i64 %2764 to i32
  %2796 = icmp eq i32 %2795, 0
  br i1 %2796, label %2851, label %2797

2797:                                             ; preds = %2794
  %2798 = and i64 %2764, -4294967296
  %2799 = add i64 %2764, 3
  %2800 = inttoptr i64 %2799 to i32*
  %2801 = load i32, i32* %2800, align 4
  %2802 = zext i32 %2801 to i64
  %2803 = or i64 %2798, %2802
  %2804 = bitcast %"class.v8::internal::AllocationSite"* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2804) #12
  %2805 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %31, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %2803, i64* %2805, align 8
  %2806 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %2807 = bitcast %"class.std::__1::tuple"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %2807) #12
  %2808 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %29, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %31, %"class.v8::internal::AllocationSite"** %2808, align 8
  %2809 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %30, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %2809) #12
  %2810 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %2806, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %31, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %29, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %30) #12
  %2811 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %2810, 0
  %2812 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %2811, i64 3
  %2813 = bitcast %"struct.std::__1::__hash_node_base.518"* %2812 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %2809) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2807) #12
  %2814 = load i64, i64* %2813, align 8
  %2815 = add i64 %2814, 1
  store i64 %2815, i64* %2813, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %2804) #12
  br label %2851

2816:                                             ; preds = %2603
  %2817 = load i64, i64* %2400, align 8
  %2818 = icmp ne i64 %2817, 0
  %2819 = sub i64 %2817, %2402
  %2820 = icmp eq i64 %2819, %2427
  %2821 = and i1 %2818, %2820
  br i1 %2821, label %2822, label %2823

2822:                                             ; preds = %2816
  store i64 %2427, i64* %2400, align 8
  br label %2827

2823:                                             ; preds = %2816
  %2824 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 0
  %2825 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %2824, align 8
  %2826 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %2825, i64 %2427, i32 %4, i32 1) #12
  br label %2827

2827:                                             ; preds = %2823, %2822
  %2828 = and i64 %3, -4294967296
  %2829 = load atomic i32, i32* %2605 acquire, align 4
  %2830 = zext i32 %2829 to i64
  %2831 = or i64 %2828, %2830
  %2832 = add i64 %2831, 1
  %2833 = inttoptr i64 %2 to i64*
  %2834 = load i64, i64* %2833, align 8
  %2835 = and i64 %2834, 2
  %2836 = or i64 %2832, %2835
  store i64 %2836, i64* %2833, align 8
  %2837 = and i64 %2832, 1
  %2838 = icmp ne i64 %2837, 0
  %2839 = trunc i64 %2836 to i32
  %2840 = icmp ne i32 %2839, 3
  %2841 = and i1 %2838, %2840
  br i1 %2841, label %2842, label %3452

2842:                                             ; preds = %2827
  %2843 = and i64 %2832, -262144
  %2844 = inttoptr i64 %2843 to %"class.v8::internal::BasicMemoryChunk"*
  %2845 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %2844, i64 0, i32 1
  %2846 = load i64, i64* %2845, align 8
  %2847 = lshr i64 %2846, 4
  %2848 = trunc i64 %2847 to i32
  %2849 = and i32 %2848, 1
  %2850 = xor i32 %2849, 1
  br label %3452

2851:                                             ; preds = %2797, %2794, %2793, %2749, %2744
  %2852 = inttoptr i64 %2 to i64*
  %2853 = load i64, i64* %2852, align 8
  %2854 = and i64 %2853, 2
  %2855 = or i64 %2854, %2426
  store i64 %2855, i64* %2852, align 8
  %2856 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 0
  %2857 = load %"class.v8::internal::Scavenger::PromotionList"*, %"class.v8::internal::Scavenger::PromotionList"** %2856, align 8
  %2858 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 3, i32 1
  %2859 = load i32, i32* %2858, align 8
  %2860 = sext i32 %2859 to i64
  %2861 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 0, i64 %2860, i32 0
  %2862 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2861, align 8
  %2863 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862, i64 0, i32 1
  %2864 = load i64, i64* %2863, align 8
  %2865 = icmp eq i64 %2864, 256
  br i1 %2865, label %2870, label %2866

2866:                                             ; preds = %2851
  %2867 = add i64 %2864, 1
  store i64 %2867, i64* %2863, align 8
  %2868 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862, i64 0, i32 2, i64 %2864, i32 0, i32 0, i32 0, i32 0
  store i64 %2426, i64* %2868, align 8
  %2869 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862, i64 0, i32 2, i64 %2864, i32 1
  br label %2915

2870:                                             ; preds = %2851
  %2871 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2871) #12
  %2872 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 1, i32 1
  %2873 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2872 to i64*
  %2874 = load i64, i64* %2873, align 8
  %2875 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862 to i64*
  store i64 %2874, i64* %2875, align 8
  %2876 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2862 to i64
  store atomic volatile i64 %2876, i64* %2873 monotonic, align 8
  %2877 = getelementptr inbounds %"class.v8::internal::Scavenger::PromotionList", %"class.v8::internal::Scavenger::PromotionList"* %2857, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %2878 = atomicrmw add i64* %2877, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2871) #12
  %2879 = call i8* @_Znwm(i64 4112) #17
  %2880 = getelementptr inbounds i8, i8* %2879, i64 8
  %2881 = bitcast i8* %2880 to i64*
  store i64 0, i64* %2881, align 8
  %2882 = getelementptr inbounds i8, i8* %2879, i64 16
  %2883 = bitcast i8* %2882 to %"struct.std::__1::pair.1282"*
  %2884 = getelementptr inbounds i8, i8* %2879, i64 4112
  %2885 = bitcast i8* %2884 to %"struct.std::__1::pair.1282"*
  br label %2886

2886:                                             ; preds = %2886, %2870
  %2887 = phi %"struct.std::__1::pair.1282"* [ %2883, %2870 ], [ %2904, %2886 ]
  %2888 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2888, align 8
  %2889 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 0, i32 1
  store i32 0, i32* %2889, align 8
  %2890 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2890, align 8
  %2891 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 1, i32 1
  store i32 0, i32* %2891, align 8
  %2892 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2892, align 8
  %2893 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 2, i32 1
  store i32 0, i32* %2893, align 8
  %2894 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2894, align 8
  %2895 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 3, i32 1
  store i32 0, i32* %2895, align 8
  %2896 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2896, align 8
  %2897 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 4, i32 1
  store i32 0, i32* %2897, align 8
  %2898 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2898, align 8
  %2899 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 5, i32 1
  store i32 0, i32* %2899, align 8
  %2900 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2900, align 8
  %2901 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 6, i32 1
  store i32 0, i32* %2901, align 8
  %2902 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %2902, align 8
  %2903 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 7, i32 1
  store i32 0, i32* %2903, align 8
  %2904 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %2887, i64 8
  %2905 = icmp eq %"struct.std::__1::pair.1282"* %2904, %2885
  br i1 %2905, label %2906, label %2886

2906:                                             ; preds = %2886
  %2907 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %2861 to i8**
  store i8* %2879, i8** %2907, align 8
  %2908 = bitcast i8* %2879 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %2909 = load i64, i64* %2881, align 8
  %2910 = icmp eq i64 %2909, 256
  br i1 %2910, label %2917, label %2911

2911:                                             ; preds = %2906
  %2912 = add i64 %2909, 1
  store i64 %2912, i64* %2881, align 8
  %2913 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2908, i64 0, i32 2, i64 %2909, i32 0, i32 0, i32 0, i32 0
  store i64 %2426, i64* %2913, align 8
  %2914 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %2908, i64 0, i32 2, i64 %2909, i32 1
  br label %2915

2915:                                             ; preds = %2866, %2911
  %2916 = phi i32* [ %2914, %2911 ], [ %2869, %2866 ]
  store i32 %4, i32* %2916, align 8
  br label %2917

2917:                                             ; preds = %2915, %2906
  %2918 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 8
  %2919 = load i64, i64* %2918, align 8
  %2920 = add i64 %2919, %2402
  store i64 %2920, i64* %2918, align 8
  br label %3452

2921:                                             ; preds = %2421
  %2922 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9
  %2923 = icmp sgt i32 %4, 8192
  br i1 %2923, label %2924, label %2948

2924:                                             ; preds = %2921
  %2925 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 1
  %2926 = load %"class.v8::internal::NewSpace"*, %"class.v8::internal::NewSpace"** %2925, align 8
  %2927 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 1
  tail call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %2927) #12
  %2928 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 0
  %2929 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 0, i32 1, i32 1
  %2930 = load i64, i64* %2929, align 8
  %2931 = getelementptr inbounds %"class.v8::internal::NewSpace", %"class.v8::internal::NewSpace"* %2926, i64 0, i32 0, i32 1, i32 2
  %2932 = load i64, i64* %2931, align 8
  %2933 = add i64 %2930, %2402
  %2934 = icmp ult i64 %2932, %2933
  br i1 %2934, label %2944, label %2935

2935:                                             ; preds = %2924
  %2936 = add i64 %2930, 1
  store i64 %2933, i64* %2929, align 8
  %2937 = load i8, i8* @_ZN2v88internal30FLAG_trace_allocations_originsE, align 1, !range !2
  %2938 = icmp eq i8 %2937, 0
  br i1 %2938, label %2940, label %2939

2939:                                             ; preds = %2935
  tail call void @_ZN2v88internal19SpaceWithLinearArea23UpdateAllocationOriginsENS0_16AllocationOriginE(%"class.v8::internal::SpaceWithLinearArea"* %2928, i32 2) #12
  br label %2940

2940:                                             ; preds = %2939, %2935
  %2941 = and i64 %2936, 1
  %2942 = icmp eq i64 %2941, 0
  br i1 %2942, label %2943, label %2946, !prof !29

2943:                                             ; preds = %2940
  tail call void (i8*, ...) @_Z8V8_FatalPKcz(i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.10, i64 0, i64 0), i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.15, i64 0, i64 0)) #16
  unreachable

2944:                                             ; preds = %2924
  %2945 = tail call i64 @_ZN2v88internal8NewSpace15AllocateRawSlowEiNS0_19AllocationAlignmentENS0_16AllocationOriginE(%"class.v8::internal::NewSpace"* %2926, i32 %4, i32 0, i32 2) #12
  br label %2946

2946:                                             ; preds = %2944, %2940
  %2947 = phi i64 [ %2945, %2944 ], [ %2936, %2940 ]
  tail call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %2927) #12
  br label %2950

2948:                                             ; preds = %2921
  %2949 = tail call i64 @_ZN2v88internal19EvacuationAllocator13AllocateInLABEiNS0_19AllocationAlignmentE(%"class.v8::internal::EvacuationAllocator"* %2922, i32 %4, i32 0) #12
  br label %2950

2950:                                             ; preds = %2948, %2946
  %2951 = phi i64 [ %2947, %2946 ], [ %2949, %2948 ]
  %2952 = and i64 %2951, 1
  %2953 = icmp eq i64 %2952, 0
  br i1 %2953, label %3450, label %2954

2954:                                             ; preds = %2950
  %2955 = add i64 %2951, -1
  %2956 = inttoptr i64 %2955 to i32*
  %2957 = trunc i64 %1 to i32
  store atomic volatile i32 %2957, i32* %2956 monotonic, align 4
  %2958 = add i64 %2951, 3
  %2959 = add i64 %3, 3
  %2960 = add nsw i32 %4, -4
  %2961 = sdiv i32 %2960, 4
  %2962 = sext i32 %2961 to i64
  %2963 = inttoptr i64 %2958 to i32*
  %2964 = inttoptr i64 %2958 to i8*
  %2965 = inttoptr i64 %2959 to i32*
  %2966 = inttoptr i64 %2959 to i8*
  %2967 = inttoptr i64 %2958 to i8*
  %2968 = add i32 %4, -1
  %2969 = icmp ult i32 %2968, 7
  br i1 %2969, label %3131, label %2970

2970:                                             ; preds = %2954
  %2971 = icmp ult i32 %2961, 16
  br i1 %2971, label %2972, label %3117

2972:                                             ; preds = %2970
  %2973 = icmp ult i32 %2961, 8
  br i1 %2973, label %3064, label %2974

2974:                                             ; preds = %2972
  %2975 = getelementptr i32, i32* %2963, i64 %2962
  %2976 = bitcast i32* %2975 to i8*
  %2977 = getelementptr i32, i32* %2965, i64 %2962
  %2978 = bitcast i32* %2977 to i8*
  %2979 = icmp ult i8* %2964, %2978
  %2980 = icmp ult i8* %2966, %2976
  %2981 = and i1 %2979, %2980
  br i1 %2981, label %3064, label %2982

2982:                                             ; preds = %2974
  %2983 = and i64 %2962, -8
  %2984 = getelementptr i32, i32* %2965, i64 %2983
  %2985 = sub nsw i64 %2962, %2983
  %2986 = getelementptr i32, i32* %2963, i64 %2983
  %2987 = add nsw i64 %2983, -8
  %2988 = lshr exact i64 %2987, 3
  %2989 = add nuw nsw i64 %2988, 1
  %2990 = and i64 %2989, 3
  %2991 = icmp ult i64 %2987, 24
  br i1 %2991, label %3043, label %2992

2992:                                             ; preds = %2982
  %2993 = sub nsw i64 %2989, %2990
  br label %2994

2994:                                             ; preds = %2994, %2992
  %2995 = phi i64 [ 0, %2992 ], [ %3040, %2994 ]
  %2996 = phi i64 [ %2993, %2992 ], [ %3041, %2994 ]
  %2997 = getelementptr i32, i32* %2965, i64 %2995
  %2998 = getelementptr i32, i32* %2963, i64 %2995
  %2999 = bitcast i32* %2997 to <4 x i32>*
  %3000 = load <4 x i32>, <4 x i32>* %2999, align 4, !alias.scope !303
  %3001 = getelementptr i32, i32* %2997, i64 4
  %3002 = bitcast i32* %3001 to <4 x i32>*
  %3003 = load <4 x i32>, <4 x i32>* %3002, align 4, !alias.scope !303
  %3004 = bitcast i32* %2998 to <4 x i32>*
  store <4 x i32> %3000, <4 x i32>* %3004, align 4, !alias.scope !306, !noalias !303
  %3005 = getelementptr i32, i32* %2998, i64 4
  %3006 = bitcast i32* %3005 to <4 x i32>*
  store <4 x i32> %3003, <4 x i32>* %3006, align 4, !alias.scope !306, !noalias !303
  %3007 = or i64 %2995, 8
  %3008 = getelementptr i32, i32* %2965, i64 %3007
  %3009 = getelementptr i32, i32* %2963, i64 %3007
  %3010 = bitcast i32* %3008 to <4 x i32>*
  %3011 = load <4 x i32>, <4 x i32>* %3010, align 4, !alias.scope !303
  %3012 = getelementptr i32, i32* %3008, i64 4
  %3013 = bitcast i32* %3012 to <4 x i32>*
  %3014 = load <4 x i32>, <4 x i32>* %3013, align 4, !alias.scope !303
  %3015 = bitcast i32* %3009 to <4 x i32>*
  store <4 x i32> %3011, <4 x i32>* %3015, align 4, !alias.scope !306, !noalias !303
  %3016 = getelementptr i32, i32* %3009, i64 4
  %3017 = bitcast i32* %3016 to <4 x i32>*
  store <4 x i32> %3014, <4 x i32>* %3017, align 4, !alias.scope !306, !noalias !303
  %3018 = or i64 %2995, 16
  %3019 = getelementptr i32, i32* %2965, i64 %3018
  %3020 = getelementptr i32, i32* %2963, i64 %3018
  %3021 = bitcast i32* %3019 to <4 x i32>*
  %3022 = load <4 x i32>, <4 x i32>* %3021, align 4, !alias.scope !303
  %3023 = getelementptr i32, i32* %3019, i64 4
  %3024 = bitcast i32* %3023 to <4 x i32>*
  %3025 = load <4 x i32>, <4 x i32>* %3024, align 4, !alias.scope !303
  %3026 = bitcast i32* %3020 to <4 x i32>*
  store <4 x i32> %3022, <4 x i32>* %3026, align 4, !alias.scope !306, !noalias !303
  %3027 = getelementptr i32, i32* %3020, i64 4
  %3028 = bitcast i32* %3027 to <4 x i32>*
  store <4 x i32> %3025, <4 x i32>* %3028, align 4, !alias.scope !306, !noalias !303
  %3029 = or i64 %2995, 24
  %3030 = getelementptr i32, i32* %2965, i64 %3029
  %3031 = getelementptr i32, i32* %2963, i64 %3029
  %3032 = bitcast i32* %3030 to <4 x i32>*
  %3033 = load <4 x i32>, <4 x i32>* %3032, align 4, !alias.scope !303
  %3034 = getelementptr i32, i32* %3030, i64 4
  %3035 = bitcast i32* %3034 to <4 x i32>*
  %3036 = load <4 x i32>, <4 x i32>* %3035, align 4, !alias.scope !303
  %3037 = bitcast i32* %3031 to <4 x i32>*
  store <4 x i32> %3033, <4 x i32>* %3037, align 4, !alias.scope !306, !noalias !303
  %3038 = getelementptr i32, i32* %3031, i64 4
  %3039 = bitcast i32* %3038 to <4 x i32>*
  store <4 x i32> %3036, <4 x i32>* %3039, align 4, !alias.scope !306, !noalias !303
  %3040 = add i64 %2995, 32
  %3041 = add i64 %2996, -4
  %3042 = icmp eq i64 %3041, 0
  br i1 %3042, label %3043, label %2994, !llvm.loop !308

3043:                                             ; preds = %2994, %2982
  %3044 = phi i64 [ 0, %2982 ], [ %3040, %2994 ]
  %3045 = icmp eq i64 %2990, 0
  br i1 %3045, label %3062, label %3046

3046:                                             ; preds = %3043, %3046
  %3047 = phi i64 [ %3059, %3046 ], [ %3044, %3043 ]
  %3048 = phi i64 [ %3060, %3046 ], [ %2990, %3043 ]
  %3049 = getelementptr i32, i32* %2965, i64 %3047
  %3050 = getelementptr i32, i32* %2963, i64 %3047
  %3051 = bitcast i32* %3049 to <4 x i32>*
  %3052 = load <4 x i32>, <4 x i32>* %3051, align 4, !alias.scope !303
  %3053 = getelementptr i32, i32* %3049, i64 4
  %3054 = bitcast i32* %3053 to <4 x i32>*
  %3055 = load <4 x i32>, <4 x i32>* %3054, align 4, !alias.scope !303
  %3056 = bitcast i32* %3050 to <4 x i32>*
  store <4 x i32> %3052, <4 x i32>* %3056, align 4, !alias.scope !306, !noalias !303
  %3057 = getelementptr i32, i32* %3050, i64 4
  %3058 = bitcast i32* %3057 to <4 x i32>*
  store <4 x i32> %3055, <4 x i32>* %3058, align 4, !alias.scope !306, !noalias !303
  %3059 = add i64 %3047, 8
  %3060 = add i64 %3048, -1
  %3061 = icmp eq i64 %3060, 0
  br i1 %3061, label %3062, label %3046, !llvm.loop !309

3062:                                             ; preds = %3046, %3043
  %3063 = icmp eq i64 %2983, %2962
  br i1 %3063, label %3131, label %3064

3064:                                             ; preds = %3062, %2974, %2972
  %3065 = phi i32* [ %2965, %2974 ], [ %2965, %2972 ], [ %2984, %3062 ]
  %3066 = phi i64 [ %2962, %2974 ], [ %2962, %2972 ], [ %2985, %3062 ]
  %3067 = phi i32* [ %2963, %2974 ], [ %2963, %2972 ], [ %2986, %3062 ]
  %3068 = add nsw i64 %3066, -1
  %3069 = and i64 %3066, 7
  %3070 = icmp eq i64 %3069, 0
  br i1 %3070, label %3082, label %3071

3071:                                             ; preds = %3064, %3071
  %3072 = phi i32* [ %3077, %3071 ], [ %3065, %3064 ]
  %3073 = phi i64 [ %3076, %3071 ], [ %3066, %3064 ]
  %3074 = phi i32* [ %3079, %3071 ], [ %3067, %3064 ]
  %3075 = phi i64 [ %3080, %3071 ], [ %3069, %3064 ]
  %3076 = add i64 %3073, -1
  %3077 = getelementptr inbounds i32, i32* %3072, i64 1
  %3078 = load i32, i32* %3072, align 4
  %3079 = getelementptr inbounds i32, i32* %3074, i64 1
  store i32 %3078, i32* %3074, align 4
  %3080 = add i64 %3075, -1
  %3081 = icmp eq i64 %3080, 0
  br i1 %3081, label %3082, label %3071, !llvm.loop !310

3082:                                             ; preds = %3071, %3064
  %3083 = phi i32* [ %3065, %3064 ], [ %3077, %3071 ]
  %3084 = phi i64 [ %3066, %3064 ], [ %3076, %3071 ]
  %3085 = phi i32* [ %3067, %3064 ], [ %3079, %3071 ]
  %3086 = icmp ult i64 %3068, 7
  br i1 %3086, label %3131, label %3087

3087:                                             ; preds = %3082, %3087
  %3088 = phi i32* [ %3113, %3087 ], [ %3083, %3082 ]
  %3089 = phi i64 [ %3112, %3087 ], [ %3084, %3082 ]
  %3090 = phi i32* [ %3115, %3087 ], [ %3085, %3082 ]
  %3091 = getelementptr inbounds i32, i32* %3088, i64 1
  %3092 = load i32, i32* %3088, align 4
  %3093 = getelementptr inbounds i32, i32* %3090, i64 1
  store i32 %3092, i32* %3090, align 4
  %3094 = getelementptr inbounds i32, i32* %3088, i64 2
  %3095 = load i32, i32* %3091, align 4
  %3096 = getelementptr inbounds i32, i32* %3090, i64 2
  store i32 %3095, i32* %3093, align 4
  %3097 = getelementptr inbounds i32, i32* %3088, i64 3
  %3098 = load i32, i32* %3094, align 4
  %3099 = getelementptr inbounds i32, i32* %3090, i64 3
  store i32 %3098, i32* %3096, align 4
  %3100 = getelementptr inbounds i32, i32* %3088, i64 4
  %3101 = load i32, i32* %3097, align 4
  %3102 = getelementptr inbounds i32, i32* %3090, i64 4
  store i32 %3101, i32* %3099, align 4
  %3103 = getelementptr inbounds i32, i32* %3088, i64 5
  %3104 = load i32, i32* %3100, align 4
  %3105 = getelementptr inbounds i32, i32* %3090, i64 5
  store i32 %3104, i32* %3102, align 4
  %3106 = getelementptr inbounds i32, i32* %3088, i64 6
  %3107 = load i32, i32* %3103, align 4
  %3108 = getelementptr inbounds i32, i32* %3090, i64 6
  store i32 %3107, i32* %3105, align 4
  %3109 = getelementptr inbounds i32, i32* %3088, i64 7
  %3110 = load i32, i32* %3106, align 4
  %3111 = getelementptr inbounds i32, i32* %3090, i64 7
  store i32 %3110, i32* %3108, align 4
  %3112 = add i64 %3089, -8
  %3113 = getelementptr inbounds i32, i32* %3088, i64 8
  %3114 = load i32, i32* %3109, align 4
  %3115 = getelementptr inbounds i32, i32* %3090, i64 8
  store i32 %3114, i32* %3111, align 4
  %3116 = icmp eq i64 %3112, 0
  br i1 %3116, label %3131, label %3087, !llvm.loop !311

3117:                                             ; preds = %2970
  %3118 = inttoptr i64 %2959 to i8*
  %3119 = shl nsw i64 %2962, 2
  %3120 = add nsw i64 %3119, -4
  %3121 = lshr exact i64 %3120, 2
  switch i64 %3121, label %3130 [
    i64 3, label %3129
    i64 1, label %3124
    i64 2, label %3128
    i64 0, label %3122
  ]

3122:                                             ; preds = %3117
  %3123 = load i32, i32* %2965, align 1
  store i32 %3123, i32* %2963, align 1
  br label %3131

3124:                                             ; preds = %3117
  %3125 = inttoptr i64 %2959 to i64*
  %3126 = inttoptr i64 %2958 to i64*
  %3127 = load i64, i64* %3125, align 1
  store i64 %3127, i64* %3126, align 1
  br label %3131

3128:                                             ; preds = %3117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2967, i8* align 1 %3118, i64 12, i1 false) #12
  br label %3131

3129:                                             ; preds = %3117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2967, i8* align 1 %3118, i64 16, i1 false) #12
  br label %3131

3130:                                             ; preds = %3117
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %2967, i8* align 1 %3118, i64 %3119, i1 false) #12
  br label %3131

3131:                                             ; preds = %3082, %3087, %3062, %3130, %3129, %3128, %3124, %3122, %2954
  %3132 = trunc i64 %2955 to i32
  %3133 = inttoptr i64 %1845 to i32*
  %3134 = cmpxchg volatile i32* %3133, i32 %2957, i32 %3132 release monotonic
  %3135 = extractvalue { i32, i1 } %3134, 1
  br i1 %3135, label %3136, label %3344

3136:                                             ; preds = %3131
  %3137 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 12
  %3138 = load i8, i8* %3137, align 8, !range !2
  %3139 = icmp eq i8 %3138, 0
  br i1 %3139, label %3142, label %3140, !prof !60

3140:                                             ; preds = %3136
  %3141 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap11OnMoveEventENS0_10HeapObjectES2_i(%"class.v8::internal::Heap"* %3141, i64 %2951, i64 %3, i32 %4) #12
  br label %3142

3142:                                             ; preds = %3140, %3136
  %3143 = load i8, i8* %39, align 1, !range !2
  %3144 = icmp eq i8 %3143, 0
  br i1 %3144, label %3272, label %3145

3145:                                             ; preds = %3142
  %3146 = and i64 %2951, -262144
  %3147 = or i64 %3146, 272
  %3148 = sub i64 %2951, %3146
  %3149 = trunc i64 %3148 to i32
  %3150 = lshr i32 %3149, 2
  %3151 = and i32 %3150, 31
  %3152 = shl i32 1, %3151
  %3153 = inttoptr i64 %3147 to i32*
  %3154 = lshr i64 %3148, 7
  %3155 = and i64 %3154, 33554431
  %3156 = getelementptr inbounds i32, i32* %3153, i64 %3155
  %3157 = load atomic i32, i32* %3156 acquire, align 4
  %3158 = and i32 %3157, %3152
  %3159 = icmp eq i32 %3158, 0
  br i1 %3159, label %3169, label %3160

3160:                                             ; preds = %3145
  %3161 = shl i32 %3152, 1
  %3162 = icmp eq i32 %3161, 0
  %3163 = getelementptr inbounds i32, i32* %3156, i64 1
  %3164 = select i1 %3162, i32 1, i32 %3161
  %3165 = select i1 %3162, i32* %3163, i32* %3156
  %3166 = load atomic i32, i32* %3165 acquire, align 4
  %3167 = and i32 %3166, %3164
  %3168 = icmp eq i32 %3167, 0
  br i1 %3168, label %3169, label %3272

3169:                                             ; preds = %3160, %3145
  %3170 = or i64 %1778, 272
  %3171 = sub i64 %3, %1778
  %3172 = trunc i64 %3171 to i32
  %3173 = lshr i32 %3172, 2
  %3174 = and i32 %3173, 31
  %3175 = shl i32 1, %3174
  %3176 = inttoptr i64 %3170 to i32*
  %3177 = lshr i64 %3171, 7
  %3178 = and i64 %3177, 33554431
  %3179 = getelementptr inbounds i32, i32* %3176, i64 %3178
  %3180 = load atomic i32, i32* %3179 acquire, align 4
  %3181 = and i32 %3180, %3175
  %3182 = icmp eq i32 %3181, 0
  br i1 %3182, label %3203, label %3183

3183:                                             ; preds = %3169
  %3184 = shl i32 %3175, 1
  %3185 = icmp eq i32 %3184, 0
  %3186 = getelementptr inbounds i32, i32* %3179, i64 1
  %3187 = select i1 %3185, i32 1, i32 %3184
  %3188 = select i1 %3185, i32* %3186, i32* %3179
  %3189 = load atomic i32, i32* %3188 acquire, align 4
  %3190 = and i32 %3189, %3187
  %3191 = icmp eq i32 %3190, 0
  br i1 %3191, label %3192, label %3203

3192:                                             ; preds = %3183
  %3193 = load atomic i32, i32* %3156 monotonic, align 4
  br label %3194

3194:                                             ; preds = %3198, %3192
  %3195 = phi i32 [ %3193, %3192 ], [ %3201, %3198 ]
  %3196 = and i32 %3195, %3152
  %3197 = icmp eq i32 %3196, %3152
  br i1 %3197, label %3272, label %3198

3198:                                             ; preds = %3194
  %3199 = or i32 %3195, %3152
  %3200 = cmpxchg volatile i32* %3156, i32 %3195, i32 %3199 release monotonic
  %3201 = extractvalue { i32, i1 } %3200, 0
  %3202 = extractvalue { i32, i1 } %3200, 1
  br i1 %3202, label %3272, label %3194

3203:                                             ; preds = %3183, %3169
  %3204 = load atomic i32, i32* %3179 acquire, align 4
  %3205 = and i32 %3204, %3175
  %3206 = icmp eq i32 %3205, 0
  br i1 %3206, label %3272, label %3207

3207:                                             ; preds = %3203
  %3208 = shl i32 %3175, 1
  %3209 = icmp eq i32 %3208, 0
  %3210 = getelementptr inbounds i32, i32* %3179, i64 1
  %3211 = select i1 %3209, i32 1, i32 %3208
  %3212 = select i1 %3209, i32* %3210, i32* %3179
  %3213 = load atomic i32, i32* %3212 acquire, align 4
  %3214 = and i32 %3213, %3211
  %3215 = icmp eq i32 %3214, 0
  br i1 %3215, label %3272, label %3216

3216:                                             ; preds = %3207
  %3217 = load atomic i32, i32* %3156 monotonic, align 4
  br label %3218

3218:                                             ; preds = %3222, %3216
  %3219 = phi i32 [ %3217, %3216 ], [ %3225, %3222 ]
  %3220 = and i32 %3219, %3152
  %3221 = icmp eq i32 %3220, %3152
  br i1 %3221, label %3272, label %3222

3222:                                             ; preds = %3218
  %3223 = or i32 %3219, %3152
  %3224 = cmpxchg volatile i32* %3156, i32 %3219, i32 %3223 release monotonic
  %3225 = extractvalue { i32, i1 } %3224, 0
  %3226 = extractvalue { i32, i1 } %3224, 1
  br i1 %3226, label %3227, label %3218

3227:                                             ; preds = %3222
  %3228 = bitcast %"class.v8::internal::HeapObject"* %22 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3228) #12
  %3229 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %22, i64 0, i32 0, i32 0, i32 0
  store i64 %2951, i64* %3229, align 8
  %3230 = xor i64 %3146, -1
  %3231 = add i64 %2951, %3230
  %3232 = trunc i64 %3231 to i32
  %3233 = lshr i32 %3232, 2
  %3234 = and i32 %3233, 31
  %3235 = shl i32 1, %3234
  %3236 = lshr i64 %3231, 7
  %3237 = and i64 %3236, 33554431
  %3238 = getelementptr inbounds i32, i32* %3153, i64 %3237
  %3239 = load atomic i32, i32* %3238 acquire, align 4
  %3240 = and i32 %3239, %3235
  %3241 = icmp eq i32 %3240, 0
  br i1 %3241, label %3271, label %3242

3242:                                             ; preds = %3227
  %3243 = shl i32 %3235, 1
  %3244 = icmp eq i32 %3243, 0
  %3245 = getelementptr inbounds i32, i32* %3238, i64 1
  %3246 = select i1 %3244, i32 1, i32 %3243
  %3247 = select i1 %3244, i32* %3245, i32* %3238
  %3248 = load atomic i32, i32* %3247 monotonic, align 4
  br label %3249

3249:                                             ; preds = %3253, %3242
  %3250 = phi i32 [ %3248, %3242 ], [ %3256, %3253 ]
  %3251 = and i32 %3250, %3246
  %3252 = icmp eq i32 %3251, %3246
  br i1 %3252, label %3271, label %3253

3253:                                             ; preds = %3249
  %3254 = or i32 %3250, %3246
  %3255 = cmpxchg volatile i32* %3247, i32 %3250, i32 %3254 release monotonic
  %3256 = extractvalue { i32, i1 } %3255, 0
  %3257 = extractvalue { i32, i1 } %3255, 1
  br i1 %3257, label %3258, label %3249

3258:                                             ; preds = %3253
  %3259 = inttoptr i64 %3146 to %"class.v8::internal::MemoryChunk"*
  %3260 = load i64, i64* %3229, align 8
  %3261 = and i64 %3260, -4294967296
  %3262 = add i64 %3260, -1
  %3263 = inttoptr i64 %3262 to i32*
  %3264 = load atomic i32, i32* %3263 monotonic, align 4
  %3265 = zext i32 %3264 to i64
  %3266 = or i64 %3261, %3265
  %3267 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %22, i64 %3266) #12
  %3268 = sext i32 %3267 to i64
  %3269 = getelementptr inbounds %"class.v8::internal::MemoryChunk", %"class.v8::internal::MemoryChunk"* %3259, i64 0, i32 3, i32 0, i32 0, i32 0, i32 0, i32 0
  %3270 = atomicrmw add i64* %3269, i64 %3268 seq_cst
  br label %3271

3271:                                             ; preds = %3249, %3258, %3227
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3228) #12
  br label %3272

3272:                                             ; preds = %3198, %3194, %3218, %3271, %3207, %3203, %3160, %3142
  %3273 = bitcast %"class.v8::internal::Heap"** %1843 to i64*
  %3274 = load i64, i64* %3273, align 8
  %3275 = load i8, i8* @_ZN2v88internal32FLAG_allocation_site_pretenuringE, align 1, !range !2
  %3276 = icmp eq i8 %3275, 0
  br i1 %3276, label %3380, label %3277

3277:                                             ; preds = %3272
  %3278 = add i64 %1, 7
  %3279 = inttoptr i64 %3278 to i16*
  %3280 = load atomic i16, i16* %3279 monotonic, align 2
  switch i16 %3280, label %3380 [
    i16 1085, label %3281
    i16 1057, label %3281
  ]

3281:                                             ; preds = %3277, %3277
  %3282 = bitcast %"class.v8::internal::HeapObject"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3282) #12
  %3283 = getelementptr inbounds %"class.v8::internal::HeapObject", %"class.v8::internal::HeapObject"* %23, i64 0, i32 0, i32 0, i32 0
  store i64 %3, i64* %3283, align 8
  %3284 = call i32 @_ZNK2v88internal10HeapObject11SizeFromMapENS0_3MapE(%"class.v8::internal::HeapObject"* nonnull %23, i64 %1) #12
  %3285 = sext i32 %3284 to i64
  %3286 = add i64 %1845, %3285
  %3287 = add i64 %3286, 4
  %3288 = and i64 %3287, -262144
  %3289 = inttoptr i64 %3288 to %"class.v8::internal::Page"*
  %3290 = icmp eq %"class.v8::internal::Page"* %1847, %3289
  br i1 %3290, label %3291, label %3321

3291:                                             ; preds = %3281
  %3292 = add i64 %3285, %3
  %3293 = add i64 %3274, -41416
  %3294 = inttoptr i64 %3293 to %"class.v8::internal::Isolate"*
  %3295 = getelementptr inbounds %"class.v8::internal::Isolate", %"class.v8::internal::Isolate"* %3294, i64 0, i32 0, i32 7, i32 0, i64 534
  %3296 = load i64, i64* %3295, align 8
  %3297 = inttoptr i64 %3286 to i32*
  %3298 = load atomic i32, i32* %3297 monotonic, align 4
  %3299 = trunc i64 %3296 to i32
  %3300 = icmp eq i32 %3298, %3299
  br i1 %3300, label %3301, label %3321

3301:                                             ; preds = %3291
  %3302 = load i64, i64* %1852, align 8
  %3303 = and i64 %3302, 524288
  %3304 = icmp eq i64 %3303, 0
  br i1 %3304, label %3322, label %3305

3305:                                             ; preds = %3301
  %3306 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 8, i32 0
  %3307 = bitcast %"struct.std::__1::__atomic_base.69"* %3306 to i64*
  %3308 = load atomic i64, i64* %3307 seq_cst, align 64
  %3309 = inttoptr i64 %3308 to %"class.v8::internal::SemiSpace"*
  %3310 = getelementptr inbounds %"class.v8::internal::SemiSpace", %"class.v8::internal::SemiSpace"* %3309, i64 0, i32 5
  %3311 = load i64, i64* %3310, align 8
  %3312 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 3
  %3313 = load i64, i64* %3312, align 8
  %3314 = icmp ugt i64 %3313, %3311
  br i1 %3314, label %3321, label %3315

3315:                                             ; preds = %3305
  %3316 = getelementptr inbounds %"class.v8::internal::Page", %"class.v8::internal::Page"* %1847, i64 0, i32 0, i32 0, i32 4
  %3317 = load i64, i64* %3316, align 32
  %3318 = icmp ule i64 %3317, %3311
  %3319 = icmp ult i64 %1845, %3311
  %3320 = or i1 %3319, %3318
  br i1 %3320, label %3321, label %3322

3321:                                             ; preds = %3315, %3305, %3291, %3281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3282) #12
  br label %3380

3322:                                             ; preds = %3315, %3301
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3282) #12
  %3323 = trunc i64 %3292 to i32
  %3324 = icmp eq i32 %3323, 0
  br i1 %3324, label %3380, label %3325

3325:                                             ; preds = %3322
  %3326 = and i64 %3292, -4294967296
  %3327 = add i64 %3292, 3
  %3328 = inttoptr i64 %3327 to i32*
  %3329 = load i32, i32* %3328, align 4
  %3330 = zext i32 %3329 to i64
  %3331 = or i64 %3326, %3330
  %3332 = bitcast %"class.v8::internal::AllocationSite"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3332) #12
  %3333 = getelementptr inbounds %"class.v8::internal::AllocationSite", %"class.v8::internal::AllocationSite"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i64 %3331, i64* %3333, align 8
  %3334 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 6, i32 0
  %3335 = bitcast %"class.std::__1::tuple"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3335) #12
  %3336 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %24, i64 0, i32 0, i32 0, i32 0
  store %"class.v8::internal::AllocationSite"* %26, %"class.v8::internal::AllocationSite"** %3336, align 8
  %3337 = getelementptr inbounds %"class.std::__1::tuple.1327", %"class.std::__1::tuple.1327"* %25, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3337) #12
  %3338 = call { %"struct.std::__1::__hash_node_base.518"*, i8 } @_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE25__emplace_unique_key_argsIS4_JRKNS_21piecewise_construct_tENS_5tupleIJOS4_EEENSL_IJEEEEEENS_4pairINS_15__hash_iteratorIPNS_11__hash_nodeIS5_PvEEEEbEERKT_DpOT0_(%"class.std::__1::__hash_table.514"* %3334, %"class.v8::internal::AllocationSite"* nonnull dereferenceable(8) %26, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %24, %"class.std::__1::tuple.1327"* nonnull dereferenceable(1) %25) #12
  %3339 = extractvalue { %"struct.std::__1::__hash_node_base.518"*, i8 } %3338, 0
  %3340 = getelementptr inbounds %"struct.std::__1::__hash_node_base.518", %"struct.std::__1::__hash_node_base.518"* %3339, i64 3
  %3341 = bitcast %"struct.std::__1::__hash_node_base.518"* %3340 to i64*
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3337) #12
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3335) #12
  %3342 = load i64, i64* %3341, align 8
  %3343 = add i64 %3342, 1
  store i64 %3343, i64* %3341, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3332) #12
  br label %3380

3344:                                             ; preds = %3131
  %3345 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 9, i32 3, i32 1, i32 1
  %3346 = load i64, i64* %3345, align 8
  %3347 = icmp ne i64 %3346, 0
  %3348 = sub i64 %3346, %2402
  %3349 = icmp eq i64 %3348, %2955
  %3350 = and i1 %3347, %3349
  br i1 %3350, label %3351, label %3352

3351:                                             ; preds = %3344
  store i64 %2955, i64* %3345, align 8
  br label %3356

3352:                                             ; preds = %3344
  %3353 = getelementptr inbounds %"class.v8::internal::EvacuationAllocator", %"class.v8::internal::EvacuationAllocator"* %2922, i64 0, i32 0
  %3354 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %3353, align 8
  %3355 = tail call i64 @_ZN2v88internal4Heap20CreateFillerObjectAtEmiNS0_18ClearRecordedSlotsE(%"class.v8::internal::Heap"* %3354, i64 %2955, i32 %4, i32 1) #12
  br label %3356

3356:                                             ; preds = %3352, %3351
  %3357 = and i64 %3, -4294967296
  %3358 = load atomic i32, i32* %3133 acquire, align 4
  %3359 = zext i32 %3358 to i64
  %3360 = or i64 %3357, %3359
  %3361 = add i64 %3360, 1
  %3362 = inttoptr i64 %2 to i64*
  %3363 = load i64, i64* %3362, align 8
  %3364 = and i64 %3363, 2
  %3365 = or i64 %3361, %3364
  store i64 %3365, i64* %3362, align 8
  %3366 = and i64 %3361, 1
  %3367 = icmp ne i64 %3366, 0
  %3368 = trunc i64 %3365 to i32
  %3369 = icmp ne i32 %3368, 3
  %3370 = and i1 %3367, %3369
  br i1 %3370, label %3371, label %3452

3371:                                             ; preds = %3356
  %3372 = and i64 %3361, -262144
  %3373 = inttoptr i64 %3372 to %"class.v8::internal::BasicMemoryChunk"*
  %3374 = getelementptr inbounds %"class.v8::internal::BasicMemoryChunk", %"class.v8::internal::BasicMemoryChunk"* %3373, i64 0, i32 1
  %3375 = load i64, i64* %3374, align 8
  %3376 = lshr i64 %3375, 4
  %3377 = trunc i64 %3376 to i32
  %3378 = and i32 %3377, 1
  %3379 = xor i32 %3378, 1
  br label %3452

3380:                                             ; preds = %3325, %3322, %3321, %3277, %3272
  %3381 = inttoptr i64 %2 to i64*
  %3382 = load i64, i64* %3381, align 8
  %3383 = and i64 %3382, 2
  %3384 = or i64 %3383, %2951
  store i64 %3384, i64* %3381, align 8
  %3385 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 0
  %3386 = load %"class.v8::internal::Worklist.1179"*, %"class.v8::internal::Worklist.1179"** %3385, align 8
  %3387 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 4, i32 1
  %3388 = load i32, i32* %3387, align 8
  %3389 = sext i32 %3388 to i64
  %3390 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 0, i64 %3389, i32 0
  %3391 = load %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*, %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %3390, align 8
  %3392 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391, i64 0, i32 1
  %3393 = load i64, i64* %3392, align 8
  %3394 = icmp eq i64 %3393, 256
  br i1 %3394, label %3399, label %3395

3395:                                             ; preds = %3380
  %3396 = add i64 %3393, 1
  store i64 %3396, i64* %3392, align 8
  %3397 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391, i64 0, i32 2, i64 %3393, i32 0, i32 0, i32 0, i32 0
  store i64 %2951, i64* %3397, align 8
  %3398 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391, i64 0, i32 2, i64 %3393, i32 1
  br label %3444

3399:                                             ; preds = %3380
  %3400 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 1, i32 0
  call void @_ZN2v84base5Mutex4LockEv(%"class.v8::base::Mutex"* %3400) #12
  %3401 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 1, i32 1
  %3402 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %3401 to i64*
  %3403 = load i64, i64* %3402, align 8
  %3404 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391 to i64*
  store i64 %3403, i64* %3404, align 8
  %3405 = ptrtoint %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3391 to i64
  store atomic volatile i64 %3405, i64* %3402 monotonic, align 8
  %3406 = getelementptr inbounds %"class.v8::internal::Worklist.1179", %"class.v8::internal::Worklist.1179"* %3386, i64 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %3407 = atomicrmw add i64* %3406, i64 1 monotonic
  call void @_ZN2v84base5Mutex6UnlockEv(%"class.v8::base::Mutex"* %3400) #12
  %3408 = call i8* @_Znwm(i64 4112) #17
  %3409 = getelementptr inbounds i8, i8* %3408, i64 8
  %3410 = bitcast i8* %3409 to i64*
  store i64 0, i64* %3410, align 8
  %3411 = getelementptr inbounds i8, i8* %3408, i64 16
  %3412 = bitcast i8* %3411 to %"struct.std::__1::pair.1282"*
  %3413 = getelementptr inbounds i8, i8* %3408, i64 4112
  %3414 = bitcast i8* %3413 to %"struct.std::__1::pair.1282"*
  br label %3415

3415:                                             ; preds = %3415, %3399
  %3416 = phi %"struct.std::__1::pair.1282"* [ %3412, %3399 ], [ %3433, %3415 ]
  %3417 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 0, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3417, align 8
  %3418 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 0, i32 1
  store i32 0, i32* %3418, align 8
  %3419 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 1, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3419, align 8
  %3420 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 1, i32 1
  store i32 0, i32* %3420, align 8
  %3421 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 2, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3421, align 8
  %3422 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 2, i32 1
  store i32 0, i32* %3422, align 8
  %3423 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 3, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3423, align 8
  %3424 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 3, i32 1
  store i32 0, i32* %3424, align 8
  %3425 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 4, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3425, align 8
  %3426 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 4, i32 1
  store i32 0, i32* %3426, align 8
  %3427 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 5, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3427, align 8
  %3428 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 5, i32 1
  store i32 0, i32* %3428, align 8
  %3429 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 6, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3429, align 8
  %3430 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 6, i32 1
  store i32 0, i32* %3430, align 8
  %3431 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 7, i32 0, i32 0, i32 0, i32 0
  store i64 0, i64* %3431, align 8
  %3432 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 7, i32 1
  store i32 0, i32* %3432, align 8
  %3433 = getelementptr inbounds %"struct.std::__1::pair.1282", %"struct.std::__1::pair.1282"* %3416, i64 8
  %3434 = icmp eq %"struct.std::__1::pair.1282"* %3433, %3414
  br i1 %3434, label %3435, label %3415

3435:                                             ; preds = %3415
  %3436 = bitcast %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"** %3390 to i8**
  store i8* %3408, i8** %3436, align 8
  %3437 = bitcast i8* %3408 to %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"*
  %3438 = load i64, i64* %3410, align 8
  %3439 = icmp eq i64 %3438, 256
  br i1 %3439, label %3446, label %3440

3440:                                             ; preds = %3435
  %3441 = add i64 %3438, 1
  store i64 %3441, i64* %3410, align 8
  %3442 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3437, i64 0, i32 2, i64 %3438, i32 0, i32 0, i32 0, i32 0
  store i64 %2951, i64* %3442, align 8
  %3443 = getelementptr inbounds %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment", %"class.v8::internal::Worklist<std::__1::pair<v8::internal::HeapObject, int>, 256>::Segment"* %3437, i64 0, i32 2, i64 %3438, i32 1
  br label %3444

3444:                                             ; preds = %3395, %3440
  %3445 = phi i32* [ %3443, %3440 ], [ %3398, %3395 ]
  store i32 %4, i32* %3445, align 8
  br label %3446

3446:                                             ; preds = %3444, %3435
  %3447 = getelementptr inbounds %"class.v8::internal::Scavenger", %"class.v8::internal::Scavenger"* %0, i64 0, i32 7
  %3448 = load i64, i64* %3447, align 8
  %3449 = add i64 %3448, %2402
  store i64 %3449, i64* %3447, align 8
  br label %3452

3450:                                             ; preds = %2950
  %3451 = load %"class.v8::internal::Heap"*, %"class.v8::internal::Heap"** %1843, align 8
  tail call void @_ZN2v88internal4Heap23FatalProcessOutOfMemoryEPKc(%"class.v8::internal::Heap"* %3451, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.13, i64 0, i64 0)) #16
  unreachable

3452:                                             ; preds = %3446, %3371, %3356, %2917, %2842, %2827, %2393, %2318, %2303, %1820, %1815, %1787, %1775
  %3453 = phi i32 [ %1776, %1775 ], [ 0, %1787 ], [ 0, %1815 ], [ 0, %1820 ], [ 1, %2303 ], [ %2326, %2318 ], [ 0, %2393 ], [ 1, %2827 ], [ %2850, %2842 ], [ 1, %2917 ], [ 1, %3356 ], [ %3379, %3371 ], [ 0, %3446 ]
  ret i32 %3453
}

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.ctpop.i64(i64) #14

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { alwaysinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #12 = { nounwind }
attributes #13 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { nounwind readnone speculatable }
attributes #15 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { noreturn nounwind }
attributes #17 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!4, !6, !8, !10, !12, !14, !16, !18, !20, !22, !24}
!4 = distinct !{!4, !5, !"_ZN2v88internal45TqRuntimeFieldSliceScopeInfoContextLocalInfosENS0_9ScopeInfoE: argument 0"}
!5 = distinct !{!5, !"_ZN2v88internal45TqRuntimeFieldSliceScopeInfoContextLocalInfosENS0_9ScopeInfoE"}
!6 = distinct !{!6, !7, !"_ZN2v88internal50TqRuntimeFieldSliceScopeInfoSavedClassVariableInfoENS0_9ScopeInfoE: argument 0"}
!7 = distinct !{!7, !"_ZN2v88internal50TqRuntimeFieldSliceScopeInfoSavedClassVariableInfoENS0_9ScopeInfoE"}
!8 = distinct !{!8, !9, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoReceiverInfoENS0_9ScopeInfoE: argument 0"}
!9 = distinct !{!9, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoReceiverInfoENS0_9ScopeInfoE"}
!10 = distinct !{!10, !11, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoFunctionVariableInfoENS0_9ScopeInfoE: argument 0"}
!11 = distinct !{!11, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoFunctionVariableInfoENS0_9ScopeInfoE"}
!12 = distinct !{!12, !13, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoInferredFunctionNameENS0_9ScopeInfoE: argument 0"}
!13 = distinct !{!13, !"_ZN2v88internal48TqRuntimeFieldSliceScopeInfoInferredFunctionNameENS0_9ScopeInfoE"}
!14 = distinct !{!14, !15, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoPositionInfoENS0_9ScopeInfoE: argument 0"}
!15 = distinct !{!15, !"_ZN2v88internal40TqRuntimeFieldSliceScopeInfoPositionInfoENS0_9ScopeInfoE"}
!16 = distinct !{!16, !17, !"_ZN2v88internal42TqRuntimeFieldSliceScopeInfoOuterScopeInfoENS0_9ScopeInfoE: argument 0"}
!17 = distinct !{!17, !"_ZN2v88internal42TqRuntimeFieldSliceScopeInfoOuterScopeInfoENS0_9ScopeInfoE"}
!18 = distinct !{!18, !19, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoLocalsBlockListENS0_9ScopeInfoE: argument 0"}
!19 = distinct !{!19, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoLocalsBlockListENS0_9ScopeInfoE"}
!20 = distinct !{!20, !21, !"_ZN2v88internal38TqRuntimeFieldSliceScopeInfoModuleInfoENS0_9ScopeInfoE: argument 0"}
!21 = distinct !{!21, !"_ZN2v88internal38TqRuntimeFieldSliceScopeInfoModuleInfoENS0_9ScopeInfoE"}
!22 = distinct !{!22, !23, !"_ZN2v88internal47TqRuntimeFieldSliceScopeInfoModuleVariableCountENS0_9ScopeInfoE: argument 0"}
!23 = distinct !{!23, !"_ZN2v88internal47TqRuntimeFieldSliceScopeInfoModuleVariableCountENS0_9ScopeInfoE"}
!24 = distinct !{!24, !25, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoModuleVariablesENS0_9ScopeInfoE: argument 0"}
!25 = distinct !{!25, !"_ZN2v88internal43TqRuntimeFieldSliceScopeInfoModuleVariablesENS0_9ScopeInfoE"}
!26 = !{!14, !16, !18, !20, !22, !24}
!27 = !{!24}
!28 = !{i32 0, i32 33}
!29 = !{!"branch_weights", i32 1, i32 2000}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN2v88internal10PagedSpace5beginEv: argument 0"}
!32 = distinct !{!32, !"_ZN2v88internal10PagedSpace5beginEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN2v88internal10PagedSpace5beginEv: argument 0"}
!35 = distinct !{!35, !"_ZN2v88internal10PagedSpace5beginEv"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN2v88internal10PagedSpace5beginEv: argument 0"}
!38 = distinct !{!38, !"_ZN2v88internal10PagedSpace5beginEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZN2v88internal16LargeObjectSpace5beginEv: argument 0"}
!41 = distinct !{!41, !"_ZN2v88internal16LargeObjectSpace5beginEv"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN2v88internal16LargeObjectSpace5beginEv: argument 0"}
!44 = distinct !{!44, !"_ZN2v88internal16LargeObjectSpace5beginEv"}
!45 = !{!46}
!46 = distinct !{!46, !47, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi: argument 0"}
!47 = distinct !{!47, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi"}
!48 = !{!49}
!49 = distinct !{!49, !50, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi: argument 0"}
!50 = distinct !{!50, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi"}
!51 = !{!52}
!52 = distinct !{!52, !53, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi: argument 0"}
!53 = distinct !{!53, !"_ZN2v88internal16PageIteratorImplINS0_4PageEEppEi"}
!54 = !{!55}
!55 = distinct !{!55, !56, !"_ZN2v88internal16PageIteratorImplINS0_9LargePageEEppEi: argument 0"}
!56 = distinct !{!56, !"_ZN2v88internal16PageIteratorImplINS0_9LargePageEEppEi"}
!57 = !{!58}
!58 = distinct !{!58, !59, !"_ZN2v88internal16PageIteratorImplINS0_9LargePageEEppEi: argument 0"}
!59 = distinct !{!59, !"_ZN2v88internal16PageIteratorImplINS0_9LargePageEEppEi"}
!60 = !{!"branch_weights", i32 2000, i32 1}
!61 = distinct !{!61, !62}
!62 = !{!"llvm.loop.unroll.disable"}
!63 = !{!"branch_weights", i32 1, i32 1048575}
!64 = distinct !{!64, !62}
!65 = distinct !{!65, !62}
!66 = distinct !{!66, !62}
!67 = !{!"branch_weights", i32 2146410443, i32 1073205}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN2v88internal21LocalAllocationBuffer13InvalidBufferEv: argument 0"}
!70 = distinct !{!70, !"_ZN2v88internal21LocalAllocationBuffer13InvalidBufferEv"}
!71 = !{!72}
!72 = distinct !{!72, !73}
!73 = distinct !{!73, !"LVerDomain"}
!74 = !{!75}
!75 = distinct !{!75, !73}
!76 = distinct !{!76, !77}
!77 = !{!"llvm.loop.isvectorized", i32 1}
!78 = distinct !{!78, !62}
!79 = distinct !{!79, !62}
!80 = distinct !{!80, !77}
!81 = !{!82}
!82 = distinct !{!82, !83}
!83 = distinct !{!83, !"LVerDomain"}
!84 = !{!85}
!85 = distinct !{!85, !83}
!86 = distinct !{!86, !77}
!87 = distinct !{!87, !62}
!88 = distinct !{!88, !62}
!89 = distinct !{!89, !77}
!90 = !{!91}
!91 = distinct !{!91, !92}
!92 = distinct !{!92, !"LVerDomain"}
!93 = !{!94}
!94 = distinct !{!94, !92}
!95 = distinct !{!95, !77}
!96 = distinct !{!96, !62}
!97 = distinct !{!97, !62}
!98 = distinct !{!98, !77}
!99 = !{!100}
!100 = distinct !{!100, !101}
!101 = distinct !{!101, !"LVerDomain"}
!102 = !{!103}
!103 = distinct !{!103, !101}
!104 = distinct !{!104, !77}
!105 = distinct !{!105, !62}
!106 = distinct !{!106, !62}
!107 = distinct !{!107, !77}
!108 = !{!109}
!109 = distinct !{!109, !110}
!110 = distinct !{!110, !"LVerDomain"}
!111 = !{!112}
!112 = distinct !{!112, !110}
!113 = distinct !{!113, !77}
!114 = distinct !{!114, !62}
!115 = distinct !{!115, !62}
!116 = distinct !{!116, !77}
!117 = !{!118}
!118 = distinct !{!118, !119}
!119 = distinct !{!119, !"LVerDomain"}
!120 = !{!121}
!121 = distinct !{!121, !119}
!122 = distinct !{!122, !77}
!123 = distinct !{!123, !62}
!124 = distinct !{!124, !62}
!125 = distinct !{!125, !77}
!126 = !{!127}
!127 = distinct !{!127, !128}
!128 = distinct !{!128, !"LVerDomain"}
!129 = !{!130}
!130 = distinct !{!130, !128}
!131 = distinct !{!131, !77}
!132 = distinct !{!132, !62}
!133 = distinct !{!133, !62}
!134 = distinct !{!134, !77}
!135 = !{!136}
!136 = distinct !{!136, !137}
!137 = distinct !{!137, !"LVerDomain"}
!138 = !{!139}
!139 = distinct !{!139, !137}
!140 = distinct !{!140, !77}
!141 = distinct !{!141, !62}
!142 = distinct !{!142, !62}
!143 = distinct !{!143, !77}
!144 = !{!145}
!145 = distinct !{!145, !146}
!146 = distinct !{!146, !"LVerDomain"}
!147 = !{!148}
!148 = distinct !{!148, !146}
!149 = distinct !{!149, !77}
!150 = distinct !{!150, !62}
!151 = distinct !{!151, !62}
!152 = distinct !{!152, !77}
!153 = !{!154}
!154 = distinct !{!154, !155}
!155 = distinct !{!155, !"LVerDomain"}
!156 = !{!157}
!157 = distinct !{!157, !155}
!158 = distinct !{!158, !77}
!159 = distinct !{!159, !62}
!160 = distinct !{!160, !62}
!161 = distinct !{!161, !77}
!162 = !{!163}
!163 = distinct !{!163, !164}
!164 = distinct !{!164, !"LVerDomain"}
!165 = !{!166}
!166 = distinct !{!166, !164}
!167 = distinct !{!167, !77}
!168 = distinct !{!168, !62}
!169 = distinct !{!169, !62}
!170 = distinct !{!170, !77}
!171 = !{!172}
!172 = distinct !{!172, !173}
!173 = distinct !{!173, !"LVerDomain"}
!174 = !{!175}
!175 = distinct !{!175, !173}
!176 = distinct !{!176, !77}
!177 = distinct !{!177, !62}
!178 = distinct !{!178, !62}
!179 = distinct !{!179, !77}
!180 = !{!181}
!181 = distinct !{!181, !182}
!182 = distinct !{!182, !"LVerDomain"}
!183 = !{!184}
!184 = distinct !{!184, !182}
!185 = distinct !{!185, !77}
!186 = distinct !{!186, !62}
!187 = distinct !{!187, !62}
!188 = distinct !{!188, !77}
!189 = !{!190}
!190 = distinct !{!190, !191}
!191 = distinct !{!191, !"LVerDomain"}
!192 = !{!193}
!193 = distinct !{!193, !191}
!194 = distinct !{!194, !77}
!195 = distinct !{!195, !62}
!196 = distinct !{!196, !62}
!197 = distinct !{!197, !77}
!198 = !{!199}
!199 = distinct !{!199, !200}
!200 = distinct !{!200, !"LVerDomain"}
!201 = !{!202}
!202 = distinct !{!202, !200}
!203 = distinct !{!203, !77}
!204 = distinct !{!204, !62}
!205 = distinct !{!205, !62}
!206 = distinct !{!206, !77}
!207 = !{i64 0, i64 65}
!208 = !{!209}
!209 = distinct !{!209, !210, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIKS4_S5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!210 = distinct !{!210, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashINS_4pairIKS4_S5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_"}
!211 = distinct !{!211, !62}
!212 = !{!213}
!213 = distinct !{!213, !214, !"_ZN2v88internal21LocalAllocationBuffer10FromResultEPNS0_4HeapENS0_16AllocationResultEl: argument 0"}
!214 = distinct !{!214, !"_ZN2v88internal21LocalAllocationBuffer10FromResultEPNS0_4HeapENS0_16AllocationResultEl"}
!215 = !{!216}
!216 = distinct !{!216, !217, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS4_EEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISS_EEEEEEmOT_DpOT0_: argument 0"}
!217 = distinct !{!217, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal14AllocationSiteEmEENS_22__unordered_map_hasherIS4_S5_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S5_SA_S8_Lb1EEENS_9allocatorIS5_EEE21__construct_node_hashIRKNS_21piecewise_construct_tEJNS_5tupleIJOS4_EEENSL_IJEEEEEENS_10unique_ptrINS_11__hash_nodeIS5_PvEENS_22__hash_node_destructorINSE_ISS_EEEEEEmOT_DpOT0_"}
!218 = distinct !{!218, !62}
!219 = distinct !{!219, !62}
!220 = !{!221}
!221 = distinct !{!221, !222, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRNS_4pairIS4_S5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_: argument 0"}
!222 = distinct !{!222, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal10HeapObjectENS3_3MapEEENS_22__unordered_map_hasherIS4_S6_NS3_6Object6HasherENS_8equal_toIS4_EELb1EEENS_21__unordered_map_equalIS4_S6_SB_S9_Lb1EEENS_9allocatorIS6_EEE21__construct_node_hashIRNS_4pairIS4_S5_EEJEEENS_10unique_ptrINS_11__hash_nodeIS6_PvEENS_22__hash_node_destructorINSF_ISP_EEEEEEmOT_DpOT0_"}
!223 = !{!224}
!224 = distinct !{!224, !225, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE21__construct_node_hashINS_4pairIKS4_SC_EEJEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINSA_ISU_EEEEEEmOT_DpOT0_: argument 0"}
!225 = distinct !{!225, !"_ZNSt3__112__hash_tableINS_17__hash_value_typeIN2v88internal18EphemeronHashTableENS_13unordered_setIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEEEEENS_22__unordered_map_hasherIS4_SD_NS3_6Object6HasherENS8_IS4_EELb1EEENS_21__unordered_map_equalIS4_SD_SH_SG_Lb1EEENSA_ISD_EEE21__construct_node_hashINS_4pairIKS4_SC_EEJEEENS_10unique_ptrINS_11__hash_nodeISD_PvEENS_22__hash_node_destructorINSA_ISU_EEEEEEmOT_DpOT0_"}
!226 = distinct !{!226, !62}
!227 = !{!228}
!228 = distinct !{!228, !229, !"_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE21__construct_node_hashIRKiJEEENS_10unique_ptrINS_11__hash_nodeIiPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_: argument 0"}
!229 = distinct !{!229, !"_ZNSt3__112__hash_tableIiNS_4hashIiEENS_8equal_toIiEENS_9allocatorIiEEE21__construct_node_hashIRKiJEEENS_10unique_ptrINS_11__hash_nodeIiPvEENS_22__hash_node_destructorINS5_ISE_EEEEEEmOT_DpOT0_"}
!230 = distinct !{!230, !62}
!231 = !{!232}
!232 = distinct !{!232, !233}
!233 = distinct !{!233, !"LVerDomain"}
!234 = !{!235}
!235 = distinct !{!235, !233}
!236 = distinct !{!236, !77}
!237 = distinct !{!237, !62}
!238 = distinct !{!238, !62}
!239 = distinct !{!239, !77}
!240 = !{!241}
!241 = distinct !{!241, !242}
!242 = distinct !{!242, !"LVerDomain"}
!243 = !{!244}
!244 = distinct !{!244, !242}
!245 = distinct !{!245, !77}
!246 = distinct !{!246, !62}
!247 = distinct !{!247, !62}
!248 = distinct !{!248, !77}
!249 = !{!250}
!250 = distinct !{!250, !251}
!251 = distinct !{!251, !"LVerDomain"}
!252 = !{!253}
!253 = distinct !{!253, !251}
!254 = distinct !{!254, !77}
!255 = distinct !{!255, !62}
!256 = distinct !{!256, !62}
!257 = distinct !{!257, !77}
!258 = !{!259}
!259 = distinct !{!259, !260}
!260 = distinct !{!260, !"LVerDomain"}
!261 = !{!262}
!262 = distinct !{!262, !260}
!263 = distinct !{!263, !77}
!264 = distinct !{!264, !62}
!265 = distinct !{!265, !62}
!266 = distinct !{!266, !77}
!267 = !{!268}
!268 = distinct !{!268, !269}
!269 = distinct !{!269, !"LVerDomain"}
!270 = !{!271}
!271 = distinct !{!271, !269}
!272 = distinct !{!272, !77}
!273 = distinct !{!273, !62}
!274 = distinct !{!274, !62}
!275 = distinct !{!275, !77}
!276 = !{!277}
!277 = distinct !{!277, !278}
!278 = distinct !{!278, !"LVerDomain"}
!279 = !{!280}
!280 = distinct !{!280, !278}
!281 = distinct !{!281, !77}
!282 = distinct !{!282, !62}
!283 = distinct !{!283, !62}
!284 = distinct !{!284, !77}
!285 = !{!286}
!286 = distinct !{!286, !287}
!287 = distinct !{!287, !"LVerDomain"}
!288 = !{!289}
!289 = distinct !{!289, !287}
!290 = distinct !{!290, !77}
!291 = distinct !{!291, !62}
!292 = distinct !{!292, !62}
!293 = distinct !{!293, !77}
!294 = !{!295}
!295 = distinct !{!295, !296}
!296 = distinct !{!296, !"LVerDomain"}
!297 = !{!298}
!298 = distinct !{!298, !296}
!299 = distinct !{!299, !77}
!300 = distinct !{!300, !62}
!301 = distinct !{!301, !62}
!302 = distinct !{!302, !77}
!303 = !{!304}
!304 = distinct !{!304, !305}
!305 = distinct !{!305, !"LVerDomain"}
!306 = !{!307}
!307 = distinct !{!307, !305}
!308 = distinct !{!308, !77}
!309 = distinct !{!309, !62}
!310 = distinct !{!310, !62}
!311 = distinct !{!311, !77}
