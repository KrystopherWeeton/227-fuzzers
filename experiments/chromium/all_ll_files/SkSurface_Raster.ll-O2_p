; ModuleID = '../../third_party/skia/src/image/SkSurface_Raster.cpp'
source_filename = "../../third_party/skia/src/image/SkSurface_Raster.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.SkSurface_Raster = type <{ %class.SkSurface_Base, %class.SkBitmap, i8, [7 x i8] }>
%class.SkSurface_Base = type { %class.SkSurface, %"class.std::__1::unique_ptr", %class.sk_sp.21 }
%class.SkSurface = type { %class.SkRefCnt.base, %class.SkSurfaceProps, i32, i32, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic" }>
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.0" }
%"struct.std::__1::__atomic_base.0" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%class.SkSurfaceProps = type { i32, i32 }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %class.SkCanvas* }
%class.SkCanvas = type { i32 (...)**, %class.SkDeque, %"class.SkCanvas::MCRec"*, %class.sk_sp.6, [384 x i64], %class.sk_sp.7, %class.SkSurfaceProps, i32, %"class.std::__1::unique_ptr.8", %class.SkSurface_Base*, %struct.SkIRect, %struct.SkRect, %"class.std::__1::unique_ptr.12" }
%class.SkDeque = type { i8*, i8*, %"struct.SkDeque::Block"*, %"struct.SkDeque::Block"*, i64, i8*, i32, i32 }
%"struct.SkDeque::Block" = type opaque
%"class.SkCanvas::MCRec" = type opaque
%class.sk_sp.6 = type { %class.SkMarkerStack* }
%class.SkMarkerStack = type opaque
%class.sk_sp.7 = type { %class.SkBaseDevice* }
%class.SkBaseDevice = type { %class.SkRefCnt.base, %class.SkMatrixProvider, %class.SkMarkerStack*, %struct.SkImageInfo, %class.SkSurfaceProps, %class.SkM44, %class.SkM44 }
%class.SkMatrixProvider = type { i32 (...)**, %class.SkM44, %class.SkMatrix }
%class.SkMatrix = type { [9 x float], i32 }
%struct.SkImageInfo = type { %class.SkColorInfo, %struct.SkISize }
%class.SkColorInfo = type { %class.sk_sp, i32, i32 }
%class.sk_sp = type { %class.SkColorSpace* }
%class.SkColorSpace = type <{ %class.SkNVRefCnt, i32, i32, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %struct.skcms_TransferFunction, %struct.skcms_Matrix3x3, %class.SkOnce, [3 x i8] }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic" }
%struct.skcms_TransferFunction = type { float, float, float, float, float, float, float }
%struct.skcms_Matrix3x3 = type { [3 x [3 x float]] }
%class.SkOnce = type { %"struct.std::__1::atomic.1" }
%"struct.std::__1::atomic.1" = type { %"struct.std::__1::__atomic_base.2" }
%"struct.std::__1::__atomic_base.2" = type { %"struct.std::__1::__atomic_base.3" }
%"struct.std::__1::__atomic_base.3" = type { %"struct.std::__1::__cxx_atomic_impl.4" }
%"struct.std::__1::__cxx_atomic_impl.4" = type { %"struct.std::__1::__cxx_atomic_base_impl.5" }
%"struct.std::__1::__cxx_atomic_base_impl.5" = type { i8 }
%struct.SkISize = type { i32, i32 }
%class.SkM44 = type { [16 x float] }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %class.SkRasterHandleAllocator* }
%class.SkRasterHandleAllocator = type { i32 (...)** }
%struct.SkIRect = type { i32, i32, i32, i32 }
%struct.SkRect = type { float, float, float, float }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %class.SkGlyphRunBuilder* }
%class.SkGlyphRunBuilder = type opaque
%class.sk_sp.21 = type { %class.SkImage* }
%class.SkImage = type <{ %class.SkRefCnt.base, [4 x i8], %struct.SkImageInfo, i32, [4 x i8] }>
%class.SkBitmap = type { %class.sk_sp.22, %class.SkPixmap, %class.sk_sp.32 }
%class.sk_sp.22 = type { %class.SkPixelRef* }
%class.SkPixelRef = type <{ %class.SkRefCnt.base, i32, i32, [4 x i8], i8*, i64, %"struct.std::__1::atomic.23", [4 x i8], %"class.SkIDChangeListener::List", %"struct.std::__1::atomic.28", i8, [6 x i8] }>
%"struct.std::__1::atomic.23" = type { %"struct.std::__1::__atomic_base.24" }
%"struct.std::__1::__atomic_base.24" = type { %"struct.std::__1::__atomic_base.25" }
%"struct.std::__1::__atomic_base.25" = type { %"struct.std::__1::__cxx_atomic_impl.26" }
%"struct.std::__1::__cxx_atomic_impl.26" = type { %"struct.std::__1::__cxx_atomic_base_impl.27" }
%"struct.std::__1::__cxx_atomic_base_impl.27" = type { i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.28", [3 x i8] }
%"struct.std::__1::atomic.28" = type { %"struct.std::__1::__atomic_base.29" }
%"struct.std::__1::__atomic_base.29" = type { %"struct.std::__1::__cxx_atomic_impl.30" }
%"struct.std::__1::__cxx_atomic_impl.30" = type { %"struct.std::__1::__cxx_atomic_base_impl.31" }
%"struct.std::__1::__cxx_atomic_base_impl.31" = type { i8 }
%class.SkPixmap = type { i8*, i64, %struct.SkImageInfo }
%class.sk_sp.32 = type { %class.SkMipmap* }
%class.SkMipmap = type opaque
%class.SkRefCntBase = type <{ i32 (...)**, %"struct.std::__1::atomic", [4 x i8] }>
%class.sk_sp.33 = type { %class.SkSurface* }
%struct.SkSamplingOptions = type { i8, %struct.SkCubicResampler, i32, i32 }
%struct.SkCubicResampler = type { float, float }
%class.SkPaint = type <{ %class.sk_sp.34, %class.sk_sp.35, %class.sk_sp.36, %class.sk_sp.37, %class.sk_sp.38, %struct.SkRGBA4f, float, float, %union.anon, [4 x i8] }>
%class.sk_sp.34 = type { %class.SkPathEffect* }
%class.SkPathEffect = type opaque
%class.sk_sp.35 = type { %class.SkShader* }
%class.SkShader = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%class.sk_sp.36 = type { %class.SkMaskFilter* }
%class.SkMaskFilter = type opaque
%class.sk_sp.37 = type { %class.SkColorFilter* }
%class.SkColorFilter = type opaque
%class.sk_sp.38 = type { %class.SkImageFilter* }
%class.SkImageFilter = type opaque
%struct.SkRGBA4f = type { float, float, float, float }
%union.anon = type { %struct.anon }
%struct.anon = type { i32 }
%class.GrRecordingContext = type { %class.GrImageContext.base, %"class.GrRecordingContext::Stats", %"class.std::__1::unique_ptr.56", %"class.GrRecordingContext::OwnedArenas", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80" }
%class.GrImageContext.base = type <{ %class.GrContext_Base, %class.GrSingleOwner }>
%class.GrContext_Base = type { %class.SkRefCnt.base, %class.sk_sp.40 }
%class.sk_sp.40 = type { %class.GrContextThreadSafeProxy* }
%class.GrContextThreadSafeProxy = type <{ %class.SkNVRefCnt.41, i32, %struct.GrContextOptions, i32, [4 x i8], %class.sk_sp.42, %"class.std::__1::unique_ptr.43", %"class.std::__1::unique_ptr.49", %class.sk_sp.55, %"struct.std::__1::atomic.28", [7 x i8] }>
%class.SkNVRefCnt.41 = type { %"struct.std::__1::atomic" }
%struct.GrContextOptions = type { i8, i32, i32, i32, %class.SkExecutor*, i8, i8, i8, i8, i8, i64, float, float, i32, i8, i8, i32, i32, i8, i8, i32, %"class.GrContextOptions::PersistentCache"*, i32, %"class.GrContextOptions::ShaderErrorHandler"*, i32, i32, i8, i8, %class.GrDriverBugWorkarounds }
%class.SkExecutor = type opaque
%"class.GrContextOptions::PersistentCache" = type { i32 (...)** }
%"class.GrContextOptions::ShaderErrorHandler" = type { i32 (...)** }
%class.GrDriverBugWorkarounds = type { i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8 }
%class.sk_sp.42 = type { %class.GrCaps* }
%class.GrCaps = type opaque
%"class.std::__1::unique_ptr.43" = type { %"class.std::__1::__compressed_pair.44" }
%"class.std::__1::__compressed_pair.44" = type { %"struct.std::__1::__compressed_pair_elem.45" }
%"struct.std::__1::__compressed_pair_elem.45" = type { %class.GrTextBlobCache* }
%class.GrTextBlobCache = type opaque
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %class.GrThreadSafeCache* }
%class.GrThreadSafeCache = type opaque
%class.sk_sp.55 = type { %class.GrThreadSafePipelineBuilder* }
%class.GrThreadSafePipelineBuilder = type opaque
%class.GrSingleOwner = type { i8 }
%"class.GrRecordingContext::Stats" = type { i8 }
%"class.std::__1::unique_ptr.56" = type { %"class.std::__1::__compressed_pair.57" }
%"class.std::__1::__compressed_pair.57" = type { %"struct.std::__1::__compressed_pair_elem.58" }
%"struct.std::__1::__compressed_pair_elem.58" = type { %class.GrAuditTrail* }
%class.GrAuditTrail = type opaque
%"class.GrRecordingContext::OwnedArenas" = type { i8, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68" }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %class.SkArenaAlloc* }
%class.SkArenaAlloc = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %class.GrSubRunAllocator* }
%class.GrSubRunAllocator = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.GrDrawingManager* }
%class.GrDrawingManager = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %class.GrProxyProvider* }
%class.GrProxyProvider = type opaque
%class.GrBackendTexture = type { i8, i32, i32, i8, i32, %union.anon.86, %class.sk_sp.88 }
%union.anon.86 = type { %class.GrGLBackendTextureInfo, [120 x i8] }
%class.GrGLBackendTextureInfo = type { %struct.GrGLTextureInfo, %class.GrGLTextureParameters* }
%struct.GrGLTextureInfo = type { i32, i32, i32 }
%class.GrGLTextureParameters = type { %class.SkNVRefCnt.87, %"struct.GrGLTextureParameters::SamplerOverriddenState", %"struct.GrGLTextureParameters::NonsamplerState", i64 }
%class.SkNVRefCnt.87 = type { %"struct.std::__1::atomic" }
%"struct.GrGLTextureParameters::SamplerOverriddenState" = type <{ i32, i32, i32, i32, float, float, i8, [3 x i8] }>
%"struct.GrGLTextureParameters::NonsamplerState" = type <{ i32, i32, i8, [3 x i8] }>
%class.sk_sp.88 = type { %class.GrBackendSurfaceMutableStateImpl* }
%class.GrBackendSurfaceMutableStateImpl = type opaque
%class.GrBackendRenderTarget = type { i8, i8, i32, i32, i32, i32, i32, %union.anon.89, %class.sk_sp.88 }
%union.anon.89 = type { %struct.GrGLFramebufferInfo, [136 x i8] }
%struct.GrGLFramebufferInfo = type { i32, i32 }
%struct.GrFlushInfo = type { i32, %class.GrBackendSemaphore*, void (i8*)*, i8*, void (i8*, i1)*, i8* }
%class.GrBackendSemaphore = type opaque
%class.GrBackendSurfaceMutableState = type <{ %union.anon.91, i32, i8, [3 x i8] }>
%union.anon.91 = type { %class.GrVkSharedImageInfo }
%class.GrVkSharedImageInfo = type { %"struct.std::__1::atomic.92", %"struct.std::__1::atomic.23" }
%"struct.std::__1::atomic.92" = type { %"struct.std::__1::__atomic_base.93" }
%"struct.std::__1::__atomic_base.93" = type { %"struct.std::__1::__cxx_atomic_impl.94" }
%"struct.std::__1::__cxx_atomic_impl.94" = type { %"struct.std::__1::__cxx_atomic_base_impl.95" }
%"struct.std::__1::__cxx_atomic_base_impl.95" = type { i32 }
%class.SkSurfaceCharacterization = type { %class.sk_sp.40, i64, %struct.SkImageInfo, %class.GrBackendFormat, i32, i32, i8, i8, i8, i8, i8, i8, %class.SkSurfaceProps }
%class.GrBackendFormat = type { i32, i8, %union.anon.96, i32, [4 x i8] }
%union.anon.96 = type { %struct.anon.97 }
%struct.anon.97 = type { i32, [4 x i8], %struct.GrVkYcbcrConversionInfo }
%struct.GrVkYcbcrConversionInfo = type <{ i32, [4 x i8], i64, i32, i32, i32, i32, i32, i32, i32, [4 x i8] }>
%class.sk_sp.99 = type { %class.SkDeferredDisplayList* }
%class.SkDeferredDisplayList = type { %class.SkNVRefCnt.100, %class.SkSurfaceCharacterization, %"class.std::__1::map", %"class.GrRecordingContext::OwnedArenas", %class.SkTArray, %class.SkTArray.108, %class.sk_sp.115, %class.sk_sp.116 }
%class.SkNVRefCnt.100 = type { %"struct.std::__1::atomic" }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.101", %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair.101" = type { %"struct.std::__1::__compressed_pair_elem.102" }
%"struct.std::__1::__compressed_pair_elem.102" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { i64 }
%class.SkTArray = type { %class.sk_sp.107*, i64 }
%class.sk_sp.107 = type opaque
%class.SkTArray.108 = type { %"struct.GrRecordingContext::ProgramData"*, i64 }
%"struct.GrRecordingContext::ProgramData" = type { %"class.std::__1::unique_ptr.109", %class.GrProgramInfo* }
%"class.std::__1::unique_ptr.109" = type { %"class.std::__1::__compressed_pair.110" }
%"class.std::__1::__compressed_pair.110" = type { %"struct.std::__1::__compressed_pair_elem.111" }
%"struct.std::__1::__compressed_pair_elem.111" = type { %class.GrProgramDesc* }
%class.GrProgramDesc = type opaque
%class.GrProgramInfo = type opaque
%class.sk_sp.115 = type { %class.GrRenderTargetProxy* }
%class.GrRenderTargetProxy = type opaque
%class.sk_sp.116 = type { %"class.SkDeferredDisplayList::LazyProxyData"* }
%"class.SkDeferredDisplayList::LazyProxyData" = type { %class.SkRefCnt.base, %class.GrRenderTargetProxy* }

$_ZN16SkSurface_RasterD2Ev = comdat any

$_ZN16SkSurface_RasterD0Ev = comdat any

$_ZNK12SkRefCntBase16internal_disposeEv = comdat any

$_ZN14SkSurface_Base9onDiscardEv = comdat any

$_ZN14SkSurface_Base7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState = comdat any

$_ZN14SkSurface_Base6onWaitEiPK18GrBackendSemaphoreb = comdat any

$_ZNK14SkSurface_Base14onCharacterizeEP25SkSurfaceCharacterization = comdat any

$_ZNK14SkSurface_Base14onIsCompatibleERK25SkSurfaceCharacterization = comdat any

$_ZN14SkSurface_Base6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint = comdat any

@_ZTV16SkSurface_Raster = hidden unnamed_addr constant { [24 x i8*] } { [24 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.SkSurface_Raster*)* @_ZN16SkSurface_RasterD2Ev to i8*), i8* bitcast (void (%class.SkSurface_Raster*)* @_ZN16SkSurface_RasterD0Ev to i8*), i8* bitcast (void (%class.SkRefCntBase*)* @_ZNK12SkRefCntBase16internal_disposeEv to i8*), i8* bitcast (%class.GrRecordingContext* (%class.SkSurface_Base*)* @_ZN14SkSurface_Base21onGetRecordingContextEv to i8*), i8* bitcast (void (%class.GrBackendTexture*, %class.SkSurface_Base*, i32)* @_ZN14SkSurface_Base19onGetBackendTextureEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (void (%class.GrBackendRenderTarget*, %class.SkSurface_Base*, i32)* @_ZN14SkSurface_Base24onGetBackendRenderTargetEN9SkSurface19BackendHandleAccessE to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.GrBackendTexture*, i32, i32, void (i8*)*, i8*)* @_ZN14SkSurface_Base23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_ to i8*), i8* bitcast (%class.SkCanvas* (%class.SkSurface_Raster*)* @_ZN16SkSurface_Raster11onNewCanvasEv to i8*), i8* bitcast (void (%class.sk_sp.33*, %class.SkSurface_Raster*, %struct.SkImageInfo*)* @_ZN16SkSurface_Raster12onNewSurfaceERK11SkImageInfo to i8*), i8* bitcast (void (%class.sk_sp.21*, %class.SkSurface_Raster*, %struct.SkIRect*)* @_ZN16SkSurface_Raster18onNewImageSnapshotEPK7SkIRect to i8*), i8* bitcast (void (%class.SkSurface_Raster*, %class.SkPixmap*, i32, i32)* @_ZN16SkSurface_Raster13onWritePixelsERK8SkPixmapii to i8*), i8* bitcast (void (%class.SkSurface_Base*, %struct.SkImageInfo*, %struct.SkIRect*, i1, i32, {}*, i8*)* @_ZN14SkSurface_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_ to i8*), i8* bitcast (void (%class.SkSurface_Base*, i32, %class.sk_sp*, %struct.SkIRect*, %struct.SkISize*, i1, i32, {}*, i8*)* @_ZN14SkSurface_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_ to i8*), i8* bitcast (void (%class.SkSurface_Raster*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions*, %class.SkPaint*)* @_ZN16SkSurface_Raster6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint to i8*), i8* bitcast (void (%class.SkSurface_Base*)* @_ZN14SkSurface_Base9onDiscardEv to i8*), i8* bitcast (void (%class.SkSurface_Raster*, i32)* @_ZN16SkSurface_Raster13onCopyOnWriteEN9SkSurface17ContentChangeModeE to i8*), i8* bitcast (void (%class.SkSurface_Raster*)* @_ZN16SkSurface_Raster26onRestoreBackingMutabilityEv to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, i32, %struct.GrFlushInfo*, %class.GrBackendSurfaceMutableState*)* @_ZN14SkSurface_Base7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1)* @_ZN14SkSurface_Base6onWaitEiPK18GrBackendSemaphoreb to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)* @_ZNK14SkSurface_Base14onCharacterizeEP25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.SkSurfaceCharacterization*)* @_ZNK14SkSurface_Base14onIsCompatibleERK25SkSurfaceCharacterization to i8*), i8* bitcast (i1 (%class.SkSurface_Base*, %class.sk_sp.99*, i64)* @_ZN14SkSurface_Base6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint to i8*)] }, align 8

@_ZN16SkSurface_RasterC1ERK11SkImageInfoPvmPFvS3_S3_ES3_PK14SkSurfaceProps = hidden unnamed_addr alias void (%class.SkSurface_Raster*, %struct.SkImageInfo*, i8*, i64, void (i8*, i8*)*, i8*, %class.SkSurfaceProps*), void (%class.SkSurface_Raster*, %struct.SkImageInfo*, i8*, i64, void (i8*, i8*)*, i8*, %class.SkSurfaceProps*)* @_ZN16SkSurface_RasterC2ERK11SkImageInfoPvmPFvS3_S3_ES3_PK14SkSurfaceProps
@_ZN16SkSurface_RasterC1ERK11SkImageInfo5sk_spI10SkPixelRefEPK14SkSurfaceProps = hidden unnamed_addr alias void (%class.SkSurface_Raster*, %struct.SkImageInfo*, %class.sk_sp.22*, %class.SkSurfaceProps*), void (%class.SkSurface_Raster*, %struct.SkImageInfo*, %class.sk_sp.22*, %class.SkSurfaceProps*)* @_ZN16SkSurface_RasterC2ERK11SkImageInfo5sk_spI10SkPixelRefEPK14SkSurfaceProps

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_Z27SkSurfaceValidateRasterInfoRK11SkImageInfom(%struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 0
  %4 = load i32, i32* %3, align 4
  %5 = icmp slt i32 %4, 1
  br i1 %5, label %41, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 1, i32 1
  %8 = load i32, i32* %7, align 4
  %9 = icmp sgt i32 %4, 536870911
  %10 = add i32 %8, -1
  %11 = icmp ugt i32 %10, 536870910
  %12 = or i1 %9, %11
  br i1 %12, label %41, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ne i32 %15, 0
  %17 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp ne i32 %18, 0
  %20 = and i1 %16, %19
  br i1 %20, label %21, label %41

21:                                               ; preds = %13
  %22 = icmp eq i64 %1, -1
  br i1 %22, label %41, label %23

23:                                               ; preds = %21
  %24 = sext i32 %4 to i64
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %0, i64 0, i32 0
  %26 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %25) #7
  %27 = sext i32 %26 to i64
  %28 = mul nsw i64 %27, %24
  %29 = icmp ugt i64 %28, %1
  br i1 %29, label %41, label %30

30:                                               ; preds = %23
  %31 = tail call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %25) #7
  %32 = zext i32 %31 to i64
  %33 = shl i64 -1, %32
  %34 = and i64 %33, %1
  %35 = icmp eq i64 %34, %1
  br i1 %35, label %36, label %41

36:                                               ; preds = %30
  %37 = load i32, i32* %7, align 4
  %38 = sext i32 %37 to i64
  %39 = mul nsw i64 %38, %1
  %40 = icmp ult i64 %39, 2147483648
  br label %41

41:                                               ; preds = %23, %2, %6, %30, %21, %13, %36
  %42 = phi i1 [ %40, %36 ], [ false, %13 ], [ true, %21 ], [ false, %30 ], [ false, %6 ], [ false, %2 ], [ false, %23 ]
  ret i1 %42
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_RasterC2ERK11SkImageInfoPvmPFvS3_S3_ES3_PK14SkSurfaceProps(%class.SkSurface_Raster*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*, %class.SkSurfaceProps*) unnamed_addr #0 align 2 {
  %8 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0
  tail call void @_ZN14SkSurface_BaseC2ERK11SkImageInfoPK14SkSurfaceProps(%class.SkSurface_Base* %8, %struct.SkImageInfo* dereferenceable(24) %1, %class.SkSurfaceProps* %6) #7
  %9 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV16SkSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %10) #7
  %11 = tail call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %10, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, void (i8*, i8*)* %4, i8* %5) #7
  %12 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 2
  store i8 0, i8* %12, align 8
  ret void
}

declare void @_ZN14SkSurface_BaseC2ERK11SkImageInfoPK14SkSurfaceProps(%class.SkSurface_Base*, %struct.SkImageInfo* dereferenceable(24), %class.SkSurfaceProps*) unnamed_addr #2

declare void @_ZN8SkBitmapC1Ev(%class.SkBitmap*) unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_RasterC2ERK11SkImageInfo5sk_spI10SkPixelRefEPK14SkSurfaceProps(%class.SkSurface_Raster*, %struct.SkImageInfo* dereferenceable(24), %class.sk_sp.22* nocapture, %class.SkSurfaceProps*) unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.22, align 8
  %6 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0
  %7 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %2, i64 0, i32 0
  %8 = load %class.SkPixelRef*, %class.SkPixelRef** %7, align 8
  %9 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %8, i64 0, i32 1
  %10 = load i32, i32* %9, align 4
  %11 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %8, i64 0, i32 2
  %12 = load i32, i32* %11, align 8
  tail call void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* %6, i32 %10, i32 %12, %class.SkSurfaceProps* %3) #7
  %13 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV16SkSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %13, align 8
  %14 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %14) #7
  %15 = load %class.SkPixelRef*, %class.SkPixelRef** %7, align 8
  %16 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %15, i64 0, i32 5
  %17 = load i64, i64* %16, align 8
  %18 = tail call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* %14, %struct.SkImageInfo* dereferenceable(24) %1, i64 %17) #7
  %19 = bitcast %class.sk_sp.22* %2 to i64*
  %20 = load i64, i64* %19, align 8
  store %class.SkPixelRef* null, %class.SkPixelRef** %7, align 8
  %21 = bitcast %class.sk_sp.22* %5 to i64*
  store i64 %20, i64* %21, align 8
  call void @_ZN8SkBitmap11setPixelRefE5sk_spI10SkPixelRefEii(%class.SkBitmap* %14, %class.sk_sp.22* nonnull %5, i32 0, i32 0) #7
  %22 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %5, i64 0, i32 0
  %23 = load %class.SkPixelRef*, %class.SkPixelRef** %22, align 8
  %24 = icmp eq %class.SkPixelRef* %23, null
  br i1 %24, label %35, label %25

25:                                               ; preds = %4
  %26 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %23, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = atomicrmw add i32* %26, i32 -1 acq_rel
  %28 = icmp eq i32 %27, 1
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = bitcast %class.SkPixelRef* %23 to %class.SkRefCntBase*
  %31 = bitcast %class.SkPixelRef* %23 to void (%class.SkRefCntBase*)***
  %32 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %31, align 8
  %33 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, i64 2
  %34 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %33, align 8
  call void %34(%class.SkRefCntBase* nonnull %30) #7
  br label %35

35:                                               ; preds = %4, %25, %29
  %36 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 2
  store i8 1, i8* %36, align 8
  ret void
}

declare void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base*, i32, i32, %class.SkSurfaceProps*) unnamed_addr #2

declare zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

declare void @_ZN8SkBitmap11setPixelRefE5sk_spI10SkPixelRefEii(%class.SkBitmap*, %class.sk_sp.22*, i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden nonnull %class.SkCanvas* @_ZN16SkSurface_Raster11onNewCanvasEv(%class.SkSurface_Raster*) unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 3232) #8
  %3 = bitcast i8* %2 to %class.SkCanvas*
  %4 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  %5 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas* nonnull %3, %class.SkBitmap* dereferenceable(56) %4, %class.SkSurfaceProps* dereferenceable(8) %5) #7
  ret %class.SkCanvas* %3
}

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #3

declare void @_ZN8SkCanvasC1ERK8SkBitmapRK14SkSurfaceProps(%class.SkCanvas*, %class.SkBitmap* dereferenceable(56), %class.SkSurfaceProps* dereferenceable(8)) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_Raster12onNewSurfaceERK11SkImageInfo(%class.sk_sp.33* noalias nocapture sret, %class.SkSurface_Raster*, %struct.SkImageInfo* dereferenceable(24)) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %1, i64 0, i32 0, i32 0, i32 1
  tail call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.33* sret %0, %struct.SkImageInfo* dereferenceable(24) %2, i64 0, %class.SkSurfaceProps* %4) #7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_Raster6onDrawEP8SkCanvasffRK17SkSamplingOptionsPK7SkPaint(%class.SkSurface_Raster*, %class.SkCanvas*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) unnamed_addr #0 align 2 {
  %7 = alloca %class.sk_sp.21, align 8
  %8 = bitcast %class.sk_sp.21* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #7
  %9 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.21* nonnull sret %7, %class.SkBitmap* %9) #7
  %10 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %7, i64 0, i32 0
  %11 = load %class.SkImage*, %class.SkImage** %10, align 8
  call void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas* %1, %class.SkImage* %11, float %2, float %3, %struct.SkSamplingOptions* dereferenceable(20) %4, %class.SkPaint* %5) #7
  %12 = load %class.SkImage*, %class.SkImage** %10, align 8
  %13 = icmp eq %class.SkImage* %12, null
  br i1 %13, label %24, label %14

14:                                               ; preds = %6
  %15 = getelementptr inbounds %class.SkImage, %class.SkImage* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = atomicrmw add i32* %15, i32 -1 acq_rel
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %24

18:                                               ; preds = %14
  %19 = bitcast %class.SkImage* %12 to %class.SkRefCntBase*
  %20 = bitcast %class.SkImage* %12 to void (%class.SkRefCntBase*)***
  %21 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %20, align 8
  %22 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %21, i64 2
  %23 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %22, align 8
  call void %23(%class.SkRefCntBase* nonnull %19) #7
  br label %24

24:                                               ; preds = %6, %14, %18
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #7
  ret void
}

declare void @_ZN8SkCanvas9drawImageEPK7SkImageffRK17SkSamplingOptionsPK7SkPaint(%class.SkCanvas*, %class.SkImage*, float, float, %struct.SkSamplingOptions* dereferenceable(20), %class.SkPaint*) local_unnamed_addr #2

declare void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.21* sret, %class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_Raster18onNewImageSnapshotEPK7SkIRect(%class.sk_sp.21* noalias sret, %class.SkSurface_Raster*, %struct.SkIRect* readonly) unnamed_addr #0 align 2 {
  %4 = alloca %class.SkBitmap, align 8
  %5 = alloca %struct.SkImageInfo, align 8
  %6 = icmp eq %struct.SkIRect* %2, null
  br i1 %6, label %53, label %7

7:                                                ; preds = %3
  %8 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %8) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* nonnull %4) #7
  %9 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9) #7
  %10 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %1, i64 0, i32 1
  %11 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = sub i32 %12, %14
  %16 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 3
  %17 = load i32, i32* %16, align 4
  %18 = getelementptr inbounds %struct.SkIRect, %struct.SkIRect* %2, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = sub i32 %17, %19
  %21 = zext i32 %20 to i64
  %22 = shl nuw i64 %21, 32
  %23 = zext i32 %15 to i64
  %24 = or i64 %22, %23
  %25 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %26 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 0, i32 0
  %27 = load %class.SkColorSpace*, %class.SkColorSpace** %26, align 8, !noalias !2
  %28 = icmp eq %class.SkColorSpace* %27, null
  br i1 %28, label %32, label %29

29:                                               ; preds = %7
  %30 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = atomicrmw add i32* %30, i32 1 monotonic, !noalias !2
  br label %32

32:                                               ; preds = %7, %29
  store %class.SkColorSpace* %27, %class.SkColorSpace** %25, align 8, !alias.scope !2
  %33 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 1
  %34 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %1, i64 0, i32 1, i32 1, i32 2, i32 0, i32 1
  %35 = bitcast i32* %34 to i64*
  %36 = bitcast i32* %33 to i64*
  %37 = load i64, i64* %35, align 8, !noalias !2
  store i64 %37, i64* %36, align 8, !alias.scope !2
  %38 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %39 = bitcast %struct.SkISize* %38 to i64*
  store i64 %24, i64* %39, align 8, !alias.scope !2
  call void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap* nonnull %4, %struct.SkImageInfo* nonnull dereferenceable(24) %5) #7
  %40 = load %class.SkColorSpace*, %class.SkColorSpace** %25, align 8
  %41 = icmp eq %class.SkColorSpace* %40, null
  br i1 %41, label %48, label %42

42:                                               ; preds = %32
  %43 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = atomicrmw add i32* %43, i32 -1 acq_rel
  %45 = icmp eq i32 %44, 1
  br i1 %45, label %46, label %48

46:                                               ; preds = %42
  %47 = bitcast %class.SkColorSpace* %40 to i8*
  call void @_ZdlPv(i8* %47) #8
  br label %48

48:                                               ; preds = %32, %42, %46
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9) #7
  %49 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1
  %50 = load i32, i32* %13, align 4
  %51 = load i32, i32* %18, align 4
  %52 = call zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap* %10, %class.SkPixmap* dereferenceable(40) %49, i32 %50, i32 %51) #7
  call void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap* nonnull %4) #7
  call void @_ZNK8SkBitmap7asImageEv(%class.sk_sp.21* sret %0, %class.SkBitmap* nonnull %4) #7
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %8) #7
  br label %65

53:                                               ; preds = %3
  %54 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %1, i64 0, i32 2
  %55 = load i8, i8* %54, align 8, !range !7
  %56 = icmp eq i8 %55, 0
  br i1 %56, label %62, label %57

57:                                               ; preds = %53
  %58 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %1, i64 0, i32 1, i32 0, i32 0
  %59 = load %class.SkPixelRef*, %class.SkPixelRef** %58, align 8
  %60 = icmp eq %class.SkPixelRef* %59, null
  br i1 %60, label %62, label %61

61:                                               ; preds = %57
  tail call void @_ZN10SkPixelRef23setTemporarilyImmutableEv(%class.SkPixelRef* nonnull %59) #7
  br label %62

62:                                               ; preds = %53, %61, %57
  %63 = phi i32 [ 0, %57 ], [ 0, %61 ], [ 1, %53 ]
  %64 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %1, i64 0, i32 1
  tail call void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp.21* sret %0, %class.SkBitmap* dereferenceable(56) %64, i32 %63) #7
  br label %65

65:                                               ; preds = %62, %48
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

declare void @_ZN8SkBitmap11allocPixelsERK11SkImageInfo(%class.SkBitmap*, %struct.SkImageInfo* dereferenceable(24)) local_unnamed_addr #2

declare zeroext i1 @_ZNK8SkBitmap10readPixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #2

declare void @_ZN8SkBitmap12setImmutableEv(%class.SkBitmap*) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN8SkBitmapD1Ev(%class.SkBitmap*) unnamed_addr #4

declare void @_ZN10SkPixelRef23setTemporarilyImmutableEv(%class.SkPixelRef*) local_unnamed_addr #2

declare void @_Z27SkMakeImageFromRasterBitmapRK8SkBitmap16SkCopyPixelsMode(%class.sk_sp.21* sret, %class.SkBitmap* dereferenceable(56), i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_Raster13onWritePixelsERK8SkPixmapii(%class.SkSurface_Raster*, %class.SkPixmap* dereferenceable(40), i32, i32) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  %6 = tail call zeroext i1 @_ZN8SkBitmap11writePixelsERK8SkPixmapii(%class.SkBitmap* %5, %class.SkPixmap* dereferenceable(40) %1, i32 %2, i32 %3) #7
  ret void
}

declare zeroext i1 @_ZN8SkBitmap11writePixelsERK8SkPixmapii(%class.SkBitmap*, %class.SkPixmap* dereferenceable(40), i32, i32) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_Raster26onRestoreBackingMutabilityEv(%class.SkSurface_Raster* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %class.SkPixelRef*, %class.SkPixelRef** %2, align 8
  %4 = icmp eq %class.SkPixelRef* %3, null
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN10SkPixelRef17restoreMutabilityEv(%class.SkPixelRef* nonnull %3) #7
  br label %6

6:                                                ; preds = %1, %5
  ret void
}

declare void @_ZN10SkPixelRef17restoreMutabilityEv(%class.SkPixelRef*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN16SkSurface_Raster13onCopyOnWriteEN9SkSurface17ContentChangeModeE(%class.SkSurface_Raster*, i32) unnamed_addr #0 align 2 {
  %3 = alloca %class.sk_sp.21, align 8
  %4 = alloca %class.SkBitmap, align 8
  %5 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0
  %6 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0, i32 2
  %7 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %6, i64 0, i32 0
  %8 = load %class.SkImage*, %class.SkImage** %7, align 8, !noalias !8
  %9 = icmp eq %class.SkImage* %8, null
  br i1 %9, label %10, label %52

10:                                               ; preds = %2
  %11 = bitcast %class.sk_sp.21* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #7, !noalias !8
  %12 = bitcast %class.SkSurface_Raster* %0 to void (%class.sk_sp.21*, %class.SkSurface_Base*, %struct.SkIRect*)***
  %13 = load void (%class.sk_sp.21*, %class.SkSurface_Base*, %struct.SkIRect*)**, void (%class.sk_sp.21*, %class.SkSurface_Base*, %struct.SkIRect*)*** %12, align 8, !noalias !8
  %14 = getelementptr inbounds void (%class.sk_sp.21*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.21*, %class.SkSurface_Base*, %struct.SkIRect*)** %13, i64 9
  %15 = load void (%class.sk_sp.21*, %class.SkSurface_Base*, %struct.SkIRect*)*, void (%class.sk_sp.21*, %class.SkSurface_Base*, %struct.SkIRect*)** %14, align 8, !noalias !8
  call void %15(%class.sk_sp.21* nonnull sret %3, %class.SkSurface_Base* %5, %struct.SkIRect* null) #7, !noalias !8
  %16 = getelementptr inbounds %class.sk_sp.21, %class.sk_sp.21* %3, i64 0, i32 0
  %17 = bitcast %class.sk_sp.21* %3 to i64*
  %18 = load i64, i64* %17, align 8, !noalias !8
  store %class.SkImage* null, %class.SkImage** %16, align 8, !noalias !8
  %19 = load %class.SkImage*, %class.SkImage** %7, align 8, !noalias !8
  %20 = bitcast %class.sk_sp.21* %6 to i64*
  store i64 %18, i64* %20, align 8, !noalias !8
  %21 = icmp eq %class.SkImage* %19, null
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = inttoptr i64 %18 to %class.SkImage*
  br label %49

24:                                               ; preds = %10
  %25 = getelementptr inbounds %class.SkImage, %class.SkImage* %19, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = atomicrmw add i32* %25, i32 -1 acq_rel, !noalias !8
  %27 = icmp eq i32 %26, 1
  br i1 %27, label %28, label %34

28:                                               ; preds = %24
  %29 = bitcast %class.SkImage* %19 to %class.SkRefCntBase*
  %30 = bitcast %class.SkImage* %19 to void (%class.SkRefCntBase*)***
  %31 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %30, align 8, !noalias !8
  %32 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %31, i64 2
  %33 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %32, align 8, !noalias !8
  call void %33(%class.SkRefCntBase* nonnull %29) #7, !noalias !8
  br label %34

34:                                               ; preds = %28, %24
  %35 = load %class.SkImage*, %class.SkImage** %16, align 8, !noalias !8
  %36 = icmp eq %class.SkImage* %35, null
  br i1 %36, label %47, label %37

37:                                               ; preds = %34
  %38 = getelementptr inbounds %class.SkImage, %class.SkImage* %35, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = atomicrmw add i32* %38, i32 -1 acq_rel, !noalias !8
  %40 = icmp eq i32 %39, 1
  br i1 %40, label %41, label %47

41:                                               ; preds = %37
  %42 = bitcast %class.SkImage* %35 to %class.SkRefCntBase*
  %43 = bitcast %class.SkImage* %35 to void (%class.SkRefCntBase*)***
  %44 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %43, align 8, !noalias !8
  %45 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %44, i64 2
  %46 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %45, align 8, !noalias !8
  call void %46(%class.SkRefCntBase* nonnull %42) #7, !noalias !8
  br label %47

47:                                               ; preds = %41, %37, %34
  %48 = load %class.SkImage*, %class.SkImage** %7, align 8, !noalias !8
  br label %49

49:                                               ; preds = %47, %22
  %50 = phi %class.SkImage* [ %48, %47 ], [ %23, %22 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #7, !noalias !8
  %51 = icmp eq %class.SkImage* %50, null
  br i1 %51, label %56, label %52

52:                                               ; preds = %49, %2
  %53 = phi %class.SkImage* [ %8, %2 ], [ %50, %49 ]
  %54 = getelementptr inbounds %class.SkImage, %class.SkImage* %53, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 1 monotonic, !noalias !8
  br label %56

56:                                               ; preds = %52, %49
  %57 = phi %class.SkImage* [ null, %49 ], [ %53, %52 ]
  %58 = call %class.SkPixelRef* @_Z24SkBitmapImageGetPixelRefPK7SkImage(%class.SkImage* %57) #7
  %59 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  %60 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %59, i64 0, i32 0, i32 0
  %61 = load %class.SkPixelRef*, %class.SkPixelRef** %60, align 8
  %62 = icmp eq %class.SkPixelRef* %58, %61
  br i1 %62, label %63, label %111

63:                                               ; preds = %56
  %64 = icmp eq i32 %1, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %63
  call void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap* %59) #7
  br label %76

66:                                               ; preds = %63
  %67 = bitcast %class.SkBitmap* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %67) #7
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %67, i8 -86, i64 56, i1 false)
  call void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap* nonnull %4, %class.SkBitmap* dereferenceable(56) %59) #7
  call void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap* %59) #7
  %68 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1, i32 1, i32 0
  %69 = load i8*, i8** %68, align 8
  %70 = getelementptr inbounds %class.SkBitmap, %class.SkBitmap* %4, i64 0, i32 1, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1, i32 1, i32 2
  %73 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1, i32 1, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = call i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo* %72, i64 %74) #7
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %69, i8* align 1 %71, i64 %75, i1 false)
  call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* nonnull %4) #7
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %67) #7
  br label %76

76:                                               ; preds = %66, %65
  %77 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0, i32 1
  %78 = getelementptr inbounds %"class.std::__1::unique_ptr", %"class.std::__1::unique_ptr"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %class.SkCanvas*, %class.SkCanvas** %78, align 8
  %80 = icmp eq %class.SkCanvas* %79, null
  br i1 %80, label %81, label %103

81:                                               ; preds = %76
  %82 = bitcast %class.SkSurface_Raster* %0 to %class.SkCanvas* (%class.SkSurface_Base*)***
  %83 = load %class.SkCanvas* (%class.SkSurface_Base*)**, %class.SkCanvas* (%class.SkSurface_Base*)*** %82, align 8
  %84 = getelementptr inbounds %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %83, i64 7
  %85 = load %class.SkCanvas* (%class.SkSurface_Base*)*, %class.SkCanvas* (%class.SkSurface_Base*)** %84, align 8
  %86 = call %class.SkCanvas* %85(%class.SkSurface_Base* %5) #7
  %87 = ptrtoint %class.SkCanvas* %86 to i64
  %88 = load %class.SkCanvas*, %class.SkCanvas** %78, align 8
  %89 = bitcast %"class.std::__1::unique_ptr"* %77 to i64*
  store i64 %87, i64* %89, align 8
  %90 = icmp eq %class.SkCanvas* %88, null
  br i1 %90, label %97, label %91

91:                                               ; preds = %81
  %92 = bitcast %class.SkCanvas* %88 to void (%class.SkCanvas*)***
  %93 = load void (%class.SkCanvas*)**, void (%class.SkCanvas*)*** %92, align 8
  %94 = getelementptr inbounds void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %93, i64 1
  %95 = load void (%class.SkCanvas*)*, void (%class.SkCanvas*)** %94, align 8
  call void %95(%class.SkCanvas* nonnull %88) #7
  %96 = load %class.SkCanvas*, %class.SkCanvas** %78, align 8
  br label %97

97:                                               ; preds = %91, %81
  %98 = phi %class.SkCanvas* [ %96, %91 ], [ %86, %81 ]
  %99 = icmp eq %class.SkCanvas* %98, null
  br i1 %99, label %103, label %100

100:                                              ; preds = %97
  %101 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %98, i64 0, i32 9
  store %class.SkSurface_Base* %5, %class.SkSurface_Base** %101, align 8
  %102 = load %class.SkCanvas*, %class.SkCanvas** %78, align 8
  br label %103

103:                                              ; preds = %76, %97, %100
  %104 = phi %class.SkCanvas* [ null, %97 ], [ %102, %100 ], [ %79, %76 ]
  %105 = getelementptr inbounds %class.SkCanvas, %class.SkCanvas* %104, i64 0, i32 5, i32 0
  %106 = load %class.SkBaseDevice*, %class.SkBaseDevice** %105, align 8
  %107 = bitcast %class.SkBaseDevice* %106 to void (%class.SkBaseDevice*, %class.SkBitmap*)***
  %108 = load void (%class.SkBaseDevice*, %class.SkBitmap*)**, void (%class.SkBaseDevice*, %class.SkBitmap*)*** %107, align 8
  %109 = getelementptr inbounds void (%class.SkBaseDevice*, %class.SkBitmap*)*, void (%class.SkBaseDevice*, %class.SkBitmap*)** %108, i64 58
  %110 = load void (%class.SkBaseDevice*, %class.SkBitmap*)*, void (%class.SkBaseDevice*, %class.SkBitmap*)** %109, align 8
  call void %110(%class.SkBaseDevice* %106, %class.SkBitmap* dereferenceable(56) %59) #7
  br label %111

111:                                              ; preds = %103, %56
  %112 = icmp eq %class.SkImage* %57, null
  br i1 %112, label %123, label %113

113:                                              ; preds = %111
  %114 = getelementptr inbounds %class.SkImage, %class.SkImage* %57, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = atomicrmw add i32* %114, i32 -1 acq_rel
  %116 = icmp eq i32 %115, 1
  br i1 %116, label %117, label %123

117:                                              ; preds = %113
  %118 = bitcast %class.SkImage* %57 to %class.SkRefCntBase*
  %119 = bitcast %class.SkImage* %57 to void (%class.SkRefCntBase*)***
  %120 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %119, align 8
  %121 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %120, i64 2
  %122 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %121, align 8
  call void %122(%class.SkRefCntBase* nonnull %118) #7
  br label %123

123:                                              ; preds = %111, %113, %117
  ret void
}

declare %class.SkPixelRef* @_Z24SkBitmapImageGetPixelRefPK7SkImage(%class.SkImage*) local_unnamed_addr #2

declare void @_ZN8SkBitmap11allocPixelsEv(%class.SkBitmap*) local_unnamed_addr #2

declare void @_ZN8SkBitmapC1ERKS_(%class.SkBitmap*, %class.SkBitmap* dereferenceable(56)) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface27MakeRasterDirectReleaseProcERK11SkImageInfoPvmPFvS3_S3_ES3_PK14SkSurfaceProps(%class.sk_sp.33* noalias nocapture sret, %struct.SkImageInfo* dereferenceable(24), i8*, i64, void (i8*, i8*)*, i8*, %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  %8 = icmp eq void (i8*, i8*)* %4, null
  %9 = select i1 %8, i8* null, i8* %5
  %10 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = icmp slt i32 %11, 1
  br i1 %12, label %48, label %13

13:                                               ; preds = %7
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %15 = load i32, i32* %14, align 4
  %16 = icmp sgt i32 %11, 536870911
  %17 = add i32 %15, -1
  %18 = icmp ugt i32 %17, 536870910
  %19 = or i1 %16, %18
  br i1 %19, label %48, label %20

20:                                               ; preds = %13
  %21 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = icmp ne i32 %22, 0
  %24 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %25 = load i32, i32* %24, align 4
  %26 = icmp ne i32 %25, 0
  %27 = and i1 %23, %26
  br i1 %27, label %28, label %48

28:                                               ; preds = %20
  %29 = icmp eq i64 %3, -1
  br i1 %29, label %50, label %30

30:                                               ; preds = %28
  %31 = sext i32 %11 to i64
  %32 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0
  %33 = tail call i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo* %32) #7
  %34 = sext i32 %33 to i64
  %35 = mul nsw i64 %34, %31
  %36 = icmp ugt i64 %35, %3
  br i1 %36, label %48, label %37

37:                                               ; preds = %30
  %38 = tail call i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo* %32) #7
  %39 = zext i32 %38 to i64
  %40 = shl i64 -1, %39
  %41 = and i64 %40, %3
  %42 = icmp eq i64 %41, %3
  br i1 %42, label %43, label %48

43:                                               ; preds = %37
  %44 = load i32, i32* %14, align 4
  %45 = sext i32 %44 to i64
  %46 = mul nsw i64 %45, %3
  %47 = icmp ult i64 %46, 2147483648
  br i1 %47, label %50, label %48

48:                                               ; preds = %30, %7, %13, %37, %20, %43
  %49 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %49, align 8
  br label %63

50:                                               ; preds = %28, %43
  %51 = icmp eq i8* %2, null
  br i1 %51, label %52, label %54

52:                                               ; preds = %50
  %53 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %53, align 8
  br label %63

54:                                               ; preds = %50
  %55 = tail call i8* @_Znwm(i64 112) #8, !noalias !11
  %56 = bitcast i8* %55 to %class.SkSurface_Base*
  tail call void @_ZN14SkSurface_BaseC2ERK11SkImageInfoPK14SkSurfaceProps(%class.SkSurface_Base* nonnull %56, %struct.SkImageInfo* dereferenceable(24) %1, %class.SkSurfaceProps* %6) #7, !noalias !11
  %57 = bitcast i8* %55 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV16SkSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8, !noalias !11
  %58 = getelementptr inbounds i8, i8* %55, i64 48
  %59 = bitcast i8* %58 to %class.SkBitmap*
  tail call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %59) #7, !noalias !11
  %60 = tail call zeroext i1 @_ZN8SkBitmap13installPixelsERK11SkImageInfoPvmPFvS3_S3_ES3_(%class.SkBitmap* %59, %struct.SkImageInfo* dereferenceable(24) %1, i8* nonnull %2, i64 %3, void (i8*, i8*)* %4, i8* %9) #7, !noalias !11
  %61 = getelementptr inbounds i8, i8* %55, i64 104
  store i8 0, i8* %61, align 8, !noalias !11
  %62 = bitcast %class.sk_sp.33* %0 to i8**
  store i8* %55, i8** %62, align 8
  br label %63

63:                                               ; preds = %54, %52, %48
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface16MakeRasterDirectERK11SkImageInfoPvmPK14SkSurfaceProps(%class.sk_sp.33* noalias nocapture sret, %struct.SkImageInfo* dereferenceable(24), i8*, i64, %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN9SkSurface27MakeRasterDirectReleaseProcERK11SkImageInfoPvmPFvS3_S3_ES3_PK14SkSurfaceProps(%class.sk_sp.33* sret %0, %struct.SkImageInfo* dereferenceable(24) %1, i8* %2, i64 %3, void (i8*, i8*)* null, i8* null, %class.SkSurfaceProps* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.33* noalias nocapture sret, %struct.SkImageInfo* dereferenceable(24), i64, %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  %5 = alloca %class.sk_sp.22, align 8
  %6 = alloca %class.sk_sp.22, align 8
  %7 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = icmp slt i32 %8, 1
  br i1 %9, label %25, label %10

10:                                               ; preds = %4
  %11 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 1, i32 1
  %12 = load i32, i32* %11, align 4
  %13 = icmp sgt i32 %8, 536870911
  %14 = add i32 %12, -1
  %15 = icmp ugt i32 %14, 536870910
  %16 = or i1 %13, %15
  br i1 %16, label %25, label %17

17:                                               ; preds = %10
  %18 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ne i32 %19, 0
  %21 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %1, i64 0, i32 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ne i32 %22, 0
  %24 = and i1 %20, %23
  br i1 %24, label %27, label %25

25:                                               ; preds = %17, %10, %4
  %26 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %26, align 8
  br label %79

27:                                               ; preds = %17
  %28 = bitcast %class.sk_sp.22* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #7
  %29 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %6, i64 0, i32 0
  store %class.SkPixelRef* inttoptr (i64 -6148914691236517206 to %class.SkPixelRef*), %class.SkPixelRef** %29, align 8
  call void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp.22* nonnull sret %6, %struct.SkImageInfo* dereferenceable(24) %1, i64 %2) #7
  %30 = load %class.SkPixelRef*, %class.SkPixelRef** %29, align 8
  %31 = icmp eq %class.SkPixelRef* %30, null
  br i1 %31, label %32, label %34

32:                                               ; preds = %27
  %33 = getelementptr inbounds %class.sk_sp.33, %class.sk_sp.33* %0, i64 0, i32 0
  store %class.SkSurface* null, %class.SkSurface** %33, align 8
  br label %78

34:                                               ; preds = %27
  %35 = ptrtoint %class.SkPixelRef* %30 to i64
  %36 = call i8* @_Znwm(i64 112) #8, !noalias !14
  store %class.SkPixelRef* null, %class.SkPixelRef** %29, align 8, !noalias !14
  %37 = bitcast %class.sk_sp.22* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = bitcast i8* %36 to %class.SkSurface_Base*
  %39 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %30, i64 0, i32 1
  %40 = load i32, i32* %39, align 4
  %41 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %30, i64 0, i32 2
  %42 = load i32, i32* %41, align 8
  call void @_ZN14SkSurface_BaseC2EiiPK14SkSurfaceProps(%class.SkSurface_Base* nonnull %38, i32 %40, i32 %42, %class.SkSurfaceProps* %3) #7
  %43 = bitcast i8* %36 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV16SkSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %43, align 8
  %44 = getelementptr inbounds i8, i8* %36, i64 48
  %45 = bitcast i8* %44 to %class.SkBitmap*
  call void @_ZN8SkBitmapC1Ev(%class.SkBitmap* %45) #7
  %46 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %30, i64 0, i32 5
  %47 = load i64, i64* %46, align 8
  %48 = call zeroext i1 @_ZN8SkBitmap7setInfoERK11SkImageInfom(%class.SkBitmap* %45, %struct.SkImageInfo* dereferenceable(24) %1, i64 %47) #7
  %49 = bitcast %class.sk_sp.22* %5 to i64*
  store i64 %35, i64* %49, align 8
  call void @_ZN8SkBitmap11setPixelRefE5sk_spI10SkPixelRefEii(%class.SkBitmap* %45, %class.sk_sp.22* nonnull %5, i32 0, i32 0) #7
  %50 = getelementptr inbounds %class.sk_sp.22, %class.sk_sp.22* %5, i64 0, i32 0
  %51 = load %class.SkPixelRef*, %class.SkPixelRef** %50, align 8
  %52 = icmp eq %class.SkPixelRef* %51, null
  br i1 %52, label %63, label %53

53:                                               ; preds = %34
  %54 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %51, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = atomicrmw add i32* %54, i32 -1 acq_rel
  %56 = icmp eq i32 %55, 1
  br i1 %56, label %57, label %63

57:                                               ; preds = %53
  %58 = bitcast %class.SkPixelRef* %51 to %class.SkRefCntBase*
  %59 = bitcast %class.SkPixelRef* %51 to void (%class.SkRefCntBase*)***
  %60 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %59, align 8
  %61 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %60, i64 2
  %62 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %61, align 8
  call void %62(%class.SkRefCntBase* nonnull %58) #7
  br label %63

63:                                               ; preds = %57, %53, %34
  %64 = getelementptr inbounds i8, i8* %36, i64 104
  store i8 1, i8* %64, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  %65 = bitcast %class.sk_sp.33* %0 to i8**
  store i8* %36, i8** %65, align 8
  %66 = load %class.SkPixelRef*, %class.SkPixelRef** %29, align 8
  %67 = icmp eq %class.SkPixelRef* %66, null
  br i1 %67, label %78, label %68

68:                                               ; preds = %63
  %69 = getelementptr inbounds %class.SkPixelRef, %class.SkPixelRef* %66, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = atomicrmw add i32* %69, i32 -1 acq_rel
  %71 = icmp eq i32 %70, 1
  br i1 %71, label %72, label %78

72:                                               ; preds = %68
  %73 = bitcast %class.SkPixelRef* %66 to %class.SkRefCntBase*
  %74 = bitcast %class.SkPixelRef* %66 to void (%class.SkRefCntBase*)***
  %75 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %74, align 8
  %76 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %75, i64 2
  %77 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %76, align 8
  call void %77(%class.SkRefCntBase* nonnull %73) #7
  br label %78

78:                                               ; preds = %32, %63, %68, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #7
  br label %79

79:                                               ; preds = %78, %25
  ret void
}

declare void @_ZN16SkMallocPixelRef12MakeAllocateERK11SkImageInfom(%class.sk_sp.22* sret, %struct.SkImageInfo* dereferenceable(24), i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9SkSurface19MakeRasterN32PremulEiiPK14SkSurfaceProps(%class.sk_sp.33* noalias nocapture sret, i32, i32, %class.SkSurfaceProps*) local_unnamed_addr #0 align 2 {
  %5 = alloca %struct.SkImageInfo, align 16
  %6 = bitcast %struct.SkImageInfo* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #7
  %7 = zext i32 %2 to i64
  %8 = shl nuw i64 %7, 32
  %9 = zext i32 %1 to i64
  %10 = or i64 %8, %9
  %11 = bitcast %struct.SkImageInfo* %5 to <2 x i64>*
  store <2 x i64> <i64 0, i64 8589934598>, <2 x i64>* %11, align 16, !alias.scope !17
  %12 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 1
  %13 = bitcast %struct.SkISize* %12 to i64*
  store i64 %10, i64* %13, align 16, !alias.scope !17
  call void @_ZN9SkSurface10MakeRasterERK11SkImageInfomPK14SkSurfaceProps(%class.sk_sp.33* sret %0, %struct.SkImageInfo* nonnull dereferenceable(24) %5, i64 0, %class.SkSurfaceProps* %3) #7
  %14 = getelementptr inbounds %struct.SkImageInfo, %struct.SkImageInfo* %5, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.SkColorSpace*, %class.SkColorSpace** %14, align 16
  %16 = icmp eq %class.SkColorSpace* %15, null
  br i1 %16, label %23, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %class.SkColorSpace, %class.SkColorSpace* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = atomicrmw add i32* %18, i32 -1 acq_rel
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %21, label %23

21:                                               ; preds = %17
  %22 = bitcast %class.SkColorSpace* %15 to i8*
  call void @_ZdlPv(i8* %22) #8
  br label %23

23:                                               ; preds = %21, %17, %4
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkSurface_RasterD2Ev(%class.SkSurface_Raster*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV16SkSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #7
  %4 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0
  tail call void @_ZN14SkSurface_BaseD2Ev(%class.SkSurface_Base* %4) #7
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN16SkSurface_RasterD0Ev(%class.SkSurface_Raster*) unnamed_addr #5 comdat align 2 {
  %2 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [24 x i8*] }, { [24 x i8*] }* @_ZTV16SkSurface_Raster, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 1
  tail call void @_ZN8SkBitmapD1Ev(%class.SkBitmap* %3) #7
  %4 = getelementptr inbounds %class.SkSurface_Raster, %class.SkSurface_Raster* %0, i64 0, i32 0
  tail call void @_ZN14SkSurface_BaseD2Ev(%class.SkSurface_Base* %4) #7
  %5 = bitcast %class.SkSurface_Raster* %0 to i8*
  tail call void @_ZdlPv(i8* %5) #8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK12SkRefCntBase16internal_disposeEv(%class.SkRefCntBase*) unnamed_addr #0 comdat align 2 {
  %2 = icmp eq %class.SkRefCntBase* %0, null
  br i1 %2, label %8, label %3

3:                                                ; preds = %1
  %4 = bitcast %class.SkRefCntBase* %0 to void (%class.SkRefCntBase*)***
  %5 = load void (%class.SkRefCntBase*)**, void (%class.SkRefCntBase*)*** %4, align 8
  %6 = getelementptr inbounds void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %5, i64 1
  %7 = load void (%class.SkRefCntBase*)*, void (%class.SkRefCntBase*)** %6, align 8
  tail call void %7(%class.SkRefCntBase* nonnull %0) #7
  br label %8

8:                                                ; preds = %3, %1
  ret void
}

declare %class.GrRecordingContext* @_ZN14SkSurface_Base21onGetRecordingContextEv(%class.SkSurface_Base*) unnamed_addr #2

declare void @_ZN14SkSurface_Base19onGetBackendTextureEN9SkSurface19BackendHandleAccessE(%class.GrBackendTexture* sret, %class.SkSurface_Base*, i32) unnamed_addr #2

declare void @_ZN14SkSurface_Base24onGetBackendRenderTargetEN9SkSurface19BackendHandleAccessE(%class.GrBackendRenderTarget* sret, %class.SkSurface_Base*, i32) unnamed_addr #2

declare zeroext i1 @_ZN14SkSurface_Base23onReplaceBackendTextureERK16GrBackendTexture15GrSurfaceOriginN9SkSurface17ContentChangeModeEPFvPvES6_(%class.SkSurface_Base*, %class.GrBackendTexture* dereferenceable(176), i32, i32, void (i8*)*, i8*) unnamed_addr #2

declare void @_ZN14SkSurface_Base27onAsyncRescaleAndReadPixelsERK11SkImageInfoRK7SkIRectN7SkImage12RescaleGammaENS6_11RescaleModeEPFvPvNSt3__110unique_ptrIKNS6_15AsyncReadResultENSA_14default_deleteISD_EEEEES9_(%class.SkSurface_Base*, %struct.SkImageInfo* dereferenceable(24), %struct.SkIRect* dereferenceable(16), i1 zeroext, i32, {}*, i8*) unnamed_addr #2

declare void @_ZN14SkSurface_Base33onAsyncRescaleAndReadPixelsYUV420E15SkYUVColorSpace5sk_spI12SkColorSpaceERK7SkIRectRK7SkISizeN7SkImage12RescaleGammaENSA_11RescaleModeEPFvPvNSt3__110unique_ptrIKNSA_15AsyncReadResultENSE_14default_deleteISH_EEEEESD_(%class.SkSurface_Base*, i32, %class.sk_sp*, %struct.SkIRect* dereferenceable(16), %struct.SkISize* dereferenceable(8), i1 zeroext, i32, {}*, i8*) unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN14SkSurface_Base9onDiscardEv(%class.SkSurface_Base*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14SkSurface_Base7onFlushEN9SkSurface20BackendSurfaceAccessERK11GrFlushInfoPK28GrBackendSurfaceMutableState(%class.SkSurface_Base*, i32, %struct.GrFlushInfo* dereferenceable(48), %class.GrBackendSurfaceMutableState*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14SkSurface_Base6onWaitEiPK18GrBackendSemaphoreb(%class.SkSurface_Base*, i32, %class.GrBackendSemaphore*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkSurface_Base14onCharacterizeEP25SkSurfaceCharacterization(%class.SkSurface_Base*, %class.SkSurfaceCharacterization*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK14SkSurface_Base14onIsCompatibleERK25SkSurfaceCharacterization(%class.SkSurface_Base*, %class.SkSurfaceCharacterization* dereferenceable(136)) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN14SkSurface_Base6onDrawE5sk_spIK21SkDeferredDisplayListE8SkIPoint(%class.SkSurface_Base*, %class.sk_sp.99*, i64) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare i32 @_ZNK11SkColorInfo13bytesPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare i32 @_ZNK11SkColorInfo13shiftPerPixelEv(%class.SkColorInfo*) local_unnamed_addr #2

declare i64 @_ZNK11SkImageInfo15computeByteSizeEm(%struct.SkImageInfo*, i64) local_unnamed_addr #2

; Function Attrs: nounwind
declare void @_ZN14SkSurface_BaseD2Ev(%class.SkSurface_Base*) unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #6

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nounwind }
attributes #8 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3, !5}
!3 = distinct !{!3, !4, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo: argument 0"}
!4 = distinct !{!4, !"_ZN11SkImageInfo4MakeE7SkISizeRK11SkColorInfo"}
!5 = distinct !{!5, !6, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize: argument 0"}
!6 = distinct !{!6, !"_ZNK11SkImageInfo14makeDimensionsE7SkISize"}
!7 = !{i8 0, i8 2}
!8 = !{!9}
!9 = distinct !{!9, !10, !"_ZN14SkSurface_Base14refCachedImageEv: argument 0"}
!10 = distinct !{!10, !"_ZN14SkSurface_Base14refCachedImageEv"}
!11 = !{!12}
!12 = distinct !{!12, !13, !"_Z10sk_make_spI16SkSurface_RasterJRK11SkImageInfoRPvRmRPFvS4_S4_ES5_RPK14SkSurfacePropsEE5sk_spIT_EDpOT0_: argument 0"}
!13 = distinct !{!13, !"_Z10sk_make_spI16SkSurface_RasterJRK11SkImageInfoRPvRmRPFvS4_S4_ES5_RPK14SkSurfacePropsEE5sk_spIT_EDpOT0_"}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_Z10sk_make_spI16SkSurface_RasterJRK11SkImageInfo5sk_spI10SkPixelRefERPK14SkSurfacePropsEES4_IT_EDpOT0_: argument 0"}
!16 = distinct !{!16, !"_Z10sk_make_spI16SkSurface_RasterJRK11SkImageInfo5sk_spI10SkPixelRefERPK14SkSurfacePropsEES4_IT_EDpOT0_"}
!17 = !{!18, !20}
!18 = distinct !{!18, !19, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE: argument 0"}
!19 = distinct !{!19, !"_ZN11SkImageInfo4MakeE7SkISize11SkColorType11SkAlphaType5sk_spI12SkColorSpaceE"}
!20 = distinct !{!20, !21, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE: argument 0"}
!21 = distinct !{!21, !"_ZN11SkImageInfo13MakeN32PremulEii5sk_spI12SkColorSpaceE"}
