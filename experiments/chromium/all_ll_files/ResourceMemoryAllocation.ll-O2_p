; ModuleID = '../../third_party/dawn/src/dawn_native/ResourceMemoryAllocation.cpp'
source_filename = "../../third_party/dawn/src/dawn_native/ResourceMemoryAllocation.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%"class.dawn_native::ResourceMemoryAllocation" = type { i32 (...)**, %"struct.dawn_native::AllocationInfo", i64, %"class.dawn_native::ResourceHeapBase"*, i8* }
%"struct.dawn_native::AllocationInfo" = type <{ i64, i32, [4 x i8] }>
%"class.dawn_native::ResourceHeapBase" = type opaque

$_ZN11dawn_native24ResourceMemoryAllocationD2Ev = comdat any

$_ZN11dawn_native24ResourceMemoryAllocationD0Ev = comdat any

@_ZTVN11dawn_native24ResourceMemoryAllocationE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.dawn_native::ResourceMemoryAllocation"*)* @_ZN11dawn_native24ResourceMemoryAllocationD2Ev to i8*), i8* bitcast (void (%"class.dawn_native::ResourceMemoryAllocation"*)* @_ZN11dawn_native24ResourceMemoryAllocationD0Ev to i8*), i8* bitcast (void (%"class.dawn_native::ResourceMemoryAllocation"*)* @_ZN11dawn_native24ResourceMemoryAllocation10InvalidateEv to i8*)] }, align 8

@_ZN11dawn_native24ResourceMemoryAllocationC1Ev = hidden unnamed_addr alias void (%"class.dawn_native::ResourceMemoryAllocation"*), void (%"class.dawn_native::ResourceMemoryAllocation"*)* @_ZN11dawn_native24ResourceMemoryAllocationC2Ev
@_ZN11dawn_native24ResourceMemoryAllocationC1ERKNS_14AllocationInfoEmPNS_16ResourceHeapBaseEPh = hidden unnamed_addr alias void (%"class.dawn_native::ResourceMemoryAllocation"*, %"struct.dawn_native::AllocationInfo"*, i64, %"class.dawn_native::ResourceHeapBase"*, i8*), void (%"class.dawn_native::ResourceMemoryAllocation"*, %"struct.dawn_native::AllocationInfo"*, i64, %"class.dawn_native::ResourceHeapBase"*, i8*)* @_ZN11dawn_native24ResourceMemoryAllocationC2ERKNS_14AllocationInfoEmPNS_16ResourceHeapBaseEPh

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native24ResourceMemoryAllocationC2Ev(%"class.dawn_native::ResourceMemoryAllocation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11dawn_native24ResourceMemoryAllocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 1, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 1, i32 1
  store i32 3, i32* %4, align 8
  %5 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 2
  %6 = bitcast i64* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 24, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN11dawn_native24ResourceMemoryAllocationC2ERKNS_14AllocationInfoEmPNS_16ResourceHeapBaseEPh(%"class.dawn_native::ResourceMemoryAllocation"* nocapture, %"struct.dawn_native::AllocationInfo"* nocapture readonly dereferenceable(16), i64, %"class.dawn_native::ResourceHeapBase"*, i8*) unnamed_addr #1 align 2 {
  %6 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN11dawn_native24ResourceMemoryAllocationE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %6, align 8
  %7 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 1
  %8 = bitcast %"struct.dawn_native::AllocationInfo"* %7 to i8*
  %9 = bitcast %"struct.dawn_native::AllocationInfo"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 16, i1 false)
  %10 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 2
  store i64 %2, i64* %10, align 8
  %11 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 3
  store %"class.dawn_native::ResourceHeapBase"* %3, %"class.dawn_native::ResourceHeapBase"** %11, align 8
  %12 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 4
  store i8* %4, i8** %12, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %"class.dawn_native::ResourceHeapBase"* @_ZNK11dawn_native24ResourceMemoryAllocation15GetResourceHeapEv(%"class.dawn_native::ResourceMemoryAllocation"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 3
  %3 = load %"class.dawn_native::ResourceHeapBase"*, %"class.dawn_native::ResourceHeapBase"** %2, align 8
  ret %"class.dawn_native::ResourceHeapBase"* %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK11dawn_native24ResourceMemoryAllocation9GetOffsetEv(%"class.dawn_native::ResourceMemoryAllocation"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 2
  %3 = load i64, i64* %2, align 8
  ret i64 %3
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden { i64, i32 } @_ZNK11dawn_native24ResourceMemoryAllocation7GetInfoEv(%"class.dawn_native::ResourceMemoryAllocation"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 1, i32 0
  %3 = load i64, i64* %2, align 8
  %4 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 1, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = insertvalue { i64, i32 } undef, i64 %3, 0
  %7 = insertvalue { i64, i32 } %6, i32 %5, 1
  ret { i64, i32 } %7
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i8* @_ZNK11dawn_native24ResourceMemoryAllocation16GetMappedPointerEv(%"class.dawn_native::ResourceMemoryAllocation"* nocapture readonly) local_unnamed_addr #3 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 4
  %3 = load i8*, i8** %2, align 8
  ret i8* %3
}

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN11dawn_native24ResourceMemoryAllocation10InvalidateEv(%"class.dawn_native::ResourceMemoryAllocation"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 3
  store %"class.dawn_native::ResourceHeapBase"* null, %"class.dawn_native::ResourceHeapBase"** %2, align 8
  %3 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 1, i32 0
  store i64 0, i64* %3, align 8
  %4 = getelementptr inbounds %"class.dawn_native::ResourceMemoryAllocation", %"class.dawn_native::ResourceMemoryAllocation"* %0, i64 0, i32 1, i32 1
  store i32 3, i32* %4, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native24ResourceMemoryAllocationD2Ev(%"class.dawn_native::ResourceMemoryAllocation"*) unnamed_addr #1 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN11dawn_native24ResourceMemoryAllocationD0Ev(%"class.dawn_native::ResourceMemoryAllocation"*) unnamed_addr #1 comdat align 2 {
  %2 = bitcast %"class.dawn_native::ResourceMemoryAllocation"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #5
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
