; ModuleID = '../../third_party/blink/renderer/core/inspector/inspector_css_agent.cc'
source_filename = "../../third_party/blink/renderer/core/inspector/inspector_css_agent.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.5 }
%class.scoped_refptr.5 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.6" }
%"struct.std::__1::__atomic_base.6" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.59", i32, [4 x i8], %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.197", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.207", %"class.std::__1::unique_ptr.213", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.225", %"class.std::__1::unique_ptr.231", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.238", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.59" = type { %"class.std::__1::__compressed_pair.60" }
%"class.std::__1::__compressed_pair.60" = type { %"struct.std::__1::__compressed_pair_elem.61" }
%"struct.std::__1::__compressed_pair_elem.61" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.62", %"class.std::__1::unique_ptr.68", %"class.std::__1::unique_ptr.74", %"class.std::__1::unique_ptr.80", %"class.std::__1::unique_ptr.86", %"class.std::__1::unique_ptr.92", %"class.std::__1::unique_ptr.103", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.110", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.124", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.131", %"class.std::__1::unique_ptr.138", %"class.std::__1::unique_ptr.145", %"class.std::__1::unique_ptr.152", %"class.std::__1::unique_ptr.177", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.62" = type { %"class.std::__1::__compressed_pair.63" }
%"class.std::__1::__compressed_pair.63" = type { %"struct.std::__1::__compressed_pair_elem.64" }
%"struct.std::__1::__compressed_pair_elem.64" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.68" = type { %"class.std::__1::__compressed_pair.69" }
%"class.std::__1::__compressed_pair.69" = type { %"struct.std::__1::__compressed_pair_elem.70" }
%"struct.std::__1::__compressed_pair_elem.70" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.80" = type { %"class.std::__1::__compressed_pair.81" }
%"class.std::__1::__compressed_pair.81" = type { %"struct.std::__1::__compressed_pair_elem.82" }
%"struct.std::__1::__compressed_pair_elem.82" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.86" = type { %"class.std::__1::__compressed_pair.87" }
%"class.std::__1::__compressed_pair.87" = type { %"struct.std::__1::__compressed_pair_elem.88" }
%"struct.std::__1::__compressed_pair_elem.88" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.92" = type { %"class.std::__1::__compressed_pair.93" }
%"class.std::__1::__compressed_pair.93" = type { %"struct.std::__1::__compressed_pair_elem.94" }
%"struct.std::__1::__compressed_pair_elem.94" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.95" = type { %"struct.std::__1::__atomic_base.96" }
%"struct.std::__1::__atomic_base.96" = type { %"struct.std::__1::__atomic_base.97" }
%"struct.std::__1::__atomic_base.97" = type { %"struct.std::__1::__cxx_atomic_impl.98" }
%"struct.std::__1::__cxx_atomic_impl.98" = type { %"struct.std::__1::__cxx_atomic_base_impl.99" }
%"struct.std::__1::__cxx_atomic_base_impl.99" = type { i64 }
%"class.std::__1::unique_ptr.103" = type { %"class.std::__1::__compressed_pair.104" }
%"class.std::__1::__compressed_pair.104" = type { %"struct.std::__1::__compressed_pair_elem.105" }
%"struct.std::__1::__compressed_pair_elem.105" = type { %"class.blink::Worklist.106"* }
%"class.blink::Worklist.106" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.110" = type { %"class.std::__1::__compressed_pair.111" }
%"class.std::__1::__compressed_pair.111" = type { %"struct.std::__1::__compressed_pair_elem.112" }
%"struct.std::__1::__compressed_pair_elem.112" = type { %"class.blink::Worklist.113"* }
%"class.blink::Worklist.113" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %"class.blink::Worklist.120"* }
%"class.blink::Worklist.120" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.124" = type { %"class.std::__1::__compressed_pair.125" }
%"class.std::__1::__compressed_pair.125" = type { %"struct.std::__1::__compressed_pair_elem.126" }
%"struct.std::__1::__compressed_pair_elem.126" = type { %"class.blink::Worklist.127"* }
%"class.blink::Worklist.127" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.131" = type { %"class.std::__1::__compressed_pair.132" }
%"class.std::__1::__compressed_pair.132" = type { %"struct.std::__1::__compressed_pair_elem.133" }
%"struct.std::__1::__compressed_pair_elem.133" = type { %"class.blink::Worklist.134"* }
%"class.blink::Worklist.134" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.138" = type { %"class.std::__1::__compressed_pair.139" }
%"class.std::__1::__compressed_pair.139" = type { %"struct.std::__1::__compressed_pair_elem.140" }
%"struct.std::__1::__compressed_pair_elem.140" = type { %"class.blink::Worklist.141"* }
%"class.blink::Worklist.141" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.145" = type { %"class.std::__1::__compressed_pair.146" }
%"class.std::__1::__compressed_pair.146" = type { %"struct.std::__1::__compressed_pair_elem.147" }
%"struct.std::__1::__compressed_pair_elem.147" = type { %"class.blink::Worklist.148"* }
%"class.blink::Worklist.148" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.95" }
%"class.std::__1::unique_ptr.152" = type { %"class.std::__1::__compressed_pair.153" }
%"class.std::__1::__compressed_pair.153" = type { %"struct.std::__1::__compressed_pair_elem.154" }
%"struct.std::__1::__compressed_pair_elem.154" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.155", %"class.std::__1::__compressed_pair.164", %"class.std::__1::__compressed_pair.169", %"class.std::__1::__compressed_pair.171", [4 x i8] }>
%"class.std::__1::unique_ptr.155" = type { %"class.std::__1::__compressed_pair.156" }
%"class.std::__1::__compressed_pair.156" = type { %"struct.std::__1::__compressed_pair_elem.157", %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.157" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.158" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.159" }
%"class.std::__1::__compressed_pair.159" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"struct.std::__1::__compressed_pair_elem.160" = type { i64 }
%"class.std::__1::__compressed_pair.164" = type { %"struct.std::__1::__compressed_pair_elem.165" }
%"struct.std::__1::__compressed_pair_elem.165" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.169" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::__compressed_pair.171" = type { %"struct.std::__1::__compressed_pair_elem.172" }
%"struct.std::__1::__compressed_pair_elem.172" = type { float }
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.180", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.180" = type { %"class.std::__1::__compressed_pair.181" }
%"class.std::__1::__compressed_pair.181" = type { %"struct.std::__1::__compressed_pair_elem.182" }
%"struct.std::__1::__compressed_pair_elem.182" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.189" }
%"class.WTF::Vector.189" = type { %"class.WTF::VectorBuffer.190" }
%"class.WTF::VectorBuffer.190" = type { %"class.WTF::VectorBufferBase.191" }
%"class.WTF::VectorBufferBase.191" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.205" }
%"class.WTF::VectorBuffer.205" = type { %"class.WTF::VectorBufferBase.206" }
%"class.WTF::VectorBufferBase.206" = type { %"struct.std::__1::pair"*, i32, i32 }
%"struct.std::__1::pair" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.207" = type { %"class.std::__1::__compressed_pair.208" }
%"class.std::__1::__compressed_pair.208" = type { %"struct.std::__1::__compressed_pair_elem.209" }
%"struct.std::__1::__compressed_pair_elem.209" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.213" = type { %"class.std::__1::__compressed_pair.214" }
%"class.std::__1::__compressed_pair.214" = type { %"struct.std::__1::__compressed_pair_elem.215" }
%"struct.std::__1::__compressed_pair_elem.215" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.219" }
%"class.std::__1::unique_ptr.219" = type { %"class.std::__1::__compressed_pair.220" }
%"class.std::__1::__compressed_pair.220" = type { %"struct.std::__1::__compressed_pair_elem.221" }
%"struct.std::__1::__compressed_pair_elem.221" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.106"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.113"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.120"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.127"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.134"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.1957", i64 }
%"class.std::__1::vector.1957" = type { %"class.std::__1::__vector_base.1958" }
%"class.std::__1::__vector_base.1958" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.1959" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.1959" = type { %"struct.std::__1::__compressed_pair_elem.1960" }
%"struct.std::__1::__compressed_pair_elem.1960" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.225" = type { %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.227" }
%"struct.std::__1::__compressed_pair_elem.227" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.231" = type { %"class.std::__1::__compressed_pair.232" }
%"class.std::__1::__compressed_pair.232" = type { %"struct.std::__1::__compressed_pair_elem.233" }
%"struct.std::__1::__compressed_pair_elem.233" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.237 }
%class.scoped_refptr.237 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.238" = type { %"struct.std::__1::__atomic_base.239" }
%"struct.std::__1::__atomic_base.239" = type { %"struct.std::__1::__cxx_atomic_impl.240" }
%"struct.std::__1::__cxx_atomic_impl.240" = type { %"struct.std::__1::__cxx_atomic_base_impl.241" }
%"struct.std::__1::__cxx_atomic_base_impl.241" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.41" }
%"struct.std::__1::atomic.41" = type { %"struct.std::__1::__atomic_base.42" }
%"struct.std::__1::__atomic_base.42" = type { %"struct.std::__1::__atomic_base.43" }
%"struct.std::__1::__atomic_base.43" = type { %"struct.std::__1::__cxx_atomic_impl.44" }
%"struct.std::__1::__cxx_atomic_impl.44" = type { %"struct.std::__1::__cxx_atomic_base_impl.45" }
%"struct.std::__1::__cxx_atomic_base_impl.45" = type { i32 }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"class.WTF::StaticSingleton" = type { %"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" }
%"class.WTF::StaticSingleton<WTF::String>::InstanceStorage" = type { [8 x i8] }
%"class.blink::InspectorCSSAgent" = type { %"class.blink::InspectorBaseAgent.3255", %"struct.blink::InspectorDOMAgent::DOMListener", %"class.blink::InspectorStyleSheetBase::Listener", %"class.blink::Member.3172", %"class.blink::Member.2916", %"class.blink::Member.3112", %"class.blink::Member.2937", %"class.blink::Member.3262", %"class.blink::HeapHashMap.3271", %"class.blink::HeapHashMap.3278", %"class.blink::HeapHashMap.3285", %"class.blink::HeapHashMap.3292", %"class.blink::HeapHashSet.3299", %"class.blink::HeapHashMap.3305", %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312", %"class.blink::Member.1313", %"class.blink::Member.389", i32, [4 x i8], %"class.blink::InspectorAgentState::SimpleField", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.WTF::HashMap.3317", %"class.std::__1::unique_ptr.3322", %"class.WTF::HashSet.3219" }
%"class.blink::InspectorBaseAgent.3255" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::CSS::Backend", %"class.blink::Member.2554", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.3256" }
%"class.blink::InspectorAgent" = type { i32 (...)** }
%"class.blink::protocol::CSS::Backend" = type { i32 (...)** }
%"class.blink::Member.2554" = type { %"class.blink::MemberBase.2555" }
%"class.blink::MemberBase.2555" = type { %"class.blink::CoreProbeSink"* }
%"class.blink::CoreProbeSink" = type { %"class.blink::HeapListHashSet.2558", %"class.blink::HeapListHashSet.2569", %"class.blink::HeapListHashSet.2580", %"class.blink::HeapListHashSet.2591", %"class.blink::HeapListHashSet.2602", %"class.blink::HeapListHashSet.2613", %"class.blink::HeapListHashSet.2624", %"class.blink::HeapListHashSet.2635", %"class.blink::HeapListHashSet.2646", %"class.blink::HeapListHashSet.2657", %"class.blink::HeapListHashSet.2668", %"class.blink::HeapListHashSet.2679", %"class.blink::HeapListHashSet.2690", %"class.blink::HeapListHashSet.2701", %"class.blink::HeapListHashSet.2712", %"class.blink::HeapListHashSet.2723", %"class.blink::HeapListHashSet.2734", %"class.blink::HeapListHashSet.2745", %"class.blink::HeapListHashSet.2756", %"class.blink::HeapListHashSet.2767" }
%"class.blink::HeapListHashSet.2558" = type { %"class.WTF::ListHashSet.base.2568", [7 x i8] }
%"class.WTF::ListHashSet.base.2568" = type <{ %"class.WTF::HashTable.2563", %"class.blink::Member.2565", %"class.blink::Member.2565", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2563" = type <{ %"class.blink::Member.2565"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2565" = type { %"class.blink::MemberBase.2566" }
%"class.blink::MemberBase.2566" = type { %"class.blink::HeapListHashSetNode.2567"* }
%"class.blink::HeapListHashSetNode.2567" = type { %"class.blink::Member.2781", %"class.blink::Member.2565", %"class.blink::Member.2565" }
%"class.blink::Member.2781" = type { %"class.blink::MemberBase.2782" }
%"class.blink::MemberBase.2782" = type { %"class.blink::AdTracker"* }
%"class.blink::AdTracker" = type <{ i32 (...)**, %"class.blink::Member.2076", %"class.WTF::Vector.1664", i32, [4 x i8], %"class.blink::HeapHashMap.2785", i32, i8, [3 x i8] }>
%"class.blink::Member.2076" = type { %"class.blink::MemberBase.2077" }
%"class.blink::MemberBase.2077" = type { %"class.blink::LocalFrame"* }
%"class.blink::LocalFrame" = type <{ %"class.blink::Frame", %"class.blink::FrameScheduler::Delegate", %"class.blink::Supplementable.2488", %"class.blink::mojom::blink::LocalFrame", %"class.blink::mojom::blink::LocalMainFrame", %"class.blink::mojom::blink::FullscreenVideoElementHandler", %"class.blink::mojom::blink::HighPriorityLocalFrame", %"class.std::__1::unique_ptr.2496", %"class.blink::HeapMojoUniqueReceiverSet", %"class.blink::HeapHashSet.2510", %"class.blink::FrameLoader", %"class.blink::Member.2531", %"class.blink::Member.343", %"class.blink::Member.2532", %"class.blink::Member.2534", %"class.blink::Member.2550", %"class.blink::Member.2552", i32, i8, [3 x i8], float, float, i64, %"class.blink::Member.2554", %class.scoped_refptr.2778, %"class.blink::Member.2779", %"class.blink::Member.2781", %"class.blink::Member.2792", %"class.blink::Member.2794", %"class.blink::Member.2796", %"class.blink::Member.2800", %"class.blink::Member.2802", %"class.blink::InterfaceRegistry"*, %"class.blink::HeapMojoRemote", %"class.blink::mojom::blink::ViewportIntersectionState", %"class.std::__1::unique_ptr.2806", %"class.blink::ClientHintsPreferences", i8, [7 x i8], %"class.base::RepeatingCallback.2812", %"class.std::__1::unique_ptr.2813", %"class.absl::optional.2476", i32, [4 x i8], %"class.std::__1::unique_ptr.2819", %"class.blink::HeapMojoAssociatedRemote", %"class.blink::HeapMojoAssociatedRemote.2827", %"class.blink::HeapMojoAssociatedReceiver", %"class.blink::HeapMojoAssociatedReceiver.2832", %"class.blink::HeapMojoReceiver", %"class.blink::HeapMojoAssociatedReceiver.2837", i32, [4 x i8], %"class.base::TimeTicks", %"class.blink::Member.2840", %"class.blink::Member.2842", %"class.blink::Member.2844", %"class.blink::Member.2846", %"class.mojo::StructPtr.2849", %"class.blink::Member.2858", %"class.blink::TransientAllowFullscreen", %"class.blink::PaymentRequestToken", i8, [3 x i8], %"class.gfx::Rect", %"class.absl::optional.2860", i8, [7 x i8] }>
%"class.blink::Frame" = type { i32 (...)**, %"class.blink::FrameTree", %"class.blink::Member.2321", %"class.blink::Member.2323", %"class.blink::Member.2325", i8, i32, i8, i32, %"class.blink::Member.2458", %"class.blink::Member.2348", %"class.blink::FrameLifecycle", %"class.blink::Member.2319", %"class.blink::Member.2319", %"class.blink::Member.2319", %"class.blink::Member.2319", %"class.blink::Member.2319", %"class.blink::Member.2319", %"class.blink::Member.2076", %"class.blink::NavigationRateLimiter", i32, %"class.base::flat_map", %"class.blink::Member.2469", i8, %"class.base::UnguessableToken", %"class.absl::optional.2471", %"class.absl::optional.2476", %"class.blink::UserActivationState", i8, [7 x i8], %"class.blink::MultiToken", %"class.blink::TaskHandle", %"class.blink::OpenedFrameTracker" }
%"class.blink::FrameTree" = type <{ %"class.blink::Member.2319", %"class.WTF::AtomicString", i32, i8, i8, [2 x i8] }>
%"class.blink::Member.2321" = type { %"class.blink::MemberBase.2322" }
%"class.blink::MemberBase.2322" = type { %"class.blink::Page"* }
%"class.blink::Page" = type { %"class.blink::Supplementable.3802", %"class.blink::SettingsDelegate", %"class.blink::PageScheduler::Delegate", %"class.blink::Member.2319", %"class.blink::scheduler::WebAgentGroupScheduler"*, %"class.blink::Member.3816", %"class.blink::Member.3820", %"class.blink::Member.3822", %"class.blink::Member.3826", %"class.blink::Member.3828", %"class.blink::Member.3830", %"class.blink::Member.3832", %"class.blink::Member.3834", %"class.blink::HeapObserverSet.3836", %"class.blink::Member.3844", %"class.blink::Member.3846", %"class.blink::Member.3848", %"class.blink::Member.3850", %"class.blink::Member.3852", %"class.blink::Member.3854", %"class.blink::Member.3856", %"class.blink::Member.3858", %"class.blink::Member.3860", %"class.blink::Member.3862", %"class.blink::Member.3864", %"class.blink::InspectorIssueStorage", %"class.blink::Deprecation", %"struct.blink::WebWindowFeatures", i8, i8, i8, float, %"class.mojo::StructPtr.3889", i8, i8, i8, i8, i32, %"class.blink::HeapHashSet.3896", %"class.blink::Member.2321", %"class.blink::Member.2321", %"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle", %"class.std::__1::unique_ptr.3904", %"class.std::__1::unique_ptr.3910", i32, i32, i8, %"class.blink::mojom::blink::TextAutosizerPageInfo", %"class.blink::WebScopedVirtualTimePauser" }
%"class.blink::Supplementable.3802" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.3803" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::HeapHashMap.3803" = type { %"class.WTF::HashMap.3806" }
%"class.WTF::HashMap.3806" = type { %"class.WTF::HashTable.3807" }
%"class.WTF::HashTable.3807" = type <{ %"struct.WTF::KeyValuePair.3809"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3809" = type opaque
%"class.blink::SettingsDelegate" = type { i32 (...)**, %"class.std::__1::unique_ptr.3810" }
%"class.std::__1::unique_ptr.3810" = type { %"class.std::__1::__compressed_pair.3811" }
%"class.std::__1::__compressed_pair.3811" = type { %"struct.std::__1::__compressed_pair_elem.3812" }
%"struct.std::__1::__compressed_pair_elem.3812" = type { %"class.blink::Settings"* }
%"class.blink::Settings" = type opaque
%"class.blink::PageScheduler::Delegate" = type { i32 (...)** }
%"class.blink::scheduler::WebAgentGroupScheduler" = type { i32 (...)** }
%"class.blink::Member.3816" = type { %"class.blink::MemberBase.3817" }
%"class.blink::MemberBase.3817" = type { %"class.blink::PageAnimator"* }
%"class.blink::PageAnimator" = type <{ %"class.blink::Member.2321", i8, i8, i8, [5 x i8], %"class.blink::AnimationClock", i8, i8, i8, i8, i8, [3 x i8] }>
%"class.blink::AnimationClock" = type <{ %"class.base::TimeTicks", i8, [7 x i8], %"class.base::TickClock"*, i32, [4 x i8] }>
%"class.base::TickClock" = type { i32 (...)** }
%"class.blink::Member.3820" = type { %"class.blink::MemberBase.3821" }
%"class.blink::MemberBase.3821" = type { %"class.blink::AutoscrollController"* }
%"class.blink::AutoscrollController" = type opaque
%"class.blink::Member.3822" = type { %"class.blink::MemberBase.3823" }
%"class.blink::MemberBase.3823" = type { %"class.blink::ChromeClient"* }
%"class.blink::ChromeClient" = type { i32 (...)**, %"class.blink::WeakMember.1706", %"struct.blink::PhysicalOffset", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::WeakMember.1706" = type { %"class.blink::MemberBase.319" }
%"class.blink::MemberBase.319" = type { %"class.blink::Node"* }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member.318", %"class.blink::Member.320", %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.322" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::Member.320" = type { %"class.blink::MemberBase.321" }
%"class.blink::MemberBase.321" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.314", %"class.blink::Member.326", %"class.blink::Member.320", %"class.blink::Member.328", %"class.blink::Member.328", %"class.blink::Member.372", %"class.blink::Member.374", %"class.blink::Member.376", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.381", %"class.blink::HeapVector.383" }
%"class.blink::Member.314" = type { %"class.blink::MemberBase.315" }
%"class.blink::MemberBase.315" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member.318", %"class.blink::Member.318" }
%"class.blink::Member.326" = type { %"class.blink::MemberBase.327" }
%"class.blink::MemberBase.327" = type { %"class.blink::Document"* }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.992", %"class.WTF::Vector.992", i8, i32, %"class.blink::Member.1225", %"class.blink::Member.1227", %"class.blink::Member.1229", %"class.blink::Member.1231", %"class.blink::Member.1233", %"class.blink::Member.1235", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.1237", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.1243", %"class.blink::Member.1245", %"class.blink::Member.389", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.1248", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer.1253", %"class.blink::HeapVector.365", %"class.blink::Member.343", %"class.blink::Member.1255", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::Member.343", %"class.blink::UserActionElementSet", %"class.blink::Member.1264", double, double, i64, i64, %"class.blink::HeapHashSet.1266", %"class.blink::HeapHashSet.1273", i16, i8, %"class.blink::Member.1280", %"class.blink::Member.1282", %"class.blink::Member.1525", %"class.blink::Member.1527", %"class.blink::TextLinkColors", %"class.blink::Member.1529", i8, [7 x i8], %"class.blink::HeapHashMap.1531", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.343", %"class.WTF::Vector.1538", %"class.blink::Member.1543", %"class.blink::Member.1547", i8, %"class.blink::Member.343", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1549", %"class.blink::HeapVector.1551", %"class.std::__1::unique_ptr.1559", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1565", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1578", %"class.WTF::Vector.1580", i8, i8, %"class.std::__1::unique_ptr.1585", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector.365", %"class.blink::HeapVector.1591", i32, i8, %"class.blink::HeapTaskRunnerTimer.1253", %"class.blink::HeapTaskRunnerTimer.1253", %"class.blink::DocumentTiming", %"class.blink::Member.1599", i8, i32, %"class.blink::Member.1601", %"class.blink::Member.1603", %"class.blink::Member.1605", %"class.blink::HeapTaskRunnerTimer.1253", %"class.blink::Member.1607", %"class.WTF::HashMap.1609", %"class.blink::Member.1614", %"class.blink::Member.1616", %"class.blink::Member.1618", %"class.blink::Member.1620", %"class.blink::Member.326", %"class.blink::Member.326", %"class.blink::HeapTaskRunnerTimer.1253", %"class.blink::HeapHashSet.1622", i8, i32, %"class.blink::Member.1629", %"class.blink::Member.1631", i32, %"class.blink::Member.1633", %"class.blink::Member.1635", %"class.blink::Member.1637", %"class.std::__1::unique_ptr.1639", i64, %"class.std::__1::unique_ptr.1645", i32, i32, %"class.blink::Member.1656", %"class.blink::Member.1658", %"class.blink::Member.1660", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1662", %"class.WTF::Vector.1664", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1669", %"class.blink::Member.1676", %"class.std::__1::unique_ptr.1678", %"class.blink::Member.1684", i8, i8, %"class.WTF::String", %"class.blink::Member.1686", i8, [7 x i8], %"class.blink::HeapHashMap.1688", %"class.blink::HeapObserverSet", %"class.blink::Member.1702", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1704", i32, i8, i8, %"class.blink::WeakMember.1706", %"class.blink::Member.1707" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1218" }
%"class.blink::HeapHashMap.1218" = type { %"class.WTF::HashMap.1221" }
%"class.WTF::HashMap.1221" = type { %"class.WTF::HashTable.1222" }
%"class.WTF::HashTable.1222" = type <{ %"struct.WTF::KeyValuePair.1224"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1224" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.992" = type { %"class.WTF::VectorBuffer.993" }
%"class.WTF::VectorBuffer.993" = type { %"class.WTF::VectorBufferBase.994" }
%"class.WTF::VectorBufferBase.994" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.995 }
%class.scoped_refptr.995 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.996", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.996" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.41" }
%"class.blink::Member.1225" = type { %"class.blink::MemberBase.1226" }
%"class.blink::MemberBase.1226" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.1227" = type { %"class.blink::MemberBase.1228" }
%"class.blink::MemberBase.1228" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1731", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1798", i32, i8, [3 x i8], %"class.blink::HeapVector.1800", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1808", %"class.blink::Member.1810", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1819", %"class.blink::Member.1942", %"class.blink::Member.1944", i8, [7 x i8] }>
%"class.blink::Supplementable.1731" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1732" }
%"class.blink::HeapHashMap.1732" = type { %"class.WTF::HashMap.1735" }
%"class.WTF::HashMap.1735" = type { %"class.WTF::HashTable.1736" }
%"class.WTF::HashTable.1736" = type <{ %"struct.WTF::KeyValuePair.1738"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1738" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1747" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1739" }
%"class.blink::HeapObserverSet.1739" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1740" }
%"class.blink::HeapHashSet.1740" = type { %"class.WTF::HashSet.1743" }
%"class.WTF::HashSet.1743" = type { %"class.WTF::HashTable.1744" }
%"class.WTF::HashTable.1744" = type <{ %"class.blink::WeakMember.1746"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1746" = type opaque
%"class.blink::Supplementable.1747" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1748" }
%"class.blink::HeapHashMap.1748" = type { %"class.WTF::HashMap.1751" }
%"class.WTF::HashMap.1751" = type { %"class.WTF::HashTable.1752" }
%"class.WTF::HashTable.1752" = type <{ %"struct.WTF::KeyValuePair.1754"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1754" = type { i8*, %"class.blink::Member.4783" }
%"class.blink::Member.4783" = type { %"class.blink::MemberBase.4784" }
%"class.blink::MemberBase.4784" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.4785" }
%"class.blink::Member.4785" = type { %"class.blink::MemberBase.4786" }
%"class.blink::MemberBase.4786" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1755, %"class.std::__1::unique_ptr.1764", %"class.std::__1::unique_ptr.1764", %"class.std::__1::unique_ptr.1788", %"class.std::__1::unique_ptr.1788", %"class.blink::Member.1227", i32, [4 x i8], %"class.WTF::HashSet.1794", i32, i32 }
%class.scoped_refptr.1755 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.1756", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.1758", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.1763 }
%"class.WTF::RefCounted.1756" = type { %"class.base::RefCounted.1757" }
%"class.base::RefCounted.1757" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.1758" = type { %"class.absl::optional_internal::optional_data.1759" }
%"class.absl::optional_internal::optional_data.1759" = type { %"class.absl::optional_internal::optional_data_base.1760" }
%"class.absl::optional_internal::optional_data_base.1760" = type { %"class.absl::optional_internal::optional_data_dtor_base.1761" }
%"class.absl::optional_internal::optional_data_dtor_base.1761" = type { i8, %union.anon.1762 }
%union.anon.1762 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.1763 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1764" = type { %"class.std::__1::__compressed_pair.1765" }
%"class.std::__1::__compressed_pair.1765" = type { %"struct.std::__1::__compressed_pair_elem.1766" }
%"struct.std::__1::__compressed_pair_elem.1766" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type { %"class.url::Origin", %"class.std::__1::map", %"class.std::__1::map.1775", %"class.std::__1::map.1784"* }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.1758" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1767", %"class.std::__1::__compressed_pair.1772" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.1767" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"struct.std::__1::__compressed_pair_elem.1768" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1772" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1775" = type { %"class.std::__1::__tree.1776" }
%"class.std::__1::__tree.1776" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1777", %"class.std::__1::__compressed_pair.1781" }
%"class.std::__1::__compressed_pair.1777" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.1781" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1784" = type opaque
%"class.std::__1::unique_ptr.1788" = type { %"class.std::__1::__compressed_pair.1789" }
%"class.std::__1::__compressed_pair.1789" = type { %"struct.std::__1::__compressed_pair_elem.1790" }
%"struct.std::__1::__compressed_pair_elem.1790" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type { %"struct.std::__1::array.3552", %"class.base::flat_map.3553" }
%"struct.std::__1::array.3552" = type { [14 x %"class.blink::PolicyValue"] }
%"class.blink::PolicyValue" = type <{ i32, i8, [3 x i8], double, i32, [4 x i8] }>
%"class.base::flat_map.3553" = type { %"class.base::internal::flat_tree.3554" }
%"class.base::internal::flat_tree.3554" = type { %"class.std::__1::vector.3555" }
%"class.std::__1::vector.3555" = type { %"class.std::__1::__vector_base.3556" }
%"class.std::__1::__vector_base.3556" = type { %"struct.std::__1::pair.3557"*, %"struct.std::__1::pair.3557"*, %"class.std::__1::__compressed_pair.3558" }
%"struct.std::__1::pair.3557" = type { i32, %"class.std::__1::basic_string" }
%"class.std::__1::__compressed_pair.3558" = type { %"struct.std::__1::__compressed_pair_elem.3559" }
%"struct.std::__1::__compressed_pair_elem.3559" = type { %"struct.std::__1::pair.3557"* }
%"class.WTF::HashSet.1794" = type { %"class.WTF::HashTable.1795" }
%"class.WTF::HashTable.1795" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1798" = type { %"class.blink::MemberBase.1799" }
%"class.blink::MemberBase.1799" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1800" = type { %"class.WTF::Vector.1803" }
%"class.WTF::Vector.1803" = type { %"class.WTF::VectorBuffer.1804" }
%"class.WTF::VectorBuffer.1804" = type { %"class.WTF::VectorBufferBase.1805" }
%"class.WTF::VectorBufferBase.1805" = type { %"class.blink::Member.1806"*, i32, i32 }
%"class.blink::Member.1806" = type opaque
%"class.blink::Member.1808" = type { %"class.blink::MemberBase.1809" }
%"class.blink::MemberBase.1809" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1810" = type { %"class.blink::MemberBase.1811" }
%"class.blink::MemberBase.1811" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1812", i32, i32 }
%"class.blink::HeapHashMap.1812" = type { %"class.WTF::HashMap.1815" }
%"class.WTF::HashMap.1815" = type { %"class.WTF::HashTable.1816" }
%"class.WTF::HashTable.1816" = type <{ %"struct.WTF::KeyValuePair.1818"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1818" = type opaque
%"class.std::__1::unique_ptr.1819" = type { %"class.std::__1::__compressed_pair.1820" }
%"class.std::__1::__compressed_pair.1820" = type { %"struct.std::__1::__compressed_pair_elem.1821" }
%"struct.std::__1::__compressed_pair_elem.1821" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type { %"class.mojo::StructPtr", %"class.mojo::AssociatedRemote" }
%"class.mojo::StructPtr" = type { %"class.std::__1::unique_ptr.1822" }
%"class.std::__1::unique_ptr.1822" = type { %"class.std::__1::__compressed_pair.1823" }
%"class.std::__1::__compressed_pair.1823" = type { %"struct.std::__1::__compressed_pair_elem.1824" }
%"struct.std::__1::__compressed_pair_elem.1824" = type { %"class.blink::mojom::blink::PolicyContainerPolicies"* }
%"class.blink::mojom::blink::PolicyContainerPolicies" = type { i32, i32, %"class.WTF::Vector.1825" }
%"class.WTF::Vector.1825" = type { %"class.WTF::VectorBuffer.1826" }
%"class.WTF::VectorBuffer.1826" = type { %"class.WTF::VectorBufferBase.1827" }
%"class.WTF::VectorBufferBase.1827" = type { %"class.mojo::StructPtr.1828"*, i32, i32 }
%"class.mojo::StructPtr.1828" = type { %"class.std::__1::unique_ptr.1829" }
%"class.std::__1::unique_ptr.1829" = type { %"class.std::__1::__compressed_pair.1830" }
%"class.std::__1::__compressed_pair.1830" = type { %"struct.std::__1::__compressed_pair_elem.1831" }
%"struct.std::__1::__compressed_pair_elem.1831" = type { %"class.network::mojom::blink::ContentSecurityPolicy"* }
%"class.network::mojom::blink::ContentSecurityPolicy" = type { %"class.mojo::StructPtr.1832", %"class.WTF::HashMap.1839", %"class.WTF::HashMap.1844", i8, i8, i8, i32, %"class.mojo::InlinedStructPtr", i8, %"class.WTF::Vector.851", i32, %"class.mojo::StructPtr.1849", %"class.WTF::Vector.851" }
%"class.mojo::StructPtr.1832" = type { %"class.std::__1::unique_ptr.1833" }
%"class.std::__1::unique_ptr.1833" = type { %"class.std::__1::__compressed_pair.1834" }
%"class.std::__1::__compressed_pair.1834" = type { %"struct.std::__1::__compressed_pair_elem.1835" }
%"struct.std::__1::__compressed_pair_elem.1835" = type { %"class.network::mojom::blink::CSPSource"* }
%"class.network::mojom::blink::CSPSource" = type <{ %"class.WTF::String", %"class.WTF::String", i32, [4 x i8], %"class.WTF::String", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.1839" = type { %"class.WTF::HashTable.1840" }
%"class.WTF::HashTable.1840" = type <{ %"struct.WTF::KeyValuePair.1843"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1843" = type opaque
%"class.WTF::HashMap.1844" = type { %"class.WTF::HashTable.1845" }
%"class.WTF::HashTable.1845" = type <{ %"struct.WTF::KeyValuePair.1848"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1848" = type opaque
%"class.mojo::InlinedStructPtr" = type <{ %"class.network::mojom::blink::ContentSecurityPolicyHeader", i32, [4 x i8] }>
%"class.network::mojom::blink::ContentSecurityPolicyHeader" = type { %"class.WTF::String", i32, i32 }
%"class.mojo::StructPtr.1849" = type { %"class.std::__1::unique_ptr.1850" }
%"class.std::__1::unique_ptr.1850" = type { %"class.std::__1::__compressed_pair.1851" }
%"class.std::__1::__compressed_pair.1851" = type { %"struct.std::__1::__compressed_pair_elem.1852" }
%"struct.std::__1::__compressed_pair_elem.1852" = type { %"class.network::mojom::blink::CSPTrustedTypes"* }
%"class.network::mojom::blink::CSPTrustedTypes" = type <{ %"class.WTF::Vector.851", i8, i8, [6 x i8] }>
%"class.WTF::Vector.851" = type { %"class.WTF::VectorBuffer.852" }
%"class.WTF::VectorBuffer.852" = type { %"class.WTF::VectorBufferBase.853" }
%"class.WTF::VectorBufferBase.853" = type { %"class.WTF::String"*, i32, i32 }
%"class.mojo::AssociatedRemote" = type { %"class.mojo::internal::AssociatedInterfacePtrState" }
%"class.mojo::internal::AssociatedInterfacePtrState" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.1933" }
%"class.mojo::internal::AssociatedInterfacePtrStateBase.base" = type <{ %"class.std::__1::unique_ptr.1864", i32 }>
%"class.std::__1::unique_ptr.1864" = type { %"class.std::__1::__compressed_pair.1865" }
%"class.std::__1::__compressed_pair.1865" = type { %"struct.std::__1::__compressed_pair_elem.1866" }
%"struct.std::__1::__compressed_pair_elem.1866" = type { %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::InterfaceEndpointClient" = type { %"class.mojo::MessageReceiverWithResponder", i8, %"class.base::RepeatingCallback", %"class.base::OnceCallback.1867", %"class.absl::optional.1868", %"class.absl::optional.1873", %"class.mojo::ConnectionGroup::Ref", i32, %"class.mojo::ScopedInterfaceEndpointHandle", %"class.std::__1::unique_ptr.1886", %"class.mojo::InterfaceEndpointController"*, %"class.mojo::MessageReceiverWithResponderStatus"*, %"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk", %"class.mojo::MessageDispatcher", %"class.std::__1::map.1908", %"class.std::__1::map.1919", i64, %"class.base::OnceCallback", %"class.base::OnceCallback.1928", i8, %class.scoped_refptr.1878, %"class.mojo::internal::ControlMessageProxy", %"class.mojo::internal::ControlMessageHandler", i8*, %"class.base::WeakPtrFactory.1929" }
%"class.mojo::MessageReceiverWithResponder" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::MessageReceiver" = type { i32 (...)** }
%"class.base::RepeatingCallback" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::internal::CallbackBaseCopyable" = type { %"class.base::internal::CallbackBase" }
%"class.base::OnceCallback.1867" = type { %"class.base::internal::CallbackBase" }
%"class.absl::optional.1868" = type { %"class.absl::optional_internal::optional_data.1869" }
%"class.absl::optional_internal::optional_data.1869" = type { %"class.absl::optional_internal::optional_data_base.1870" }
%"class.absl::optional_internal::optional_data_base.1870" = type { %"class.absl::optional_internal::optional_data_dtor_base.1871" }
%"class.absl::optional_internal::optional_data_dtor_base.1871" = type { i8, %union.anon.1872 }
%union.anon.1872 = type { %"class.base::TimeDelta" }
%"class.base::TimeDelta" = type { i64 }
%"class.absl::optional.1873" = type { %"class.absl::optional_internal::optional_data.1874" }
%"class.absl::optional_internal::optional_data.1874" = type { %"class.absl::optional_internal::optional_data_base.1875" }
%"class.absl::optional_internal::optional_data_base.1875" = type { %"class.absl::optional_internal::optional_data_dtor_base.1876" }
%"class.absl::optional_internal::optional_data_dtor_base.1876" = type { i8, %union.anon.1877 }
%union.anon.1877 = type { %"class.base::OneShotTimer" }
%"class.base::OneShotTimer" = type { %"class.base::internal::TimerBase", %"class.base::OnceCallback" }
%"class.base::internal::TimerBase" = type { i32 (...)**, %class.scoped_refptr.1878, %"class.base::SequenceCheckerDoNothing", %"class.base::internal::TaskDestructionDetector"*, %"class.base::Location", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TickClock"*, i8, %"class.base::WeakPtrFactory.1879" }
%"class.base::SequenceCheckerDoNothing" = type { i8 }
%"class.base::internal::TaskDestructionDetector" = type opaque
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory.1879" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.1214 }
%class.scoped_refptr.1214 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.46" }
%"struct.std::__1::atomic.46" = type { %"struct.std::__1::__atomic_base.47" }
%"struct.std::__1::__atomic_base.47" = type { %"struct.std::__1::__atomic_base.48" }
%"struct.std::__1::__atomic_base.48" = type { %"struct.std::__1::__cxx_atomic_impl.49" }
%"struct.std::__1::__cxx_atomic_impl.49" = type { %"struct.std::__1::__cxx_atomic_base_impl.50" }
%"struct.std::__1::__cxx_atomic_base_impl.50" = type { i8 }
%"class.mojo::ConnectionGroup::Ref" = type { i32, %class.scoped_refptr.1884 }
%class.scoped_refptr.1884 = type { %"class.mojo::ConnectionGroup"* }
%"class.mojo::ConnectionGroup" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1956", [4 x i8], %"class.base::RepeatingCallback", %class.scoped_refptr.1878, %"class.mojo::ConnectionGroup::Ref", %"struct.std::__1::atomic", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1956" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::ScopedInterfaceEndpointHandle" = type { %class.scoped_refptr.1885 }
%class.scoped_refptr.1885 = type { %"class.mojo::ScopedInterfaceEndpointHandle::State"* }
%"class.mojo::ScopedInterfaceEndpointHandle::State" = type opaque
%"class.std::__1::unique_ptr.1886" = type { %"class.std::__1::__compressed_pair.1887" }
%"class.std::__1::__compressed_pair.1887" = type { %"struct.std::__1::__compressed_pair_elem.1888" }
%"struct.std::__1::__compressed_pair_elem.1888" = type { %"class.mojo::AssociatedGroup"* }
%"class.mojo::AssociatedGroup" = type { %"class.base::RepeatingCallback.1889", %class.scoped_refptr.1890 }
%"class.base::RepeatingCallback.1889" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.1890 = type { %"class.mojo::AssociatedGroupController"* }
%"class.mojo::AssociatedGroupController" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1891", [4 x i8] }>
%"class.base::RefCountedThreadSafe.1891" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::InterfaceEndpointController" = type opaque
%"class.mojo::MessageReceiverWithResponderStatus" = type { %"class.mojo::MessageReceiver" }
%"class.mojo::InterfaceEndpointClient::HandleIncomingMessageThunk" = type { %"class.mojo::MessageReceiver", %"class.mojo::InterfaceEndpointClient"* }
%"class.mojo::MessageDispatcher" = type { %"class.mojo::MessageReceiver", %"class.std::__1::unique_ptr.1895", %"class.std::__1::unique_ptr.1901", %"class.mojo::MessageReceiver"*, %"class.base::WeakPtrFactory.1907" }
%"class.std::__1::unique_ptr.1895" = type { %"class.std::__1::__compressed_pair.1896" }
%"class.std::__1::__compressed_pair.1896" = type { %"struct.std::__1::__compressed_pair_elem.1897" }
%"struct.std::__1::__compressed_pair_elem.1897" = type { %"class.mojo::MessageReceiver"* }
%"class.std::__1::unique_ptr.1901" = type { %"class.std::__1::__compressed_pair.1902" }
%"class.std::__1::__compressed_pair.1902" = type { %"struct.std::__1::__compressed_pair_elem.1903" }
%"struct.std::__1::__compressed_pair_elem.1903" = type { %"class.mojo::MessageFilter"* }
%"class.mojo::MessageFilter" = type { i32 (...)** }
%"class.base::WeakPtrFactory.1907" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::map.1908" = type { %"class.std::__1::__tree.1909" }
%"class.std::__1::__tree.1909" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1910", %"class.std::__1::__compressed_pair.1914" }
%"class.std::__1::__compressed_pair.1910" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.1914" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.1919" = type { %"class.std::__1::__tree.1920" }
%"class.std::__1::__tree.1920" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1921", %"class.std::__1::__compressed_pair.1925" }
%"class.std::__1::__compressed_pair.1921" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.1925" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::OnceCallback.1928" = type { %"class.base::internal::CallbackBase" }
%class.scoped_refptr.1878 = type { %"class.base::SequencedTaskRunner"* }
%"class.base::SequencedTaskRunner" = type { %"class.base::TaskRunner.base", [4 x i8] }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1000" }>
%"class.base::RefCountedThreadSafe.1000" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.mojo::internal::ControlMessageProxy" = type { %"class.mojo::InterfaceEndpointClient"*, i8, %"class.base::OnceCallback" }
%"class.mojo::internal::ControlMessageHandler" = type <{ %"class.mojo::MessageReceiverWithResponderStatus", %"class.mojo::InterfaceEndpointClient"*, i32, [4 x i8] }>
%"class.base::WeakPtrFactory.1929" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.std::__1::unique_ptr.1933" = type { %"class.std::__1::__compressed_pair.1934" }
%"class.std::__1::__compressed_pair.1934" = type { %"struct.std::__1::__compressed_pair_elem.1935" }
%"struct.std::__1::__compressed_pair_elem.1935" = type { %"class.blink::mojom::blink::PolicyContainerHostProxy"* }
%"class.blink::mojom::blink::PolicyContainerHostProxy" = type { %"class.blink::mojom::blink::PolicyContainerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::PolicyContainerHost" = type { i32 (...)** }
%"class.blink::Member.1942" = type { %"class.blink::MemberBase.1943" }
%"class.blink::MemberBase.1943" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1944" = type { %"class.blink::MemberBase.1945" }
%"class.blink::MemberBase.1945" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type <{ %"class.blink::Member.1810", i8, [7 x i8], %"class.WTF::Vector.1825", %"class.blink::HeapVector.1948", i8, [7 x i8], %"class.WTF::HashSet.1794", i8, i8, [2 x i8], i32, i8, [7 x i8], %"class.WTF::String", i32, i8, [3 x i8] }>
%"class.blink::HeapVector.1948" = type { %"class.WTF::Vector.1951" }
%"class.WTF::Vector.1951" = type { %"class.WTF::VectorBuffer.1952" }
%"class.WTF::VectorBuffer.1952" = type { %"class.WTF::VectorBufferBase.1953" }
%"class.WTF::VectorBufferBase.1953" = type { %"class.blink::Member.1954"*, i32, i32 }
%"class.blink::Member.1954" = type opaque
%"class.blink::Member.1229" = type { %"class.blink::MemberBase.1230" }
%"class.blink::MemberBase.1230" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type opaque
%"class.blink::Member.1231" = type { %"class.blink::MemberBase.1232" }
%"class.blink::MemberBase.1232" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type opaque
%"class.blink::Member.1233" = type { %"class.blink::MemberBase.1234" }
%"class.blink::MemberBase.1234" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.1235" = type { %"class.blink::MemberBase.1236" }
%"class.blink::MemberBase.1236" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.1237" = type { %"class.std::__1::__compressed_pair.1238" }
%"class.std::__1::__compressed_pair.1238" = type { %"struct.std::__1::__compressed_pair_elem.1239" }
%"struct.std::__1::__compressed_pair_elem.1239" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.430" }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"struct.url::Component" = type { i32, i32 }
%"class.std::__1::unique_ptr.430" = type { %"class.std::__1::__compressed_pair.431" }
%"class.std::__1::__compressed_pair.431" = type { %"struct.std::__1::__compressed_pair_elem.432" }
%"struct.std::__1::__compressed_pair_elem.432" = type { %"class.blink::KURL"* }
%"class.blink::Member.1243" = type { %"class.blink::MemberBase.1244" }
%"class.blink::MemberBase.1244" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.1245" = type { %"class.blink::MemberBase.1246" }
%"class.blink::MemberBase.1246" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.1248" = type { %"class.WTF::VectorBuffer.1249" }
%"class.WTF::VectorBuffer.1249" = type { %"class.WTF::VectorBufferBase.1250" }
%"class.WTF::VectorBufferBase.1250" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.436 }
%class.scoped_refptr.436 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.437", i32, i32, %"class.blink::Persistent.439" }
%"class.WTF::RefCounted.437" = type { %"class.base::RefCounted.438" }
%"class.base::RefCounted.438" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.439" = type { %"class.blink::PersistentBase.440" }
%"class.blink::PersistentBase.440" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap.443" }
%"class.blink::HeapHashMap.443" = type { %"class.WTF::HashMap.446" }
%"class.WTF::HashMap.446" = type { %"class.WTF::HashTable.447" }
%"class.WTF::HashTable.447" = type <{ %"struct.WTF::KeyValuePair.449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.449" = type { %"class.blink::WeakMember.450", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.450" = type { %"class.blink::MemberBase.451" }
%"class.blink::MemberBase.451" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::PersistentNodePtr.269" = type { %"class.blink::PersistentNode"* }
%"class.blink::Member.1255" = type { %"class.blink::MemberBase.1256" }
%"class.blink::MemberBase.1256" = type { %"class.blink::Range"* }
%"class.blink::Range" = type { %"class.blink::AbstractRange", %"class.blink::Member.326", %"class.blink::RangeBoundaryPoint", %"class.blink::RangeBoundaryPoint" }
%"class.blink::AbstractRange" = type { %"class.blink::ScriptWrappable" }
%"class.blink::RangeBoundaryPoint" = type <{ %"class.blink::Member.318", %"class.blink::Member.318", i64, i32, [4 x i8] }>
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.1257" }
%"class.blink::HeapHashMap.1257" = type { %"class.WTF::HashMap.1260" }
%"class.WTF::HashMap.1260" = type { %"class.WTF::HashTable.1261" }
%"class.WTF::HashTable.1261" = type <{ %"struct.WTF::KeyValuePair.1263"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1263" = type opaque
%"class.blink::Member.1264" = type { %"class.blink::MemberBase.1265" }
%"class.blink::MemberBase.1265" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.1266" = type { %"class.WTF::HashSet.1269" }
%"class.WTF::HashSet.1269" = type { %"class.WTF::HashTable.1270" }
%"class.WTF::HashTable.1270" = type <{ %"class.blink::WeakMember.1272"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1272" = type opaque
%"class.blink::HeapHashSet.1273" = type { %"class.WTF::HashSet.1276" }
%"class.WTF::HashSet.1276" = type { %"class.WTF::HashTable.1277" }
%"class.WTF::HashTable.1277" = type <{ %"class.blink::WeakMember.1279"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1279" = type opaque
%"class.blink::Member.1280" = type { %"class.blink::MemberBase.1281" }
%"class.blink::MemberBase.1281" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.1282" = type { %"class.blink::MemberBase.1283" }
%"class.blink::MemberBase.1283" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.326", i32, i32, i32, %"class.blink::Member.389", %"class.blink::Member.1286", %"class.blink::Member.1313", %"class.blink::HeapHashMap.1331", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.1338", %"class.blink::HeapHashSet.1338", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.1344", %"class.blink::Member.1356", %"class.blink::Member.1385", %"class.blink::Member.1387", %"class.blink::Member.1395", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.1406", %"class.blink::Member.1412", %"class.blink::HeapHashMap.1473", %"class.blink::HeapHashMap.1480", %"class.std::__1::unique_ptr.1487", i32, %"class.blink::HeapVector.1493", %"class.blink::HeapVector.1493", %"class.blink::HeapVector.1298", %"class.blink::HeapHashSet", %"class.blink::HeapHashMap.1501", %"class.blink::Member.1508", %"class.blink::HeapHashMap.1510", %class.scoped_refptr.1517, %class.scoped_refptr.259, %"class.blink::Member.596", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.1518", %"class.blink::Member.343" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.320", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.1290", %"class.blink::HeapVector.1298", i8 }>
%"class.blink::HeapVector.1290" = type { %"class.WTF::Vector.1293" }
%"class.WTF::Vector.1293" = type { %"class.WTF::VectorBuffer.1294" }
%"class.WTF::VectorBuffer.1294" = type { %"class.WTF::VectorBufferBase.1295" }
%"class.WTF::VectorBufferBase.1295" = type { %"class.blink::Member.1296"*, i32, i32 }
%"class.blink::Member.1296" = type opaque
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.1309", %"class.blink::Member.1311", %"class.blink::Member.1311", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.1309" = type <{ %"class.blink::Member.1311"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1311" = type { %"class.blink::MemberBase.1312" }
%"class.blink::MemberBase.1312" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member.318", %"class.blink::Member.1311", %"class.blink::Member.1311" }
%"class.blink::HeapHashMap.1331" = type { %"class.WTF::HashMap.1334" }
%"class.WTF::HashMap.1334" = type { %"class.WTF::HashTable.1335" }
%"class.WTF::HashTable.1335" = type <{ %"struct.WTF::KeyValuePair.1337"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1337" = type opaque
%"class.blink::HeapHashSet.1338" = type { %"class.WTF::HashSet.1341" }
%"class.WTF::HashSet.1341" = type { %"class.WTF::HashTable.1342" }
%"class.WTF::HashTable.1342" = type <{ %"class.blink::Member.320"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1344" = type { %"class.blink::MemberBase.1345" }
%"class.blink::MemberBase.1345" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.1346", %"class.blink::Member.1348" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.1346" = type { %"class.blink::MemberBase.1347" }
%"class.blink::MemberBase.1347" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type { i32 (...)**, %"class.blink::Member.343", %"class.blink::HeapHashMap.908" }
%"class.blink::HeapHashMap.908" = type { %"class.WTF::HashMap.911" }
%"class.WTF::HashMap.911" = type { %"class.WTF::HashTable.912" }
%"class.WTF::HashTable.912" = type <{ %"struct.WTF::KeyValuePair.914"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.914" = type opaque
%"class.blink::Member.1348" = type { %"class.blink::MemberBase.1349" }
%"class.blink::MemberBase.1349" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.1352", %"class.blink::Member.1354" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.1352" = type { %"class.blink::MemberBase.1353" }
%"class.blink::MemberBase.1353" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.1354" = type { %"class.blink::MemberBase.1355" }
%"class.blink::MemberBase.1355" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1722", %"class.blink::Member.1348", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp.1132] }
%"class.blink::HeapVector.1722" = type { %"class.WTF::Vector.1725" }
%"class.WTF::Vector.1725" = type { %"class.WTF::VectorBuffer.1726" }
%"class.WTF::VectorBuffer.1726" = type { %"class.WTF::VectorBufferBase.1727" }
%"class.WTF::VectorBufferBase.1727" = type { %"class.blink::Member.1354"*, i32, i32 }
%class.sk_sp.1132 = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1133, i32, %"class.absl::optional.1134", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.41" }>
%class.sk_sp.1133 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1134" = type { %"class.absl::optional_internal::optional_data.1135" }
%"class.absl::optional_internal::optional_data.1135" = type { %"class.absl::optional_internal::optional_data_base.1136" }
%"class.absl::optional_internal::optional_data_base.1136" = type { %"class.absl::optional_internal::optional_data_dtor_base.1137" }
%"class.absl::optional_internal::optional_data_dtor_base.1137" = type { i8, %union.anon.1138 }
%union.anon.1138 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.1356" = type { %"class.blink::MemberBase.1357" }
%"class.blink::MemberBase.1357" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.326", %class.scoped_refptr, %"class.blink::SelectorFilter", %"class.blink::Member.1313", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.1360" }
%"class.blink::HeapHashMap.1360" = type { %"class.WTF::HashMap.1363" }
%"class.WTF::HashMap.1363" = type { %"class.WTF::HashTable.1364" }
%"class.WTF::HashTable.1364" = type <{ %"struct.WTF::KeyValuePair.1366"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1366" = type opaque
%class.scoped_refptr = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type { %"class.blink::ComputedStyleBase.base", %"class.WTF::RefCounted.952", %"class.std::__1::unique_ptr.954" }
%"class.blink::ComputedStyleBase.base" = type <{ %"class.blink::DataRef", %"class.blink::DataRef.244", %"class.blink::DataRef.669", %"class.blink::DataRef.673", %"class.blink::DataRef.868", %"class.blink::DataRef.935", %"class.blink::DataRef.939", %"class.blink::DataRef.943", %"class.blink::DataRef.947", [20 x i8] }>
%"class.blink::DataRef" = type { %class.scoped_refptr.0 }
%class.scoped_refptr.0 = type { %"class.blink::ComputedStyleBase::StyleInheritedData"* }
%"class.blink::ComputedStyleBase::StyleInheritedData" = type { %"class.WTF::RefCounted", %"class.blink::DataRef.1", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i16, i16 }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.1" = type { %class.scoped_refptr.2 }
%class.scoped_refptr.2 = type { %"class.blink::ComputedStyleBase::StyleFontData"* }
%"class.blink::ComputedStyleBase::StyleFontData" = type { %"class.WTF::RefCounted.3", %"class.blink::Font" }
%"class.WTF::RefCounted.3" = type { %"class.base::RefCounted.4" }
%"class.base::RefCounted.4" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Font" = type { %"class.blink::FontDescription", %class.scoped_refptr.29 }
%"class.blink::FontDescription" = type { %"class.blink::FontFamily", %class.scoped_refptr.8, %class.scoped_refptr.11, %class.scoped_refptr.21, float, float, float, float, float, float, %"struct.blink::FontSelectionRequest", %"class.blink::FontSelectionValue", %union.anon.28 }
%"class.blink::FontFamily" = type { %"class.WTF::AtomicString", %class.scoped_refptr.7 }
%class.scoped_refptr.7 = type { %"class.blink::SharedFontFamily"* }
%"class.blink::SharedFontFamily" = type <{ %"class.blink::FontFamily", %"class.WTF::RefCounted.1964", [4 x i8] }>
%"class.WTF::RefCounted.1964" = type { %"class.base::RefCounted.1965" }
%"class.base::RefCounted.1965" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.8 = type { %"class.blink::FontFeatureSettings"* }
%"class.blink::FontFeatureSettings" = type <{ %"class.blink::FontSettings", %"class.WTF::RefCounted.9", [4 x i8] }>
%"class.blink::FontSettings" = type { %"class.WTF::Vector" }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { %"class.blink::FontTagValuePair"*, i32, i32 }
%"class.blink::FontTagValuePair" = type { i32, i32 }
%"class.WTF::RefCounted.9" = type { %"class.base::RefCounted.10" }
%"class.base::RefCounted.10" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.11 = type { %"class.blink::FontVariationSettings"* }
%"class.blink::FontVariationSettings" = type <{ %"class.blink::FontSettings.12", %"class.WTF::RefCounted.19", [4 x i8] }>
%"class.blink::FontSettings.12" = type { %"class.WTF::Vector.13" }
%"class.WTF::Vector.13" = type { %"class.WTF::VectorBuffer.14" }
%"class.WTF::VectorBuffer.14" = type { %"class.WTF::VectorBufferBase.15" }
%"class.WTF::VectorBufferBase.15" = type { %"class.blink::FontTagValuePair.16"*, i32, i32 }
%"class.blink::FontTagValuePair.16" = type { i32, float }
%"class.WTF::RefCounted.19" = type { %"class.base::RefCounted.20" }
%"class.base::RefCounted.20" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.21 = type { %"class.blink::LayoutLocale"* }
%"class.blink::LayoutLocale" = type <{ %"class.WTF::RefCounted.22", [4 x i8], %"class.WTF::AtomicString", %"class.std::__1::basic_string", %"class.WTF::CaseMap::Locale", %class.scoped_refptr.25, %struct.hb_language_impl_t*, i32, i32, i8, [7 x i8] }>
%"class.WTF::RefCounted.22" = type { %"class.base::RefCounted.23" }
%"class.base::RefCounted.23" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::CaseMap::Locale" = type { i8* }
%class.scoped_refptr.25 = type { %"class.blink::Hyphenation"* }
%"class.blink::Hyphenation" = type <{ i32 (...)**, %"class.WTF::RefCounted.26", [4 x i8] }>
%"class.WTF::RefCounted.26" = type { %"class.base::RefCounted.27" }
%"class.base::RefCounted.27" = type { %"class.base::subtle::RefCountedBase" }
%struct.hb_language_impl_t = type opaque
%"struct.blink::FontSelectionRequest" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.blink::FontSelectionValue" = type { i16 }
%union.anon.28 = type { %"struct.blink::FontDescription::BitFields" }
%"struct.blink::FontDescription::BitFields" = type { i56 }
%class.scoped_refptr.29 = type { %"class.blink::FontFallbackList"* }
%"class.blink::FontFallbackList" = type { %"class.WTF::RefCounted.30", %"class.WTF::Vector.32", %"class.blink::SimpleFontData"*, %"class.blink::WeakPersistent", i32, i16, i8, %"class.base::WeakPtr" }
%"class.WTF::RefCounted.30" = type { %"class.base::RefCounted.31" }
%"class.base::RefCounted.31" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.32" = type { %"class.WTF::VectorBuffer.33" }
%"class.WTF::VectorBuffer.33" = type { %"class.WTF::VectorBufferBase.34", [8 x i8] }
%"class.WTF::VectorBufferBase.34" = type { %class.scoped_refptr.35*, i32, i32 }
%class.scoped_refptr.35 = type { %"class.blink::FontData"* }
%"class.blink::FontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.36", [4 x i8] }>
%"class.WTF::RefCounted.36" = type { %"class.base::RefCounted.37" }
%"class.base::RefCounted.37" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::SimpleFontData" = type { %"class.blink::FontData.base", %"class.blink::FontMetrics", float, float, [4 x i8], %"class.blink::FontPlatformData", %class.SkFont, i16, float, i16, %"class.std::__1::unique_ptr", %class.scoped_refptr.56, i32, i32, %"struct.blink::FontHeight" }
%"class.blink::FontData.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.36" }>
%"class.blink::FontMetrics" = type <{ i32, float, float, float, float, float, float, %"class.absl::optional", %"class.absl::optional", i32, i32, i8, i8, [2 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.40 }
%union.anon.40 = type { float }
%"class.blink::FontPlatformData" = type <{ %class.sk_sp, %"class.std::__1::basic_string", float, i8, i8, i8, i8, i32, %"struct.blink::WebFontRenderStyle", [5 x i8], %class.scoped_refptr.51, i8, [7 x i8] }>
%class.sk_sp = type { %class.SkTypeface* }
%class.SkTypeface = type <{ %class.SkWeakRefCnt, i32, %class.SkFontStyle, %struct.SkRect, %class.SkOnce, i8, [6 x i8] }>
%class.SkWeakRefCnt = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.41" }
%class.SkFontStyle = type { i32 }
%class.SkOnce = type { %"struct.std::__1::atomic.46" }
%"struct.blink::WebFontRenderStyle" = type { i8, i8, i8, i8, i8, i8, i8 }
%class.scoped_refptr.51 = type { %"class.blink::HarfBuzzFace"* }
%"class.blink::HarfBuzzFace" = type opaque
%class.SkFont = type <{ %class.sk_sp, float, float, float, i8, i8, i8, i8 }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.52" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"struct.blink::SimpleFontData::DerivedFontData"* }
%"struct.blink::SimpleFontData::DerivedFontData" = type { %class.scoped_refptr.54, %class.scoped_refptr.54 }
%class.scoped_refptr.54 = type { %"class.blink::SimpleFontData"* }
%class.scoped_refptr.56 = type { %"class.blink::CustomFontData"* }
%"class.blink::CustomFontData" = type <{ i32 (...)**, %"class.WTF::RefCounted.57", [4 x i8] }>
%"class.WTF::RefCounted.57" = type { %"class.base::RefCounted.58" }
%"class.base::RefCounted.58" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::FontHeight" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutUnit" = type { i32 }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr" }
%"class.blink::FontFallbackMap" = type opaque
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.242 }
%class.scoped_refptr.242 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::Length" = type <{ %union.anon.243, i8, i8, i8, i8 }>
%union.anon.243 = type { i32 }
%"class.blink::StyleColor" = type { %"class.blink::Color", i32 }
%"class.blink::DataRef.244" = type { %class.scoped_refptr.245 }
%class.scoped_refptr.245 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentData" = type <{ %"class.WTF::RefCounted.246", [4 x i8], %"class.blink::DataRef.248", %"class.blink::DataRef.280", %"class.WTF::Vector.284", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %class.scoped_refptr.289, %class.scoped_refptr.298, %"class.blink::Persistent.306", %"class.blink::Persistent.308", %"class.blink::TextDecorationThickness", %"class.blink::Length", %"class.blink::Length", %"class.blink::TextSizeAdjust", %"struct.blink::TabSize", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", i16, i16, [5 x i8], [3 x i8] }>
%"class.WTF::RefCounted.246" = type { %"class.base::RefCounted.247" }
%"class.base::RefCounted.247" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.248" = type { %class.scoped_refptr.249 }
%class.scoped_refptr.249 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan64PercentSubData" = type <{ %"class.WTF::RefCounted.250", [4 x i8], %"class.WTF::AtomicString", %class.scoped_refptr.252, %class.scoped_refptr.259, %"class.blink::Persistent.270", float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleAutoColor", %"class.blink::StyleAutoColor", i16, i16, i16, i8, i8, i16, [2 x i8] }>
%"class.WTF::RefCounted.250" = type { %"class.base::RefCounted.251" }
%"class.base::RefCounted.251" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.252 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.253", %"class.WTF::Vector.254" }
%"class.base::RefCountedThreadSafe.253" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.254" = type { %"class.WTF::VectorBuffer.255" }
%"class.WTF::VectorBuffer.255" = type { %"class.WTF::VectorBufferBase.256" }
%"class.WTF::VectorBufferBase.256" = type { %"class.blink::AppliedTextDecoration"*, i32, i32 }
%"class.blink::AppliedTextDecoration" = type { i8, %"class.blink::Color", %"class.blink::TextDecorationThickness", %"class.blink::Length" }
%"class.blink::Persistent.270" = type { %"class.blink::PersistentBase.271" }
%"class.blink::PersistentBase.271" = type { %"class.blink::HeapVector"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.274" }
%"class.WTF::Vector.274" = type { %"class.WTF::VectorBuffer.275" }
%"class.WTF::VectorBuffer.275" = type { %"class.WTF::VectorBufferBase.276" }
%"class.WTF::VectorBufferBase.276" = type { %"class.blink::CursorData"*, i32, i32 }
%"class.blink::CursorData" = type <{ %"class.blink::Member", i8, [3 x i8], %"class.blink::IntPoint", [4 x i8] }>
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::StyleImage"* }
%"class.blink::StyleImage" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.blink::IntPoint" = type { i32, i32 }
%"class.blink::DataRef.280" = type { %class.scoped_refptr.281 }
%class.scoped_refptr.281 = type { %"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareInheritedUsageLessThan100PercentData" = type <{ %"class.WTF::RefCounted.282", %"class.blink::StyleColor", i16, i8, i8 }>
%"class.WTF::RefCounted.282" = type { %"class.base::RefCounted.283" }
%"class.base::RefCounted.283" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.284" = type { %"class.WTF::VectorBuffer.285" }
%"class.WTF::VectorBuffer.285" = type { %"class.WTF::VectorBufferBase.286" }
%"class.WTF::VectorBufferBase.286" = type { %"class.WTF::AtomicString"*, i32, i32 }
%class.scoped_refptr.289 = type { %"class.blink::QuotesData"* }
%"class.blink::QuotesData" = type { %"class.WTF::RefCounted.290", %"class.WTF::Vector.292" }
%"class.WTF::RefCounted.290" = type { %"class.base::RefCounted.291" }
%"class.base::RefCounted.291" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.292" = type { %"class.WTF::VectorBuffer.293" }
%"class.WTF::VectorBuffer.293" = type { %"class.WTF::VectorBufferBase.294" }
%"class.WTF::VectorBufferBase.294" = type { %"struct.std::__1::pair.295"*, i32, i32 }
%"struct.std::__1::pair.295" = type { %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.298 = type { %"class.blink::ShadowList"* }
%"class.blink::ShadowList" = type { %"class.WTF::RefCounted.299", [4 x i8], %"class.WTF::Vector.301" }
%"class.WTF::RefCounted.299" = type { %"class.base::RefCounted.300" }
%"class.base::RefCounted.300" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.301" = type { %"class.WTF::VectorBuffer.base", [4 x i8] }
%"class.WTF::VectorBuffer.base" = type <{ %"class.WTF::VectorBufferBase.303", [28 x i8] }>
%"class.WTF::VectorBufferBase.303" = type { %"class.blink::ShadowData"*, i32, i32 }
%"class.blink::ShadowData" = type { %"class.blink::FloatPoint", float, float, %"class.blink::StyleColor", i32 }
%"class.blink::Persistent.306" = type { %"class.blink::PersistentBase.307" }
%"class.blink::PersistentBase.307" = type { %"class.blink::StyleImage"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::Persistent.308" = type { %"class.blink::PersistentBase.309" }
%"class.blink::PersistentBase.309" = type { %"class.blink::ListStyleTypeData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ListStyleTypeData" = type { i32, %"class.WTF::AtomicString", %"class.blink::Member.312", %"class.blink::Member.667" }
%"class.blink::Member.312" = type { %"class.blink::MemberBase.313" }
%"class.blink::MemberBase.313" = type { %"class.blink::TreeScope"* }
%"class.blink::Member.667" = type { %"class.blink::MemberBase.668" }
%"class.blink::MemberBase.668" = type { %"class.blink::CounterStyle"* }
%"class.blink::CounterStyle" = type opaque
%"class.blink::TextDecorationThickness" = type { %"class.blink::Length", i8, [3 x i8] }
%"class.blink::TextSizeAdjust" = type { float }
%"struct.blink::TabSize" = type <{ float, i8, [3 x i8] }>
%"class.blink::StyleAutoColor" = type { %"class.blink::StyleColor" }
%"class.blink::DataRef.669" = type { %class.scoped_refptr.670 }
%class.scoped_refptr.670 = type { %"class.blink::ComputedStyleBase::StyleVisualData"* }
%"class.blink::ComputedStyleBase::StyleVisualData" = type <{ %"class.WTF::RefCounted.671", %"class.blink::LengthBox", float, i8, [3 x i8] }>
%"class.WTF::RefCounted.671" = type { %"class.base::RefCounted.672" }
%"class.base::RefCounted.672" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::LengthBox" = type { %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.blink::DataRef.673" = type { %class.scoped_refptr.674 }
%class.scoped_refptr.674 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData" = type <{ %"class.WTF::RefCounted.675", [4 x i8], %"class.blink::DataRef.677", %"class.blink::DataRef.743", %"class.blink::TransformOperations", %class.scoped_refptr.298, %"class.blink::Persistent.862", %"class.blink::TransformOrigin", float, float, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", i16, [2 x i8] }>
%"class.WTF::RefCounted.675" = type { %"class.base::RefCounted.676" }
%"class.base::RefCounted.676" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.677" = type { %class.scoped_refptr.678 }
%class.scoped_refptr.678 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan22PercentData" = type <{ %"class.WTF::RefCounted.679", [4 x i8], %"class.blink::DataRef.681", %"class.blink::Persistent.719", %"class.blink::Length", float, float, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i32, i32, %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleContentAlignmentData", [3 x i8], [5 x i8] }>
%"class.WTF::RefCounted.679" = type { %"class.base::RefCounted.680" }
%"class.base::RefCounted.680" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.681" = type { %class.scoped_refptr.682 }
%class.scoped_refptr.682 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan100PercentData" = type { %"class.WTF::RefCounted.683", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridTrackList", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.blink::GridPosition", %"class.WTF::AtomicString", %class.scoped_refptr.701, %class.scoped_refptr.704, %class.scoped_refptr.707, %class.scoped_refptr.710, %class.scoped_refptr.711, %class.scoped_refptr.712, %"class.blink::Persistent.719", %"class.blink::Persistent.734", %"class.absl::optional.738", %"class.absl::optional.738", %"struct.blink::StyleOffsetRotation", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"struct.blink::LengthPoint", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, %"struct.cc::ScrollSnapType", %"struct.cc::ScrollSnapAlign", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32, i16, [2 x i8], %"class.blink::StyleSelfAlignmentData", %"class.blink::StyleSelfAlignmentData", i32 }
%"class.WTF::RefCounted.683" = type { %"class.base::RefCounted.684" }
%"class.base::RefCounted.684" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::GridTrackList" = type { %"class.WTF::Vector.685", %"class.std::__1::unique_ptr.690" }
%"class.WTF::Vector.685" = type { %"class.WTF::VectorBuffer.686" }
%"class.WTF::VectorBuffer.686" = type { %"class.WTF::VectorBufferBase.687" }
%"class.WTF::VectorBufferBase.687" = type { %"class.blink::GridTrackSize"*, i32, i32 }
%"class.blink::GridTrackSize" = type <{ i32, [4 x i8], %"class.blink::GridLength", %"class.blink::GridLength", %"class.blink::GridLength", i16, [6 x i8] }>
%"class.blink::GridLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.690" = type { %"class.std::__1::__compressed_pair.691" }
%"class.std::__1::__compressed_pair.691" = type { %"struct.std::__1::__compressed_pair_elem.692" }
%"struct.std::__1::__compressed_pair_elem.692" = type { %"class.blink::NGGridTrackList"* }
%"class.blink::NGGridTrackList" = type { %"class.WTF::Vector.693", %"class.WTF::Vector.685", i32, i32 }
%"class.WTF::Vector.693" = type { %"class.WTF::VectorBuffer.694" }
%"class.WTF::VectorBuffer.694" = type { %"class.WTF::VectorBufferBase.695" }
%"class.WTF::VectorBufferBase.695" = type { %"struct.blink::NGGridTrackRepeater"*, i32, i32 }
%"struct.blink::NGGridTrackRepeater" = type { i32, i32, i32, i32 }
%"class.blink::GridPosition" = type { i32, i32, %"class.WTF::AtomicString" }
%class.scoped_refptr.701 = type { %"class.blink::ClipPathOperation"* }
%"class.blink::ClipPathOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.702", [4 x i8] }>
%"class.WTF::RefCounted.702" = type { %"class.base::RefCounted.703" }
%"class.base::RefCounted.703" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.704 = type { %"class.blink::BasicShape"* }
%"class.blink::BasicShape" = type <{ i32 (...)**, %"class.WTF::RefCounted.705", [4 x i8] }>
%"class.WTF::RefCounted.705" = type { %"class.base::RefCounted.706" }
%"class.base::RefCounted.706" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.707 = type { %"class.blink::RotateTransformOperation"* }
%"class.blink::RotateTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], %"struct.blink::Rotation", i32, [4 x i8] }>
%"class.blink::TransformOperation.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.708" }>
%"class.WTF::RefCounted.708" = type { %"class.base::RefCounted.709" }
%"class.base::RefCounted.709" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::Rotation" = type { %"class.blink::FloatPoint3D", double }
%"class.blink::FloatPoint3D" = type { float, float, float }
%class.scoped_refptr.710 = type { %"class.blink::ScaleTransformOperation"* }
%"class.blink::ScaleTransformOperation" = type <{ %"class.blink::TransformOperation.base", [4 x i8], double, double, double, i32, [4 x i8] }>
%class.scoped_refptr.711 = type { %"class.blink::TranslateTransformOperation"* }
%"class.blink::TranslateTransformOperation" = type <{ %"class.blink::TransformOperation.base", %"class.blink::Length", %"class.blink::Length", [4 x i8], double, i32, [4 x i8] }>
%class.scoped_refptr.712 = type { %"class.blink::StyleReflection"* }
%"class.blink::StyleReflection" = type { %"class.WTF::RefCounted.713", i32, %"class.blink::Length", %"class.blink::NinePieceImage" }
%"class.WTF::RefCounted.713" = type { %"class.base::RefCounted.714" }
%"class.base::RefCounted.714" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NinePieceImage" = type { %"class.blink::DataRef.715" }
%"class.blink::DataRef.715" = type { %class.scoped_refptr.716 }
%class.scoped_refptr.716 = type { %"class.blink::NinePieceImageData"* }
%"class.blink::NinePieceImageData" = type { %"class.WTF::RefCountedCopyable", i8, %"class.blink::Persistent.306", %"class.blink::LengthBox", %"class.blink::BorderImageLengthBox", %"class.blink::BorderImageLengthBox" }
%"class.WTF::RefCountedCopyable" = type { %"class.WTF::RefCounted.717" }
%"class.WTF::RefCounted.717" = type { %"class.base::RefCounted.718" }
%"class.base::RefCounted.718" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::BorderImageLengthBox" = type { %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength", %"class.blink::BorderImageLength" }
%"class.blink::BorderImageLength" = type <{ %"class.blink::Length", double, i32, [4 x i8] }>
%"class.blink::Persistent.734" = type { %"class.blink::PersistentBase.735" }
%"class.blink::PersistentBase.735" = type { %"class.blink::ShapeValue"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ShapeValue" = type <{ i32 (...)**, i32, [4 x i8], %class.scoped_refptr.704, %"class.blink::Member", i32, [4 x i8] }>
%"class.absl::optional.738" = type { %"class.absl::optional_internal::optional_data.739" }
%"class.absl::optional_internal::optional_data.739" = type { %"class.absl::optional_internal::optional_data_base.740" }
%"class.absl::optional_internal::optional_data_base.740" = type { %"class.absl::optional_internal::optional_data_dtor_base.741" }
%"class.absl::optional_internal::optional_data_dtor_base.741" = type { i8, [3 x i8], %union.anon.742 }
%union.anon.742 = type { %"class.blink::Length" }
%"struct.blink::StyleOffsetRotation" = type { float, i32 }
%"struct.blink::LengthPoint" = type { %"class.blink::Length", %"class.blink::Length" }
%"struct.cc::ScrollSnapType" = type { i8, i32, i32 }
%"struct.cc::ScrollSnapAlign" = type { i32, i32 }
%"class.blink::Persistent.719" = type { %"class.blink::PersistentBase.720" }
%"class.blink::PersistentBase.720" = type { %"class.blink::StyleFilterData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::StyleFilterData" = type { %"class.blink::FilterOperations" }
%"class.blink::FilterOperations" = type { %"class.blink::HeapVector.723" }
%"class.blink::HeapVector.723" = type { %"class.WTF::Vector.726" }
%"class.WTF::Vector.726" = type { %"class.WTF::VectorBuffer.727" }
%"class.WTF::VectorBuffer.727" = type { %"class.WTF::VectorBufferBase.728" }
%"class.WTF::VectorBufferBase.728" = type { %"class.blink::Member.729"*, i32, i32 }
%"class.blink::Member.729" = type { %"class.blink::MemberBase.730" }
%"class.blink::MemberBase.730" = type { %"class.blink::FilterOperation"* }
%"class.blink::FilterOperation" = type <{ i32 (...)**, i32, [4 x i8] }>
%"class.blink::DataRef.743" = type { %class.scoped_refptr.744 }
%class.scoped_refptr.744 = type { %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* }
%"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData" = type { %"class.WTF::RefCounted.745", %"class.blink::DataRef.747", %"class.blink::DataRef.751", %"class.blink::DataRef.760", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.std::__1::unique_ptr.779", %"class.std::__1::unique_ptr.790", %"class.std::__1::unique_ptr.823", %"class.std::__1::unique_ptr.834", %"class.std::__1::unique_ptr.845", %"class.WTF::Vector.851", %"class.blink::FillLayer", %"class.blink::NinePieceImage", %"class.blink::FloatSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", float, float, float, float, %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", i32 }
%"class.WTF::RefCounted.745" = type { %"class.base::RefCounted.746" }
%"class.base::RefCounted.746" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.747" = type { %class.scoped_refptr.748 }
%class.scoped_refptr.748 = type { %"class.blink::ComputedStyleBase::StyleMultiColData"* }
%"class.blink::ComputedStyleBase::StyleMultiColData" = type <{ %"class.WTF::RefCounted.749", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.749" = type { %"class.base::RefCounted.750" }
%"class.base::RefCounted.750" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.751" = type { %class.scoped_refptr.752 }
%class.scoped_refptr.752 = type { %"class.blink::ComputedStyleBase::StyleWillChangeData"* }
%"class.blink::ComputedStyleBase::StyleWillChangeData" = type <{ %"class.WTF::RefCounted.753", [4 x i8], %"class.WTF::Vector.755", i8, [7 x i8] }>
%"class.WTF::RefCounted.753" = type { %"class.base::RefCounted.754" }
%"class.base::RefCounted.754" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.755" = type { %"class.WTF::VectorBuffer.756" }
%"class.WTF::VectorBuffer.756" = type { %"class.WTF::VectorBufferBase.757" }
%"class.WTF::VectorBufferBase.757" = type { i32*, i32, i32 }
%"class.blink::DataRef.760" = type { %class.scoped_refptr.761 }
%class.scoped_refptr.761 = type { %"class.blink::ComputedStyleBase::StyleGridData"* }
%"class.blink::ComputedStyleBase::StyleGridData" = type <{ %"class.WTF::RefCounted.762", [4 x i8], %"class.WTF::HashMap.764", %"class.WTF::HashMap.764", %"class.WTF::HashMap.764", %"class.WTF::HashMap.764", %"class.WTF::HashMap.764", %"class.WTF::HashMap.764", %"class.WTF::HashMap.769", %"class.WTF::HashMap.769", %"class.WTF::HashMap.769", %"class.WTF::HashMap.769", %"class.WTF::HashMap.774", %"class.WTF::Vector.685", %"class.WTF::Vector.685", i64, i64, i64, i64, i8, [7 x i8] }>
%"class.WTF::RefCounted.762" = type { %"class.base::RefCounted.763" }
%"class.base::RefCounted.763" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::HashMap.764" = type { %"class.WTF::HashTable.765" }
%"class.WTF::HashTable.765" = type <{ %"struct.WTF::KeyValuePair.768"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.768" = type { %"class.WTF::String", %"class.WTF::Vector.4935" }
%"class.WTF::Vector.4935" = type { %"class.WTF::VectorBuffer.4936" }
%"class.WTF::VectorBuffer.4936" = type { %"class.WTF::VectorBufferBase.4937" }
%"class.WTF::VectorBufferBase.4937" = type { i64*, i32, i32 }
%"class.WTF::HashMap.769" = type { %"class.WTF::HashTable.770" }
%"class.WTF::HashTable.770" = type <{ %"struct.WTF::KeyValuePair.773"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.773" = type { i64, %"class.WTF::Vector.851" }
%"class.WTF::HashMap.774" = type { %"class.WTF::HashTable.775" }
%"class.WTF::HashTable.775" = type <{ %"struct.WTF::KeyValuePair.778"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.778" = type { %"class.WTF::String", %"struct.blink::GridArea" }
%"struct.blink::GridArea" = type { %"struct.blink::GridSpan", %"struct.blink::GridSpan" }
%"struct.blink::GridSpan" = type { i32, i32, i32 }
%"class.std::__1::unique_ptr.779" = type { %"class.std::__1::__compressed_pair.780" }
%"class.std::__1::__compressed_pair.780" = type { %"struct.std::__1::__compressed_pair_elem.781" }
%"struct.std::__1::__compressed_pair_elem.781" = type { %"class.blink::CounterDirectiveMap"* }
%"class.blink::CounterDirectiveMap" = type { %"class.WTF::HashMap.782" }
%"class.WTF::HashMap.782" = type { %"class.WTF::HashTable.783" }
%"class.WTF::HashTable.783" = type <{ %"struct.WTF::KeyValuePair.786"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.786" = type { %"class.WTF::AtomicString", %"class.blink::CounterDirectives" }
%"class.blink::CounterDirectives" = type { %"class.absl::optional.3367", %"class.absl::optional.3367", %"class.absl::optional.3367" }
%"class.absl::optional.3367" = type { %"class.absl::optional_internal::optional_data.3368" }
%"class.absl::optional_internal::optional_data.3368" = type { %"class.absl::optional_internal::optional_data_base.3369" }
%"class.absl::optional_internal::optional_data_base.3369" = type { %"class.absl::optional_internal::optional_data_dtor_base.3370" }
%"class.absl::optional_internal::optional_data_dtor_base.3370" = type { i8, %union.anon.3371 }
%union.anon.3371 = type { i32 }
%"class.std::__1::unique_ptr.790" = type { %"class.std::__1::__compressed_pair.791" }
%"class.std::__1::__compressed_pair.791" = type { %"struct.std::__1::__compressed_pair_elem.792" }
%"struct.std::__1::__compressed_pair_elem.792" = type { %"class.blink::CSSAnimationData"* }
%"class.blink::CSSAnimationData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.284", %"class.WTF::Vector.800", %"class.WTF::Vector.565", %"class.WTF::Vector.805", %"class.WTF::Vector.810", %"class.WTF::Vector.815" }
%"class.blink::CSSTimingData" = type { %"class.WTF::Vector.565", %"class.WTF::Vector.565", %"class.WTF::Vector.793" }
%"class.WTF::Vector.793" = type { %"class.WTF::VectorBuffer.794" }
%"class.WTF::VectorBuffer.794" = type { %"class.WTF::VectorBufferBase.795" }
%"class.WTF::VectorBufferBase.795" = type { %class.scoped_refptr.796*, i32, i32 }
%class.scoped_refptr.796 = type { %"class.blink::TimingFunction"* }
%"class.blink::TimingFunction" = type { i32 (...)**, %"class.WTF::ThreadSafeRefCounted", i32 }
%"class.WTF::ThreadSafeRefCounted" = type { %"class.base::RefCountedThreadSafe.797" }
%"class.base::RefCountedThreadSafe.797" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.800" = type { %"class.WTF::VectorBuffer.801" }
%"class.WTF::VectorBuffer.801" = type { %"class.WTF::VectorBufferBase.802" }
%"class.WTF::VectorBufferBase.802" = type { %"class.blink::StyleNameOrKeyword"*, i32, i32 }
%"class.blink::StyleNameOrKeyword" = type { i32, %"class.blink::StyleName" }
%"class.blink::StyleName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::Vector.565" = type { %"class.WTF::VectorBuffer.566" }
%"class.WTF::VectorBuffer.566" = type { %"class.WTF::VectorBufferBase.567" }
%"class.WTF::VectorBufferBase.567" = type { double*, i32, i32 }
%"class.WTF::Vector.805" = type { %"class.WTF::VectorBuffer.806" }
%"class.WTF::VectorBuffer.806" = type { %"class.WTF::VectorBufferBase.807" }
%"class.WTF::VectorBufferBase.807" = type { i32*, i32, i32 }
%"class.WTF::Vector.810" = type { %"class.WTF::VectorBuffer.811" }
%"class.WTF::VectorBuffer.811" = type { %"class.WTF::VectorBufferBase.812" }
%"class.WTF::VectorBufferBase.812" = type { i32*, i32, i32 }
%"class.WTF::Vector.815" = type { %"class.WTF::VectorBuffer.816" }
%"class.WTF::VectorBuffer.816" = type { %"class.WTF::VectorBufferBase.817" }
%"class.WTF::VectorBufferBase.817" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.823" = type { %"class.std::__1::__compressed_pair.824" }
%"class.std::__1::__compressed_pair.824" = type { %"struct.std::__1::__compressed_pair_elem.825" }
%"struct.std::__1::__compressed_pair_elem.825" = type { %"class.blink::CSSTransitionData"* }
%"class.blink::CSSTransitionData" = type { %"class.blink::CSSTimingData", %"class.WTF::Vector.826" }
%"class.WTF::Vector.826" = type { %"class.WTF::VectorBuffer.827" }
%"class.WTF::VectorBuffer.827" = type { %"class.WTF::VectorBufferBase.828" }
%"class.WTF::VectorBufferBase.828" = type { %"struct.blink::CSSTransitionData::TransitionProperty"*, i32, i32 }
%"struct.blink::CSSTransitionData::TransitionProperty" = type { i32, i32, %"class.WTF::AtomicString" }
%"class.std::__1::unique_ptr.834" = type { %"class.std::__1::__compressed_pair.835" }
%"class.std::__1::__compressed_pair.835" = type { %"struct.std::__1::__compressed_pair_elem.836" }
%"struct.std::__1::__compressed_pair_elem.836" = type { %"class.blink::PaintImages"* }
%"class.blink::PaintImages" = type { %"class.WTF::Vector.837" }
%"class.WTF::Vector.837" = type { %"class.WTF::VectorBuffer.838" }
%"class.WTF::VectorBuffer.838" = type { %"class.WTF::VectorBufferBase.839" }
%"class.WTF::VectorBufferBase.839" = type { %"class.blink::Persistent.306"*, i32, i32 }
%"class.std::__1::unique_ptr.845" = type { %"class.std::__1::__compressed_pair.846" }
%"class.std::__1::__compressed_pair.846" = type { %"struct.std::__1::__compressed_pair_elem.847" }
%"struct.std::__1::__compressed_pair_elem.847" = type { %"class.blink::StyleNonInheritedVariables"* }
%"class.blink::StyleNonInheritedVariables" = type { %"class.blink::StyleVariables" }
%"class.blink::StyleVariables" = type { %"class.WTF::HashMap", %"class.blink::Persistent" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4748 }
%class.scoped_refptr.4748 = type { %"class.blink::CSSVariableData"* }
%"class.blink::CSSVariableData" = type { %"class.WTF::RefCounted.4749", %"class.WTF::Vector.851", %"class.WTF::Vector.4751", %"class.WTF::String", i8, i8, i8, i8, %"class.WTF::String", %"class.WTF::TextEncoding" }
%"class.WTF::RefCounted.4749" = type { %"class.base::RefCounted.4750" }
%"class.base::RefCounted.4750" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.4751" = type { %"class.WTF::VectorBuffer.4752" }
%"class.WTF::VectorBuffer.4752" = type { %"class.WTF::VectorBufferBase.4753" }
%"class.WTF::VectorBufferBase.4753" = type { %"class.blink::CSSParserToken"*, i32, i32 }
%"class.blink::CSSParserToken" = type { i24, i32, i8*, %union.anon.4754 }
%union.anon.4754 = type { double }
%"class.WTF::TextEncoding" = type { i8* }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase.264" }
%"class.blink::PersistentBase.264" = type { %"class.blink::HeapHashMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.265" }
%"class.WTF::HashMap.265" = type { %"class.WTF::HashTable.266" }
%"class.WTF::HashTable.266" = type <{ %"struct.WTF::KeyValuePair.268"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.268" = type { %"class.WTF::AtomicString", %"class.blink::Member.596" }
%"class.blink::FillLayer" = type <{ %"class.blink::FillLayer"*, %"class.blink::Persistent.306", %"class.blink::Length", %"class.blink::Length", %"class.blink::LengthSize", [7 x i8], i8 }>
%"class.blink::LengthSize" = type { %"class.blink::Length", %"class.blink::Length" }
%"class.blink::TransformOperations" = type { %"class.WTF::Vector.856" }
%"class.WTF::Vector.856" = type { %"class.WTF::VectorBuffer.857" }
%"class.WTF::VectorBuffer.857" = type { %"class.WTF::VectorBufferBase.858" }
%"class.WTF::VectorBufferBase.858" = type { %class.scoped_refptr.859*, i32, i32 }
%class.scoped_refptr.859 = type { %"class.blink::TransformOperation"* }
%"class.blink::TransformOperation" = type <{ i32 (...)**, %"class.WTF::RefCounted.708", [4 x i8] }>
%"class.blink::Persistent.862" = type { %"class.blink::PersistentBase.863" }
%"class.blink::PersistentBase.863" = type { %"class.blink::ContentData"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::ContentData" = type { i32 (...)**, %"class.blink::Member.866" }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::ContentData"* }
%"class.blink::TransformOrigin" = type { %"class.blink::Length", %"class.blink::Length", float }
%"class.blink::StyleSelfAlignmentData" = type { i8, [3 x i8] }
%"class.blink::StyleContentAlignmentData" = type { i16, [2 x i8] }
%"class.blink::DataRef.868" = type { %class.scoped_refptr.869 }
%class.scoped_refptr.869 = type { %"class.blink::ComputedStyleBase::StyleSVGData"* }
%"class.blink::ComputedStyleBase::StyleSVGData" = type <{ %"class.WTF::RefCounted.870", [4 x i8], %"class.blink::DataRef.872", %"class.blink::DataRef.876", %"class.blink::DataRef.897", %"class.blink::DataRef.915", %"class.blink::DataRef.927", %"class.blink::DataRef.931", %class.scoped_refptr.901, i32, [4 x i8] }>
%"class.WTF::RefCounted.870" = type { %"class.base::RefCounted.871" }
%"class.base::RefCounted.871" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.872" = type { %class.scoped_refptr.873 }
%class.scoped_refptr.873 = type { %"class.blink::ComputedStyleBase::StyleMiscData"* }
%"class.blink::ComputedStyleBase::StyleMiscData" = type <{ %"class.WTF::RefCounted.874", %"class.blink::Length", float, %"class.blink::StyleColor", %"class.blink::StyleColor", i8, [3 x i8] }>
%"class.WTF::RefCounted.874" = type { %"class.base::RefCounted.875" }
%"class.base::RefCounted.875" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.876" = type { %class.scoped_refptr.877 }
%class.scoped_refptr.877 = type { %"class.blink::ComputedStyleBase::StyleGeometryData"* }
%"class.blink::ComputedStyleBase::StyleGeometryData" = type { %"class.WTF::RefCounted.878", %class.scoped_refptr.880, %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length" }
%"class.WTF::RefCounted.878" = type { %"class.base::RefCounted.879" }
%"class.base::RefCounted.879" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.880 = type { %"class.blink::StylePath"* }
%"class.blink::StylePath" = type { %"class.blink::BasicShape.base", %"class.std::__1::unique_ptr.881", %"class.std::__1::unique_ptr.887", float, i32 }
%"class.blink::BasicShape.base" = type <{ i32 (...)**, %"class.WTF::RefCounted.705" }>
%"class.std::__1::unique_ptr.881" = type { %"class.std::__1::__compressed_pair.882" }
%"class.std::__1::__compressed_pair.882" = type { %"struct.std::__1::__compressed_pair_elem.883" }
%"struct.std::__1::__compressed_pair_elem.883" = type { %"class.blink::SVGPathByteStream"* }
%"class.blink::SVGPathByteStream" = type opaque
%"class.std::__1::unique_ptr.887" = type { %"class.std::__1::__compressed_pair.888" }
%"class.std::__1::__compressed_pair.888" = type { %"struct.std::__1::__compressed_pair_elem.889" }
%"struct.std::__1::__compressed_pair_elem.889" = type { %"class.blink::Path"* }
%"class.blink::Path" = type { %class.SkPath }
%class.SkPath = type <{ %class.sk_sp.890, i32, %"struct.std::__1::atomic.46", %"struct.std::__1::atomic.46", i8, i8 }>
%class.sk_sp.890 = type { %class.SkPathRef* }
%class.SkPathRef = type <{ %class.SkNVRefCnt, %struct.SkRect, [4 x i8], %class.SkTDArray, %class.SkTDArray.891, %class.SkTDArray.892, i32, [4 x i8], %"class.SkIDChangeListener::List", i8, i8, i8, i8, i8, i8, i8, i8 }>
%class.SkNVRefCnt = type { %"struct.std::__1::atomic.41" }
%class.SkTDArray = type { %struct.SkPoint*, i32, i32 }
%struct.SkPoint = type { float, float }
%class.SkTDArray.891 = type { i8*, i32, i32 }
%class.SkTDArray.892 = type { float*, i32, i32 }
%"class.SkIDChangeListener::List" = type { %class.SkMutex, %class.SkTDArray.893 }
%class.SkMutex = type { %class.SkSemaphore }
%class.SkSemaphore = type { %"struct.std::__1::atomic.41", %class.SkOnce, %"struct.SkSemaphore::OSSemaphore"* }
%"struct.SkSemaphore::OSSemaphore" = type opaque
%class.SkTDArray.893 = type { %class.SkIDChangeListener**, i32, i32 }
%class.SkIDChangeListener = type { %class.SkRefCnt.base, %"struct.std::__1::atomic.238", [3 x i8] }
%"class.blink::DataRef.897" = type { %class.scoped_refptr.898 }
%class.scoped_refptr.898 = type { %"class.blink::ComputedStyleBase::StyleFillData"* }
%"class.blink::ComputedStyleBase::StyleFillData" = type { %"class.WTF::RefCounted.899", [4 x i8], %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", float, [4 x i8] }
%"class.WTF::RefCounted.899" = type { %"class.base::RefCounted.900" }
%"class.base::RefCounted.900" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::SVGPaint" = type <{ %class.scoped_refptr.901, %"class.blink::StyleColor", i32, [4 x i8] }>
%"class.blink::DataRef.915" = type { %class.scoped_refptr.916 }
%class.scoped_refptr.916 = type { %"class.blink::ComputedStyleBase::StyleStrokeData"* }
%"class.blink::ComputedStyleBase::StyleStrokeData" = type <{ %"class.WTF::RefCounted.917", [4 x i8], %class.scoped_refptr.919, %"struct.blink::SVGPaint", %"struct.blink::SVGPaint", %"class.blink::Length", %"class.blink::UnzoomedLength", float, float, i8, [7 x i8] }>
%"class.WTF::RefCounted.917" = type { %"class.base::RefCounted.918" }
%"class.base::RefCounted.918" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.919 = type { %"class.base::RefCountedData.920"* }
%"class.base::RefCountedData.920" = type { %"class.base::RefCountedThreadSafe.921", %"class.WTF::Vector.922" }
%"class.base::RefCountedThreadSafe.921" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.922" = type { %"class.WTF::VectorBuffer.923" }
%"class.WTF::VectorBuffer.923" = type { %"class.WTF::VectorBufferBase.924" }
%"class.WTF::VectorBufferBase.924" = type { %"class.blink::Length"*, i32, i32 }
%"class.blink::UnzoomedLength" = type { %"class.blink::Length" }
%"class.blink::DataRef.927" = type { %class.scoped_refptr.928 }
%class.scoped_refptr.928 = type { %"class.blink::ComputedStyleBase::StyleInheritedResourcesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedResourcesData" = type { %"class.WTF::RefCounted.929", %class.scoped_refptr.901, %class.scoped_refptr.901, %class.scoped_refptr.901 }
%"class.WTF::RefCounted.929" = type { %"class.base::RefCounted.930" }
%"class.base::RefCounted.930" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.931" = type { %class.scoped_refptr.932 }
%class.scoped_refptr.932 = type { %"class.blink::ComputedStyleBase::StyleStopData"* }
%"class.blink::ComputedStyleBase::StyleStopData" = type { %"class.WTF::RefCounted.933", float, %"class.blink::StyleColor" }
%"class.WTF::RefCounted.933" = type { %"class.base::RefCounted.934" }
%"class.base::RefCounted.934" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.901 = type { %"class.blink::StyleSVGResource"* }
%"class.blink::StyleSVGResource" = type { %"class.WTF::RefCounted.902", %"class.blink::Persistent.904", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.902" = type { %"class.base::RefCounted.903" }
%"class.base::RefCounted.903" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent.904" = type { %"class.blink::PersistentBase.905" }
%"class.blink::PersistentBase.905" = type { %"class.blink::SVGResource"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::DataRef.935" = type { %class.scoped_refptr.936 }
%class.scoped_refptr.936 = type { %"class.blink::ComputedStyleBase::StyleBoxData"* }
%"class.blink::ComputedStyleBase::StyleBoxData" = type <{ %"class.WTF::RefCounted.937", %"class.blink::StyleAspectRatio", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", i32, i8, [3 x i8] }>
%"class.WTF::RefCounted.937" = type { %"class.base::RefCounted.938" }
%"class.base::RefCounted.938" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::StyleAspectRatio" = type { i8, %"class.blink::FloatSize" }
%"class.blink::DataRef.939" = type { %class.scoped_refptr.940 }
%class.scoped_refptr.940 = type { %"class.blink::ComputedStyleBase::StyleBackgroundData"* }
%"class.blink::ComputedStyleBase::StyleBackgroundData" = type { %"class.WTF::RefCounted.941", [4 x i8], %"class.blink::FillLayer", %"class.blink::StyleColor" }
%"class.WTF::RefCounted.941" = type { %"class.base::RefCounted.942" }
%"class.base::RefCounted.942" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.943" = type { %class.scoped_refptr.944 }
%class.scoped_refptr.944 = type { %"class.blink::ComputedStyleBase::StyleSurroundData"* }
%"class.blink::ComputedStyleBase::StyleSurroundData" = type <{ %"class.WTF::RefCounted.945", [4 x i8], %"class.blink::NinePieceImage", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::LengthSize", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::Length", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::StyleColor", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, [6 x i8] }>
%"class.WTF::RefCounted.945" = type { %"class.base::RefCounted.946" }
%"class.base::RefCounted.946" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DataRef.947" = type { %class.scoped_refptr.948 }
%class.scoped_refptr.948 = type { %"class.blink::ComputedStyleBase::StyleInheritedVariablesData"* }
%"class.blink::ComputedStyleBase::StyleInheritedVariablesData" = type { %"class.WTF::RefCounted.949", %class.scoped_refptr.951 }
%"class.WTF::RefCounted.949" = type { %"class.base::RefCounted.950" }
%"class.base::RefCounted.950" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.951 = type { %"class.blink::StyleInheritedVariables"* }
%"class.blink::StyleInheritedVariables" = type { %"class.WTF::RefCounted.1216", %"class.blink::StyleVariables", %class.scoped_refptr.951 }
%"class.WTF::RefCounted.1216" = type { %"class.base::RefCounted.1217" }
%"class.base::RefCounted.1217" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::RefCounted.952" = type { %"class.base::RefCounted.953" }
%"class.base::RefCounted.953" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.954" = type { %"class.std::__1::__compressed_pair.955" }
%"class.std::__1::__compressed_pair.955" = type { %"struct.std::__1::__compressed_pair_elem.956" }
%"struct.std::__1::__compressed_pair_elem.956" = type { %"class.blink::StyleCachedData"* }
%"class.blink::StyleCachedData" = type { %"class.std::__1::unique_ptr.957" }
%"class.std::__1::unique_ptr.957" = type { %"class.std::__1::__compressed_pair.958" }
%"class.std::__1::__compressed_pair.958" = type { %"struct.std::__1::__compressed_pair_elem.959" }
%"struct.std::__1::__compressed_pair_elem.959" = type { %"class.WTF::Vector.960"* }
%"class.WTF::Vector.960" = type { %"class.WTF::VectorBuffer.4940" }
%"class.WTF::VectorBuffer.4940" = type { %"class.WTF::VectorBufferBase.4941", [32 x i8] }
%"class.WTF::VectorBufferBase.4941" = type { %class.scoped_refptr*, i32, i32 }
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.1367", %"class.std::__1::unique_ptr.1379" }
%"class.blink::HeapVector.1367" = type { %"class.WTF::Vector.1370" }
%"class.WTF::Vector.1370" = type { %"class.WTF::VectorBuffer.1371" }
%"class.WTF::VectorBuffer.1371" = type { %"class.WTF::VectorBufferBase.1372" }
%"class.WTF::VectorBufferBase.1372" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.343", %"class.WTF::Vector.1373" }
%"class.WTF::Vector.1373" = type { %"class.WTF::VectorBuffer.1374" }
%"class.WTF::VectorBuffer.1374" = type { %"class.WTF::VectorBufferBase.1375", [16 x i8] }
%"class.WTF::VectorBufferBase.1375" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.1379" = type { %"class.std::__1::__compressed_pair.1380" }
%"class.std::__1::__compressed_pair.1380" = type { %"struct.std::__1::__compressed_pair_elem.1381" }
%"struct.std::__1::__compressed_pair_elem.1381" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.1385" = type { %"class.blink::MemberBase.1386" }
%"class.blink::MemberBase.1386" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.1387" = type { %"class.blink::MemberBase.1388" }
%"class.blink::MemberBase.1388" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.1391", i8, [7 x i8] }>
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type { i32 (...)** }
%"class.blink::Member.1395" = type { %"class.blink::MemberBase.1396" }
%"class.blink::MemberBase.1396" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.459", i8, i8, [6 x i8] }>
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.506", %"class.WTF::HashMap.511", %class.scoped_refptr.516, %class.scoped_refptr.527, %class.scoped_refptr.526, %"class.WTF::Vector.528", %"class.WTF::Vector.528", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.506" = type { %"class.WTF::HashTable.507" }
%"class.WTF::HashTable.507" = type <{ %"struct.WTF::KeyValuePair.510"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.510" = type { %"class.WTF::AtomicString", %class.scoped_refptr.4944 }
%class.scoped_refptr.4944 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.517", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.523", %"union.blink::InvalidationSet::Backing.524", %"union.blink::InvalidationSet::Backing.525", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.517" = type { %"class.base::RefCounted.518" }
%"class.base::RefCounted.518" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.523" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.524" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.525" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.511" = type { %"class.WTF::HashTable.512" }
%"class.WTF::HashTable.512" = type <{ %"struct.WTF::KeyValuePair.515"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.515" = type opaque
%class.scoped_refptr.516 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.526, %class.scoped_refptr.526 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.517", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.523", %"union.blink::InvalidationSet::Backing.524", %"union.blink::InvalidationSet::Backing.525", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.527 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.526 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.WTF::Vector.528" = type { %"class.WTF::VectorBuffer.529" }
%"class.WTF::VectorBuffer.529" = type { %"class.WTF::VectorBufferBase.530" }
%"class.WTF::VectorBufferBase.530" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.463", %"class.blink::HeapHashMap.463", %"class.blink::HeapHashMap.463", %"class.blink::HeapHashMap.463", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::HeapVector.470", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.533", %"class.blink::HeapVector.541", %"class.blink::HeapVector.549", %"class.blink::HeapVector.572", %"class.blink::HeapVector.580", %"class.blink::HeapVector.588", %"class.blink::HeapVector.601", %"class.WTF::Vector.608", i32, %"class.blink::Member.632" }
%"class.blink::HeapHashMap.463" = type { %"class.WTF::HashMap.466" }
%"class.WTF::HashMap.466" = type { %"class.WTF::HashTable.467" }
%"class.WTF::HashTable.467" = type <{ %"struct.WTF::KeyValuePair.469"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.469" = type { %"class.WTF::AtomicString", %"class.blink::Member.4949" }
%"class.blink::Member.4949" = type { %"class.blink::MemberBase.4950" }
%"class.blink::MemberBase.4950" = type { %"class.blink::HeapVector.470"* }
%"class.blink::HeapVector.470" = type { %"class.WTF::Vector.473" }
%"class.WTF::Vector.473" = type { %"class.WTF::VectorBuffer.474" }
%"class.WTF::VectorBuffer.474" = type { %"class.WTF::VectorBufferBase.475" }
%"class.WTF::VectorBufferBase.475" = type { %"class.blink::Member.476"*, i32, i32 }
%"class.blink::Member.476" = type { %"class.blink::MemberBase.477" }
%"class.blink::MemberBase.477" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.480", i64, [4 x i32] }
%"class.blink::Member.480" = type { %"class.blink::MemberBase.481" }
%"class.blink::MemberBase.481" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.354", %"class.blink::Member.501" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.354" = type { %"class.blink::MemberBase.355" }
%"class.blink::MemberBase.355" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::Member.501" = type { %"class.blink::MemberBase.502" }
%"class.blink::MemberBase.502" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::HeapVector.533" = type { %"class.WTF::Vector.536" }
%"class.WTF::Vector.536" = type { %"class.WTF::VectorBuffer.537" }
%"class.WTF::VectorBuffer.537" = type { %"class.WTF::VectorBufferBase.538" }
%"class.WTF::VectorBufferBase.538" = type { %"class.blink::Member.539"*, i32, i32 }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.4945" }
%"class.blink::MemberBase.4945" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.541" = type { %"class.WTF::Vector.544" }
%"class.WTF::Vector.544" = type { %"class.WTF::VectorBuffer.545" }
%"class.WTF::VectorBuffer.545" = type { %"class.WTF::VectorBufferBase.546" }
%"class.WTF::VectorBufferBase.546" = type { %"class.blink::Member.547"*, i32, i32 }
%"class.blink::Member.547" = type { %"class.blink::MemberBase.4946" }
%"class.blink::MemberBase.4946" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354" }
%"class.blink::HeapVector.549" = type { %"class.WTF::Vector.552" }
%"class.WTF::Vector.552" = type { %"class.WTF::VectorBuffer.553" }
%"class.WTF::VectorBuffer.553" = type { %"class.WTF::VectorBufferBase.554" }
%"class.WTF::VectorBufferBase.554" = type { %"class.blink::Member.555"*, i32, i32 }
%"class.blink::Member.555" = type { %"class.blink::MemberBase.556" }
%"class.blink::MemberBase.556" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.557", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.557" = type { %"class.WTF::Vector.560" }
%"class.WTF::Vector.560" = type { %"class.WTF::VectorBuffer.561" }
%"class.WTF::VectorBuffer.561" = type { %"class.WTF::VectorBufferBase.562" }
%"class.WTF::VectorBufferBase.562" = type { %"class.blink::Member.563"*, i32, i32 }
%"class.blink::Member.563" = type { %"class.blink::MemberBase.564" }
%"class.blink::MemberBase.564" = type { %"class.blink::StyleRuleKeyframe"* }
%"class.blink::StyleRuleKeyframe" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.354", %"class.WTF::Vector.565" }
%"class.blink::HeapVector.572" = type { %"class.WTF::Vector.575" }
%"class.WTF::Vector.575" = type { %"class.WTF::VectorBuffer.576" }
%"class.WTF::VectorBuffer.576" = type { %"class.WTF::VectorBufferBase.577" }
%"class.WTF::VectorBufferBase.577" = type { %"class.blink::Member.578"*, i32, i32 }
%"class.blink::Member.578" = type { %"class.blink::MemberBase.4947" }
%"class.blink::MemberBase.4947" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.354" }
%"class.blink::HeapVector.580" = type { %"class.WTF::Vector.583" }
%"class.WTF::Vector.583" = type { %"class.WTF::VectorBuffer.584" }
%"class.WTF::VectorBuffer.584" = type { %"class.WTF::VectorBufferBase.585" }
%"class.WTF::VectorBufferBase.585" = type { %"class.blink::Member.586"*, i32, i32 }
%"class.blink::Member.586" = type { %"class.blink::MemberBase.4948" }
%"class.blink::MemberBase.4948" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", i32, [4 x i8] }>
%"class.blink::HeapVector.588" = type { %"class.WTF::Vector.591" }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::Member.594"*, i32, i32 }
%"class.blink::Member.594" = type { %"class.blink::MemberBase.595" }
%"class.blink::MemberBase.595" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596" }
%"class.blink::HeapVector.601" = type { %"class.WTF::Vector.604" }
%"class.WTF::Vector.604" = type { %"class.WTF::VectorBuffer.605" }
%"class.WTF::VectorBuffer.605" = type { %"class.WTF::VectorBufferBase.606" }
%"class.WTF::VectorBufferBase.606" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.480", i32, i32 }
%"class.WTF::Vector.608" = type { %"class.WTF::VectorBuffer.609" }
%"class.WTF::VectorBuffer.609" = type { %"class.WTF::VectorBufferBase.610" }
%"class.WTF::VectorBufferBase.610" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.611, i8, [7 x i8] }>
%class.scoped_refptr.611 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.612", %"class.WTF::Vector.614" }
%"class.WTF::RefCounted.612" = type { %"class.base::RefCounted.613" }
%"class.base::RefCounted.613" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.614" = type { %"class.WTF::VectorBuffer.615" }
%"class.WTF::VectorBuffer.615" = type { %"class.WTF::VectorBufferBase.616" }
%"class.WTF::VectorBufferBase.616" = type { %"class.std::__1::unique_ptr.617"*, i32, i32 }
%"class.std::__1::unique_ptr.617" = type { %"class.std::__1::__compressed_pair.618" }
%"class.std::__1::__compressed_pair.618" = type { %"struct.std::__1::__compressed_pair_elem.619" }
%"struct.std::__1::__compressed_pair_elem.619" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.620", %"class.WTF::String" }
%"class.WTF::Vector.620" = type { %"class.WTF::VectorBuffer.621" }
%"class.WTF::VectorBuffer.621" = type { %"class.WTF::VectorBufferBase.622" }
%"class.WTF::VectorBufferBase.622" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::Member.632" = type { %"class.blink::MemberBase.633" }
%"class.blink::MemberBase.633" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.636", %"class.blink::HeapHashMap.636", %"class.blink::HeapHashMap.636", %"class.blink::HeapHashMap.636" }
%"class.blink::HeapHashMap.636" = type { %"class.WTF::HashMap.639" }
%"class.WTF::HashMap.639" = type { %"class.WTF::HashTable.640" }
%"class.WTF::HashTable.640" = type <{ %"struct.WTF::KeyValuePair.642"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.642" = type opaque
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.1399" }
%"class.blink::HeapHashMap.1399" = type { %"class.WTF::HashMap.1402" }
%"class.WTF::HashMap.1402" = type { %"class.WTF::HashTable.1403" }
%"class.WTF::HashTable.1403" = type <{ %"struct.WTF::KeyValuePair.1405"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1405" = type { %"class.blink::Member.314", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.4951", %"class.WTF::Vector.4951" }
%"class.WTF::Vector.4951" = type { %"class.WTF::VectorBuffer.4952" }
%"class.WTF::VectorBuffer.4952" = type { %"class.WTF::VectorBufferBase.4953" }
%"class.WTF::VectorBufferBase.4953" = type { %class.scoped_refptr.4944*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member.318", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.1406" = type { %"class.WTF::HashSet.1409" }
%"class.WTF::HashSet.1409" = type { %"class.WTF::HashTable.1410" }
%"class.WTF::HashTable.1410" = type <{ %"class.blink::Member.343"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1412" = type { %"class.blink::MemberBase.1413" }
%"class.blink::MemberBase.1413" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type { %"class.blink::FontSelector", %"class.blink::WeakMember.1418", %"class.blink::Member.1419", %"class.blink::HeapHashSet.1454", %"class.blink::GenericFontFamilySettings" }
%"class.blink::FontSelector" = type { %"class.blink::FontCacheClient", %"class.blink::Member.1416" }
%"class.blink::FontCacheClient" = type { i32 (...)** }
%"class.blink::Member.1416" = type { %"class.blink::MemberBase.1417" }
%"class.blink::MemberBase.1417" = type { %"class.blink::FontFallbackMap"* }
%"class.blink::WeakMember.1418" = type { %"class.blink::MemberBase.313" }
%"class.blink::Member.1419" = type { %"class.blink::MemberBase.1420" }
%"class.blink::MemberBase.1420" = type { %"class.blink::FontFaceCache"* }
%"class.blink::FontFaceCache" = type <{ %"class.blink::HeapHashMap.1423", %"class.blink::HeapHashMap.1430", %"class.blink::HeapHashMap.1437", %"class.blink::HeapLinkedHashSet", i32, [4 x i8] }>
%"class.blink::HeapHashMap.1423" = type { %"class.WTF::HashMap.1426" }
%"class.WTF::HashMap.1426" = type { %"class.WTF::HashTable.1427" }
%"class.WTF::HashTable.1427" = type <{ %"struct.WTF::KeyValuePair.1429"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1429" = type opaque
%"class.blink::HeapHashMap.1430" = type { %"class.WTF::HashMap.1433" }
%"class.WTF::HashMap.1433" = type { %"class.WTF::HashTable.1434" }
%"class.WTF::HashTable.1434" = type <{ %"struct.WTF::KeyValuePair.1436"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1436" = type opaque
%"class.blink::HeapHashMap.1437" = type { %"class.WTF::HashMap.1440" }
%"class.WTF::HashMap.1440" = type { %"class.WTF::HashTable.1441" }
%"class.WTF::HashTable.1441" = type <{ %"struct.WTF::KeyValuePair.1443"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1443" = type opaque
%"class.blink::HeapLinkedHashSet" = type { %"class.WTF::LinkedHashSet" }
%"class.WTF::LinkedHashSet" = type { %"class.WTF::HashMap.1446", %"class.WTF::VectorBackedLinkedList" }
%"class.WTF::HashMap.1446" = type { %"class.WTF::HashTable.1447" }
%"class.WTF::HashTable.1447" = type <{ %"struct.WTF::KeyValuePair.1449"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1449" = type <{ %"class.blink::Member.4061", i32, [4 x i8] }>
%"class.blink::Member.4061" = type { %"class.blink::MemberBase.4062" }
%"class.blink::MemberBase.4062" = type { %"class.blink::FontFace"* }
%"class.blink::FontFace" = type { %"class.blink::ScriptWrappable", %"class.blink::ActiveScriptWrappable", %"class.blink::ExecutionContextClient", %"class.WTF::AtomicString", %"class.WTF::String", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", %"class.blink::Member.596", i32, %"class.blink::Member.4010", %"class.blink::Member.4012", %"class.blink::Member.4014", %"class.blink::HeapVector.4063" }
%"class.blink::ActiveScriptWrappable" = type { %"class.blink::ActiveScriptWrappableBase" }
%"class.blink::ActiveScriptWrappableBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::ExecutionContextClient" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.3971" }
%"class.blink::WeakMember.3971" = type { %"class.blink::MemberBase.1228" }
%"class.blink::Member.4010" = type { %"class.blink::MemberBase.4011" }
%"class.blink::MemberBase.4011" = type { %"class.blink::DOMException"* }
%"class.blink::DOMException" = type { %"class.blink::ScriptWrappable", i16, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::Member.4012" = type { %"class.blink::MemberBase.4013" }
%"class.blink::MemberBase.4013" = type { %"class.blink::ScriptPromiseProperty"* }
%"class.blink::ScriptPromiseProperty" = type opaque
%"class.blink::Member.4014" = type { %"class.blink::MemberBase.4015" }
%"class.blink::MemberBase.4015" = type { %"class.blink::CSSFontFace"* }
%"class.blink::CSSFontFace" = type { %class.scoped_refptr.4018, %"class.blink::HeapHashSet.4026", %"class.blink::HeapDeque", %"class.blink::Member.4061" }
%class.scoped_refptr.4018 = type { %"class.blink::UnicodeRangeSet"* }
%"class.blink::UnicodeRangeSet" = type { %"class.WTF::RefCounted.4019", %"class.WTF::Vector.4021" }
%"class.WTF::RefCounted.4019" = type { %"class.base::RefCounted.4020" }
%"class.base::RefCounted.4020" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.4021" = type { %"class.WTF::VectorBuffer.4022" }
%"class.WTF::VectorBuffer.4022" = type { %"class.WTF::VectorBufferBase.4023" }
%"class.WTF::VectorBufferBase.4023" = type { %"struct.blink::UnicodeRange"*, i32, i32 }
%"struct.blink::UnicodeRange" = type { i32, i32 }
%"class.blink::HeapHashSet.4026" = type { %"class.WTF::HashSet.4029" }
%"class.WTF::HashSet.4029" = type { %"class.WTF::HashTable.4030" }
%"class.WTF::HashTable.4030" = type <{ %"class.blink::Member.4032"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.4032" = type { %"class.blink::MemberBase.4910" }
%"class.blink::MemberBase.4910" = type { %"class.blink::CSSSegmentedFontFace"* }
%"class.blink::CSSSegmentedFontFace" = type { %"struct.blink::FontSelectionCapabilities", %"class.WTF::LruCache", %"class.blink::Member.4918", i64 }
%"struct.blink::FontSelectionCapabilities" = type <{ %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", %"struct.blink::FontSelectionRange", i8, i8 }>
%"struct.blink::FontSelectionRange" = type { %"class.blink::FontSelectionValue", %"class.blink::FontSelectionValue" }
%"class.WTF::LruCache" = type { %"class.WTF::HashMap.4913", %"class.WTF::DoublyLinkedList", i64 }
%"class.WTF::HashMap.4913" = type { %"class.WTF::HashTable.4914" }
%"class.WTF::HashTable.4914" = type <{ %"struct.WTF::KeyValuePair.4917"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4917" = type opaque
%"class.WTF::DoublyLinkedList" = type { %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"*, %"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey"* }
%"class.WTF::LruCache<blink::FontCacheKey, scoped_refptr<blink::SegmentedFontData>, blink::FontCacheKeyHash, WTF::HashTraits<blink::FontCacheKey> >::MappedListNodeWithKey" = type opaque
%"class.blink::Member.4918" = type { %"class.blink::MemberBase.4919" }
%"class.blink::MemberBase.4919" = type { %"class.blink::FontFaceList"* }
%"class.blink::FontFaceList" = type { %"class.blink::HeapListHashSet.4922", %"class.blink::HeapListHashSet.4922" }
%"class.blink::HeapListHashSet.4922" = type { %"class.WTF::ListHashSet.base.4932", [7 x i8] }
%"class.WTF::ListHashSet.base.4932" = type <{ %"class.WTF::HashTable.4927", %"class.blink::Member.4929", %"class.blink::Member.4929", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.4927" = type <{ %"class.blink::Member.4929"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.4929" = type { %"class.blink::MemberBase.4930" }
%"class.blink::MemberBase.4930" = type { %"class.blink::HeapListHashSetNode.4931"* }
%"class.blink::HeapListHashSetNode.4931" = type { %"class.blink::Member.4061", %"class.blink::Member.4929", %"class.blink::Member.4929" }
%"class.blink::HeapDeque" = type { %"class.WTF::Deque.4035" }
%"class.WTF::Deque.4035" = type { %"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<blink::Member<blink::CSSFontFaceSource>, 0, blink::HeapAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.4037" }
%"class.WTF::VectorBuffer.4037" = type { %"class.WTF::VectorBufferBase.4038" }
%"class.WTF::VectorBufferBase.4038" = type { %"class.blink::Member.4039"*, i32, i32 }
%"class.blink::Member.4039" = type { %"class.blink::MemberBase.4040" }
%"class.blink::MemberBase.4040" = type { %"class.blink::CSSFontFaceSource"* }
%"class.blink::CSSFontFaceSource" = type { i32 (...)**, %"class.WTF::HashMap.4043", %"class.WTF::LinkedHashSet.4048" }
%"class.WTF::HashMap.4043" = type { %"class.WTF::HashTable.4044" }
%"class.WTF::HashTable.4044" = type <{ %"struct.WTF::KeyValuePair.4047"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4047" = type opaque
%"class.WTF::LinkedHashSet.4048" = type { %"class.WTF::HashMap.4049", %"class.WTF::VectorBackedLinkedList.4054" }
%"class.WTF::HashMap.4049" = type { %"class.WTF::HashTable.4050" }
%"class.WTF::HashTable.4050" = type <{ %"struct.WTF::KeyValuePair.4053"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4053" = type opaque
%"class.WTF::VectorBackedLinkedList.4054" = type { %"class.WTF::Vector.4055", i32, i32 }
%"class.WTF::Vector.4055" = type { %"class.WTF::VectorBuffer.4056" }
%"class.WTF::VectorBuffer.4056" = type { %"class.WTF::VectorBufferBase.4057" }
%"class.WTF::VectorBufferBase.4057" = type { %"class.WTF::VectorBackedLinkedListNode.4058"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.4058" = type opaque
%"class.blink::HeapVector.4063" = type { %"class.WTF::Vector.4066" }
%"class.WTF::Vector.4066" = type { %"class.WTF::VectorBuffer.4067" }
%"class.WTF::VectorBuffer.4067" = type { %"class.WTF::VectorBufferBase.4068" }
%"class.WTF::VectorBufferBase.4068" = type { %"class.blink::Member.4069"*, i32, i32 }
%"class.blink::Member.4069" = type opaque
%"class.WTF::VectorBackedLinkedList" = type { %"class.WTF::Vector.1450", i32, i32 }
%"class.WTF::Vector.1450" = type { %"class.WTF::VectorBuffer.1451" }
%"class.WTF::VectorBuffer.1451" = type { %"class.WTF::VectorBufferBase.1452" }
%"class.WTF::VectorBufferBase.1452" = type { %"class.WTF::VectorBackedLinkedListNode"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode" = type { i32, i32, %"class.blink::Member.4061" }
%"class.blink::HeapHashSet.1454" = type { %"class.WTF::HashSet.1457" }
%"class.WTF::HashSet.1457" = type { %"class.WTF::HashTable.1458" }
%"class.WTF::HashTable.1458" = type <{ %"class.blink::WeakMember.1460"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1460" = type opaque
%"class.blink::GenericFontFamilySettings" = type { %"class.WTF::HashMap.1461", %"class.WTF::HashMap.1461", %"class.WTF::HashMap.1461", %"class.WTF::HashMap.1461", %"class.WTF::HashMap.1461", %"class.WTF::HashMap.1461", %"class.WTF::HashMap.1461", %"class.std::__1::unique_ptr.1466" }
%"class.WTF::HashMap.1461" = type { %"class.WTF::HashTable.1462" }
%"class.WTF::HashTable.1462" = type <{ %"struct.WTF::KeyValuePair.1465"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1465" = type opaque
%"class.std::__1::unique_ptr.1466" = type { %"class.std::__1::__compressed_pair.1467" }
%"class.std::__1::__compressed_pair.1467" = type { %"struct.std::__1::__compressed_pair_elem.1468" }
%"struct.std::__1::__compressed_pair_elem.1468" = type { %"class.WTF::Vector.1469"* }
%"class.WTF::Vector.1469" = type opaque
%"class.blink::HeapHashMap.1473" = type { %"class.WTF::HashMap.1476" }
%"class.WTF::HashMap.1476" = type { %"class.WTF::HashTable.1477" }
%"class.WTF::HashTable.1477" = type <{ %"struct.WTF::KeyValuePair.1479"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1479" = type opaque
%"class.blink::HeapHashMap.1480" = type { %"class.WTF::HashMap.1483" }
%"class.WTF::HashMap.1483" = type { %"class.WTF::HashTable.1484" }
%"class.WTF::HashTable.1484" = type <{ %"struct.WTF::KeyValuePair.1486"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1486" = type opaque
%"class.std::__1::unique_ptr.1487" = type { %"class.std::__1::__compressed_pair.1488" }
%"class.std::__1::__compressed_pair.1488" = type { %"struct.std::__1::__compressed_pair_elem.1489" }
%"struct.std::__1::__compressed_pair_elem.1489" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.1493" = type { %"class.WTF::Vector.1496" }
%"class.WTF::Vector.1496" = type { %"class.WTF::VectorBuffer.1497" }
%"class.WTF::VectorBuffer.1497" = type { %"class.WTF::VectorBufferBase.1498" }
%"class.WTF::VectorBufferBase.1498" = type { %"struct.std::__1::pair.1499"*, i32, i32 }
%"struct.std::__1::pair.1499" = type opaque
%"class.blink::HeapVector.1298" = type { %"class.WTF::Vector.1301" }
%"class.WTF::Vector.1301" = type { %"class.WTF::VectorBuffer.1302" }
%"class.WTF::VectorBuffer.1302" = type { %"class.WTF::VectorBufferBase.1303" }
%"class.WTF::VectorBufferBase.1303" = type { %"struct.std::__1::pair.1304"*, i32, i32 }
%"struct.std::__1::pair.1304" = type { %"class.blink::Member.389", %"class.blink::Member.459" }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.456" }
%"class.WTF::HashTable.456" = type <{ %"class.blink::WeakMember.458"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.458" = type { %"class.blink::MemberBase.390" }
%"class.blink::MemberBase.390" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.391", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.643, %"class.WTF::Vector.528", %"class.WTF::Vector.528", %"class.blink::Member.318", %"class.blink::Member.644", %"class.blink::HeapHashSet.648", %"class.blink::Member.326", %"class.WTF::HashSet.519", %"class.WTF::TextPosition", %"class.blink::Member.655", %"class.blink::HeapVector.657", %"class.blink::Member.664" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.391" = type { %"class.blink::MemberBase.392" }
%"class.blink::MemberBase.392" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.395", %"class.WTF::String", %"class.blink::HeapVector.397", %"class.blink::HeapVector.404", %"class.blink::HeapVector.412", %"class.WTF::HashMap.420", %"class.WTF::AtomicString", %"class.blink::WeakMember", i8, [7 x i8], %"class.blink::Member.426", %"class.blink::HeapHashSet", %"class.blink::HeapHashSet", %"class.blink::Member.459", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.397" = type { %"class.WTF::Vector.400" }
%"class.WTF::Vector.400" = type { %"class.WTF::VectorBuffer.401" }
%"class.WTF::VectorBuffer.401" = type { %"class.WTF::VectorBufferBase.402" }
%"class.WTF::VectorBufferBase.402" = type { %"class.blink::Member.395"*, i32, i32 }
%"class.blink::HeapVector.404" = type { %"class.WTF::Vector.407" }
%"class.WTF::Vector.407" = type { %"class.WTF::VectorBuffer.408" }
%"class.WTF::VectorBuffer.408" = type { %"class.WTF::VectorBufferBase.409" }
%"class.WTF::VectorBufferBase.409" = type { %"class.blink::Member.410"*, i32, i32 }
%"class.blink::Member.410" = type opaque
%"class.blink::HeapVector.412" = type { %"class.WTF::Vector.415" }
%"class.WTF::Vector.415" = type { %"class.WTF::VectorBuffer.416" }
%"class.WTF::VectorBuffer.416" = type { %"class.WTF::VectorBufferBase.417" }
%"class.WTF::VectorBufferBase.417" = type { %"class.blink::Member.418"*, i32, i32 }
%"class.blink::Member.418" = type opaque
%"class.WTF::HashMap.420" = type { %"class.WTF::HashTable.421" }
%"class.WTF::HashTable.421" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.424" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.blink::WeakMember" = type { %"class.blink::MemberBase.425" }
%"class.blink::MemberBase.425" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type opaque
%"class.blink::Member.426" = type { %"class.blink::MemberBase.427" }
%"class.blink::MemberBase.427" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.436, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.452", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.452" = type { %"class.blink::MemberBase.453" }
%"class.blink::MemberBase.453" = type { %"class.blink::Document"* }
%class.scoped_refptr.643 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::Member.644" = type { %"class.blink::MemberBase.645" }
%"class.blink::MemberBase.645" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.646" }
%"class.blink::Member.646" = type { %"class.blink::MemberBase.647" }
%"class.blink::MemberBase.647" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.648" = type { %"class.WTF::HashSet.651" }
%"class.WTF::HashSet.651" = type { %"class.WTF::HashTable.652" }
%"class.WTF::HashTable.652" = type <{ %"class.blink::WeakMember.654"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.654" = type { %"class.blink::MemberBase.321" }
%"class.WTF::HashSet.519" = type { %"class.WTF::HashTable.520" }
%"class.WTF::HashTable.520" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.blink::Member.655" = type { %"class.blink::MemberBase.656" }
%"class.blink::MemberBase.656" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.643, %"class.blink::Member.389", %"class.blink::Member.644" }
%"class.blink::HeapVector.657" = type { %"class.WTF::Vector.660" }
%"class.WTF::Vector.660" = type { %"class.WTF::VectorBuffer.661" }
%"class.WTF::VectorBuffer.661" = type { %"class.WTF::VectorBufferBase.662" }
%"class.WTF::VectorBufferBase.662" = type { %"class.blink::Member.644"*, i32, i32 }
%"class.blink::Member.664" = type { %"class.blink::MemberBase.665" }
%"class.blink::MemberBase.665" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1501" = type { %"class.WTF::HashMap.1504" }
%"class.WTF::HashMap.1504" = type { %"class.WTF::HashTable.1505" }
%"class.WTF::HashTable.1505" = type <{ %"struct.WTF::KeyValuePair.1507"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1507" = type { %"class.WTF::AtomicString", %"class.blink::Member.555" }
%"class.blink::Member.1508" = type { %"class.blink::MemberBase.1509" }
%"class.blink::MemberBase.1509" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.1510" = type { %"class.WTF::HashMap.1513" }
%"class.WTF::HashMap.1513" = type { %"class.WTF::HashTable.1514" }
%"class.WTF::HashTable.1514" = type <{ %"struct.WTF::KeyValuePair.1516"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1516" = type opaque
%class.scoped_refptr.1517 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.259 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type { %"class.WTF::RefCounted.260", %"class.blink::StyleVariables" }
%"class.WTF::RefCounted.260" = type { %"class.base::RefCounted.261" }
%"class.base::RefCounted.261" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.596" = type { %"class.blink::MemberBase.597" }
%"class.blink::MemberBase.597" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.1518" = type { %"class.WTF::HashSet.1521" }
%"class.WTF::HashSet.1521" = type { %"class.WTF::HashTable.1522" }
%"class.WTF::HashTable.1522" = type <{ %"class.blink::Member.1524"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1524" = type opaque
%"class.blink::Member.1525" = type { %"class.blink::MemberBase.1526" }
%"class.blink::MemberBase.1526" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type { %"class.blink::ScriptWrappable", %"class.blink::Member.320", %"class.blink::HeapVector.383" }
%"class.blink::Member.1527" = type { %"class.blink::MemberBase.1528" }
%"class.blink::MemberBase.1528" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.1529" = type { %"class.blink::MemberBase.1530" }
%"class.blink::MemberBase.1530" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.1531" = type { %"class.WTF::HashMap.1534" }
%"class.WTF::HashMap.1534" = type { %"class.WTF::HashTable.1535" }
%"class.WTF::HashTable.1535" = type <{ %"struct.WTF::KeyValuePair.1537"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1537" = type opaque
%"class.WTF::Vector.1538" = type { %"class.WTF::VectorBuffer.1539" }
%"class.WTF::VectorBuffer.1539" = type { %"class.WTF::VectorBufferBase.1540" }
%"class.WTF::VectorBufferBase.1540" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.1543" = type { %"class.blink::MemberBase.1544" }
%"class.blink::MemberBase.1544" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type { i32 (...)** }
%"class.blink::Member.1547" = type { %"class.blink::MemberBase.1548" }
%"class.blink::MemberBase.1548" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1549" = type { %"class.blink::MemberBase.1550" }
%"class.blink::MemberBase.1550" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1551" = type { %"class.WTF::Vector.1554" }
%"class.WTF::Vector.1554" = type { %"class.WTF::VectorBuffer.1555" }
%"class.WTF::VectorBuffer.1555" = type { %"class.WTF::VectorBufferBase.1556" }
%"class.WTF::VectorBufferBase.1556" = type { %"class.blink::Member.1557"*, i32, i32 }
%"class.blink::Member.1557" = type opaque
%"class.std::__1::unique_ptr.1559" = type { %"class.std::__1::__compressed_pair.1560" }
%"class.std::__1::__compressed_pair.1560" = type { %"struct.std::__1::__compressed_pair_elem.1561" }
%"struct.std::__1::__compressed_pair_elem.1561" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1565" = type { %"class.WTF::HashSet.1568" }
%"class.WTF::HashSet.1568" = type { %"class.WTF::HashTable.1569" }
%"class.WTF::HashTable.1569" = type <{ %"class.blink::WeakMember.1571"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1571" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1572", i32, [4 x i8] }>
%"class.WTF::Vector.1572" = type { %"class.WTF::VectorBuffer.1573" }
%"class.WTF::VectorBuffer.1573" = type { %"class.WTF::VectorBufferBase.1574" }
%"class.WTF::VectorBufferBase.1574" = type { %"struct.std::__1::pair.1575"*, i32, i32 }
%"struct.std::__1::pair.1575" = type opaque
%"class.blink::Member.1578" = type { %"class.blink::MemberBase.1579" }
%"class.blink::MemberBase.1579" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1580" = type { %"class.WTF::VectorBuffer.1581" }
%"class.WTF::VectorBuffer.1581" = type { %"class.WTF::VectorBufferBase.1582" }
%"class.WTF::VectorBufferBase.1582" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type <{ %"struct.blink::PhysicalRect", i8, [3 x i8] }>
%"struct.blink::PhysicalRect" = type { %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalSize" }
%"struct.blink::PhysicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1585" = type { %"class.std::__1::__compressed_pair.1586" }
%"class.std::__1::__compressed_pair.1586" = type { %"struct.std::__1::__compressed_pair_elem.1587" }
%"struct.std::__1::__compressed_pair_elem.1587" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type { %"class.blink::LayoutBlockFlow", %"class.blink::UntracedMember.2067", %"class.blink::LayoutUnit", %"class.blink::LayoutState"*, %"class.std::__1::unique_ptr.2284", %"class.std::__1::unique_ptr.2290", %"class.std::__1::unique_ptr.2296", %class.scoped_refptr.2063, %"class.blink::LayoutQuote"*, i32, i32, i8, i32, i32, %"class.blink::Persistent.2302", i32, i32, %"struct.blink::PhysicalRect" }
%"class.blink::LayoutBlockFlow" = type { %"class.blink::LayoutBlock.base", %"class.blink::LineBoxList", %"class.blink::Persistent.2026", %"class.std::__1::unique_ptr.2036" }
%"class.blink::LayoutBlock.base" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16 }>
%"class.blink::LayoutBox" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutRectOutsets", %"class.blink::LayoutRect", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"struct.blink::MinMaxSizes", %"class.blink::LayoutUnit", %class.scoped_refptr.1982, %"class.WTF::Vector.1983", %"class.std::__1::unique_ptr.1988", %"struct.blink::BoxLayoutExtraInput"*, %union.anon.2009, %"class.blink::Persistent.2010" }
%"class.blink::LayoutBoxModelObject" = type { %"class.blink::LayoutObject" }
%"class.blink::LayoutObject" = type { %"class.blink::ImageResourceObserver", %"class.blink::DisplayItemClient.base", i8, [2 x i8], %"class.blink::LayoutObject::LayoutObjectBitfields", %class.scoped_refptr, %"class.blink::UntracedMember", %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::FragmentData" }
%"class.blink::ImageResourceObserver" = type { i32 (...)** }
%"class.blink::DisplayItemClient.base" = type <{ i32 (...)**, i8 }>
%"class.blink::LayoutObject::LayoutObjectBitfields" = type { [12 x i8] }
%"class.blink::UntracedMember" = type { %"class.blink::MemberBase.967" }
%"class.blink::MemberBase.967" = type { %"class.blink::Node"* }
%"class.blink::FragmentData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.968" }
%"class.std::__1::unique_ptr.968" = type { %"class.std::__1::__compressed_pair.969" }
%"class.std::__1::__compressed_pair.969" = type { %"struct.std::__1::__compressed_pair_elem.970" }
%"struct.std::__1::__compressed_pair_elem.970" = type { %"struct.blink::FragmentData::RareData"* }
%"struct.blink::FragmentData::RareData" = type { %"class.std::__1::unique_ptr.971", i64, %"struct.blink::PhysicalOffset", %"class.blink::LayoutUnit", %"class.std::__1::unique_ptr.1081", %"class.std::__1::unique_ptr.1192", i8, %"class.absl::optional.1198", %class.scoped_refptr.1174, %"class.blink::CullRect", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1203" }
%"class.std::__1::unique_ptr.971" = type { %"class.std::__1::__compressed_pair.972" }
%"class.std::__1::__compressed_pair.972" = type { %"struct.std::__1::__compressed_pair_elem.973" }
%"struct.std::__1::__compressed_pair_elem.973" = type { %"class.blink::PaintLayer"* }
%"class.blink::PaintLayer" = type { %"class.blink::DisplayItemClient.base", [6 x i8], %"class.blink::LayoutBoxModelObject"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::PaintLayer"*, %"class.std::__1::unique_ptr.974", %"class.blink::Persistent.980", %"class.std::__1::unique_ptr.1040", %"class.blink::CullRect", %"class.std::__1::unique_ptr.1056" }
%"class.std::__1::unique_ptr.974" = type { %"class.std::__1::__compressed_pair.975" }
%"class.std::__1::__compressed_pair.975" = type { %"struct.std::__1::__compressed_pair_elem.976" }
%"struct.std::__1::__compressed_pair_elem.976" = type { %"struct.blink::PaintLayer::AncestorDependentCompositingInputs"* }
%"struct.blink::PaintLayer::AncestorDependentCompositingInputs" = type { %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"class.blink::LayoutBoxModelObject"* }
%"class.blink::Persistent.980" = type { %"class.blink::PersistentBase.981" }
%"class.blink::PersistentBase.981" = type { %"class.blink::PaintLayerScrollableArea"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerScrollableArea" = type { %"class.blink::ScrollableArea", %"class.blink::PaintLayer"*, i24, %"class.blink::IntPoint", %"struct.blink::PhysicalRect", [4 x i8], %"class.blink::PaintLayerScrollableArea::ScrollbarManager", %"class.blink::FloatSize", i8, %"class.blink::FloatSize", %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::LayoutCustomScrollbarPart"*, %"class.blink::ScrollAnchor", %"class.std::__1::unique_ptr.1007", i32, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::IntRect", %"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient", %"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient", %"class.absl::optional.1035" }
%"class.blink::ScrollableArea" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", %"class.blink::Member.984", %"class.blink::Member.986", %"class.blink::Member.988", %"class.blink::Member.990", %"class.WTF::Vector.992", i16, %class.scoped_refptr.999 }
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::MacScrollbarAnimator"* }
%"class.blink::MacScrollbarAnimator" = type opaque
%"class.blink::Member.986" = type { %"class.blink::MemberBase.987" }
%"class.blink::MemberBase.987" = type { %"class.blink::ScrollAnimatorBase"* }
%"class.blink::ScrollAnimatorBase" = type opaque
%"class.blink::Member.988" = type { %"class.blink::MemberBase.989" }
%"class.blink::MemberBase.989" = type { %"class.blink::ProgrammaticScrollAnimator"* }
%"class.blink::ProgrammaticScrollAnimator" = type opaque
%"class.blink::Member.990" = type { %"class.blink::MemberBase.991" }
%"class.blink::MemberBase.991" = type { %"class.blink::DisallowNewWrapper"* }
%"class.blink::DisallowNewWrapper" = type opaque
%class.scoped_refptr.999 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.blink::PaintLayerScrollableArea::ScrollbarManager" = type <{ %"class.blink::Member.1001", %"class.blink::Member.1003", %"class.blink::Member.1003", i8, [7 x i8] }>
%"class.blink::Member.1001" = type { %"class.blink::MemberBase.1002" }
%"class.blink::MemberBase.1002" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::Member.1003" = type { %"class.blink::MemberBase.1004" }
%"class.blink::MemberBase.1004" = type { %"class.blink::Scrollbar"* }
%"class.blink::Scrollbar" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1005", i32, %"class.blink::ScrollbarTheme"*, i32, i32, float, float, i32, i32, i32, float, i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", float, i8, i8, i8, i8, %"class.blink::IntRect", %"class.blink::Member.343" }
%"class.blink::Member.1005" = type { %"class.blink::MemberBase.1006" }
%"class.blink::MemberBase.1006" = type { %"class.blink::ScrollableArea"* }
%"class.blink::ScrollbarTheme" = type { i32 (...)** }
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1215", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.999, %"class.base::WeakPtrFactory" }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::WeakMember.1215" = type { %"class.blink::MemberBase.1004" }
%"class.blink::LayoutCustomScrollbarPart" = type opaque
%"class.blink::ScrollAnchor" = type <{ %"class.blink::Member.1005", %"class.blink::LayoutObject"*, i32, %"class.blink::LayoutPoint", [4 x i8], %"class.WTF::String", i8, i8, i8, [5 x i8] }>
%"class.blink::LayoutPoint" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.1007" = type { %"class.std::__1::__compressed_pair.1008" }
%"class.std::__1::__compressed_pair.1008" = type { %"struct.std::__1::__compressed_pair_elem.1009" }
%"struct.std::__1::__compressed_pair_elem.1009" = type { %"struct.blink::PaintLayerScrollableAreaRareData"* }
%"struct.blink::PaintLayerScrollableAreaRareData" = type { %"class.WTF::HashMap.1010", %"class.absl::optional.1015", i8, i8, %"class.WTF::Vector.1025" }
%"class.WTF::HashMap.1010" = type { %"class.WTF::HashTable.1011" }
%"class.WTF::HashTable.1011" = type <{ %"struct.WTF::KeyValuePair.1014"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1014" = type { %"class.blink::PaintLayer"*, %"struct.blink::StickyPositionScrollingConstraints" }
%"struct.blink::StickyPositionScrollingConstraints" = type { i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"class.blink::PaintLayer"*, %"class.blink::PaintLayer"*, %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset" }
%"class.absl::optional.1015" = type { %"class.absl::optional_internal::optional_data.1016" }
%"class.absl::optional_internal::optional_data.1016" = type { %"class.absl::optional_internal::optional_data_base.1017" }
%"class.absl::optional_internal::optional_data_base.1017" = type { %"class.absl::optional_internal::optional_data_dtor_base.1018" }
%"class.absl::optional_internal::optional_data_dtor_base.1018" = type { i8, %union.anon.1019 }
%union.anon.1019 = type { %"class.cc::SnapContainerData" }
%"class.cc::SnapContainerData" = type { %"struct.cc::ScrollSnapType", %"class.gfx::RectF", %"class.gfx::ScrollOffset", %"class.gfx::ScrollOffset", %"class.std::__1::vector", %"struct.cc::TargetSnapAreaElementIds" }
%"class.gfx::RectF" = type { %"class.gfx::PointF", %"class.gfx::SizeF" }
%"class.gfx::PointF" = type { float, float }
%"class.gfx::SizeF" = type { float, float }
%"class.gfx::ScrollOffset" = type { float, float }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.cc::SnapAreaData"*, %"struct.cc::SnapAreaData"*, %"class.std::__1::__compressed_pair.1020" }
%"struct.cc::SnapAreaData" = type { %"struct.cc::ScrollSnapAlign", %"class.gfx::RectF", i8, %"struct.cc::ElementId" }
%"struct.cc::ElementId" = type { i64 }
%"class.std::__1::__compressed_pair.1020" = type { %"struct.std::__1::__compressed_pair_elem.1021" }
%"struct.std::__1::__compressed_pair_elem.1021" = type { %"struct.cc::SnapAreaData"* }
%"struct.cc::TargetSnapAreaElementIds" = type { %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.WTF::Vector.1025" = type { %"class.WTF::VectorBuffer.1026" }
%"class.WTF::VectorBuffer.1026" = type { %"class.WTF::VectorBufferBase.1027" }
%"class.WTF::VectorBufferBase.1027" = type { %"class.blink::IntRect"*, i32, i32 }
%"class.blink::IntRect" = type { %"class.blink::IntPoint", %"class.blink::IntSize" }
%"class.blink::IntSize" = type { i32, i32 }
%"class.blink::PaintLayerScrollableArea::ScrollingBackgroundDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1033" }
%"class.blink::Member.1033" = type { %"class.blink::MemberBase.1034" }
%"class.blink::MemberBase.1034" = type { %"class.blink::PaintLayerScrollableArea"* }
%"class.blink::PaintLayerScrollableArea::ScrollCornerDisplayItemClient" = type { %"class.blink::DisplayItemClient.base", %"class.blink::Member.1033" }
%"class.absl::optional.1035" = type { %"class.absl::optional_internal::optional_data.1036" }
%"class.absl::optional_internal::optional_data.1036" = type { %"class.absl::optional_internal::optional_data_base.1037" }
%"class.absl::optional_internal::optional_data_base.1037" = type { %"class.absl::optional_internal::optional_data_dtor_base.1038" }
%"class.absl::optional_internal::optional_data_dtor_base.1038" = type { i8, %union.anon.1039 }
%union.anon.1039 = type { %"class.blink::HistoryItem::ViewState" }
%"class.blink::HistoryItem::ViewState" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", float, %"struct.blink::ScrollAnchorData" }
%"struct.blink::ScrollAnchorData" = type { %"class.blink::WebString", %"class.gfx::PointF", i64 }
%"class.blink::WebString" = type { %class.scoped_refptr.5 }
%"class.std::__1::unique_ptr.1040" = type { %"class.std::__1::__compressed_pair.1041" }
%"class.std::__1::__compressed_pair.1041" = type { %"struct.std::__1::__compressed_pair_elem.1042" }
%"struct.std::__1::__compressed_pair_elem.1042" = type { %"class.blink::PaintLayerStackingNode"* }
%"class.blink::PaintLayerStackingNode" = type <{ %"class.blink::PaintLayer"*, %"class.WTF::Vector.1043", %"class.WTF::Vector.1043", %"class.WTF::HashMap.1048", %"class.WTF::Vector.1043", i8, [7 x i8] }>
%"class.WTF::HashMap.1048" = type { %"class.WTF::HashTable.1049" }
%"class.WTF::HashTable.1049" = type <{ %"struct.WTF::KeyValuePair.1052"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1052" = type { %"class.blink::PaintLayer"*, %"class.WTF::Vector.1043" }
%"class.WTF::Vector.1043" = type { %"class.WTF::VectorBuffer.1044" }
%"class.WTF::VectorBuffer.1044" = type { %"class.WTF::VectorBufferBase.1045" }
%"class.WTF::VectorBufferBase.1045" = type { %"class.blink::PaintLayer"**, i32, i32 }
%"class.std::__1::unique_ptr.1056" = type { %"class.std::__1::__compressed_pair.1057" }
%"class.std::__1::__compressed_pair.1057" = type { %"struct.std::__1::__compressed_pair_elem.1058" }
%"struct.std::__1::__compressed_pair_elem.1058" = type { %"struct.blink::PaintLayerRareData"* }
%"struct.blink::PaintLayerRareData" = type { %"struct.blink::PhysicalOffset", %"class.std::__1::unique_ptr.1059", %"class.blink::PaintLayer"*, i64, i64, i64, i32, %"class.std::__1::unique_ptr.1065", %"class.blink::CompositedLayerMapping"*, %"class.blink::Persistent.1071", %"struct.blink::PhysicalOffset" }
%"class.std::__1::unique_ptr.1059" = type { %"class.std::__1::__compressed_pair.1060" }
%"class.std::__1::__compressed_pair.1060" = type { %"struct.std::__1::__compressed_pair_elem.1061" }
%"struct.std::__1::__compressed_pair_elem.1061" = type { %"class.blink::TransformationMatrix"* }
%"class.blink::TransformationMatrix" = type { %"struct.blink::TransformationMatrix::Matrix4" }
%"struct.blink::TransformationMatrix::Matrix4" = type { [4 x [4 x double]] }
%"class.std::__1::unique_ptr.1065" = type { %"class.std::__1::__compressed_pair.1066" }
%"class.std::__1::__compressed_pair.1066" = type { %"struct.std::__1::__compressed_pair_elem.1067" }
%"struct.std::__1::__compressed_pair_elem.1067" = type { %"class.blink::CompositedLayerMapping"* }
%"class.blink::CompositedLayerMapping" = type opaque
%"class.blink::Persistent.1071" = type { %"class.blink::PersistentBase.1072" }
%"class.blink::PersistentBase.1072" = type { %"class.blink::PaintLayerResourceInfo"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::PaintLayerResourceInfo" = type { %"class.blink::SVGResourceClient", %"class.blink::PaintLayer"*, %"class.blink::FloatRect" }
%"class.blink::SVGResourceClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1081" = type { %"class.std::__1::__compressed_pair.1082" }
%"class.std::__1::__compressed_pair.1082" = type { %"struct.std::__1::__compressed_pair_elem.1083" }
%"struct.std::__1::__compressed_pair_elem.1083" = type { %"class.blink::ObjectPaintProperties"* }
%"class.blink::ObjectPaintProperties" = type { %class.scoped_refptr.1084, %class.scoped_refptr.1084, %class.scoped_refptr.1084, %class.scoped_refptr.1084, %class.scoped_refptr.1084, %class.scoped_refptr.1084, %class.scoped_refptr.1119, %class.scoped_refptr.1123, %class.scoped_refptr.1124, %class.scoped_refptr.1124, %class.scoped_refptr.1124, %class.scoped_refptr.1124, %class.scoped_refptr.1124, %class.scoped_refptr.1124, %class.scoped_refptr.1164, %class.scoped_refptr.1165, %class.scoped_refptr.1165, %class.scoped_refptr.1165, %class.scoped_refptr.1165, %class.scoped_refptr.1165, %class.scoped_refptr.1165, %class.scoped_refptr.1165, %class.scoped_refptr.1165, %class.scoped_refptr.1188 }
%class.scoped_refptr.1084 = type { %"class.blink::TransformPaintPropertyNode"* }
%"class.blink::TransformPaintPropertyNode" = type { %"class.blink::TransformPaintPropertyNodeOrAlias", %"struct.blink::TransformPaintPropertyNode::State", %"class.std::__1::unique_ptr.1101" }
%"class.blink::TransformPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode" }
%"class.blink::PaintPropertyNode" = type { %"class.WTF::RefCounted.1085", i8, i8, %class.scoped_refptr.1087, i32, i32 }
%"class.WTF::RefCounted.1085" = type { %"class.base::RefCounted.1086" }
%"class.base::RefCounted.1086" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1087 = type { %"class.blink::TransformPaintPropertyNodeOrAlias"* }
%"struct.blink::TransformPaintPropertyNode::State" = type { %"class.blink::TransformPaintPropertyNode::TransformAndOrigin", %class.scoped_refptr.1094, %"struct.blink::TransformPaintPropertyNode::State::Flags", i8, i32, i64, %"struct.cc::ElementId", %"class.std::__1::unique_ptr.1095", %"struct.cc::ElementId" }
%"class.blink::TransformPaintPropertyNode::TransformAndOrigin" = type { %"class.blink::FloatSize", %"class.std::__1::unique_ptr.1088" }
%"class.std::__1::unique_ptr.1088" = type { %"class.std::__1::__compressed_pair.1089" }
%"class.std::__1::__compressed_pair.1089" = type { %"struct.std::__1::__compressed_pair_elem.1090" }
%"struct.std::__1::__compressed_pair_elem.1090" = type { %"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin"* }
%"struct.blink::TransformPaintPropertyNode::TransformAndOrigin::MatrixAndOrigin" = type <{ %"class.blink::TransformationMatrix", %"class.blink::FloatPoint3D", [4 x i8] }>
%class.scoped_refptr.1094 = type { %"class.blink::ScrollPaintPropertyNode"* }
%"class.blink::ScrollPaintPropertyNode" = type { %"class.blink::PaintPropertyNode.1120", %"struct.blink::ScrollPaintPropertyNode::State" }
%"class.blink::PaintPropertyNode.1120" = type { %"class.WTF::RefCounted.1121", i8, i8, %class.scoped_refptr.1094, i32, i32 }
%"class.WTF::RefCounted.1121" = type { %"class.base::RefCounted.1122" }
%"class.base::RefCounted.1122" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::ScrollPaintPropertyNode::State" = type { %"class.blink::IntRect", %"class.blink::IntSize", i8, i8, i8, i8, i32, %"struct.cc::ElementId", %"struct.cc::OverscrollBehavior", %"class.absl::optional.1015" }
%"struct.cc::OverscrollBehavior" = type { i32, i32 }
%"struct.blink::TransformPaintPropertyNode::State::Flags" = type { i8 }
%"class.std::__1::unique_ptr.1095" = type { %"class.std::__1::__compressed_pair.1096" }
%"class.std::__1::__compressed_pair.1096" = type { %"struct.std::__1::__compressed_pair_elem.1097" }
%"struct.std::__1::__compressed_pair_elem.1097" = type { %"struct.cc::StickyPositionConstraint"* }
%"struct.cc::StickyPositionConstraint" = type { i8, float, float, float, float, %"class.gfx::RectF", %"class.gfx::RectF", %"class.gfx::RectF", %"struct.cc::ElementId", %"struct.cc::ElementId" }
%"class.std::__1::unique_ptr.1101" = type { %"class.std::__1::__compressed_pair.1102" }
%"class.std::__1::__compressed_pair.1102" = type { %"struct.std::__1::__compressed_pair_elem.1103" }
%"struct.std::__1::__compressed_pair_elem.1103" = type { %"class.blink::GeometryMapperTransformCache"* }
%"class.blink::GeometryMapperTransformCache" = type <{ %"class.blink::FloatSize", %"class.blink::TransformPaintPropertyNode"*, %"class.std::__1::unique_ptr.1104", %"class.std::__1::unique_ptr.1110", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1104" = type { %"class.std::__1::__compressed_pair.1105" }
%"class.std::__1::__compressed_pair.1105" = type { %"struct.std::__1::__compressed_pair_elem.1106" }
%"struct.std::__1::__compressed_pair_elem.1106" = type { %"struct.blink::GeometryMapperTransformCache::PlaneRootTransform"* }
%"struct.blink::GeometryMapperTransformCache::PlaneRootTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", %"class.blink::TransformPaintPropertyNode"*, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.1110" = type { %"class.std::__1::__compressed_pair.1111" }
%"class.std::__1::__compressed_pair.1111" = type { %"struct.std::__1::__compressed_pair_elem.1112" }
%"struct.std::__1::__compressed_pair_elem.1112" = type { %"struct.blink::GeometryMapperTransformCache::ScreenTransform"* }
%"struct.blink::GeometryMapperTransformCache::ScreenTransform" = type <{ %"class.blink::TransformationMatrix", %"class.blink::TransformationMatrix", i8, i8, [6 x i8] }>
%class.scoped_refptr.1119 = type { %"class.blink::ScrollPaintPropertyNode"* }
%class.scoped_refptr.1123 = type { %"class.blink::TransformPaintPropertyNodeAlias"* }
%"class.blink::TransformPaintPropertyNodeAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1124 = type { %"class.blink::EffectPaintPropertyNode"* }
%"class.blink::EffectPaintPropertyNode" = type { %"class.blink::EffectPaintPropertyNodeOrAlias", %"struct.blink::EffectPaintPropertyNode::State" }
%"class.blink::EffectPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1125" }
%"class.blink::PaintPropertyNode.1125" = type { %"class.WTF::RefCounted.1126", i8, i8, %class.scoped_refptr.1128, i32, i32 }
%"class.WTF::RefCounted.1126" = type { %"class.base::RefCounted.1127" }
%"class.base::RefCounted.1127" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.1128 = type { %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"struct.blink::EffectPaintPropertyNode::State" = type <{ %class.scoped_refptr.1087, %class.scoped_refptr.1129, %"class.blink::CompositorFilterOperations", %"class.std::__1::unique_ptr.1151", float, i32, i64, %"struct.cc::ElementId", %"class.cc::DocumentTransitionSharedElementId", i8, i8, i8, [5 x i8] }>
%class.scoped_refptr.1129 = type { %"class.blink::ClipPaintPropertyNodeOrAlias"* }
%"class.blink::ClipPaintPropertyNodeOrAlias" = type { %"class.blink::PaintPropertyNode.1166" }
%"class.blink::PaintPropertyNode.1166" = type { %"class.WTF::RefCounted.1167", i8, i8, %class.scoped_refptr.1129, i32, i32 }
%"class.WTF::RefCounted.1167" = type { %"class.base::RefCounted.1168" }
%"class.base::RefCounted.1168" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CompositorFilterOperations" = type { %"class.cc::FilterOperations", %"class.blink::FloatRect" }
%"class.cc::FilterOperations" = type { %"class.std::__1::vector.1130" }
%"class.std::__1::vector.1130" = type { %"class.std::__1::__vector_base.1131" }
%"class.std::__1::__vector_base.1131" = type { %"class.cc::FilterOperation"*, %"class.cc::FilterOperation"*, %"class.std::__1::__compressed_pair.1146" }
%"class.cc::FilterOperation" = type <{ i32, float, float, %"class.gfx::Point", i32, %class.sk_sp.1132, [20 x float], i32, [4 x i8], %"class.std::__1::vector.1139", i32, [4 x i8] }>
%"class.gfx::Point" = type { i32, i32 }
%"class.std::__1::vector.1139" = type { %"class.std::__1::__vector_base.1140" }
%"class.std::__1::__vector_base.1140" = type { %"class.gfx::Rect"*, %"class.gfx::Rect"*, %"class.std::__1::__compressed_pair.1141" }
%"class.std::__1::__compressed_pair.1141" = type { %"struct.std::__1::__compressed_pair_elem.1142" }
%"struct.std::__1::__compressed_pair_elem.1142" = type { %"class.gfx::Rect"* }
%"class.std::__1::__compressed_pair.1146" = type { %"struct.std::__1::__compressed_pair_elem.1147" }
%"struct.std::__1::__compressed_pair_elem.1147" = type { %"class.cc::FilterOperation"* }
%"class.std::__1::unique_ptr.1151" = type { %"class.std::__1::__compressed_pair.1152" }
%"class.std::__1::__compressed_pair.1152" = type { %"struct.std::__1::__compressed_pair_elem.1153" }
%"struct.std::__1::__compressed_pair_elem.1153" = type { %"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo"* }
%"struct.blink::EffectPaintPropertyNode::BackdropFilterInfo" = type { %"class.blink::CompositorFilterOperations", %"class.gfx::RRectF", %"struct.cc::ElementId" }
%"class.gfx::RRectF" = type { %class.SkRRect }
%class.SkRRect = type { %struct.SkRect, [4 x %struct.SkPoint], i32 }
%"class.cc::DocumentTransitionSharedElementId" = type { i32, %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1157" }
%"class.std::__1::vector.1157" = type { %"class.std::__1::__vector_base.1158" }
%"class.std::__1::__vector_base.1158" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1159" }
%"class.std::__1::__compressed_pair.1159" = type { %"struct.std::__1::__compressed_pair_elem.1160" }
%"struct.std::__1::__compressed_pair_elem.1160" = type { i32* }
%class.scoped_refptr.1164 = type { %"class.blink::EffectPaintPropertyNodeAlias"* }
%"class.blink::EffectPaintPropertyNodeAlias" = type { %"class.blink::EffectPaintPropertyNodeOrAlias" }
%class.scoped_refptr.1165 = type { %"class.blink::ClipPaintPropertyNode"* }
%"class.blink::ClipPaintPropertyNode" = type { %"class.blink::ClipPaintPropertyNodeOrAlias", %"struct.blink::ClipPaintPropertyNode::State", %"class.std::__1::unique_ptr.1177" }
%"struct.blink::ClipPaintPropertyNode::State" = type { %class.scoped_refptr.1087, %"class.absl::optional.1169", %class.scoped_refptr.1174, %"class.blink::FloatRoundedRect", %"class.blink::FloatRoundedRect" }
%"class.absl::optional.1169" = type { %"class.absl::optional_internal::optional_data.1170" }
%"class.absl::optional_internal::optional_data.1170" = type { %"class.absl::optional_internal::optional_data_base.1171" }
%"class.absl::optional_internal::optional_data_base.1171" = type { %"class.absl::optional_internal::optional_data_dtor_base.1172" }
%"class.absl::optional_internal::optional_data_dtor_base.1172" = type { i8, [3 x i8], %union.anon.1173 }
%union.anon.1173 = type { %"class.blink::FloatClipRect" }
%"class.blink::FloatClipRect" = type <{ %"class.blink::FloatRect", i8, [3 x i8] }>
%"class.blink::FloatRoundedRect" = type { %"class.blink::FloatRect", %"class.blink::FloatRoundedRect::Radii" }
%"class.blink::FloatRoundedRect::Radii" = type { %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize", %"class.blink::FloatSize" }
%"class.std::__1::unique_ptr.1177" = type { %"class.std::__1::__compressed_pair.1178" }
%"class.std::__1::__compressed_pair.1178" = type { %"struct.std::__1::__compressed_pair_elem.1179" }
%"struct.std::__1::__compressed_pair_elem.1179" = type { %"class.blink::GeometryMapperClipCache"* }
%"class.blink::GeometryMapperClipCache" = type <{ %"class.WTF::Vector.1180", i32, [4 x i8] }>
%"class.WTF::Vector.1180" = type { %"class.WTF::VectorBuffer.1181" }
%"class.WTF::VectorBuffer.1181" = type { %"class.WTF::VectorBufferBase.1182" }
%"class.WTF::VectorBufferBase.1182" = type { %"struct.blink::GeometryMapperClipCache::ClipCacheEntry"*, i32, i32 }
%"struct.blink::GeometryMapperClipCache::ClipCacheEntry" = type { %"struct.blink::GeometryMapperClipCache::ClipAndTransform", %"class.blink::FloatClipRect", i8, [3 x i8] }
%"struct.blink::GeometryMapperClipCache::ClipAndTransform" = type <{ %"class.blink::ClipPaintPropertyNode"*, %"class.blink::TransformPaintPropertyNode"*, i32, [4 x i8] }>
%class.scoped_refptr.1188 = type { %"class.blink::ClipPaintPropertyNodeAlias"* }
%"class.blink::ClipPaintPropertyNodeAlias" = type { %"class.blink::ClipPaintPropertyNodeOrAlias" }
%"class.std::__1::unique_ptr.1192" = type { %"class.std::__1::__compressed_pair.1193" }
%"class.std::__1::__compressed_pair.1193" = type { %"struct.std::__1::__compressed_pair_elem.1194" }
%"struct.std::__1::__compressed_pair_elem.1194" = type { %"class.blink::RefCountedPropertyTreeState"* }
%"class.blink::RefCountedPropertyTreeState" = type { %class.scoped_refptr.1087, %class.scoped_refptr.1129, %class.scoped_refptr.1128 }
%"class.absl::optional.1198" = type { %"class.absl::optional_internal::optional_data.1199" }
%"class.absl::optional_internal::optional_data.1199" = type { %"class.absl::optional_internal::optional_data_base.1200" }
%"class.absl::optional_internal::optional_data_base.1200" = type { %"class.absl::optional_internal::optional_data_dtor_base.1201" }
%"class.absl::optional_internal::optional_data_dtor_base.1201" = type { i8, %union.anon.1202 }
%union.anon.1202 = type { %"class.blink::IntRect" }
%class.scoped_refptr.1174 = type { %"class.blink::RefCountedPath"* }
%"class.blink::RefCountedPath" = type { %"class.blink::Path", %"class.WTF::RefCounted.1175", [4 x i8] }
%"class.WTF::RefCounted.1175" = type { %"class.base::RefCounted.1176" }
%"class.base::RefCounted.1176" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::CullRect" = type { %"class.blink::IntRect" }
%"class.std::__1::unique_ptr.1203" = type { %"class.std::__1::__compressed_pair.1204" }
%"class.std::__1::__compressed_pair.1204" = type { %"struct.std::__1::__compressed_pair_elem.1205" }
%"struct.std::__1::__compressed_pair_elem.1205" = type { %"class.blink::FragmentData"* }
%"class.blink::LayoutRectOutsets" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutRect" = type { %"class.blink::LayoutPoint", %"class.blink::LayoutSize" }
%"class.blink::LayoutSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::MinMaxSizes" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.1982 = type { %"class.blink::NGLayoutResult"* }
%"class.blink::NGLayoutResult" = type { %"class.WTF::RefCounted.3358", [4 x i8], %"class.blink::NGConstraintSpace", %class.scoped_refptr.3507, %union.anon.3525, %"class.blink::LayoutUnit", %"struct.blink::NGLayoutResult::Bitfields" }
%"class.WTF::RefCounted.3358" = type { %"class.base::RefCounted.3359" }
%"class.base::RefCounted.3359" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::NGConstraintSpace" = type <{ %"struct.blink::LogicalSize", %union.anon.3360, %"class.blink::NGExclusionSpace", %"struct.blink::NGConstraintSpace::Bitfields", [4 x i8] }>
%"struct.blink::LogicalSize" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3360 = type { %"struct.blink::NGConstraintSpace::RareData"* }
%"struct.blink::NGConstraintSpace::RareData" = type { %"struct.blink::LogicalSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"struct.blink::NGBfcOffset", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i16, %union.anon.3361 }
%"struct.blink::NGBfcOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%union.anon.3361 = type { %"struct.blink::NGConstraintSpace::RareData::CustomData", [40 x i8] }
%"struct.blink::NGConstraintSpace::RareData::CustomData" = type { %class.scoped_refptr.3395 }
%class.scoped_refptr.3395 = type { %"class.blink::SerializedScriptValue"* }
%"class.blink::SerializedScriptValue" = type <{ %"class.WTF::ThreadSafeRefCounted.3396", [4 x i8], %"class.std::__1::unique_ptr.3398", i64, %"class.WTF::Vector.3402", %"class.WTF::Vector.3407", %"class.WTF::Vector.3413", %"class.WTF::Vector.3431", %class.scoped_refptr.1755, %"class.WTF::HashMap.3437", %"class.WTF::Vector.3442", %"class.WTF::Vector.3402", %"class.WTF::Vector.3448", %"class.WTF::HashMap.3454", i8, [7 x i8] }>
%"class.WTF::ThreadSafeRefCounted.3396" = type { %"class.base::RefCountedThreadSafe.3397" }
%"class.base::RefCountedThreadSafe.3397" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.3398" = type { %"class.std::__1::__compressed_pair.3399" }
%"class.std::__1::__compressed_pair.3399" = type { %"struct.std::__1::__compressed_pair_elem.3400" }
%"struct.std::__1::__compressed_pair_elem.3400" = type { i8* }
%"class.WTF::Vector.3407" = type { %"class.WTF::VectorBuffer.3408" }
%"class.WTF::VectorBuffer.3408" = type { %"class.WTF::VectorBufferBase.3409", [8 x i8] }
%"class.WTF::VectorBufferBase.3409" = type { %class.scoped_refptr.3410*, i32, i32 }
%class.scoped_refptr.3410 = type { %"class.blink::StaticBitmapImage"* }
%"class.blink::StaticBitmapImage" = type opaque
%"class.WTF::Vector.3413" = type { %"class.WTF::VectorBuffer.3414" }
%"class.WTF::VectorBuffer.3414" = type { %"class.WTF::VectorBufferBase.3415" }
%"class.WTF::VectorBufferBase.3415" = type { %"class.blink::SerializedScriptValue::Stream"*, i32, i32 }
%"class.blink::SerializedScriptValue::Stream" = type { %"class.blink::MessagePortChannel", %"class.std::__1::unique_ptr.3417", %"class.std::__1::unique_ptr.3423" }
%"class.blink::MessagePortChannel" = type { %class.scoped_refptr.3416 }
%class.scoped_refptr.3416 = type { %"class.blink::MessagePortChannel::State"* }
%"class.blink::MessagePortChannel::State" = type opaque
%"class.std::__1::unique_ptr.3417" = type { %"class.std::__1::__compressed_pair.3418" }
%"class.std::__1::__compressed_pair.3418" = type { %"struct.std::__1::__compressed_pair_elem.3419" }
%"struct.std::__1::__compressed_pair_elem.3419" = type { %"class.blink::ReadableStreamTransferringOptimizer"* }
%"class.blink::ReadableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3423" = type { %"class.std::__1::__compressed_pair.3424" }
%"class.std::__1::__compressed_pair.3424" = type { %"struct.std::__1::__compressed_pair_elem.3425" }
%"struct.std::__1::__compressed_pair_elem.3425" = type { %"class.blink::WritableStreamTransferringOptimizer"* }
%"class.blink::WritableStreamTransferringOptimizer" = type { i32 (...)** }
%"class.WTF::Vector.3431" = type { %"class.WTF::VectorBuffer.3432" }
%"class.WTF::VectorBuffer.3432" = type { %"class.WTF::VectorBufferBase.3433" }
%"class.WTF::VectorBufferBase.3433" = type { %"class.v8::CompiledWasmModule"*, i32, i32 }
%"class.v8::CompiledWasmModule" = type { %"class.std::__1::shared_ptr.3434", %"class.std::__1::basic_string" }
%"class.std::__1::shared_ptr.3434" = type { %"class.v8::internal::wasm::NativeModule"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::internal::wasm::NativeModule" = type opaque
%"class.std::__1::__shared_weak_count" = type { %"class.std::__1::__shared_count", i64 }
%"class.std::__1::__shared_count" = type { i32 (...)**, i64 }
%"class.WTF::HashMap.3437" = type { %"class.WTF::HashTable.3438" }
%"class.WTF::HashTable.3438" = type <{ %"struct.WTF::KeyValuePair.3441"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3441" = type opaque
%"class.WTF::Vector.3442" = type { %"class.WTF::VectorBuffer.3443" }
%"class.WTF::VectorBuffer.3443" = type { %"class.WTF::VectorBufferBase.3444" }
%"class.WTF::VectorBufferBase.3444" = type { %"class.mojo::ScopedHandleBase.3445"*, i32, i32 }
%"class.mojo::ScopedHandleBase.3445" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%"class.WTF::Vector.3402" = type { %"class.WTF::VectorBuffer.3403" }
%"class.WTF::VectorBuffer.3403" = type { %"class.WTF::VectorBufferBase.3404", [16 x i8] }
%"class.WTF::VectorBufferBase.3404" = type { %"class.blink::ArrayBufferContents"*, i32, i32 }
%"class.blink::ArrayBufferContents" = type { %"class.std::__1::shared_ptr" }
%"class.std::__1::shared_ptr" = type { %"class.v8::BackingStore"*, %"class.std::__1::__shared_weak_count"* }
%"class.v8::BackingStore" = type { i8 }
%"class.WTF::Vector.3448" = type { %"class.WTF::VectorBuffer.3449" }
%"class.WTF::VectorBuffer.3449" = type { %"class.WTF::VectorBufferBase.3450" }
%"class.WTF::VectorBufferBase.3450" = type { %"class.mojo::PendingRemote.3451"*, i32, i32 }
%"class.mojo::PendingRemote.3451" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.WTF::HashMap.3454" = type { %"class.WTF::HashTable.3455" }
%"class.WTF::HashTable.3455" = type <{ %"struct.WTF::KeyValuePair.3458"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3458" = type { i8**, %"class.std::__1::unique_ptr.4837" }
%"class.std::__1::unique_ptr.4837" = type { %"class.std::__1::__compressed_pair.4838" }
%"class.std::__1::__compressed_pair.4838" = type { %"struct.std::__1::__compressed_pair_elem.4839" }
%"struct.std::__1::__compressed_pair_elem.4839" = type { %"class.blink::SerializedScriptValue::Attachment"* }
%"class.blink::SerializedScriptValue::Attachment" = type { i32 (...)** }
%"class.blink::NGExclusionSpace" = type { %"class.std::__1::unique_ptr.3459" }
%"class.std::__1::unique_ptr.3459" = type { %"class.std::__1::__compressed_pair.3460" }
%"class.std::__1::__compressed_pair.3460" = type { %"struct.std::__1::__compressed_pair_elem.3461" }
%"struct.std::__1::__compressed_pair_elem.3461" = type { %"class.blink::NGExclusionSpaceInternal"* }
%"class.blink::NGExclusionSpaceInternal" = type { %class.scoped_refptr.3462, i32, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.std::__1::unique_ptr.3479" }
%class.scoped_refptr.3462 = type { %"class.base::RefCountedData.3463"* }
%"class.base::RefCountedData.3463" = type { %"class.base::RefCountedThreadSafe.3464", %"class.WTF::Vector.3465" }
%"class.base::RefCountedThreadSafe.3464" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.WTF::Vector.3465" = type { %"class.WTF::VectorBuffer.3466" }
%"class.WTF::VectorBuffer.3466" = type { %"class.WTF::VectorBufferBase.3467" }
%"class.WTF::VectorBufferBase.3467" = type { %class.scoped_refptr.3468*, i32, i32 }
%class.scoped_refptr.3468 = type { %"struct.blink::NGExclusion"* }
%"struct.blink::NGExclusion" = type { %"class.WTF::RefCounted.3469", %"struct.blink::NGBfcRect", i32, i8, %"class.std::__1::unique_ptr.3471" }
%"class.WTF::RefCounted.3469" = type { %"class.base::RefCounted.3470" }
%"class.base::RefCounted.3470" = type { %"class.base::subtle::RefCountedBase" }
%"struct.blink::NGBfcRect" = type { %"struct.blink::NGBfcOffset", %"struct.blink::NGBfcOffset" }
%"class.std::__1::unique_ptr.3471" = type { %"class.std::__1::__compressed_pair.3472" }
%"class.std::__1::__compressed_pair.3472" = type { %"struct.std::__1::__compressed_pair_elem.3473" }
%"struct.std::__1::__compressed_pair_elem.3473" = type { %"struct.blink::NGExclusionShapeData"* }
%"struct.blink::NGExclusionShapeData" = type { %"class.blink::LayoutBox"*, %"struct.blink::NGBoxStrut", %"struct.blink::NGBoxStrut" }
%"struct.blink::NGBoxStrut" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.3479" = type { %"class.std::__1::__compressed_pair.3480" }
%"class.std::__1::__compressed_pair.3480" = type { %"struct.std::__1::__compressed_pair_elem.3481" }
%"struct.std::__1::__compressed_pair_elem.3481" = type { %"struct.blink::NGExclusionSpaceInternal::DerivedGeometry"* }
%"struct.blink::NGExclusionSpaceInternal::DerivedGeometry" = type <{ %"class.WTF::Vector.3482", %"class.WTF::Vector.3495", %"class.blink::LayoutUnit", i8, [3 x i8] }>
%"class.WTF::Vector.3482" = type { %"class.WTF::VectorBuffer.3483" }
%"class.WTF::VectorBuffer.3483" = type { %"class.WTF::VectorBufferBase.3484", [320 x i8] }
%"class.WTF::VectorBufferBase.3484" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelf"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelf" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", [4 x i8], %"class.WTF::Vector.3485", %"class.WTF::Vector.3485", %class.scoped_refptr.3490, i8, [7 x i8] }>
%"class.WTF::Vector.3485" = type { %"class.WTF::VectorBuffer.3486" }
%"class.WTF::VectorBuffer.3486" = type { %"class.WTF::VectorBufferBase.3487", [8 x i8] }
%"class.WTF::VectorBufferBase.3487" = type { %"struct.blink::NGExclusionSpaceInternal::NGShelfEdge"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGShelfEdge" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%class.scoped_refptr.3490 = type { %"class.blink::NGShapeExclusions"* }
%"class.blink::NGShapeExclusions" = type { %"class.WTF::RefCounted.3491", %"class.WTF::Vector.3465", %"class.WTF::Vector.3465" }
%"class.WTF::RefCounted.3491" = type { %"class.base::RefCounted.3492" }
%"class.base::RefCounted.3492" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3495" = type { %"class.WTF::VectorBuffer.3496" }
%"class.WTF::VectorBuffer.3496" = type { %"class.WTF::VectorBufferBase.3497", [288 x i8] }
%"class.WTF::VectorBufferBase.3497" = type { %"struct.blink::NGExclusionSpaceInternal::NGClosedArea"*, i32, i32 }
%"struct.blink::NGExclusionSpaceInternal::NGClosedArea" = type { %"struct.blink::NGLayoutOpportunity", %"class.WTF::Vector.3485", %"class.WTF::Vector.3485" }
%"struct.blink::NGLayoutOpportunity" = type { %"struct.blink::NGBfcRect", %class.scoped_refptr.3498 }
%class.scoped_refptr.3498 = type { %"class.blink::NGShapeExclusions"* }
%"struct.blink::NGConstraintSpace::Bitfields" = type { i32 }
%class.scoped_refptr.3507 = type { %"class.blink::NGPhysicalFragment"* }
%"class.blink::NGPhysicalFragment" = type { %"class.WTF::RefCounted.3508", %"class.blink::LayoutObject"*, %"struct.blink::PhysicalSize", i24, %class.scoped_refptr.3510, %"class.std::__1::unique_ptr.3513" }
%"class.WTF::RefCounted.3508" = type { %"class.base::RefCounted.3509" }
%"class.base::RefCounted.3509" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.3510 = type { %"class.blink::NGBreakToken"* }
%"class.blink::NGBreakToken" = type <{ i32 (...)**, %"class.WTF::RefCounted.3511", [4 x i8], %"class.blink::LayoutBox"*, i16, [6 x i8] }>
%"class.WTF::RefCounted.3511" = type { %"class.base::RefCounted.3512" }
%"class.base::RefCounted.3512" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr.3513" = type { %"class.std::__1::__compressed_pair.3514" }
%"class.std::__1::__compressed_pair.3514" = type { %"struct.std::__1::__compressed_pair_elem.3515" }
%"struct.std::__1::__compressed_pair_elem.3515" = type { %"class.WTF::Vector.3516"* }
%"class.WTF::Vector.3516" = type { %"class.WTF::VectorBuffer.3517" }
%"class.WTF::VectorBuffer.3517" = type { %"class.WTF::VectorBufferBase.3518" }
%"class.WTF::VectorBufferBase.3518" = type { %"struct.blink::NGPhysicalOutOfFlowPositionedNode"*, i32, i32 }
%"struct.blink::NGPhysicalOutOfFlowPositionedNode" = type { %"class.blink::LayoutBox"*, %"struct.blink::PhysicalOffset", i8, %"class.blink::LayoutInline"* }
%"class.blink::LayoutInline" = type { %"class.blink::LayoutBoxModelObject", %"class.blink::LayoutObjectChildList", %union.anon.3519 }
%union.anon.3519 = type { %"class.blink::LineBoxList" }
%union.anon.3525 = type { %"struct.blink::NGLayoutResult::RareData"* }
%"struct.blink::NGLayoutResult::RareData" = type { %"class.blink::LayoutUnit", %"class.absl::optional.3362", %class.scoped_refptr.3526, i32, %"struct.blink::LogicalOffset", %"struct.blink::NGMarginStrut", [4 x i8], %"class.blink::NGBlockNode", %union.anon.3527, %"class.blink::NGExclusionSpace", %class.scoped_refptr.3395, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i32, i32, %"class.std::__1::unique_ptr.3528", %"class.absl::optional.3544" }
%"class.absl::optional.3362" = type { %"class.absl::optional_internal::optional_data.3363" }
%"class.absl::optional_internal::optional_data.3363" = type { %"class.absl::optional_internal::optional_data_base.3364" }
%"class.absl::optional_internal::optional_data_base.3364" = type { %"class.absl::optional_internal::optional_data_dtor_base.3365" }
%"class.absl::optional_internal::optional_data_dtor_base.3365" = type { i8, %union.anon.3366 }
%union.anon.3366 = type { %"class.blink::LayoutUnit" }
%class.scoped_refptr.3526 = type { %"class.blink::NGEarlyBreak"* }
%"class.blink::NGEarlyBreak" = type <{ %"class.WTF::RefCounted.3549", [4 x i8], %union.anon.3551, %class.scoped_refptr.3526, i32, [4 x i8] }>
%"class.WTF::RefCounted.3549" = type { %"class.base::RefCounted.3550" }
%"class.base::RefCounted.3550" = type { %"class.base::subtle::RefCountedBase" }
%union.anon.3551 = type { %"class.blink::LayoutBox"* }
%"struct.blink::LogicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"struct.blink::NGMarginStrut" = type <{ %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, i8, [2 x i8] }>
%"class.blink::NGBlockNode" = type { %"class.blink::NGLayoutInputNode.base", [7 x i8] }
%"class.blink::NGLayoutInputNode.base" = type <{ %"class.blink::LayoutBox"*, i8 }>
%union.anon.3527 = type { %"class.blink::LayoutUnit" }
%"class.std::__1::unique_ptr.3528" = type { %"class.std::__1::__compressed_pair.3529" }
%"class.std::__1::__compressed_pair.3529" = type { %"struct.std::__1::__compressed_pair_elem.3530" }
%"struct.std::__1::__compressed_pair_elem.3530" = type { %"struct.blink::NGGridData"* }
%"struct.blink::NGGridData" = type { i32, i32, i32, i32, %"struct.blink::NGGridData::TrackCollectionGeometry", %"struct.blink::NGGridData::TrackCollectionGeometry" }
%"struct.blink::NGGridData::TrackCollectionGeometry" = type { %"class.WTF::Vector.3531", %"class.WTF::Vector.3536", %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.3531" = type { %"class.WTF::VectorBuffer.3532" }
%"class.WTF::VectorBuffer.3532" = type { %"class.WTF::VectorBufferBase.3533" }
%"class.WTF::VectorBufferBase.3533" = type { %"struct.blink::NGGridData::SetData"*, i32, i32 }
%"struct.blink::NGGridData::SetData" = type { %"class.blink::LayoutUnit", i32 }
%"class.WTF::Vector.3536" = type { %"class.WTF::VectorBuffer.3537" }
%"class.WTF::VectorBuffer.3537" = type { %"class.WTF::VectorBufferBase.3538" }
%"class.WTF::VectorBufferBase.3538" = type { %"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range"*, i32, i32 }
%"struct.blink::NGGridLayoutAlgorithmTrackCollection::Range" = type <{ i32, i32, i32, i32, %"struct.blink::TrackSpanProperties", [3 x i8] }>
%"struct.blink::TrackSpanProperties" = type { i8 }
%"class.absl::optional.3544" = type { %"class.absl::optional_internal::optional_data.3545" }
%"class.absl::optional_internal::optional_data.3545" = type { %"class.absl::optional_internal::optional_data_base.3546" }
%"class.absl::optional_internal::optional_data_base.3546" = type { %"class.absl::optional_internal::optional_data_dtor_base.3547" }
%"class.absl::optional_internal::optional_data_dtor_base.3547" = type { i8, %union.anon.3548 }
%union.anon.3548 = type { %"struct.blink::NGLayoutResult::MathData" }
%"struct.blink::NGLayoutResult::MathData" = type { %"class.blink::LayoutUnit" }
%"struct.blink::NGLayoutResult::Bitfields" = type { i32 }
%"class.WTF::Vector.1983" = type { %"class.WTF::VectorBuffer.1984" }
%"class.WTF::VectorBuffer.1984" = type { %"class.WTF::VectorBufferBase.1985", [8 x i8] }
%"class.WTF::VectorBufferBase.1985" = type { %class.scoped_refptr.1982*, i32, i32 }
%"class.std::__1::unique_ptr.1988" = type { %"class.std::__1::__compressed_pair.1989" }
%"class.std::__1::__compressed_pair.1989" = type { %"struct.std::__1::__compressed_pair_elem.1990" }
%"struct.std::__1::__compressed_pair_elem.1990" = type { %"struct.blink::BoxOverflowModel"* }
%"struct.blink::BoxOverflowModel" = type { %"class.absl::optional.1991", %"class.absl::optional.1996", %"class.absl::optional.2001" }
%"class.absl::optional.1991" = type { %"class.absl::optional_internal::optional_data.1992" }
%"class.absl::optional_internal::optional_data.1992" = type { %"class.absl::optional_internal::optional_data_base.1993" }
%"class.absl::optional_internal::optional_data_base.1993" = type { %"class.absl::optional_internal::optional_data_dtor_base.1994" }
%"class.absl::optional_internal::optional_data_dtor_base.1994" = type { i8, %union.anon.1995 }
%union.anon.1995 = type { %"class.blink::BoxLayoutOverflowModel" }
%"class.blink::BoxLayoutOverflowModel" = type { %"class.blink::LayoutRect", %"class.blink::LayoutUnit" }
%"class.absl::optional.1996" = type { %"class.absl::optional_internal::optional_data.1997" }
%"class.absl::optional_internal::optional_data.1997" = type { %"class.absl::optional_internal::optional_data_base.1998" }
%"class.absl::optional_internal::optional_data_base.1998" = type { %"class.absl::optional_internal::optional_data_dtor_base.1999" }
%"class.absl::optional_internal::optional_data_dtor_base.1999" = type { i8, [3 x i8], %union.anon.2000 }
%union.anon.2000 = type { %"class.blink::BoxVisualOverflowModel" }
%"class.blink::BoxVisualOverflowModel" = type <{ %"class.blink::LayoutRect", %"class.blink::LayoutRect", i8, [3 x i8] }>
%"class.absl::optional.2001" = type { %"class.absl::optional_internal::optional_data.2002" }
%"class.absl::optional_internal::optional_data.2002" = type { %"class.absl::optional_internal::optional_data_base.2003" }
%"class.absl::optional_internal::optional_data_base.2003" = type { %"class.absl::optional_internal::optional_data_dtor_base.2004" }
%"class.absl::optional_internal::optional_data_dtor_base.2004" = type { i8, %union.anon.2005 }
%union.anon.2005 = type { %"struct.blink::BoxOverflowModel::PreviousOverflowData" }
%"struct.blink::BoxOverflowModel::PreviousOverflowData" = type { %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect", %"struct.blink::PhysicalRect" }
%"struct.blink::BoxLayoutExtraInput" = type opaque
%union.anon.2009 = type { %"class.blink::InlineBox"* }
%"class.blink::InlineBox" = type { %"class.blink::DisplayItemClient.base", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::LineLayoutItem", %"class.blink::LayoutPoint", %"class.blink::LayoutUnit", %"class.blink::InlineBox::InlineBoxBitfields" }
%"class.blink::InlineFlowBox" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1966", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1966" = type { %"class.std::__1::__compressed_pair.1967" }
%"class.std::__1::__compressed_pair.1967" = type { %"struct.std::__1::__compressed_pair_elem.1968" }
%"struct.std::__1::__compressed_pair_elem.1968" = type { %"struct.blink::SimpleOverflowModel"* }
%"struct.blink::SimpleOverflowModel" = type { %"class.absl::optional.1969", %"class.absl::optional.1974" }
%"class.absl::optional.1969" = type { %"class.absl::optional_internal::optional_data.1970" }
%"class.absl::optional_internal::optional_data.1970" = type { %"class.absl::optional_internal::optional_data_base.1971" }
%"class.absl::optional_internal::optional_data_base.1971" = type { %"class.absl::optional_internal::optional_data_dtor_base.1972" }
%"class.absl::optional_internal::optional_data_dtor_base.1972" = type { i8, %union.anon.1973 }
%union.anon.1973 = type { %"class.blink::SimpleLayoutOverflowModel" }
%"class.blink::SimpleLayoutOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.absl::optional.1974" = type { %"class.absl::optional_internal::optional_data.1975" }
%"class.absl::optional_internal::optional_data.1975" = type { %"class.absl::optional_internal::optional_data_base.1976" }
%"class.absl::optional_internal::optional_data_base.1976" = type { %"class.absl::optional_internal::optional_data_dtor_base.1977" }
%"class.absl::optional_internal::optional_data_dtor_base.1977" = type { i8, %union.anon.1978 }
%union.anon.1978 = type { %"class.blink::SimpleVisualOverflowModel" }
%"class.blink::SimpleVisualOverflowModel" = type { %"class.blink::LayoutRect" }
%"class.blink::LineLayoutItem" = type { %"class.blink::LayoutObject"* }
%"class.blink::InlineBox::InlineBoxBitfields" = type { i32 }
%"class.blink::Persistent.2010" = type { %"class.blink::PersistentBase.2011" }
%"class.blink::PersistentBase.2011" = type { %"struct.blink::LayoutBoxRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBoxRareData" = type { %"class.blink::LayoutMultiColumnSpannerPlaceholder"*, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", i8, %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutBlock"*, %"class.blink::LayoutBox"*, %"class.std::__1::unique_ptr.2014", %"struct.blink::PhysicalRect", %"class.blink::Member.2024" }
%"class.blink::LayoutMultiColumnSpannerPlaceholder" = type opaque
%"class.blink::LayoutBlock" = type <{ %"class.blink::LayoutBox", %"class.blink::LayoutObjectChildList", i16, [6 x i8] }>
%"class.std::__1::unique_ptr.2014" = type { %"class.std::__1::__compressed_pair.2015" }
%"class.std::__1::__compressed_pair.2015" = type { %"struct.std::__1::__compressed_pair_elem.2016" }
%"struct.std::__1::__compressed_pair_elem.2016" = type { %"class.WTF::HashSet.2017"* }
%"class.WTF::HashSet.2017" = type { %"class.WTF::HashTable.2018" }
%"class.WTF::HashTable.2018" = type <{ %"class.blink::LayoutBox"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2024" = type { %"class.blink::MemberBase.2025" }
%"class.blink::MemberBase.2025" = type { %"class.blink::CustomLayoutChild"* }
%"class.blink::CustomLayoutChild" = type opaque
%"class.blink::LayoutObjectChildList" = type { %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"* }
%"class.blink::LineBoxList" = type { %"class.blink::InlineBoxList" }
%"class.blink::InlineBoxList" = type { %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"* }
%"class.blink::Persistent.2026" = type { %"class.blink::PersistentBase.2027" }
%"class.blink::PersistentBase.2027" = type { %"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData"*, %"class.blink::PersistentNodePtr.269" }
%"struct.blink::LayoutBlockFlow::LayoutBlockFlowRareData" = type <{ %"class.blink::LayoutBlockFlow::MarginValues", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutMultiColumnFlowThread"*, %"class.std::__1::unique_ptr.2030", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, [3 x i8], i32, i8, [7 x i8] }>
%"class.blink::LayoutBlockFlow::MarginValues" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::LayoutMultiColumnFlowThread" = type opaque
%"class.std::__1::unique_ptr.2030" = type { %"class.std::__1::__compressed_pair.2031" }
%"class.std::__1::__compressed_pair.2031" = type { %"struct.std::__1::__compressed_pair_elem.2032" }
%"struct.std::__1::__compressed_pair_elem.2032" = type { %"class.blink::NGOffsetMapping"* }
%"class.blink::NGOffsetMapping" = type { %"class.WTF::Vector.3348", %"class.WTF::HashMap.3353", %"class.WTF::String" }
%"class.WTF::Vector.3348" = type { %"class.WTF::VectorBuffer.3349" }
%"class.WTF::VectorBuffer.3349" = type { %"class.WTF::VectorBufferBase.3350" }
%"class.WTF::VectorBufferBase.3350" = type { %"class.blink::NGOffsetMappingUnit"*, i32, i32 }
%"class.blink::NGOffsetMappingUnit" = type { i32, %"class.blink::LayoutObject"*, i32, i32, i32, i32 }
%"class.WTF::HashMap.3353" = type { %"class.WTF::HashTable.3354" }
%"class.WTF::HashTable.3354" = type <{ %"struct.WTF::KeyValuePair.3357"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3357" = type opaque
%"class.std::__1::unique_ptr.2036" = type { %"class.std::__1::__compressed_pair.2037" }
%"class.std::__1::__compressed_pair.2037" = type { %"struct.std::__1::__compressed_pair_elem.2038" }
%"struct.std::__1::__compressed_pair_elem.2038" = type { %"class.blink::FloatingObjects"* }
%"class.blink::FloatingObjects" = type <{ %"class.WTF::ListHashSet.2039", %"class.WTF::PODIntervalTree", i32, i32, i8, [7 x i8], %"class.blink::LayoutBlockFlow"*, [2 x %"struct.blink::FloatingObjects::FloatBottomCachedValue"], i8, [7 x i8] }>
%"class.WTF::ListHashSet.2039" = type { %"class.WTF::HashTable.2042", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" }
%"class.WTF::HashTable.2042" = type <{ %"class.WTF::MallocedListHashSetNode"**, i32, i32, i32, [4 x i8] }>
%"class.WTF::MallocedListHashSetNode" = type { %"class.std::__1::unique_ptr.2045", %"class.WTF::MallocedListHashSetNode"*, %"class.WTF::MallocedListHashSetNode"* }
%"class.std::__1::unique_ptr.2045" = type { %"class.std::__1::__compressed_pair.2046" }
%"class.std::__1::__compressed_pair.2046" = type { %"struct.std::__1::__compressed_pair_elem.2047" }
%"struct.std::__1::__compressed_pair_elem.2047" = type { %"class.blink::FloatingObject"* }
%"class.blink::FloatingObject" = type <{ %"class.blink::LayoutBox"*, %"class.blink::RootInlineBox"*, %"class.blink::LayoutRect", i8, [7 x i8] }>
%"class.blink::RootInlineBox" = type { %"class.blink::InlineFlowBox.base", i32, %"class.blink::LineLayoutItem", %class.scoped_refptr.2048, %"class.std::__1::unique_ptr.2049", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::InlineFlowBox.base" = type <{ %"class.blink::InlineBox", %"class.std::__1::unique_ptr.1966", %"class.blink::InlineBox"*, %"class.blink::InlineBox"*, %"class.blink::InlineFlowBox"*, %"class.blink::InlineFlowBox"*, i32 }>
%class.scoped_refptr.2048 = type { %"class.blink::BidiContext"* }
%"class.blink::BidiContext" = type { %"class.WTF::ThreadSafeRefCounted.3346", i16, %class.scoped_refptr.2048 }
%"class.WTF::ThreadSafeRefCounted.3346" = type { %"class.base::RefCountedThreadSafe.3347" }
%"class.base::RefCountedThreadSafe.3347" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.std::__1::unique_ptr.2049" = type { %"class.std::__1::__compressed_pair.2050" }
%"class.std::__1::__compressed_pair.2050" = type { %"struct.std::__1::__compressed_pair_elem.2051" }
%"struct.std::__1::__compressed_pair_elem.2051" = type { %"class.WTF::Vector.2052"* }
%"class.WTF::Vector.2052" = type { %"class.WTF::VectorBuffer.2053" }
%"class.WTF::VectorBuffer.2053" = type { %"class.WTF::VectorBufferBase.2054" }
%"class.WTF::VectorBufferBase.2054" = type { %"class.blink::LayoutBox"**, i32, i32 }
%"class.WTF::MallocedListHashSetAllocator<std::__1::unique_ptr<blink::FloatingObject, std::__1::default_delete<blink::FloatingObject> >, 4>::AllocatorProvider" = type { %"struct.WTF::MallocedListHashSetAllocator"* }
%"struct.WTF::MallocedListHashSetAllocator" = type { %"class.WTF::MallocedListHashSetNode"*, i8, [7 x i8], [96 x i8] }
%"class.WTF::PODIntervalTree" = type { %"class.WTF::PODRedBlackTree.base", [7 x i8] }
%"class.WTF::PODRedBlackTree.base" = type <{ i32 (...)**, %class.scoped_refptr.2063, %"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node"*, i8 }>
%"class.WTF::PODRedBlackTree<WTF::PODInterval<blink::LayoutUnit, blink::FloatingObject *> >::Node" = type opaque
%"struct.blink::FloatingObjects::FloatBottomCachedValue" = type <{ %"class.blink::FloatingObject"*, i8, [7 x i8] }>
%"class.blink::UntracedMember.2067" = type { %"class.blink::MemberBase.2068" }
%"class.blink::MemberBase.2068" = type { %"class.blink::LocalFrameView"* }
%"class.blink::LocalFrameView" = type { %"class.blink::FrameView.base", %"class.blink::LayoutSize", %"class.WTF::HashSet.2071", %"class.blink::Member.2076", i8, i8, %"class.blink::LayoutSubtreeRootList", %"class.blink::DepthOrderedLayoutObjectList", i8, i32, i32, %"class.blink::HeapTaskRunnerTimer.2078", i8, i32, %"class.blink::Color", %"class.absl::optional.2081", %"class.WTF::AtomicString", %"class.WTF::AtomicString", i8, i32, i64, i8, %"class.blink::LayoutObjectCounter", %"class.blink::Member.2086", %"class.blink::Member.2088", %"class.blink::Member.2088", %"class.std::__1::unique_ptr.2091", i32, [4 x i8], %"class.WTF::HashSet.2094", %"class.blink::Member.2101", %"class.blink::IntSize", %"class.blink::IntSize", i8, i8, [6 x i8], %"class.blink::HeapHashSet.2103", %"class.blink::HeapHashSet.2110", %"class.blink::IntSize", i8, %"class.std::__1::unique_ptr.2116", i8, %"class.blink::Member.2122", i8, i8, i32, %"class.blink::HeapLinkedHashSet.2124", %"class.blink::HeapLinkedHashSet.2138", i8, i32, i8, i8, i8, i8, i8, [3 x i8], %"struct.blink::LifecycleData", %"class.std::__1::unique_ptr.2152", i8, %"class.std::__1::unique_ptr.2158", %"class.std::__1::unique_ptr.2234", %"class.WTF::Vector.2240", i32, %class.scoped_refptr.2245, i32, %"class.base::TimeTicks", i64, i64, %"class.blink::Member.2246", %"class.blink::Member.2248", %"class.blink::Member.2250", %"class.blink::HeapHashSet.2252", %"class.blink::HeapHashSet.2259", %"class.std::__1::unique_ptr.2266", %"class.std::__1::unique_ptr.2273", %"class.WTF::Vector.992" }
%"class.blink::FrameView.base" = type <{ %"class.blink::EmbeddedContentView.base", i8, %"struct.blink::PhysicalRect", [4 x i8], %"class.base::TimeTicks", i32, i8, i8, i8 }>
%"class.blink::EmbeddedContentView.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::IntRect", i8, i8, i8 }>
%"class.WTF::HashSet.2071" = type { %"class.WTF::HashTable.2072" }
%"class.WTF::HashTable.2072" = type <{ %class.scoped_refptr.2075*, i32, i32, i32, [4 x i8] }>
%class.scoped_refptr.2075 = type { %"class.blink::LayoutEmbeddedObject"* }
%"class.blink::LayoutEmbeddedObject" = type opaque
%"class.blink::LayoutSubtreeRootList" = type { %"class.blink::DepthOrderedLayoutObjectList" }
%"class.blink::DepthOrderedLayoutObjectList" = type { %"struct.blink::DepthOrderedLayoutObjectListData"* }
%"struct.blink::DepthOrderedLayoutObjectListData" = type opaque
%"class.blink::HeapTaskRunnerTimer.2078" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.2079", { i64, i64 } }
%"class.blink::WeakMember.2079" = type { %"class.blink::MemberBase.2080" }
%"class.blink::MemberBase.2080" = type { %"class.blink::LocalFrameView"* }
%"class.absl::optional.2081" = type { %"class.absl::optional_internal::optional_data.2082" }
%"class.absl::optional_internal::optional_data.2082" = type { %"class.absl::optional_internal::optional_data_base.2083" }
%"class.absl::optional_internal::optional_data_base.2083" = type { %"class.absl::optional_internal::optional_data_dtor_base.2084" }
%"class.absl::optional_internal::optional_data_dtor_base.2084" = type { i8, %union.anon.2085 }
%union.anon.2085 = type { %"class.blink::IntSize" }
%"class.blink::LayoutObjectCounter" = type { i32 }
%"class.blink::Member.2086" = type { %"class.blink::MemberBase.2087" }
%"class.blink::MemberBase.2087" = type { %"class.blink::FragmentAnchor"* }
%"class.blink::FragmentAnchor" = type opaque
%"class.blink::Member.2088" = type { %"class.blink::MemberBase.2089" }
%"class.blink::MemberBase.2089" = type { %"class.blink::HeapHashSet.2090"* }
%"class.blink::HeapHashSet.2090" = type opaque
%"class.std::__1::unique_ptr.2091" = type { %"class.std::__1::__compressed_pair.2092" }
%"class.std::__1::__compressed_pair.2092" = type { %"struct.std::__1::__compressed_pair_elem.2093" }
%"struct.std::__1::__compressed_pair_elem.2093" = type { %"class.WTF::HashSet.2094"* }
%"class.WTF::HashSet.2094" = type { %"class.WTF::HashTable.2095" }
%"class.WTF::HashTable.2095" = type <{ %"class.blink::LayoutObject"**, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2101" = type { %"class.blink::MemberBase.2102" }
%"class.blink::MemberBase.2102" = type { %"class.blink::FrameViewAutoSizeInfo"* }
%"class.blink::FrameViewAutoSizeInfo" = type opaque
%"class.blink::HeapHashSet.2103" = type { %"class.WTF::HashSet.2106" }
%"class.WTF::HashSet.2106" = type { %"class.WTF::HashTable.2107" }
%"class.WTF::HashTable.2107" = type <{ %"class.blink::Member.2109"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2109" = type opaque
%"class.blink::HeapHashSet.2110" = type { %"class.WTF::HashSet.2113" }
%"class.WTF::HashSet.2113" = type { %"class.WTF::HashTable.2114" }
%"class.WTF::HashTable.2114" = type <{ %"class.blink::Member.1003"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2116" = type { %"class.std::__1::__compressed_pair.2117" }
%"class.std::__1::__compressed_pair.2117" = type { %"struct.std::__1::__compressed_pair_elem.2118" }
%"struct.std::__1::__compressed_pair_elem.2118" = type { %"class.blink::LayoutAnalyzer"* }
%"class.blink::LayoutAnalyzer" = type opaque
%"class.blink::Member.2122" = type { %"class.blink::MemberBase.2123" }
%"class.blink::MemberBase.2123" = type { %"class.blink::RootFrameViewport"* }
%"class.blink::RootFrameViewport" = type opaque
%"class.blink::HeapLinkedHashSet.2124" = type { %"class.WTF::LinkedHashSet.2127" }
%"class.WTF::LinkedHashSet.2127" = type { %"class.WTF::HashMap.2128", %"class.WTF::VectorBackedLinkedList.2132" }
%"class.WTF::HashMap.2128" = type { %"class.WTF::HashTable.2129" }
%"class.WTF::HashTable.2129" = type <{ %"struct.WTF::KeyValuePair.2131"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2131" = type opaque
%"class.WTF::VectorBackedLinkedList.2132" = type { %"class.WTF::Vector.2133", i32, i32 }
%"class.WTF::Vector.2133" = type { %"class.WTF::VectorBuffer.2134" }
%"class.WTF::VectorBuffer.2134" = type { %"class.WTF::VectorBufferBase.2135" }
%"class.WTF::VectorBufferBase.2135" = type { %"class.WTF::VectorBackedLinkedListNode.2136"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2136" = type opaque
%"class.blink::HeapLinkedHashSet.2138" = type { %"class.WTF::LinkedHashSet.2141" }
%"class.WTF::LinkedHashSet.2141" = type { %"class.WTF::HashMap.2142", %"class.WTF::VectorBackedLinkedList.2146" }
%"class.WTF::HashMap.2142" = type { %"class.WTF::HashTable.2143" }
%"class.WTF::HashTable.2143" = type <{ %"struct.WTF::KeyValuePair.2145"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2145" = type opaque
%"class.WTF::VectorBackedLinkedList.2146" = type { %"class.WTF::Vector.2147", i32, i32 }
%"class.WTF::Vector.2147" = type { %"class.WTF::VectorBuffer.2148" }
%"class.WTF::VectorBuffer.2148" = type { %"class.WTF::VectorBufferBase.2149" }
%"class.WTF::VectorBufferBase.2149" = type { %"class.WTF::VectorBackedLinkedListNode.2150"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.2150" = type opaque
%"struct.blink::LifecycleData" = type <{ %"class.base::TimeTicks", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.2152" = type { %"class.std::__1::__compressed_pair.2153" }
%"class.std::__1::__compressed_pair.2153" = type { %"struct.std::__1::__compressed_pair_elem.2154" }
%"struct.std::__1::__compressed_pair_elem.2154" = type { %"class.blink::ScrollingCoordinatorContext"* }
%"class.blink::ScrollingCoordinatorContext" = type opaque
%"class.std::__1::unique_ptr.2158" = type { %"class.std::__1::__compressed_pair.2159" }
%"class.std::__1::__compressed_pair.2159" = type { %"struct.std::__1::__compressed_pair_elem.2160" }
%"struct.std::__1::__compressed_pair_elem.2160" = type { %"class.blink::PaintController"* }
%"class.blink::PaintController" = type { i32, %class.scoped_refptr.2161, %class.scoped_refptr.2161, %"class.blink::PaintChunker", i8, i8, %"class.WTF::Vector.2211", i32, i32, i32, [4 x i8], %"class.WTF::HashMap.2216", i32, i32, i32, i32, %"class.WTF::String", %"struct.blink::PaintController::SubsequencesData", %"struct.blink::PaintController::SubsequencesData", i32, i32, i32, i32 }
%class.scoped_refptr.2161 = type { %"class.blink::PaintArtifact"* }
%"class.blink::PaintArtifact" = type { %"class.WTF::RefCounted.2162", [4 x i8], %"class.blink::DisplayItemList", %"class.WTF::Vector.2169" }
%"class.WTF::RefCounted.2162" = type { %"class.base::RefCounted.2163" }
%"class.base::RefCounted.2163" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::DisplayItemList" = type <{ %"class.WTF::Vector.2164", i32, [4 x i8] }>
%"class.WTF::Vector.2164" = type { %"class.WTF::VectorBuffer.2165" }
%"class.WTF::VectorBuffer.2165" = type { %"class.WTF::VectorBufferBase.2166" }
%"class.WTF::VectorBufferBase.2166" = type { %"struct.blink::DisplayItemList::ItemSlot"*, i32, i32 }
%"struct.blink::DisplayItemList::ItemSlot" = type { [40 x i8] }
%"class.WTF::Vector.2169" = type { %"class.WTF::VectorBuffer.2170" }
%"class.WTF::VectorBuffer.2170" = type { %"class.WTF::VectorBufferBase.2171" }
%"class.WTF::VectorBufferBase.2171" = type { %"struct.blink::PaintChunk"*, i32, i32 }
%"struct.blink::PaintChunk" = type <{ i32, i32, %"class.blink::Color", float, %"struct.blink::DisplayItem::Id", %"class.blink::RefCountedPropertyTreeState", %"class.std::__1::unique_ptr.2172", %"class.std::__1::unique_ptr.2183", %"class.blink::IntRect", %"class.blink::IntRect", i8, i8, [6 x i8] }>
%"struct.blink::DisplayItem::Id" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.blink::DisplayItemClient" = type <{ i32 (...)**, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.2172" = type { %"class.std::__1::__compressed_pair.2173" }
%"class.std::__1::__compressed_pair.2173" = type { %"struct.std::__1::__compressed_pair_elem.2174" }
%"struct.std::__1::__compressed_pair_elem.2174" = type { %"struct.blink::HitTestData"* }
%"struct.blink::HitTestData" = type { %"class.WTF::Vector.2175", %"class.WTF::Vector.1025", %"class.blink::IntRect", %"class.blink::TransformPaintPropertyNode"* }
%"class.WTF::Vector.2175" = type { %"class.WTF::VectorBuffer.2176" }
%"class.WTF::VectorBuffer.2176" = type { %"class.WTF::VectorBufferBase.2177" }
%"class.WTF::VectorBufferBase.2177" = type { %"struct.blink::TouchActionRect"*, i32, i32 }
%"struct.blink::TouchActionRect" = type { %"class.blink::IntRect", i32 }
%"class.std::__1::unique_ptr.2183" = type { %"class.std::__1::__compressed_pair.2184" }
%"class.std::__1::__compressed_pair.2184" = type { %"struct.std::__1::__compressed_pair_elem.2185" }
%"struct.std::__1::__compressed_pair_elem.2185" = type { %"struct.blink::LayerSelectionData"* }
%"struct.blink::LayerSelectionData" = type { %"class.absl::optional.2186", %"class.absl::optional.2186" }
%"class.absl::optional.2186" = type { %"class.absl::optional_internal::optional_data.2187" }
%"class.absl::optional_internal::optional_data.2187" = type { %"class.absl::optional_internal::optional_data_base.2188" }
%"class.absl::optional_internal::optional_data_base.2188" = type { %"class.absl::optional_internal::optional_data_dtor_base.2189" }
%"class.absl::optional_internal::optional_data_dtor_base.2189" = type { i8, [3 x i8], %union.anon.2190 }
%union.anon.2190 = type { %"struct.blink::PaintedSelectionBound" }
%"struct.blink::PaintedSelectionBound" = type <{ i32, %"class.blink::IntPoint", %"class.blink::IntPoint", i8, [3 x i8] }>
%"class.blink::PaintChunker" = type <{ %"class.WTF::Vector.2169"*, %"class.absl::optional.2196", %"class.blink::PropertyTreeStateOrAlias", %"class.blink::Region", i8, i8, i8, i8, %"class.blink::Color", float, [4 x i8] }>
%"class.absl::optional.2196" = type { %"class.absl::optional_internal::optional_data.2197" }
%"class.absl::optional_internal::optional_data.2197" = type { %"class.absl::optional_internal::optional_data_base.2198" }
%"class.absl::optional_internal::optional_data_base.2198" = type { %"class.absl::optional_internal::optional_data_dtor_base.2199" }
%"class.absl::optional_internal::optional_data_dtor_base.2199" = type { i8, %union.anon.2200 }
%union.anon.2200 = type { %"struct.blink::DisplayItem::Id" }
%"class.blink::PropertyTreeStateOrAlias" = type { %"class.blink::TransformPaintPropertyNodeOrAlias"*, %"class.blink::ClipPaintPropertyNodeOrAlias"*, %"class.blink::EffectPaintPropertyNodeOrAlias"* }
%"class.blink::Region" = type { %"class.blink::IntRect", %"class.blink::Region::Shape" }
%"class.blink::Region::Shape" = type { %"class.WTF::Vector.2201", %"class.WTF::Vector.2206" }
%"class.WTF::Vector.2201" = type { %"class.WTF::VectorBuffer.2202" }
%"class.WTF::VectorBuffer.2202" = type { %"class.WTF::VectorBufferBase.2203", [128 x i8] }
%"class.WTF::VectorBufferBase.2203" = type { i32*, i32, i32 }
%"class.WTF::Vector.2206" = type { %"class.WTF::VectorBuffer.2207" }
%"class.WTF::VectorBuffer.2207" = type { %"class.WTF::VectorBufferBase.2208", [128 x i8] }
%"class.WTF::VectorBufferBase.2208" = type { %"struct.blink::Region::Span"*, i32, i32 }
%"struct.blink::Region::Span" = type { i32, i32 }
%"class.WTF::Vector.2211" = type { %"class.WTF::VectorBuffer.2212" }
%"class.WTF::VectorBuffer.2212" = type { %"class.WTF::VectorBufferBase.2213" }
%"class.WTF::VectorBufferBase.2213" = type { %"struct.blink::FrameFirstPaint"*, i32, i32 }
%"struct.blink::FrameFirstPaint" = type <{ i8*, i8, [7 x i8] }>
%"class.WTF::HashMap.2216" = type { %"class.WTF::HashTable.2217" }
%"class.WTF::HashTable.2217" = type <{ %"struct.WTF::KeyValuePair.2220"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2220" = type opaque
%"struct.blink::PaintController::SubsequencesData" = type { %"class.WTF::HashMap.2221", %"class.WTF::Vector.2226" }
%"class.WTF::HashMap.2221" = type { %"class.WTF::HashTable.2222" }
%"class.WTF::HashTable.2222" = type <{ %"struct.WTF::KeyValuePair.2225"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2225" = type opaque
%"class.WTF::Vector.2226" = type { %"class.WTF::VectorBuffer.2227" }
%"class.WTF::VectorBuffer.2227" = type { %"class.WTF::VectorBufferBase.2228" }
%"class.WTF::VectorBufferBase.2228" = type { %"struct.blink::PaintController::SubsequenceMarkers"*, i32, i32 }
%"struct.blink::PaintController::SubsequenceMarkers" = type { %"class.blink::DisplayItemClient"*, i32, i32 }
%"class.std::__1::unique_ptr.2234" = type { %"class.std::__1::__compressed_pair.2235" }
%"class.std::__1::__compressed_pair.2235" = type { %"struct.std::__1::__compressed_pair_elem.2236" }
%"struct.std::__1::__compressed_pair_elem.2236" = type { %"class.blink::PaintArtifactCompositor"* }
%"class.blink::PaintArtifactCompositor" = type opaque
%"class.WTF::Vector.2240" = type { %"class.WTF::VectorBuffer.2241" }
%"class.WTF::VectorBuffer.2241" = type { %"class.WTF::VectorBufferBase.2242" }
%"class.WTF::VectorBufferBase.2242" = type { %"struct.blink::PreCompositedLayerInfo"*, i32, i32 }
%"struct.blink::PreCompositedLayerInfo" = type opaque
%class.scoped_refptr.2245 = type { %"class.blink::LocalFrameUkmAggregator"* }
%"class.blink::LocalFrameUkmAggregator" = type opaque
%"class.blink::Member.2246" = type { %"class.blink::MemberBase.2247" }
%"class.blink::MemberBase.2247" = type { %"class.blink::LayoutShiftTracker"* }
%"class.blink::LayoutShiftTracker" = type opaque
%"class.blink::Member.2248" = type { %"class.blink::MemberBase.2249" }
%"class.blink::MemberBase.2249" = type { %"class.blink::PaintTimingDetector"* }
%"class.blink::PaintTimingDetector" = type opaque
%"class.blink::Member.2250" = type { %"class.blink::MemberBase.2251" }
%"class.blink::MemberBase.2251" = type { %"class.blink::MobileFriendlinessChecker"* }
%"class.blink::MobileFriendlinessChecker" = type opaque
%"class.blink::HeapHashSet.2252" = type { %"class.WTF::HashSet.2255" }
%"class.WTF::HashSet.2255" = type { %"class.WTF::HashTable.2256" }
%"class.WTF::HashTable.2256" = type <{ %"class.blink::WeakMember.2258"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2258" = type opaque
%"class.blink::HeapHashSet.2259" = type { %"class.WTF::HashSet.2262" }
%"class.WTF::HashSet.2262" = type { %"class.WTF::HashTable.2263" }
%"class.WTF::HashTable.2263" = type <{ %"class.blink::WeakMember.2265"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2265" = type opaque
%"class.std::__1::unique_ptr.2266" = type { %"class.std::__1::__compressed_pair.2267" }
%"class.std::__1::__compressed_pair.2267" = type { %"struct.std::__1::__compressed_pair_elem.2268" }
%"struct.std::__1::__compressed_pair_elem.2268" = type { %"class.blink::OverlayInterstitialAdDetector"* }
%"class.blink::OverlayInterstitialAdDetector" = type <{ i8, i8, [6 x i8], %"class.base::Time", %"class.blink::IntSize", i32, i8, [3 x i8], i32, i32, i8, i8, [6 x i8] }>
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.2269" }
%"class.base::time_internal::TimeBase.2269" = type { i64 }
%"class.std::__1::unique_ptr.2273" = type { %"class.std::__1::__compressed_pair.2274" }
%"class.std::__1::__compressed_pair.2274" = type { %"struct.std::__1::__compressed_pair_elem.2275" }
%"struct.std::__1::__compressed_pair_elem.2275" = type { %"class.blink::StickyAdDetector"* }
%"class.blink::StickyAdDetector" = type <{ %"class.absl::optional.2276", i32, i32, i32, i8, [3 x i8] }>
%"class.absl::optional.2276" = type { %"class.absl::optional_internal::optional_data.2277" }
%"class.absl::optional_internal::optional_data.2277" = type { %"class.absl::optional_internal::optional_data_base.2278" }
%"class.absl::optional_internal::optional_data_base.2278" = type { %"class.absl::optional_internal::optional_data_dtor_base.2279" }
%"class.absl::optional_internal::optional_data_dtor_base.2279" = type { i8, %union.anon.2280 }
%union.anon.2280 = type { %"class.base::Time" }
%"class.blink::LayoutState" = type { i8, %"class.blink::LayoutFlowThread"*, %"class.blink::LayoutState"*, %"class.blink::LayoutSize", %"class.blink::LayoutUnit", %"class.blink::LayoutUnit", %"class.WTF::AtomicString", %"class.blink::LayoutObject"* }
%"class.blink::LayoutFlowThread" = type opaque
%"class.std::__1::unique_ptr.2284" = type { %"class.std::__1::__compressed_pair.2285" }
%"class.std::__1::__compressed_pair.2285" = type { %"struct.std::__1::__compressed_pair_elem.2286" }
%"struct.std::__1::__compressed_pair_elem.2286" = type { %"class.blink::ViewFragmentationContext"* }
%"class.blink::ViewFragmentationContext" = type opaque
%"class.std::__1::unique_ptr.2290" = type { %"class.std::__1::__compressed_pair.2291" }
%"class.std::__1::__compressed_pair.2291" = type { %"struct.std::__1::__compressed_pair_elem.2292" }
%"struct.std::__1::__compressed_pair_elem.2292" = type { %"class.blink::NamedPagesMapper"* }
%"class.blink::NamedPagesMapper" = type opaque
%"class.std::__1::unique_ptr.2296" = type { %"class.std::__1::__compressed_pair.2297" }
%"class.std::__1::__compressed_pair.2297" = type { %"struct.std::__1::__compressed_pair_elem.2298" }
%"struct.std::__1::__compressed_pair_elem.2298" = type { %"class.blink::PaintLayerCompositor"* }
%"class.blink::PaintLayerCompositor" = type opaque
%class.scoped_refptr.2063 = type { %"class.WTF::PODFreeListArena"* }
%"class.WTF::PODFreeListArena" = type opaque
%"class.blink::LayoutQuote" = type opaque
%"class.blink::Persistent.2302" = type { %"class.blink::PersistentBase.2303" }
%"class.blink::PersistentBase.2303" = type { %"class.blink::HitTestCache"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HitTestCache" = type { i32, %"class.blink::HeapVector.2306", i64 }
%"class.blink::HeapVector.2306" = type { %"class.WTF::Vector.2309" }
%"class.WTF::Vector.2309" = type { %"class.WTF::VectorBuffer.2310" }
%"class.WTF::VectorBuffer.2310" = type { %"class.WTF::VectorBufferBase.2311", [368 x i8] }
%"class.WTF::VectorBufferBase.2311" = type { %"struct.blink::HitTestCacheEntry"*, i32, i32 }
%"struct.blink::HitTestCacheEntry" = type { %"class.blink::HitTestLocation", %"class.blink::HitTestResult" }
%"class.blink::HitTestLocation" = type <{ %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalRect", %"class.blink::FloatPoint", %"class.blink::FloatQuad", i32, i8, i8, [2 x i8] }>
%"class.blink::FloatQuad" = type { %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint", %"class.blink::FloatPoint" }
%"class.blink::HitTestResult" = type { %"class.blink::HitTestRequest", i8, %"class.blink::Member.318", %"class.blink::Member.318", %"class.blink::Member.343", %"class.blink::Member.318", %"struct.blink::PhysicalOffset", %"struct.blink::PhysicalOffset", %"class.blink::Member.343", %"class.blink::Member.1003", i8, %"class.blink::Member.2312", %"class.WTF::String" }
%"class.blink::HitTestRequest" = type { i32, %"class.blink::LayoutObject"* }
%"class.blink::Member.2312" = type { %"class.blink::MemberBase.2313" }
%"class.blink::MemberBase.2313" = type { %"class.blink::HeapLinkedHashSet.2314"* }
%"class.blink::HeapLinkedHashSet.2314" = type opaque
%"class.blink::HeapVector.365" = type { %"class.WTF::Vector.368" }
%"class.WTF::Vector.368" = type { %"class.WTF::VectorBuffer.369" }
%"class.WTF::VectorBuffer.369" = type { %"class.WTF::VectorBufferBase.370" }
%"class.WTF::VectorBufferBase.370" = type { %"class.blink::Member.343"*, i32, i32 }
%"class.blink::HeapVector.1591" = type { %"class.WTF::Vector.1594" }
%"class.WTF::Vector.1594" = type { %"class.WTF::VectorBuffer.1595" }
%"class.WTF::VectorBuffer.1595" = type { %"class.WTF::VectorBufferBase.1596" }
%"class.WTF::VectorBufferBase.1596" = type { %"class.blink::Member.1597"*, i32, i32 }
%"class.blink::Member.1597" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.326" }
%"class.blink::Member.1599" = type { %"class.blink::MemberBase.1600" }
%"class.blink::MemberBase.1600" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1601" = type { %"class.blink::MemberBase.1602" }
%"class.blink::MemberBase.1602" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1603" = type { %"class.blink::MemberBase.1604" }
%"class.blink::MemberBase.1604" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1605" = type { %"class.blink::MemberBase.1606" }
%"class.blink::MemberBase.1606" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1607" = type { %"class.blink::MemberBase.1608" }
%"class.blink::MemberBase.1608" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1609" = type { %"class.WTF::HashTable.1610" }
%"class.WTF::HashTable.1610" = type <{ %"struct.WTF::KeyValuePair.1613"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1613" = type opaque
%"class.blink::Member.1614" = type { %"class.blink::MemberBase.1615" }
%"class.blink::MemberBase.1615" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1616" = type { %"class.blink::MemberBase.1617" }
%"class.blink::MemberBase.1617" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1618" = type { %"class.blink::MemberBase.1619" }
%"class.blink::MemberBase.1619" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1620" = type { %"class.blink::MemberBase.1621" }
%"class.blink::MemberBase.1621" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer.1253" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1254", { i64, i64 } }
%"class.blink::WeakMember.1254" = type { %"class.blink::MemberBase.327" }
%"class.blink::HeapHashSet.1622" = type { %"class.WTF::HashSet.1625" }
%"class.WTF::HashSet.1625" = type { %"class.WTF::HashTable.1626" }
%"class.WTF::HashTable.1626" = type <{ %"class.blink::Member.1628"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1628" = type opaque
%"class.blink::Member.1629" = type { %"class.blink::MemberBase.1630" }
%"class.blink::MemberBase.1630" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1631" = type { %"class.blink::MemberBase.1632" }
%"class.blink::MemberBase.1632" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1633" = type { %"class.blink::MemberBase.1634" }
%"class.blink::MemberBase.1634" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1635" = type { %"class.blink::MemberBase.1636" }
%"class.blink::MemberBase.1636" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1637" = type { %"class.blink::MemberBase.1638" }
%"class.blink::MemberBase.1638" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1639" = type { %"class.std::__1::__compressed_pair.1640" }
%"class.std::__1::__compressed_pair.1640" = type { %"struct.std::__1::__compressed_pair_elem.1641" }
%"struct.std::__1::__compressed_pair_elem.1641" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1645" = type { %"class.std::__1::__compressed_pair.1646" }
%"class.std::__1::__compressed_pair.1646" = type { %"struct.std::__1::__compressed_pair_elem.1647" }
%"struct.std::__1::__compressed_pair_elem.1647" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type { %"class.WTF::HashSet.519", %"class.WTF::HashSet.519", %"class.WTF::HashSet.519", %"class.WTF::HashSet.519", %"class.WTF::HashSet.519", %"class.WTF::HashSet.519", i32, [4 x i8], %"class.WTF::HashMap.1648", %"class.WTF::HashMap.1648", %"class.WTF::HashMap.1648", %"class.WTF::HashMap.1648", %"class.WTF::HashMap.1648", %"class.WTF::HashMap.1648", %"class.WTF::HashMap.1648", i64, i64, %"class.ukm::UkmRecorder"*, i64, %"class.blink::TaskRunnerTimer" }
%"class.WTF::HashMap.1648" = type { %"class.WTF::HashTable.1649" }
%"class.WTF::HashTable.1649" = type <{ %"struct.WTF::KeyValuePair.1652"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1652" = type opaque
%"class.blink::TaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::FontMatchingMetrics"*, { i64, i64 } }
%"class.blink::Member.1656" = type { %"class.blink::MemberBase.1657" }
%"class.blink::MemberBase.1657" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1658" = type { %"class.blink::MemberBase.1659" }
%"class.blink::MemberBase.1659" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1660" = type { %"class.blink::MemberBase.1661" }
%"class.blink::MemberBase.1661" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1662" = type { %"class.blink::MemberBase.1663" }
%"class.blink::MemberBase.1663" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.blink::HeapHashMap.1669" = type { %"class.WTF::HashMap.1672" }
%"class.WTF::HashMap.1672" = type { %"class.WTF::HashTable.1673" }
%"class.WTF::HashTable.1673" = type <{ %"struct.WTF::KeyValuePair.1675"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1675" = type opaque
%"class.blink::Member.1676" = type { %"class.blink::MemberBase.1677" }
%"class.blink::MemberBase.1677" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1678" = type { %"class.std::__1::__compressed_pair.1679" }
%"class.std::__1::__compressed_pair.1679" = type { %"struct.std::__1::__compressed_pair_elem.1680" }
%"struct.std::__1::__compressed_pair_elem.1680" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1684" = type { %"class.blink::MemberBase.1685" }
%"class.blink::MemberBase.1685" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1686" = type { %"class.blink::MemberBase.1687" }
%"class.blink::MemberBase.1687" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1688" = type { %"class.WTF::HashMap.1691" }
%"class.WTF::HashMap.1691" = type { %"class.WTF::HashTable.1692" }
%"class.WTF::HashTable.1692" = type <{ %"struct.WTF::KeyValuePair.1694"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1694" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1695" }
%"class.blink::HeapHashSet.1695" = type { %"class.WTF::HashSet.1698" }
%"class.WTF::HashSet.1698" = type { %"class.WTF::HashTable.1699" }
%"class.WTF::HashTable.1699" = type <{ %"class.blink::WeakMember.1701"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1701" = type opaque
%"class.blink::Member.1702" = type { %"class.blink::MemberBase.1703" }
%"class.blink::MemberBase.1703" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1704" = type { %"class.blink::MemberBase.1705" }
%"class.blink::MemberBase.1705" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.326", %"class.blink::HeapHashSet.1711", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1718", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1711" = type { %"class.WTF::HashSet.1714" }
%"class.WTF::HashSet.1714" = type { %"class.WTF::HashTable.1715" }
%"class.WTF::HashTable.1715" = type <{ %"class.blink::Member.1717"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1717" = type opaque
%"class.blink::HeapTaskRunnerTimer.1718" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1719", { i64, i64 } }
%"class.blink::WeakMember.1719" = type { %"class.blink::MemberBase.1705" }
%"class.blink::Member.1707" = type { %"class.blink::MemberBase.1708" }
%"class.blink::MemberBase.1708" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::Member.328" = type { %"class.blink::MemberBase.329" }
%"class.blink::MemberBase.329" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.332" }
%"class.blink::HeapHashMap.332" = type { %"class.WTF::HashMap.335" }
%"class.WTF::HashMap.335" = type { %"class.WTF::HashTable.336" }
%"class.WTF::HashTable.336" = type <{ %"struct.WTF::KeyValuePair.338"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.338" = type { %"class.WTF::AtomicString", %"class.blink::Member.339" }
%"class.blink::Member.339" = type { %"class.blink::MemberBase.340" }
%"class.blink::MemberBase.340" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.343", i32, %"class.blink::HeapVector.365" }
%"class.blink::Member.372" = type { %"class.blink::MemberBase.373" }
%"class.blink::MemberBase.373" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.374" = type { %"class.blink::MemberBase.375" }
%"class.blink::MemberBase.375" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.376" = type { %"class.blink::MemberBase.377" }
%"class.blink::MemberBase.377" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.378" }
%"class.blink::Member.378" = type { %"class.blink::MemberBase.379" }
%"class.blink::MemberBase.379" = type { %"class.blink::HeapHashMap.380"* }
%"class.blink::HeapHashMap.380" = type opaque
%"class.blink::Member.381" = type { %"class.blink::MemberBase.382" }
%"class.blink::MemberBase.382" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.383" = type { %"class.WTF::Vector.386" }
%"class.WTF::Vector.386" = type { %"class.WTF::VectorBuffer.387" }
%"class.WTF::VectorBuffer.387" = type { %"class.WTF::VectorBufferBase.388" }
%"class.WTF::VectorBufferBase.388" = type { %"class.blink::Member.389"*, i32, i32 }
%"class.blink::Member.318" = type { %"class.blink::MemberBase.319" }
%"class.blink::Member.322" = type { %"class.blink::MemberBase.323" }
%"class.blink::MemberBase.323" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"struct.blink::PhysicalOffset" = type { %"class.blink::LayoutUnit", %"class.blink::LayoutUnit" }
%"class.blink::Member.3826" = type { %"class.blink::MemberBase.3827" }
%"class.blink::MemberBase.3827" = type { %"class.blink::DragCaret"* }
%"class.blink::DragCaret" = type opaque
%"class.blink::Member.3828" = type { %"class.blink::MemberBase.3829" }
%"class.blink::MemberBase.3829" = type { %"class.blink::DragController"* }
%"class.blink::DragController" = type opaque
%"class.blink::Member.3830" = type { %"class.blink::MemberBase.3831" }
%"class.blink::MemberBase.3831" = type { %"class.blink::FocusController"* }
%"class.blink::FocusController" = type opaque
%"class.blink::Member.3832" = type { %"class.blink::MemberBase.3833" }
%"class.blink::MemberBase.3833" = type { %"class.blink::ContextMenuController"* }
%"class.blink::ContextMenuController" = type opaque
%"class.blink::Member.3834" = type { %"class.blink::MemberBase.3835" }
%"class.blink::MemberBase.3835" = type { %"class.blink::PageScaleConstraintsSet"* }
%"class.blink::PageScaleConstraintsSet" = type opaque
%"class.blink::HeapObserverSet.3836" = type { i32, [4 x i8], %"class.blink::HeapHashSet.3837" }
%"class.blink::HeapHashSet.3837" = type { %"class.WTF::HashSet.3840" }
%"class.WTF::HashSet.3840" = type { %"class.WTF::HashTable.3841" }
%"class.WTF::HashTable.3841" = type <{ %"class.blink::WeakMember.3843"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3843" = type opaque
%"class.blink::Member.3844" = type { %"class.blink::MemberBase.3845" }
%"class.blink::MemberBase.3845" = type { %"class.blink::PointerLockController"* }
%"class.blink::PointerLockController" = type opaque
%"class.blink::Member.3846" = type { %"class.blink::MemberBase.3847" }
%"class.blink::MemberBase.3847" = type { %"class.blink::ScrollingCoordinator"* }
%"class.blink::ScrollingCoordinator" = type opaque
%"class.blink::Member.3848" = type { %"class.blink::MemberBase.3849" }
%"class.blink::MemberBase.3849" = type { %"class.blink::BrowserControls"* }
%"class.blink::BrowserControls" = type opaque
%"class.blink::Member.3850" = type { %"class.blink::MemberBase.3851" }
%"class.blink::MemberBase.3851" = type { %"class.blink::ConsoleMessageStorage"* }
%"class.blink::ConsoleMessageStorage" = type opaque
%"class.blink::Member.3852" = type { %"class.blink::MemberBase.3853" }
%"class.blink::MemberBase.3853" = type { %"class.blink::TopDocumentRootScrollerController"* }
%"class.blink::TopDocumentRootScrollerController" = type opaque
%"class.blink::Member.3854" = type { %"class.blink::MemberBase.3855" }
%"class.blink::MemberBase.3855" = type { %"class.blink::VisualViewport"* }
%"class.blink::VisualViewport" = type opaque
%"class.blink::Member.3856" = type { %"class.blink::MemberBase.3857" }
%"class.blink::MemberBase.3857" = type { %"class.blink::OverscrollController"* }
%"class.blink::OverscrollController" = type opaque
%"class.blink::Member.3858" = type { %"class.blink::MemberBase.3859" }
%"class.blink::MemberBase.3859" = type { %"class.blink::LinkHighlight"* }
%"class.blink::LinkHighlight" = type opaque
%"class.blink::Member.3860" = type { %"class.blink::MemberBase.3861" }
%"class.blink::MemberBase.3861" = type { %"class.blink::SpatialNavigationController"* }
%"class.blink::SpatialNavigationController" = type opaque
%"class.blink::Member.3862" = type { %"class.blink::MemberBase.3863" }
%"class.blink::MemberBase.3863" = type { %"class.blink::PluginData"* }
%"class.blink::PluginData" = type opaque
%"class.blink::Member.3864" = type { %"class.blink::MemberBase.3865" }
%"class.blink::MemberBase.3865" = type { %"class.blink::ValidationMessageClient"* }
%"class.blink::ValidationMessageClient" = type opaque
%"class.blink::InspectorIssueStorage" = type { i32 (...)**, %"class.WTF::Deque.3866" }
%"class.WTF::Deque.3866" = type { %"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::unique_ptr<blink::protocol::Audits::InspectorIssue, std::__1::default_delete<blink::protocol::Audits::InspectorIssue> >, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.3869" }
%"class.WTF::VectorBuffer.3869" = type { %"class.WTF::VectorBufferBase.3870" }
%"class.WTF::VectorBufferBase.3870" = type { %"class.std::__1::unique_ptr.3871"*, i32, i32 }
%"class.std::__1::unique_ptr.3871" = type { %"class.std::__1::__compressed_pair.3872" }
%"class.std::__1::__compressed_pair.3872" = type { %"struct.std::__1::__compressed_pair_elem.3873" }
%"struct.std::__1::__compressed_pair_elem.3873" = type { %"class.blink::protocol::Audits::InspectorIssue"* }
%"class.blink::protocol::Audits::InspectorIssue" = type opaque
%"class.blink::Deprecation" = type <{ %"class.std::__1::bitset", %"class.std::__1::bitset.3877", i32, [4 x i8] }>
%"class.std::__1::bitset" = type { %"class.std::__1::__bitset" }
%"class.std::__1::__bitset" = type { [62 x i64] }
%"class.std::__1::bitset.3877" = type { %"class.std::__1::__bitset.3878" }
%"class.std::__1::__bitset.3878" = type { [25 x i64] }
%"struct.blink::WebWindowFeatures" = type { i32, i8, i32, i8, i32, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, %"class.absl::optional.3879" }
%"class.absl::optional.3879" = type { %"class.absl::optional_internal::optional_data.3880" }
%"class.absl::optional_internal::optional_data.3880" = type { %"class.absl::optional_internal::optional_data_base.3881" }
%"class.absl::optional_internal::optional_data_base.3881" = type { %"class.absl::optional_internal::optional_data_dtor_base.3882" }
%"class.absl::optional_internal::optional_data_dtor_base.3882" = type { i8, %union.anon.3883 }
%union.anon.3883 = type { %"struct.blink::WebImpression" }
%"struct.blink::WebImpression" = type { %"class.blink::WebSecurityOrigin", %"class.absl::optional.3884", i64, %"class.absl::optional.1868", i64 }
%"class.blink::WebSecurityOrigin" = type { %"class.blink::WebPrivatePtr.3570" }
%"class.blink::WebPrivatePtr.3570" = type { i8* }
%"class.absl::optional.3884" = type { %"class.absl::optional_internal::optional_data.3885" }
%"class.absl::optional_internal::optional_data.3885" = type { %"class.absl::optional_internal::optional_data_base.3886" }
%"class.absl::optional_internal::optional_data_base.3886" = type { %"class.absl::optional_internal::optional_data_dtor_base.3887" }
%"class.absl::optional_internal::optional_data_dtor_base.3887" = type { i8, %union.anon.3888 }
%union.anon.3888 = type { %"class.blink::WebSecurityOrigin" }
%"class.mojo::StructPtr.3889" = type { %"class.std::__1::unique_ptr.3890" }
%"class.std::__1::unique_ptr.3890" = type { %"class.std::__1::__compressed_pair.3891" }
%"class.std::__1::__compressed_pair.3891" = type { %"struct.std::__1::__compressed_pair_elem.3892" }
%"struct.std::__1::__compressed_pair_elem.3892" = type { %"class.blink::mojom::blink::PageLifecycleState"* }
%"class.blink::mojom::blink::PageLifecycleState" = type <{ i8, [3 x i8], i32, i8, [3 x i8], i32, i8, [3 x i8] }>
%"class.blink::HeapHashSet.3896" = type { %"class.WTF::HashSet.3899" }
%"class.WTF::HashSet.3899" = type { %"class.WTF::HashTable.3900" }
%"class.WTF::HashTable.3900" = type <{ %"class.blink::WeakMember.3902"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3902" = type opaque
%"class.blink::FrameOrWorkerScheduler::SchedulingAffectingFeatureHandle" = type { i32, %"struct.blink::SchedulingPolicy", %"class.base::WeakPtr.3903" }
%"struct.blink::SchedulingPolicy" = type { i8, i8 }
%"class.base::WeakPtr.3903" = type { %"class.base::internal::WeakPtrBase" }
%"class.std::__1::unique_ptr.3904" = type { %"class.std::__1::__compressed_pair.3905" }
%"class.std::__1::__compressed_pair.3905" = type { %"struct.std::__1::__compressed_pair_elem.3906" }
%"struct.std::__1::__compressed_pair_elem.3906" = type { %"class.blink::PageScheduler"* }
%"class.blink::PageScheduler" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3910" = type { %"class.std::__1::__compressed_pair.3911" }
%"class.std::__1::__compressed_pair.3911" = type { %"struct.std::__1::__compressed_pair_elem.3912" }
%"struct.std::__1::__compressed_pair_elem.3912" = type { %"class.blink::MediaFeatureOverrides"* }
%"class.blink::MediaFeatureOverrides" = type opaque
%"class.blink::mojom::blink::TextAutosizerPageInfo" = type { i32, i32, float }
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.blink::Member.2323" = type { %"class.blink::MemberBase.2324" }
%"class.blink::MemberBase.2324" = type { %"class.blink::FrameOwner"* }
%"class.blink::FrameOwner" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.2325" = type { %"class.blink::MemberBase.2326" }
%"class.blink::MemberBase.2326" = type { %"class.blink::DOMWindow"* }
%"class.blink::DOMWindow" = type { %"class.blink::EventTargetWithInlineData", %"class.blink::Member.2319", %"class.blink::Member.2348", %"class.blink::Member.2350", %"class.blink::Member.2352", i8, %"class.WTF::Vector.2354" }
%"class.blink::EventTargetWithInlineData" = type { %"class.blink::EventTarget", %"class.blink::EventTargetData" }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.2341" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.2329" }
%"class.blink::HeapVector.2329" = type { %"class.WTF::Vector.2332" }
%"class.WTF::Vector.2332" = type { %"class.WTF::VectorBuffer.2333" }
%"class.WTF::VectorBuffer.2333" = type { %"class.WTF::VectorBufferBase.2334", [32 x i8] }
%"class.WTF::VectorBufferBase.2334" = type { %"struct.std::__1::pair.2335"*, i32, i32 }
%"struct.std::__1::pair.2335" = type { %"class.WTF::AtomicString", %"class.blink::Member.2336" }
%"class.blink::Member.2336" = type { %"class.blink::MemberBase.2337" }
%"class.blink::MemberBase.2337" = type { %"class.blink::HeapVector.2338"* }
%"class.blink::HeapVector.2338" = type opaque
%"class.std::__1::unique_ptr.2341" = type { %"class.std::__1::__compressed_pair.2342" }
%"class.std::__1::__compressed_pair.2342" = type { %"struct.std::__1::__compressed_pair_elem.2343" }
%"struct.std::__1::__compressed_pair_elem.2343" = type { %"class.WTF::Vector.2344"* }
%"class.WTF::Vector.2344" = type opaque
%"class.blink::Member.2350" = type { %"class.blink::MemberBase.2351" }
%"class.blink::MemberBase.2351" = type { %"class.blink::InputDeviceCapabilitiesConstants"* }
%"class.blink::InputDeviceCapabilitiesConstants" = type opaque
%"class.blink::Member.2352" = type { %"class.blink::MemberBase.2353" }
%"class.blink::MemberBase.2353" = type { %"class.blink::Location"* }
%"class.blink::Location" = type opaque
%"class.WTF::Vector.2354" = type { %"class.WTF::VectorBuffer.2355" }
%"class.WTF::VectorBuffer.2355" = type { %"class.WTF::VectorBufferBase.2356" }
%"class.WTF::VectorBufferBase.2356" = type { %"struct.blink::DOMWindow::CoopAccessMonitor"*, i32, i32 }
%"struct.blink::DOMWindow::CoopAccessMonitor" = type { i32, %"class.util::TokenType", %"class.mojo::Remote", i8, %"class.WTF::String" }
%"class.util::TokenType" = type { %"class.base::StrongAlias" }
%"class.base::StrongAlias" = type { %"class.base::UnguessableToken" }
%"class.mojo::Remote" = type { %"class.mojo::internal::InterfacePtrState" }
%"class.mojo::internal::InterfacePtrState" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.2450" }
%"class.mojo::internal::InterfacePtrStateBase.base" = type <{ %class.scoped_refptr.2357, %"class.std::__1::unique_ptr.1864", %"class.mojo::ScopedHandleBase", [4 x i8], %class.scoped_refptr.1878, i32 }>
%class.scoped_refptr.2357 = type { %"class.mojo::internal::MultiplexRouter"* }
%"class.mojo::internal::MultiplexRouter" = type <{ %"class.mojo::MessageReceiver", %"class.mojo::AssociatedGroupController.base", [4 x i8], %"class.mojo::PipeControlMessageHandlerDelegate", i32, i8, [3 x i8], %class.scoped_refptr.1878, %"class.mojo::MessageHeaderValidator"*, %"class.mojo::MessageDispatcher", %"class.mojo::Connector", %"class.mojo::ScopedHandleBase", [4 x i8], %"class.absl::optional.2416", %"class.absl::optional.2421", %"class.absl::optional.2374", %"class.mojo::PipeControlMessageHandler", %"class.mojo::PipeControlMessageProxy", %"class.base::small_map", i32, [4 x i8], %"class.base::circular_deque", %"class.std::__1::map.2441", i8, [7 x i8], %class.scoped_refptr.1878, i8, i8, i8, i8, i8, [3 x i8] }>
%"class.mojo::AssociatedGroupController.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.1891" }>
%"class.mojo::PipeControlMessageHandlerDelegate" = type { i32 (...)** }
%"class.mojo::MessageHeaderValidator" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string" }
%"class.mojo::Connector" = type { %"class.mojo::MessageReceiver", %"class.base::OnceCallback", %"class.mojo::ScopedHandleBase", %"class.mojo::MessageReceiver"*, %class.scoped_refptr.1878, %"class.std::__1::unique_ptr.2358", %"class.absl::optional.2368", %"struct.std::__1::atomic.238", i8, i8, i8, i8, i32, i32, %"class.absl::optional.2374", %"class.std::__1::unique_ptr.2379", i8, i64, %class.scoped_refptr.2413, %"class.base::Lock", i8, i8*, %"class.mojo::Connector::RunLoopNestingObserver"*, i8, i64, %"class.mojo::ConnectionGroup::Ref", %"class.base::WeakPtr.2414", %"class.base::WeakPtrFactory.2415" }
%"class.std::__1::unique_ptr.2358" = type { %"class.std::__1::__compressed_pair.2359" }
%"class.std::__1::__compressed_pair.2359" = type { %"struct.std::__1::__compressed_pair_elem.2360" }
%"struct.std::__1::__compressed_pair_elem.2360" = type { %"class.mojo::SimpleWatcher"* }
%"class.mojo::SimpleWatcher" = type { i32, %class.scoped_refptr.1878, i8, %"class.mojo::ScopedHandleBase.2361", %class.scoped_refptr.2362, %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2363", i8*, %"class.base::WeakPtrFactory.2364" }
%"class.mojo::ScopedHandleBase.2361" = type { %"class.mojo::TrapHandle" }
%"class.mojo::TrapHandle" = type { %"class.mojo::Handle" }
%class.scoped_refptr.2362 = type { %"class.mojo::SimpleWatcher::Context"* }
%"class.mojo::SimpleWatcher::Context" = type opaque
%"class.base::RepeatingCallback.2363" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.base::WeakPtrFactory.2364" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2368" = type { %"class.absl::optional_internal::optional_data.2369" }
%"class.absl::optional_internal::optional_data.2369" = type { %"class.absl::optional_internal::optional_data_base.2370" }
%"class.absl::optional_internal::optional_data_base.2370" = type { %"class.absl::optional_internal::optional_data_dtor_base.2371" }
%"class.absl::optional_internal::optional_data_dtor_base.2371" = type { i8, %union.anon.2372 }
%union.anon.2372 = type { %"class.mojo::HandleSignalTracker" }
%"class.mojo::HandleSignalTracker" = type { %"class.base::RepeatingCallback.2373", %"struct.mojo::HandleSignalsState", %"class.mojo::SimpleWatcher", %"class.mojo::SimpleWatcher" }
%"class.base::RepeatingCallback.2373" = type { %"class.base::internal::CallbackBaseCopyable" }
%"struct.mojo::HandleSignalsState" = type { %struct.MojoHandleSignalsState }
%struct.MojoHandleSignalsState = type { i32, i32 }
%"class.std::__1::unique_ptr.2379" = type { %"class.std::__1::__compressed_pair.2380" }
%"class.std::__1::__compressed_pair.2380" = type { %"struct.std::__1::__compressed_pair_elem.2381" }
%"struct.std::__1::__compressed_pair_elem.2381" = type { %"class.mojo::SyncHandleWatcher"* }
%"class.mojo::SyncHandleWatcher" = type { %"class.mojo::Handle", i32, %"class.base::RepeatingCallback.2382", i8, i64, %class.scoped_refptr.2383, %class.scoped_refptr.2408 }
%"class.base::RepeatingCallback.2382" = type { %"class.base::internal::CallbackBaseCopyable" }
%class.scoped_refptr.2383 = type { %"class.mojo::SyncHandleRegistry"* }
%"class.mojo::SyncHandleRegistry" = type <{ %"class.base::RefCounted.2384", [4 x i8], %"class.mojo::WaitSet", %"class.std::__1::map.2386", %"class.std::__1::map.2397", i8, [7 x i8] }>
%"class.base::RefCounted.2384" = type { %"class.base::subtle::RefCountedBase" }
%"class.mojo::WaitSet" = type { %class.scoped_refptr.2385 }
%class.scoped_refptr.2385 = type { %"class.mojo::WaitSet::State"* }
%"class.mojo::WaitSet::State" = type opaque
%"class.std::__1::map.2386" = type { %"class.std::__1::__tree.2387" }
%"class.std::__1::__tree.2387" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2388", %"class.std::__1::__compressed_pair.2392" }
%"class.std::__1::__compressed_pair.2388" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.2392" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::map.2397" = type { %"class.std::__1::__tree.2398" }
%"class.std::__1::__tree.2398" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2399", %"class.std::__1::__compressed_pair.2403" }
%"class.std::__1::__compressed_pair.2399" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.2403" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%class.scoped_refptr.2408 = type { %"class.base::RefCountedData.2409"* }
%"class.base::RefCountedData.2409" = type opaque
%class.scoped_refptr.2413 = type { %"class.mojo::internal::MessageQuotaChecker"* }
%"class.mojo::internal::MessageQuotaChecker" = type opaque
%"class.mojo::Connector::RunLoopNestingObserver" = type opaque
%"class.base::WeakPtr.2414" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::WeakPtrFactory.2415" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.absl::optional.2416" = type { %"class.absl::optional_internal::optional_data.2417" }
%"class.absl::optional_internal::optional_data.2417" = type { %"class.absl::optional_internal::optional_data_base.2418" }
%"class.absl::optional_internal::optional_data_base.2418" = type { %"class.absl::optional_internal::optional_data_dtor_base.2419" }
%"class.absl::optional_internal::optional_data_dtor_base.2419" = type { i8, %union.anon.2420 }
%union.anon.2420 = type { %"class.mojo::SimpleWatcher" }
%"class.absl::optional.2421" = type { %"class.absl::optional_internal::optional_data.2422" }
%"class.absl::optional_internal::optional_data.2422" = type { %"class.absl::optional_internal::optional_data_base.2423" }
%"class.absl::optional_internal::optional_data_base.2423" = type { %"class.absl::optional_internal::optional_data_dtor_base.2424" }
%"class.absl::optional_internal::optional_data_dtor_base.2424" = type { i8, [7 x i8], %union.anon.2425 }
%union.anon.2425 = type { %"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" }
%"struct.mojo::internal::MultiplexRouter::ExclusiveSyncWaitInfo" = type <{ i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.absl::optional.2374" = type { %"class.absl::optional_internal::optional_data.2375" }
%"class.absl::optional_internal::optional_data.2375" = type { %"class.absl::optional_internal::optional_data_base.2376" }
%"class.absl::optional_internal::optional_data_base.2376" = type { %"class.absl::optional_internal::optional_data_dtor_base.2377" }
%"class.absl::optional_internal::optional_data_dtor_base.2377" = type { i8, %union.anon.2378 }
%union.anon.2378 = type { %"class.base::Lock" }
%"class.mojo::PipeControlMessageHandler" = type { %"class.mojo::MessageReceiver", %"class.std::__1::basic_string", %"class.mojo::PipeControlMessageHandlerDelegate"* }
%"class.mojo::PipeControlMessageProxy" = type { %"class.mojo::MessageReceiver"* }
%"class.base::small_map" = type { i64, %"class.base::internal::small_map_default_init", %union.anon.2426 }
%"class.base::internal::small_map_default_init" = type { i8 }
%union.anon.2426 = type { %"class.std::__1::map.2429" }
%"class.std::__1::map.2429" = type { %"class.std::__1::__tree.2430" }
%"class.std::__1::__tree.2430" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2431", %"class.std::__1::__compressed_pair.2435" }
%"class.std::__1::__compressed_pair.2431" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.2435" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::circular_deque" = type { %"class.base::internal::VectorBuffer", i64, i64 }
%"class.base::internal::VectorBuffer" = type { %"class.std::__1::unique_ptr.2440"*, i64 }
%"class.std::__1::unique_ptr.2440" = type opaque
%"class.std::__1::map.2441" = type { %"class.std::__1::__tree.2442" }
%"class.std::__1::__tree.2442" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.2443", %"class.std::__1::__compressed_pair.2447" }
%"class.std::__1::__compressed_pair.2443" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.2447" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.std::__1::unique_ptr.2450" = type { %"class.std::__1::__compressed_pair.2451" }
%"class.std::__1::__compressed_pair.2451" = type { %"struct.std::__1::__compressed_pair_elem.2452" }
%"struct.std::__1::__compressed_pair_elem.2452" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporterProxy" = type { %"class.network::mojom::blink::CrossOriginOpenerPolicyReporter", %"class.mojo::MessageReceiverWithResponder"* }
%"class.network::mojom::blink::CrossOriginOpenerPolicyReporter" = type { i32 (...)** }
%"class.blink::Member.2458" = type { %"class.blink::MemberBase.2459" }
%"class.blink::MemberBase.2459" = type { %"class.blink::FrameClient"* }
%"class.blink::FrameClient" = type opaque
%"class.blink::Member.2348" = type { %"class.blink::MemberBase.2349" }
%"class.blink::MemberBase.2349" = type { %"class.blink::WindowProxyManager"* }
%"class.blink::WindowProxyManager" = type opaque
%"class.blink::FrameLifecycle" = type { i32 }
%"class.blink::Member.2319" = type { %"class.blink::MemberBase.2320" }
%"class.blink::MemberBase.2320" = type { %"class.blink::Frame"* }
%"class.blink::NavigationRateLimiter" = type <{ %"class.blink::Member.2319", %"class.base::TimeTicks", i32, i8, i8, [2 x i8] }>
%"class.base::flat_map" = type { %"class.base::internal::flat_tree.2460" }
%"class.base::internal::flat_tree.2460" = type { %"class.std::__1::vector.2461" }
%"class.std::__1::vector.2461" = type { %"class.std::__1::__vector_base.2462" }
%"class.std::__1::__vector_base.2462" = type { %"struct.std::__1::pair.2463"*, %"struct.std::__1::pair.2463"*, %"class.std::__1::__compressed_pair.2464" }
%"struct.std::__1::pair.2463" = type { i32, [4 x i8], %"class.blink::PolicyValue" }
%"class.std::__1::__compressed_pair.2464" = type { %"struct.std::__1::__compressed_pair_elem.2465" }
%"struct.std::__1::__compressed_pair_elem.2465" = type { %"struct.std::__1::pair.2463"* }
%"class.blink::Member.2469" = type { %"class.blink::MemberBase.2470" }
%"class.blink::MemberBase.2470" = type { %"class.blink::WindowAgentFactory"* }
%"class.blink::WindowAgentFactory" = type opaque
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"class.absl::optional.2471" = type { %"class.absl::optional_internal::optional_data.2472" }
%"class.absl::optional_internal::optional_data.2472" = type { %"class.absl::optional_internal::optional_data_base.2473" }
%"class.absl::optional_internal::optional_data_base.2473" = type { %"class.absl::optional_internal::optional_data_dtor_base.2474" }
%"class.absl::optional_internal::optional_data_dtor_base.2474" = type { i8, %union.anon.2475 }
%union.anon.2475 = type { %"class.std::__1::basic_string" }
%"class.blink::UserActivationState" = type { i8, %"class.base::TimeTicks", %"class.base::TimeTicks", i32, i32 }
%"class.blink::MultiToken" = type <{ %"class.base::UnguessableToken", i32, [4 x i8] }>
%"class.blink::TaskHandle" = type { %class.scoped_refptr.1247 }
%class.scoped_refptr.1247 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::OpenedFrameTracker" = type { %"class.blink::HeapHashSet.2481" }
%"class.blink::HeapHashSet.2481" = type { %"class.WTF::HashSet.2484" }
%"class.WTF::HashSet.2484" = type { %"class.WTF::HashTable.2485" }
%"class.WTF::HashTable.2485" = type <{ %"class.blink::WeakMember.2487"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2487" = type opaque
%"class.blink::FrameScheduler::Delegate" = type { i32 (...)** }
%"class.blink::Supplementable.2488" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.2489" }
%"class.blink::HeapHashMap.2489" = type { %"class.WTF::HashMap.2492" }
%"class.WTF::HashMap.2492" = type { %"class.WTF::HashTable.2493" }
%"class.WTF::HashTable.2493" = type <{ %"struct.WTF::KeyValuePair.2495"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2495" = type opaque
%"class.blink::mojom::blink::LocalFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::LocalMainFrame" = type { i32 (...)** }
%"class.blink::mojom::blink::FullscreenVideoElementHandler" = type { i32 (...)** }
%"class.blink::mojom::blink::HighPriorityLocalFrame" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2496" = type { %"class.std::__1::__compressed_pair.2497" }
%"class.std::__1::__compressed_pair.2497" = type { %"struct.std::__1::__compressed_pair_elem.2498" }
%"struct.std::__1::__compressed_pair_elem.2498" = type { %"class.blink::FrameScheduler"* }
%"class.blink::FrameScheduler" = type { %"class.blink::FrameOrWorkerScheduler" }
%"class.blink::FrameOrWorkerScheduler" = type { i32 (...)**, %"class.WTF::HashMap.2499", %"class.base::WeakPtrFactory.2504" }
%"class.WTF::HashMap.2499" = type { %"class.WTF::HashTable.2500" }
%"class.WTF::HashTable.2500" = type <{ %"struct.WTF::KeyValuePair.2503"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2503" = type opaque
%"class.base::WeakPtrFactory.2504" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoUniqueReceiverSet" = type { %"class.blink::Member.2508" }
%"class.blink::Member.2508" = type { %"class.blink::MemberBase.2509" }
%"class.blink::MemberBase.2509" = type { %"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoUniqueReceiverSet<blink::mojom::blink::PauseSubresourceLoadingHandle, std::__1::default_delete<blink::mojom::blink::PauseSubresourceLoadingHandle>, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::ReceiverSetBase" }
%"class.blink::ContextLifecycleObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.4845" }
%"class.blink::WeakMember.4845" = type { %"class.blink::MemberBase.4846" }
%"class.blink::MemberBase.4846" = type { %"class.blink::ContextLifecycleNotifier"* }
%"class.mojo::ReceiverSetBase" = type { %"class.mojo::ReceiverSetState" }
%"class.mojo::ReceiverSetState" = type { %"class.base::RepeatingCallback", %"class.base::RepeatingCallback.4847", i64, %"class.std::__1::map.4848", i8*, i64, %"class.base::WeakPtrFactory.4857" }
%"class.base::RepeatingCallback.4847" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::map.4848" = type { %"class.std::__1::__tree.4849" }
%"class.std::__1::__tree.4849" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.4850", %"class.std::__1::__compressed_pair.4854" }
%"class.std::__1::__compressed_pair.4850" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.4854" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.base::WeakPtrFactory.4857" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapHashSet.2510" = type { %"class.WTF::HashSet.2513" }
%"class.WTF::HashSet.2513" = type { %"class.WTF::HashTable.2514" }
%"class.WTF::HashTable.2514" = type <{ %"class.blink::WeakMember.2516"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.2516" = type opaque
%"class.blink::FrameLoader" = type { %"class.blink::Member.2076", %"class.blink::Member.2517", %"class.blink::Member.2519", %"class.std::__1::unique_ptr.2521", i32, i8, i8, i8, i32, %"class.blink::WebScopedVirtualTimePauser", %"class.WTF::HashSet.2527" }
%"class.blink::Member.2517" = type { %"class.blink::MemberBase.2518" }
%"class.blink::MemberBase.2518" = type { %"class.blink::ProgressTracker"* }
%"class.blink::ProgressTracker" = type opaque
%"class.blink::Member.2519" = type { %"class.blink::MemberBase.2520" }
%"class.blink::MemberBase.2520" = type { %"class.blink::DocumentLoader"* }
%"class.blink::DocumentLoader" = type { %"class.blink::UseCounter", %"class.blink::WebNavigationBodyLoader::Client", %"class.WTF::Vector.3041", %"class.blink::Member.3565", %"class.std::__1::unique_ptr.3567", %"class.std::__1::unique_ptr.1819", %"class.blink::KURL", %"class.WTF::AtomicString", %"struct.blink::Referrer", %class.scoped_refptr.3729, %"class.WTF::AtomicString", i32, %"class.absl::optional.3620", %class.scoped_refptr.1763, %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.3585", i8, %"class.absl::optional.3592", [4 x i8], %"struct.blink::FramePolicy", %"class.blink::Member.2076", %"class.blink::Member.3730", %"class.blink::Member.1231", %"class.blink::Member.3736", %"class.blink::KURL", %"struct.blink::Referrer", %"class.blink::ResourceResponse", i32, i8, i8, i8, i8, %"class.mojo::Remote.3738", %class.scoped_refptr.1755, i32, i32, %"class.blink::DocumentLoadTiming", %"class.base::TimeTicks", %"class.blink::Member.3751", %"class.std::__1::unique_ptr.3597", %"struct.blink::DocumentPolicy::ParsedDocumentPolicy", i8, %"class.WTF::Vector.3753", %"class.blink::ClientHintsPreferences", %"struct.blink::DocumentLoader::InitialScrollState", i32, i32, i8, i8, %class.scoped_refptr.3078, %"class.base::UnguessableToken", i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, %class.scoped_refptr.3758, i8, %"class.blink::WebScopedVirtualTimePauser", %"class.blink::Member.3759", %"class.blink::Member.3774", %"class.blink::KURL", %"class.blink::KURL", i64, %"class.blink::UseCounterImpl", %"class.blink::Dactyloscoper", %"class.base::TickClock"*, %"class.WTF::Vector.3787", %"class.WTF::Vector.851", i8, i8, i8, %"class.blink::WebVector.3718", %"class.blink::WebVector.3718", %"class.mojo::Remote.3792" }
%"class.blink::WebNavigationBodyLoader::Client" = type { i32 (...)** }
%"class.WTF::Vector.3041" = type { %"class.WTF::VectorBuffer.3042" }
%"class.WTF::VectorBuffer.3042" = type { %"class.WTF::VectorBufferBase.3043" }
%"class.WTF::VectorBufferBase.3043" = type { %"class.blink::KURL"*, i32, i32 }
%"class.blink::Member.3565" = type { %"class.blink::MemberBase.3566" }
%"class.blink::MemberBase.3566" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.std::__1::unique_ptr.3567" = type { %"class.std::__1::__compressed_pair.3568" }
%"class.std::__1::__compressed_pair.3568" = type { %"struct.std::__1::__compressed_pair_elem.3569" }
%"struct.std::__1::__compressed_pair_elem.3569" = type { %"struct.blink::WebNavigationParams"* }
%"struct.blink::WebNavigationParams" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebHTTPBody", %"class.blink::WebString", i32, %"class.blink::WebSecurityOrigin", %"class.blink::WebURL", %"class.blink::WebURL", i32, %"class.blink::WebVector.3571", %"class.blink::WebURLResponse", %"class.std::__1::unique_ptr.3585", i8, i32, %"class.blink::WebHistoryItem", i8, %"class.absl::optional.3592", %"class.blink::WebSecurityOrigin", i32, %"class.base::UnguessableToken", %"struct.blink::WebNavigationTimings", i8, i8, i8, i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.3597", %"class.base::UnguessableToken", %"class.blink::WebVector.3603", %"class.base::TickClock"*, %"class.blink::WebVector.3612", %"class.absl::optional.3620", %"class.blink::WebURL", %"class.blink::WebURL", i64, %"class.absl::optional.3633", %"class.blink::WebVector.3625", i8, %"class.blink::WebVector.3652", i8, %"class.std::__1::unique_ptr.3660", %"class.blink::WebVector.3718", %"class.blink::WebVector.3718" }
%"class.blink::WebHTTPBody" = type { %"class.blink::WebPrivatePtr" }
%"class.blink::WebPrivatePtr" = type { i8* }
%"class.blink::WebVector.3571" = type { %"class.std::__1::vector.3572" }
%"class.std::__1::vector.3572" = type { %"class.std::__1::__vector_base.3573" }
%"class.std::__1::__vector_base.3573" = type { %"struct.blink::WebNavigationParams::RedirectInfo"*, %"struct.blink::WebNavigationParams::RedirectInfo"*, %"class.std::__1::__compressed_pair.3580" }
%"struct.blink::WebNavigationParams::RedirectInfo" = type { %"class.blink::WebURL", %"class.blink::WebString", %"class.blink::WebString", i32, %"class.blink::WebURLResponse" }
%"class.std::__1::__compressed_pair.3580" = type { %"struct.std::__1::__compressed_pair_elem.3581" }
%"struct.std::__1::__compressed_pair_elem.3581" = type { %"struct.blink::WebNavigationParams::RedirectInfo"* }
%"class.blink::WebURLResponse" = type { %"class.std::__1::unique_ptr.3574", %"class.blink::ResourceResponse"* }
%"class.std::__1::unique_ptr.3574" = type { %"class.std::__1::__compressed_pair.3575" }
%"class.std::__1::__compressed_pair.3575" = type { %"struct.std::__1::__compressed_pair_elem.3576" }
%"struct.std::__1::__compressed_pair_elem.3576" = type { %"class.blink::ResourceResponse"* }
%"class.blink::WebHistoryItem" = type { %"class.blink::WebPrivatePtr.3591", %"class.blink::WebString" }
%"class.blink::WebPrivatePtr.3591" = type { i8* }
%"struct.blink::WebNavigationTimings" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.blink::WebVector.3603" = type { %"class.std::__1::vector.3604" }
%"class.std::__1::vector.3604" = type { %"class.std::__1::__vector_base.3605" }
%"class.std::__1::__vector_base.3605" = type { %"class.std::__1::unique_ptr.3606"*, %"class.std::__1::unique_ptr.3606"*, %"class.std::__1::__compressed_pair.3607" }
%"class.std::__1::unique_ptr.3606" = type opaque
%"class.std::__1::__compressed_pair.3607" = type { %"struct.std::__1::__compressed_pair_elem.3608" }
%"struct.std::__1::__compressed_pair_elem.3608" = type { %"class.std::__1::unique_ptr.3606"* }
%"class.blink::WebVector.3612" = type { %"class.std::__1::vector.3613" }
%"class.std::__1::vector.3613" = type { %"class.std::__1::__vector_base.3614" }
%"class.std::__1::__vector_base.3614" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3615" }
%"class.std::__1::__compressed_pair.3615" = type { %"struct.std::__1::__compressed_pair_elem.3616" }
%"struct.std::__1::__compressed_pair_elem.3616" = type { i32* }
%"class.blink::WebURL" = type <{ %"class.blink::WebString", %"struct.url::Parsed", i8, [7 x i8] }>
%"class.absl::optional.3633" = type { %"class.absl::optional_internal::optional_data.3634" }
%"class.absl::optional_internal::optional_data.3634" = type { %"class.absl::optional_internal::optional_data_base.3635" }
%"class.absl::optional_internal::optional_data_base.3635" = type { %"class.absl::optional_internal::optional_data_dtor_base.3636" }
%"class.absl::optional_internal::optional_data_dtor_base.3636" = type { i8, [7 x i8], %union.anon.3637 }
%union.anon.3637 = type { %"struct.blink::FramePolicy" }
%"class.blink::WebVector.3625" = type { %"class.std::__1::vector.3626" }
%"class.std::__1::vector.3626" = type { %"class.std::__1::__vector_base.3627" }
%"class.std::__1::__vector_base.3627" = type { %"class.blink::WebString"*, %"class.blink::WebString"*, %"class.std::__1::__compressed_pair.3628" }
%"class.std::__1::__compressed_pair.3628" = type { %"struct.std::__1::__compressed_pair_elem.3629" }
%"struct.std::__1::__compressed_pair_elem.3629" = type { %"class.blink::WebString"* }
%"class.blink::WebVector.3652" = type { %"class.std::__1::vector.3653" }
%"class.std::__1::vector.3653" = type { %"class.std::__1::__vector_base.3654" }
%"class.std::__1::__vector_base.3654" = type { i32*, i32*, %"class.std::__1::__compressed_pair.3655" }
%"class.std::__1::__compressed_pair.3655" = type { %"struct.std::__1::__compressed_pair_elem.3656" }
%"struct.std::__1::__compressed_pair_elem.3656" = type { i32* }
%"class.std::__1::unique_ptr.3660" = type { %"class.std::__1::__compressed_pair.3661" }
%"class.std::__1::__compressed_pair.3661" = type { %"struct.std::__1::__compressed_pair_elem.3662" }
%"struct.std::__1::__compressed_pair_elem.3662" = type { %"struct.blink::WebPolicyContainer"* }
%"struct.blink::WebPolicyContainer" = type { %"struct.blink::WebPolicyContainerPolicies", %"class.blink::CrossVariantMojoAssociatedRemote" }
%"struct.blink::WebPolicyContainerPolicies" = type { i32, i32, %"class.blink::WebVector.3663" }
%"class.blink::WebVector.3663" = type { %"class.std::__1::vector.3664" }
%"class.std::__1::vector.3664" = type { %"class.std::__1::__vector_base.3665" }
%"class.std::__1::__vector_base.3665" = type { %"struct.blink::WebContentSecurityPolicy"*, %"struct.blink::WebContentSecurityPolicy"*, %"class.std::__1::__compressed_pair.3710" }
%"struct.blink::WebContentSecurityPolicy" = type { %"struct.blink::WebCSPSource", %"class.blink::WebVector.3666", %"class.blink::WebVector.3674", i8, i8, i8, i32, %"struct.blink::WebContentSecurityPolicyHeader", i8, %"class.blink::WebVector.3625", i32, [4 x i8], %"class.absl::optional.3705", %"class.blink::WebVector.3625" }
%"struct.blink::WebCSPSource" = type <{ %"class.blink::WebString", %"class.blink::WebString", i32, [4 x i8], %"class.blink::WebString", i8, i8, [6 x i8] }>
%"class.blink::WebVector.3666" = type { %"class.std::__1::vector.3667" }
%"class.std::__1::vector.3667" = type { %"class.std::__1::__vector_base.3668" }
%"class.std::__1::__vector_base.3668" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"struct.blink::WebContentSecurityPolicyRawDirective"*, %"class.std::__1::__compressed_pair.3669" }
%"struct.blink::WebContentSecurityPolicyRawDirective" = type { i32, %"class.blink::WebString" }
%"class.std::__1::__compressed_pair.3669" = type { %"struct.std::__1::__compressed_pair_elem.3670" }
%"struct.std::__1::__compressed_pair_elem.3670" = type { %"struct.blink::WebContentSecurityPolicyRawDirective"* }
%"class.blink::WebVector.3674" = type { %"class.std::__1::vector.3675" }
%"class.std::__1::vector.3675" = type { %"class.std::__1::__vector_base.3676" }
%"class.std::__1::__vector_base.3676" = type { %"struct.blink::WebContentSecurityPolicyDirective"*, %"struct.blink::WebContentSecurityPolicyDirective"*, %"class.std::__1::__compressed_pair.3700" }
%"struct.blink::WebContentSecurityPolicyDirective" = type { i32, [4 x i8], %"struct.blink::WebCSPSourceList" }
%"struct.blink::WebCSPSourceList" = type <{ %"class.blink::WebVector.3677", %"class.blink::WebVector.3625", %"class.blink::WebVector.3685", i8, i8, i8, i8, i8, i8, i8, i8, i8, [7 x i8] }>
%"class.blink::WebVector.3677" = type { %"class.std::__1::vector.3678" }
%"class.std::__1::vector.3678" = type { %"class.std::__1::__vector_base.3679" }
%"class.std::__1::__vector_base.3679" = type { %"struct.blink::WebCSPSource"*, %"struct.blink::WebCSPSource"*, %"class.std::__1::__compressed_pair.3680" }
%"class.std::__1::__compressed_pair.3680" = type { %"struct.std::__1::__compressed_pair_elem.3681" }
%"struct.std::__1::__compressed_pair_elem.3681" = type { %"struct.blink::WebCSPSource"* }
%"class.blink::WebVector.3685" = type { %"class.std::__1::vector.3686" }
%"class.std::__1::vector.3686" = type { %"class.std::__1::__vector_base.3687" }
%"class.std::__1::__vector_base.3687" = type { %"struct.blink::WebCSPHashSource"*, %"struct.blink::WebCSPHashSource"*, %"class.std::__1::__compressed_pair.3695" }
%"struct.blink::WebCSPHashSource" = type { i32, %"class.blink::WebVector.3688" }
%"class.blink::WebVector.3688" = type { %"class.std::__1::vector.3689" }
%"class.std::__1::vector.3689" = type { %"class.std::__1::__vector_base.3690" }
%"class.std::__1::__vector_base.3690" = type { i8*, i8*, %"class.std::__1::__compressed_pair.3691" }
%"class.std::__1::__compressed_pair.3691" = type { %"struct.std::__1::__compressed_pair_elem.3400" }
%"class.std::__1::__compressed_pair.3695" = type { %"struct.std::__1::__compressed_pair_elem.3696" }
%"struct.std::__1::__compressed_pair_elem.3696" = type { %"struct.blink::WebCSPHashSource"* }
%"class.std::__1::__compressed_pair.3700" = type { %"struct.std::__1::__compressed_pair_elem.3701" }
%"struct.std::__1::__compressed_pair_elem.3701" = type { %"struct.blink::WebContentSecurityPolicyDirective"* }
%"struct.blink::WebContentSecurityPolicyHeader" = type { %"class.blink::WebString", i32, i32 }
%"class.absl::optional.3705" = type { %"class.absl::optional_internal::optional_data.3706" }
%"class.absl::optional_internal::optional_data.3706" = type { %"class.absl::optional_internal::optional_data_base.3707" }
%"class.absl::optional_internal::optional_data_base.3707" = type { %"class.absl::optional_internal::optional_data_dtor_base.3708" }
%"class.absl::optional_internal::optional_data_dtor_base.3708" = type { i8, [7 x i8], %union.anon.3709 }
%union.anon.3709 = type { %"struct.blink::WebCSPTrustedTypes" }
%"struct.blink::WebCSPTrustedTypes" = type <{ %"class.blink::WebVector.3625", i8, i8, [6 x i8] }>
%"class.std::__1::__compressed_pair.3710" = type { %"struct.std::__1::__compressed_pair_elem.3711" }
%"struct.std::__1::__compressed_pair_elem.3711" = type { %"struct.blink::WebContentSecurityPolicy"* }
%"class.blink::CrossVariantMojoAssociatedRemote" = type { i32, %"class.mojo::ScopedInterfaceEndpointHandle" }
%class.scoped_refptr.3729 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.absl::optional.3620" = type { %"class.absl::optional_internal::optional_data.3621" }
%"class.absl::optional_internal::optional_data.3621" = type { %"class.absl::optional_internal::optional_data_base.3622" }
%"class.absl::optional_internal::optional_data_base.3622" = type { %"class.absl::optional_internal::optional_data_dtor_base.3623" }
%"class.absl::optional_internal::optional_data_dtor_base.3623" = type { i8, %union.anon.3624 }
%union.anon.3624 = type { %"struct.blink::WebOriginPolicy" }
%"struct.blink::WebOriginPolicy" = type { %"class.blink::WebVector.3625", %"class.blink::WebString", %"class.blink::WebVector.3625", %"class.blink::WebVector.3625" }
%"class.std::__1::unique_ptr.3585" = type { %"class.std::__1::__compressed_pair.3586" }
%"class.std::__1::__compressed_pair.3586" = type { %"struct.std::__1::__compressed_pair_elem.3587" }
%"struct.std::__1::__compressed_pair_elem.3587" = type { %"class.blink::WebNavigationBodyLoader"* }
%"class.blink::WebNavigationBodyLoader" = type { i32 (...)** }
%"class.absl::optional.3592" = type { %"class.absl::optional_internal::optional_data.3593" }
%"class.absl::optional_internal::optional_data.3593" = type { %"class.absl::optional_internal::optional_data_base.3594" }
%"class.absl::optional_internal::optional_data_base.3594" = type { %"class.absl::optional_internal::optional_data_dtor_base.3595" }
%"class.absl::optional_internal::optional_data_dtor_base.3595" = type { i8, %union.anon.3596 }
%union.anon.3596 = type { i32 }
%"struct.blink::FramePolicy" = type <{ i32, [4 x i8], %"class.std::__1::vector.3638", %"class.base::flat_map", i8, [7 x i8] }>
%"class.std::__1::vector.3638" = type { %"class.std::__1::__vector_base.3639" }
%"class.std::__1::__vector_base.3639" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"struct.blink::ParsedPermissionsPolicyDeclaration"*, %"class.std::__1::__compressed_pair.3647" }
%"struct.blink::ParsedPermissionsPolicyDeclaration" = type <{ i32, [4 x i8], %"class.std::__1::vector.3640", i8, i8, [6 x i8] }>
%"class.std::__1::vector.3640" = type { %"class.std::__1::__vector_base.3641" }
%"class.std::__1::__vector_base.3641" = type { %"class.url::Origin"*, %"class.url::Origin"*, %"class.std::__1::__compressed_pair.3642" }
%"class.std::__1::__compressed_pair.3642" = type { %"struct.std::__1::__compressed_pair_elem.3643" }
%"struct.std::__1::__compressed_pair_elem.3643" = type { %"class.url::Origin"* }
%"class.std::__1::__compressed_pair.3647" = type { %"struct.std::__1::__compressed_pair_elem.3648" }
%"struct.std::__1::__compressed_pair_elem.3648" = type { %"struct.blink::ParsedPermissionsPolicyDeclaration"* }
%"class.blink::Member.3730" = type { %"class.blink::MemberBase.3731" }
%"class.blink::MemberBase.3731" = type { %"class.blink::HistoryItem"* }
%"class.blink::HistoryItem" = type { %"class.WTF::String", %"struct.blink::Referrer", %"class.WTF::Vector.851", %"class.blink::Member.3734", %"class.absl::optional.1035", i64, i64, i32, %class.scoped_refptr.3395, %class.scoped_refptr.3729, %"class.WTF::AtomicString", %"class.WTF::String", %"class.WTF::String", %class.scoped_refptr.3395 }
%"class.blink::Member.3734" = type { %"class.blink::MemberBase.3735" }
%"class.blink::MemberBase.3735" = type { %"class.blink::DocumentState"* }
%"class.blink::DocumentState" = type opaque
%"class.blink::Member.3736" = type { %"class.blink::MemberBase.3737" }
%"class.blink::MemberBase.3737" = type { %"class.blink::SubresourceFilter"* }
%"class.blink::SubresourceFilter" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.3029", %class.scoped_refptr.3039, %class.scoped_refptr.3040, %"struct.blink::CacheControlHeader", %"class.absl::optional.1868", %"class.absl::optional.2276", %"class.absl::optional.2276", %"class.absl::optional.2276", i64, %"class.blink::KURL", %"class.WTF::Vector.3041", %"class.WTF::String", %"class.WTF::Vector.851", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.2476", %"class.WTF::Vector.851", %"class.blink::KURL", %"class.absl::optional.3046" }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap.2986" }
%"class.WTF::HashMap.2986" = type { %"class.WTF::HashTable.2987" }
%"class.WTF::HashTable.2987" = type <{ %"struct.WTF::KeyValuePair.424"*, i32, i32, i32, [4 x i8] }>
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.3029" = type { %"class.absl::optional_internal::optional_data.3030" }
%"class.absl::optional_internal::optional_data.3030" = type { %"class.absl::optional_internal::optional_data_base.3031" }
%"class.absl::optional_internal::optional_data_base.3031" = type { %"class.absl::optional_internal::optional_data_dtor_base.3032" }
%"class.absl::optional_internal::optional_data_dtor_base.3032" = type { i8, %union.anon.3033 }
%union.anon.3033 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.851", %"class.WTF::String", i64, i64, %"class.WTF::Vector.284", %"class.WTF::Vector.3034" }
%"class.WTF::Vector.3034" = type { %"class.WTF::VectorBuffer.3035" }
%"class.WTF::VectorBuffer.3035" = type { %"class.WTF::VectorBufferBase.3036" }
%"class.WTF::VectorBufferBase.3036" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.3039 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.3040 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.1868", %"class.absl::optional.1868" }
%"class.absl::optional.3046" = type { %"class.absl::optional_internal::optional_data.3047" }
%"class.absl::optional_internal::optional_data.3047" = type { %"class.absl::optional_internal::optional_data_base.3048" }
%"class.absl::optional_internal::optional_data_base.3048" = type { %"class.absl::optional_internal::optional_data_dtor_base.3049" }
%"class.absl::optional_internal::optional_data_dtor_base.3049" = type { i8, %union.anon.3050 }
%union.anon.3050 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%"class.mojo::Remote.3738" = type { %"class.mojo::internal::InterfacePtrState.3739" }
%"class.mojo::internal::InterfacePtrState.3739" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3740" }
%"class.std::__1::unique_ptr.3740" = type { %"class.std::__1::__compressed_pair.3741" }
%"class.std::__1::__compressed_pair.3741" = type { %"struct.std::__1::__compressed_pair_elem.3742" }
%"struct.std::__1::__compressed_pair_elem.3742" = type { %"class.blink::mojom::blink::ContentSecurityNotifierProxy"* }
%"class.blink::mojom::blink::ContentSecurityNotifierProxy" = type { %"class.blink::mojom::blink::ContentSecurityNotifier", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ContentSecurityNotifier" = type { i32 (...)** }
%"class.blink::DocumentLoadTiming" = type { %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::TimeTicks", %"class.absl::optional.1868", %"class.absl::optional.1868", %"class.absl::optional.1868", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.WTF::Vector.3746", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i16, %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", i8, i8, %"class.base::Clock"*, %"class.base::TickClock"*, %"class.blink::Member.2519" }
%"class.WTF::Vector.3746" = type { %"class.WTF::VectorBuffer.3747" }
%"class.WTF::VectorBuffer.3747" = type { %"class.WTF::VectorBufferBase.3748" }
%"class.WTF::VectorBufferBase.3748" = type { %"class.base::TimeTicks"*, i32, i32 }
%"class.base::Clock" = type opaque
%"class.blink::Member.3751" = type { %"class.blink::MemberBase.3752" }
%"class.blink::MemberBase.3752" = type { %"class.blink::ApplicationCacheHostForFrame"* }
%"class.blink::ApplicationCacheHostForFrame" = type opaque
%"class.std::__1::unique_ptr.3597" = type { %"class.std::__1::__compressed_pair.3598" }
%"class.std::__1::__compressed_pair.3598" = type { %"struct.std::__1::__compressed_pair_elem.3599" }
%"struct.std::__1::__compressed_pair_elem.3599" = type { %"class.blink::WebServiceWorkerNetworkProvider"* }
%"class.blink::WebServiceWorkerNetworkProvider" = type { i32 (...)** }
%"struct.blink::DocumentPolicy::ParsedDocumentPolicy" = type { %"class.base::flat_map", %"class.base::flat_map.3553" }
%"class.WTF::Vector.3753" = type { %"class.WTF::VectorBuffer.3754" }
%"class.WTF::VectorBuffer.3754" = type { %"class.WTF::VectorBufferBase.3755" }
%"class.WTF::VectorBufferBase.3755" = type { %"struct.blink::PolicyParserMessageBuffer::Message"*, i32, i32 }
%"struct.blink::PolicyParserMessageBuffer::Message" = type { i32, %"class.WTF::String" }
%"struct.blink::DocumentLoader::InitialScrollState" = type { i8, i8 }
%class.scoped_refptr.3078 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.3079", i64, %"class.WTF::Vector.3081", %"class.WTF::Vector.3086" }
%"class.WTF::RefCounted.3079" = type { %"class.base::RefCounted.3080" }
%"class.base::RefCounted.3080" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.3081" = type { %"class.WTF::VectorBuffer.3082" }
%"class.WTF::VectorBuffer.3082" = type { %"class.WTF::VectorBufferBase.3083" }
%"class.WTF::VectorBufferBase.3083" = type { i8*, i32, i32 }
%"class.WTF::Vector.3086" = type { %"class.WTF::VectorBuffer.3087" }
%"class.WTF::VectorBuffer.3087" = type { %"class.WTF::VectorBufferBase.3088" }
%"class.WTF::VectorBufferBase.3088" = type { %"class.std::__1::unique_ptr.3089"*, i32, i32 }
%"class.std::__1::unique_ptr.3089" = type opaque
%class.scoped_refptr.3758 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::Member.3759" = type { %"class.blink::MemberBase.3760" }
%"class.blink::MemberBase.3760" = type { %"class.blink::SourceKeyedCachedMetadataHandler"* }
%"class.blink::SourceKeyedCachedMetadataHandler" = type { %"class.blink::CachedMetadataHandler", %"class.WTF::HashMap.3763", %"class.std::__1::unique_ptr.3768", %"class.WTF::TextEncoding" }
%"class.blink::CachedMetadataHandler" = type { i32 (...)** }
%"class.WTF::HashMap.3763" = type { %"class.WTF::HashTable.3764" }
%"class.WTF::HashTable.3764" = type <{ %"struct.WTF::KeyValuePair.3767"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3767" = type { %"class.WTF::Vector.4956", %class.scoped_refptr.4960 }
%"class.WTF::Vector.4956" = type { %"class.WTF::VectorBuffer.4957" }
%"class.WTF::VectorBuffer.4957" = type { %"class.WTF::VectorBufferBase.2902", [32 x i8] }
%"class.WTF::VectorBufferBase.2902" = type { i8*, i32, i32 }
%class.scoped_refptr.4960 = type { %"class.blink::CachedMetadata"* }
%"class.blink::CachedMetadata" = type { %"class.WTF::RefCounted.4961", %"class.WTF::Vector.2900", %"class.mojo_base::BigBuffer" }
%"class.WTF::RefCounted.4961" = type { %"class.base::RefCounted.4962" }
%"class.base::RefCounted.4962" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.2900" = type { %"class.WTF::VectorBuffer.2901" }
%"class.WTF::VectorBuffer.2901" = type { %"class.WTF::VectorBufferBase.2902" }
%"class.mojo_base::BigBuffer" = type { i32, %"class.std::__1::unique_ptr.4963", i64, %"class.absl::optional.4968" }
%"class.std::__1::unique_ptr.4963" = type { %"class.std::__1::__compressed_pair.4964" }
%"class.std::__1::__compressed_pair.4964" = type { %"struct.std::__1::__compressed_pair_elem.3400" }
%"class.absl::optional.4968" = type { %"class.absl::optional_internal::optional_data.4969" }
%"class.absl::optional_internal::optional_data.4969" = type { %"class.absl::optional_internal::optional_data_base.4970" }
%"class.absl::optional_internal::optional_data_base.4970" = type { %"class.absl::optional_internal::optional_data_dtor_base.4971" }
%"class.absl::optional_internal::optional_data_dtor_base.4971" = type { i8, %union.anon.4972 }
%union.anon.4972 = type { %"class.mojo_base::internal::BigBufferSharedMemoryRegion" }
%"class.mojo_base::internal::BigBufferSharedMemoryRegion" = type { i64, %"class.mojo::ScopedHandleBase.4973", %"class.std::__1::unique_ptr.4974" }
%"class.mojo::ScopedHandleBase.4973" = type { %"class.mojo::SharedBufferHandle" }
%"class.mojo::SharedBufferHandle" = type { %"class.mojo::Handle" }
%"class.std::__1::unique_ptr.4974" = type { %"class.std::__1::__compressed_pair.4975" }
%"class.std::__1::__compressed_pair.4975" = type { %"struct.std::__1::__compressed_pair_elem.4976" }
%"struct.std::__1::__compressed_pair_elem.4976" = type { i8* }
%"class.std::__1::unique_ptr.3768" = type { %"class.std::__1::__compressed_pair.3769" }
%"class.std::__1::__compressed_pair.3769" = type { %"struct.std::__1::__compressed_pair_elem.3770" }
%"struct.std::__1::__compressed_pair_elem.3770" = type { %"class.blink::CachedMetadataSender"* }
%"class.blink::CachedMetadataSender" = type { i32 (...)** }
%"class.blink::Member.3774" = type { %"class.blink::MemberBase.3775" }
%"class.blink::MemberBase.3775" = type { %"class.blink::PrefetchedSignedExchangeManager"* }
%"class.blink::PrefetchedSignedExchangeManager" = type opaque
%"class.blink::UseCounterImpl" = type { i32, i32, i32, %"class.blink::UseCounterFeatureTracker", %"class.blink::HeapHashSet.3780" }
%"class.blink::UseCounterFeatureTracker" = type { %"class.std::__1::bitset", %"class.std::__1::bitset.3776", %"class.std::__1::bitset.3776", %"class.std::__1::bitset.3778" }
%"class.std::__1::bitset.3776" = type { %"class.std::__1::__bitset.3777" }
%"class.std::__1::__bitset.3777" = type { [11 x i64] }
%"class.std::__1::bitset.3778" = type { %"class.std::__1::__bitset.3779" }
%"class.std::__1::__bitset.3779" = type { [2 x i64] }
%"class.blink::HeapHashSet.3780" = type { %"class.WTF::HashSet.3783" }
%"class.WTF::HashSet.3783" = type { %"class.WTF::HashTable.3784" }
%"class.WTF::HashTable.3784" = type <{ %"class.blink::Member.3786"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3786" = type opaque
%"class.blink::Dactyloscoper" = type { i8 }
%"class.WTF::Vector.3787" = type { %"class.WTF::VectorBuffer.3788" }
%"class.WTF::VectorBuffer.3788" = type { %"class.WTF::VectorBufferBase.3789" }
%"class.WTF::VectorBufferBase.3789" = type { i32*, i32, i32 }
%"class.blink::WebVector.3718" = type { %"class.std::__1::vector.3719" }
%"class.std::__1::vector.3719" = type { %"class.std::__1::__vector_base.3720" }
%"class.std::__1::__vector_base.3720" = type { %"class.blink::WebHistoryItem"*, %"class.blink::WebHistoryItem"*, %"class.std::__1::__compressed_pair.3721" }
%"class.std::__1::__compressed_pair.3721" = type { %"struct.std::__1::__compressed_pair_elem.3722" }
%"struct.std::__1::__compressed_pair_elem.3722" = type { %"class.blink::WebHistoryItem"* }
%"class.mojo::Remote.3792" = type { %"class.mojo::internal::InterfacePtrState.3793" }
%"class.mojo::internal::InterfacePtrState.3793" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.3794" }
%"class.std::__1::unique_ptr.3794" = type { %"class.std::__1::__compressed_pair.3795" }
%"class.std::__1::__compressed_pair.3795" = type { %"struct.std::__1::__compressed_pair_elem.3796" }
%"struct.std::__1::__compressed_pair_elem.3796" = type { %"class.blink::mojom::CodeCacheHostProxy"* }
%"class.blink::mojom::CodeCacheHostProxy" = type { %"class.blink::mojom::CodeCacheHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::CodeCacheHost" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2521" = type { %"class.std::__1::__compressed_pair.2522" }
%"class.std::__1::__compressed_pair.2522" = type { %"struct.std::__1::__compressed_pair_elem.2523" }
%"struct.std::__1::__compressed_pair_elem.2523" = type { %"struct.blink::FrameLoader::ClientNavigationState"* }
%"struct.blink::FrameLoader::ClientNavigationState" = type { %"class.blink::KURL" }
%"class.WTF::HashSet.2527" = type { %"class.WTF::HashTable.2528" }
%"class.WTF::HashTable.2528" = type <{ %"class.WTF::String"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2531" = type { %"class.blink::MemberBase.2080" }
%"class.blink::Member.343" = type { %"class.blink::MemberBase.344" }
%"class.blink::MemberBase.344" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.348" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.345 }
%class.scoped_refptr.345 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.346", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.346" = type { %"class.base::RefCounted.347" }
%"class.base::RefCounted.347" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.348" = type { %"class.blink::MemberBase.349" }
%"class.blink::MemberBase.349" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.352", %"class.blink::Member.354", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.352" = type { %"class.WTF::SingleThreadedBitField.353" }
%"class.WTF::SingleThreadedBitField.353" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.358 }
%class.scoped_refptr.358 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.359", %"class.WTF::AtomicString", %"class.WTF::Vector.361" }
%"class.WTF::RefCounted.359" = type { %"class.base::RefCounted.360" }
%"class.base::RefCounted.360" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.361" = type { %"class.WTF::VectorBuffer.362" }
%"class.WTF::VectorBuffer.362" = type { %"class.WTF::VectorBufferBase.286", [32 x i8] }
%"class.blink::Member.2532" = type { %"class.blink::MemberBase.2533" }
%"class.blink::MemberBase.2533" = type { %"class.blink::Editor"* }
%"class.blink::Editor" = type opaque
%"class.blink::Member.2534" = type { %"class.blink::MemberBase.2535" }
%"class.blink::MemberBase.2535" = type { %"class.blink::FrameSelection"* }
%"class.blink::FrameSelection" = type { %"class.blink::SynchronousMutationObserver", %"class.blink::Member.2076", %"class.blink::Member.2538", %"class.blink::Member.2540", i32, %"class.blink::LayoutUnit", i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.2542", %"class.blink::Member.2548" }
%"class.blink::SynchronousMutationObserver" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::WeakMember.1254" }
%"class.blink::Member.2538" = type { %"class.blink::MemberBase.2539" }
%"class.blink::MemberBase.2539" = type { %"class.blink::LayoutSelection"* }
%"class.blink::LayoutSelection" = type opaque
%"class.blink::Member.2540" = type { %"class.blink::MemberBase.2541" }
%"class.blink::MemberBase.2541" = type { %"class.blink::SelectionEditor"* }
%"class.blink::SelectionEditor" = type opaque
%"class.std::__1::unique_ptr.2542" = type { %"class.std::__1::__compressed_pair.2543" }
%"class.std::__1::__compressed_pair.2543" = type { %"struct.std::__1::__compressed_pair_elem.2544" }
%"struct.std::__1::__compressed_pair_elem.2544" = type { %"class.blink::GranularityStrategy"* }
%"class.blink::GranularityStrategy" = type opaque
%"class.blink::Member.2548" = type { %"class.blink::MemberBase.2549" }
%"class.blink::MemberBase.2549" = type { %"class.blink::FrameCaret"* }
%"class.blink::FrameCaret" = type opaque
%"class.blink::Member.2550" = type { %"class.blink::MemberBase.2551" }
%"class.blink::MemberBase.2551" = type { %"class.blink::EventHandler"* }
%"class.blink::EventHandler" = type opaque
%"class.blink::Member.2552" = type { %"class.blink::MemberBase.2553" }
%"class.blink::MemberBase.2553" = type { %"class.blink::FrameConsole"* }
%"class.blink::FrameConsole" = type opaque
%class.scoped_refptr.2778 = type { %"class.blink::InspectorTaskRunner"* }
%"class.blink::InspectorTaskRunner" = type opaque
%"class.blink::Member.2779" = type { %"class.blink::MemberBase.2780" }
%"class.blink::MemberBase.2780" = type { %"class.blink::PerformanceMonitor"* }
%"class.blink::PerformanceMonitor" = type opaque
%"class.blink::Member.2792" = type { %"class.blink::MemberBase.2793" }
%"class.blink::MemberBase.2793" = type { %"class.blink::IdlenessDetector"* }
%"class.blink::IdlenessDetector" = type opaque
%"class.blink::Member.2794" = type { %"class.blink::MemberBase.2795" }
%"class.blink::MemberBase.2795" = type { %"class.blink::InspectorIssueReporter"* }
%"class.blink::InspectorIssueReporter" = type opaque
%"class.blink::Member.2796" = type { %"class.blink::MemberBase.2797" }
%"class.blink::MemberBase.2797" = type { %"class.blink::InspectorTraceEvents"* }
%"class.blink::InspectorTraceEvents" = type { i8 }
%"class.blink::Member.2800" = type { %"class.blink::MemberBase.2801" }
%"class.blink::MemberBase.2801" = type { %"class.blink::SmoothScrollSequencer"* }
%"class.blink::SmoothScrollSequencer" = type opaque
%"class.blink::Member.2802" = type { %"class.blink::MemberBase.2803" }
%"class.blink::MemberBase.2803" = type { %"class.blink::ContentCaptureManager"* }
%"class.blink::ContentCaptureManager" = type opaque
%"class.blink::InterfaceRegistry" = type opaque
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.2804" }
%"class.blink::Member.2804" = type { %"class.blink::MemberBase.2805" }
%"class.blink::MemberBase.2805" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::ReportingServiceProxy, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::Remote.4860" }
%"class.mojo::Remote.4860" = type { %"class.mojo::internal::InterfacePtrState.4861" }
%"class.mojo::internal::InterfacePtrState.4861" = type { %"class.mojo::internal::InterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4862" }
%"class.std::__1::unique_ptr.4862" = type { %"class.std::__1::__compressed_pair.4863" }
%"class.std::__1::__compressed_pair.4863" = type { %"struct.std::__1::__compressed_pair_elem.4864" }
%"struct.std::__1::__compressed_pair_elem.4864" = type { %"class.blink::mojom::blink::ReportingServiceProxyProxy"* }
%"class.blink::mojom::blink::ReportingServiceProxyProxy" = type { %"class.blink::mojom::blink::ReportingServiceProxy", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::ReportingServiceProxy" = type { i32 (...)** }
%"class.blink::mojom::blink::ViewportIntersectionState" = type { %"class.gfx::Rect", %"class.gfx::Rect", %"class.gfx::Rect", i32, %"class.gfx::Size", %"class.gfx::Point", %"class.gfx::Transform" }
%"class.gfx::Size" = type { i32, i32 }
%"class.gfx::Transform" = type { %class.SkMatrix44 }
%class.SkMatrix44 = type <{ [4 x [4 x float]], i8, [3 x i8] }>
%"class.std::__1::unique_ptr.2806" = type { %"class.std::__1::__compressed_pair.2807" }
%"class.std::__1::__compressed_pair.2807" = type { %"struct.std::__1::__compressed_pair_elem.2808" }
%"struct.std::__1::__compressed_pair_elem.2808" = type { %"class.blink::WebURLLoaderFactory"* }
%"class.blink::WebURLLoaderFactory" = type opaque
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.base::RepeatingCallback.2812" = type { %"class.base::internal::CallbackBaseCopyable" }
%"class.std::__1::unique_ptr.2813" = type { %"class.std::__1::__compressed_pair.2814" }
%"class.std::__1::__compressed_pair.2814" = type { %"struct.std::__1::__compressed_pair_elem.2815" }
%"struct.std::__1::__compressed_pair_elem.2815" = type { %"class.blink::FrameOverlay"* }
%"class.blink::FrameOverlay" = type opaque
%"class.absl::optional.2476" = type { %"class.absl::optional_internal::optional_data.2477" }
%"class.absl::optional_internal::optional_data.2477" = type { %"class.absl::optional_internal::optional_data_base.2478" }
%"class.absl::optional_internal::optional_data_base.2478" = type { %"class.absl::optional_internal::optional_data_dtor_base.2479" }
%"class.absl::optional_internal::optional_data_dtor_base.2479" = type { i8, %union.anon.2480 }
%union.anon.2480 = type { %"class.base::UnguessableToken" }
%"class.std::__1::unique_ptr.2819" = type { %"class.std::__1::__compressed_pair.2820" }
%"class.std::__1::__compressed_pair.2820" = type { %"struct.std::__1::__compressed_pair_elem.2821" }
%"struct.std::__1::__compressed_pair_elem.2821" = type { %"class.blink::WebPrescientNetworking"* }
%"class.blink::WebPrescientNetworking" = type opaque
%"class.blink::HeapMojoAssociatedRemote" = type { %"class.blink::Member.2825" }
%"class.blink::Member.2825" = type { %"class.blink::MemberBase.2826" }
%"class.blink::MemberBase.2826" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::LocalFrameHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.4870" }
%"class.mojo::AssociatedRemote.4870" = type { %"class.mojo::internal::AssociatedInterfacePtrState.4871" }
%"class.mojo::internal::AssociatedInterfacePtrState.4871" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4872" }
%"class.std::__1::unique_ptr.4872" = type { %"class.std::__1::__compressed_pair.4873" }
%"class.std::__1::__compressed_pair.4873" = type { %"struct.std::__1::__compressed_pair_elem.4874" }
%"struct.std::__1::__compressed_pair_elem.4874" = type { %"class.blink::mojom::blink::LocalFrameHostProxy"* }
%"class.blink::mojom::blink::LocalFrameHostProxy" = type { %"class.blink::mojom::blink::LocalFrameHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::LocalFrameHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedRemote.2827" = type { %"class.blink::Member.2828" }
%"class.blink::Member.2828" = type { %"class.blink::MemberBase.2829" }
%"class.blink::MemberBase.2829" = type { %"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedRemote<blink::mojom::blink::BackForwardCacheControllerHost, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.mojo::AssociatedRemote.4880" }
%"class.mojo::AssociatedRemote.4880" = type { %"class.mojo::internal::AssociatedInterfacePtrState.4881" }
%"class.mojo::internal::AssociatedInterfacePtrState.4881" = type { %"class.mojo::internal::AssociatedInterfacePtrStateBase.base", %"class.std::__1::unique_ptr.4882" }
%"class.std::__1::unique_ptr.4882" = type { %"class.std::__1::__compressed_pair.4883" }
%"class.std::__1::__compressed_pair.4883" = type { %"struct.std::__1::__compressed_pair_elem.4884" }
%"struct.std::__1::__compressed_pair_elem.4884" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHostProxy"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHostProxy" = type { %"class.blink::mojom::blink::BackForwardCacheControllerHost", %"class.mojo::MessageReceiverWithResponder"* }
%"class.blink::mojom::blink::BackForwardCacheControllerHost" = type { i32 (...)** }
%"class.blink::HeapMojoAssociatedReceiver" = type { %"class.blink::Member.2830" }
%"class.blink::Member.2830" = type { %"class.blink::MemberBase.2831" }
%"class.blink::MemberBase.2831" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4890", %"class.blink::Member.2076", %"class.mojo::AssociatedReceiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.4890" = type { i8 }
%"class.mojo::AssociatedReceiver" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalFrameStub", %"class.base::WeakPtrFactory.4891" }
%"class.mojo::internal::AssociatedReceiverBase" = type { %"class.std::__1::unique_ptr.1864" }
%"class.blink::mojom::blink::LocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalFrame"* }
%"class.base::WeakPtrFactory.4891" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoAssociatedReceiver.2832" = type { %"class.blink::Member.2833" }
%"class.blink::Member.2833" = type { %"class.blink::MemberBase.2834" }
%"class.blink::MemberBase.2834" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::LocalMainFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4894", %"class.blink::Member.2076", %"class.mojo::AssociatedReceiver.4895" }
%"class.blink::ThreadState::PrefinalizerRegistration.4894" = type { i8 }
%"class.mojo::AssociatedReceiver.4895" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::LocalMainFrameStub", %"class.base::WeakPtrFactory.4896" }
%"class.blink::mojom::blink::LocalMainFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::LocalMainFrame"* }
%"class.base::WeakPtrFactory.4896" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::HeapMojoReceiver" = type { %"class.blink::Member.2835" }
%"class.blink::Member.2835" = type { %"class.blink::MemberBase.2836" }
%"class.blink::MemberBase.2836" = type { %"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoReceiver<blink::mojom::blink::HighPriorityLocalFrame, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4899", %"class.blink::Member.2076", %"class.mojo::Receiver" }
%"class.blink::ThreadState::PrefinalizerRegistration.4899" = type { i8 }
%"class.mojo::Receiver" = type { %"class.mojo::internal::BindingState" }
%"class.mojo::internal::BindingState" = type { %"class.mojo::internal::BindingStateBase", %"class.blink::mojom::blink::HighPriorityLocalFrameStub" }
%"class.mojo::internal::BindingStateBase" = type { %class.scoped_refptr.2357, %"class.std::__1::unique_ptr.1864", %"class.base::WeakPtrFactory.4900" }
%"class.base::WeakPtrFactory.4900" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::mojom::blink::HighPriorityLocalFrameStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::HighPriorityLocalFrame"* }
%"class.blink::HeapMojoAssociatedReceiver.2837" = type { %"class.blink::Member.2838" }
%"class.blink::Member.2838" = type { %"class.blink::MemberBase.2839" }
%"class.blink::MemberBase.2839" = type { %"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoAssociatedReceiver<blink::mojom::blink::FullscreenVideoElementHandler, blink::LocalFrame, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type { %"class.blink::ContextLifecycleObserver", %"class.blink::ThreadState::PrefinalizerRegistration.4903", %"class.blink::Member.2076", %"class.mojo::AssociatedReceiver.4904" }
%"class.blink::ThreadState::PrefinalizerRegistration.4903" = type { i8 }
%"class.mojo::AssociatedReceiver.4904" = type { %"class.mojo::internal::AssociatedReceiverBase", %"class.blink::mojom::blink::FullscreenVideoElementHandlerStub", %"class.base::WeakPtrFactory.4905" }
%"class.blink::mojom::blink::FullscreenVideoElementHandlerStub" = type { %"class.mojo::MessageReceiverWithResponderStatus", %"class.blink::mojom::blink::FullscreenVideoElementHandler"* }
%"class.base::WeakPtrFactory.4905" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.2840" = type { %"class.blink::MemberBase.2841" }
%"class.blink::MemberBase.2841" = type { %"class.blink::SystemClipboard"* }
%"class.blink::SystemClipboard" = type opaque
%"class.blink::Member.2842" = type { %"class.blink::MemberBase.2843" }
%"class.blink::MemberBase.2843" = type { %"class.blink::RawSystemClipboard"* }
%"class.blink::RawSystemClipboard" = type opaque
%"class.blink::Member.2844" = type { %"class.blink::MemberBase.2845" }
%"class.blink::MemberBase.2845" = type { %"class.blink::BackgroundColorPaintImageGenerator"* }
%"class.blink::BackgroundColorPaintImageGenerator" = type opaque
%"class.blink::Member.2846" = type { %"class.blink::MemberBase.2847" }
%"class.blink::MemberBase.2847" = type { %"class.blink::HeapHashMap.2848"* }
%"class.blink::HeapHashMap.2848" = type opaque
%"class.mojo::StructPtr.2849" = type { %"class.std::__1::unique_ptr.2850" }
%"class.std::__1::unique_ptr.2850" = type { %"class.std::__1::__compressed_pair.2851" }
%"class.std::__1::__compressed_pair.2851" = type { %"struct.std::__1::__compressed_pair_elem.2852" }
%"struct.std::__1::__compressed_pair_elem.2852" = type { %"class.blink::mojom::blink::BlinkOptimizationGuideHints"* }
%"class.blink::mojom::blink::BlinkOptimizationGuideHints" = type { %"class.mojo::InlinedStructPtr.2853", %"class.mojo::InlinedStructPtr.2854" }
%"class.mojo::InlinedStructPtr.2853" = type { %"class.blink::mojom::blink::DelayAsyncScriptExecutionHints", i32 }
%"class.blink::mojom::blink::DelayAsyncScriptExecutionHints" = type { i32 }
%"class.mojo::InlinedStructPtr.2854" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.2858" = type { %"class.blink::MemberBase.2859" }
%"class.blink::MemberBase.2859" = type { %"class.blink::TextFragmentHandler"* }
%"class.blink::TextFragmentHandler" = type opaque
%"class.blink::TransientAllowFullscreen" = type { %"class.base::TimeTicks" }
%"class.blink::PaymentRequestToken" = type { %"class.base::TimeTicks" }
%"class.gfx::Rect" = type { %"class.gfx::Point", %"class.gfx::Size" }
%"class.absl::optional.2860" = type { %"class.absl::optional_internal::optional_data.2861" }
%"class.absl::optional_internal::optional_data.2861" = type { %"class.absl::optional_internal::optional_data_base.2862" }
%"class.absl::optional_internal::optional_data_base.2862" = type { %"class.absl::optional_internal::optional_data_dtor_base.2863" }
%"class.absl::optional_internal::optional_data_dtor_base.2863" = type { i8, %union.anon.2864 }
%union.anon.2864 = type { %"class.blink::FrameAdEvidence" }
%"class.blink::FrameAdEvidence" = type { i8, i8, i32, i32, i32 }
%"class.WTF::Vector.1664" = type { %"class.WTF::VectorBuffer.1665" }
%"class.WTF::VectorBuffer.1665" = type { %"class.WTF::VectorBufferBase.1666" }
%"class.WTF::VectorBufferBase.1666" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.2785" = type { %"class.WTF::HashMap.2788" }
%"class.WTF::HashMap.2788" = type { %"class.WTF::HashTable.2789" }
%"class.WTF::HashTable.2789" = type <{ %"struct.WTF::KeyValuePair.2791"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2791" = type opaque
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::HeapListHashSet.2569" = type { %"class.WTF::ListHashSet.base.2579", [7 x i8] }
%"class.WTF::ListHashSet.base.2579" = type <{ %"class.WTF::HashTable.2574", %"class.blink::Member.2576", %"class.blink::Member.2576", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2574" = type <{ %"class.blink::Member.2576"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2576" = type { %"class.blink::MemberBase.2577" }
%"class.blink::MemberBase.2577" = type { %"class.blink::HeapListHashSetNode.2578"* }
%"class.blink::HeapListHashSetNode.2578" = type { %"class.blink::Member.3342", %"class.blink::Member.2576", %"class.blink::Member.2576" }
%"class.blink::Member.3342" = type { %"class.blink::MemberBase.3343" }
%"class.blink::MemberBase.3343" = type { %"class.blink::DevToolsSession"* }
%"class.blink::DevToolsSession" = type opaque
%"class.blink::HeapListHashSet.2580" = type { %"class.WTF::ListHashSet.base.2590", [7 x i8] }
%"class.WTF::ListHashSet.base.2590" = type <{ %"class.WTF::HashTable.2585", %"class.blink::Member.2587", %"class.blink::Member.2587", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2585" = type <{ %"class.blink::Member.2587"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2587" = type { %"class.blink::MemberBase.2588" }
%"class.blink::MemberBase.2588" = type { %"class.blink::HeapListHashSetNode.2589"* }
%"class.blink::HeapListHashSetNode.2589" = type { %"class.blink::Member.3338", %"class.blink::Member.2587", %"class.blink::Member.2587" }
%"class.blink::Member.3338" = type { %"class.blink::MemberBase.3339" }
%"class.blink::MemberBase.3339" = type { %"class.blink::InspectorAnimationAgent"* }
%"class.blink::InspectorAnimationAgent" = type opaque
%"class.blink::HeapListHashSet.2591" = type { %"class.WTF::ListHashSet.base.2601", [7 x i8] }
%"class.WTF::ListHashSet.base.2601" = type <{ %"class.WTF::HashTable.2596", %"class.blink::Member.2598", %"class.blink::Member.2598", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2596" = type <{ %"class.blink::Member.2598"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2598" = type { %"class.blink::MemberBase.2599" }
%"class.blink::MemberBase.2599" = type { %"class.blink::HeapListHashSetNode.2600"* }
%"class.blink::HeapListHashSetNode.2600" = type { %"class.blink::Member.3334", %"class.blink::Member.2598", %"class.blink::Member.2598" }
%"class.blink::Member.3334" = type { %"class.blink::MemberBase.3335" }
%"class.blink::MemberBase.3335" = type { %"class.blink::InspectorApplicationCacheAgent"* }
%"class.blink::InspectorApplicationCacheAgent" = type opaque
%"class.blink::HeapListHashSet.2602" = type { %"class.WTF::ListHashSet.base.2612", [7 x i8] }
%"class.WTF::ListHashSet.base.2612" = type <{ %"class.WTF::HashTable.2607", %"class.blink::Member.2609", %"class.blink::Member.2609", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2607" = type <{ %"class.blink::Member.2609"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2609" = type { %"class.blink::MemberBase.2610" }
%"class.blink::MemberBase.2610" = type { %"class.blink::HeapListHashSetNode.2611"* }
%"class.blink::HeapListHashSetNode.2611" = type { %"class.blink::Member.3330", %"class.blink::Member.2609", %"class.blink::Member.2609" }
%"class.blink::Member.3330" = type { %"class.blink::MemberBase.3331" }
%"class.blink::MemberBase.3331" = type { %"class.blink::InspectorAuditsAgent"* }
%"class.blink::InspectorAuditsAgent" = type opaque
%"class.blink::HeapListHashSet.2613" = type { %"class.WTF::ListHashSet.base.2623", [7 x i8] }
%"class.WTF::ListHashSet.base.2623" = type <{ %"class.WTF::HashTable.2618", %"class.blink::Member.2620", %"class.blink::Member.2620", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2618" = type <{ %"class.blink::Member.2620"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2620" = type { %"class.blink::MemberBase.2621" }
%"class.blink::MemberBase.2621" = type { %"class.blink::HeapListHashSetNode.2622"* }
%"class.blink::HeapListHashSetNode.2622" = type { %"class.blink::Member.3253", %"class.blink::Member.2620", %"class.blink::Member.2620" }
%"class.blink::Member.3253" = type { %"class.blink::MemberBase.3254" }
%"class.blink::MemberBase.3254" = type { %"class.blink::InspectorCSSAgent"* }
%"class.blink::HeapListHashSet.2624" = type { %"class.WTF::ListHashSet.base.2634", [7 x i8] }
%"class.WTF::ListHashSet.base.2634" = type <{ %"class.WTF::HashTable.2629", %"class.blink::Member.2631", %"class.blink::Member.2631", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2629" = type <{ %"class.blink::Member.2631"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2631" = type { %"class.blink::MemberBase.2632" }
%"class.blink::MemberBase.2632" = type { %"class.blink::HeapListHashSetNode.2633"* }
%"class.blink::HeapListHashSetNode.2633" = type { %"class.blink::Member.3172", %"class.blink::Member.2631", %"class.blink::Member.2631" }
%"class.blink::HeapListHashSet.2635" = type { %"class.WTF::ListHashSet.base.2645", [7 x i8] }
%"class.WTF::ListHashSet.base.2645" = type <{ %"class.WTF::HashTable.2640", %"class.blink::Member.2642", %"class.blink::Member.2642", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2640" = type <{ %"class.blink::Member.2642"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2642" = type { %"class.blink::MemberBase.2643" }
%"class.blink::MemberBase.2643" = type { %"class.blink::HeapListHashSetNode.2644"* }
%"class.blink::HeapListHashSetNode.2644" = type { %"class.blink::Member.3168", %"class.blink::Member.2642", %"class.blink::Member.2642" }
%"class.blink::Member.3168" = type { %"class.blink::MemberBase.3169" }
%"class.blink::MemberBase.3169" = type { %"class.blink::InspectorDOMDebuggerAgent"* }
%"class.blink::InspectorDOMDebuggerAgent" = type opaque
%"class.blink::HeapListHashSet.2646" = type { %"class.WTF::ListHashSet.base.2656", [7 x i8] }
%"class.WTF::ListHashSet.base.2656" = type <{ %"class.WTF::HashTable.2651", %"class.blink::Member.2653", %"class.blink::Member.2653", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2651" = type <{ %"class.blink::Member.2653"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2653" = type { %"class.blink::MemberBase.2654" }
%"class.blink::MemberBase.2654" = type { %"class.blink::HeapListHashSetNode.2655"* }
%"class.blink::HeapListHashSetNode.2655" = type { %"class.blink::Member.3164", %"class.blink::Member.2653", %"class.blink::Member.2653" }
%"class.blink::Member.3164" = type { %"class.blink::MemberBase.3165" }
%"class.blink::MemberBase.3165" = type { %"class.blink::InspectorDOMSnapshotAgent"* }
%"class.blink::InspectorDOMSnapshotAgent" = type opaque
%"class.blink::HeapListHashSet.2657" = type { %"class.WTF::ListHashSet.base.2667", [7 x i8] }
%"class.WTF::ListHashSet.base.2667" = type <{ %"class.WTF::HashTable.2662", %"class.blink::Member.2664", %"class.blink::Member.2664", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2662" = type <{ %"class.blink::Member.2664"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2664" = type { %"class.blink::MemberBase.2665" }
%"class.blink::MemberBase.2665" = type { %"class.blink::HeapListHashSetNode.2666"* }
%"class.blink::HeapListHashSetNode.2666" = type { %"class.blink::Member.3160", %"class.blink::Member.2664", %"class.blink::Member.2664" }
%"class.blink::Member.3160" = type { %"class.blink::MemberBase.3161" }
%"class.blink::MemberBase.3161" = type { %"class.blink::InspectorEmulationAgent"* }
%"class.blink::InspectorEmulationAgent" = type opaque
%"class.blink::HeapListHashSet.2668" = type { %"class.WTF::ListHashSet.base.2678", [7 x i8] }
%"class.WTF::ListHashSet.base.2678" = type <{ %"class.WTF::HashTable.2673", %"class.blink::Member.2675", %"class.blink::Member.2675", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2673" = type <{ %"class.blink::Member.2675"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2675" = type { %"class.blink::MemberBase.2676" }
%"class.blink::MemberBase.2676" = type { %"class.blink::HeapListHashSetNode.2677"* }
%"class.blink::HeapListHashSetNode.2677" = type { %"class.blink::Member.2794", %"class.blink::Member.2675", %"class.blink::Member.2675" }
%"class.blink::HeapListHashSet.2679" = type { %"class.WTF::ListHashSet.base.2689", [7 x i8] }
%"class.WTF::ListHashSet.base.2689" = type <{ %"class.WTF::HashTable.2684", %"class.blink::Member.2686", %"class.blink::Member.2686", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2684" = type <{ %"class.blink::Member.2686"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2686" = type { %"class.blink::MemberBase.2687" }
%"class.blink::MemberBase.2687" = type { %"class.blink::HeapListHashSetNode.2688"* }
%"class.blink::HeapListHashSetNode.2688" = type { %"class.blink::Member.3154", %"class.blink::Member.2686", %"class.blink::Member.2686" }
%"class.blink::Member.3154" = type { %"class.blink::MemberBase.3155" }
%"class.blink::MemberBase.3155" = type { %"class.blink::InspectorLayerTreeAgent"* }
%"class.blink::InspectorLayerTreeAgent" = type opaque
%"class.blink::HeapListHashSet.2690" = type { %"class.WTF::ListHashSet.base.2700", [7 x i8] }
%"class.WTF::ListHashSet.base.2700" = type <{ %"class.WTF::HashTable.2695", %"class.blink::Member.2697", %"class.blink::Member.2697", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2695" = type <{ %"class.blink::Member.2697"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2697" = type { %"class.blink::MemberBase.2698" }
%"class.blink::MemberBase.2698" = type { %"class.blink::HeapListHashSetNode.2699"* }
%"class.blink::HeapListHashSetNode.2699" = type { %"class.blink::Member.3150", %"class.blink::Member.2697", %"class.blink::Member.2697" }
%"class.blink::Member.3150" = type { %"class.blink::MemberBase.3151" }
%"class.blink::MemberBase.3151" = type { %"class.blink::InspectorLogAgent"* }
%"class.blink::InspectorLogAgent" = type opaque
%"class.blink::HeapListHashSet.2701" = type { %"class.WTF::ListHashSet.base.2711", [7 x i8] }
%"class.WTF::ListHashSet.base.2711" = type <{ %"class.WTF::HashTable.2706", %"class.blink::Member.2708", %"class.blink::Member.2708", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2706" = type <{ %"class.blink::Member.2708"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2708" = type { %"class.blink::MemberBase.2709" }
%"class.blink::MemberBase.2709" = type { %"class.blink::HeapListHashSetNode.2710"* }
%"class.blink::HeapListHashSetNode.2710" = type { %"class.blink::Member.3146", %"class.blink::Member.2708", %"class.blink::Member.2708" }
%"class.blink::Member.3146" = type { %"class.blink::MemberBase.3147" }
%"class.blink::MemberBase.3147" = type { %"class.blink::InspectorMediaAgent"* }
%"class.blink::InspectorMediaAgent" = type opaque
%"class.blink::HeapListHashSet.2712" = type { %"class.WTF::ListHashSet.base.2722", [7 x i8] }
%"class.WTF::ListHashSet.base.2722" = type <{ %"class.WTF::HashTable.2717", %"class.blink::Member.2719", %"class.blink::Member.2719", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2717" = type <{ %"class.blink::Member.2719"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2719" = type { %"class.blink::MemberBase.2720" }
%"class.blink::MemberBase.2720" = type { %"class.blink::HeapListHashSetNode.2721"* }
%"class.blink::HeapListHashSetNode.2721" = type { %"class.blink::Member.3112", %"class.blink::Member.2719", %"class.blink::Member.2719" }
%"class.blink::HeapListHashSet.2723" = type { %"class.WTF::ListHashSet.base.2733", [7 x i8] }
%"class.WTF::ListHashSet.base.2733" = type <{ %"class.WTF::HashTable.2728", %"class.blink::Member.2730", %"class.blink::Member.2730", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2728" = type <{ %"class.blink::Member.2730"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2730" = type { %"class.blink::MemberBase.2731" }
%"class.blink::MemberBase.2731" = type { %"class.blink::HeapListHashSetNode.2732"* }
%"class.blink::HeapListHashSetNode.2732" = type { %"class.blink::Member.2879", %"class.blink::Member.2730", %"class.blink::Member.2730" }
%"class.blink::Member.2879" = type { %"class.blink::MemberBase.2880" }
%"class.blink::MemberBase.2880" = type { %"class.blink::InspectorPageAgent"* }
%"class.blink::InspectorPageAgent" = type { %"class.blink::InspectorBaseAgent", %"class.blink::Member.2916", %"class.WTF::HashMap.2920", %"class.WTF::HashMap.2925", %"class.blink::HeapHashMap.2930", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::InspectorPageAgent::Client"*, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.2937", i8, i32, %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::MapField.3107", %"class.blink::InspectorAgentState::SimpleField.3108", %"class.blink::InspectorAgentState::SimpleField.3108", %"class.blink::InspectorAgentState::SimpleField.3108", %"class.blink::InspectorAgentState::SimpleField.3108", %"class.blink::InspectorAgentState::SimpleField.3108", %"class.blink::InspectorAgentState::SimpleField.3108", %"class.blink::InspectorAgentState::SimpleField.3108", %"class.blink::InspectorAgentState::SimpleField.3109", %"class.blink::InspectorAgentState::SimpleField.3109", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Page::Backend", %"class.blink::Member.2554", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.2910" }
%"class.blink::protocol::Page::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.2910" = type { %"class.std::__1::__compressed_pair.2911" }
%"class.std::__1::__compressed_pair.2911" = type { %"struct.std::__1::__compressed_pair_elem.2912" }
%"struct.std::__1::__compressed_pair_elem.2912" = type { %"class.blink::protocol::Page::Frontend"* }
%"class.blink::protocol::Page::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.crdtp::FrontendChannel" = type { i32 (...)** }
%"class.WTF::HashMap.2920" = type { %"class.WTF::HashTable.2921" }
%"class.WTF::HashTable.2921" = type <{ %"struct.WTF::KeyValuePair.2924"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2924" = type opaque
%"class.WTF::HashMap.2925" = type { %"class.WTF::HashTable.2926" }
%"class.WTF::HashTable.2926" = type <{ %"struct.WTF::KeyValuePair.2929"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2929" = type opaque
%"class.blink::HeapHashMap.2930" = type { %"class.WTF::HashMap.2933" }
%"class.WTF::HashMap.2933" = type { %"class.WTF::HashTable.2934" }
%"class.WTF::HashTable.2934" = type <{ %"struct.WTF::KeyValuePair.2936"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2936" = type opaque
%"class.v8_inspector::V8InspectorSession" = type { i32 (...)** }
%"class.blink::InspectorPageAgent::Client" = type { i32 (...)** }
%"class.blink::InspectorAgentState::MapField" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::HashMap.3102" }
%"class.blink::InspectorAgentState::Field" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorSessionState"* }
%"class.blink::InspectorSessionState" = type { %"class.mojo::StructPtr.2886", %"class.mojo::StructPtr.2886" }
%"class.mojo::StructPtr.2886" = type { %"class.std::__1::unique_ptr.2887" }
%"class.std::__1::unique_ptr.2887" = type { %"class.std::__1::__compressed_pair.2888" }
%"class.std::__1::__compressed_pair.2888" = type { %"struct.std::__1::__compressed_pair_elem.2889" }
%"struct.std::__1::__compressed_pair_elem.2889" = type { %"class.blink::mojom::blink::DevToolsSessionState"* }
%"class.blink::mojom::blink::DevToolsSessionState" = type { %"class.WTF::HashMap.2890" }
%"class.WTF::HashMap.2890" = type { %"class.WTF::HashTable.2891" }
%"class.WTF::HashTable.2891" = type <{ %"struct.WTF::KeyValuePair.2894"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2894" = type { %"class.WTF::String", %"class.absl::optional.2895" }
%"class.absl::optional.2895" = type { %"class.absl::optional_internal::optional_data.2896" }
%"class.absl::optional_internal::optional_data.2896" = type { %"class.absl::optional_internal::optional_data_base.2897" }
%"class.absl::optional_internal::optional_data_base.2897" = type { %"class.absl::optional_internal::optional_data_dtor_base.2898" }
%"class.absl::optional_internal::optional_data_dtor_base.2898" = type { i8, %union.anon.2899 }
%union.anon.2899 = type { %"class.WTF::Vector.2900" }
%"class.WTF::HashMap.3102" = type { %"class.WTF::HashTable.3103" }
%"class.WTF::HashTable.3103" = type <{ %"struct.WTF::KeyValuePair.3106"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3106" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::MapField.3107" = type { %"class.blink::InspectorAgentState::Field", i8, [7 x i8], %"class.WTF::HashMap.2925" }
%"class.blink::InspectorAgentState::SimpleField.3108" = type { %"class.blink::InspectorAgentState::Field", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorAgentState::SimpleField.3109" = type { %"class.blink::InspectorAgentState::Field", i32, i32 }
%"class.blink::HeapListHashSet.2734" = type { %"class.WTF::ListHashSet.base.2744", [7 x i8] }
%"class.WTF::ListHashSet.base.2744" = type <{ %"class.WTF::HashTable.2739", %"class.blink::Member.2741", %"class.blink::Member.2741", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2739" = type <{ %"class.blink::Member.2741"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2741" = type { %"class.blink::MemberBase.2742" }
%"class.blink::MemberBase.2742" = type { %"class.blink::HeapListHashSetNode.2743"* }
%"class.blink::HeapListHashSetNode.2743" = type { %"class.blink::Member.2875", %"class.blink::Member.2741", %"class.blink::Member.2741" }
%"class.blink::Member.2875" = type { %"class.blink::MemberBase.2876" }
%"class.blink::MemberBase.2876" = type { %"class.blink::InspectorPerformanceAgent"* }
%"class.blink::InspectorPerformanceAgent" = type opaque
%"class.blink::HeapListHashSet.2745" = type { %"class.WTF::ListHashSet.base.2755", [7 x i8] }
%"class.WTF::ListHashSet.base.2755" = type <{ %"class.WTF::HashTable.2750", %"class.blink::Member.2752", %"class.blink::Member.2752", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2750" = type <{ %"class.blink::Member.2752"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2752" = type { %"class.blink::MemberBase.2753" }
%"class.blink::MemberBase.2753" = type { %"class.blink::HeapListHashSetNode.2754"* }
%"class.blink::HeapListHashSetNode.2754" = type { %"class.blink::Member.2871", %"class.blink::Member.2752", %"class.blink::Member.2752" }
%"class.blink::Member.2871" = type { %"class.blink::MemberBase.2872" }
%"class.blink::MemberBase.2872" = type { %"class.blink::InspectorPerformanceTimelineAgent"* }
%"class.blink::InspectorPerformanceTimelineAgent" = type opaque
%"class.blink::HeapListHashSet.2756" = type { %"class.WTF::ListHashSet.base.2766", [7 x i8] }
%"class.WTF::ListHashSet.base.2766" = type <{ %"class.WTF::HashTable.2761", %"class.blink::Member.2763", %"class.blink::Member.2763", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2761" = type <{ %"class.blink::Member.2763"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2763" = type { %"class.blink::MemberBase.2764" }
%"class.blink::MemberBase.2764" = type { %"class.blink::HeapListHashSetNode.2765"* }
%"class.blink::HeapListHashSetNode.2765" = type { %"class.blink::Member.2796", %"class.blink::Member.2763", %"class.blink::Member.2763" }
%"class.blink::HeapListHashSet.2767" = type { %"class.WTF::ListHashSet.base.2777", [7 x i8] }
%"class.WTF::ListHashSet.base.2777" = type <{ %"class.WTF::HashTable.2772", %"class.blink::Member.2774", %"class.blink::Member.2774", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.2772" = type <{ %"class.blink::Member.2774"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2774" = type { %"class.blink::MemberBase.2775" }
%"class.blink::MemberBase.2775" = type { %"class.blink::HeapListHashSetNode.2776"* }
%"class.blink::HeapListHashSetNode.2776" = type { %"class.blink::Member.2779", %"class.blink::Member.2774", %"class.blink::Member.2774" }
%"class.blink::InspectorAgentState" = type { %"class.WTF::String", %"class.WTF::Vector.2883" }
%"class.WTF::Vector.2883" = type { %"class.WTF::VectorBuffer.2884" }
%"class.WTF::VectorBuffer.2884" = type { %"class.WTF::VectorBufferBase.2885" }
%"class.WTF::VectorBufferBase.2885" = type { %"class.blink::InspectorAgentState::Field"**, i32, i32 }
%"class.std::__1::unique_ptr.3256" = type { %"class.std::__1::__compressed_pair.3257" }
%"class.std::__1::__compressed_pair.3257" = type { %"struct.std::__1::__compressed_pair_elem.3258" }
%"struct.std::__1::__compressed_pair_elem.3258" = type { %"class.blink::protocol::CSS::Frontend"* }
%"class.blink::protocol::CSS::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"struct.blink::InspectorDOMAgent::DOMListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::InspectorStyleSheetBase::Listener" = type { i32 (...)** }
%"class.blink::Member.3172" = type { %"class.blink::MemberBase.3173" }
%"class.blink::MemberBase.3173" = type { %"class.blink::InspectorDOMAgent"* }
%"class.blink::Member.2916" = type { %"class.blink::MemberBase.2917" }
%"class.blink::MemberBase.2917" = type { %"class.blink::InspectedFrames"* }
%"class.blink::Member.3112" = type { %"class.blink::MemberBase.3113" }
%"class.blink::MemberBase.3113" = type { %"class.blink::InspectorNetworkAgent"* }
%"class.blink::Member.2937" = type { %"class.blink::MemberBase.2938" }
%"class.blink::MemberBase.2938" = type { %"class.blink::InspectorResourceContentLoader"* }
%"class.blink::Member.3262" = type { %"class.blink::MemberBase.3263" }
%"class.blink::MemberBase.3263" = type { %"class.blink::InspectorResourceContainer"* }
%"class.blink::HeapHashMap.3271" = type { %"class.WTF::HashMap.3274" }
%"class.WTF::HashMap.3274" = type { %"class.WTF::HashTable.3275" }
%"class.WTF::HashTable.3275" = type <{ %"struct.WTF::KeyValuePair.3277"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3277" = type { %"class.WTF::String", %"class.blink::Member.3916" }
%"class.blink::Member.3916" = type { %"class.blink::MemberBase.3917" }
%"class.blink::MemberBase.3917" = type { %"class.blink::InspectorStyleSheet"* }
%"class.blink::InspectorStyleSheet" = type <{ %"class.blink::InspectorStyleSheetBase", %"class.blink::Member.3262", %"class.blink::Member.3112", %"class.blink::Member.389", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.3930", %"class.WTF::String", %"class.blink::HeapVector.657", %"class.blink::HeapVector.657", %"class.WTF::HashMap.3941", %"class.WTF::HashMap.3941", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::InspectorStyleSheetBase" = type { i32 (...)**, %"class.WTF::String", %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.std::__1::unique_ptr.3920" }
%"class.std::__1::unique_ptr.3920" = type { %"class.std::__1::__compressed_pair.3921" }
%"class.std::__1::__compressed_pair.3921" = type { %"struct.std::__1::__compressed_pair_elem.3922" }
%"struct.std::__1::__compressed_pair_elem.3922" = type { %"class.WTF::Vector.3923"* }
%"class.WTF::Vector.3923" = type { %"class.WTF::VectorBuffer.3924" }
%"class.WTF::VectorBuffer.3924" = type { %"class.WTF::VectorBufferBase.1375" }
%"class.blink::Member.3930" = type { %"class.blink::MemberBase.3931" }
%"class.blink::MemberBase.3931" = type { %"class.blink::HeapVector.3932"* }
%"class.blink::HeapVector.3932" = type { %"class.WTF::Vector.3935" }
%"class.WTF::Vector.3935" = type { %"class.WTF::VectorBuffer.3936" }
%"class.WTF::VectorBuffer.3936" = type { %"class.WTF::VectorBufferBase.3937" }
%"class.WTF::VectorBufferBase.3937" = type { %"class.blink::Member.3938"*, i32, i32 }
%"class.blink::Member.3938" = type { %"class.blink::MemberBase.3939" }
%"class.blink::MemberBase.3939" = type { %"class.blink::CSSRuleSourceData"* }
%"class.blink::CSSRuleSourceData" = type { i32, %"class.blink::SourceRange", %"class.blink::SourceRange", %"class.WTF::Vector.3948", %"class.WTF::Vector.3953", %"class.blink::HeapVector.3932", %"class.WTF::Vector.3958" }
%"class.blink::SourceRange" = type { i32, i32 }
%"class.WTF::Vector.3948" = type { %"class.WTF::VectorBuffer.3949" }
%"class.WTF::VectorBuffer.3949" = type { %"class.WTF::VectorBufferBase.3950" }
%"class.WTF::VectorBufferBase.3950" = type { %"class.blink::SourceRange"*, i32, i32 }
%"class.WTF::Vector.3953" = type { %"class.WTF::VectorBuffer.3954" }
%"class.WTF::VectorBuffer.3954" = type { %"class.WTF::VectorBufferBase.3955" }
%"class.WTF::VectorBufferBase.3955" = type { %"class.blink::CSSPropertySourceData"*, i32, i32 }
%"class.blink::CSSPropertySourceData" = type <{ %"class.WTF::String", %"class.WTF::String", i8, i8, i8, i8, %"class.blink::SourceRange", [4 x i8] }>
%"class.WTF::Vector.3958" = type { %"class.WTF::VectorBuffer.3959" }
%"class.WTF::VectorBuffer.3959" = type { %"class.WTF::VectorBufferBase.3960" }
%"class.WTF::VectorBufferBase.3960" = type { %"class.WTF::Vector.3948"*, i32, i32 }
%"class.WTF::HashMap.3941" = type { %"class.WTF::HashTable.3942" }
%"class.WTF::HashTable.3942" = type <{ %"struct.WTF::KeyValuePair.3945"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3945" = type opaque
%"class.blink::HeapHashMap.3278" = type { %"class.WTF::HashMap.3281" }
%"class.WTF::HashMap.3281" = type { %"class.WTF::HashTable.3282" }
%"class.WTF::HashTable.3282" = type <{ %"struct.WTF::KeyValuePair.3284"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3284" = type { %"class.WTF::String", %"class.blink::Member.3963" }
%"class.blink::Member.3963" = type { %"class.blink::MemberBase.3964" }
%"class.blink::MemberBase.3964" = type { %"class.blink::InspectorStyleSheetForInlineStyle"* }
%"class.blink::InspectorStyleSheetForInlineStyle" = type { %"class.blink::InspectorStyleSheetBase", %"class.blink::Member.343", %"class.blink::Member.3965" }
%"class.blink::Member.3965" = type { %"class.blink::MemberBase.3966" }
%"class.blink::MemberBase.3966" = type { %"class.blink::InspectorStyle"* }
%"class.blink::InspectorStyle" = type { %"class.blink::Member.3969", %"class.blink::Member.3938", %"class.blink::Member.3972" }
%"class.blink::Member.3969" = type { %"class.blink::MemberBase.3970" }
%"class.blink::MemberBase.3970" = type { %"class.blink::CSSStyleDeclaration"* }
%"class.blink::CSSStyleDeclaration" = type { %"class.blink::ScriptWrappable", %"class.blink::ExecutionContextClient" }
%"class.blink::Member.3972" = type { %"class.blink::MemberBase.3973" }
%"class.blink::MemberBase.3973" = type { %"class.blink::InspectorStyleSheetBase"* }
%"class.blink::HeapHashMap.3285" = type { %"class.WTF::HashMap.3288" }
%"class.WTF::HashMap.3288" = type { %"class.WTF::HashTable.3289" }
%"class.WTF::HashTable.3289" = type <{ %"struct.WTF::KeyValuePair.3291"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3291" = type { %"class.blink::Member.389", %"class.blink::Member.3916" }
%"class.blink::HeapHashMap.3292" = type { %"class.WTF::HashMap.3295" }
%"class.WTF::HashMap.3295" = type { %"class.WTF::HashTable.3296" }
%"class.WTF::HashTable.3296" = type <{ %"struct.WTF::KeyValuePair.3298"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3298" = type { %"class.blink::Member.326", %"class.blink::Member.4982" }
%"class.blink::Member.4982" = type { %"class.blink::MemberBase.4983" }
%"class.blink::MemberBase.4983" = type { %"class.blink::HeapHashSet.4120"* }
%"class.blink::HeapHashSet.4120" = type { %"class.WTF::HashSet.4123" }
%"class.WTF::HashSet.4123" = type { %"class.WTF::HashTable.4124" }
%"class.WTF::HashTable.4124" = type <{ %"class.blink::Member.389"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashSet.3299" = type { %"class.WTF::HashSet.3302" }
%"class.WTF::HashSet.3302" = type { %"class.WTF::HashTable.3303" }
%"class.WTF::HashTable.3303" = type <{ %"class.blink::Member.326"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.3305" = type { %"class.WTF::HashMap.3308" }
%"class.WTF::HashMap.3308" = type { %"class.WTF::HashTable.3309" }
%"class.WTF::HashTable.3309" = type <{ %"struct.WTF::KeyValuePair.3311"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3311" = type { %"class.blink::Member.318", %"class.blink::Member.3963" }
%"class.WTF::HashMap.3312" = type { %"class.WTF::HashTable.3313" }
%"class.WTF::HashTable.3313" = type <{ %"struct.WTF::KeyValuePair.3316"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3316" = type { i32, i32 }
%"class.blink::Member.1313" = type { %"class.blink::MemberBase.1314" }
%"class.blink::MemberBase.1314" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type { %"class.blink::HeapHashMap.1317", %"class.blink::HeapHashMap.1324" }
%"class.blink::HeapHashMap.1317" = type { %"class.WTF::HashMap.1320" }
%"class.WTF::HashMap.1320" = type { %"class.WTF::HashTable.1321" }
%"class.WTF::HashTable.1321" = type <{ %"struct.WTF::KeyValuePair.1323"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1323" = type opaque
%"class.blink::HeapHashMap.1324" = type { %"class.WTF::HashMap.1327" }
%"class.WTF::HashMap.1327" = type { %"class.WTF::HashTable.1328" }
%"class.WTF::HashTable.1328" = type <{ %"struct.WTF::KeyValuePair.1330"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1330" = type { %"class.blink::Member.3974", %"class.blink::Member.3976" }
%"class.blink::Member.3974" = type { %"class.blink::MemberBase.3975" }
%"class.blink::MemberBase.3975" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::Member.3976" = type { %"class.blink::MemberBase.3977" }
%"class.blink::MemberBase.3977" = type { %"class.blink::HeapVector.3978"* }
%"class.blink::HeapVector.3978" = type { %"class.WTF::Vector.3981" }
%"class.WTF::Vector.3981" = type { %"class.WTF::VectorBuffer.3982" }
%"class.WTF::VectorBuffer.3982" = type { %"class.WTF::VectorBufferBase.3983" }
%"class.WTF::VectorBufferBase.3983" = type { %"class.blink::Member.3984"*, i32, i32 }
%"class.blink::Member.3984" = type { %"class.blink::MemberBase.3985" }
%"class.blink::MemberBase.3985" = type { %"class.blink::StyleRule"* }
%"class.blink::Member.389" = type { %"class.blink::MemberBase.390" }
%"class.blink::InspectorAgentState::SimpleField" = type <{ %"class.blink::InspectorAgentState::Field", i8, i8, [6 x i8] }>
%"class.WTF::HashMap.3317" = type { %"class.WTF::HashTable.3318" }
%"class.WTF::HashTable.3318" = type <{ %"struct.WTF::KeyValuePair.3321"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3321" = type { %"class.WTF::String", %"class.WTF::HashSet.2527" }
%"class.std::__1::unique_ptr.3322" = type { %"class.std::__1::__compressed_pair.3323" }
%"class.std::__1::__compressed_pair.3323" = type { %"struct.std::__1::__compressed_pair_elem.3324" }
%"struct.std::__1::__compressed_pair_elem.3324" = type { %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* }
%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback" = type { i32 (...)** }
%"class.WTF::HashSet.3219" = type { %"class.WTF::HashTable.3220" }
%"class.WTF::HashTable.3220" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::InspectorDOMAgent" = type { %"class.blink::InspectorBaseAgent.3174", %"class.v8::Isolate"*, %"class.blink::Member.2916", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::HeapHashSet.3181", %"class.blink::Member.3188", %"class.blink::HeapVector.3191", %"class.blink::HeapHashMap.3198", %"class.blink::HeapHashMap.3205", %"class.blink::HeapHashMap.3212", %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219", %"class.WTF::HashMap.3223", i32, %"class.blink::Member.326", %"class.blink::HeapHashMap.3228", %"class.blink::Member.3235", %"class.blink::Member.3237", %"class.blink::Member.3249", i8, [7 x i8], %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField" }
%"class.blink::InspectorBaseAgent.3174" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::DOM::Backend", %"class.blink::Member.2554", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.3175" }
%"class.blink::protocol::DOM::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3175" = type { %"class.std::__1::__compressed_pair.3176" }
%"class.std::__1::__compressed_pair.3176" = type { %"struct.std::__1::__compressed_pair_elem.3177" }
%"struct.std::__1::__compressed_pair_elem.3177" = type { %"class.blink::protocol::DOM::Frontend"* }
%"class.blink::protocol::DOM::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::HeapHashSet.3181" = type { %"class.WTF::HashSet.3184" }
%"class.WTF::HashSet.3184" = type { %"class.WTF::HashTable.3185" }
%"class.WTF::HashTable.3185" = type <{ %"class.blink::Member.3187"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3187" = type opaque
%"class.blink::Member.3188" = type { %"class.blink::MemberBase.3189" }
%"class.blink::MemberBase.3189" = type { %"class.blink::HeapHashMap.3190"* }
%"class.blink::HeapHashMap.3190" = type opaque
%"class.blink::HeapVector.3191" = type { %"class.WTF::Vector.3194" }
%"class.WTF::Vector.3194" = type { %"class.WTF::VectorBuffer.3195" }
%"class.WTF::VectorBuffer.3195" = type { %"class.WTF::VectorBufferBase.3196" }
%"class.WTF::VectorBufferBase.3196" = type { %"class.blink::Member.3188"*, i32, i32 }
%"class.blink::HeapHashMap.3198" = type { %"class.WTF::HashMap.3201" }
%"class.WTF::HashMap.3201" = type { %"class.WTF::HashTable.3202" }
%"class.WTF::HashTable.3202" = type <{ %"struct.WTF::KeyValuePair.3204"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3204" = type opaque
%"class.blink::HeapHashMap.3205" = type { %"class.WTF::HashMap.3208" }
%"class.WTF::HashMap.3208" = type { %"class.WTF::HashTable.3209" }
%"class.WTF::HashTable.3209" = type <{ %"struct.WTF::KeyValuePair.3211"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3211" = type opaque
%"class.blink::HeapHashMap.3212" = type { %"class.WTF::HashMap.3215" }
%"class.WTF::HashMap.3215" = type { %"class.WTF::HashTable.3216" }
%"class.WTF::HashTable.3216" = type <{ %"struct.WTF::KeyValuePair.3218"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3218" = type opaque
%"class.WTF::HashMap.3223" = type { %"class.WTF::HashTable.3224" }
%"class.WTF::HashTable.3224" = type <{ %"struct.WTF::KeyValuePair.3227"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3227" = type opaque
%"class.blink::HeapHashMap.3228" = type { %"class.WTF::HashMap.3231" }
%"class.WTF::HashMap.3231" = type { %"class.WTF::HashTable.3232" }
%"class.WTF::HashTable.3232" = type <{ %"struct.WTF::KeyValuePair.3234"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3234" = type opaque
%"class.blink::Member.3235" = type { %"class.blink::MemberBase.3236" }
%"class.blink::MemberBase.3236" = type { %"class.blink::InspectorRevalidateDOMTask"* }
%"class.blink::InspectorRevalidateDOMTask" = type opaque
%"class.blink::Member.3237" = type { %"class.blink::MemberBase.3238" }
%"class.blink::MemberBase.3238" = type { %"class.blink::InspectorHistory"* }
%"class.blink::InspectorHistory" = type <{ %"class.blink::HeapVector.3241", i32, [4 x i8] }>
%"class.blink::HeapVector.3241" = type { %"class.WTF::Vector.3244" }
%"class.WTF::Vector.3244" = type { %"class.WTF::VectorBuffer.3245" }
%"class.WTF::VectorBuffer.3245" = type { %"class.WTF::VectorBufferBase.3246" }
%"class.WTF::VectorBufferBase.3246" = type { %"class.blink::Member.3247"*, i32, i32 }
%"class.blink::Member.3247" = type opaque
%"class.blink::Member.3249" = type { %"class.blink::MemberBase.3250" }
%"class.blink::MemberBase.3250" = type { %"class.blink::DOMEditor"* }
%"class.blink::DOMEditor" = type opaque
%"class.blink::InspectedFrames" = type { i32 (...)**, %"class.blink::Member.2076" }
%"class.blink::InspectorNetworkAgent" = type { %"class.blink::InspectorBaseAgent.3114", %"class.blink::Member.2916", %"class.blink::Member.3121", %"class.v8_inspector::V8InspectorSession"*, %"class.blink::Member.3123", %"class.base::UnguessableToken", %"class.absl::optional.3125", %"class.blink::Member.3130", %"class.WTF::HashMap.3132", %"class.blink::HeapHashSet.3137", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::MapField.3107", %"class.blink::InspectorAgentState::MapField", %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField.3109", %"class.blink::InspectorAgentState::SimpleField.3109", %"class.blink::InspectorAgentState::SimpleField.3109", %"class.blink::InspectorAgentState::MapField.3107" }
%"class.blink::InspectorBaseAgent.3114" = type { %"class.blink::InspectorAgent", %"class.blink::protocol::Network::Backend", %"class.blink::Member.2554", %"class.blink::InspectorAgentState", %"class.std::__1::unique_ptr.3115" }
%"class.blink::protocol::Network::Backend" = type { i32 (...)** }
%"class.std::__1::unique_ptr.3115" = type { %"class.std::__1::__compressed_pair.3116" }
%"class.std::__1::__compressed_pair.3116" = type { %"struct.std::__1::__compressed_pair_elem.3117" }
%"struct.std::__1::__compressed_pair_elem.3117" = type { %"class.blink::protocol::Network::Frontend"* }
%"class.blink::protocol::Network::Frontend" = type { %"class.crdtp::FrontendChannel"* }
%"class.blink::Member.3121" = type { %"class.blink::MemberBase.3122" }
%"class.blink::MemberBase.3122" = type { %"class.blink::WorkerGlobalScope"* }
%"class.blink::WorkerGlobalScope" = type opaque
%"class.blink::Member.3123" = type { %"class.blink::MemberBase.3124" }
%"class.blink::MemberBase.3124" = type { %"class.blink::NetworkResourcesData"* }
%"class.blink::NetworkResourcesData" = type opaque
%"class.absl::optional.3125" = type { %"class.absl::optional_internal::optional_data.3126" }
%"class.absl::optional_internal::optional_data.3126" = type { %"class.absl::optional_internal::optional_data_base.3127" }
%"class.absl::optional_internal::optional_data_base.3127" = type { %"class.absl::optional_internal::optional_data_dtor_base.3128" }
%"class.absl::optional_internal::optional_data_dtor_base.3128" = type { i8, %union.anon.3129 }
%union.anon.3129 = type { i32 }
%"class.blink::Member.3130" = type { %"class.blink::MemberBase.3131" }
%"class.blink::MemberBase.3131" = type { %"class.blink::XHRReplayData"* }
%"class.blink::XHRReplayData" = type opaque
%"class.WTF::HashMap.3132" = type { %"class.WTF::HashTable.3133" }
%"class.WTF::HashTable.3133" = type <{ %"struct.WTF::KeyValuePair.3136"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3136" = type opaque
%"class.blink::HeapHashSet.3137" = type { %"class.WTF::HashSet.3140" }
%"class.WTF::HashSet.3140" = type { %"class.WTF::HashTable.3141" }
%"class.WTF::HashTable.3141" = type <{ %"class.blink::Member.3143"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.3143" = type opaque
%"class.blink::InspectorResourceContentLoader" = type <{ %"class.WTF::HashMap.2941", i8, i8, [6 x i8], %"class.blink::Member.2076", %"class.blink::HeapHashSet.2946", %"class.blink::HeapVector.2953", i32, [4 x i8] }>
%"class.WTF::HashMap.2941" = type { %"class.WTF::HashTable.2942" }
%"class.WTF::HashTable.2942" = type <{ %"struct.WTF::KeyValuePair.2945"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.2945" = type opaque
%"class.blink::HeapHashSet.2946" = type { %"class.WTF::HashSet.2949" }
%"class.WTF::HashSet.2949" = type { %"class.WTF::HashTable.2950" }
%"class.WTF::HashTable.2950" = type <{ %"class.blink::Member.2952"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.2952" = type opaque
%"class.blink::HeapVector.2953" = type { %"class.WTF::Vector.2956" }
%"class.WTF::Vector.2956" = type { %"class.WTF::VectorBuffer.2957" }
%"class.WTF::VectorBuffer.2957" = type { %"class.WTF::VectorBufferBase.2958" }
%"class.WTF::VectorBufferBase.2958" = type { %"class.blink::Member.2959"*, i32, i32 }
%"class.blink::Member.2959" = type { %"class.blink::MemberBase.2960" }
%"class.blink::MemberBase.2960" = type { %"class.blink::Resource"* }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional.2963", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.2983", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet.3059", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.3076", %"class.blink::ResourceResponse", %class.scoped_refptr.3078, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional.2963" = type { %"class.absl::optional_internal::optional_data.2964" }
%"class.absl::optional_internal::optional_data.2964" = type { %"class.absl::optional_internal::optional_data_base.2965" }
%"class.absl::optional_internal::optional_data_base.2965" = type { %"class.absl::optional_internal::optional_data_dtor_base.2966" }
%"class.absl::optional_internal::optional_data_dtor_base.2966" = type { i8, %union.anon.2967 }
%union.anon.2967 = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.2968", i8, %"class.absl::optional.2973", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.2968" = type { %"class.absl::optional_internal::optional_data.2969" }
%"class.absl::optional_internal::optional_data.2969" = type { %"class.absl::optional_internal::optional_data_base.2970" }
%"class.absl::optional_internal::optional_data_base.2970" = type { %"class.absl::optional_internal::optional_data_dtor_base.2971" }
%"class.absl::optional_internal::optional_data_dtor_base.2971" = type { i8, [7 x i8], %union.anon.2972 }
%union.anon.2972 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.2973" = type { %"class.absl::optional_internal::optional_data.2974" }
%"class.absl::optional_internal::optional_data.2974" = type { %"class.absl::optional_internal::optional_data_base.2975" }
%"class.absl::optional_internal::optional_data_base.2975" = type { %"class.absl::optional_internal::optional_data_dtor_base.2976" }
%"class.absl::optional_internal::optional_data_dtor_base.2976" = type { i8, %union.anon.2977 }
%union.anon.2977 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.2978", %"class.WTF::Vector.851" }
%"class.WTF::Vector.2978" = type { %"class.WTF::VectorBuffer.2979" }
%"class.WTF::VectorBuffer.2979" = type { %"class.WTF::VectorBufferBase.2980" }
%"class.WTF::VectorBufferBase.2980" = type { i32*, i32, i32 }
%"class.WTF::Vector.2983" = type { %"class.WTF::VectorBuffer.2984" }
%"class.WTF::VectorBuffer.2984" = type { %"class.WTF::VectorBufferBase.2985" }
%"class.WTF::VectorBufferBase.2985" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.3055" }
%"class.WTF::HashMap.3055" = type { %"class.WTF::HashTable.3056" }
%"class.WTF::HashTable.3056" = type <{ %"struct.WTF::KeyValuePair.3058"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3058" = type <{ %"class.blink::WeakMember.4906", i32, [4 x i8] }>
%"class.blink::WeakMember.4906" = type { %"class.blink::MemberBase.4907" }
%"class.blink::MemberBase.4907" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration.4908", [7 x i8], %"class.blink::Member.2959", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration.4908" = type { i8 }
%"class.blink::HeapHashSet.3059" = type { %"class.WTF::HashSet.3062" }
%"class.WTF::HashSet.3062" = type { %"class.WTF::HashTable.3063" }
%"class.WTF::HashTable.3063" = type <{ %"class.blink::WeakMember.3065"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.3065" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias.3066", %"class.WTF::String", %"class.WTF::HashSet.3067", i8, i8, %class.scoped_refptr.436, %class.scoped_refptr.3072, %class.scoped_refptr.3074 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::StrongAlias.3066" = type { i8 }
%"class.WTF::HashSet.3067" = type { %"class.WTF::HashTable.3068" }
%"class.WTF::HashTable.3068" = type <{ %"struct.std::__1::pair.3071"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair.3071" = type opaque
%class.scoped_refptr.3072 = type { %"class.base::RefCountedData.3073"* }
%"class.base::RefCountedData.3073" = type opaque
%class.scoped_refptr.3074 = type { %"class.base::RefCountedData.3075"* }
%"class.base::RefCountedData.3075" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.1763, %class.scoped_refptr.1763, %class.scoped_refptr.1763, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.2990, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.3002", %"class.absl::optional.3007", %"class.absl::optional.3017", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.2476", %"class.absl::optional.3017", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.3017", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.2476", %"class.absl::optional.3022", i8, %class.scoped_refptr.3027 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%class.scoped_refptr.2990 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.2991", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.3000, i8, %"class.url::Origin" }
%"class.base::RefCounted.2991" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebVector" = type { %"class.std::__1::vector.2992" }
%"class.std::__1::vector.2992" = type { %"class.std::__1::__vector_base.2993" }
%"class.std::__1::__vector_base.2993" = type { %"class.std::__1::unique_ptr.2994"*, %"class.std::__1::unique_ptr.2994"*, %"class.std::__1::__compressed_pair.2995" }
%"class.std::__1::unique_ptr.2994" = type { %"class.std::__1::__compressed_pair.4787" }
%"class.std::__1::__compressed_pair.4787" = type { %"struct.std::__1::__compressed_pair_elem.4788" }
%"struct.std::__1::__compressed_pair_elem.4788" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.2995" = type { %"struct.std::__1::__compressed_pair_elem.2996" }
%"struct.std::__1::__compressed_pair_elem.2996" = type { %"class.std::__1::unique_ptr.2994"* }
%class.scoped_refptr.3000 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.3001", [4 x i8] }>
%"class.base::RefCountedThreadSafe.3001" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.absl::optional.3002" = type { %"class.absl::optional_internal::optional_data.3003" }
%"class.absl::optional_internal::optional_data.3003" = type { %"class.absl::optional_internal::optional_data_base.3004" }
%"class.absl::optional_internal::optional_data_base.3004" = type { %"class.absl::optional_internal::optional_data_dtor_base.3005" }
%"class.absl::optional_internal::optional_data_dtor_base.3005" = type { i8, %union.anon.3006 }
%union.anon.3006 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.3007" = type { %"class.absl::optional_internal::optional_data.3008" }
%"class.absl::optional_internal::optional_data.3008" = type { %"class.absl::optional_internal::optional_data_base.3009" }
%"class.absl::optional_internal::optional_data_base.3009" = type { %"class.absl::optional_internal::optional_data_dtor_base.3010" }
%"class.absl::optional_internal::optional_data_dtor_base.3010" = type { i8, %union.anon.3011 }
%union.anon.3011 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.3012", %"class.WTF::Vector.851", %"class.WTF::String" }
%"class.WTF::Vector.3012" = type { %"class.WTF::VectorBuffer.3013" }
%"class.WTF::VectorBuffer.3013" = type { %"class.WTF::VectorBufferBase.3014" }
%"class.WTF::VectorBufferBase.3014" = type { %class.scoped_refptr.1763*, i32, i32 }
%"class.absl::optional.3017" = type { %"class.absl::optional_internal::optional_data.3018" }
%"class.absl::optional_internal::optional_data.3018" = type { %"class.absl::optional_internal::optional_data_base.3019" }
%"class.absl::optional_internal::optional_data_base.3019" = type { %"class.absl::optional_internal::optional_data_dtor_base.3020" }
%"class.absl::optional_internal::optional_data_dtor_base.3020" = type { i8, %union.anon.3021 }
%union.anon.3021 = type { %"class.WTF::String" }
%"class.absl::optional.3022" = type { %"class.absl::optional_internal::optional_data.3023" }
%"class.absl::optional_internal::optional_data.3023" = type { %"class.absl::optional_internal::optional_data_base.3024" }
%"class.absl::optional_internal::optional_data_base.3024" = type { %"class.absl::optional_internal::optional_data_dtor_base.3025" }
%"class.absl::optional_internal::optional_data_dtor_base.3025" = type { i8, %union.anon.3026 }
%union.anon.3026 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%class.scoped_refptr.3027 = type { %"class.base::RefCountedData.3028"* }
%"class.base::RefCountedData.3028" = type { %"class.base::RefCountedThreadSafe.4792", %"class.base::internal::flat_tree.4793" }
%"class.base::RefCountedThreadSafe.4792" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree.4793" = type { %"class.std::__1::vector.4794" }
%"class.std::__1::vector.4794" = type { %"class.std::__1::__vector_base.4795" }
%"class.std::__1::__vector_base.4795" = type { i32*, i32*, %"class.std::__1::__compressed_pair.4796" }
%"class.std::__1::__compressed_pair.4796" = type { %"struct.std::__1::__compressed_pair_elem.4797" }
%"struct.std::__1::__compressed_pair_elem.4797" = type { i32* }
%"class.blink::Member.3076" = type { %"class.blink::MemberBase.3077" }
%"class.blink::MemberBase.3077" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree.3092" }
%"class.std::__1::__tree.3092" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.3093", %"class.std::__1::__compressed_pair.3097" }
%"class.std::__1::__compressed_pair.3093" = type { %"struct.std::__1::__compressed_pair_elem.1768" }
%"class.std::__1::__compressed_pair.3097" = type { %"struct.std::__1::__compressed_pair_elem.160" }
%"class.blink::InspectorResourceContainer" = type { %"class.blink::Member.2916", %"class.WTF::HashMap.3102", %"class.WTF::HashMap.3266" }
%"class.WTF::HashMap.3266" = type { %"class.WTF::HashTable.3267" }
%"class.WTF::HashTable.3267" = type <{ %"struct.WTF::KeyValuePair.3270"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.3270" = type opaque
%"class.blink::CSSStyleRule" = type { %"class.blink::CSSRule", %"class.blink::Member.480", %"class.blink::Member.3987", %"class.blink::Member.3989" }
%"class.blink::Member.3987" = type { %"class.blink::MemberBase.3988" }
%"class.blink::MemberBase.3988" = type { %"class.blink::StyleRuleCSSStyleDeclaration"* }
%"class.blink::StyleRuleCSSStyleDeclaration" = type opaque
%"class.blink::Member.3989" = type { %"class.blink::MemberBase.3990" }
%"class.blink::MemberBase.3990" = type { %"class.blink::StylePropertyMap"* }
%"class.blink::StylePropertyMap" = type { %"class.blink::StylePropertyMapReadOnlyMainThread" }
%"class.blink::StylePropertyMapReadOnlyMainThread" = type { %"class.blink::StylePropertyMapReadOnly" }
%"class.blink::StylePropertyMapReadOnly" = type { %"class.blink::ScriptWrappable", %"class.blink::PairIterable" }
%"class.blink::PairIterable" = type { %"class.blink::Iterable" }
%"class.blink::Iterable" = type { i32 (...)** }
%"class.blink::CSSMediaRule" = type { %"class.blink::CSSConditionRule", %"class.blink::Member.655" }
%"class.blink::CSSConditionRule" = type { %"class.blink::CSSGroupingRule" }
%"class.blink::CSSGroupingRule" = type { %"class.blink::CSSRule", %"class.blink::Member.3991", %"class.blink::HeapVector.657", %"class.blink::Member.664" }
%"class.blink::Member.3991" = type { %"class.blink::MemberBase.3992" }
%"class.blink::MemberBase.3992" = type { %"class.blink::StyleRuleGroup"* }
%"class.blink::StyleRuleGroup" = type { %"class.blink::StyleRuleBase", %"class.blink::HeapVector.412" }
%"class.blink::HeapVector.4001" = type { %"class.WTF::Vector.4004" }
%"class.WTF::Vector.4004" = type { %"class.WTF::VectorBuffer.4005" }
%"class.WTF::VectorBuffer.4005" = type { %"class.WTF::VectorBufferBase.4006" }
%"class.WTF::VectorBufferBase.4006" = type { %"class.blink::Member.326"*, i32, i32 }
%"class.blink::StyleChangeReasonForTracing" = type { i8*, %"class.WTF::AtomicString" }
%"class.blink::protocol::CSS::Backend::EnableCallback" = type { i32 (...)** }
%"class.crdtp::DispatchResponse" = type { i32, %"class.std::__1::basic_string" }
%"class.blink::Persistent.3999" = type { %"class.blink::PersistentBase.4000" }
%"class.blink::PersistentBase.4000" = type { %"class.blink::InspectorCSSAgent"*, %"class.blink::PersistentNodePtr.269" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"class.blink::FontCustomPlatformData" = type <{ %"class.WTF::RefCounted.4071", [4 x i8], %class.sk_sp, i64, i8, i8, [6 x i8] }>
%"class.WTF::RefCounted.4071" = type { %"class.base::RefCounted.4072" }
%"class.base::RefCounted.4072" = type { %"class.base::subtle::RefCountedBase" }
%"class.crdtp::detail::PtrMaybe" = type { %"class.std::__1::unique_ptr.4073" }
%"class.std::__1::unique_ptr.4073" = type { %"class.std::__1::__compressed_pair.4074" }
%"class.std::__1::__compressed_pair.4074" = type { %"struct.std::__1::__compressed_pair_elem.4075" }
%"struct.std::__1::__compressed_pair_elem.4075" = type { %"class.blink::protocol::CSS::FontFace"* }
%"class.blink::protocol::CSS::FontFace" = type { %"class.crdtp::ProtocolObject", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.4076" }
%"class.crdtp::ProtocolObject" = type { %"class.crdtp::Serializable" }
%"class.crdtp::Serializable" = type { i32 (...)** }
%"class.crdtp::detail::PtrMaybe.4076" = type { %"class.std::__1::unique_ptr.4077" }
%"class.std::__1::unique_ptr.4077" = type { %"class.std::__1::__compressed_pair.4078" }
%"class.std::__1::__compressed_pair.4078" = type { %"struct.std::__1::__compressed_pair_elem.4079" }
%"struct.std::__1::__compressed_pair_elem.4079" = type { %"class.std::__1::vector.4080"* }
%"class.std::__1::vector.4080" = type { %"class.std::__1::__vector_base.4081" }
%"class.std::__1::__vector_base.4081" = type { %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::__compressed_pair.4091" }
%"class.std::__1::unique_ptr.4082" = type { %"class.std::__1::__compressed_pair.4083" }
%"class.std::__1::__compressed_pair.4083" = type { %"struct.std::__1::__compressed_pair_elem.4084" }
%"struct.std::__1::__compressed_pair_elem.4084" = type { %"class.blink::protocol::CSS::FontVariationAxis"* }
%"class.blink::protocol::CSS::FontVariationAxis" = type { %"class.crdtp::ProtocolObject.4085", %"class.WTF::String", %"class.WTF::String", double, double, double }
%"class.crdtp::ProtocolObject.4085" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4091" = type { %"struct.std::__1::__compressed_pair_elem.4092" }
%"struct.std::__1::__compressed_pair_elem.4092" = type { %"class.std::__1::unique_ptr.4082"* }
%"class.WTF::Vector.4102" = type { %"class.WTF::VectorBuffer.4103" }
%"class.WTF::VectorBuffer.4103" = type { %"class.WTF::VectorBufferBase.4104" }
%"class.WTF::VectorBufferBase.4104" = type { %"struct.blink::VariationAxis"*, i32, i32 }
%"struct.blink::VariationAxis" = type { %"class.WTF::String", %"class.WTF::String", double, double, double }
%"class.blink::protocol::CSS::CSSStyleSheetHeader" = type { %"class.crdtp::ProtocolObject.4133", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.4136", i8, %"class.crdtp::detail::ValueMaybe.4137", i8, i8, i8, double, double, double, double, double }
%"class.crdtp::ProtocolObject.4133" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe" = type { i8, %"class.WTF::String" }
%"class.crdtp::detail::ValueMaybe.4136" = type { i8, i32 }
%"class.crdtp::detail::ValueMaybe.4137" = type { i8, i8 }
%"class.std::__1::unique_ptr.4142" = type { %"class.std::__1::__compressed_pair.4143" }
%"class.std::__1::__compressed_pair.4143" = type { %"struct.std::__1::__compressed_pair_elem.4144" }
%"struct.std::__1::__compressed_pair_elem.4144" = type { %"class.std::__1::vector.4145"* }
%"class.std::__1::vector.4145" = type { %"class.std::__1::__vector_base.4146" }
%"class.std::__1::__vector_base.4146" = type { %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::__compressed_pair.4212" }
%"class.std::__1::unique_ptr.4147" = type { %"class.std::__1::__compressed_pair.4148" }
%"class.std::__1::__compressed_pair.4148" = type { %"struct.std::__1::__compressed_pair_elem.4149" }
%"struct.std::__1::__compressed_pair_elem.4149" = type { %"class.blink::protocol::CSS::CSSMedia"* }
%"class.blink::protocol::CSS::CSSMedia" = type { %"class.crdtp::ProtocolObject.4150", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.4153", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.4163" }
%"class.crdtp::ProtocolObject.4150" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4153" = type { %"class.std::__1::unique_ptr.4154" }
%"class.std::__1::unique_ptr.4154" = type { %"class.std::__1::__compressed_pair.4155" }
%"class.std::__1::__compressed_pair.4155" = type { %"struct.std::__1::__compressed_pair_elem.4156" }
%"struct.std::__1::__compressed_pair_elem.4156" = type { %"class.blink::protocol::CSS::SourceRange"* }
%"class.blink::protocol::CSS::SourceRange" = type { %"class.crdtp::ProtocolObject.4157", i32, i32, i32, i32 }
%"class.crdtp::ProtocolObject.4157" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::PtrMaybe.4163" = type { %"class.std::__1::unique_ptr.4164" }
%"class.std::__1::unique_ptr.4164" = type { %"class.std::__1::__compressed_pair.4165" }
%"class.std::__1::__compressed_pair.4165" = type { %"struct.std::__1::__compressed_pair_elem.4166" }
%"struct.std::__1::__compressed_pair_elem.4166" = type { %"class.std::__1::vector.4167"* }
%"class.std::__1::vector.4167" = type { %"class.std::__1::__vector_base.4168" }
%"class.std::__1::__vector_base.4168" = type { %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::__compressed_pair.4201" }
%"class.std::__1::unique_ptr.4169" = type { %"class.std::__1::__compressed_pair.4170" }
%"class.std::__1::__compressed_pair.4170" = type { %"struct.std::__1::__compressed_pair_elem.4171" }
%"struct.std::__1::__compressed_pair_elem.4171" = type { %"class.blink::protocol::CSS::MediaQuery"* }
%"class.blink::protocol::CSS::MediaQuery" = type <{ %"class.crdtp::ProtocolObject.4172", %"class.std::__1::unique_ptr.4175", i8, [7 x i8] }>
%"class.crdtp::ProtocolObject.4172" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.4175" = type { %"class.std::__1::__compressed_pair.4176" }
%"class.std::__1::__compressed_pair.4176" = type { %"struct.std::__1::__compressed_pair_elem.4177" }
%"struct.std::__1::__compressed_pair_elem.4177" = type { %"class.std::__1::vector.4178"* }
%"class.std::__1::vector.4178" = type { %"class.std::__1::__vector_base.4179" }
%"class.std::__1::__vector_base.4179" = type { %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::__compressed_pair.4190" }
%"class.std::__1::unique_ptr.4180" = type { %"class.std::__1::__compressed_pair.4181" }
%"class.std::__1::__compressed_pair.4181" = type { %"struct.std::__1::__compressed_pair_elem.4182" }
%"struct.std::__1::__compressed_pair_elem.4182" = type { %"class.blink::protocol::CSS::MediaQueryExpression"* }
%"class.blink::protocol::CSS::MediaQueryExpression" = type { %"class.crdtp::ProtocolObject.4183", double, %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.4153", %"class.crdtp::detail::ValueMaybe.4186" }
%"class.crdtp::ProtocolObject.4183" = type { %"class.crdtp::Serializable" }
%"class.crdtp::detail::ValueMaybe.4186" = type { i8, double }
%"class.std::__1::__compressed_pair.4190" = type { %"struct.std::__1::__compressed_pair_elem.4191" }
%"struct.std::__1::__compressed_pair_elem.4191" = type { %"class.std::__1::unique_ptr.4180"* }
%"class.std::__1::__compressed_pair.4201" = type { %"struct.std::__1::__compressed_pair_elem.4202" }
%"struct.std::__1::__compressed_pair_elem.4202" = type { %"class.std::__1::unique_ptr.4169"* }
%"class.std::__1::__compressed_pair.4212" = type { %"struct.std::__1::__compressed_pair_elem.4213" }
%"struct.std::__1::__compressed_pair_elem.4213" = type { %"class.std::__1::unique_ptr.4147"* }
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::CSSImportRule" = type { %"class.blink::CSSRule", %"class.blink::Member.395", %"class.blink::Member.655", %"class.blink::Member.389" }
%"class.crdtp::detail::PtrMaybe.4223" = type { %"class.std::__1::unique_ptr.4224" }
%"class.std::__1::unique_ptr.4224" = type { %"class.std::__1::__compressed_pair.4225" }
%"class.std::__1::__compressed_pair.4225" = type { %"struct.std::__1::__compressed_pair_elem.4226" }
%"struct.std::__1::__compressed_pair_elem.4226" = type { %"class.blink::protocol::CSS::CSSStyle"* }
%"class.blink::protocol::CSS::CSSStyle" = type { %"class.crdtp::ProtocolObject.4227", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.4230", %"class.std::__1::unique_ptr.4237", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::PtrMaybe.4153" }
%"class.crdtp::ProtocolObject.4227" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.4230" = type { %"class.std::__1::__compressed_pair.4231" }
%"class.std::__1::__compressed_pair.4231" = type { %"struct.std::__1::__compressed_pair_elem.4232" }
%"struct.std::__1::__compressed_pair_elem.4232" = type { %"class.std::__1::vector.4233"* }
%"class.std::__1::vector.4233" = type { %"class.std::__1::__vector_base.4807" }
%"class.std::__1::__vector_base.4807" = type { %"class.std::__1::unique_ptr.4808"*, %"class.std::__1::unique_ptr.4808"*, %"class.std::__1::__compressed_pair.4817" }
%"class.std::__1::unique_ptr.4808" = type { %"class.std::__1::__compressed_pair.4809" }
%"class.std::__1::__compressed_pair.4809" = type { %"struct.std::__1::__compressed_pair_elem.4810" }
%"struct.std::__1::__compressed_pair_elem.4810" = type { %"class.blink::protocol::CSS::CSSProperty"* }
%"class.blink::protocol::CSS::CSSProperty" = type { %"class.crdtp::ProtocolObject.4811", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.4137", %"class.crdtp::detail::ValueMaybe.4137", %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe.4137", %"class.crdtp::detail::ValueMaybe.4137", %"class.crdtp::detail::PtrMaybe.4153" }
%"class.crdtp::ProtocolObject.4811" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4817" = type { %"struct.std::__1::__compressed_pair_elem.4818" }
%"struct.std::__1::__compressed_pair_elem.4818" = type { %"class.std::__1::unique_ptr.4808"* }
%"class.std::__1::unique_ptr.4237" = type { %"class.std::__1::__compressed_pair.4238" }
%"class.std::__1::__compressed_pair.4238" = type { %"struct.std::__1::__compressed_pair_elem.4239" }
%"struct.std::__1::__compressed_pair_elem.4239" = type { %"class.std::__1::vector.4240"* }
%"class.std::__1::vector.4240" = type { %"class.std::__1::__vector_base.4822" }
%"class.std::__1::__vector_base.4822" = type { %"class.std::__1::unique_ptr.4823"*, %"class.std::__1::unique_ptr.4823"*, %"class.std::__1::__compressed_pair.4832" }
%"class.std::__1::unique_ptr.4823" = type { %"class.std::__1::__compressed_pair.4824" }
%"class.std::__1::__compressed_pair.4824" = type { %"struct.std::__1::__compressed_pair_elem.4825" }
%"struct.std::__1::__compressed_pair_elem.4825" = type { %"class.blink::protocol::CSS::ShorthandEntry"* }
%"class.blink::protocol::CSS::ShorthandEntry" = type <{ %"class.crdtp::ProtocolObject.4826", %"class.WTF::String", %"class.WTF::String", %"class.crdtp::detail::ValueMaybe.4137", [6 x i8] }>
%"class.crdtp::ProtocolObject.4826" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4832" = type { %"struct.std::__1::__compressed_pair_elem.4833" }
%"struct.std::__1::__compressed_pair_elem.4833" = type { %"class.std::__1::unique_ptr.4823"* }
%"class.crdtp::detail::PtrMaybe.4247" = type { %"class.std::__1::unique_ptr.4248" }
%"class.std::__1::unique_ptr.4248" = type { %"class.std::__1::__compressed_pair.4249" }
%"class.std::__1::__compressed_pair.4249" = type { %"struct.std::__1::__compressed_pair_elem.4250" }
%"struct.std::__1::__compressed_pair_elem.4250" = type { %"class.std::__1::vector.4251"* }
%"class.std::__1::vector.4251" = type { %"class.std::__1::__vector_base.4252" }
%"class.std::__1::__vector_base.4252" = type { %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::__compressed_pair.4294" }
%"class.std::__1::unique_ptr.4253" = type { %"class.std::__1::__compressed_pair.4254" }
%"class.std::__1::__compressed_pair.4254" = type { %"struct.std::__1::__compressed_pair_elem.4255" }
%"struct.std::__1::__compressed_pair_elem.4255" = type { %"class.blink::protocol::CSS::RuleMatch"* }
%"class.blink::protocol::CSS::RuleMatch" = type { %"class.crdtp::ProtocolObject.4256", %"class.std::__1::unique_ptr.4259", %"class.std::__1::unique_ptr.4285" }
%"class.crdtp::ProtocolObject.4256" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.4259" = type { %"class.std::__1::__compressed_pair.4260" }
%"class.std::__1::__compressed_pair.4260" = type { %"struct.std::__1::__compressed_pair_elem.4261" }
%"struct.std::__1::__compressed_pair_elem.4261" = type { %"class.blink::protocol::CSS::CSSRule"* }
%"class.blink::protocol::CSS::CSSRule" = type { %"class.crdtp::ProtocolObject.4262", %"class.crdtp::detail::ValueMaybe", %"class.std::__1::unique_ptr.4265", %"class.WTF::String", %"class.std::__1::unique_ptr.4224", %"class.crdtp::detail::PtrMaybe.4281" }
%"class.crdtp::ProtocolObject.4262" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.4265" = type { %"class.std::__1::__compressed_pair.4266" }
%"class.std::__1::__compressed_pair.4266" = type { %"struct.std::__1::__compressed_pair_elem.4267" }
%"struct.std::__1::__compressed_pair_elem.4267" = type { %"class.blink::protocol::CSS::SelectorList"* }
%"class.blink::protocol::CSS::SelectorList" = type { %"class.crdtp::ProtocolObject.4268", %"class.std::__1::unique_ptr.4271", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.4268" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.4271" = type { %"class.std::__1::__compressed_pair.4272" }
%"class.std::__1::__compressed_pair.4272" = type { %"struct.std::__1::__compressed_pair_elem.4273" }
%"struct.std::__1::__compressed_pair_elem.4273" = type { %"class.std::__1::vector.4274"* }
%"class.std::__1::vector.4274" = type { %"class.std::__1::__vector_base.4801" }
%"class.std::__1::__vector_base.4801" = type { %"class.std::__1::unique_ptr.4360"*, %"class.std::__1::unique_ptr.4360"*, %"class.std::__1::__compressed_pair.4802" }
%"class.std::__1::unique_ptr.4360" = type { %"class.std::__1::__compressed_pair.4361" }
%"class.std::__1::__compressed_pair.4361" = type { %"struct.std::__1::__compressed_pair_elem.4362" }
%"struct.std::__1::__compressed_pair_elem.4362" = type { %"class.blink::protocol::CSS::Value"* }
%"class.blink::protocol::CSS::Value" = type { %"class.crdtp::ProtocolObject.4363", %"class.WTF::String", %"class.crdtp::detail::PtrMaybe.4153" }
%"class.crdtp::ProtocolObject.4363" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4802" = type { %"struct.std::__1::__compressed_pair_elem.4803" }
%"struct.std::__1::__compressed_pair_elem.4803" = type { %"class.std::__1::unique_ptr.4360"* }
%"class.crdtp::detail::PtrMaybe.4281" = type { %"class.std::__1::unique_ptr.4142" }
%"class.std::__1::unique_ptr.4285" = type { %"class.std::__1::__compressed_pair.4286" }
%"class.std::__1::__compressed_pair.4286" = type { %"struct.std::__1::__compressed_pair_elem.4287" }
%"struct.std::__1::__compressed_pair_elem.4287" = type { %"class.std::__1::vector.3613"* }
%"class.std::__1::__compressed_pair.4294" = type { %"struct.std::__1::__compressed_pair_elem.4295" }
%"struct.std::__1::__compressed_pair_elem.4295" = type { %"class.std::__1::unique_ptr.4253"* }
%"class.crdtp::detail::PtrMaybe.4302" = type { %"class.std::__1::unique_ptr.4303" }
%"class.std::__1::unique_ptr.4303" = type { %"class.std::__1::__compressed_pair.4304" }
%"class.std::__1::__compressed_pair.4304" = type { %"struct.std::__1::__compressed_pair_elem.4305" }
%"struct.std::__1::__compressed_pair_elem.4305" = type { %"class.std::__1::vector.4306"* }
%"class.std::__1::vector.4306" = type { %"class.std::__1::__vector_base.4307" }
%"class.std::__1::__vector_base.4307" = type { %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::__compressed_pair.4317" }
%"class.std::__1::unique_ptr.4308" = type { %"class.std::__1::__compressed_pair.4309" }
%"class.std::__1::__compressed_pair.4309" = type { %"struct.std::__1::__compressed_pair_elem.4310" }
%"struct.std::__1::__compressed_pair_elem.4310" = type { %"class.blink::protocol::CSS::PseudoElementMatches"* }
%"class.blink::protocol::CSS::PseudoElementMatches" = type { %"class.crdtp::ProtocolObject.4311", %"class.WTF::String", %"class.std::__1::unique_ptr.4248" }
%"class.crdtp::ProtocolObject.4311" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4317" = type { %"struct.std::__1::__compressed_pair_elem.4318" }
%"struct.std::__1::__compressed_pair_elem.4318" = type { %"class.std::__1::unique_ptr.4308"* }
%"class.crdtp::detail::PtrMaybe.4325" = type { %"class.std::__1::unique_ptr.4326" }
%"class.std::__1::unique_ptr.4326" = type { %"class.std::__1::__compressed_pair.4327" }
%"class.std::__1::__compressed_pair.4327" = type { %"struct.std::__1::__compressed_pair_elem.4328" }
%"struct.std::__1::__compressed_pair_elem.4328" = type { %"class.std::__1::vector.4329"* }
%"class.std::__1::vector.4329" = type { %"class.std::__1::__vector_base.4330" }
%"class.std::__1::__vector_base.4330" = type { %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::__compressed_pair.4340" }
%"class.std::__1::unique_ptr.4331" = type { %"class.std::__1::__compressed_pair.4332" }
%"class.std::__1::__compressed_pair.4332" = type { %"struct.std::__1::__compressed_pair_elem.4333" }
%"struct.std::__1::__compressed_pair_elem.4333" = type { %"class.blink::protocol::CSS::InheritedStyleEntry"* }
%"class.blink::protocol::CSS::InheritedStyleEntry" = type { %"class.crdtp::ProtocolObject.4334", %"class.crdtp::detail::PtrMaybe.4223", %"class.std::__1::unique_ptr.4248" }
%"class.crdtp::ProtocolObject.4334" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4340" = type { %"struct.std::__1::__compressed_pair_elem.4341" }
%"struct.std::__1::__compressed_pair_elem.4341" = type { %"class.std::__1::unique_ptr.4331"* }
%"class.crdtp::detail::PtrMaybe.4348" = type { %"class.std::__1::unique_ptr.4349" }
%"class.std::__1::unique_ptr.4349" = type { %"class.std::__1::__compressed_pair.4350" }
%"class.std::__1::__compressed_pair.4350" = type { %"struct.std::__1::__compressed_pair_elem.4351" }
%"struct.std::__1::__compressed_pair_elem.4351" = type { %"class.std::__1::vector.4352"* }
%"class.std::__1::vector.4352" = type { %"class.std::__1::__vector_base.4353" }
%"class.std::__1::__vector_base.4353" = type { %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::__compressed_pair.4394" }
%"class.std::__1::unique_ptr.4354" = type { %"class.std::__1::__compressed_pair.4355" }
%"class.std::__1::__compressed_pair.4355" = type { %"struct.std::__1::__compressed_pair_elem.4356" }
%"struct.std::__1::__compressed_pair_elem.4356" = type { %"class.blink::protocol::CSS::CSSKeyframesRule"* }
%"class.blink::protocol::CSS::CSSKeyframesRule" = type { %"class.crdtp::ProtocolObject.4357", %"class.std::__1::unique_ptr.4360", %"class.std::__1::unique_ptr.4369" }
%"class.crdtp::ProtocolObject.4357" = type { %"class.crdtp::Serializable" }
%"class.std::__1::unique_ptr.4369" = type { %"class.std::__1::__compressed_pair.4370" }
%"class.std::__1::__compressed_pair.4370" = type { %"struct.std::__1::__compressed_pair_elem.4371" }
%"struct.std::__1::__compressed_pair_elem.4371" = type { %"class.std::__1::vector.4372"* }
%"class.std::__1::vector.4372" = type { %"class.std::__1::__vector_base.4373" }
%"class.std::__1::__vector_base.4373" = type { %"class.std::__1::unique_ptr.4374"*, %"class.std::__1::unique_ptr.4374"*, %"class.std::__1::__compressed_pair.4383" }
%"class.std::__1::unique_ptr.4374" = type { %"class.std::__1::__compressed_pair.4375" }
%"class.std::__1::__compressed_pair.4375" = type { %"struct.std::__1::__compressed_pair_elem.4376" }
%"struct.std::__1::__compressed_pair_elem.4376" = type { %"class.blink::protocol::CSS::CSSKeyframeRule"* }
%"class.blink::protocol::CSS::CSSKeyframeRule" = type { %"class.crdtp::ProtocolObject.4377", %"class.crdtp::detail::ValueMaybe", %"class.WTF::String", %"class.std::__1::unique_ptr.4360", %"class.std::__1::unique_ptr.4224" }
%"class.crdtp::ProtocolObject.4377" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4383" = type { %"struct.std::__1::__compressed_pair_elem.4384" }
%"struct.std::__1::__compressed_pair_elem.4384" = type { %"class.std::__1::unique_ptr.4374"* }
%"class.std::__1::__compressed_pair.4394" = type { %"struct.std::__1::__compressed_pair_elem.4395" }
%"struct.std::__1::__compressed_pair_elem.4395" = type { %"class.std::__1::unique_ptr.4354"* }
%"class.blink::InspectorStyleResolver" = type { %"class.blink::Element"*, %"class.blink::HeapVector.4405"*, %"class.blink::HeapVector.4413", %"class.blink::HeapVector.4413" }
%"class.blink::HeapVector.4405" = type { %"class.WTF::Vector.4408" }
%"class.WTF::Vector.4408" = type { %"class.WTF::VectorBuffer.4409" }
%"class.WTF::VectorBuffer.4409" = type { %"class.WTF::VectorBufferBase.4410" }
%"class.WTF::VectorBufferBase.4410" = type { %"struct.std::__1::pair.4411"*, i32, i32 }
%"struct.std::__1::pair.4411" = type <{ %"class.blink::Member.644", i32, [4 x i8] }>
%"class.blink::HeapVector.4413" = type { %"class.WTF::Vector.4416" }
%"class.WTF::Vector.4416" = type { %"class.WTF::VectorBuffer.4417" }
%"class.WTF::VectorBuffer.4417" = type { %"class.WTF::VectorBufferBase.4418" }
%"class.WTF::VectorBufferBase.4418" = type { %"class.blink::Member.4419"*, i32, i32 }
%"class.blink::Member.4419" = type { %"class.blink::MemberBase.4420" }
%"class.blink::MemberBase.4420" = type { %"struct.blink::InspectorCSSMatchedRules"* }
%"struct.blink::InspectorCSSMatchedRules" = type <{ %"class.blink::Member.343", %"class.blink::Member.4423", i8, [7 x i8] }>
%"class.blink::Member.4423" = type { %"class.blink::MemberBase.4424" }
%"class.blink::MemberBase.4424" = type { %"class.blink::HeapVector.4405"* }
%"struct.std::__1::__less" = type { i8 }
%"class.blink::HeapVector.4617" = type { %"class.WTF::Vector.4620" }
%"class.WTF::Vector.4620" = type { %"class.WTF::VectorBuffer.4621" }
%"class.WTF::VectorBuffer.4621" = type { %"class.WTF::VectorBufferBase.4622" }
%"class.WTF::VectorBufferBase.4622" = type { %"class.blink::Member.4589"*, i32, i32 }
%"class.blink::Member.4589" = type { %"class.blink::MemberBase.4590" }
%"class.blink::MemberBase.4590" = type { %"class.blink::CSSStyleRule"* }
%"class.blink::HeapHashSet.4624" = type { %"class.WTF::HashSet.4627" }
%"class.WTF::HashSet.4627" = type { %"class.WTF::HashTable.4628" }
%"class.WTF::HashTable.4628" = type <{ %"class.blink::Member.644"*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.4630" = type { %"class.WTF::HashMap.4633" }
%"class.WTF::HashMap.4633" = type { %"class.WTF::HashTable.4634" }
%"class.WTF::HashTable.4634" = type <{ %"struct.WTF::KeyValuePair.4636"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4636" = type { %"class.blink::Member.4589", %"class.std::__1::unique_ptr.3920" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"class.blink::MutableCSSPropertyValueSet" = type <{ %"class.blink::CSSPropertyValueSet", [4 x i8], %"class.blink::Member.4643", %"class.blink::HeapVector.4647", i8, [7 x i8] }>
%"class.blink::Member.4643" = type { %"class.blink::MemberBase.4644" }
%"class.blink::MemberBase.4644" = type { %"class.blink::PropertySetCSSStyleDeclaration"* }
%"class.blink::PropertySetCSSStyleDeclaration" = type { %"class.blink::AbstractPropertySetCSSStyleDeclaration", %"class.blink::Member.4645" }
%"class.blink::AbstractPropertySetCSSStyleDeclaration" = type { %"class.blink::CSSStyleDeclaration" }
%"class.blink::Member.4645" = type { %"class.blink::MemberBase.4646" }
%"class.blink::MemberBase.4646" = type { %"class.blink::MutableCSSPropertyValueSet"* }
%"class.blink::HeapVector.4647" = type { %"class.WTF::Vector.4650" }
%"class.WTF::Vector.4650" = type { %"class.WTF::VectorBuffer.4651" }
%"class.WTF::VectorBuffer.4651" = type { %"class.WTF::VectorBufferBase.4652", [96 x i8] }
%"class.WTF::VectorBufferBase.4652" = type { %"class.blink::CSSPropertyValue"*, i32, i32 }
%"class.blink::CSSPropertyValue" = type { %"struct.blink::CSSPropertyValueMetadata", %"class.blink::Member.596" }
%"struct.blink::CSSPropertyValueMetadata" = type <{ %"class.WTF::AtomicString", i16, [6 x i8] }>
%"class.blink::CSSKeyframesRule" = type <{ %"class.blink::CSSRule", %"class.blink::Member.555", %"class.blink::HeapVector.4429", %"class.blink::Member.664", i8, [7 x i8] }>
%"class.blink::HeapVector.4429" = type { %"class.WTF::Vector.4432" }
%"class.WTF::Vector.4432" = type { %"class.WTF::VectorBuffer.4433" }
%"class.WTF::VectorBuffer.4433" = type { %"class.WTF::VectorBufferBase.4434" }
%"class.WTF::VectorBufferBase.4434" = type { %"class.blink::Member.4435"*, i32, i32 }
%"class.blink::Member.4435" = type opaque
%"class.blink::CSSKeyframeRule" = type { %"class.blink::CSSRule", %"class.blink::Member.563", %"class.blink::Member.4437" }
%"class.blink::Member.4437" = type { %"class.blink::MemberBase.4438" }
%"class.blink::MemberBase.4438" = type { %"class.blink::KeyframeStyleRuleCSSStyleDeclaration"* }
%"class.blink::KeyframeStyleRuleCSSStyleDeclaration" = type opaque
%"class.std::__1::unique_ptr.4442" = type { %"class.std::__1::__compressed_pair.4443" }
%"class.std::__1::__compressed_pair.4443" = type { %"struct.std::__1::__compressed_pair_elem.4444" }
%"struct.std::__1::__compressed_pair_elem.4444" = type { %"class.std::__1::vector.4445"* }
%"class.std::__1::vector.4445" = type { %"class.std::__1::__vector_base.4446" }
%"class.std::__1::__vector_base.4446" = type { %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::__compressed_pair.4456" }
%"class.std::__1::unique_ptr.4447" = type { %"class.std::__1::__compressed_pair.4448" }
%"class.std::__1::__compressed_pair.4448" = type { %"struct.std::__1::__compressed_pair_elem.4449" }
%"struct.std::__1::__compressed_pair_elem.4449" = type { %"class.blink::protocol::CSS::CSSComputedStyleProperty"* }
%"class.blink::protocol::CSS::CSSComputedStyleProperty" = type { %"class.crdtp::ProtocolObject.4450", %"class.WTF::String", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.4450" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4456" = type { %"struct.std::__1::__compressed_pair_elem.4457" }
%"struct.std::__1::__compressed_pair_elem.4457" = type { %"class.std::__1::unique_ptr.4447"* }
%"class.blink::CSSComputedStyleDeclaration" = type <{ %"class.blink::CSSStyleDeclaration", %"class.blink::Member.318", i8, [7 x i8], %"class.WTF::AtomicString", i8, [7 x i8] }>
%"class.blink::CSSProperty" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8, [7 x i8] }>
%"class.blink::CSSUnresolvedProperty" = type { i32 (...)** }
%"class.WTF::HashCountedSet.4469" = type { %"class.WTF::HashMap.4470" }
%"class.WTF::HashMap.4470" = type { %"class.WTF::HashTable.4471" }
%"class.WTF::HashTable.4471" = type <{ %"struct.WTF::KeyValuePair.4474"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4474" = type <{ %"struct.std::__1::pair.4475", i32, [4 x i8] }>
%"struct.std::__1::pair.4475" = type { i32, %"class.WTF::String" }
%"class.blink::NGInlineCursor" = type <{ %"class.blink::NGInlineCursorPosition", %"class.base::span", %"class.blink::NGFragmentItems"*, %"class.blink::NGPhysicalBoxFragment"*, %"class.blink::NGInlineCursor::CulledInlineTraversal", %"class.blink::LayoutBlockFlow"*, %"class.blink::LayoutUnit", i32, i32, [4 x i8] }>
%"class.blink::NGInlineCursorPosition" = type { %"class.blink::NGFragmentItem"*, %"class.base::CheckedContiguousIterator" }
%"class.blink::NGFragmentItem" = type <{ %"class.blink::LayoutObject"*, %union.anon.4478, %"struct.blink::PhysicalRect", %"class.blink::NGInkOverflow", i32, i32, i16, [6 x i8] }>
%union.anon.4478 = type { %"struct.blink::NGFragmentItem::TextItem" }
%"struct.blink::NGFragmentItem::TextItem" = type { %class.scoped_refptr.4479, %"struct.blink::NGTextOffset" }
%class.scoped_refptr.4479 = type { %"class.blink::ShapeResultView"* }
%"class.blink::ShapeResultView" = type { %"class.WTF::RefCounted.4480", %class.scoped_refptr.4482, i32, i32, i32, i32, float, i32, [0 x %struct.anon.4483] }
%"class.WTF::RefCounted.4480" = type { %"class.base::RefCounted.4481" }
%"class.base::RefCounted.4481" = type { %"class.base::subtle::RefCountedBase" }
%class.scoped_refptr.4482 = type { %"class.blink::SimpleFontData"* }
%struct.anon.4483 = type { i8* }
%"struct.blink::NGTextOffset" = type { i32, i32 }
%"class.blink::NGInkOverflow" = type { %union.anon.4492 }
%union.anon.4492 = type { %"struct.blink::NGSingleInkOverflow"* }
%"struct.blink::NGSingleInkOverflow" = type { %"struct.blink::PhysicalRect" }
%"class.base::CheckedContiguousIterator" = type { %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"* }
%"class.base::span" = type { %"struct.base::internal::ExtentStorage", %"class.blink::NGFragmentItem"* }
%"struct.base::internal::ExtentStorage" = type { i64 }
%"class.blink::NGFragmentItems" = type { %"class.WTF::String", %"class.WTF::String", i32, i32, [0 x %"class.blink::NGFragmentItem"] }
%"class.blink::NGPhysicalBoxFragment" = type opaque
%"class.blink::NGInlineCursor::CulledInlineTraversal" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutInline"*, i8, [7 x i8] }>
%"class.WTF::Vector.4493" = type { %"class.WTF::VectorBuffer.4494" }
%"class.WTF::VectorBuffer.4494" = type { %"class.WTF::VectorBufferBase.4495" }
%"class.WTF::VectorBufferBase.4495" = type { %"struct.blink::ShapeResult::RunFontData"*, i32, i32 }
%"struct.blink::ShapeResult::RunFontData" = type { %"class.blink::SimpleFontData"*, i32 }
%"class.blink::TextRun" = type <{ %union.anon.4498, i32, i32, float, float, i16, [2 x i8], %"struct.blink::TabSize", [4 x i8] }>
%union.anon.4498 = type { i8* }
%"class.blink::CachingWordShaper" = type { %"class.blink::Font"* }
%"class.blink::FontCache" = type <{ i8, [3 x i8], i32, %class.sk_sp.5014, i16, i8, [5 x i8], %"class.blink::Persistent.5015", %"class.WTF::HashMap.5018", %"class.WTF::HashMap.5023", %"class.blink::FontDataCache", %"class.blink::Persistent.5046", float, [4 x i8] }>
%class.sk_sp.5014 = type { %class.SkFontMgr* }
%class.SkFontMgr = type { %class.SkRefCnt.base, [4 x i8] }
%"class.blink::Persistent.5015" = type { %"class.blink::PersistentBase.5016" }
%"class.blink::PersistentBase.5016" = type { %"class.blink::HeapHashSet.5017"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::HeapHashSet.5017" = type opaque
%"class.WTF::HashMap.5018" = type { %"class.WTF::HashTable.5019" }
%"class.WTF::HashTable.5019" = type <{ %"struct.WTF::KeyValuePair.5022"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.5022" = type opaque
%"class.WTF::HashMap.5023" = type { %"class.WTF::HashTable.5024" }
%"class.WTF::HashTable.5024" = type <{ %"struct.WTF::KeyValuePair.5027"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.5027" = type opaque
%"class.blink::FontDataCache" = type { %"class.WTF::HashMap.5028", %"class.WTF::LinkedHashSet.5033" }
%"class.WTF::HashMap.5028" = type { %"class.WTF::HashTable.5029" }
%"class.WTF::HashTable.5029" = type <{ %"struct.WTF::KeyValuePair.5032"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.5032" = type opaque
%"class.WTF::LinkedHashSet.5033" = type { %"class.WTF::HashMap.5034", %"class.WTF::VectorBackedLinkedList.5039" }
%"class.WTF::HashMap.5034" = type { %"class.WTF::HashTable.5035" }
%"class.WTF::HashTable.5035" = type <{ %"struct.WTF::KeyValuePair.5038"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.5038" = type opaque
%"class.WTF::VectorBackedLinkedList.5039" = type { %"class.WTF::Vector.5040", i32, i32 }
%"class.WTF::Vector.5040" = type { %"class.WTF::VectorBuffer.5041" }
%"class.WTF::VectorBuffer.5041" = type { %"class.WTF::VectorBufferBase.5042" }
%"class.WTF::VectorBufferBase.5042" = type { %"class.WTF::VectorBackedLinkedListNode.5043"*, i32, i32 }
%"class.WTF::VectorBackedLinkedListNode.5043" = type opaque
%"class.blink::Persistent.5046" = type { %"class.blink::PersistentBase.5047" }
%"class.blink::PersistentBase.5047" = type { %"class.blink::FontFallbackMap"*, %"class.blink::PersistentNodePtr.269" }
%"class.blink::InlineTextBoxList" = type { %"class.blink::InlineBoxList.4477" }
%"class.blink::InlineBoxList.4477" = type { %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"* }
%"class.blink::InlineTextBox" = type { %"class.blink::InlineBox", %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"*, i32, i16, i16 }
%"class.std::__1::unique_ptr.4499" = type { %"class.std::__1::__compressed_pair.4500" }
%"class.std::__1::__compressed_pair.4500" = type { %"struct.std::__1::__compressed_pair_elem.4501" }
%"struct.std::__1::__compressed_pair_elem.4501" = type { %"class.std::__1::vector.4502"* }
%"class.std::__1::vector.4502" = type { %"class.std::__1::__vector_base.4503" }
%"class.std::__1::__vector_base.4503" = type { %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::__compressed_pair.4513" }
%"class.std::__1::unique_ptr.4504" = type { %"class.std::__1::__compressed_pair.4505" }
%"class.std::__1::__compressed_pair.4505" = type { %"struct.std::__1::__compressed_pair_elem.4506" }
%"struct.std::__1::__compressed_pair_elem.4506" = type { %"class.blink::protocol::CSS::PlatformFontUsage"* }
%"class.blink::protocol::CSS::PlatformFontUsage" = type { %"class.crdtp::ProtocolObject.4507", %"class.WTF::String", i8, double }
%"class.crdtp::ProtocolObject.4507" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4513" = type { %"struct.std::__1::__compressed_pair_elem.4514" }
%"struct.std::__1::__compressed_pair_elem.4514" = type { %"class.std::__1::unique_ptr.4504"* }
%"class.blink::NodeRareData" = type { %"class.blink::NodeData", %"class.blink::Member.5055", %"class.blink::Member.5057", %"class.blink::Member.5059", %"class.blink::Member.5078", %"class.blink::Member.5080" }
%"class.blink::Member.5055" = type { %"class.blink::MemberBase.5056" }
%"class.blink::MemberBase.5056" = type { %"class.blink::NodeRenderingData"* }
%"class.blink::NodeRenderingData" = type { %"class.blink::NodeData", %"class.blink::LayoutObject"*, %class.scoped_refptr }
%"class.blink::Member.5057" = type { %"class.blink::MemberBase.5058" }
%"class.blink::MemberBase.5058" = type { %"class.blink::NodeListsNodeData"* }
%"class.blink::NodeListsNodeData" = type opaque
%"class.blink::Member.5059" = type { %"class.blink::MemberBase.5060" }
%"class.blink::MemberBase.5060" = type { %"class.blink::NodeMutationObserverData"* }
%"class.blink::NodeMutationObserverData" = type { %"class.blink::HeapVector.5063", %"class.blink::HeapHashSet.5072" }
%"class.blink::HeapVector.5063" = type { %"class.WTF::Vector.5066" }
%"class.WTF::Vector.5066" = type { %"class.WTF::VectorBuffer.5067" }
%"class.WTF::VectorBuffer.5067" = type { %"class.WTF::VectorBufferBase.5068" }
%"class.WTF::VectorBufferBase.5068" = type { %"class.blink::Member.5069"*, i32, i32 }
%"class.blink::Member.5069" = type { %"class.blink::MemberBase.5070" }
%"class.blink::MemberBase.5070" = type { %"class.blink::MutationObserverRegistration"* }
%"class.blink::MutationObserverRegistration" = type opaque
%"class.blink::HeapHashSet.5072" = type { %"class.WTF::HashSet.5075" }
%"class.WTF::HashSet.5075" = type { %"class.WTF::HashTable.5076" }
%"class.WTF::HashTable.5076" = type <{ %"class.blink::Member.5069"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.5078" = type { %"class.blink::MemberBase.5079" }
%"class.blink::MemberBase.5079" = type { %"class.blink::FlatTreeNodeData"* }
%"class.blink::FlatTreeNodeData" = type opaque
%"class.blink::Member.5080" = type { %"class.blink::MemberBase.5081" }
%"class.blink::MemberBase.5081" = type { %"class.blink::HeapHashSet.5082"* }
%"class.blink::HeapHashSet.5082" = type opaque
%"class.std::__1::unique_ptr.4527" = type { %"class.std::__1::__compressed_pair.4528" }
%"class.std::__1::__compressed_pair.4528" = type { %"struct.std::__1::__compressed_pair_elem.4529" }
%"struct.std::__1::__compressed_pair_elem.4529" = type { %"class.std::__1::vector.4530"* }
%"class.std::__1::vector.4530" = type { %"class.std::__1::__vector_base.4531" }
%"class.std::__1::__vector_base.4531" = type { %"class.WTF::String"*, %"class.WTF::String"*, %"class.std::__1::__compressed_pair.4532" }
%"class.std::__1::__compressed_pair.4532" = type { %"struct.std::__1::__compressed_pair_elem.4533" }
%"struct.std::__1::__compressed_pair_elem.4533" = type { %"class.WTF::String"* }
%"class.blink::DummyExceptionStateForTesting" = type { %"class.blink::ExceptionState" }
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.4540" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.4540" = type { %"class.v8::TracedReference.4541" }
%"class.v8::TracedReference.4541" = type { %"class.v8::BasicTracedReference.4542" }
%"class.v8::BasicTracedReference.4542" = type { %"class.v8::TracedReferenceBase" }
%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction" = type { %"class.blink::InspectorCSSAgent::StyleSheetAction", %"class.blink::Member.3972", %"class.WTF::String", %"class.WTF::String" }
%"class.blink::InspectorCSSAgent::StyleSheetAction" = type { %"class.blink::InspectorHistory::Action" }
%"class.blink::InspectorHistory::Action" = type { i32 (...)**, %"class.WTF::String" }
%"class.v8::internal::Isolate" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::InspectorCSSAgent::ModifyRuleAction" = type { %"class.blink::InspectorCSSAgent::StyleSheetAction", %"class.blink::Member.3916", i32, %"class.WTF::String", %"class.WTF::String", %"class.blink::SourceRange", %"class.blink::SourceRange", %"class.blink::Member.644" }
%"class.blink::CSSDefaultStyleSheets" = type { %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.459", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.blink::Member.391", %"class.std::__1::unique_ptr.4608" }
%"class.std::__1::unique_ptr.4608" = type { %"class.std::__1::__compressed_pair.4609" }
%"class.std::__1::__compressed_pair.4609" = type { %"struct.std::__1::__compressed_pair_elem.4610" }
%"struct.std::__1::__compressed_pair_elem.4610" = type { %"class.blink::CSSDefaultStyleSheets::UAStyleSheetLoader"* }
%"class.blink::CSSDefaultStyleSheets::UAStyleSheetLoader" = type { i32 (...)** }
%"class.std::__1::vector.4548" = type { %"class.std::__1::__vector_base.4549" }
%"class.std::__1::__vector_base.4549" = type { %"class.std::__1::unique_ptr.4550"*, %"class.std::__1::unique_ptr.4550"*, %"class.std::__1::__compressed_pair.4559" }
%"class.std::__1::unique_ptr.4550" = type { %"class.std::__1::__compressed_pair.4551" }
%"class.std::__1::__compressed_pair.4551" = type { %"struct.std::__1::__compressed_pair_elem.4552" }
%"struct.std::__1::__compressed_pair_elem.4552" = type { %"class.blink::protocol::CSS::StyleDeclarationEdit"* }
%"class.blink::protocol::CSS::StyleDeclarationEdit" = type { %"class.crdtp::ProtocolObject.4553", %"class.WTF::String", %"class.std::__1::unique_ptr.4154", %"class.WTF::String" }
%"class.crdtp::ProtocolObject.4553" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4559" = type { %"struct.std::__1::__compressed_pair_elem.4560" }
%"struct.std::__1::__compressed_pair_elem.4560" = type { %"class.std::__1::unique_ptr.4550"* }
%"class.blink::HeapVector.4567" = type { %"class.WTF::Vector.4570" }
%"class.WTF::Vector.4570" = type { %"class.WTF::VectorBuffer.4571" }
%"class.WTF::VectorBuffer.4571" = type { %"class.WTF::VectorBufferBase.4572" }
%"class.WTF::VectorBufferBase.4572" = type { %"class.blink::Member.4573"*, i32, i32 }
%"class.blink::Member.4573" = type { %"class.blink::MemberBase.4574" }
%"class.blink::MemberBase.4574" = type { %"class.blink::InspectorCSSAgent::StyleSheetAction"* }
%"class.blink::InspectorCSSAgent::SetElementStyleAction" = type { %"class.blink::InspectorCSSAgent::StyleSheetAction", %"class.blink::Member.3963", %"class.WTF::String", %"class.WTF::String" }
%"class.std::__1::unique_ptr.4576" = type { %"class.std::__1::__compressed_pair.4577" }
%"class.std::__1::__compressed_pair.4577" = type { %"struct.std::__1::__compressed_pair_elem.4578" }
%"struct.std::__1::__compressed_pair_elem.4578" = type { %"class.std::__1::vector.4579"* }
%"class.std::__1::vector.4579" = type { %"class.std::__1::__vector_base.4580" }
%"class.std::__1::__vector_base.4580" = type { %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::__compressed_pair.4581" }
%"class.std::__1::__compressed_pair.4581" = type { %"struct.std::__1::__compressed_pair_elem.4582" }
%"struct.std::__1::__compressed_pair_elem.4582" = type { %"class.std::__1::unique_ptr.4224"* }
%"class.blink::InspectorCSSAgent::AddRuleAction" = type { %"class.blink::InspectorCSSAgent::StyleSheetAction", %"class.blink::Member.3916", %"class.blink::Member.4589", %"class.WTF::String", %"class.WTF::String", %"class.blink::SourceRange", %"class.blink::SourceRange" }
%"class.blink::HeapVector.4655" = type { %"class.WTF::Vector.4658" }
%"class.WTF::Vector.4658" = type { %"class.WTF::VectorBuffer.4659" }
%"class.WTF::VectorBuffer.4659" = type { %"class.WTF::VectorBufferBase.4660" }
%"class.WTF::VectorBufferBase.4660" = type { %"class.blink::Member.3969"*, i32, i32 }
%"class.blink::CSSPropertyName" = type { i32, %"class.WTF::AtomicString" }
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::StringAppend.4678" = type { %"class.WTF::StringAppend.4679", i8* }
%"class.WTF::StringAppend.4679" = type { %"class.WTF::StringAppend.4680", %"class.WTF::String" }
%"class.WTF::StringAppend.4680" = type { %"class.WTF::String", i8* }
%"class.WTF::StringAppend.4673" = type { %"class.WTF::StringAppend.4674", %"class.WTF::String" }
%"class.WTF::StringAppend.4674" = type { %"class.WTF::StringAppend.4675", i8* }
%"class.WTF::StringAppend.4675" = type { i8*, %"class.WTF::String" }
%"class.WTF::StringAppend.4672" = type { %"class.WTF::StringAppend.4673", i8* }
%"class.absl::optional.4662" = type { %"class.absl::optional_internal::optional_data.4663" }
%"class.absl::optional_internal::optional_data.4663" = type { %"class.absl::optional_internal::optional_data_base.4664" }
%"class.absl::optional_internal::optional_data_base.4664" = type { %"class.absl::optional_internal::optional_data_dtor_base.4665" }
%"class.absl::optional_internal::optional_data_dtor_base.4665" = type { i8, %union.anon.4666 }
%union.anon.4666 = type { %"class.blink::CSSPropertyName" }
%"class.WTF::Vector.4667" = type { %"class.WTF::VectorBuffer.4668" }
%"class.WTF::VectorBuffer.4668" = type { %"class.WTF::VectorBufferBase.4669", [64 x i8] }
%"class.WTF::VectorBufferBase.4669" = type { %"class.blink::StylePropertyShorthand"*, i32, i32 }
%"class.blink::StylePropertyShorthand" = type { %"class.blink::CSSProperty"**, i32, i32 }
%"class.WTF::StringAppend" = type { %"class.WTF::StringAppend.4672", i8* }
%"class.WTF::StringAppend.4676" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.WTF::StringAppend.4677" = type { %"class.WTF::StringAppend.4678", i8* }
%"class.WTF::StringTypeAdapter.5127" = type <{ i8*, i32, [4 x i8] }>
%"class.WTF::StringTypeAdapter.5129" = type { %"class.WTF::StringTypeAdapter.5130" }
%"class.WTF::StringTypeAdapter.5130" = type { %"class.WTF::StringView" }
%"class.crdtp::detail::PtrMaybe.4681" = type { %"class.std::__1::unique_ptr.4527" }
%"class.WTF::Vector.4682" = type { %"class.WTF::VectorBuffer.4683" }
%"class.WTF::VectorBuffer.4683" = type { %"class.WTF::VectorBufferBase.4684" }
%"class.WTF::VectorBufferBase.4684" = type { %"class.blink::Color"*, i32, i32 }
%"class.blink::InspectorContrast" = type <{ %"class.cc::RTree", %"class.blink::HeapVector.4694", %"class.blink::Document"*, i8, [7 x i8] }>
%"class.cc::RTree" = type <{ i64, %"struct.cc::RTree<blink::Member<blink::Node> >::Branch", %"class.std::__1::vector.4687", i8, [7 x i8] }>
%"struct.cc::RTree<blink::Member<blink::Node> >::Branch" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"class.blink::Member.318", %"class.gfx::Rect" }
%"struct.cc::RTree<blink::Member<blink::Node> >::Node" = type { i16, i16, [11 x %"struct.cc::RTree<blink::Member<blink::Node> >::Branch"] }
%"class.std::__1::vector.4687" = type { %"class.std::__1::__vector_base.4688" }
%"class.std::__1::__vector_base.4688" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"class.std::__1::__compressed_pair.4689" }
%"class.std::__1::__compressed_pair.4689" = type { %"struct.std::__1::__compressed_pair_elem.4690" }
%"struct.std::__1::__compressed_pair_elem.4690" = type { %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* }
%"class.blink::HeapVector.4694" = type { %"class.WTF::Vector.4697" }
%"class.WTF::Vector.4697" = type { %"class.WTF::VectorBuffer.4698" }
%"class.WTF::VectorBuffer.4698" = type { %"class.WTF::VectorBufferBase.4699" }
%"class.WTF::VectorBufferBase.4699" = type { %"class.blink::Member.318"*, i32, i32 }
%"class.std::__1::unique_ptr.4701" = type { %"class.std::__1::__compressed_pair.4702" }
%"class.std::__1::__compressed_pair.4702" = type { %"struct.std::__1::__compressed_pair_elem.4703" }
%"struct.std::__1::__compressed_pair_elem.4703" = type { %"class.std::__1::vector.4704"* }
%"class.std::__1::vector.4704" = type { %"class.std::__1::__vector_base.4705" }
%"class.std::__1::__vector_base.4705" = type { %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::__compressed_pair.4715" }
%"class.std::__1::unique_ptr.4706" = type { %"class.std::__1::__compressed_pair.4707" }
%"class.std::__1::__compressed_pair.4707" = type { %"struct.std::__1::__compressed_pair_elem.4708" }
%"struct.std::__1::__compressed_pair_elem.4708" = type { %"class.blink::protocol::CSS::RuleUsage"* }
%"class.blink::protocol::CSS::RuleUsage" = type <{ %"class.crdtp::ProtocolObject.4709", %"class.WTF::String", double, double, i8, [7 x i8] }>
%"class.crdtp::ProtocolObject.4709" = type { %"class.crdtp::Serializable" }
%"class.std::__1::__compressed_pair.4715" = type { %"struct.std::__1::__compressed_pair_elem.4716" }
%"struct.std::__1::__compressed_pair_elem.4716" = type { %"class.std::__1::unique_ptr.4706"* }
%"class.blink::HeapHashMap.4723" = type { %"class.WTF::HashMap.4726" }
%"class.WTF::HashMap.4726" = type { %"class.WTF::HashTable.4727" }
%"class.WTF::HashTable.4727" = type <{ %"struct.WTF::KeyValuePair.4729"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.4729" = type { %"class.blink::Member.3984", %"class.blink::Member.4589" }
%"class.blink::CSSPropertyRef" = type { i32, %"class.blink::CustomProperty" }
%"class.blink::CustomProperty" = type { %"class.blink::Variable.base", %"class.WTF::AtomicString", %"class.blink::Member.4739" }
%"class.blink::Variable.base" = type { %"class.blink::Longhand.base" }
%"class.blink::Longhand.base" = type { %"class.blink::CSSProperty.base" }
%"class.blink::CSSProperty.base" = type <{ %"class.blink::CSSUnresolvedProperty", i32, i32, i8 }>
%"class.blink::Member.4739" = type { %"class.blink::MemberBase.4740" }
%"class.blink::MemberBase.4740" = type { %"class.blink::PropertyRegistration"* }
%"class.blink::PropertyRegistration" = type <{ %"class.blink::CSSSyntaxDefinition", i8, [7 x i8], %"class.blink::Member.596", %class.scoped_refptr.4748, %"class.WTF::Vector.4758", i8, [7 x i8] }>
%"class.blink::CSSSyntaxDefinition" = type { %"class.WTF::Vector.4743" }
%"class.WTF::Vector.4743" = type { %"class.WTF::VectorBuffer.4744" }
%"class.WTF::VectorBuffer.4744" = type { %"class.WTF::VectorBufferBase.4745" }
%"class.WTF::VectorBufferBase.4745" = type { %"class.blink::CSSSyntaxComponent"*, i32, i32 }
%"class.blink::CSSSyntaxComponent" = type <{ i32, [4 x i8], %"class.WTF::String", i32, [4 x i8] }>
%"class.WTF::Vector.4758" = type { %"class.WTF::VectorBuffer.4759" }
%"class.WTF::VectorBuffer.4759" = type { %"class.WTF::VectorBufferBase.4760" }
%"class.WTF::VectorBufferBase.4760" = type { %"class.std::__1::unique_ptr.4761"*, i32, i32 }
%"class.std::__1::unique_ptr.4761" = type opaque
%"class.blink::probe::RecalculateStyle" = type { %"class.blink::probe::ProbeBase", %"class.blink::CoreProbeSink"*, %"class.blink::Document"* }
%"class.blink::probe::ProbeBase" = type { %"class.base::TimeTicks", %"class.base::TimeTicks" }
%"class.crdtp::UberDispatcher" = type { i32 (...)**, %"class.crdtp::FrontendChannel"*, %"class.std::__1::vector.4767", %"class.std::__1::vector.4775" }
%"class.std::__1::vector.4767" = type { %"class.std::__1::__vector_base.4768" }
%"class.std::__1::__vector_base.4768" = type { %"struct.std::__1::pair.4769"*, %"struct.std::__1::pair.4769"*, %"class.std::__1::__compressed_pair.4770" }
%"struct.std::__1::pair.4769" = type opaque
%"class.std::__1::__compressed_pair.4770" = type { %"struct.std::__1::__compressed_pair_elem.4771" }
%"struct.std::__1::__compressed_pair_elem.4771" = type { %"struct.std::__1::pair.4769"* }
%"class.std::__1::vector.4775" = type { %"class.std::__1::__vector_base.4776" }
%"class.std::__1::__vector_base.4776" = type { %"struct.std::__1::pair.4777"*, %"struct.std::__1::pair.4777"*, %"class.std::__1::__compressed_pair.4778" }
%"struct.std::__1::pair.4777" = type opaque
%"class.std::__1::__compressed_pair.4778" = type { %"struct.std::__1::__compressed_pair_elem.4779" }
%"struct.std::__1::__compressed_pair_elem.4779" = type { %"struct.std::__1::pair.4777"* }
%"class.blink::HeapHashTableBacking" = type { i8 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.blink::HeapHashTableBacking.5132" = type { i8 }
%"class.blink::HeapVectorBacking" = type { i8 }
%"class.blink::HeapHashTableBacking.5185" = type { i8 }
%"class.blink::HeapHashTableBacking.5196" = type { i8 }
%"class.blink::HeapVectorBacking.5210" = type { i8 }
%"class.blink::HeapVectorBacking.5256" = type { i8 }
%"class.blink::CSSStyleSheet::InspectorMutationScope" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::HeapHashTableBacking.5278" = type { i8 }
%"class.blink::HeapHashTableBacking.5288" = type { i8 }
%"class.blink::HeapHashTableBacking.5301" = type { i8 }
%"class.blink::HeapHashTableBacking.5311" = type { i8 }
%"class.blink::HeapHashTableBacking.5320" = type { i8 }
%"class.blink::HeapVectorBacking.5359" = type { i8 }
%"class.blink::HeapHashTableBacking.5382" = type { i8 }

$_ZN5blink19InspectorAgentState5FieldD2Ev = comdat any

$_ZNK3WTF7HashMapIN5blink6MemberINS1_8DocumentEEENS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS6_EENS_10HashTraitsIS7_EEEEEENS8_IS3_EENSA_IS4_EENSA_ISD_EENS1_13HeapAllocatorEE2atERKPS3_ = comdat any

$_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_ = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_ = comdat any

$_ZN5blink29DummyExceptionStateForTestingD2Ev = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN3WTF7HashMapIijNS_7IntHashIiEENS_10HashTraitsIiEENS3_IjEENS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink10MediaQueryENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNK3WTF7HashMapIN5blink6MemberINS1_12CSSStyleRuleEEENSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS5_14default_deleteIS9_EEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSF_ISC_EENS1_13HeapAllocatorEE2atERKPS3_ = comdat any

$_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE2atEj = comdat any

$_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE = comdat any

$_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EcvS3_Ev = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev = comdat any

$_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_ = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev = comdat any

$_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_EcvS1_Ev = comdat any

$_ZNK5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE5TraceEPNS_7VisitorE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7DisposeEv = comdat any

$_ZN5blink19InspectorAgentState5FieldD0Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED2Ev = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED0Ev = comdat any

$_ZN5blink14InspectorAgent7RestoreEv = comdat any

$_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE = comdat any

$_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv = comdat any

$_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7disableEv = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED1Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED0Ev = comdat any

$_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7disableEv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_ = comdat any

$_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES4_EENS2_IPS6_bEERKT0_ = comdat any

$_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_7CSSRuleEEEiEELj0ENS3_13HeapAllocatorEE2atEj = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZN3WTF12VectorBufferIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_ = comdat any

$_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12CSSStyleRuleEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv = comdat any

$_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_ = comdat any

$_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17InspectorCSSAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv = comdat any

$_ZN5blink10TraceTraitINS_17InspectorCSSAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS3_8protocol3CSS7Backend14EnableCallbackENS5_14default_deleteISA_EEEEEJNS3_10PersistentIS4_EESD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE = comdat any

$_ZN4base8internal9BindStateIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS2_8protocol3CSS7Backend14EnableCallbackENS4_14default_deleteIS9_EEEEEJNS2_10PersistentIS3_EESC_EE7DestroyEPKNS0_13BindStateBaseE = comdat any

$_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS17FontVariationAxisENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISL_SH_SM_EERPS3_RPSD_EENS_18HashTableAddResultISN_SF_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE6ExpandEPSF_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE12ExpandBufferEjPSF_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE8RehashToEPSF_jSO_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS1_12KeyValuePairIS5_NS3_INS_11HeapHashSetINS3_INS_13CSSStyleSheetEEENS1_10MemberHashIS8_EENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENSA_IS4_EENS1_18HashMapValueTraitsINSC_IS5_EENSC_ISF_EEEESK_NS_13HeapAllocatorEEEE14AllocateObjectISP_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_8DocumentEEENS_12KeyValuePairIS6_NS4_INS3_11HeapHashSetINS4_INS3_13CSSStyleSheetEEENS_10MemberHashIS9_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENSB_IS5_EENS_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_8DocumentEEENS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS8_EENS2_10HashTraitsIS9_EEEEEEEENS2_18HashMapValueTraitsINSC_IS6_EENSC_ISF_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE5eraseEPKSF_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS20PseudoElementMatchesENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS19InheritedStyleEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNK3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS15CSSKeyframeRuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS16CSSKeyframesRuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS24CSSComputedStylePropertyENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS17PlatformFontUsageENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionC2EPNS_23InspectorStyleSheetBaseERKN3WTF6StringE = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16InspectorHistory6ActionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16InspectorHistory6ActionEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16InspectorHistory6ActionEE7GetNameEPKv = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionD2Ev = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionD0Ev = comdat any

$_ZNK5blink17InspectorCSSAgent23SetStyleSheetTextAction5TraceEPNS_7VisitorE = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction7MergeIdEv = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction5MergeEPNS_16InspectorHistory6ActionE = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction7PerformERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction4UndoERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction4RedoERNS_14ExceptionStateE = comdat any

$_ZN5blink16InspectorHistory6Action6IsNoopEv = comdat any

$_ZN5blink17InspectorCSSAgent16StyleSheetAction19TakeSerializedStyleEv = comdat any

$_ZN5blink17InspectorCSSAgent16StyleSheetActionD0Ev = comdat any

$_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleActionC2ENS1_4TypeEPNS_19InspectorStyleSheetERKNS_11SourceRangeERKN3WTF6StringE = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleActionD2Ev = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleActionD0Ev = comdat any

$_ZNK5blink17InspectorCSSAgent16ModifyRuleAction5TraceEPNS_7VisitorE = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleAction7MergeIdEv = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleAction5MergeEPNS_16InspectorHistory6ActionE = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleAction7PerformERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleAction4UndoERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleAction4RedoERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleAction6IsNoopEv = comdat any

$_ZN5blink17InspectorCSSAgent16ModifyRuleAction19TakeSerializedStyleEv = comdat any

$_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleActionC2EPNS_33InspectorStyleSheetForInlineStyleERKN3WTF6StringE = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleActionD2Ev = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleActionD0Ev = comdat any

$_ZNK5blink17InspectorCSSAgent21SetElementStyleAction5TraceEPNS_7VisitorE = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleAction7MergeIdEv = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleAction5MergeEPNS_16InspectorHistory6ActionE = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleAction7PerformERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleAction4UndoERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleAction4RedoERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent21SetElementStyleAction19TakeSerializedStyleEv = comdat any

$_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS3_21SetElementStyleActionEEEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_17InspectorCSSAgent16StyleSheetActionEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS3_16ModifyRuleActionEEEvOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS8CSSStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN5blink17InspectorCSSAgent13AddRuleActionC2EPNS_19InspectorStyleSheetERKN3WTF6StringERKNS_11SourceRangeE = comdat any

$_ZN5blink17InspectorCSSAgent13AddRuleActionD2Ev = comdat any

$_ZN5blink17InspectorCSSAgent13AddRuleActionD0Ev = comdat any

$_ZNK5blink17InspectorCSSAgent13AddRuleAction5TraceEPNS_7VisitorE = comdat any

$_ZN5blink17InspectorCSSAgent13AddRuleAction7PerformERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent13AddRuleAction4UndoERNS_14ExceptionStateE = comdat any

$_ZN5blink17InspectorCSSAgent13AddRuleAction4RedoERNS_14ExceptionStateE = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERiRjEENS_18HashTableAddResultISC_S2_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_ = comdat any

$_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERijEENS_18HashTableAddResultISC_S2_EEOT0_OT1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_19MediaQueryEvaluatorEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_19MediaQueryEvaluatorEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_19MediaQueryEvaluatorEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_19MediaQueryEvaluatorEE7GetNameEPKv = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS20MediaQueryExpressionENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS10MediaQueryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS8CSSMediaENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_23InspectorStyleSheetBaseEEEPhm = comdat any

$_ZN5blink8internal14FinalizerTraitINS_23InspectorStyleSheetBaseEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_23InspectorStyleSheetBaseEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPNS1_7ElementERPS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_NS3_INS_33InspectorStyleSheetForInlineStyleEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_4NodeEEENS_12KeyValuePairIS6_NS4_INS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_4NodeEEENS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSB_IS8_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_19InspectorStyleSheetEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_19InspectorStyleSheetEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS3_RPS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS1_12KeyValuePairIS5_NS3_INS_19InspectorStyleSheetEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_13CSSStyleSheetEEENS_12KeyValuePairIS6_NS4_INS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_13CSSStyleSheetEEENS4_INS_19InspectorStyleSheetEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSB_IS8_EEEEEEvPT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EERPS3_SD_EENS_18HashTableAddResultISO_SE_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE6ExpandEPSE_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE12ExpandBufferEjPSE_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE8RehashToEPSE_jSP_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS1_12KeyValuePairIS5_NSt3__110unique_ptrINS1_6VectorIjLj0ENS1_18PartitionAllocatorEEENS7_14default_deleteISB_EEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSK_ISE_EEEESL_NS_13HeapAllocatorEEEE14AllocateObjectISQ_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS3_12KeyValuePairIS7_NSt3__110unique_ptrINS3_6VectorIjLj0ENS3_18PartitionAllocatorEEENS9_14default_deleteISD_EEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSM_ISG_EEEESN_NS_13HeapAllocatorEEEEEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE16LookupForWritingERKS4_ = comdat any

$_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_ = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS9RuleMatchENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_14InspectorStyleEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_14InspectorStyleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_14InspectorStyleEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_ = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj = comdat any

$_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj = comdat any

$_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19CSSStyleDeclarationEEEEEmm = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm = comdat any

$_ZN5blink17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_19CSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF6VectorIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv = comdat any

$_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_ = comdat any

$_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_EC2ES6_S3_ = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh = comdat any

$_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs = comdat any

$_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_21StyleRuleUsageTrackerEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_21StyleRuleUsageTrackerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_21StyleRuleUsageTrackerEE7GetNameEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EEPS3_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_ = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm = comdat any

$_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS1_12KeyValuePairIS6_NS3_INS_12CSSStyleRuleEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm = comdat any

$_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv = comdat any

$_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv = comdat any

$_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberIKNS3_9StyleRuleEEENS_12KeyValuePairIS7_NS4_INS3_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS5_ = comdat any

$_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberIKNS_9StyleRuleEEENS4_INS_12CSSStyleRuleEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSC_IS9_EEEEEEvPT_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS9RuleUsageENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E5clearEv = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E4findERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6insertINS_17HashMapTranslatorISD_S4_S7_EERS1_RS8_EENS_18HashTableAddResultISE_S9_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E8RehashToEPS9_jSF_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E16LookupForWritingERKS1_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEEaSERKS7_ = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj = comdat any

$_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_ = comdat any

$_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi = comdat any

$_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_26InspectorResourceContainerEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZTVN5blink19InspectorAgentState5FieldE = comdat any

$_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink17InspectorCSSAgent23SetStyleSheetTextActionE = comdat any

$_ZTVN5blink17InspectorCSSAgent16StyleSheetActionE = comdat any

$_ZTVN5blink17InspectorCSSAgent16ModifyRuleActionE = comdat any

$_ZTVN5blink17InspectorCSSAgent21SetElementStyleActionE = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZTVN5blink17InspectorCSSAgent13AddRuleActionE = comdat any

$_ZZN5blink11GCInfoTraitINS_19MediaQueryEvaluatorEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_19MediaQueryEvaluatorEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_23InspectorStyleSheetBaseEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_23InspectorStyleSheetBaseEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_21StyleRuleUsageTrackerEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_21StyleRuleUsageTrackerEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink17InspectorCSSAgentE = hidden unnamed_addr constant { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] } { [39 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZN5blink17InspectorCSSAgentD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZN5blink17InspectorCSSAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZN5blink17InspectorCSSAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink17InspectorCSSAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZN5blink17InspectorCSSAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*)* @_ZN5blink17InspectorCSSAgent7disableEv to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)* @_ZN5blink17InspectorCSSAgent6enableENSt3__110unique_ptrINS_8protocol3CSS7Backend14EnableCallbackENS1_14default_deleteIS6_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"*, %"class.crdtp::detail::PtrMaybe.4223"*, %"class.crdtp::detail::PtrMaybe.4247"*, %"class.crdtp::detail::PtrMaybe.4302"*, %"class.crdtp::detail::PtrMaybe.4325"*, %"class.crdtp::detail::PtrMaybe.4348"*)* @_ZN5blink17InspectorCSSAgent23getMatchedStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_PNS3_INSt3__16vectorINS9_10unique_ptrINS5_9RuleMatchENS9_14default_deleteISC_EEEENS9_9allocatorISF_EEEEEEPNS3_INSA_INSB_INS5_20PseudoElementMatchesENSD_ISL_EEEENSG_ISN_EEEEEEPNS3_INSA_INSB_INS5_19InheritedStyleEntryENSD_ISS_EEEENSG_ISU_EEEEEEPNS3_INSA_INSB_INS5_16CSSKeyframesRuleENSD_ISZ_EEEENSG_IS11_EEEEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"*, %"class.crdtp::detail::PtrMaybe.4223"*)* @_ZN5blink17InspectorCSSAgent22getInlineStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::unique_ptr.4442"*)* @_ZN5blink17InspectorCSSAgent23getComputedStyleForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::unique_ptr.4499"*)* @_ZN5blink17InspectorCSSAgent23getPlatformFontsForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS17PlatformFontUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4527"*)* @_ZN5blink17InspectorCSSAgent17collectClassNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17InspectorCSSAgent17getStyleSheetTextERKN3WTF6StringEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink17InspectorCSSAgent17setStyleSheetTextERKN3WTF6StringES4_PN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4265"*)* @_ZN5blink17InspectorCSSAgent15setRuleSelectorERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_12SelectorListENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4360"*)* @_ZN5blink17InspectorCSSAgent14setKeyframeKeyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_5ValueENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4548"*, %"class.std::__1::unique_ptr.4576"*)* @_ZN5blink17InspectorCSSAgent13setStyleTextsENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS20StyleDeclarationEditENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPNS2_INS3_INS2_INS5_8CSSStyleENS7_ISF_EEEENSA_ISH_EEEENS7_ISJ_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4147"*)* @_ZN5blink17InspectorCSSAgent12setMediaTextERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_8CSSMediaENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17InspectorCSSAgent16createStyleSheetERKN3WTF6StringEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.std::__1::unique_ptr.4259"*)* @_ZN5blink17InspectorCSSAgent7addRuleERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEEPNS6_INS8_7CSSRuleENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::vector.4530"*)* @_ZN5blink17InspectorCSSAgent16forcePseudoStateEiNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4142"*)* @_ZN5blink17InspectorCSSAgent15getMediaQueriesEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS8CSSMediaENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink17InspectorCSSAgent32setEffectivePropertyValueForNodeEiRKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4681"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZN5blink17InspectorCSSAgent19getBackgroundColorsEiPN5crdtp6detail8PtrMaybeINSt3__16vectorIN3WTF6StringENS4_9allocatorIS7_EEEEEEPNS2_10ValueMaybeIS7_EESF_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*)* @_ZN5blink17InspectorCSSAgent22startRuleUsageTrackingEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"*, double*)* @_ZN5blink17InspectorCSSAgent17takeCoverageDeltaEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"*)* @_ZN5blink17InspectorCSSAgent21stopRuleUsageTrackingEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4445"*)* @_ZN5blink17InspectorCSSAgent25trackComputedStyleUpdatesENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)* @_ZN5blink17InspectorCSSAgent24takeComputedStyleUpdatesENSt3__110unique_ptrINS_8protocol3CSS7Backend32TakeComputedStyleUpdatesCallbackENS1_14default_deleteIS6_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i1)* @_ZN5blink17InspectorCSSAgent20setLocalFontsEnabledEb to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"*)* @_ZN5blink17InspectorCSSAgent14DidAddDocumentEPNS_8DocumentE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Node"*)* @_ZN5blink17InspectorCSSAgent17WillRemoveDOMNodeEPNS_4NodeE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*)* @_ZN5blink17InspectorCSSAgent16DidModifyDOMAttrEPNS_7ElementE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorStyleSheetBase"*)* @_ZN5blink17InspectorCSSAgent17StyleSheetChangedEPNS_23InspectorStyleSheetBaseE to i8*)], [29 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZThn8_N5blink17InspectorCSSAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZThn8_N5blink17InspectorCSSAgentD0Ev to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.std::__1::unique_ptr.4259"*)* @_ZThn8_N5blink17InspectorCSSAgent7addRuleERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEEPNS6_INS8_7CSSRuleENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4527"*)* @_ZThn8_N5blink17InspectorCSSAgent17collectClassNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorCSSAgent16createStyleSheetERKN3WTF6StringEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*)* @_ZThn8_N5blink17InspectorCSSAgent7disableEv to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)* @_ZThn8_N5blink17InspectorCSSAgent6enableENSt3__110unique_ptrINS_8protocol3CSS7Backend14EnableCallbackENS1_14default_deleteIS6_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::vector.4530"*)* @_ZThn8_N5blink17InspectorCSSAgent16forcePseudoStateEiNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4681"*, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink17InspectorCSSAgent19getBackgroundColorsEiPN5crdtp6detail8PtrMaybeINSt3__16vectorIN3WTF6StringENS4_9allocatorIS7_EEEEEEPNS2_10ValueMaybeIS7_EESF_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::unique_ptr.4442"*)* @_ZThn8_N5blink17InspectorCSSAgent23getComputedStyleForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"*, %"class.crdtp::detail::PtrMaybe.4223"*)* @_ZThn8_N5blink17InspectorCSSAgent22getInlineStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"*, %"class.crdtp::detail::PtrMaybe.4223"*, %"class.crdtp::detail::PtrMaybe.4247"*, %"class.crdtp::detail::PtrMaybe.4302"*, %"class.crdtp::detail::PtrMaybe.4325"*, %"class.crdtp::detail::PtrMaybe.4348"*)* @_ZThn8_N5blink17InspectorCSSAgent23getMatchedStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_PNS3_INSt3__16vectorINS9_10unique_ptrINS5_9RuleMatchENS9_14default_deleteISC_EEEENS9_9allocatorISF_EEEEEEPNS3_INSA_INSB_INS5_20PseudoElementMatchesENSD_ISL_EEEENSG_ISN_EEEEEEPNS3_INSA_INSB_INS5_19InheritedStyleEntryENSD_ISS_EEEENSG_ISU_EEEEEEPNS3_INSA_INSB_INS5_16CSSKeyframesRuleENSD_ISZ_EEEENSG_IS11_EEEEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4142"*)* @_ZThn8_N5blink17InspectorCSSAgent15getMediaQueriesEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS8CSSMediaENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::unique_ptr.4499"*)* @_ZThn8_N5blink17InspectorCSSAgent23getPlatformFontsForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS17PlatformFontUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorCSSAgent17getStyleSheetTextERKN3WTF6StringEPS2_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4445"*)* @_ZThn8_N5blink17InspectorCSSAgent25trackComputedStyleUpdatesENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)* @_ZThn8_N5blink17InspectorCSSAgent24takeComputedStyleUpdatesENSt3__110unique_ptrINS_8protocol3CSS7Backend32TakeComputedStyleUpdatesCallbackENS1_14default_deleteIS6_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i32, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZThn8_N5blink17InspectorCSSAgent32setEffectivePropertyValueForNodeEiRKN3WTF6StringES4_ to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4360"*)* @_ZThn8_N5blink17InspectorCSSAgent14setKeyframeKeyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_5ValueENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4147"*)* @_ZThn8_N5blink17InspectorCSSAgent12setMediaTextERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_8CSSMediaENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"*, %"class.std::__1::unique_ptr.4265"*)* @_ZThn8_N5blink17InspectorCSSAgent15setRuleSelectorERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_12SelectorListENSA_ISD_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.crdtp::detail::ValueMaybe"*)* @_ZThn8_N5blink17InspectorCSSAgent17setStyleSheetTextERKN3WTF6StringES4_PN5crdtp6detail10ValueMaybeIS2_EE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4548"*, %"class.std::__1::unique_ptr.4576"*)* @_ZThn8_N5blink17InspectorCSSAgent13setStyleTextsENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS20StyleDeclarationEditENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPNS2_INS3_INS2_INS5_8CSSStyleENS7_ISF_EEEENSA_ISH_EEEENS7_ISJ_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*)* @_ZThn8_N5blink17InspectorCSSAgent22startRuleUsageTrackingEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"*)* @_ZThn8_N5blink17InspectorCSSAgent21stopRuleUsageTrackingEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"*, double*)* @_ZThn8_N5blink17InspectorCSSAgent17takeCoverageDeltaEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPd to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorCSSAgent"*, i1)* @_ZThn8_N5blink17InspectorCSSAgent20setLocalFontsEnabledEb to i8*)], [8 x i8*] [i8* inttoptr (i64 -56 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Visitor"*)* @_ZThn56_NK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZThn56_N5blink17InspectorCSSAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZThn56_N5blink17InspectorCSSAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"*)* @_ZThn56_N5blink17InspectorCSSAgent14DidAddDocumentEPNS_8DocumentE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Node"*)* @_ZThn56_N5blink17InspectorCSSAgent17WillRemoveDOMNodeEPNS_4NodeE to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*)* @_ZThn56_N5blink17InspectorCSSAgent16DidModifyDOMAttrEPNS_7ElementE to i8*)], [5 x i8*] [i8* inttoptr (i64 -64 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZThn64_N5blink17InspectorCSSAgentD1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*)* @_ZThn64_N5blink17InspectorCSSAgentD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorStyleSheetBase"*)* @_ZThn64_N5blink17InspectorCSSAgent17StyleSheetChangedEPNS_23InspectorStyleSheetBaseE to i8*)] }, align 8
@.str = private unnamed_addr constant [37 x i8] c"DOM agent needs to be enabled first.\00", align 1
@.str.1 = private unnamed_addr constant [29 x i8] c"Pseudo element has no parent\00", align 1
@.str.2 = private unnamed_addr constant [23 x i8] c"Document is not active\00", align 1
@_ZN3WTF11g_null_atomE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@.str.3 = private unnamed_addr constant [29 x i8] c"Element is not a style sheet\00", align 1
@.str.4 = private unnamed_addr constant [37 x i8] c"Node does not have an owner document\00", align 1
@.str.5 = private unnamed_addr constant [46 x i8] c"Failed to get inspector style sheet for rule.\00", align 1
@.str.6 = private unnamed_addr constant [26 x i8] c"Edits should not be empty\00", align 1
@.str.7 = private unnamed_addr constant [42 x i8] c"StyleSheet not found for edit #%zu of %zu\00", align 1
@.str.8 = private unnamed_addr constant [27 x i8] c"Failed applying edit #%d: \00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"Frame not found\00", align 1
@.str.10 = private unnamed_addr constant [31 x i8] c"Frame does not have a document\00", align 1
@.str.11 = private unnamed_addr constant [27 x i8] c"No target stylesheet found\00", align 1
@_ZN5blink19style_change_reason10kInspectorE = external constant [0 x i8], align 1
@_ZN5blink8protocol3CSS8CSSMedia10SourceEnum11InlineSheetE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3CSS8CSSMedia10SourceEnum9MediaRuleE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3CSS8CSSMedia10SourceEnum10ImportRuleE = external local_unnamed_addr global i8*, align 8
@_ZN5blink8protocol3CSS8CSSMedia10SourceEnum11LinkedSheetE = external local_unnamed_addr global i8*, align 8
@.str.12 = private unnamed_addr constant [1 x i8] zeroinitializer, align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"CSS agent was not enabled\00", align 1
@.str.14 = private unnamed_addr constant [35 x i8] c"No style sheet with given id found\00", align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE = external constant [0 x i8], align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum9InspectorE = external constant [0 x i8], align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE = external constant [0 x i8], align 1
@_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE = external constant [0 x i8], align 1
@_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE = internal unnamed_addr global i32 0, align 4
@.str.15 = private unnamed_addr constant [10 x i8] c"important\00", align 1
@.str.16 = private unnamed_addr constant [19 x i8] c"Elements is pseudo\00", align 1
@.str.17 = private unnamed_addr constant [45 x i8] c"Can't edit a node from a non-active document\00", align 1
@.str.18 = private unnamed_addr constant [22 x i8] c"Invalid property name\00", align 1
@.str.19 = private unnamed_addr constant [27 x i8] c"Can't find a style to edit\00", align 1
@.str.20 = private unnamed_addr constant [28 x i8] c"Can't find a source to edit\00", align 1
@.str.21 = private unnamed_addr constant [2 x i8] c"\0A\00", align 1
@.str.22 = private unnamed_addr constant [3 x i8] c": \00", align 1
@.str.23 = private unnamed_addr constant [12 x i8] c" !important\00", align 1
@.str.24 = private unnamed_addr constant [2 x i8] c";\00", align 1
@.str.25 = private unnamed_addr constant [39 x i8] c"CSS rule usage tracking is not enabled\00", align 1
@.str.26 = private unnamed_addr constant [48 x i8] c"No computed styles are being tracked right now.\00", align 1
@.str.27 = private unnamed_addr constant [46 x i8] c"A previous request has not been resolved yet.\00", align 1
@_ZTVN5blink19InspectorAgentState5FieldE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE = linkonce_odr hidden unnamed_addr constant { [11 x i8*], [29 x i8*] } { [11 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*, %"class.blink::Visitor"*)* @_ZNK5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent7RestoreEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*)* @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE to i8*), i8* bitcast (void (%"class.blink::InspectorAgent"*)* @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7DisposeEv to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)* @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7disableEv to i8*)], [29 x i8*] [i8* inttoptr (i64 -8 to i8*), i8* null, i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED1Ev to i8*), i8* bitcast (void (%"class.blink::InspectorBaseAgent.3255"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED0Ev to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)* @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7disableEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, comdat, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@_ZTVN5blink8protocol3CSS17FontVariationAxisE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS8FontFaceE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.28 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/wtf/hash_table.h\00", align 1
@.str.29 = private unnamed_addr constant [39 x i8] c"!static_cast<int>( new_capacity >> 31)\00", align 1
@.str.30 = private unnamed_addr constant [33 x i8] c"Allocator::IsAllocationAllowed()\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@.str.31 = private unnamed_addr constant [18 x i8] c"num_elements > 0u\00", align 1
@.str.32 = private unnamed_addr constant [97 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_hash_table_backing.h\00", align 1
@.str.33 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.34 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.35 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_13CSSStyleSheetEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [361 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::CSSStyleSheet>, blink::Member<blink::CSSStyleSheet>, WTF::IdentityExtractor, WTF::MemberHash<blink::CSSStyleSheet>, WTF::HashTraits<blink::Member<blink::CSSStyleSheet> >, WTF::HashTraits<blink::Member<blink::CSSStyleSheet> >, blink::HeapAllocator> >]\00", align 1
@.str.36 = private unnamed_addr constant [23 x i8] c"new_size > table_size_\00", align 1
@_ZTVN5blink8protocol3CSS20PseudoElementMatchesE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS19InheritedStyleEntryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS5ValueE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS16CSSKeyframesRuleE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS24CSSComputedStylePropertyE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E = external local_unnamed_addr global i8, align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairIiNS_6StringEEEjEEEEPKcv = private unnamed_addr constant [113 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<std::__1::pair<int, WTF::String>, unsigned int>]\00", align 1
@.str.37 = private unnamed_addr constant [64 x i8] c"../../third_party/blink/renderer/core/css/css_global_rule_set.h\00", align 1
@.str.38 = private unnamed_addr constant [20 x i8] c"features_.IsAlive()\00", align 1
@_ZTVN5blink8protocol3CSS17PlatformFontUsageE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink29DummyExceptionStateForTestingE = external unnamed_addr constant { [9 x i8*] }, align 8
@_ZTVN5blink14ExceptionStateE = external unnamed_addr constant { [9 x i8*] }, align 8
@.str.39 = private unnamed_addr constant [47 x i8] c"range.startLine must be a non-negative integer\00", align 1
@.str.40 = private unnamed_addr constant [49 x i8] c"range.startColumn must be a non-negative integer\00", align 1
@.str.41 = private unnamed_addr constant [45 x i8] c"range.endLine must be a non-negative integer\00", align 1
@.str.42 = private unnamed_addr constant [47 x i8] c"range.endColumn must be a non-negative integer\00", align 1
@.str.43 = private unnamed_addr constant [33 x i8] c"Specified range is out of bounds\00", align 1
@.str.44 = private unnamed_addr constant [37 x i8] c"Range start must not succeed its end\00", align 1
@_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_active = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_active = internal global i64 0, align 8
@_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_hover = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_hover = internal global i64 0, align 8
@_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_focus = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_focus = internal global i64 0, align 8
@_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE14s_focusVisible = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE14s_focusVisible = internal global i64 0, align 8
@_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE13s_focusWithin = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE13s_focusWithin = internal global i64 0, align 8
@_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_target = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_target = internal global i64 0, align 8
@_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE9s_visited = internal global %"class.WTF::StaticSingleton" zeroinitializer, align 8
@_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE9s_visited = internal global i64 0, align 8
@.str.45 = private unnamed_addr constant [7 x i8] c"active\00", align 1
@.str.46 = private unnamed_addr constant [6 x i8] c"hover\00", align 1
@.str.47 = private unnamed_addr constant [6 x i8] c"focus\00", align 1
@.str.48 = private unnamed_addr constant [14 x i8] c"focus-visible\00", align 1
@.str.49 = private unnamed_addr constant [13 x i8] c"focus-within\00", align 1
@.str.50 = private unnamed_addr constant [7 x i8] c"target\00", align 1
@.str.51 = private unnamed_addr constant [8 x i8] c"visited\00", align 1
@_ZTVN5blink8protocol3CSS20MediaQueryExpressionE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS10MediaQueryE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS8CSSMediaE = external unnamed_addr constant { [5 x i8*] }, align 8
@_ZTVN5blink8protocol3CSS9RuleMatchE = external unnamed_addr constant { [5 x i8*] }, align 8
@.str.52 = private unnamed_addr constant [11 x i8] c"i < size()\00", align 1
@.str.53 = private unnamed_addr constant [55 x i8] c"../../third_party/blink/renderer/platform/wtf/vector.h\00", align 1
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@.str.54 = private unnamed_addr constant [8 x i8] c" div { \00", align 1
@.str.55 = private unnamed_addr constant [4 x i8] c"; }\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleSheetContents]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.56 = private unnamed_addr constant [27 x i8] c"total >= adapter1.length()\00", align 1
@.str.57 = private unnamed_addr constant [70 x i8] c"../../third_party/blink/renderer/platform/wtf/text/string_operators.h\00", align 1
@.str.58 = private unnamed_addr constant [27 x i8] c"total >= adapter2.length()\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZTVN5blink14CustomPropertyE = external unnamed_addr constant { [25 x i8*] }, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7CSSRuleEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [331 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::CSSRule>, blink::Member<blink::CSSRule>, WTF::IdentityExtractor, WTF::MemberHash<blink::CSSRule>, WTF::HashTraits<blink::Member<blink::CSSRule> >, WTF::HashTraits<blink::Member<blink::CSSRule> >, blink::HeapAllocator> >]\00", align 1
@.str.60 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.61 = private unnamed_addr constant [74 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap_allocator_impl.h\00", align 1
@.str.62 = private unnamed_addr constant [93 x i8] c"../../third_party/blink/renderer/platform/heap/impl/collection_support/heap_vector_backing.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12CSSStyleRuleEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [165 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleRule>, WTF::VectorTraits<blink::Member<blink::CSSStyleRule> > >]\00", align 1
@_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE = linkonce_odr hidden unnamed_addr constant { [6 x i8*] } { [6 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorAgentState::Field"*)* @_ZN5blink19InspectorAgentState5FieldD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv to i8*), i8* bitcast (void (%"class.blink::InspectorAgentState::SimpleField"*)* @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv to i8*)] }, comdat, align 8
@_ZN5blink8protocol3CSS8Metainfo10domainNameE = external constant [0 x i8], align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external global [0 x i8], align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_8DocumentEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [336 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Document>, blink::Member<blink::Document>, WTF::IdentityExtractor, WTF::MemberHash<blink::Document>, WTF::HashTraits<blink::Member<blink::Document> >, WTF::HashTraits<blink::Member<blink::Document> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_13CSSStyleSheetEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [198 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashSet<blink::Member<blink::CSSStyleSheet>, WTF::MemberHash<blink::CSSStyleSheet>, WTF::HashTraits<blink::Member<blink::CSSStyleSheet> > >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_8DocumentEEENS_12KeyValuePairIS6_NS4_INS1_11HeapHashSetINS4_INS1_13CSSStyleSheetEEENS_10MemberHashIS9_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENSB_IS5_EENS_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [743 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Document>, WTF::KeyValuePair<blink::Member<blink::Document>, blink::Member<blink::HeapHashSet<blink::Member<blink::CSSStyleSheet>, WTF::MemberHash<blink::CSSStyleSheet>, WTF::HashTraits<blink::Member<blink::CSSStyleSheet> > > > >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Document>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Document> >, WTF::HashTraits<blink::Member<blink::HeapHashSet<blink::Member<blink::CSSStyleSheet>, WTF::MemberHash<blink::CSSStyleSheet>, WTF::HashTraits<blink::Member<blink::CSSStyleSheet> > > > > >, WTF::HashTraits<blink::Member<blink::Document> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [167 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleSheet>, WTF::VectorTraits<blink::Member<blink::CSSStyleSheet> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16InspectorHistory6ActionEEEPKcv = private unnamed_addr constant [79 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorHistory::Action]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16InspectorHistory6ActionEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16InspectorHistory6ActionEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16InspectorHistory6ActionEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.63 = private unnamed_addr constant [18 x i8] c"SetStyleSheetText\00", align 1
@_ZTVN5blink17InspectorCSSAgent23SetStyleSheetTextActionE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*)* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*)* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorCSSAgent23SetStyleSheetTextAction5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action8ToStringEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*)* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction7MergeIdEv to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::InspectorHistory::Action"*)* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction5MergeEPNS_16InspectorHistory6ActionE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction7PerformERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction4UndoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction4RedoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action6IsNoopEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv to i8*), i8* bitcast (%"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)* @_ZN5blink17InspectorCSSAgent16StyleSheetAction19TakeSerializedStyleEv to i8*)] }, comdat, align 8
@_ZTVN5blink17InspectorCSSAgent16StyleSheetActionE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6ActionD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)* @_ZN5blink17InspectorCSSAgent16StyleSheetActionD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)* @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action8ToStringEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action7MergeIdEv to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action5MergeEPS1_ to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action6IsNoopEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv to i8*), i8* bitcast (%"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)* @_ZN5blink17InspectorCSSAgent16StyleSheetAction19TakeSerializedStyleEv to i8*)] }, comdat, align 8
@.str.64 = private unnamed_addr constant [21 x i8] c"SetStyleSheetText %s\00", align 1
@.str.65 = private unnamed_addr constant [17 x i8] c"ModifyRuleAction\00", align 1
@_ZTVN5blink17InspectorCSSAgent16ModifyRuleActionE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleActionD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleActionD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorCSSAgent16ModifyRuleAction5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action8ToStringEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction7MergeIdEv to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::InspectorHistory::Action"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction5MergeEPNS_16InspectorHistory6ActionE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction7PerformERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction4UndoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction4RedoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction6IsNoopEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv to i8*), i8* bitcast (%"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::ModifyRuleAction"*)* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction19TakeSerializedStyleEv to i8*)] }, comdat, align 8
@.str.66 = private unnamed_addr constant [26 x i8] c"ModifyRuleAction:%d %s:%d\00", align 1
@.str.67 = private unnamed_addr constant [22 x i8] c"SetElementStyleAction\00", align 1
@_ZTVN5blink17InspectorCSSAgent21SetElementStyleActionE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleActionD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleActionD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorCSSAgent21SetElementStyleAction5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action8ToStringEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction7MergeIdEv to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::InspectorHistory::Action"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction5MergeEPNS_16InspectorHistory6ActionE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction7PerformERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction4UndoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction4RedoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action6IsNoopEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv to i8*), i8* bitcast (%"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::SetElementStyleAction"*)* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction19TakeSerializedStyleEv to i8*)] }, comdat, align 8
@.str.68 = private unnamed_addr constant [25 x i8] c"SetElementStyleAction:%s\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEENS_12VectorTraitsIS6_EEEEEEPKcv = private unnamed_addr constant [211 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::InspectorCSSAgent::StyleSheetAction>, WTF::VectorTraits<blink::Member<blink::InspectorCSSAgent::StyleSheetAction> > >]\00", align 1
@.str.69 = private unnamed_addr constant [8 x i8] c"AddRule\00", align 1
@_ZTVN5blink17InspectorCSSAgent13AddRuleActionE = linkonce_odr hidden unnamed_addr constant { [14 x i8*] } { [14 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.blink::InspectorCSSAgent::AddRuleAction"*)* @_ZN5blink17InspectorCSSAgent13AddRuleActionD2Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::AddRuleAction"*)* @_ZN5blink17InspectorCSSAgent13AddRuleActionD0Ev to i8*), i8* bitcast (void (%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::Visitor"*)* @_ZNK5blink17InspectorCSSAgent13AddRuleAction5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action8ToStringEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action7MergeIdEv to i8*), i8* bitcast (void (%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action5MergeEPS1_ to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent13AddRuleAction7PerformERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent13AddRuleAction4UndoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::ExceptionState"*)* @_ZN5blink17InspectorCSSAgent13AddRuleAction4RedoERNS_14ExceptionStateE to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action6IsNoopEv to i8*), i8* bitcast (i1 (%"class.blink::InspectorHistory::Action"*)* @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv to i8*), i8* bitcast (%"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)* @_ZN5blink17InspectorCSSAgent16StyleSheetAction19TakeSerializedStyleEv to i8*)] }, comdat, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIijEEEEPKcv = private unnamed_addr constant [84 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<int, unsigned int>]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19MediaQueryEvaluatorEEEPKcv = private unnamed_addr constant [74 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::MediaQueryEvaluator]\00", align 1
@_ZZN5blink11GCInfoTraitINS_19MediaQueryEvaluatorEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_19MediaQueryEvaluatorEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_19MediaQueryEvaluatorEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_19MediaQueryEvaluatorEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_19MediaQueryEvaluatorEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23InspectorStyleSheetBaseEEEPKcv = private unnamed_addr constant [78 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorStyleSheetBase]\00", align 1
@_ZZN5blink11GCInfoTraitINS_23InspectorStyleSheetBaseEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_23InspectorStyleSheetBaseEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_23InspectorStyleSheetBaseEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_23InspectorStyleSheetBaseEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [426 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::InspectorStyleSheetForInlineStyle> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::InspectorStyleSheetForInlineStyle> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_NS4_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [501 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::Node>, WTF::KeyValuePair<blink::Member<blink::Node>, blink::Member<blink::InspectorStyleSheetForInlineStyle> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::Node>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::Node> >, WTF::HashTraits<blink::Member<blink::InspectorStyleSheetForInlineStyle> > >, WTF::HashTraits<blink::Member<blink::Node> >, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_19InspectorStyleSheetEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [398 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<WTF::String, WTF::KeyValuePair<WTF::String, blink::Member<blink::InspectorStyleSheet> >, WTF::KeyValuePairKeyExtractor, WTF::StringHash, WTF::HashMapValueTraits<WTF::HashTraits<WTF::String>, WTF::HashTraits<blink::Member<blink::InspectorStyleSheet> > >, WTF::HashTraits<WTF::String>, blink::HeapAllocator> >]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS6_NS4_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [518 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::CSSStyleSheet>, WTF::KeyValuePair<blink::Member<blink::CSSStyleSheet>, blink::Member<blink::InspectorStyleSheet> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::CSSStyleSheet>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::CSSStyleSheet> >, WTF::HashTraits<blink::Member<blink::InspectorStyleSheet> > >, WTF::HashTraits<blink::Member<blink::CSSStyleSheet> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv = private unnamed_addr constant [101 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::Vector<unsigned int, 0, WTF::PartitionAllocator>]\00", align 1
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS3_12KeyValuePairIS7_NSt3__110unique_ptrINS3_6VectorIjLj0ENS3_18PartitionAllocatorEEENS9_14default_deleteISD_EEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSM_ISG_EEEESN_NS_13HeapAllocatorEEEEEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS6_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSL_ISF_EEEESM_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [747 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<blink::CSSStyleRule>, WTF::KeyValuePair<blink::Member<blink::CSSStyleRule>, std::__1::unique_ptr<WTF::Vector<unsigned int, 0, WTF::PartitionAllocator>, std::__1::default_delete<WTF::Vector<unsigned int, 0, WTF::PartitionAllocator> > > >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<blink::CSSStyleRule>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<blink::CSSStyleRule> >, WTF::HashTraits<std::__1::unique_ptr<WTF::Vector<unsigned int, 0, WTF::PartitionAllocator>, std::__1::default_delete<WTF::Vector<unsigned int, 0, WTF::PartitionAllocator> > > > >, WTF::HashTraits<blink::Member<blink::CSSStyleRule> >, blink::HeapAllocator> >]\00", align 1
@.str.70 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv = private unnamed_addr constant [60 x i8] c"const char *WTF::GetStringWithTypeName() [T = unsigned int]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InspectorStyleEEEPKcv = private unnamed_addr constant [69 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::InspectorStyle]\00", align 1
@_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_14InspectorStyleEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_14InspectorStyleEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv = private unnamed_addr constant [51 x i8] c"const char *WTF::GetStringWithTypeName() [T = int]\00", align 1
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_19CSSStyleDeclarationEEENS_12VectorTraitsIS5_EEEEEEPKcv = private unnamed_addr constant [179 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapVectorBacking<blink::Member<blink::CSSStyleDeclaration>, WTF::VectorTraits<blink::Member<blink::CSSStyleDeclaration> > >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21StyleRuleUsageTrackerEEEPKcv = private unnamed_addr constant [76 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleRuleUsageTracker]\00", align 1
@_ZZN5blink11GCInfoTraitINS_21StyleRuleUsageTrackerEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_21StyleRuleUsageTrackerEE5TraceEPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_21StyleRuleUsageTrackerEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_21StyleRuleUsageTrackerEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, void (i8*)* null, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS7_NS4_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv = private unnamed_addr constant [514 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::HeapHashTableBacking<WTF::HashTable<blink::Member<const blink::StyleRule>, WTF::KeyValuePair<blink::Member<const blink::StyleRule>, blink::Member<blink::CSSStyleRule> >, WTF::KeyValuePairKeyExtractor, WTF::MemberHash<const blink::StyleRule>, WTF::HashMapValueTraits<WTF::HashTraits<blink::Member<const blink::StyleRule> >, WTF::HashTraits<blink::Member<blink::CSSStyleRule> > >, WTF::HashTraits<blink::Member<const blink::StyleRule> >, blink::HeapAllocator> >]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv = private unnamed_addr constant [59 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::String]\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_7HashSetIS2_NS_10StringHashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEEEEEEEPKcv = private unnamed_addr constant [178 x i8] c"const char *WTF::GetStringWithTypeName() [T = WTF::KeyValuePair<WTF::String, WTF::HashSet<WTF::String, WTF::StringHash, WTF::HashTraits<WTF::String>, WTF::PartitionAllocator> >]\00", align 1

@_ZN5blink17InspectorCSSAgentC1EPNS_17InspectorDOMAgentEPNS_15InspectedFramesEPNS_21InspectorNetworkAgentEPNS_30InspectorResourceContentLoaderEPNS_26InspectorResourceContainerE = hidden unnamed_addr alias void (%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContainer"*), void (%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContainer"*)* @_ZN5blink17InspectorCSSAgentC2EPNS_17InspectorDOMAgentEPNS_15InspectedFramesEPNS_21InspectorNetworkAgentEPNS_30InspectorResourceContentLoaderEPNS_26InspectorResourceContainerE
@_ZN5blink17InspectorCSSAgentD1Ev = hidden unnamed_addr alias void (%"class.blink::InspectorCSSAgent"*), void (%"class.blink::InspectorCSSAgent"*)* @_ZN5blink17InspectorCSSAgentD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleRule"* @_ZN5blink17InspectorCSSAgent14AsCSSStyleRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::CSSRule"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::CSSRule"* %0 to i32 (%"class.blink::CSSRule"*)***
  %5 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %5, i64 9
  %7 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::CSSRule"* nonnull %0) #16
  %9 = icmp eq i32 %8, 1
  %10 = bitcast %"class.blink::CSSRule"* %0 to %"class.blink::CSSStyleRule"*
  %11 = select i1 %9, %"class.blink::CSSStyleRule"* %10, %"class.blink::CSSStyleRule"* null
  br label %12

12:                                               ; preds = %1, %3
  %13 = phi %"class.blink::CSSStyleRule"* [ %11, %3 ], [ null, %1 ]
  ret %"class.blink::CSSStyleRule"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSMediaRule"* @_ZN5blink17InspectorCSSAgent14AsCSSMediaRuleEPNS_7CSSRuleE(%"class.blink::CSSRule"*) local_unnamed_addr #0 align 2 {
  %2 = icmp eq %"class.blink::CSSRule"* %0, null
  br i1 %2, label %12, label %3

3:                                                ; preds = %1
  %4 = bitcast %"class.blink::CSSRule"* %0 to i32 (%"class.blink::CSSRule"*)***
  %5 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %4, align 8
  %6 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %5, i64 9
  %7 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %6, align 8
  %8 = tail call i32 %7(%"class.blink::CSSRule"* nonnull %0) #16
  %9 = icmp eq i32 %8, 4
  %10 = bitcast %"class.blink::CSSRule"* %0 to %"class.blink::CSSMediaRule"*
  %11 = select i1 %9, %"class.blink::CSSMediaRule"* %10, %"class.blink::CSSMediaRule"* null
  br label %12

12:                                               ; preds = %1, %3
  %13 = phi %"class.blink::CSSMediaRule"* [ %11, %3 ], [ null, %1 ]
  ret %"class.blink::CSSMediaRule"* %13
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgentC2EPNS_17InspectorDOMAgentEPNS_15InspectedFramesEPNS_21InspectorNetworkAgentEPNS_30InspectorResourceContentLoaderEPNS_26InspectorResourceContainerE(%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectedFrames"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContainer"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.WTF::String", align 8
  %8 = bitcast %"class.blink::InspectorCSSAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %8, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::CoreProbeSink"* null, %"class.blink::CoreProbeSink"** %9, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 3
  %11 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = tail call i64 @strlen(i8* nonnull getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS8Metainfo10domainNameE, i64 0, i64 0)) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS8Metainfo10domainNameE, i64 0, i64 0), i64 %12) #16
  call void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"* %10, %"class.WTF::String"* nonnull dereferenceable(8) %7) #16
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %29, label %16

16:                                               ; preds = %6
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %25

23:                                               ; preds = %16
  %24 = add i32 %22, -1
  store i32 %24, i32* %21, align 4
  br label %25

25:                                               ; preds = %23, %16
  %26 = phi i32 [ %24, %23 ], [ %22, %16 ]
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %28, label %29

28:                                               ; preds = %25
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #16
  br label %29

29:                                               ; preds = %6, %25, %28
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  %30 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4
  %31 = bitcast %"class.std::__1::unique_ptr.3256"* %30 to i64*
  store i64 0, i64* %31, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %33 = bitcast %"class.blink::InspectorCSSAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %33, align 8
  %34 = bitcast i32 (...)*** %32 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %34, align 8
  %35 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.blink::InspectorDOMAgent"* %1, %"class.blink::InspectorDOMAgent"** %35, align 8
  %36 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.blink::InspectedFrames"* %2, %"class.blink::InspectedFrames"** %36, align 8
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 5, i32 0, i32 0
  store %"class.blink::InspectorNetworkAgent"* %3, %"class.blink::InspectorNetworkAgent"** %37, align 8
  %38 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 6, i32 0, i32 0
  store %"class.blink::InspectorResourceContentLoader"* %4, %"class.blink::InspectorResourceContentLoader"** %38, align 8
  %39 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::InspectorResourceContainer"* %5, %"class.blink::InspectorResourceContainer"** %39, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8
  %41 = bitcast %"class.blink::HeapHashMap.3271"* %40 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 20, i1 false) #16
  %42 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9
  %43 = bitcast %"class.blink::HeapHashMap.3278"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %43, i8 0, i64 20, i1 false) #16
  %44 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10
  %45 = bitcast %"class.blink::HeapHashMap.3285"* %44 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %45, i8 0, i64 20, i1 false) #16
  %46 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11
  %47 = bitcast %"class.blink::HeapHashMap.3292"* %46 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 20, i1 false) #16
  %48 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12
  %49 = bitcast %"class.blink::HeapHashSet.3299"* %48 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 20, i1 false) #16
  %50 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13
  %51 = bitcast %"class.blink::HeapHashMap.3305"* %50 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 20, i1 false) #16
  %52 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14
  %53 = bitcast %"class.WTF::HashMap.3312"* %52 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 20, i1 false) #16
  %54 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15
  %55 = bitcast %"class.WTF::HashMap.3312"* %54 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 20, i1 false) #16
  %56 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 16, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 18
  %58 = bitcast %"class.blink::StyleRuleUsageTracker"** %56 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 16, i1 false)
  %59 = call i32 @_ZN5blink30InspectorResourceContentLoader14CreateClientIdEv(%"class.blink::InspectorResourceContentLoader"* %4) #16
  store i32 %59, i32* %57, align 8
  %60 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20
  %61 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %60, i64 0, i32 0
  %62 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %60, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %63 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %10, %"class.blink::InspectorAgentState::Field"* %61) #16
  %64 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %63, %"class.WTF::StringImpl"** %64, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %62, align 8
  %65 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 1
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 2
  store i8 0, i8* %66, align 1
  %67 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 21
  store i8 0, i8* %67, align 8
  %68 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 23
  %69 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %68, i64 0, i32 0
  %70 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %68, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %71 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %10, %"class.blink::InspectorAgentState::Field"* %69) #16
  %72 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %71, %"class.WTF::StringImpl"** %72, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %73 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 23, i32 1
  store i8 0, i8* %73, align 8
  %74 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 23, i32 2
  store i8 0, i8* %74, align 1
  %75 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 24
  %76 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %75, i64 0, i32 0
  %77 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %75, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %78 = call %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"* %10, %"class.blink::InspectorAgentState::Field"* %76) #16
  %79 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %78, %"class.WTF::StringImpl"** %79, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState11SimpleFieldIbEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %77, align 8
  %80 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 24, i32 1
  store i8 1, i8* %80, align 8
  %81 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 24, i32 2
  store i8 1, i8* %81, align 1
  %82 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 25
  %83 = bitcast %"class.WTF::HashMap.3317"* %82 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 20, i1 false) #16
  %84 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 26
  %85 = bitcast %"class.std::__1::unique_ptr.3322"* %84 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %85, i8 0, i64 28, i1 false)
  ret void
}

declare i32 @_ZN5blink30InspectorResourceContentLoader14CreateClientIdEv(%"class.blink::InspectorResourceContentLoader"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = bitcast %"class.blink::InspectorCSSAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast i32 (...)*** %3 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 2, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }, { [39 x i8*], [29 x i8*], [8 x i8*], [5 x i8*] }* @_ZTVN5blink17InspectorCSSAgentE, i64 0, inrange i32 3, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 0
  %6 = load i32*, i32** %5, align 8
  %7 = icmp eq i32* %6, null
  br i1 %7, label %10, label %8, !prof !2

8:                                                ; preds = %1
  %9 = bitcast i32* %6 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %9) #16
  store i32* null, i32** %5, align 8
  br label %10

10:                                               ; preds = %1, %8
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %12 = load %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %11, align 8
  store %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* null, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %11, align 8
  %13 = icmp eq %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %12 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)***
  %16 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %16, i64 4
  %18 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %17, align 8
  tail call void %18(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* nonnull %12) #16
  br label %19

19:                                               ; preds = %10, %14
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 25, i32 0, i32 0
  %21 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %20, align 8
  %22 = icmp eq %"struct.WTF::KeyValuePair.3321"* %21, null
  br i1 %22, label %95, label %23, !prof !2

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 25, i32 0, i32 1
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  br i1 %26, label %93, label %27

27:                                               ; preds = %23
  %28 = zext i32 %25 to i64
  br label %29

29:                                               ; preds = %90, %27
  %30 = phi i64 [ 0, %27 ], [ %91, %90 ]
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %21, i64 %30
  %32 = bitcast %"struct.WTF::KeyValuePair.3321"* %31 to i8**
  %33 = load i8*, i8** %32, align 8
  %34 = icmp eq i8* %33, inttoptr (i64 -1 to i8*)
  br i1 %34, label %90, label %35

35:                                               ; preds = %29
  %36 = bitcast i8* %33 to %"class.WTF::StringImpl"*
  %37 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %21, i64 %30, i32 1, i32 0, i32 0
  %38 = load %"class.WTF::String"*, %"class.WTF::String"** %37, align 8
  %39 = icmp eq %"class.WTF::String"* %38, null
  br i1 %39, label %74, label %40, !prof !2

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %21, i64 %30, i32 1, i32 0, i32 1
  %42 = load i32, i32* %41, align 8
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %70, label %44

44:                                               ; preds = %40
  %45 = zext i32 %42 to i64
  br label %46

46:                                               ; preds = %67, %44
  %47 = phi i64 [ 0, %44 ], [ %68, %67 ]
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %38, i64 %47
  %49 = bitcast %"class.WTF::String"* %48 to i8**
  %50 = load i8*, i8** %49, align 8
  %51 = bitcast i8* %50 to %"class.WTF::StringImpl"*
  %52 = ptrtoint i8* %50 to i64
  switch i64 %52, label %53 [
    i64 -1, label %67
    i64 0, label %67
  ]

53:                                               ; preds = %46
  %54 = getelementptr inbounds i8, i8* %50, i64 8
  %55 = bitcast i8* %54 to i32*
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = bitcast i8* %50 to i32*
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %53
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %53
  %64 = phi i32 [ %62, %61 ], [ %60, %53 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %51) #16
  br label %67

67:                                               ; preds = %66, %63, %46, %46
  %68 = add nuw nsw i64 %47, 1
  %69 = icmp eq i64 %68, %45
  br i1 %69, label %70, label %46

70:                                               ; preds = %67, %40
  %71 = bitcast %"class.WTF::String"* %38 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %71) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %37, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %31, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  br label %74

74:                                               ; preds = %70, %35
  %75 = phi %"class.WTF::StringImpl"* [ %73, %70 ], [ %36, %35 ]
  %76 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %76, label %90, label %77

77:                                               ; preds = %74
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %79 = load atomic i32, i32* %78 monotonic, align 4
  %80 = and i32 %79, 2
  %81 = icmp eq i32 %80, 0
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  br i1 %81, label %84, label %86

84:                                               ; preds = %77
  %85 = add i32 %83, -1
  store i32 %85, i32* %82, align 4
  br label %86

86:                                               ; preds = %84, %77
  %87 = phi i32 [ %85, %84 ], [ %83, %77 ]
  %88 = icmp eq i32 %87, 0
  br i1 %88, label %89, label %90

89:                                               ; preds = %86
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #16
  br label %90

90:                                               ; preds = %89, %86, %74, %29
  %91 = add nuw nsw i64 %30, 1
  %92 = icmp eq i64 %91, %28
  br i1 %92, label %93, label %29

93:                                               ; preds = %90, %23
  %94 = bitcast %"struct.WTF::KeyValuePair.3321"* %21 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %94) #16
  store %"struct.WTF::KeyValuePair.3321"* null, %"struct.WTF::KeyValuePair.3321"** %20, align 8
  br label %95

95:                                               ; preds = %19, %93
  %96 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 24, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %96, align 8
  %97 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 24, i32 0, i32 1, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #16
  br label %113

113:                                              ; preds = %95, %109, %112
  %114 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 23, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %114, align 8
  %115 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 23, i32 0, i32 1, i32 0, i32 0
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %113, %127, %130
  %132 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %132, align 8
  %133 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 0, i32 1, i32 0, i32 0
  %134 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %133, align 8
  %135 = icmp eq %"class.WTF::StringImpl"* %134, null
  br i1 %135, label %149, label %136

136:                                              ; preds = %131
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %138 = load atomic i32, i32* %137 monotonic, align 4
  %139 = and i32 %138, 2
  %140 = icmp eq i32 %139, 0
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %134, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  br i1 %140, label %143, label %145

143:                                              ; preds = %136
  %144 = add i32 %142, -1
  store i32 %144, i32* %141, align 4
  br label %145

145:                                              ; preds = %143, %136
  %146 = phi i32 [ %144, %143 ], [ %142, %136 ]
  %147 = icmp eq i32 %146, 0
  br i1 %147, label %148, label %149

148:                                              ; preds = %145
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %134) #16
  br label %149

149:                                              ; preds = %131, %145, %148
  %150 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15, i32 0, i32 0
  %151 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %150, align 8
  %152 = icmp eq %"struct.WTF::KeyValuePair.3316"* %151, null
  br i1 %152, label %155, label %153, !prof !2

153:                                              ; preds = %149
  %154 = bitcast %"struct.WTF::KeyValuePair.3316"* %151 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %154) #16
  store %"struct.WTF::KeyValuePair.3316"* null, %"struct.WTF::KeyValuePair.3316"** %150, align 8
  br label %155

155:                                              ; preds = %149, %153
  %156 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %157 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %156, align 8
  %158 = icmp eq %"struct.WTF::KeyValuePair.3316"* %157, null
  br i1 %158, label %161, label %159, !prof !2

159:                                              ; preds = %155
  %160 = bitcast %"struct.WTF::KeyValuePair.3316"* %157 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %160) #16
  store %"struct.WTF::KeyValuePair.3316"* null, %"struct.WTF::KeyValuePair.3316"** %156, align 8
  br label %161

161:                                              ; preds = %155, %159
  %162 = bitcast %"class.blink::InspectorCSSAgent"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %162, align 8
  %163 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %164 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %163, align 8
  store %"class.blink::protocol::CSS::Frontend"* null, %"class.blink::protocol::CSS::Frontend"** %163, align 8
  %165 = icmp eq %"class.blink::protocol::CSS::Frontend"* %164, null
  br i1 %165, label %168, label %166

166:                                              ; preds = %161
  %167 = bitcast %"class.blink::protocol::CSS::Frontend"* %164 to i8*
  tail call void @_ZdlPv(i8* %167) #18
  br label %168

168:                                              ; preds = %166, %161
  %169 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %170 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %169, align 8
  %171 = icmp eq %"class.blink::InspectorAgentState::Field"** %170, null
  %172 = bitcast %"class.blink::InspectorAgentState::Field"** %170 to i8*
  br i1 %171, label %179, label %173, !prof !2

173:                                              ; preds = %168
  %174 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %175 = load i32, i32* %174, align 4
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %178, label %177, !prof !3

177:                                              ; preds = %173
  store i32 0, i32* %174, align 4
  br label %178

178:                                              ; preds = %177, %173
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %172) #16
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %169, align 8
  br label %179

179:                                              ; preds = %178, %168
  %180 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 3, i32 0, i32 0, i32 0
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %180, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %179
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #16
  br label %196

196:                                              ; preds = %179, %192, %195
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD2Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::Field", %"class.blink::InspectorAgentState::Field"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %1, %15, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgentD1Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 27, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink17InspectorCSSAgentD1Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 25
  %3 = bitcast %"class.WTF::HashMap.3317"* %2 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N5blink17InspectorCSSAgentD1Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 24, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgentD0Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgentD0Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 27, i32 0, i32 3
  %3 = bitcast i32* %2 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink17InspectorCSSAgentD0Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 25
  %3 = bitcast %"class.WTF::HashMap.3317"* %2 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N5blink17InspectorCSSAgentD0Ev(%"class.blink::InspectorCSSAgent"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 24, i32 1
  %3 = bitcast i8* %2 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgentD2Ev(%"class.blink::InspectorCSSAgent"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent7RestoreEv(%"class.blink::InspectorCSSAgent"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 2
  %3 = load i8, i8* %2, align 1, !range !4
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %6, label %5

5:                                                ; preds = %1
  tail call void @_ZN5blink17InspectorCSSAgent15CompleteEnabledEv(%"class.blink::InspectorCSSAgent"* %0)
  br label %6

6:                                                ; preds = %1, %5
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 23, i32 2
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %11, label %10

10:                                               ; preds = %6
  tail call void @_ZN5blink17InspectorCSSAgent18SetCoverageEnabledEb(%"class.blink::InspectorCSSAgent"* %0, i1 zeroext true)
  br label %11

11:                                               ; preds = %6, %10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent15CompleteEnabledEv(%"class.blink::InspectorCSSAgent"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.1298", align 8
  %3 = alloca %"class.blink::HeapVector.383", align 8
  %4 = alloca %"class.blink::HeapVector.4001", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %6 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %5, align 8
  tail call void @_ZN5blink13CoreProbeSink20AddInspectorCSSAgentEPNS_17InspectorCSSAgentE(%"class.blink::CoreProbeSink"* %6, %"class.blink::InspectorCSSAgent"* %0) #16
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 1
  tail call void @_ZN5blink17InspectorDOMAgent14AddDOMListenerEPNS0_11DOMListenerE(%"class.blink::InspectorDOMAgent"* %8, %"struct.blink::InspectorDOMAgent::DOMListener"* %9) #16
  %10 = bitcast %"class.blink::HeapVector.4001"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = bitcast %"class.blink::HeapVector.4001"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %7, align 8
  call void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.4001"* nonnull sret %4, %"class.blink::InspectorDOMAgent"* %14) #16
  %15 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %11, align 8
  %16 = load i32, i32* %12, align 4
  %17 = zext i32 %16 to i64
  %18 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %15, i64 %17
  %19 = icmp eq i32 %16, 0
  br i1 %19, label %25, label %20

20:                                               ; preds = %1
  %21 = bitcast %"class.blink::HeapVector.383"* %3 to i8*
  %22 = bitcast %"class.blink::HeapVector.1298"* %2 to i8*
  %23 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %27

25:                                               ; preds = %44, %1
  %26 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 21
  store i8 1, i8* %26, align 8
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret void

27:                                               ; preds = %20, %44
  %28 = phi %"class.blink::Member.326"* [ %15, %20 ], [ %45, %44 ]
  %29 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.blink::Document"*, %"class.blink::Document"** %29, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %21) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 16, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %22) #16
  %31 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %30, i64 0, i32 59, i32 0, i32 0
  %32 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %31, align 8
  call void @_ZN5blink11StyleEngine29ActiveStyleSheetsForInspectorEv(%"class.blink::HeapVector.1298"* nonnull sret %2, %"class.blink::StyleEngine"* %32) #16
  %33 = load %"struct.std::__1::pair.1304"*, %"struct.std::__1::pair.1304"** %23, align 8
  %34 = load i32, i32* %24, align 4
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %33, i64 %35
  %37 = icmp eq i32 %34, 0
  br i1 %37, label %44, label %38

38:                                               ; preds = %27, %38
  %39 = phi %"struct.std::__1::pair.1304"* [ %42, %38 ], [ %33, %27 ]
  %40 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %40, align 8
  call void @_ZN5blink17InspectorCSSAgent18CollectStyleSheetsEPNS_13CSSStyleSheetERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::CSSStyleSheet"* %41, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %3) #16
  %42 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %39, i64 1
  %43 = icmp eq %"struct.std::__1::pair.1304"* %42, %36
  br i1 %43, label %44, label %38

44:                                               ; preds = %38, %27
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %22) #16
  call void @_ZN5blink17InspectorCSSAgent20SetActiveStyleSheetsEPNS_8DocumentERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::Document"* %30, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %21) #16
  call void @_ZN5blink17InspectorCSSAgent30TriggerFontsUpdatedForDocumentEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::Document"* %30)
  %45 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %28, i64 1
  %46 = icmp eq %"class.blink::Member.326"* %45, %18
  br i1 %46, label %25, label %27
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent18SetCoverageEnabledEb(%"class.blink::InspectorCSSAgent"* nocapture, i1 zeroext) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.4001", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 16
  %5 = getelementptr inbounds %"class.blink::Member.1313", %"class.blink::Member.1313"* %4, i64 0, i32 0, i32 0
  %6 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %5, align 8
  %7 = icmp ne %"class.blink::StyleRuleUsageTracker"* %6, null
  %8 = xor i1 %7, %1
  br i1 %8, label %9, label %46

9:                                                ; preds = %2
  br i1 %1, label %10, label %17

10:                                               ; preds = %9
  %11 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_21StyleRuleUsageTrackerEEEPhm(i64 48) #16
  %12 = getelementptr inbounds i8, i8* %11, i64 -4
  %13 = bitcast i8* %12 to i16*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 48, i1 false) #16
  %14 = load atomic i16, i16* %13 monotonic, align 2
  %15 = or i16 %14, 1
  store atomic i16 %15, i16* %13 release, align 2
  %16 = ptrtoint i8* %11 to i64
  br label %17

17:                                               ; preds = %9, %10
  %18 = phi i8* [ %11, %10 ], [ null, %9 ]
  %19 = phi i64 [ %16, %10 ], [ 0, %9 ]
  %20 = bitcast %"class.blink::Member.1313"* %4 to i64*
  store atomic i64 %19, i64* %20 monotonic, align 8
  %21 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %25, label %23

23:                                               ; preds = %17
  %24 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %18) #16
  br label %25

25:                                               ; preds = %17, %23
  %26 = bitcast %"class.blink::HeapVector.4001"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %28 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %27, align 8
  call void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.4001"* nonnull sret %3, %"class.blink::InspectorDOMAgent"* %28) #16
  %29 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %32 = load i32, i32* %31, align 4
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %30, i64 %33
  %35 = icmp eq i32 %32, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %37, %25
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #16
  br label %46

37:                                               ; preds = %25, %37
  %38 = phi %"class.blink::Member.326"* [ %44, %37 ], [ %30, %25 ]
  %39 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.blink::Document"*, %"class.blink::Document"** %39, align 8
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %40, i64 0, i32 59, i32 0, i32 0
  %42 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %41, align 8
  %43 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %5, align 8
  call void @_ZN5blink11StyleEngine19SetRuleUsageTrackerEPNS_21StyleRuleUsageTrackerE(%"class.blink::StyleEngine"* %42, %"class.blink::StyleRuleUsageTracker"* %43) #16
  %44 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %38, i64 1
  %45 = icmp eq %"class.blink::Member.326"* %44, %34
  br i1 %45, label %36, label %37

46:                                               ; preds = %2, %36
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorCSSAgent"*) unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapVector.1298", align 8
  %3 = alloca %"class.blink::HeapVector.383", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %78, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0
  %9 = bitcast %"class.WTF::HashSet.3302"* %8 to i64*
  %10 = load i64, i64* %9, align 8
  store atomic i64 0, i64* %9 monotonic, align 8
  %11 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %15, label %13

13:                                               ; preds = %7
  %14 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #16
  br label %15

15:                                               ; preds = %13, %7
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %15
  %19 = inttoptr i64 %10 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #16
  br label %21

21:                                               ; preds = %15, %18
  %22 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %23 = load i32, i32* %22, align 4
  store i32 0, i32* %22, align 4
  %24 = load i32, i32* %4, align 4
  store i32 0, i32* %4, align 4
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0, i32 0, i32 3
  %26 = load i32, i32* %25, align 8
  %27 = and i32 %26, -2147483648
  store i32 %27, i32* %25, align 8
  %28 = icmp eq i32 %24, 0
  %29 = inttoptr i64 %10 to %"class.blink::Member.326"*
  %30 = zext i32 %23 to i64
  %31 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %29, i64 %30
  br i1 %28, label %78, label %32

32:                                               ; preds = %21
  %33 = icmp eq i32 %23, 0
  br i1 %33, label %41, label %34

34:                                               ; preds = %32, %38
  %35 = phi %"class.blink::Member.326"* [ %39, %38 ], [ %29, %32 ]
  %36 = bitcast %"class.blink::Member.326"* %35 to i64*
  %37 = load i64, i64* %36, align 8
  switch i64 %37, label %41 [
    i64 -1, label %38
    i64 0, label %38
  ]

38:                                               ; preds = %34, %34
  %39 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %35, i64 1
  %40 = icmp eq %"class.blink::Member.326"* %39, %31
  br i1 %40, label %78, label %34

41:                                               ; preds = %34, %32
  %42 = phi %"class.blink::Member.326"* [ %29, %32 ], [ %35, %34 ]
  %43 = icmp eq %"class.blink::Member.326"* %42, %31
  br i1 %43, label %78, label %44

44:                                               ; preds = %41
  %45 = bitcast %"class.blink::HeapVector.383"* %3 to i8*
  %46 = bitcast %"class.blink::HeapVector.1298"* %2 to i8*
  %47 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %48 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  br label %49

49:                                               ; preds = %44, %76
  %50 = phi %"class.blink::Member.326"* [ %42, %44 ], [ %70, %76 ]
  %51 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %50, i64 0, i32 0, i32 0
  %52 = load %"class.blink::Document"*, %"class.blink::Document"** %51, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 16, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  %53 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %52, i64 0, i32 59, i32 0, i32 0
  %54 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %53, align 8
  call void @_ZN5blink11StyleEngine29ActiveStyleSheetsForInspectorEv(%"class.blink::HeapVector.1298"* nonnull sret %2, %"class.blink::StyleEngine"* %54) #16
  %55 = load %"struct.std::__1::pair.1304"*, %"struct.std::__1::pair.1304"** %47, align 8
  %56 = load i32, i32* %48, align 4
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %55, i64 %57
  %59 = icmp eq i32 %56, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %49, %60
  %61 = phi %"struct.std::__1::pair.1304"* [ %64, %60 ], [ %55, %49 ]
  %62 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %61, i64 0, i32 0, i32 0, i32 0
  %63 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %62, align 8
  call void @_ZN5blink17InspectorCSSAgent18CollectStyleSheetsEPNS_13CSSStyleSheetERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::CSSStyleSheet"* %63, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %3) #16
  %64 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %61, i64 1
  %65 = icmp eq %"struct.std::__1::pair.1304"* %64, %58
  br i1 %65, label %66, label %60

66:                                               ; preds = %60, %49
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  call void @_ZN5blink17InspectorCSSAgent20SetActiveStyleSheetsEPNS_8DocumentERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::Document"* %52, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #16
  %67 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %50, i64 1
  %68 = icmp eq %"class.blink::Member.326"* %67, %31
  br i1 %68, label %78, label %69

69:                                               ; preds = %66, %73
  %70 = phi %"class.blink::Member.326"* [ %74, %73 ], [ %67, %66 ]
  %71 = bitcast %"class.blink::Member.326"* %70 to i64*
  %72 = load i64, i64* %71, align 8
  switch i64 %72, label %76 [
    i64 -1, label %73
    i64 0, label %73
  ]

73:                                               ; preds = %69, %69
  %74 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %70, i64 1
  %75 = icmp eq %"class.blink::Member.326"* %74, %31
  br i1 %75, label %78, label %69

76:                                               ; preds = %69
  %77 = icmp eq %"class.blink::Member.326"* %70, %31
  br i1 %77, label %78, label %49

78:                                               ; preds = %38, %66, %76, %73, %21, %41, %1
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent23UpdateActiveStyleSheetsEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.1298", align 8
  %4 = alloca %"class.blink::HeapVector.383", align 8
  %5 = bitcast %"class.blink::HeapVector.383"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %5) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 16, i1 false) #16
  %6 = bitcast %"class.blink::HeapVector.1298"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 59, i32 0, i32 0
  %8 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %7, align 8
  call void @_ZN5blink11StyleEngine29ActiveStyleSheetsForInspectorEv(%"class.blink::HeapVector.1298"* nonnull sret %3, %"class.blink::StyleEngine"* %8) #16
  %9 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %10 = load %"struct.std::__1::pair.1304"*, %"struct.std::__1::pair.1304"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i64
  %14 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %10, i64 %13
  %15 = icmp eq i32 %12, 0
  br i1 %15, label %22, label %16

16:                                               ; preds = %2, %16
  %17 = phi %"struct.std::__1::pair.1304"* [ %20, %16 ], [ %10, %2 ]
  %18 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %17, i64 0, i32 0, i32 0, i32 0
  %19 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %18, align 8
  call void @_ZN5blink17InspectorCSSAgent18CollectStyleSheetsEPNS_13CSSStyleSheetERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::CSSStyleSheet"* %19, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %4) #16
  %20 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %17, i64 1
  %21 = icmp eq %"struct.std::__1::pair.1304"* %20, %14
  br i1 %21, label %22, label %16

22:                                               ; preds = %16, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  call void @_ZN5blink17InspectorCSSAgent20SetActiveStyleSheetsEPNS_8DocumentERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::Document"* %1, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %4)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %5) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent5ResetEv(%"class.blink::InspectorCSSAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8, i32 0
  %3 = getelementptr inbounds %"class.WTF::HashMap.3274", %"class.WTF::HashMap.3274"* %2, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3277"* %4, null
  br i1 %5, label %42, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %38, label %10

10:                                               ; preds = %6
  %11 = zext i32 %8 to i64
  br label %12

12:                                               ; preds = %35, %10
  %13 = phi i64 [ 0, %10 ], [ %36, %35 ]
  %14 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %13
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %14, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = ptrtoint %"class.WTF::StringImpl"* %16 to i64
  switch i64 %17, label %18 [
    i64 -1, label %35
    i64 0, label %35
  ]

18:                                               ; preds = %12
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #16
  br label %31

31:                                               ; preds = %30, %27
  %32 = bitcast %"struct.WTF::KeyValuePair.3277"* %14 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %32, align 8
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %13, i32 1
  %34 = bitcast %"class.blink::Member.3916"* %33 to i64*
  store atomic i64 0, i64* %34 monotonic, align 8
  br label %35

35:                                               ; preds = %31, %12, %12
  %36 = add nuw nsw i64 %13, 1
  %37 = icmp eq i64 %36, %11
  br i1 %37, label %38, label %12

38:                                               ; preds = %35, %6
  %39 = bitcast %"struct.WTF::KeyValuePair.3277"* %4 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %39) #16
  %40 = bitcast %"class.WTF::HashMap.3274"* %2 to i64*
  store atomic i64 0, i64* %40 monotonic, align 8
  store i32 0, i32* %7, align 8
  %41 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 2
  store i32 0, i32* %41, align 4
  br label %42

42:                                               ; preds = %1, %38
  %43 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9, i32 0
  %44 = getelementptr inbounds %"class.WTF::HashMap.3281", %"class.WTF::HashMap.3281"* %43, i64 0, i32 0, i32 0
  %45 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %44, align 8
  %46 = icmp eq %"struct.WTF::KeyValuePair.3284"* %45, null
  br i1 %46, label %83, label %47

47:                                               ; preds = %42
  %48 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %49 = load i32, i32* %48, align 8
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %79, label %51

51:                                               ; preds = %47
  %52 = zext i32 %49 to i64
  br label %53

53:                                               ; preds = %76, %51
  %54 = phi i64 [ 0, %51 ], [ %77, %76 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %45, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %55, i64 0, i32 0, i32 0, i32 0
  %57 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %56, align 8
  %58 = ptrtoint %"class.WTF::StringImpl"* %57 to i64
  switch i64 %58, label %59 [
    i64 -1, label %76
    i64 0, label %76
  ]

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #16
  br label %72

72:                                               ; preds = %71, %68
  %73 = bitcast %"struct.WTF::KeyValuePair.3284"* %55 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %73, align 8
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %45, i64 %54, i32 1
  %75 = bitcast %"class.blink::Member.3963"* %74 to i64*
  store atomic i64 0, i64* %75 monotonic, align 8
  br label %76

76:                                               ; preds = %72, %53, %53
  %77 = add nuw nsw i64 %54, 1
  %78 = icmp eq i64 %77, %52
  br i1 %78, label %79, label %53

79:                                               ; preds = %76, %47
  %80 = bitcast %"struct.WTF::KeyValuePair.3284"* %45 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %80) #16
  %81 = bitcast %"class.WTF::HashMap.3281"* %43 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  store i32 0, i32* %48, align 8
  %82 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9, i32 0, i32 0, i32 2
  store i32 0, i32* %82, align 4
  br label %83

83:                                               ; preds = %42, %79
  %84 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %85 = getelementptr inbounds %"class.WTF::HashMap.3288", %"class.WTF::HashMap.3288"* %84, i64 0, i32 0, i32 0
  %86 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %85, align 8
  %87 = icmp eq %"struct.WTF::KeyValuePair.3291"* %86, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %90 = bitcast %"struct.WTF::KeyValuePair.3291"* %86 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %90) #16
  %91 = bitcast %"class.WTF::HashMap.3288"* %84 to i64*
  store atomic i64 0, i64* %91 monotonic, align 8
  store i32 0, i32* %89, align 8
  %92 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0, i32 0, i32 2
  store i32 0, i32* %92, align 4
  br label %93

93:                                               ; preds = %83, %88
  %94 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11, i32 0
  %95 = getelementptr inbounds %"class.WTF::HashMap.3295", %"class.WTF::HashMap.3295"* %94, i64 0, i32 0, i32 0
  %96 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %95, align 8
  %97 = icmp eq %"struct.WTF::KeyValuePair.3298"* %96, null
  br i1 %97, label %103, label %98

98:                                               ; preds = %93
  %99 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %100 = bitcast %"struct.WTF::KeyValuePair.3298"* %96 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %100) #16
  %101 = bitcast %"class.WTF::HashMap.3295"* %94 to i64*
  store atomic i64 0, i64* %101 monotonic, align 8
  store i32 0, i32* %99, align 8
  %102 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11, i32 0, i32 0, i32 2
  store i32 0, i32* %102, align 4
  br label %103

103:                                              ; preds = %93, %98
  %104 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0
  %105 = getelementptr inbounds %"class.WTF::HashSet.3302", %"class.WTF::HashSet.3302"* %104, i64 0, i32 0, i32 0
  %106 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %105, align 8
  %107 = icmp eq %"class.blink::Member.326"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %103
  %109 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %110 = bitcast %"class.blink::Member.326"* %106 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %110) #16
  %111 = bitcast %"class.WTF::HashSet.3302"* %104 to i64*
  store atomic i64 0, i64* %111 monotonic, align 8
  store i32 0, i32* %109, align 8
  %112 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0, i32 0, i32 2
  store i32 0, i32* %112, align 4
  br label %113

113:                                              ; preds = %103, %108
  %114 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0
  %115 = getelementptr inbounds %"class.WTF::HashMap.3308", %"class.WTF::HashMap.3308"* %114, i64 0, i32 0, i32 0
  %116 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %115, align 8
  %117 = icmp eq %"struct.WTF::KeyValuePair.3311"* %116, null
  br i1 %117, label %123, label %118

118:                                              ; preds = %113
  %119 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %120 = bitcast %"struct.WTF::KeyValuePair.3311"* %116 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %120) #16
  %121 = bitcast %"class.WTF::HashMap.3308"* %114 to i64*
  store atomic i64 0, i64* %121 monotonic, align 8
  store i32 0, i32* %119, align 8
  %122 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0, i32 0, i32 2
  store i32 0, i32* %122, align 4
  br label %123

123:                                              ; preds = %113, %118
  tail call void @_ZN5blink17InspectorCSSAgent17ResetPseudoStatesEv(%"class.blink::InspectorCSSAgent"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent22ResetNonPersistentDataEv(%"class.blink::InspectorCSSAgent"* nocapture) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17InspectorCSSAgent17ResetPseudoStatesEv(%"class.blink::InspectorCSSAgent"* %0)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17ResetPseudoStatesEv(%"class.blink::InspectorCSSAgent"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.blink::HeapHashSet.3299", align 8
  %3 = alloca %"class.blink::Document"*, align 8
  %4 = alloca %"class.blink::Document"*, align 8
  %5 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %6 = bitcast %"class.blink::HeapHashSet.3299"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.blink::HeapHashSet.3299", %"class.blink::HeapHashSet.3299"* %2, i64 0, i32 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapHashSet.3299", %"class.blink::HeapHashSet.3299"* %2, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.blink::HeapHashSet.3299", %"class.blink::HeapHashSet.3299"* %2, i64 0, i32 0, i32 0, i32 2
  %10 = bitcast %"class.blink::HeapHashSet.3299"* %2 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %6, i8 0, i64 20, i1 false) #16
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14
  %12 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %11, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %16, i64 %19
  br i1 %14, label %40, label %21

21:                                               ; preds = %1
  %22 = icmp eq i32 %18, 0
  br i1 %22, label %32, label %23

23:                                               ; preds = %21, %29
  %24 = phi %"struct.WTF::KeyValuePair.3316"* [ %30, %29 ], [ %16, %21 ]
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %24, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = add i32 %26, 1
  %28 = icmp ult i32 %27, 2
  br i1 %28, label %29, label %32

29:                                               ; preds = %23
  %30 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %24, i64 1
  %31 = icmp eq %"struct.WTF::KeyValuePair.3316"* %30, %20
  br i1 %31, label %40, label %23

32:                                               ; preds = %23, %21
  %33 = phi %"struct.WTF::KeyValuePair.3316"* [ %16, %21 ], [ %24, %23 ]
  %34 = icmp eq %"struct.WTF::KeyValuePair.3316"* %33, %20
  br i1 %34, label %40, label %35

35:                                               ; preds = %32
  %36 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %37 = bitcast %"class.blink::Document"** %3 to i8*
  %38 = bitcast %"class.blink::Document"** %3 to i64*
  %39 = getelementptr inbounds %"class.blink::HeapHashSet.3299", %"class.blink::HeapHashSet.3299"* %2, i64 0, i32 0, i32 0
  br label %70

40:                                               ; preds = %29, %84, %96, %93, %1, %32
  %41 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15
  %42 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15, i32 0, i32 2
  %43 = load i32, i32* %42, align 4
  %44 = icmp eq i32 %43, 0
  %45 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %41, i64 0, i32 0, i32 0
  %46 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15, i32 0, i32 1
  %48 = load i32, i32* %47, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %46, i64 %49
  br i1 %44, label %98, label %51

51:                                               ; preds = %40
  %52 = icmp eq i32 %48, 0
  br i1 %52, label %62, label %53

53:                                               ; preds = %51, %59
  %54 = phi %"struct.WTF::KeyValuePair.3316"* [ %60, %59 ], [ %46, %51 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %54, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  %57 = add i32 %56, 1
  %58 = icmp ult i32 %57, 2
  br i1 %58, label %59, label %62

59:                                               ; preds = %53
  %60 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %54, i64 1
  %61 = icmp eq %"struct.WTF::KeyValuePair.3316"* %60, %50
  br i1 %61, label %98, label %53

62:                                               ; preds = %53, %51
  %63 = phi %"struct.WTF::KeyValuePair.3316"* [ %46, %51 ], [ %54, %53 ]
  %64 = icmp eq %"struct.WTF::KeyValuePair.3316"* %63, %50
  br i1 %64, label %98, label %65

65:                                               ; preds = %62
  %66 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %67 = bitcast %"class.blink::Document"** %4 to i8*
  %68 = bitcast %"class.blink::Document"** %4 to i64*
  %69 = getelementptr inbounds %"class.blink::HeapHashSet.3299", %"class.blink::HeapHashSet.3299"* %2, i64 0, i32 0, i32 0
  br label %135

70:                                               ; preds = %35, %96
  %71 = phi %"struct.WTF::KeyValuePair.3316"* [ %33, %35 ], [ %88, %96 ]
  %72 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %36, align 8
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %71, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  %75 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %72, i32 %74) #16
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %84, label %77

77:                                               ; preds = %70
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  %78 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %75, i64 0, i32 3, i32 0, i32 0
  %79 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %79, i64 0, i32 2, i32 0, i32 0
  %81 = bitcast %"class.blink::Document"** %80 to i64*
  %82 = load i64, i64* %81, align 8
  store i64 %82, i64* %38, align 8
  %83 = call { %"class.blink::Member.326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.3303"* nonnull %39, %"class.blink::Document"** nonnull dereferenceable(8) %3, %"class.blink::Document"** nonnull dereferenceable(8) %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br label %84

84:                                               ; preds = %70, %77
  %85 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %71, i64 1
  %86 = icmp eq %"struct.WTF::KeyValuePair.3316"* %85, %20
  br i1 %86, label %40, label %87

87:                                               ; preds = %84, %93
  %88 = phi %"struct.WTF::KeyValuePair.3316"* [ %94, %93 ], [ %85, %84 ]
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %88, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = add i32 %90, 1
  %92 = icmp ult i32 %91, 2
  br i1 %92, label %93, label %96

93:                                               ; preds = %87
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %88, i64 1
  %95 = icmp eq %"struct.WTF::KeyValuePair.3316"* %94, %20
  br i1 %95, label %40, label %87

96:                                               ; preds = %87
  %97 = icmp eq %"struct.WTF::KeyValuePair.3316"* %88, %20
  br i1 %97, label %40, label %70

98:                                               ; preds = %59, %149, %161, %158, %40, %62
  %99 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %15, align 8
  %100 = icmp eq %"struct.WTF::KeyValuePair.3316"* %99, null
  br i1 %100, label %104, label %101

101:                                              ; preds = %98
  %102 = bitcast %"struct.WTF::KeyValuePair.3316"* %99 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %102) #16
  %103 = bitcast %"class.WTF::HashMap.3312"* %11 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  store i32 0, i32* %17, align 8
  store i32 0, i32* %12, align 4
  br label %104

104:                                              ; preds = %98, %101
  %105 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %45, align 8
  %106 = icmp eq %"struct.WTF::KeyValuePair.3316"* %105, null
  br i1 %106, label %110, label %107

107:                                              ; preds = %104
  %108 = bitcast %"struct.WTF::KeyValuePair.3316"* %105 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %108) #16
  %109 = bitcast %"class.WTF::HashMap.3312"* %41 to i64*
  store atomic i64 0, i64* %109 monotonic, align 8
  store i32 0, i32* %47, align 8
  store i32 0, i32* %42, align 4
  br label %110

110:                                              ; preds = %104, %107
  %111 = load i32, i32* %9, align 4
  %112 = icmp eq i32 %111, 0
  %113 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %7, align 8
  %114 = load i32, i32* %8, align 8
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %113, i64 %115
  br i1 %112, label %163, label %117

117:                                              ; preds = %110
  %118 = icmp eq i32 %114, 0
  br i1 %118, label %126, label %119

119:                                              ; preds = %117, %123
  %120 = phi %"class.blink::Member.326"* [ %124, %123 ], [ %113, %117 ]
  %121 = bitcast %"class.blink::Member.326"* %120 to i64*
  %122 = load i64, i64* %121, align 8
  switch i64 %122, label %126 [
    i64 -1, label %123
    i64 0, label %123
  ]

123:                                              ; preds = %119, %119
  %124 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %120, i64 1
  %125 = icmp eq %"class.blink::Member.326"* %124, %116
  br i1 %125, label %163, label %119

126:                                              ; preds = %119, %117
  %127 = phi %"class.blink::Member.326"* [ %113, %117 ], [ %120, %119 ]
  %128 = icmp eq %"class.blink::Member.326"* %127, %116
  br i1 %128, label %163, label %129

129:                                              ; preds = %126
  %130 = bitcast %"class.blink::StyleChangeReasonForTracing"* %5 to i8*
  %131 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %132 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %131, i64 0, i32 0, i32 0, i32 0
  %133 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 0
  %134 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %164

135:                                              ; preds = %65, %161
  %136 = phi %"struct.WTF::KeyValuePair.3316"* [ %63, %65 ], [ %153, %161 ]
  %137 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %66, align 8
  %138 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %136, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = call %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"* %137, i32 %139) #16
  %141 = icmp eq %"class.blink::Node"* %140, null
  br i1 %141, label %149, label %142

142:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %67) #16
  %143 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %140, i64 0, i32 3, i32 0, i32 0
  %144 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %143, align 8
  %145 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %144, i64 0, i32 2, i32 0, i32 0
  %146 = bitcast %"class.blink::Document"** %145 to i64*
  %147 = load i64, i64* %146, align 8
  store i64 %147, i64* %68, align 8
  %148 = call { %"class.blink::Member.326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.3303"* nonnull %69, %"class.blink::Document"** nonnull dereferenceable(8) %4, %"class.blink::Document"** nonnull dereferenceable(8) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %67) #16
  br label %149

149:                                              ; preds = %135, %142
  %150 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %136, i64 1
  %151 = icmp eq %"struct.WTF::KeyValuePair.3316"* %150, %50
  br i1 %151, label %98, label %152

152:                                              ; preds = %149, %158
  %153 = phi %"struct.WTF::KeyValuePair.3316"* [ %159, %158 ], [ %150, %149 ]
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %153, i64 0, i32 0
  %155 = load i32, i32* %154, align 4
  %156 = add i32 %155, 1
  %157 = icmp ult i32 %156, 2
  br i1 %157, label %158, label %161

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %153, i64 1
  %160 = icmp eq %"struct.WTF::KeyValuePair.3316"* %159, %50
  br i1 %160, label %98, label %152

161:                                              ; preds = %152
  %162 = icmp eq %"struct.WTF::KeyValuePair.3316"* %153, %50
  br i1 %162, label %98, label %135

163:                                              ; preds = %123, %205, %215, %212, %110, %126
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret void

164:                                              ; preds = %129, %215
  %165 = phi %"class.blink::Member.326"* [ %127, %129 ], [ %209, %215 ]
  %166 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %165, i64 0, i32 0, i32 0
  %167 = load %"class.blink::Document"*, %"class.blink::Document"** %166, align 8
  %168 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %167, i64 0, i32 59, i32 0, i32 0
  %169 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %168, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %130) #16
  %170 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %132, align 8
  %171 = icmp eq %"class.WTF::StringImpl"* %170, null
  br i1 %171, label %189, label %172

172:                                              ; preds = %164
  %173 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %174 = load atomic i32, i32* %173 monotonic, align 4
  %175 = and i32 %174, 2
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %177, label %189

177:                                              ; preds = %172
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %170, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  %180 = zext i32 %179 to i33
  %181 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %180, i33 1) #16
  %182 = extractvalue { i33, i1 } %181, 1
  %183 = extractvalue { i33, i1 } %181, 0
  %184 = icmp slt i33 %183, 0
  %185 = or i1 %182, %184
  br i1 %185, label %186, label %187, !prof !3

186:                                              ; preds = %177
  call void @llvm.trap() #16
  unreachable

187:                                              ; preds = %177
  %188 = trunc i33 %183 to i32
  store i32 %188, i32* %178, align 4
  br label %189

189:                                              ; preds = %164, %172, %187
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kInspectorE, i64 0, i64 0), i8** %133, align 8
  store %"class.WTF::StringImpl"* %170, %"class.WTF::StringImpl"** %134, align 8
  call void @_ZN5blink11StyleEngine29MarkAllElementsForStyleRecalcERKNS_27StyleChangeReasonForTracingE(%"class.blink::StyleEngine"* %169, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %5) #16
  %190 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %134, align 8
  %191 = icmp eq %"class.WTF::StringImpl"* %190, null
  br i1 %191, label %205, label %192

192:                                              ; preds = %189
  %193 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %194 = load atomic i32, i32* %193 monotonic, align 4
  %195 = and i32 %194, 2
  %196 = icmp eq i32 %195, 0
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %190, i64 0, i32 0
  %198 = load i32, i32* %197, align 4
  br i1 %196, label %199, label %201

199:                                              ; preds = %192
  %200 = add i32 %198, -1
  store i32 %200, i32* %197, align 4
  br label %201

201:                                              ; preds = %199, %192
  %202 = phi i32 [ %200, %199 ], [ %198, %192 ]
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %205

204:                                              ; preds = %201
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %190) #16
  br label %205

205:                                              ; preds = %189, %201, %204
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %130) #16
  %206 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %165, i64 1
  %207 = icmp eq %"class.blink::Member.326"* %206, %116
  br i1 %207, label %163, label %208

208:                                              ; preds = %205, %212
  %209 = phi %"class.blink::Member.326"* [ %213, %212 ], [ %206, %205 ]
  %210 = bitcast %"class.blink::Member.326"* %209 to i64*
  %211 = load i64, i64* %210, align 8
  switch i64 %211, label %215 [
    i64 -1, label %212
    i64 0, label %212
  ]

212:                                              ; preds = %208, %208
  %213 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %209, i64 1
  %214 = icmp eq %"class.blink::Member.326"* %213, %116
  br i1 %214, label %163, label %208

215:                                              ; preds = %208
  %216 = icmp eq %"class.blink::Member.326"* %209, %116
  br i1 %216, label %163, label %164
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent6enableENSt3__110unique_ptrINS_8protocol3CSS7Backend14EnableCallbackENS1_14default_deleteIS6_EEEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.3688", align 8
  %4 = alloca %"class.crdtp::DispatchResponse", align 8
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = alloca %"class.blink::Persistent.3999", align 8
  %8 = ptrtoint %"class.blink::protocol::CSS::Backend::EnableCallback"* %1 to i64
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %9, align 8
  %11 = tail call zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"* %10) #16
  br i1 %11, label %38, label %12

12:                                               ; preds = %2
  %13 = bitcast %"class.crdtp::DispatchResponse"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #16
  %14 = tail call i8* @_Znwm(i64 48) #18
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %14, i8** %15, align 8
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast i64* %16 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %17, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %14, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str, i64 0, i64 0), i64 36, i1 false) #16
  %18 = getelementptr inbounds i8, i8* %14, i64 36
  store i8 0, i8* %18, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %4, %"class.std::__1::basic_string"* nonnull %5) #16
  %19 = bitcast %"class.blink::protocol::CSS::Backend::EnableCallback"* %1 to void (%"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.crdtp::DispatchResponse"*)***
  %20 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.crdtp::DispatchResponse"*)*** %19, align 8
  %21 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.crdtp::DispatchResponse"*)** %20, i64 1
  %22 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.crdtp::DispatchResponse"*)** %21, align 8
  call void %22(%"class.blink::protocol::CSS::Backend::EnableCallback"* %1, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %4) #16
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %4, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %12
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  call void @_ZdlPv(i8* %30) #18
  br label %31

31:                                               ; preds = %12, %28
  %32 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  br i1 %35, label %36, label %165

36:                                               ; preds = %31
  %37 = load i8*, i8** %15, align 8
  call void @_ZdlPv(i8* %37) #18
  br label %165

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20
  %40 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 2
  %41 = load i8, i8* %40, align 1, !range !4
  %42 = icmp eq i8 %41, 1
  br i1 %42, label %65, label %43

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 1
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 1
  br i1 %46, label %47, label %52

47:                                               ; preds = %43
  %48 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %39 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %49 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %48, align 8
  %50 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %49, i64 2
  %51 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %50, align 8
  tail call void %51(%"class.blink::InspectorAgentState::SimpleField"* %39) #16
  br label %65

52:                                               ; preds = %43
  store i8 1, i8* %40, align 1
  %53 = bitcast %"class.blink::WebVector.3688"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %53) #16
  %54 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %53, i8 0, i64 24, i1 false) #16
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.3688"* nonnull %3) #16
  %55 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 0, i32 2
  %56 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %55, align 8
  %57 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %56, %"class.WTF::String"* dereferenceable(8) %57, %"class.blink::WebVector.3688"* nonnull %3) #16
  %58 = load i8*, i8** %54, align 8
  %59 = icmp eq i8* %58, null
  br i1 %59, label %64, label %60

60:                                               ; preds = %52
  %61 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %3, i64 0, i32 0, i32 0, i32 1
  %62 = ptrtoint i8* %58 to i64
  %63 = bitcast i8** %61 to i64*
  store i64 %62, i64* %63, align 8
  call void @_ZdlPv(i8* nonnull %58) #18
  br label %64

64:                                               ; preds = %60, %52
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %53) #16
  br label %65

65:                                               ; preds = %38, %47, %64
  %66 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 6, i32 0, i32 0
  %67 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %66, align 8
  %68 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 18
  %69 = load i32, i32* %68, align 8
  %70 = bitcast %"class.blink::Persistent.3999"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %70) #16
  %71 = getelementptr inbounds %"class.blink::Persistent.3999", %"class.blink::Persistent.3999"* %7, i64 0, i32 0
  %72 = getelementptr inbounds %"class.blink::Persistent.3999", %"class.blink::Persistent.3999"* %7, i64 0, i32 0, i32 0
  store %"class.blink::InspectorCSSAgent"* %0, %"class.blink::InspectorCSSAgent"** %72, align 8, !alias.scope !5
  %73 = getelementptr inbounds %"class.blink::Persistent.3999", %"class.blink::Persistent.3999"* %7, i64 0, i32 0, i32 1, i32 0
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %73, align 8, !alias.scope !5
  %74 = ptrtoint %"class.blink::InspectorCSSAgent"* %0 to i64
  switch i64 %74, label %75 [
    i64 0, label %101
    i64 -1, label %101
  ]

75:                                               ; preds = %65
  %76 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8, !noalias !5
  %77 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %76, i64 0, i32 1
  %78 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %77) #16, !noalias !5
  %79 = icmp eq i8* %78, null
  br i1 %79, label %80, label %82, !prof !3

80:                                               ; preds = %75
  %81 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %77, i8* %81) #16
  br label %82

82:                                               ; preds = %80, %75
  %83 = phi i8* [ %81, %80 ], [ %78, %75 ]
  %84 = bitcast i8* %83 to %"class.blink::ThreadState"**
  %85 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %84, align 8, !noalias !5
  %86 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %85, i64 0, i32 3, i32 0, i32 0, i32 0
  %87 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %86, align 8, !noalias !5
  %88 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %87, i64 0, i32 0, i32 0
  %89 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %88, align 8, !noalias !5
  %90 = icmp eq %"class.blink::PersistentNode"* %89, null
  br i1 %90, label %91, label %94, !prof !3

91:                                               ; preds = %82
  %92 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %87, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %92) #16
  %93 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %88, align 8
  br label %94

94:                                               ; preds = %91, %82
  %95 = phi %"class.blink::PersistentNode"* [ %93, %91 ], [ %89, %82 ]
  %96 = bitcast %"class.blink::PersistentNode"* %95 to i64*
  %97 = load i64, i64* %96, align 8, !noalias !5
  %98 = bitcast %"class.blink::PersistentRegion"* %87 to i64*
  store i64 %97, i64* %98, align 8, !noalias !5
  %99 = bitcast %"class.blink::PersistentNode"* %95 to %"class.blink::PersistentBase.4000"**
  store %"class.blink::PersistentBase.4000"* %71, %"class.blink::PersistentBase.4000"** %99, align 8, !noalias !5
  %100 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %95, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17InspectorCSSAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %100, align 8
  store %"class.blink::PersistentNode"* %95, %"class.blink::PersistentNode"** %73, align 8, !alias.scope !5
  br label %101

101:                                              ; preds = %65, %65, %94
  %102 = call i8* @_Znwm(i64 72) #18, !noalias !8
  %103 = bitcast i8* %102 to %"class.base::internal::BindStateBase"*
  call void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"* nonnull %103, void ()* bitcast (void (%"class.base::internal::BindStateBase"*)* @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS3_8protocol3CSS7Backend14EnableCallbackENS5_14default_deleteISA_EEEEEJNS3_10PersistentIS4_EESD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE to void ()*), void (%"class.base::internal::BindStateBase"*)* nonnull @_ZN4base8internal9BindStateIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS2_8protocol3CSS7Backend14EnableCallbackENS4_14default_deleteIS9_EEEEEJNS2_10PersistentIS3_EESC_EE7DestroyEPKNS0_13BindStateBaseE) #16, !noalias !8
  %104 = getelementptr inbounds i8, i8* %102, i64 32
  %105 = bitcast i8* %104 to <2 x i64>*
  store <2 x i64> <i64 ptrtoint (void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)* @_ZN5blink17InspectorCSSAgent21ResourceContentLoadedENSt3__110unique_ptrINS_8protocol3CSS7Backend14EnableCallbackENS1_14default_deleteIS6_EEEE to i64), i64 0>, <2 x i64>* %105, align 8, !noalias !8
  %106 = getelementptr inbounds i8, i8* %102, i64 48
  %107 = bitcast %"class.blink::Persistent.3999"* %7 to i64*
  %108 = load i64, i64* %107, align 8
  %109 = bitcast i8* %106 to i64*
  store i64 %108, i64* %109, align 8
  %110 = getelementptr inbounds i8, i8* %102, i64 56
  %111 = bitcast i8* %110 to %"class.blink::PersistentNode"**
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %111, align 8
  switch i64 %108, label %112 [
    i64 0, label %138
    i64 -1, label %138
  ]

112:                                              ; preds = %101
  %113 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %114 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %113, i64 0, i32 1
  %115 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %114) #16
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119, !prof !3

117:                                              ; preds = %112
  %118 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %114, i8* %118) #16
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i8* [ %118, %117 ], [ %115, %112 ]
  %121 = bitcast i8* %120 to %"class.blink::ThreadState"**
  %122 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 3, i32 0, i32 0, i32 0
  %124 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %123, align 8
  %125 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %124, i64 0, i32 0, i32 0
  %126 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %125, align 8
  %127 = icmp eq %"class.blink::PersistentNode"* %126, null
  br i1 %127, label %128, label %131, !prof !3

128:                                              ; preds = %119
  %129 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %124, i64 0, i32 0
  call void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"* %129) #16
  %130 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %125, align 8
  br label %131

131:                                              ; preds = %128, %119
  %132 = phi %"class.blink::PersistentNode"* [ %130, %128 ], [ %126, %119 ]
  %133 = bitcast %"class.blink::PersistentNode"* %132 to i64*
  %134 = load i64, i64* %133, align 8
  %135 = bitcast %"class.blink::PersistentRegion"* %124 to i64*
  store i64 %134, i64* %135, align 8
  %136 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %132, i64 0, i32 0
  store i8* %106, i8** %136, align 8
  %137 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %132, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17InspectorCSSAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv, void (%"class.blink::Visitor"*, i8*)** %137, align 8
  store %"class.blink::PersistentNode"* %132, %"class.blink::PersistentNode"** %111, align 8
  br label %138

138:                                              ; preds = %101, %101, %131
  %139 = getelementptr inbounds i8, i8* %102, i64 64
  %140 = bitcast i8* %139 to i64*
  store i64 %8, i64* %140, align 8
  %141 = bitcast %"class.base::OnceCallback"* %6 to i8**
  store i8* %102, i8** %141, align 8, !alias.scope !8
  call void @_ZN5blink30InspectorResourceContentLoader28EnsureResourcesContentLoadedEiN4base12OnceCallbackIFvvEEE(%"class.blink::InspectorResourceContentLoader"* %67, i32 %69, %"class.base::OnceCallback"* nonnull %6) #16
  %142 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %142) #16
  %143 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %73, align 8
  %144 = icmp eq %"class.blink::PersistentNode"* %143, null
  br i1 %144, label %164, label %145

145:                                              ; preds = %138
  %146 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %147 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %146, i64 0, i32 1
  %148 = call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %147) #16
  %149 = icmp eq i8* %148, null
  br i1 %149, label %150, label %152, !prof !3

150:                                              ; preds = %145
  %151 = call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %147, i8* %151) #16
  br label %152

152:                                              ; preds = %150, %145
  %153 = phi i8* [ %151, %150 ], [ %148, %145 ]
  %154 = bitcast i8* %153 to %"class.blink::ThreadState"**
  %155 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %155, i64 0, i32 3, i32 0, i32 0, i32 0
  %157 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %156, align 8
  %158 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %73, align 8
  %159 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %157, i64 0, i32 0, i32 0
  %160 = bitcast %"class.blink::PersistentRegion"* %157 to i64*
  %161 = load i64, i64* %160, align 8
  %162 = bitcast %"class.blink::PersistentNode"* %158 to i64*
  store i64 %161, i64* %162, align 8
  %163 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %158, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %163, align 8
  store %"class.blink::PersistentNode"* %158, %"class.blink::PersistentNode"** %159, align 8
  store %"class.blink::PersistentNode"* null, %"class.blink::PersistentNode"** %73, align 8
  br label %164

164:                                              ; preds = %152, %138
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %70) #16
  br label %172

165:                                              ; preds = %36, %31
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #16
  %166 = icmp eq %"class.blink::protocol::CSS::Backend::EnableCallback"* %1, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %165
  %168 = bitcast %"class.blink::protocol::CSS::Backend::EnableCallback"* %1 to void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)***
  %169 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)**, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)** %169, i64 4
  %171 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)** %170, align 8
  call void %171(%"class.blink::protocol::CSS::Backend::EnableCallback"* nonnull %1) #16
  br label %172

172:                                              ; preds = %164, %165, %167
  ret void
}

declare zeroext i1 @_ZNK5blink17InspectorDOMAgent7EnabledEv(%"class.blink::InspectorDOMAgent"*) local_unnamed_addr #1

declare void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret, %"class.std::__1::basic_string"*) local_unnamed_addr #1

declare void @_ZN5blink30InspectorResourceContentLoader28EnsureResourcesContentLoadedEiN4base12OnceCallbackIFvvEEE(%"class.blink::InspectorResourceContentLoader"*, i32, %"class.base::OnceCallback"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent21ResourceContentLoadedENSt3__110unique_ptrINS_8protocol3CSS7Backend14EnableCallbackENS1_14default_deleteIS6_EEEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*) #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 20, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %7, label %6

6:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorCSSAgent15CompleteEnabledEv(%"class.blink::InspectorCSSAgent"* %0)
  br label %7

7:                                                ; preds = %2, %6
  %8 = bitcast %"class.blink::protocol::CSS::Backend::EnableCallback"* %1 to void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)***
  %9 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)**, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*** %8, align 8
  %10 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)** %9, align 8
  tail call void %10(%"class.blink::protocol::CSS::Backend::EnableCallback"* %1) #16
  %11 = icmp eq %"class.blink::protocol::CSS::Backend::EnableCallback"* %1, null
  br i1 %11, label %16, label %12

12:                                               ; preds = %7
  %13 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)**, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*** %8, align 8
  %14 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)** %13, i64 4
  %15 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)** %14, align 8
  tail call void %15(%"class.blink::protocol::CSS::Backend::EnableCallback"* nonnull %1) #16
  br label %16

16:                                               ; preds = %7, %12
  ret void
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent6enableENSt3__110unique_ptrINS_8protocol3CSS7Backend14EnableCallbackENS1_14default_deleteIS6_EEEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 27, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent6enableENSt3__110unique_ptrINS_8protocol3CSS7Backend14EnableCallbackENS1_14default_deleteIS6_EEEE(%"class.blink::InspectorCSSAgent"* %4, %"class.blink::protocol::CSS::Backend::EnableCallback"* %1)
  ret void
}

declare void @_ZN5blink13CoreProbeSink20AddInspectorCSSAgentEPNS_17InspectorCSSAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorCSSAgent"*) local_unnamed_addr #1

declare void @_ZN5blink17InspectorDOMAgent14AddDOMListenerEPNS0_11DOMListenerE(%"class.blink::InspectorDOMAgent"*, %"struct.blink::InspectorDOMAgent::DOMListener"*) local_unnamed_addr #1

declare void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.4001"* sret, %"class.blink::InspectorDOMAgent"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent30TriggerFontsUpdatedForDocumentEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 59, i32 0, i32 0
  %5 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %4, align 8
  %6 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %5, i64 0, i32 37, i32 0, i32 0
  %7 = load %"class.blink::CSSFontSelector"*, %"class.blink::CSSFontSelector"** %6, align 8
  %8 = bitcast %"class.blink::CSSFontSelector"* %7 to %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)***
  %9 = load %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)**, %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)*** %8, align 8
  %10 = getelementptr inbounds %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)*, %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)** %9, i64 22
  %11 = load %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)*, %"class.blink::FontFaceCache"* (%"class.blink::CSSFontSelector"*)** %10, align 8
  %12 = tail call %"class.blink::FontFaceCache"* %11(%"class.blink::CSSFontSelector"* %7) #16
  %13 = getelementptr inbounds %"class.blink::FontFaceCache", %"class.blink::FontFaceCache"* %12, i64 0, i32 3, i32 0, i32 1, i32 0
  %14 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1450"* %13, i32 0) #16, !noalias !15
  %15 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %14, i64 0, i32 1
  %16 = load i32, i32* %15, align 4, !noalias !15
  %17 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1450"* %13, i32 %16) #16, !noalias !15
  %18 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1450"* %13, i32 0) #16, !noalias !18
  %19 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %17, %18
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.WTF::String"* %3 to i8*
  %22 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  br label %24

23:                                               ; preds = %78, %2
  ret void

24:                                               ; preds = %20, %78
  %25 = phi %"class.WTF::VectorBackedLinkedListNode"* [ %17, %20 ], [ %81, %78 ]
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %25, i64 0, i32 2, i32 0, i32 0
  %27 = load %"class.blink::FontFace"*, %"class.blink::FontFace"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %27, i64 0, i32 20, i32 0, i32 0
  %29 = load %"class.blink::CSSFontFace"*, %"class.blink::CSSFontFace"** %28, align 8
  %30 = icmp eq %"class.blink::CSSFontFace"* %29, null
  br i1 %30, label %78, label %31

31:                                               ; preds = %24
  %32 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %29, i64 0, i32 2, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %29, i64 0, i32 2, i32 0, i32 2
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %33, %35
  br i1 %36, label %78, label %37

37:                                               ; preds = %31
  %38 = getelementptr inbounds %"class.blink::CSSFontFace", %"class.blink::CSSFontFace"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %39 = load %"class.blink::Member.4039"*, %"class.blink::Member.4039"** %38, align 8
  %40 = zext i32 %33 to i64
  %41 = getelementptr inbounds %"class.blink::Member.4039", %"class.blink::Member.4039"* %39, i64 %40, i32 0, i32 0
  %42 = load %"class.blink::CSSFontFaceSource"*, %"class.blink::CSSFontFaceSource"** %41, align 8
  %43 = icmp eq %"class.blink::CSSFontFaceSource"* %42, null
  br i1 %43, label %78, label %44

44:                                               ; preds = %37
  %45 = bitcast %"class.blink::CSSFontFaceSource"* %42 to i1 (%"class.blink::CSSFontFaceSource"*)***
  %46 = load i1 (%"class.blink::CSSFontFaceSource"*)**, i1 (%"class.blink::CSSFontFaceSource"*)*** %45, align 8
  %47 = getelementptr inbounds i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %46, i64 4
  %48 = load i1 (%"class.blink::CSSFontFaceSource"*)*, i1 (%"class.blink::CSSFontFaceSource"*)** %47, align 8
  %49 = tail call zeroext i1 %48(%"class.blink::CSSFontFaceSource"* nonnull %42) #16
  br i1 %49, label %50, label %78

50:                                               ; preds = %44
  %51 = bitcast %"class.blink::CSSFontFaceSource"* %42 to %"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)***
  %52 = load %"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)**, %"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)*** %51, align 8
  %53 = getelementptr inbounds %"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)*, %"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)** %52, i64 7
  %54 = load %"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)*, %"class.blink::FontCustomPlatformData"* (%"class.blink::CSSFontFaceSource"*)** %53, align 8
  %55 = tail call %"class.blink::FontCustomPlatformData"* %54(%"class.blink::CSSFontFaceSource"* nonnull %42) #16
  %56 = icmp eq %"class.blink::FontCustomPlatformData"* %55, null
  br i1 %56, label %78, label %57

57:                                               ; preds = %50
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %58 = bitcast %"class.blink::CSSFontFaceSource"* %42 to %"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)***
  %59 = load %"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)*** %58, align 8
  %60 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)** %59, i64 6
  %61 = load %"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSFontFaceSource"*)** %60, align 8
  %62 = tail call %"class.WTF::StringImpl"* %61(%"class.blink::CSSFontFaceSource"* nonnull %42) #16
  store %"class.WTF::StringImpl"* %62, %"class.WTF::StringImpl"** %22, align 8
  call void @_ZN5blink17InspectorCSSAgent12FontsUpdatedEPKNS_8FontFaceERKN3WTF6StringEPKNS_22FontCustomPlatformDataE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::FontFace"* %27, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.blink::FontCustomPlatformData"* nonnull %55)
  %63 = icmp eq %"class.WTF::StringImpl"* %62, null
  br i1 %63, label %77, label %64

64:                                               ; preds = %57
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %66 = load atomic i32, i32* %65 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %62, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %64
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %64
  %74 = phi i32 [ %72, %71 ], [ %70, %64 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %62) #16
  br label %77

77:                                               ; preds = %57, %73, %76
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %78

78:                                               ; preds = %31, %37, %44, %50, %77, %24
  %79 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %25, i64 0, i32 1
  %80 = load i32, i32* %79, align 4
  %81 = tail call dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1450"* %13, i32 %80) #16
  %82 = icmp eq %"class.WTF::VectorBackedLinkedListNode"* %81, %18
  br i1 %82, label %23, label %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent12FontsUpdatedEPKNS_8FontFaceERKN3WTF6StringEPKNS_22FontCustomPlatformDataE(%"class.blink::InspectorCSSAgent"*, %"class.blink::FontFace"*, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::FontCustomPlatformData"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.crdtp::detail::PtrMaybe", align 8
  %6 = alloca %"class.WTF::Vector.4102", align 8
  %7 = alloca %"class.std::__1::unique_ptr.4082", align 8
  %8 = alloca %"class.crdtp::detail::PtrMaybe", align 8
  tail call void @_ZN5blink17InspectorCSSAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorCSSAgent"* %0)
  %9 = icmp ne %"class.blink::FontFace"* %1, null
  %10 = icmp ne %"class.blink::FontCustomPlatformData"* %3, null
  %11 = and i1 %9, %10
  br i1 %11, label %24, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %14 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %13, align 8
  %15 = bitcast %"class.crdtp::detail::PtrMaybe"* %5 to i64*
  store i64 0, i64* %15, align 8
  call void @_ZN5blink8protocol3CSS8Frontend12fontsUpdatedEN5crdtp6detail8PtrMaybeINS1_8FontFaceEEE(%"class.blink::protocol::CSS::Frontend"* %14, %"class.crdtp::detail::PtrMaybe"* nonnull %5) #16
  %16 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::CSS::FontFace"*, %"class.blink::protocol::CSS::FontFace"** %16, align 8
  store %"class.blink::protocol::CSS::FontFace"* null, %"class.blink::protocol::CSS::FontFace"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::CSS::FontFace"* %17, null
  br i1 %18, label %721, label %19

19:                                               ; preds = %12
  %20 = bitcast %"class.blink::protocol::CSS::FontFace"* %17 to void (%"class.blink::protocol::CSS::FontFace"*)***
  %21 = load void (%"class.blink::protocol::CSS::FontFace"*)**, void (%"class.blink::protocol::CSS::FontFace"*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::protocol::CSS::FontFace"*)*, void (%"class.blink::protocol::CSS::FontFace"*)** %21, i64 2
  %23 = load void (%"class.blink::protocol::CSS::FontFace"*)*, void (%"class.blink::protocol::CSS::FontFace"*)** %22, align 8
  call void %23(%"class.blink::protocol::CSS::FontFace"* nonnull %17) #16
  br label %721

24:                                               ; preds = %4
  %25 = bitcast %"class.WTF::Vector.4102"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.WTF::Vector.4102", %"class.WTF::Vector.4102"* %6, i64 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"class.WTF::Vector.4102", %"class.WTF::Vector.4102"* %6, i64 0, i32 0, i32 0, i32 2
  %28 = bitcast %"class.WTF::Vector.4102"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 -86, i64 16, i1 false)
  call void @_ZNK5blink22FontCustomPlatformData16GetVariationAxesEv(%"class.WTF::Vector.4102"* nonnull sret %6, %"class.blink::FontCustomPlatformData"* nonnull %3) #16
  %29 = call i8* @_Znwm(i64 24) #18
  %30 = bitcast i8* %29 to %"class.std::__1::vector.4080"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 0, i64 24, i1 false) #16
  %31 = ptrtoint i8* %29 to i64
  %32 = load %"struct.blink::VariationAxis"*, %"struct.blink::VariationAxis"** %26, align 8
  %33 = load i32, i32* %27, align 4
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %32, i64 %34
  %36 = icmp eq i32 %33, 0
  br i1 %36, label %46, label %37

37:                                               ; preds = %24
  %38 = bitcast %"class.std::__1::unique_ptr.4082"* %7 to i8*
  %39 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %7, i64 0, i32 0, i32 0, i32 0
  %40 = bitcast %"class.std::__1::unique_ptr.4082"* %7 to i8**
  %41 = getelementptr inbounds i8, i8* %29, i64 8
  %42 = bitcast i8* %41 to %"class.std::__1::unique_ptr.4082"**
  %43 = getelementptr inbounds i8, i8* %29, i64 16
  %44 = bitcast i8* %43 to %"class.std::__1::unique_ptr.4082"**
  %45 = bitcast i8* %41 to i64*
  br label %386

46:                                               ; preds = %506, %24
  %47 = call i8* @_Znwm(i64 80) #18
  %48 = bitcast i8* %47 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS8FontFaceE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %48, align 8
  %49 = getelementptr inbounds i8, i8* %47, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 72, i1 false) #16
  %50 = getelementptr inbounds %"class.blink::FontFace", %"class.blink::FontFace"* %1, i64 0, i32 3, i32 0, i32 0, i32 0
  %51 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %50, align 8
  %52 = icmp eq %"class.WTF::StringImpl"* %51, null
  br i1 %52, label %68, label %53

53:                                               ; preds = %46
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load atomic i32, i32* %54 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %68

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %51, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = zext i32 %60 to i33
  %62 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %61, i33 1) #16
  %63 = extractvalue { i33, i1 } %62, 1
  %64 = extractvalue { i33, i1 } %62, 0
  %65 = icmp slt i33 %64, 0
  %66 = or i1 %63, %65
  br i1 %66, label %67, label %71, !prof !3

67:                                               ; preds = %58
  call void @llvm.trap() #16
  unreachable

68:                                               ; preds = %53, %46
  %69 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %70 = bitcast i8* %49 to i64*
  store i64 %69, i64* %70, align 8
  br label %91

71:                                               ; preds = %58
  %72 = trunc i33 %64 to i32
  store i32 %72, i32* %59, align 4
  %73 = bitcast i8* %49 to %"class.WTF::StringImpl"**
  %74 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %73, align 8
  %75 = ptrtoint %"class.WTF::StringImpl"* %51 to i64
  %76 = bitcast i8* %49 to i64*
  store i64 %75, i64* %76, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #16
  br label %91

91:                                               ; preds = %68, %71, %87, %90
  %92 = call %"class.WTF::StringImpl"* @_ZNK5blink8FontFace5styleEv(%"class.blink::FontFace"* nonnull %1) #16
  %93 = getelementptr inbounds i8, i8* %47, i64 16
  %94 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %94, label %112, label %95

95:                                               ; preds = %91
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %112

100:                                              ; preds = %95
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  %103 = zext i32 %102 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #16
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %100
  call void @llvm.trap() #16
  unreachable

110:                                              ; preds = %100
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %101, align 4
  br label %112

112:                                              ; preds = %110, %95, %91
  %113 = ptrtoint %"class.WTF::StringImpl"* %92 to i64
  %114 = bitcast i8* %93 to i64*
  %115 = bitcast i8* %93 to %"class.WTF::StringImpl"**
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %115, align 8
  store i64 %113, i64* %114, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %131, label %118

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %124 = load i32, i32* %123, align 4
  br i1 %122, label %125, label %127

125:                                              ; preds = %118
  %126 = add i32 %124, -1
  store i32 %126, i32* %123, align 4
  br label %127

127:                                              ; preds = %125, %118
  %128 = phi i32 [ %126, %125 ], [ %124, %118 ]
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %130, label %131

130:                                              ; preds = %127
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %116) #16
  br label %131

131:                                              ; preds = %112, %127, %130
  %132 = call %"class.WTF::StringImpl"* @_ZNK5blink8FontFace7variantEv(%"class.blink::FontFace"* nonnull %1) #16
  %133 = getelementptr inbounds i8, i8* %47, i64 24
  %134 = icmp eq %"class.WTF::StringImpl"* %132, null
  br i1 %134, label %152, label %135

135:                                              ; preds = %131
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %140, label %152

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %142 = load i32, i32* %141, align 4
  %143 = zext i32 %142 to i33
  %144 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %143, i33 1) #16
  %145 = extractvalue { i33, i1 } %144, 1
  %146 = extractvalue { i33, i1 } %144, 0
  %147 = icmp slt i33 %146, 0
  %148 = or i1 %145, %147
  br i1 %148, label %149, label %150, !prof !3

149:                                              ; preds = %140
  call void @llvm.trap() #16
  unreachable

150:                                              ; preds = %140
  %151 = trunc i33 %146 to i32
  store i32 %151, i32* %141, align 4
  br label %152

152:                                              ; preds = %150, %135, %131
  %153 = ptrtoint %"class.WTF::StringImpl"* %132 to i64
  %154 = bitcast i8* %133 to i64*
  %155 = bitcast i8* %133 to %"class.WTF::StringImpl"**
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  store i64 %153, i64* %154, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %171, label %158

158:                                              ; preds = %152
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %160 = load atomic i32, i32* %159 monotonic, align 4
  %161 = and i32 %160, 2
  %162 = icmp eq i32 %161, 0
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  br i1 %162, label %165, label %167

165:                                              ; preds = %158
  %166 = add i32 %164, -1
  store i32 %166, i32* %163, align 4
  br label %167

167:                                              ; preds = %165, %158
  %168 = phi i32 [ %166, %165 ], [ %164, %158 ]
  %169 = icmp eq i32 %168, 0
  br i1 %169, label %170, label %171

170:                                              ; preds = %167
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %156) #16
  br label %171

171:                                              ; preds = %152, %167, %170
  %172 = call %"class.WTF::StringImpl"* @_ZNK5blink8FontFace6weightEv(%"class.blink::FontFace"* nonnull %1) #16
  %173 = getelementptr inbounds i8, i8* %47, i64 32
  %174 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %174, label %192, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %177 = load atomic i32, i32* %176 monotonic, align 4
  %178 = and i32 %177, 2
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %180, label %192

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  %183 = zext i32 %182 to i33
  %184 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %183, i33 1) #16
  %185 = extractvalue { i33, i1 } %184, 1
  %186 = extractvalue { i33, i1 } %184, 0
  %187 = icmp slt i33 %186, 0
  %188 = or i1 %185, %187
  br i1 %188, label %189, label %190, !prof !3

189:                                              ; preds = %180
  call void @llvm.trap() #16
  unreachable

190:                                              ; preds = %180
  %191 = trunc i33 %186 to i32
  store i32 %191, i32* %181, align 4
  br label %192

192:                                              ; preds = %190, %175, %171
  %193 = ptrtoint %"class.WTF::StringImpl"* %172 to i64
  %194 = bitcast i8* %173 to i64*
  %195 = bitcast i8* %173 to %"class.WTF::StringImpl"**
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  store i64 %193, i64* %194, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %211, label %198

198:                                              ; preds = %192
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %200 = load atomic i32, i32* %199 monotonic, align 4
  %201 = and i32 %200, 2
  %202 = icmp eq i32 %201, 0
  %203 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 0
  %204 = load i32, i32* %203, align 4
  br i1 %202, label %205, label %207

205:                                              ; preds = %198
  %206 = add i32 %204, -1
  store i32 %206, i32* %203, align 4
  br label %207

207:                                              ; preds = %205, %198
  %208 = phi i32 [ %206, %205 ], [ %204, %198 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %211

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #16
  br label %211

211:                                              ; preds = %192, %207, %210
  %212 = call %"class.WTF::StringImpl"* @_ZNK5blink8FontFace7stretchEv(%"class.blink::FontFace"* nonnull %1) #16
  %213 = getelementptr inbounds i8, i8* %47, i64 40
  %214 = icmp eq %"class.WTF::StringImpl"* %212, null
  br i1 %214, label %232, label %215

215:                                              ; preds = %211
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %217 = load atomic i32, i32* %216 monotonic, align 4
  %218 = and i32 %217, 2
  %219 = icmp eq i32 %218, 0
  br i1 %219, label %220, label %232

220:                                              ; preds = %215
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %222 = load i32, i32* %221, align 4
  %223 = zext i32 %222 to i33
  %224 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %223, i33 1) #16
  %225 = extractvalue { i33, i1 } %224, 1
  %226 = extractvalue { i33, i1 } %224, 0
  %227 = icmp slt i33 %226, 0
  %228 = or i1 %225, %227
  br i1 %228, label %229, label %230, !prof !3

229:                                              ; preds = %220
  call void @llvm.trap() #16
  unreachable

230:                                              ; preds = %220
  %231 = trunc i33 %226 to i32
  store i32 %231, i32* %221, align 4
  br label %232

232:                                              ; preds = %230, %215, %211
  %233 = ptrtoint %"class.WTF::StringImpl"* %212 to i64
  %234 = bitcast i8* %213 to i64*
  %235 = bitcast i8* %213 to %"class.WTF::StringImpl"**
  %236 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  store i64 %233, i64* %234, align 8
  %237 = icmp eq %"class.WTF::StringImpl"* %236, null
  br i1 %237, label %251, label %238

238:                                              ; preds = %232
  %239 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %240 = load atomic i32, i32* %239 monotonic, align 4
  %241 = and i32 %240, 2
  %242 = icmp eq i32 %241, 0
  %243 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %236, i64 0, i32 0
  %244 = load i32, i32* %243, align 4
  br i1 %242, label %245, label %247

245:                                              ; preds = %238
  %246 = add i32 %244, -1
  store i32 %246, i32* %243, align 4
  br label %247

247:                                              ; preds = %245, %238
  %248 = phi i32 [ %246, %245 ], [ %244, %238 ]
  %249 = icmp eq i32 %248, 0
  br i1 %249, label %250, label %251

250:                                              ; preds = %247
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %236) #16
  br label %251

251:                                              ; preds = %232, %247, %250
  %252 = call %"class.WTF::StringImpl"* @_ZNK5blink8FontFace12unicodeRangeEv(%"class.blink::FontFace"* nonnull %1) #16
  %253 = getelementptr inbounds i8, i8* %47, i64 48
  %254 = icmp eq %"class.WTF::StringImpl"* %252, null
  br i1 %254, label %272, label %255

255:                                              ; preds = %251
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %257 = load atomic i32, i32* %256 monotonic, align 4
  %258 = and i32 %257, 2
  %259 = icmp eq i32 %258, 0
  br i1 %259, label %260, label %272

260:                                              ; preds = %255
  %261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %262 = load i32, i32* %261, align 4
  %263 = zext i32 %262 to i33
  %264 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %263, i33 1) #16
  %265 = extractvalue { i33, i1 } %264, 1
  %266 = extractvalue { i33, i1 } %264, 0
  %267 = icmp slt i33 %266, 0
  %268 = or i1 %265, %267
  br i1 %268, label %269, label %270, !prof !3

269:                                              ; preds = %260
  call void @llvm.trap() #16
  unreachable

270:                                              ; preds = %260
  %271 = trunc i33 %266 to i32
  store i32 %271, i32* %261, align 4
  br label %272

272:                                              ; preds = %270, %255, %251
  %273 = ptrtoint %"class.WTF::StringImpl"* %252 to i64
  %274 = bitcast i8* %253 to i64*
  %275 = bitcast i8* %253 to %"class.WTF::StringImpl"**
  %276 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %275, align 8
  store i64 %273, i64* %274, align 8
  %277 = icmp eq %"class.WTF::StringImpl"* %276, null
  br i1 %277, label %291, label %278

278:                                              ; preds = %272
  %279 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %280 = load atomic i32, i32* %279 monotonic, align 4
  %281 = and i32 %280, 2
  %282 = icmp eq i32 %281, 0
  %283 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %276, i64 0, i32 0
  %284 = load i32, i32* %283, align 4
  br i1 %282, label %285, label %287

285:                                              ; preds = %278
  %286 = add i32 %284, -1
  store i32 %286, i32* %283, align 4
  br label %287

287:                                              ; preds = %285, %278
  %288 = phi i32 [ %286, %285 ], [ %284, %278 ]
  %289 = icmp eq i32 %288, 0
  br i1 %289, label %290, label %291

290:                                              ; preds = %287
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %276) #16
  br label %291

291:                                              ; preds = %272, %287, %290
  %292 = getelementptr inbounds i8, i8* %47, i64 56
  %293 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %294 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %293, align 8
  %295 = icmp eq %"class.WTF::StringImpl"* %294, null
  br i1 %295, label %313, label %296

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %298 = load atomic i32, i32* %297 monotonic, align 4
  %299 = and i32 %298, 2
  %300 = icmp eq i32 %299, 0
  br i1 %300, label %301, label %313

301:                                              ; preds = %296
  %302 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %294, i64 0, i32 0
  %303 = load i32, i32* %302, align 4
  %304 = zext i32 %303 to i33
  %305 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %304, i33 1) #16
  %306 = extractvalue { i33, i1 } %305, 1
  %307 = extractvalue { i33, i1 } %305, 0
  %308 = icmp slt i33 %307, 0
  %309 = or i1 %306, %308
  br i1 %309, label %310, label %311, !prof !3

310:                                              ; preds = %301
  call void @llvm.trap() #16
  unreachable

311:                                              ; preds = %301
  %312 = trunc i33 %307 to i32
  store i32 %312, i32* %302, align 4
  br label %313

313:                                              ; preds = %311, %296, %291
  %314 = ptrtoint %"class.WTF::StringImpl"* %294 to i64
  %315 = bitcast i8* %292 to i64*
  %316 = bitcast i8* %292 to %"class.WTF::StringImpl"**
  %317 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %316, align 8
  store i64 %314, i64* %315, align 8
  %318 = icmp eq %"class.WTF::StringImpl"* %317, null
  br i1 %318, label %332, label %319

319:                                              ; preds = %313
  %320 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %321 = load atomic i32, i32* %320 monotonic, align 4
  %322 = and i32 %321, 2
  %323 = icmp eq i32 %322, 0
  %324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %317, i64 0, i32 0
  %325 = load i32, i32* %324, align 4
  br i1 %323, label %326, label %328

326:                                              ; preds = %319
  %327 = add i32 %325, -1
  store i32 %327, i32* %324, align 4
  br label %328

328:                                              ; preds = %326, %319
  %329 = phi i32 [ %327, %326 ], [ %325, %319 ]
  %330 = icmp eq i32 %329, 0
  br i1 %330, label %331, label %332

331:                                              ; preds = %328
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %317) #16
  br label %332

332:                                              ; preds = %313, %328, %331
  %333 = call %"class.WTF::StringImpl"* @_ZNK5blink22FontCustomPlatformData22FamilyNameForInspectorEv(%"class.blink::FontCustomPlatformData"* nonnull %3) #16
  %334 = getelementptr inbounds i8, i8* %47, i64 64
  %335 = icmp eq %"class.WTF::StringImpl"* %333, null
  br i1 %335, label %353, label %336

336:                                              ; preds = %332
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %338 = load atomic i32, i32* %337 monotonic, align 4
  %339 = and i32 %338, 2
  %340 = icmp eq i32 %339, 0
  br i1 %340, label %341, label %353

341:                                              ; preds = %336
  %342 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 0
  %343 = load i32, i32* %342, align 4
  %344 = zext i32 %343 to i33
  %345 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %344, i33 1) #16
  %346 = extractvalue { i33, i1 } %345, 1
  %347 = extractvalue { i33, i1 } %345, 0
  %348 = icmp slt i33 %347, 0
  %349 = or i1 %346, %348
  br i1 %349, label %350, label %351, !prof !3

350:                                              ; preds = %341
  call void @llvm.trap() #16
  unreachable

351:                                              ; preds = %341
  %352 = trunc i33 %347 to i32
  store i32 %352, i32* %342, align 4
  br label %353

353:                                              ; preds = %351, %336, %332
  %354 = ptrtoint %"class.WTF::StringImpl"* %333 to i64
  %355 = bitcast i8* %334 to i64*
  %356 = bitcast i8* %334 to %"class.WTF::StringImpl"**
  %357 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %356, align 8
  store i64 %354, i64* %355, align 8
  %358 = icmp eq %"class.WTF::StringImpl"* %357, null
  br i1 %358, label %372, label %359

359:                                              ; preds = %353
  %360 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %361 = load atomic i32, i32* %360 monotonic, align 4
  %362 = and i32 %361, 2
  %363 = icmp eq i32 %362, 0
  %364 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %357, i64 0, i32 0
  %365 = load i32, i32* %364, align 4
  br i1 %363, label %366, label %368

366:                                              ; preds = %359
  %367 = add i32 %365, -1
  store i32 %367, i32* %364, align 4
  br label %368

368:                                              ; preds = %366, %359
  %369 = phi i32 [ %367, %366 ], [ %365, %359 ]
  %370 = icmp eq i32 %369, 0
  br i1 %370, label %371, label %372

371:                                              ; preds = %368
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %357) #16
  br label %372

372:                                              ; preds = %353, %368, %371
  %373 = getelementptr inbounds i8, i8* %29, i64 8
  %374 = bitcast i8* %373 to i64*
  %375 = load i64, i64* %374, align 8
  %376 = bitcast i8* %29 to i64*
  %377 = load i64, i64* %376, align 8
  %378 = icmp eq i64 %375, %377
  %379 = select i1 %378, i64 0, i64 %31
  %380 = select i1 %378, i64 %31, i64 0
  %381 = getelementptr inbounds i8, i8* %47, i64 72
  %382 = bitcast i8* %381 to %"class.std::__1::vector.4080"**
  %383 = load %"class.std::__1::vector.4080"*, %"class.std::__1::vector.4080"** %382, align 8
  %384 = bitcast i8* %381 to i64*
  store i64 %379, i64* %384, align 8
  %385 = icmp eq %"class.std::__1::vector.4080"* %383, null
  br i1 %385, label %538, label %509

386:                                              ; preds = %37, %506
  %387 = phi %"struct.blink::VariationAxis"* [ %32, %37 ], [ %507, %506 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  %388 = call i8* @_Znwm(i64 48) #18
  %389 = bitcast i8* %388 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS17FontVariationAxisE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %389, align 8
  %390 = getelementptr inbounds i8, i8* %388, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %390, i8 0, i64 40, i1 false) #16
  %391 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %387, i64 0, i32 2
  %392 = bitcast double* %391 to i64*
  %393 = load i64, i64* %392, align 8
  %394 = getelementptr inbounds i8, i8* %388, i64 24
  %395 = bitcast i8* %394 to i64*
  store i64 %393, i64* %395, align 8
  %396 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %387, i64 0, i32 3
  %397 = bitcast double* %396 to i64*
  %398 = load i64, i64* %397, align 8
  %399 = getelementptr inbounds i8, i8* %388, i64 32
  %400 = bitcast i8* %399 to i64*
  store i64 %398, i64* %400, align 8
  %401 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %387, i64 0, i32 4
  %402 = bitcast double* %401 to i64*
  %403 = load i64, i64* %402, align 8
  %404 = getelementptr inbounds i8, i8* %388, i64 40
  %405 = bitcast i8* %404 to i64*
  store i64 %403, i64* %405, align 8
  %406 = getelementptr inbounds i8, i8* %388, i64 16
  %407 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %387, i64 0, i32 1, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %425, label %410

410:                                              ; preds = %386
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %425

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = zext i32 %417 to i33
  %419 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %418, i33 1) #16
  %420 = extractvalue { i33, i1 } %419, 1
  %421 = extractvalue { i33, i1 } %419, 0
  %422 = icmp slt i33 %421, 0
  %423 = or i1 %420, %422
  br i1 %423, label %424, label %428, !prof !3

424:                                              ; preds = %415
  call void @llvm.trap() #16
  unreachable

425:                                              ; preds = %410, %386
  %426 = ptrtoint %"class.WTF::StringImpl"* %408 to i64
  %427 = bitcast i8* %406 to i64*
  store i64 %426, i64* %427, align 8
  br label %448

428:                                              ; preds = %415
  %429 = trunc i33 %421 to i32
  store i32 %429, i32* %416, align 4
  %430 = bitcast i8* %406 to %"class.WTF::StringImpl"**
  %431 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  %432 = ptrtoint %"class.WTF::StringImpl"* %408 to i64
  %433 = bitcast i8* %406 to i64*
  store i64 %432, i64* %433, align 8
  %434 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %434, label %448, label %435

435:                                              ; preds = %428
  %436 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %437 = load atomic i32, i32* %436 monotonic, align 4
  %438 = and i32 %437, 2
  %439 = icmp eq i32 %438, 0
  %440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %441 = load i32, i32* %440, align 4
  br i1 %439, label %442, label %444

442:                                              ; preds = %435
  %443 = add i32 %441, -1
  store i32 %443, i32* %440, align 4
  br label %444

444:                                              ; preds = %442, %435
  %445 = phi i32 [ %443, %442 ], [ %441, %435 ]
  %446 = icmp eq i32 %445, 0
  br i1 %446, label %447, label %448

447:                                              ; preds = %444
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #16
  br label %448

448:                                              ; preds = %425, %428, %444, %447
  %449 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %387, i64 0, i32 0, i32 0, i32 0
  %450 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %449, align 8
  %451 = icmp eq %"class.WTF::StringImpl"* %450, null
  br i1 %451, label %469, label %452

452:                                              ; preds = %448
  %453 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %454 = load atomic i32, i32* %453 monotonic, align 4
  %455 = and i32 %454, 2
  %456 = icmp eq i32 %455, 0
  br i1 %456, label %457, label %469

457:                                              ; preds = %452
  %458 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %450, i64 0, i32 0
  %459 = load i32, i32* %458, align 4
  %460 = zext i32 %459 to i33
  %461 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %460, i33 1) #16
  %462 = extractvalue { i33, i1 } %461, 1
  %463 = extractvalue { i33, i1 } %461, 0
  %464 = icmp slt i33 %463, 0
  %465 = or i1 %462, %464
  br i1 %465, label %466, label %467, !prof !3

466:                                              ; preds = %457
  call void @llvm.trap() #16
  unreachable

467:                                              ; preds = %457
  %468 = trunc i33 %463 to i32
  store i32 %468, i32* %458, align 4
  br label %469

469:                                              ; preds = %467, %452, %448
  %470 = ptrtoint %"class.WTF::StringImpl"* %450 to i64
  %471 = bitcast i8* %390 to i64*
  %472 = bitcast i8* %390 to %"class.WTF::StringImpl"**
  %473 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %472, align 8
  store i64 %470, i64* %471, align 8
  %474 = icmp eq %"class.WTF::StringImpl"* %473, null
  br i1 %474, label %488, label %475

475:                                              ; preds = %469
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %477 = load atomic i32, i32* %476 monotonic, align 4
  %478 = and i32 %477, 2
  %479 = icmp eq i32 %478, 0
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %473, i64 0, i32 0
  %481 = load i32, i32* %480, align 4
  br i1 %479, label %482, label %484

482:                                              ; preds = %475
  %483 = add i32 %481, -1
  store i32 %483, i32* %480, align 4
  br label %484

484:                                              ; preds = %482, %475
  %485 = phi i32 [ %483, %482 ], [ %481, %475 ]
  %486 = icmp eq i32 %485, 0
  br i1 %486, label %487, label %488

487:                                              ; preds = %484
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %473) #16
  br label %488

488:                                              ; preds = %469, %484, %487
  store i8* %388, i8** %40, align 8
  %489 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %42, align 8
  %490 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %44, align 8
  %491 = icmp ult %"class.std::__1::unique_ptr.4082"* %489, %490
  br i1 %491, label %492, label %497

492:                                              ; preds = %488
  %493 = ptrtoint i8* %388 to i64
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %39, align 8
  %494 = bitcast %"class.std::__1::unique_ptr.4082"* %489 to i64*
  store i64 %493, i64* %494, align 8
  %495 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %489, i64 1
  %496 = ptrtoint %"class.std::__1::unique_ptr.4082"* %495 to i64
  store i64 %496, i64* %45, align 8
  br label %498

497:                                              ; preds = %488
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS17FontVariationAxisENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.4080"* nonnull %30, %"class.std::__1::unique_ptr.4082"* nonnull dereferenceable(8) %7) #16
  br label %498

498:                                              ; preds = %492, %497
  %499 = load %"class.blink::protocol::CSS::FontVariationAxis"*, %"class.blink::protocol::CSS::FontVariationAxis"** %39, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %39, align 8
  %500 = icmp eq %"class.blink::protocol::CSS::FontVariationAxis"* %499, null
  br i1 %500, label %506, label %501

501:                                              ; preds = %498
  %502 = bitcast %"class.blink::protocol::CSS::FontVariationAxis"* %499 to void (%"class.blink::protocol::CSS::FontVariationAxis"*)***
  %503 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)**, void (%"class.blink::protocol::CSS::FontVariationAxis"*)*** %502, align 8
  %504 = getelementptr inbounds void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %503, i64 2
  %505 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %504, align 8
  call void %505(%"class.blink::protocol::CSS::FontVariationAxis"* nonnull %499) #16
  br label %506

506:                                              ; preds = %501, %498
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %38) #16
  %507 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %387, i64 1
  %508 = icmp eq %"struct.blink::VariationAxis"* %507, %35
  br i1 %508, label %46, label %386

509:                                              ; preds = %372
  %510 = getelementptr inbounds %"class.std::__1::vector.4080", %"class.std::__1::vector.4080"* %383, i64 0, i32 0, i32 0
  %511 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %510, align 8
  %512 = icmp eq %"class.std::__1::unique_ptr.4082"* %511, null
  br i1 %512, label %536, label %513

513:                                              ; preds = %509
  %514 = bitcast %"class.std::__1::unique_ptr.4082"* %511 to i8*
  %515 = getelementptr inbounds %"class.std::__1::vector.4080", %"class.std::__1::vector.4080"* %383, i64 0, i32 0, i32 1
  %516 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %515, align 8
  %517 = icmp eq %"class.std::__1::unique_ptr.4082"* %516, %511
  br i1 %517, label %534, label %518

518:                                              ; preds = %513, %529
  %519 = phi %"class.std::__1::unique_ptr.4082"* [ %520, %529 ], [ %516, %513 ]
  %520 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %519, i64 -1
  %521 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %520, i64 0, i32 0, i32 0, i32 0
  %522 = load %"class.blink::protocol::CSS::FontVariationAxis"*, %"class.blink::protocol::CSS::FontVariationAxis"** %521, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %521, align 8
  %523 = icmp eq %"class.blink::protocol::CSS::FontVariationAxis"* %522, null
  br i1 %523, label %529, label %524

524:                                              ; preds = %518
  %525 = bitcast %"class.blink::protocol::CSS::FontVariationAxis"* %522 to void (%"class.blink::protocol::CSS::FontVariationAxis"*)***
  %526 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)**, void (%"class.blink::protocol::CSS::FontVariationAxis"*)*** %525, align 8
  %527 = getelementptr inbounds void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %526, i64 2
  %528 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %527, align 8
  call void %528(%"class.blink::protocol::CSS::FontVariationAxis"* nonnull %522) #16
  br label %529

529:                                              ; preds = %524, %518
  %530 = icmp eq %"class.std::__1::unique_ptr.4082"* %520, %511
  br i1 %530, label %531, label %518

531:                                              ; preds = %529
  %532 = bitcast %"class.std::__1::vector.4080"* %383 to i8**
  %533 = load i8*, i8** %532, align 8
  br label %534

534:                                              ; preds = %531, %513
  %535 = phi i8* [ %533, %531 ], [ %514, %513 ]
  store %"class.std::__1::unique_ptr.4082"* %511, %"class.std::__1::unique_ptr.4082"** %515, align 8
  call void @_ZdlPv(i8* %535) #18
  br label %536

536:                                              ; preds = %534, %509
  %537 = bitcast %"class.std::__1::vector.4080"* %383 to i8*
  call void @_ZdlPv(i8* %537) #18
  br label %538

538:                                              ; preds = %372, %536
  %539 = ptrtoint i8* %47 to i64
  br i1 %335, label %553, label %540

540:                                              ; preds = %538
  %541 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %542 = load atomic i32, i32* %541 monotonic, align 4
  %543 = and i32 %542, 2
  %544 = icmp eq i32 %543, 0
  %545 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %333, i64 0, i32 0
  %546 = load i32, i32* %545, align 4
  br i1 %544, label %547, label %549

547:                                              ; preds = %540
  %548 = add i32 %546, -1
  store i32 %548, i32* %545, align 4
  br label %549

549:                                              ; preds = %547, %540
  %550 = phi i32 [ %548, %547 ], [ %546, %540 ]
  %551 = icmp eq i32 %550, 0
  br i1 %551, label %552, label %553

552:                                              ; preds = %549
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %333) #16
  br label %553

553:                                              ; preds = %538, %549, %552
  br i1 %254, label %567, label %554

554:                                              ; preds = %553
  %555 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %556 = load atomic i32, i32* %555 monotonic, align 4
  %557 = and i32 %556, 2
  %558 = icmp eq i32 %557, 0
  %559 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %252, i64 0, i32 0
  %560 = load i32, i32* %559, align 4
  br i1 %558, label %561, label %563

561:                                              ; preds = %554
  %562 = add i32 %560, -1
  store i32 %562, i32* %559, align 4
  br label %563

563:                                              ; preds = %561, %554
  %564 = phi i32 [ %562, %561 ], [ %560, %554 ]
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %567

566:                                              ; preds = %563
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %252) #16
  br label %567

567:                                              ; preds = %553, %563, %566
  br i1 %214, label %581, label %568

568:                                              ; preds = %567
  %569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %570 = load atomic i32, i32* %569 monotonic, align 4
  %571 = and i32 %570, 2
  %572 = icmp eq i32 %571, 0
  %573 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %212, i64 0, i32 0
  %574 = load i32, i32* %573, align 4
  br i1 %572, label %575, label %577

575:                                              ; preds = %568
  %576 = add i32 %574, -1
  store i32 %576, i32* %573, align 4
  br label %577

577:                                              ; preds = %575, %568
  %578 = phi i32 [ %576, %575 ], [ %574, %568 ]
  %579 = icmp eq i32 %578, 0
  br i1 %579, label %580, label %581

580:                                              ; preds = %577
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %212) #16
  br label %581

581:                                              ; preds = %567, %577, %580
  br i1 %174, label %595, label %582

582:                                              ; preds = %581
  %583 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %584 = load atomic i32, i32* %583 monotonic, align 4
  %585 = and i32 %584, 2
  %586 = icmp eq i32 %585, 0
  %587 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %588 = load i32, i32* %587, align 4
  br i1 %586, label %589, label %591

589:                                              ; preds = %582
  %590 = add i32 %588, -1
  store i32 %590, i32* %587, align 4
  br label %591

591:                                              ; preds = %589, %582
  %592 = phi i32 [ %590, %589 ], [ %588, %582 ]
  %593 = icmp eq i32 %592, 0
  br i1 %593, label %594, label %595

594:                                              ; preds = %591
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %172) #16
  br label %595

595:                                              ; preds = %581, %591, %594
  br i1 %134, label %609, label %596

596:                                              ; preds = %595
  %597 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %598 = load atomic i32, i32* %597 monotonic, align 4
  %599 = and i32 %598, 2
  %600 = icmp eq i32 %599, 0
  %601 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %132, i64 0, i32 0
  %602 = load i32, i32* %601, align 4
  br i1 %600, label %603, label %605

603:                                              ; preds = %596
  %604 = add i32 %602, -1
  store i32 %604, i32* %601, align 4
  br label %605

605:                                              ; preds = %603, %596
  %606 = phi i32 [ %604, %603 ], [ %602, %596 ]
  %607 = icmp eq i32 %606, 0
  br i1 %607, label %608, label %609

608:                                              ; preds = %605
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %132) #16
  br label %609

609:                                              ; preds = %595, %605, %608
  br i1 %94, label %623, label %610

610:                                              ; preds = %609
  %611 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %612 = load atomic i32, i32* %611 monotonic, align 4
  %613 = and i32 %612, 2
  %614 = icmp eq i32 %613, 0
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %616 = load i32, i32* %615, align 4
  br i1 %614, label %617, label %619

617:                                              ; preds = %610
  %618 = add i32 %616, -1
  store i32 %618, i32* %615, align 4
  br label %619

619:                                              ; preds = %617, %610
  %620 = phi i32 [ %618, %617 ], [ %616, %610 ]
  %621 = icmp eq i32 %620, 0
  br i1 %621, label %622, label %623

622:                                              ; preds = %619
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16
  br label %623

623:                                              ; preds = %622, %619, %609
  %624 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %625 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %624, align 8
  %626 = bitcast %"class.crdtp::detail::PtrMaybe"* %8 to i64*
  store i64 %539, i64* %626, align 8
  call void @_ZN5blink8protocol3CSS8Frontend12fontsUpdatedEN5crdtp6detail8PtrMaybeINS1_8FontFaceEEE(%"class.blink::protocol::CSS::Frontend"* %625, %"class.crdtp::detail::PtrMaybe"* nonnull %8) #16
  %627 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe", %"class.crdtp::detail::PtrMaybe"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %628 = load %"class.blink::protocol::CSS::FontFace"*, %"class.blink::protocol::CSS::FontFace"** %627, align 8
  store %"class.blink::protocol::CSS::FontFace"* null, %"class.blink::protocol::CSS::FontFace"** %627, align 8
  %629 = icmp eq %"class.blink::protocol::CSS::FontFace"* %628, null
  br i1 %629, label %635, label %630

630:                                              ; preds = %623
  %631 = bitcast %"class.blink::protocol::CSS::FontFace"* %628 to void (%"class.blink::protocol::CSS::FontFace"*)***
  %632 = load void (%"class.blink::protocol::CSS::FontFace"*)**, void (%"class.blink::protocol::CSS::FontFace"*)*** %631, align 8
  %633 = getelementptr inbounds void (%"class.blink::protocol::CSS::FontFace"*)*, void (%"class.blink::protocol::CSS::FontFace"*)** %632, i64 2
  %634 = load void (%"class.blink::protocol::CSS::FontFace"*)*, void (%"class.blink::protocol::CSS::FontFace"*)** %633, align 8
  call void %634(%"class.blink::protocol::CSS::FontFace"* nonnull %628) #16
  br label %635

635:                                              ; preds = %630, %623
  %636 = inttoptr i64 %380 to %"class.std::__1::vector.4080"*
  %637 = icmp eq i64 %380, 0
  br i1 %637, label %667, label %638

638:                                              ; preds = %635
  %639 = getelementptr inbounds %"class.std::__1::vector.4080", %"class.std::__1::vector.4080"* %636, i64 0, i32 0, i32 0
  %640 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %639, align 8
  %641 = icmp eq %"class.std::__1::unique_ptr.4082"* %640, null
  br i1 %641, label %665, label %642

642:                                              ; preds = %638
  %643 = bitcast %"class.std::__1::unique_ptr.4082"* %640 to i8*
  %644 = getelementptr inbounds %"class.std::__1::vector.4080", %"class.std::__1::vector.4080"* %636, i64 0, i32 0, i32 1
  %645 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %644, align 8
  %646 = icmp eq %"class.std::__1::unique_ptr.4082"* %645, %640
  br i1 %646, label %663, label %647

647:                                              ; preds = %642, %658
  %648 = phi %"class.std::__1::unique_ptr.4082"* [ %649, %658 ], [ %645, %642 ]
  %649 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %648, i64 -1
  %650 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %649, i64 0, i32 0, i32 0, i32 0
  %651 = load %"class.blink::protocol::CSS::FontVariationAxis"*, %"class.blink::protocol::CSS::FontVariationAxis"** %650, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %650, align 8
  %652 = icmp eq %"class.blink::protocol::CSS::FontVariationAxis"* %651, null
  br i1 %652, label %658, label %653

653:                                              ; preds = %647
  %654 = bitcast %"class.blink::protocol::CSS::FontVariationAxis"* %651 to void (%"class.blink::protocol::CSS::FontVariationAxis"*)***
  %655 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)**, void (%"class.blink::protocol::CSS::FontVariationAxis"*)*** %654, align 8
  %656 = getelementptr inbounds void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %655, i64 2
  %657 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %656, align 8
  call void %657(%"class.blink::protocol::CSS::FontVariationAxis"* nonnull %651) #16
  br label %658

658:                                              ; preds = %653, %647
  %659 = icmp eq %"class.std::__1::unique_ptr.4082"* %649, %640
  br i1 %659, label %660, label %647

660:                                              ; preds = %658
  %661 = inttoptr i64 %380 to i8**
  %662 = load i8*, i8** %661, align 8
  br label %663

663:                                              ; preds = %660, %642
  %664 = phi i8* [ %662, %660 ], [ %643, %642 ]
  store %"class.std::__1::unique_ptr.4082"* %640, %"class.std::__1::unique_ptr.4082"** %644, align 8
  call void @_ZdlPv(i8* %664) #18
  br label %665

665:                                              ; preds = %663, %638
  %666 = inttoptr i64 %380 to i8*
  call void @_ZdlPv(i8* %666) #18
  br label %667

667:                                              ; preds = %635, %665
  %668 = load %"struct.blink::VariationAxis"*, %"struct.blink::VariationAxis"** %26, align 8
  %669 = icmp eq %"struct.blink::VariationAxis"* %668, null
  br i1 %669, label %720, label %670, !prof !2

670:                                              ; preds = %667
  %671 = bitcast %"struct.blink::VariationAxis"* %668 to i8*
  %672 = load i32, i32* %27, align 4
  %673 = icmp eq i32 %672, 0
  br i1 %673, label %718, label %674, !prof !3

674:                                              ; preds = %670
  %675 = zext i32 %672 to i64
  %676 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %668, i64 %675
  br label %677

677:                                              ; preds = %674, %712
  %678 = phi %"struct.blink::VariationAxis"* [ %713, %712 ], [ %668, %674 ]
  %679 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %678, i64 0, i32 1, i32 0, i32 0
  %680 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %679, align 8
  %681 = icmp eq %"class.WTF::StringImpl"* %680, null
  br i1 %681, label %695, label %682

682:                                              ; preds = %677
  %683 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %684 = load atomic i32, i32* %683 monotonic, align 4
  %685 = and i32 %684, 2
  %686 = icmp eq i32 %685, 0
  %687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %680, i64 0, i32 0
  %688 = load i32, i32* %687, align 4
  br i1 %686, label %689, label %691

689:                                              ; preds = %682
  %690 = add i32 %688, -1
  store i32 %690, i32* %687, align 4
  br label %691

691:                                              ; preds = %689, %682
  %692 = phi i32 [ %690, %689 ], [ %688, %682 ]
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %695

694:                                              ; preds = %691
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %680) #16
  br label %695

695:                                              ; preds = %694, %691, %677
  %696 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %678, i64 0, i32 0, i32 0, i32 0
  %697 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %696, align 8
  %698 = icmp eq %"class.WTF::StringImpl"* %697, null
  br i1 %698, label %712, label %699

699:                                              ; preds = %695
  %700 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %701 = load atomic i32, i32* %700 monotonic, align 4
  %702 = and i32 %701, 2
  %703 = icmp eq i32 %702, 0
  %704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %697, i64 0, i32 0
  %705 = load i32, i32* %704, align 4
  br i1 %703, label %706, label %708

706:                                              ; preds = %699
  %707 = add i32 %705, -1
  store i32 %707, i32* %704, align 4
  br label %708

708:                                              ; preds = %706, %699
  %709 = phi i32 [ %707, %706 ], [ %705, %699 ]
  %710 = icmp eq i32 %709, 0
  br i1 %710, label %711, label %712

711:                                              ; preds = %708
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %697) #16
  br label %712

712:                                              ; preds = %711, %708, %695
  %713 = getelementptr inbounds %"struct.blink::VariationAxis", %"struct.blink::VariationAxis"* %678, i64 1
  %714 = icmp eq %"struct.blink::VariationAxis"* %713, %676
  br i1 %714, label %715, label %677

715:                                              ; preds = %712
  store i32 0, i32* %27, align 4
  %716 = bitcast %"class.WTF::Vector.4102"* %6 to i8**
  %717 = load i8*, i8** %716, align 8
  br label %718

718:                                              ; preds = %715, %670
  %719 = phi i8* [ %717, %715 ], [ %671, %670 ]
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %719) #16
  store %"struct.blink::VariationAxis"* null, %"struct.blink::VariationAxis"** %26, align 8
  br label %720

720:                                              ; preds = %667, %718
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #16
  br label %721

721:                                              ; preds = %19, %12, %720
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.3688", align 8
  %4 = alloca %"class.blink::WebVector.3688", align 8
  %5 = alloca %"class.blink::WebVector.3688", align 8
  %6 = alloca %"class.blink::HeapVector.4001", align 8
  tail call void @_ZN5blink17InspectorCSSAgent5ResetEv(%"class.blink::InspectorCSSAgent"* %1)
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 1
  tail call void @_ZN5blink17InspectorDOMAgent17RemoveDOMListenerEPNS0_11DOMListenerE(%"class.blink::InspectorDOMAgent"* %8, %"struct.blink::InspectorDOMAgent::DOMListener"* %9) #16
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  %11 = load %"class.blink::CoreProbeSink"*, %"class.blink::CoreProbeSink"** %10, align 8
  tail call void @_ZN5blink13CoreProbeSink23RemoveInspectorCSSAgentEPNS_17InspectorCSSAgentE(%"class.blink::CoreProbeSink"* %11, %"class.blink::InspectorCSSAgent"* %1) #16
  %12 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  store i8 0, i8* %12, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 20
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 20, i32 2
  %15 = load i8, i8* %14, align 1, !range !4
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %39, label %17

17:                                               ; preds = %2
  %18 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 20, i32 1
  %19 = load i8, i8* %18, align 8, !range !4
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %21, label %26

21:                                               ; preds = %17
  %22 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %13 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %23 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %22, align 8
  %24 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %23, i64 2
  %25 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %24, align 8
  tail call void %25(%"class.blink::InspectorAgentState::SimpleField"* %13) #16
  br label %39

26:                                               ; preds = %17
  store i8 0, i8* %14, align 1
  %27 = bitcast %"class.blink::WebVector.3688"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %5, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #16
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector.3688"* nonnull %5) #16
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 20, i32 0, i32 2
  %30 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 20, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %30, %"class.WTF::String"* dereferenceable(8) %31, %"class.blink::WebVector.3688"* nonnull %5) #16
  %32 = load i8*, i8** %28, align 8
  %33 = icmp eq i8* %32, null
  br i1 %33, label %38, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %5, i64 0, i32 0, i32 0, i32 1
  %36 = ptrtoint i8* %32 to i64
  %37 = bitcast i8** %35 to i64*
  store i64 %36, i64* %37, align 8
  call void @_ZdlPv(i8* nonnull %32) #18
  br label %38

38:                                               ; preds = %34, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  br label %39

39:                                               ; preds = %2, %21, %38
  %40 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 6, i32 0, i32 0
  %41 = load %"class.blink::InspectorResourceContentLoader"*, %"class.blink::InspectorResourceContentLoader"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 18
  %43 = load i32, i32* %42, align 8
  call void @_ZN5blink30InspectorResourceContentLoader6CancelEi(%"class.blink::InspectorResourceContentLoader"* %41, i32 %43) #16
  %44 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23
  %45 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 2
  %46 = load i8, i8* %45, align 1, !range !4
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %70, label %48

48:                                               ; preds = %39
  %49 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 1
  %50 = load i8, i8* %49, align 8, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %57

52:                                               ; preds = %48
  %53 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %44 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %54 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %54, i64 2
  %56 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %55, align 8
  call void %56(%"class.blink::InspectorAgentState::SimpleField"* %44) #16
  br label %70

57:                                               ; preds = %48
  store i8 0, i8* %45, align 1
  %58 = bitcast %"class.blink::WebVector.3688"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %58) #16
  %59 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %58, i8 0, i64 24, i1 false) #16
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext false, %"class.blink::WebVector.3688"* nonnull %4) #16
  %60 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 0, i32 2
  %61 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %61, %"class.WTF::String"* dereferenceable(8) %62, %"class.blink::WebVector.3688"* nonnull %4) #16
  %63 = load i8*, i8** %59, align 8
  %64 = icmp eq i8* %63, null
  br i1 %64, label %69, label %65

65:                                               ; preds = %57
  %66 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %4, i64 0, i32 0, i32 0, i32 1
  %67 = ptrtoint i8* %63 to i64
  %68 = bitcast i8** %66 to i64*
  store i64 %67, i64* %68, align 8
  call void @_ZdlPv(i8* nonnull %63) #18
  br label %69

69:                                               ; preds = %65, %57
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %58) #16
  br label %70

70:                                               ; preds = %39, %52, %69
  %71 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24
  %72 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 2
  %73 = load i8, i8* %72, align 1, !range !4
  %74 = icmp eq i8 %73, 1
  br i1 %74, label %97, label %75

75:                                               ; preds = %70
  %76 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 1
  %77 = load i8, i8* %76, align 8, !range !4
  %78 = icmp eq i8 %77, 1
  br i1 %78, label %79, label %84

79:                                               ; preds = %75
  %80 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %71 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %81 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %81, i64 2
  %83 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %82, align 8
  call void %83(%"class.blink::InspectorAgentState::SimpleField"* %71) #16
  br label %97

84:                                               ; preds = %75
  store i8 1, i8* %72, align 1
  %85 = bitcast %"class.blink::WebVector.3688"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %85) #16
  %86 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %85, i8 0, i64 24, i1 false) #16
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.3688"* nonnull %3) #16
  %87 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 0, i32 2
  %88 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %87, align 8
  %89 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %88, %"class.WTF::String"* dereferenceable(8) %89, %"class.blink::WebVector.3688"* nonnull %3) #16
  %90 = load i8*, i8** %86, align 8
  %91 = icmp eq i8* %90, null
  br i1 %91, label %96, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %3, i64 0, i32 0, i32 0, i32 1
  %94 = ptrtoint i8* %90 to i64
  %95 = bitcast i8** %93 to i64*
  store i64 %94, i64* %95, align 8
  call void @_ZdlPv(i8* nonnull %90) #18
  br label %96

96:                                               ; preds = %92, %84
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %85) #16
  br label %97

97:                                               ; preds = %70, %79, %96
  %98 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 16
  %99 = getelementptr inbounds %"class.blink::Member.1313", %"class.blink::Member.1313"* %98, i64 0, i32 0, i32 0
  %100 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %99, align 8
  %101 = icmp eq %"class.blink::StyleRuleUsageTracker"* %100, null
  br i1 %101, label %128, label %102

102:                                              ; preds = %97
  %103 = bitcast %"class.blink::Member.1313"* %98 to i64*
  store atomic i64 0, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #16
  br label %108

108:                                              ; preds = %106, %102
  %109 = bitcast %"class.blink::HeapVector.4001"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %109) #16
  %110 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %7, align 8
  call void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.4001"* nonnull sret %6, %"class.blink::InspectorDOMAgent"* %110) #16
  %111 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %111, align 8
  %113 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %6, i64 0, i32 0, i32 0, i32 0, i32 2
  %114 = load i32, i32* %113, align 4
  %115 = zext i32 %114 to i64
  %116 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %112, i64 %115
  %117 = icmp eq i32 %114, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %119, %108
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %109) #16
  br label %128

119:                                              ; preds = %108, %119
  %120 = phi %"class.blink::Member.326"* [ %126, %119 ], [ %112, %108 ]
  %121 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %120, i64 0, i32 0, i32 0
  %122 = load %"class.blink::Document"*, %"class.blink::Document"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %122, i64 0, i32 59, i32 0, i32 0
  %124 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %123, align 8
  %125 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %99, align 8
  call void @_ZN5blink11StyleEngine19SetRuleUsageTrackerEPNS_21StyleRuleUsageTrackerE(%"class.blink::StyleEngine"* %124, %"class.blink::StyleRuleUsageTracker"* %125) #16
  %126 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %120, i64 1
  %127 = icmp eq %"class.blink::Member.326"* %126, %116
  br i1 %127, label %118, label %119

128:                                              ; preds = %97, %118
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void
}

declare void @_ZN5blink17InspectorDOMAgent17RemoveDOMListenerEPNS0_11DOMListenerE(%"class.blink::InspectorDOMAgent"*, %"struct.blink::InspectorDOMAgent::DOMListener"*) local_unnamed_addr #1

declare void @_ZN5blink13CoreProbeSink23RemoveInspectorCSSAgentEPNS_17InspectorCSSAgentE(%"class.blink::CoreProbeSink"*, %"class.blink::InspectorCSSAgent"*) local_unnamed_addr #1

declare void @_ZN5blink30InspectorResourceContentLoader6CancelEi(%"class.blink::InspectorResourceContentLoader"*, i32) local_unnamed_addr #1

declare void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent7disableEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorCSSAgent"* nocapture, %"class.blink::LocalFrame"* readnone) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectedFrames", %"class.blink::InspectedFrames"* %4, i64 0, i32 1, i32 0, i32 0
  %6 = load %"class.blink::LocalFrame"*, %"class.blink::LocalFrame"** %5, align 8
  %7 = icmp eq %"class.blink::LocalFrame"* %6, %1
  br i1 %7, label %8, label %9

8:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorCSSAgent5ResetEv(%"class.blink::InspectorCSSAgent"* %0)
  br label %9

9:                                                ; preds = %8, %2
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent23MediaQueryResultChangedEv(%"class.blink::InspectorCSSAgent"*) local_unnamed_addr #0 align 2 {
  tail call void @_ZN5blink17InspectorCSSAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorCSSAgent"* %0)
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %3 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %2, align 8
  tail call void @_ZN5blink8protocol3CSS8Frontend23mediaQueryResultChangedEv(%"class.blink::protocol::CSS::Frontend"* %3) #16
  ret void
}

declare void @_ZN5blink8protocol3CSS8Frontend23mediaQueryResultChangedEv(%"class.blink::protocol::CSS::Frontend"*) local_unnamed_addr #1

declare void @_ZN5blink8protocol3CSS8Frontend12fontsUpdatedEN5crdtp6detail8PtrMaybeINS1_8FontFaceEEE(%"class.blink::protocol::CSS::Frontend"*, %"class.crdtp::detail::PtrMaybe"*) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare void @_ZNK5blink22FontCustomPlatformData16GetVariationAxesEv(%"class.WTF::Vector.4102"* sret, %"class.blink::FontCustomPlatformData"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8FontFace5styleEv(%"class.blink::FontFace"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8FontFace7variantEv(%"class.blink::FontFace"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8FontFace6weightEv(%"class.blink::FontFace"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8FontFace7stretchEv(%"class.blink::FontFace"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8FontFace12unicodeRangeEv(%"class.blink::FontFace"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink22FontCustomPlatformData22FamilyNameForInspectorEv(%"class.blink::FontCustomPlatformData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent24ActiveStyleSheetsUpdatedEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Document"*, align 8
  store %"class.blink::Document"* %1, %"class.blink::Document"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0, i32 0
  %5 = call { %"class.blink::Member.326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.3303"* %4, %"class.blink::Document"** nonnull dereferenceable(8) %3, %"class.blink::Document"** nonnull dereferenceable(8) %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent29CollectAllDocumentStyleSheetsEPNS_8DocumentERNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::Document"* nocapture readonly, %"class.blink::HeapVector.383"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.1298", align 8
  %4 = bitcast %"class.blink::HeapVector.1298"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %0, i64 0, i32 59, i32 0, i32 0
  %6 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %5, align 8
  call void @_ZN5blink11StyleEngine29ActiveStyleSheetsForInspectorEv(%"class.blink::HeapVector.1298"* nonnull sret %3, %"class.blink::StyleEngine"* %6) #16
  %7 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %8 = load %"struct.std::__1::pair.1304"*, %"struct.std::__1::pair.1304"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %8, i64 %11
  %13 = icmp eq i32 %10, 0
  br i1 %13, label %14, label %15

14:                                               ; preds = %15, %2
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %4) #16
  ret void

15:                                               ; preds = %2, %15
  %16 = phi %"struct.std::__1::pair.1304"* [ %19, %15 ], [ %8, %2 ]
  %17 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %16, i64 0, i32 0, i32 0, i32 0
  %18 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %17, align 8
  call void @_ZN5blink17InspectorCSSAgent18CollectStyleSheetsEPNS_13CSSStyleSheetERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::CSSStyleSheet"* %18, %"class.blink::HeapVector.383"* dereferenceable(16) %1)
  %19 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %16, i64 1
  %20 = icmp eq %"struct.std::__1::pair.1304"* %19, %12
  br i1 %20, label %14, label %15
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent20SetActiveStyleSheetsEPNS_8DocumentERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"*, %"class.blink::HeapVector.383"* nocapture readonly dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::Document"*, align 8
  %5 = alloca %"class.blink::HeapHashSet.4120"*, align 8
  %6 = alloca %"class.blink::HeapHashSet.4120", align 8
  %7 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %8 = alloca %"class.blink::HeapHashSet.4120", align 8
  %9 = alloca %"class.blink::HeapVector.383", align 8
  %10 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %11 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca %"class.blink::CSSStyleSheet"*, align 8
  store %"class.blink::Document"* %1, %"class.blink::Document"** %4, align 8
  %15 = bitcast %"class.blink::HeapHashSet.4120"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11, i32 0
  %17 = call %"class.blink::HeapHashSet.4120"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_8DocumentEEENS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS6_EENS_10HashTraitsIS7_EEEEEENS8_IS3_EENSA_IS4_EENSA_ISD_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3295"* %16, %"class.blink::Document"** nonnull dereferenceable(8) %4)
  store %"class.blink::HeapHashSet.4120"* %17, %"class.blink::HeapHashSet.4120"** %5, align 8
  %18 = icmp eq %"class.blink::HeapHashSet.4120"* %17, null
  br i1 %18, label %19, label %42

19:                                               ; preds = %3
  %20 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64 24) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 20, i1 false) #16
  %21 = getelementptr inbounds i8, i8* %20, i64 -4
  %22 = bitcast i8* %21 to i16*
  %23 = load atomic i16, i16* %22 monotonic, align 2
  %24 = or i16 %23, 1
  store atomic i16 %24, i16* %22 release, align 2
  %25 = bitcast %"class.blink::HeapHashSet.4120"** %5 to i8**
  store i8* %20, i8** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::HashMap.3295", %"class.WTF::HashMap.3295"* %16, i64 0, i32 0
  %27 = call { %"struct.WTF::KeyValuePair.3298"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISL_SH_SM_EERPS3_RPSD_EENS_18HashTableAddResultISN_SF_EEOT0_OT1_(%"class.WTF::HashTable.3296"* %26, %"class.blink::Document"** nonnull dereferenceable(8) %4, %"class.blink::HeapHashSet.4120"** nonnull dereferenceable(8) %5) #16
  %28 = extractvalue { %"struct.WTF::KeyValuePair.3298"*, i8 } %27, 1
  %29 = and i8 %28, 1
  %30 = icmp eq i8 %29, 0
  br i1 %30, label %31, label %42

31:                                               ; preds = %19
  %32 = extractvalue { %"struct.WTF::KeyValuePair.3298"*, i8 } %27, 0
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %32, i64 0, i32 1
  %34 = load %"class.blink::HeapHashSet.4120"*, %"class.blink::HeapHashSet.4120"** %5, align 8
  %35 = ptrtoint %"class.blink::HeapHashSet.4120"* %34 to i64
  %36 = bitcast %"class.blink::Member.4982"* %33 to i64*
  store atomic i64 %35, i64* %36 monotonic, align 8
  %37 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %42, label %39

39:                                               ; preds = %31
  %40 = bitcast %"class.blink::HeapHashSet.4120"* %34 to i8*
  %41 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %40) #16
  br label %42

42:                                               ; preds = %39, %31, %19, %3
  %43 = bitcast %"class.blink::HeapHashSet.4120"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %43) #16
  %44 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %6, i64 0, i32 0, i32 0, i32 0
  %45 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %6, i64 0, i32 0, i32 0, i32 1
  %46 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %6, i64 0, i32 0, i32 0, i32 2
  %47 = bitcast %"class.blink::HeapHashSet.4120"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %47, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 20, i1 false) #16
  %48 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %2, i64 0, i32 0, i32 0, i32 0, i32 0
  %49 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %48, align 8
  %50 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4
  %52 = zext i32 %51 to i64
  %53 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %49, i64 %52
  %54 = icmp eq i32 %51, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %42
  %56 = bitcast %"class.blink::CSSStyleSheet"** %7 to i8*
  %57 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %6, i64 0, i32 0, i32 0
  br label %130

58:                                               ; preds = %199, %42
  %59 = bitcast %"class.blink::HeapHashSet.4120"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %59) #16
  %60 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %8, i64 0, i32 0, i32 0, i32 0
  %61 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %8, i64 0, i32 0, i32 0, i32 1
  %62 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %8, i64 0, i32 0, i32 0, i32 2
  %63 = bitcast %"class.blink::HeapHashSet.4120"* %8 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 24, i1 false)
  %64 = load %"class.blink::HeapHashSet.4120"*, %"class.blink::HeapHashSet.4120"** %5, align 8
  %65 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %8, i64 0, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %64, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %59, i8 0, i64 20, i1 false) #16
  %67 = load i32, i32* %66, align 4
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %104, label %69

69:                                               ; preds = %58
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.4124"* nonnull %65, i32 %67) #16
  %70 = load i32, i32* %66, align 4
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %72, align 8
  %74 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %64, i64 0, i32 0, i32 0, i32 1
  %75 = load i32, i32* %74, align 8
  %76 = zext i32 %75 to i64
  %77 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %73, i64 %76
  br i1 %71, label %104, label %78

78:                                               ; preds = %69
  %79 = icmp eq i32 %75, 0
  br i1 %79, label %87, label %80

80:                                               ; preds = %78, %84
  %81 = phi %"class.blink::Member.389"* [ %85, %84 ], [ %73, %78 ]
  %82 = bitcast %"class.blink::Member.389"* %81 to i64*
  %83 = load i64, i64* %82, align 8
  switch i64 %83, label %87 [
    i64 -1, label %84
    i64 0, label %84
  ]

84:                                               ; preds = %80, %80
  %85 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %81, i64 1
  %86 = icmp eq %"class.blink::Member.389"* %85, %77
  br i1 %86, label %104, label %80

87:                                               ; preds = %80, %78
  %88 = phi %"class.blink::Member.389"* [ %73, %78 ], [ %81, %80 ]
  %89 = icmp eq %"class.blink::Member.389"* %88, %77
  br i1 %89, label %104, label %90

90:                                               ; preds = %87, %102
  %91 = phi %"class.blink::Member.389"* [ %96, %102 ], [ %88, %87 ]
  %92 = call { %"class.blink::Member.389"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4124"* nonnull %65, %"class.blink::Member.389"* dereferenceable(8) %91, %"class.blink::Member.389"* dereferenceable(8) %91) #16
  %93 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %91, i64 1
  %94 = icmp eq %"class.blink::Member.389"* %93, %77
  br i1 %94, label %104, label %95

95:                                               ; preds = %90, %99
  %96 = phi %"class.blink::Member.389"* [ %100, %99 ], [ %93, %90 ]
  %97 = bitcast %"class.blink::Member.389"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  switch i64 %98, label %102 [
    i64 -1, label %99
    i64 0, label %99
  ]

99:                                               ; preds = %95, %95
  %100 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %96, i64 1
  %101 = icmp eq %"class.blink::Member.389"* %100, %77
  br i1 %101, label %104, label %95

102:                                              ; preds = %95
  %103 = icmp eq %"class.blink::Member.389"* %96, %77
  br i1 %103, label %104, label %90

104:                                              ; preds = %84, %90, %102, %99, %58, %69, %87
  %105 = bitcast %"class.blink::HeapVector.383"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %105) #16
  %106 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %9, i64 0, i32 0, i32 0, i32 0, i32 0
  %107 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %9, i64 0, i32 0, i32 0, i32 0, i32 1
  %108 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %9, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 0, i64 16, i1 false) #16
  %109 = load i32, i32* %46, align 4
  %110 = icmp eq i32 %109, 0
  %111 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %44, align 8
  %112 = load i32, i32* %45, align 8
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %111, i64 %113
  br i1 %110, label %204, label %115

115:                                              ; preds = %104
  %116 = icmp eq i32 %112, 0
  br i1 %116, label %124, label %117

117:                                              ; preds = %115, %121
  %118 = phi %"class.blink::Member.389"* [ %122, %121 ], [ %111, %115 ]
  %119 = bitcast %"class.blink::Member.389"* %118 to i64*
  %120 = load i64, i64* %119, align 8
  switch i64 %120, label %124 [
    i64 -1, label %121
    i64 0, label %121
  ]

121:                                              ; preds = %117, %117
  %122 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %118, i64 1
  %123 = icmp eq %"class.blink::Member.389"* %122, %114
  br i1 %123, label %204, label %117

124:                                              ; preds = %117, %115
  %125 = phi %"class.blink::Member.389"* [ %111, %115 ], [ %118, %117 ]
  %126 = icmp eq %"class.blink::Member.389"* %125, %114
  br i1 %126, label %204, label %127

127:                                              ; preds = %124
  %128 = bitcast %"class.blink::CSSStyleSheet"** %10 to i8*
  %129 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %9, i64 0, i32 0
  br label %234

130:                                              ; preds = %202, %55
  %131 = phi %"class.blink::Member.389"* [ null, %55 ], [ %203, %202 ]
  %132 = phi %"class.blink::Member.389"* [ %49, %55 ], [ %200, %202 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %7, align 8
  %133 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %132, i64 0, i32 0, i32 0
  %134 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %133, align 8
  store %"class.blink::CSSStyleSheet"* %134, %"class.blink::CSSStyleSheet"** %7, align 8
  %135 = ptrtoint %"class.blink::CSSStyleSheet"* %134 to i64
  %136 = icmp eq %"class.blink::Member.389"* %131, null
  br i1 %136, label %197, label %137

137:                                              ; preds = %130
  %138 = load i32, i32* %45, align 8
  %139 = add i32 %138, -1
  %140 = zext i32 %139 to i64
  %141 = shl i64 %135, 32
  %142 = xor i64 %141, -1
  %143 = add i64 %142, %135
  %144 = lshr i64 %143, 22
  %145 = xor i64 %144, %143
  %146 = shl i64 %145, 13
  %147 = xor i64 %146, -1
  %148 = add i64 %145, %147
  %149 = lshr i64 %148, 8
  %150 = xor i64 %149, %148
  %151 = mul i64 %150, 9
  %152 = lshr i64 %151, 15
  %153 = xor i64 %152, %151
  %154 = shl i64 %153, 27
  %155 = xor i64 %154, -1
  %156 = add i64 %153, %155
  %157 = lshr i64 %156, 31
  %158 = xor i64 %157, %156
  %159 = trunc i64 %158 to i32
  %160 = and i32 %139, %159
  %161 = zext i32 %160 to i64
  %162 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %131, i64 %161
  %163 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %162, i64 0, i32 0, i32 0
  %164 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %163, align 8
  %165 = icmp eq %"class.blink::CSSStyleSheet"* %164, %134
  br i1 %165, label %194, label %166

166:                                              ; preds = %137
  %167 = xor i32 %159, -1
  %168 = lshr i32 %159, 23
  %169 = add i32 %168, %167
  %170 = shl i32 %169, 12
  %171 = xor i32 %170, %169
  %172 = lshr i32 %171, 7
  %173 = xor i32 %172, %171
  %174 = shl i32 %173, 2
  %175 = xor i32 %174, %173
  %176 = lshr i32 %175, 20
  %177 = xor i32 %176, %175
  %178 = or i32 %177, 1
  %179 = zext i32 %178 to i64
  br label %180

180:                                              ; preds = %185, %166
  %181 = phi %"class.blink::CSSStyleSheet"* [ %164, %166 ], [ %192, %185 ]
  %182 = phi i64 [ %161, %166 ], [ %189, %185 ]
  %183 = phi i64 [ 0, %166 ], [ %187, %185 ]
  %184 = icmp eq %"class.blink::CSSStyleSheet"* %181, null
  br i1 %184, label %197, label %185

185:                                              ; preds = %180
  %186 = icmp eq i64 %183, 0
  %187 = select i1 %186, i64 %179, i64 %183
  %188 = add i64 %187, %182
  %189 = and i64 %188, %140
  %190 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %131, i64 %189
  %191 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %190, i64 0, i32 0, i32 0
  %192 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %191, align 8
  %193 = icmp eq %"class.blink::CSSStyleSheet"* %192, %134
  br i1 %193, label %194, label %180

194:                                              ; preds = %185, %137
  %195 = phi %"class.blink::Member.389"* [ %162, %137 ], [ %190, %185 ]
  %196 = icmp eq %"class.blink::Member.389"* %195, null
  br i1 %196, label %197, label %199

197:                                              ; preds = %180, %194, %130
  %198 = call { %"class.blink::Member.389"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4124"* nonnull %57, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %7, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %7) #16
  br label %199

199:                                              ; preds = %194, %197
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  %200 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %132, i64 1
  %201 = icmp eq %"class.blink::Member.389"* %200, %53
  br i1 %201, label %58, label %202

202:                                              ; preds = %199
  %203 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %44, align 8
  br label %130

204:                                              ; preds = %121, %362, %372, %369, %104, %124
  %205 = load i32, i32* %62, align 4
  %206 = icmp eq i32 %205, 0
  %207 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %60, align 8
  %208 = load i32, i32* %61, align 8
  %209 = zext i32 %208 to i64
  %210 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %207, i64 %209
  br i1 %206, label %374, label %211

211:                                              ; preds = %204
  %212 = icmp eq i32 %208, 0
  br i1 %212, label %220, label %213

213:                                              ; preds = %211, %217
  %214 = phi %"class.blink::Member.389"* [ %218, %217 ], [ %207, %211 ]
  %215 = bitcast %"class.blink::Member.389"* %214 to i64*
  %216 = load i64, i64* %215, align 8
  switch i64 %216, label %220 [
    i64 -1, label %217
    i64 0, label %217
  ]

217:                                              ; preds = %213, %213
  %218 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %214, i64 1
  %219 = icmp eq %"class.blink::Member.389"* %218, %210
  br i1 %219, label %374, label %213

220:                                              ; preds = %213, %211
  %221 = phi %"class.blink::Member.389"* [ %207, %211 ], [ %214, %213 ]
  %222 = icmp eq %"class.blink::Member.389"* %221, %210
  br i1 %222, label %374, label %223

223:                                              ; preds = %220
  %224 = bitcast %"class.blink::CSSStyleSheet"** %11 to i8*
  %225 = bitcast %"class.blink::CSSStyleSheet"** %11 to i64*
  %226 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %227 = bitcast %"class.blink::HeapHashSet.4120"** %5 to %"class.WTF::HashSet.4123"**
  %228 = bitcast %"class.WTF::String"* %12 to i8*
  %229 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  %230 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %231 = bitcast %"class.WTF::String"* %13 to i8*
  %232 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %233 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %386

234:                                              ; preds = %127, %372
  %235 = phi %"class.blink::Member.389"* [ %125, %127 ], [ %366, %372 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %128) #16
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %10, align 8
  %236 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %235, i64 0, i32 0, i32 0
  %237 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %236, align 8
  store %"class.blink::CSSStyleSheet"* %237, %"class.blink::CSSStyleSheet"** %10, align 8
  %238 = ptrtoint %"class.blink::CSSStyleSheet"* %237 to i64
  %239 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %60, align 8
  %240 = icmp eq %"class.blink::Member.389"* %239, null
  br i1 %240, label %344, label %241

241:                                              ; preds = %234
  %242 = load i32, i32* %61, align 8
  %243 = add i32 %242, -1
  %244 = zext i32 %243 to i64
  %245 = shl i64 %238, 32
  %246 = xor i64 %245, -1
  %247 = add i64 %246, %238
  %248 = lshr i64 %247, 22
  %249 = xor i64 %248, %247
  %250 = shl i64 %249, 13
  %251 = xor i64 %250, -1
  %252 = add i64 %249, %251
  %253 = lshr i64 %252, 8
  %254 = xor i64 %253, %252
  %255 = mul i64 %254, 9
  %256 = lshr i64 %255, 15
  %257 = xor i64 %256, %255
  %258 = shl i64 %257, 27
  %259 = xor i64 %258, -1
  %260 = add i64 %257, %259
  %261 = lshr i64 %260, 31
  %262 = xor i64 %261, %260
  %263 = trunc i64 %262 to i32
  %264 = and i32 %243, %263
  %265 = zext i32 %264 to i64
  %266 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %239, i64 %265
  %267 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %266, i64 0, i32 0, i32 0
  %268 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %267, align 8
  %269 = icmp eq %"class.blink::CSSStyleSheet"* %268, %237
  br i1 %269, label %298, label %270

270:                                              ; preds = %241
  %271 = xor i32 %263, -1
  %272 = lshr i32 %263, 23
  %273 = add i32 %272, %271
  %274 = shl i32 %273, 12
  %275 = xor i32 %274, %273
  %276 = lshr i32 %275, 7
  %277 = xor i32 %276, %275
  %278 = shl i32 %277, 2
  %279 = xor i32 %278, %277
  %280 = lshr i32 %279, 20
  %281 = xor i32 %280, %279
  %282 = or i32 %281, 1
  %283 = zext i32 %282 to i64
  br label %284

284:                                              ; preds = %289, %270
  %285 = phi %"class.blink::CSSStyleSheet"* [ %268, %270 ], [ %296, %289 ]
  %286 = phi i64 [ %265, %270 ], [ %293, %289 ]
  %287 = phi i64 [ 0, %270 ], [ %291, %289 ]
  %288 = icmp eq %"class.blink::CSSStyleSheet"* %285, null
  br i1 %288, label %344, label %289

289:                                              ; preds = %284
  %290 = icmp eq i64 %287, 0
  %291 = select i1 %290, i64 %283, i64 %287
  %292 = add i64 %291, %286
  %293 = and i64 %292, %244
  %294 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %239, i64 %293
  %295 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %294, i64 0, i32 0, i32 0
  %296 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %295, align 8
  %297 = icmp eq %"class.blink::CSSStyleSheet"* %296, %237
  br i1 %297, label %298, label %284

298:                                              ; preds = %289, %241
  %299 = phi %"class.blink::Member.389"* [ %266, %241 ], [ %294, %289 ]
  %300 = icmp eq %"class.blink::Member.389"* %299, null
  br i1 %300, label %344, label %301

301:                                              ; preds = %298
  br i1 %269, label %330, label %302

302:                                              ; preds = %301
  %303 = xor i32 %263, -1
  %304 = lshr i32 %263, 23
  %305 = add i32 %304, %303
  %306 = shl i32 %305, 12
  %307 = xor i32 %306, %305
  %308 = lshr i32 %307, 7
  %309 = xor i32 %308, %307
  %310 = shl i32 %309, 2
  %311 = xor i32 %310, %309
  %312 = lshr i32 %311, 20
  %313 = xor i32 %312, %311
  %314 = or i32 %313, 1
  %315 = zext i32 %314 to i64
  br label %316

316:                                              ; preds = %321, %302
  %317 = phi %"class.blink::CSSStyleSheet"* [ %268, %302 ], [ %328, %321 ]
  %318 = phi i64 [ %265, %302 ], [ %325, %321 ]
  %319 = phi i64 [ 0, %302 ], [ %323, %321 ]
  %320 = icmp eq %"class.blink::CSSStyleSheet"* %317, null
  br i1 %320, label %335, label %321

321:                                              ; preds = %316
  %322 = icmp eq i64 %319, 0
  %323 = select i1 %322, i64 %315, i64 %319
  %324 = add i64 %323, %318
  %325 = and i64 %324, %244
  %326 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %239, i64 %325
  %327 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %326, i64 0, i32 0, i32 0
  %328 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %327, align 8
  %329 = icmp eq %"class.blink::CSSStyleSheet"* %328, %237
  br i1 %329, label %330, label %316

330:                                              ; preds = %321, %301
  %331 = phi %"class.blink::Member.389"* [ %266, %301 ], [ %326, %321 ]
  %332 = icmp eq %"class.blink::Member.389"* %331, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %330
  %334 = zext i32 %242 to i64
  br label %338

335:                                              ; preds = %316, %330
  %336 = zext i32 %242 to i64
  %337 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %239, i64 %336
  br label %338

338:                                              ; preds = %335, %333
  %339 = phi i64 [ %334, %333 ], [ %336, %335 ]
  %340 = phi %"class.blink::Member.389"* [ %331, %333 ], [ %337, %335 ]
  %341 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %239, i64 %339
  %342 = icmp eq %"class.blink::Member.389"* %341, %340
  br i1 %342, label %362, label %343

343:                                              ; preds = %338
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.4124"* nonnull %65, %"class.blink::Member.389"* %340) #16
  br label %362

344:                                              ; preds = %284, %298, %234
  %345 = load i32, i32* %108, align 4
  %346 = load i32, i32* %107, align 8
  %347 = icmp eq i32 %345, %346
  br i1 %347, label %361, label %348, !prof !3

348:                                              ; preds = %344
  %349 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %106, align 8
  %350 = zext i32 %345 to i64
  %351 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %349, i64 %350
  %352 = bitcast %"class.blink::Member.389"* %351 to i64*
  store atomic i64 %238, i64* %352 monotonic, align 8
  %353 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %354 = icmp eq i32 %353, 0
  br i1 %354, label %358, label %355

355:                                              ; preds = %348
  %356 = bitcast %"class.blink::CSSStyleSheet"* %237 to i8*
  %357 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %356) #16
  br label %358

358:                                              ; preds = %355, %348
  %359 = load i32, i32* %108, align 4
  %360 = add i32 %359, 1
  store i32 %360, i32* %108, align 4
  br label %362

361:                                              ; preds = %344
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.386"* nonnull %129, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %10) #16
  br label %362

362:                                              ; preds = %361, %358, %343, %338
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %128) #16
  %363 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %235, i64 1
  %364 = icmp eq %"class.blink::Member.389"* %363, %114
  br i1 %364, label %204, label %365

365:                                              ; preds = %362, %369
  %366 = phi %"class.blink::Member.389"* [ %370, %369 ], [ %363, %362 ]
  %367 = bitcast %"class.blink::Member.389"* %366 to i64*
  %368 = load i64, i64* %367, align 8
  switch i64 %368, label %372 [
    i64 -1, label %369
    i64 0, label %369
  ]

369:                                              ; preds = %365, %365
  %370 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %366, i64 1
  %371 = icmp eq %"class.blink::Member.389"* %370, %114
  br i1 %371, label %204, label %365

372:                                              ; preds = %365
  %373 = icmp eq %"class.blink::Member.389"* %366, %114
  br i1 %373, label %204, label %234

374:                                              ; preds = %217, %532, %542, %539, %204, %220
  %375 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %106, align 8
  %376 = load i32, i32* %108, align 4
  %377 = zext i32 %376 to i64
  %378 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %375, i64 %377
  %379 = icmp eq i32 %376, 0
  br i1 %379, label %380, label %382

380:                                              ; preds = %374
  %381 = bitcast %"class.blink::HeapHashSet.4120"** %5 to %"class.WTF::HashSet.4123"**
  br label %544

382:                                              ; preds = %374
  %383 = bitcast %"class.blink::CSSStyleSheet"** %14 to i8*
  %384 = bitcast %"class.blink::HeapHashSet.4120"** %5 to %"class.WTF::HashSet.4123"**
  %385 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  br label %550

386:                                              ; preds = %223, %542
  %387 = phi %"class.blink::Member.389"* [ %221, %223 ], [ %536, %542 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %224) #16
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %11, align 8
  %388 = bitcast %"class.blink::Member.389"* %387 to i64*
  %389 = load i64, i64* %388, align 8
  store i64 %389, i64* %225, align 8
  %390 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %226, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %11)
  %391 = load %"class.WTF::HashSet.4123"*, %"class.WTF::HashSet.4123"** %227, align 8
  %392 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %11, align 8
  %393 = ptrtoint %"class.blink::CSSStyleSheet"* %392 to i64
  %394 = getelementptr inbounds %"class.WTF::HashSet.4123", %"class.WTF::HashSet.4123"* %391, i64 0, i32 0, i32 0
  %395 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %394, align 8
  %396 = icmp eq %"class.blink::Member.389"* %395, null
  %397 = getelementptr inbounds %"class.WTF::HashSet.4123", %"class.WTF::HashSet.4123"* %391, i64 0, i32 0, i32 1
  %398 = load i32, i32* %397, align 8
  br i1 %396, label %460, label %399

399:                                              ; preds = %386
  %400 = add i32 %398, -1
  %401 = zext i32 %400 to i64
  %402 = shl i64 %393, 32
  %403 = xor i64 %402, -1
  %404 = add i64 %403, %393
  %405 = lshr i64 %404, 22
  %406 = xor i64 %405, %404
  %407 = shl i64 %406, 13
  %408 = xor i64 %407, -1
  %409 = add i64 %406, %408
  %410 = lshr i64 %409, 8
  %411 = xor i64 %410, %409
  %412 = mul i64 %411, 9
  %413 = lshr i64 %412, 15
  %414 = xor i64 %413, %412
  %415 = shl i64 %414, 27
  %416 = xor i64 %415, -1
  %417 = add i64 %414, %416
  %418 = lshr i64 %417, 31
  %419 = xor i64 %418, %417
  %420 = trunc i64 %419 to i32
  %421 = and i32 %400, %420
  %422 = zext i32 %421 to i64
  %423 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %395, i64 %422
  %424 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %423, i64 0, i32 0, i32 0
  %425 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %424, align 8
  %426 = icmp eq %"class.blink::CSSStyleSheet"* %425, %392
  br i1 %426, label %455, label %427

427:                                              ; preds = %399
  %428 = xor i32 %420, -1
  %429 = lshr i32 %420, 23
  %430 = add i32 %429, %428
  %431 = shl i32 %430, 12
  %432 = xor i32 %431, %430
  %433 = lshr i32 %432, 7
  %434 = xor i32 %433, %432
  %435 = shl i32 %434, 2
  %436 = xor i32 %435, %434
  %437 = lshr i32 %436, 20
  %438 = xor i32 %437, %436
  %439 = or i32 %438, 1
  %440 = zext i32 %439 to i64
  br label %441

441:                                              ; preds = %446, %427
  %442 = phi %"class.blink::CSSStyleSheet"* [ %425, %427 ], [ %453, %446 ]
  %443 = phi i64 [ %422, %427 ], [ %450, %446 ]
  %444 = phi i64 [ 0, %427 ], [ %448, %446 ]
  %445 = icmp eq %"class.blink::CSSStyleSheet"* %442, null
  br i1 %445, label %460, label %446

446:                                              ; preds = %441
  %447 = icmp eq i64 %444, 0
  %448 = select i1 %447, i64 %440, i64 %444
  %449 = add i64 %448, %443
  %450 = and i64 %449, %401
  %451 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %395, i64 %450
  %452 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %451, i64 0, i32 0, i32 0
  %453 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %452, align 8
  %454 = icmp eq %"class.blink::CSSStyleSheet"* %453, %392
  br i1 %454, label %455, label %441

455:                                              ; preds = %446, %399
  %456 = phi %"class.blink::Member.389"* [ %423, %399 ], [ %451, %446 ]
  %457 = icmp eq %"class.blink::Member.389"* %456, null
  br i1 %457, label %460, label %458

458:                                              ; preds = %455
  %459 = zext i32 %398 to i64
  br label %463

460:                                              ; preds = %441, %455, %386
  %461 = zext i32 %398 to i64
  %462 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %395, i64 %461
  br label %463

463:                                              ; preds = %460, %458
  %464 = phi i64 [ %459, %458 ], [ %461, %460 ]
  %465 = phi %"class.blink::Member.389"* [ %456, %458 ], [ %462, %460 ]
  %466 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %395, i64 %464
  %467 = icmp eq %"class.blink::Member.389"* %466, %465
  br i1 %467, label %470, label %468

468:                                              ; preds = %463
  %469 = getelementptr inbounds %"class.WTF::HashSet.4123", %"class.WTF::HashSet.4123"* %391, i64 0, i32 0
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.4124"* %469, %"class.blink::Member.389"* %465) #16
  br label %470

470:                                              ; preds = %463, %468
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %228) #16
  %471 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %390, i64 0, i32 0, i32 1, i32 0, i32 0
  %472 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %471, align 8
  %473 = icmp eq %"class.WTF::StringImpl"* %472, null
  br i1 %473, label %491, label %474

474:                                              ; preds = %470
  %475 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %476 = load atomic i32, i32* %475 monotonic, align 4
  %477 = and i32 %476, 2
  %478 = icmp eq i32 %477, 0
  br i1 %478, label %479, label %491

479:                                              ; preds = %474
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %472, i64 0, i32 0
  %481 = load i32, i32* %480, align 4
  %482 = zext i32 %481 to i33
  %483 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %482, i33 1) #16
  %484 = extractvalue { i33, i1 } %483, 1
  %485 = extractvalue { i33, i1 } %483, 0
  %486 = icmp slt i33 %485, 0
  %487 = or i1 %484, %486
  br i1 %487, label %488, label %489, !prof !3

488:                                              ; preds = %479
  call void @llvm.trap() #16
  unreachable

489:                                              ; preds = %479
  %490 = trunc i33 %485 to i32
  store i32 %490, i32* %480, align 4
  br label %491

491:                                              ; preds = %470, %474, %489
  store %"class.WTF::StringImpl"* %472, %"class.WTF::StringImpl"** %229, align 8
  %492 = call zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.3275"* %230, %"class.WTF::String"* nonnull dereferenceable(8) %12) #16
  %493 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %229, align 8
  %494 = icmp eq %"class.WTF::StringImpl"* %493, null
  br i1 %494, label %508, label %495

495:                                              ; preds = %491
  %496 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %497 = load atomic i32, i32* %496 monotonic, align 4
  %498 = and i32 %497, 2
  %499 = icmp eq i32 %498, 0
  %500 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %493, i64 0, i32 0
  %501 = load i32, i32* %500, align 4
  br i1 %499, label %502, label %504

502:                                              ; preds = %495
  %503 = add i32 %501, -1
  store i32 %503, i32* %500, align 4
  br label %504

504:                                              ; preds = %502, %495
  %505 = phi i32 [ %503, %502 ], [ %501, %495 ]
  %506 = icmp eq i32 %505, 0
  br i1 %506, label %507, label %508

507:                                              ; preds = %504
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %493) #16
  br label %508

508:                                              ; preds = %491, %504, %507
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %228) #16
  br i1 %492, label %509, label %532

509:                                              ; preds = %508
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %231) #16
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %232, align 8
  %510 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent16UnbindStyleSheetEPNS_19InspectorStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::InspectorStyleSheet"* %390)
  store %"class.WTF::StringImpl"* %510, %"class.WTF::StringImpl"** %232, align 8
  %511 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %233, align 8
  %512 = icmp eq %"class.blink::protocol::CSS::Frontend"* %511, null
  br i1 %512, label %515, label %513

513:                                              ; preds = %509
  call void @_ZN5blink8protocol3CSS8Frontend17styleSheetRemovedERKN3WTF6StringE(%"class.blink::protocol::CSS::Frontend"* nonnull %511, %"class.WTF::String"* nonnull dereferenceable(8) %13) #16
  %514 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  br label %515

515:                                              ; preds = %509, %513
  %516 = phi %"class.WTF::StringImpl"* [ %510, %509 ], [ %514, %513 ]
  %517 = icmp eq %"class.WTF::StringImpl"* %516, null
  br i1 %517, label %531, label %518

518:                                              ; preds = %515
  %519 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %520 = load atomic i32, i32* %519 monotonic, align 4
  %521 = and i32 %520, 2
  %522 = icmp eq i32 %521, 0
  %523 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %516, i64 0, i32 0
  %524 = load i32, i32* %523, align 4
  br i1 %522, label %525, label %527

525:                                              ; preds = %518
  %526 = add i32 %524, -1
  store i32 %526, i32* %523, align 4
  br label %527

527:                                              ; preds = %525, %518
  %528 = phi i32 [ %526, %525 ], [ %524, %518 ]
  %529 = icmp eq i32 %528, 0
  br i1 %529, label %530, label %531

530:                                              ; preds = %527
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %516) #16
  br label %531

531:                                              ; preds = %515, %527, %530
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %231) #16
  br label %532

532:                                              ; preds = %531, %508
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %224) #16
  %533 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %387, i64 1
  %534 = icmp eq %"class.blink::Member.389"* %533, %210
  br i1 %534, label %374, label %535

535:                                              ; preds = %532, %539
  %536 = phi %"class.blink::Member.389"* [ %540, %539 ], [ %533, %532 ]
  %537 = bitcast %"class.blink::Member.389"* %536 to i64*
  %538 = load i64, i64* %537, align 8
  switch i64 %538, label %542 [
    i64 -1, label %539
    i64 0, label %539
  ]

539:                                              ; preds = %535, %535
  %540 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %536, i64 1
  %541 = icmp eq %"class.blink::Member.389"* %540, %210
  br i1 %541, label %374, label %535

542:                                              ; preds = %535
  %543 = icmp eq %"class.blink::Member.389"* %536, %210
  br i1 %543, label %374, label %386

544:                                              ; preds = %562, %380
  %545 = phi %"class.WTF::HashSet.4123"** [ %381, %380 ], [ %384, %562 ]
  %546 = load %"class.WTF::HashSet.4123"*, %"class.WTF::HashSet.4123"** %545, align 8
  %547 = getelementptr inbounds %"class.WTF::HashSet.4123", %"class.WTF::HashSet.4123"* %546, i64 0, i32 0, i32 2
  %548 = load i32, i32* %547, align 4
  %549 = icmp eq i32 %548, 0
  br i1 %549, label %565, label %578

550:                                              ; preds = %382, %562
  %551 = phi %"class.blink::Member.389"* [ %375, %382 ], [ %563, %562 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %383) #16
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %14, align 8
  %552 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %551, i64 0, i32 0, i32 0
  %553 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %552, align 8
  store %"class.blink::CSSStyleSheet"* %553, %"class.blink::CSSStyleSheet"** %14, align 8
  %554 = call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleSheet"* %553)
  %555 = load %"class.WTF::HashSet.4123"*, %"class.WTF::HashSet.4123"** %384, align 8
  %556 = getelementptr inbounds %"class.WTF::HashSet.4123", %"class.WTF::HashSet.4123"* %555, i64 0, i32 0
  %557 = call { %"class.blink::Member.389"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4124"* %556, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %14, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %14) #16
  %558 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %385, align 8
  %559 = icmp eq %"class.blink::protocol::CSS::Frontend"* %558, null
  br i1 %559, label %562, label %560

560:                                              ; preds = %550
  %561 = call %"class.blink::protocol::CSS::CSSStyleSheetHeader"* @_ZN5blink19InspectorStyleSheet28BuildObjectForStyleSheetInfoEv(%"class.blink::InspectorStyleSheet"* %554) #16
  call void @_ZN5blink8protocol3CSS8Frontend15styleSheetAddedENSt3__110unique_ptrINS1_19CSSStyleSheetHeaderENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::CSS::Frontend"* nonnull %558, %"class.blink::protocol::CSS::CSSStyleSheetHeader"* %561) #16
  br label %562

562:                                              ; preds = %550, %560
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %383) #16
  %563 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %551, i64 1
  %564 = icmp eq %"class.blink::Member.389"* %563, %378
  br i1 %564, label %544, label %550

565:                                              ; preds = %544
  %566 = getelementptr inbounds %"class.WTF::HashMap.3295", %"class.WTF::HashMap.3295"* %16, i64 0, i32 0
  %567 = load %"class.blink::Document"*, %"class.blink::Document"** %4, align 8
  %568 = call { %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3296"* %566, %"class.blink::Document"* %567) #16
  %569 = extractvalue { %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"* } %568, 0
  %570 = getelementptr inbounds %"class.WTF::HashMap.3295", %"class.WTF::HashMap.3295"* %16, i64 0, i32 0, i32 0
  %571 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %570, align 8
  %572 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11, i32 0, i32 0, i32 1
  %573 = load i32, i32* %572, align 8
  %574 = zext i32 %573 to i64
  %575 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %571, i64 %574
  %576 = icmp eq %"struct.WTF::KeyValuePair.3298"* %575, %569
  br i1 %576, label %578, label %577

577:                                              ; preds = %565
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE5eraseEPKSF_(%"class.WTF::HashTable.3296"* %566, %"struct.WTF::KeyValuePair.3298"* %569) #16
  br label %578

578:                                              ; preds = %577, %565, %544
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %105) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %59) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %43) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashSet.4120"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_8DocumentEEENS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS6_EENS_10HashTraitsIS7_EEEEEENS8_IS3_EENSA_IS4_EENSA_ISD_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3295"*, %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::Document"*, %"class.blink::Document"** %1, align 8
  %4 = ptrtoint %"class.blink::Document"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.3295", %"class.WTF::HashMap.3295"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.3298"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.3295", %"class.WTF::HashMap.3295"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::Document"*, %"class.blink::Document"** %35, align 8
  %37 = icmp eq %"class.blink::Document"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::Document"*, %"class.blink::Document"** %55, align 8
  %57 = icmp eq %"class.blink::Document"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = icmp eq %"class.blink::Document"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.3298"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3298"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %68, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.blink::HeapHashSet.4120"*, %"class.blink::HeapHashSet.4120"** %71, align 8
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi %"class.blink::HeapHashSet.4120"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %52 ]
  ret %"class.blink::HeapHashSet.4120"* %74
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"*, %"class.blink::CSSStyleSheet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %1, align 8
  %4 = ptrtoint %"class.blink::CSSStyleSheet"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.3288", %"class.WTF::HashMap.3288"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.3291"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.3288", %"class.WTF::HashMap.3288"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %35, align 8
  %37 = icmp eq %"class.blink::CSSStyleSheet"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %55, align 8
  %57 = icmp eq %"class.blink::CSSStyleSheet"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %64, align 8
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.3291"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.3291"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %68, i64 0, i32 1, i32 0, i32 0
  %72 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %71, align 8
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi %"class.blink::InspectorStyleSheet"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %52 ]
  ret %"class.blink::InspectorStyleSheet"* %74
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent16UnbindStyleSheetEPNS_19InspectorStyleSheetE(%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorStyleSheet"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %4, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %6 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %5, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %6, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %6, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #16
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %2, %8, %23
  store %"class.WTF::StringImpl"* %6, %"class.WTF::StringImpl"** %4, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8, i32 0
  %27 = getelementptr inbounds %"class.WTF::HashMap.3274", %"class.WTF::HashMap.3274"* %26, i64 0, i32 0
  %28 = call { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.3275"* %27, %"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  %29 = extractvalue { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } %28, 0
  %30 = getelementptr inbounds %"class.WTF::HashMap.3274", %"class.WTF::HashMap.3274"* %26, i64 0, i32 0, i32 0
  %31 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8, i32 0, i32 0, i32 1
  %33 = load i32, i32* %32, align 8
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %31, i64 %34
  %36 = icmp eq %"struct.WTF::KeyValuePair.3277"* %35, %29
  br i1 %36, label %38, label %37

37:                                               ; preds = %25
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.3275"* %27, %"struct.WTF::KeyValuePair.3277"* %29) #16
  br label %38

38:                                               ; preds = %25, %37
  %39 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %1, i64 0, i32 3, i32 0, i32 0
  %40 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %39, align 8
  %41 = icmp eq %"class.blink::CSSStyleSheet"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %38
  %43 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %44 = getelementptr inbounds %"class.WTF::HashMap.3288", %"class.WTF::HashMap.3288"* %43, i64 0, i32 0
  %45 = call { %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3289"* %44, %"class.blink::CSSStyleSheet"* nonnull %40) #16
  %46 = extractvalue { %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"* } %45, 0
  %47 = getelementptr inbounds %"class.WTF::HashMap.3288", %"class.WTF::HashMap.3288"* %43, i64 0, i32 0, i32 0
  %48 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0, i32 0, i32 1
  %50 = load i32, i32* %49, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %48, i64 %51
  %53 = icmp eq %"struct.WTF::KeyValuePair.3291"* %52, %46
  br i1 %53, label %55, label %54

54:                                               ; preds = %42
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable.3289"* %44, %"struct.WTF::KeyValuePair.3291"* %46) #16
  br label %55

55:                                               ; preds = %54, %42, %38
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  ret %"class.WTF::StringImpl"* %56
}

declare void @_ZN5blink8protocol3CSS8Frontend17styleSheetRemovedERKN3WTF6StringE(%"class.blink::protocol::CSS::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %4 = alloca %"class.blink::InspectorStyleSheet"*, align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = alloca %"class.WTF::String", align 8
  store %"class.blink::CSSStyleSheet"* %1, %"class.blink::CSSStyleSheet"** %3, align 8
  %8 = bitcast %"class.blink::InspectorStyleSheet"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %10 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %9, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3)
  store %"class.blink::InspectorStyleSheet"* %10, %"class.blink::InspectorStyleSheet"** %4, align 8
  %11 = icmp eq %"class.blink::InspectorStyleSheet"* %10, null
  br i1 %11, label %12, label %143

12:                                               ; preds = %2
  %13 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %14 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %13) #16
  %15 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  %16 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %17 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent12DetectOriginEPNS_13CSSStyleSheetEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"* undef, %"class.blink::CSSStyleSheet"* %16, %"class.blink::Document"* %14)
  %18 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %17, %"class.WTF::StringImpl"** %18, align 8
  %19 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"* %14) #16
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"** %21, align 8
  %22 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_23InspectorStyleSheetBaseEEEPhm(i64 184) #16
  %23 = bitcast i8* %22 to %"class.blink::InspectorStyleSheet"*
  %24 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 5, i32 0, i32 0
  %25 = load %"class.blink::InspectorNetworkAgent"*, %"class.blink::InspectorNetworkAgent"** %24, align 8
  %26 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %27 = icmp eq %"class.blink::InspectorCSSAgent"* %0, null
  %28 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 2
  %29 = select i1 %27, %"class.blink::InspectorStyleSheetBase::Listener"* null, %"class.blink::InspectorStyleSheetBase::Listener"* %28
  %30 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 7, i32 0, i32 0
  %31 = load %"class.blink::InspectorResourceContainer"*, %"class.blink::InspectorResourceContainer"** %30, align 8
  call void @_ZN5blink19InspectorStyleSheetC1EPNS_21InspectorNetworkAgentEPNS_13CSSStyleSheetERKN3WTF6StringES8_PNS_23InspectorStyleSheetBase8ListenerEPNS_26InspectorResourceContainerE(%"class.blink::InspectorStyleSheet"* %23, %"class.blink::InspectorNetworkAgent"* %25, %"class.blink::CSSStyleSheet"* %26, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %6, %"class.blink::InspectorStyleSheetBase::Listener"* %29, %"class.blink::InspectorResourceContainer"* %31) #16
  %32 = getelementptr inbounds i8, i8* %22, i64 -4
  %33 = bitcast i8* %32 to i16*
  %34 = load atomic i16, i16* %33 monotonic, align 2
  %35 = or i16 %34, 1
  store atomic i16 %35, i16* %33 release, align 2
  %36 = bitcast %"class.blink::InspectorStyleSheet"** %4 to i8**
  store i8* %22, i8** %36, align 8
  %37 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %38 = icmp eq %"class.WTF::StringImpl"* %37, null
  br i1 %38, label %52, label %39

39:                                               ; preds = %12
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load atomic i32, i32* %40 monotonic, align 4
  %42 = and i32 %41, 2
  %43 = icmp eq i32 %42, 0
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %37, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  br i1 %43, label %46, label %48

46:                                               ; preds = %39
  %47 = add i32 %45, -1
  store i32 %47, i32* %44, align 4
  br label %48

48:                                               ; preds = %46, %39
  %49 = phi i32 [ %47, %46 ], [ %45, %39 ]
  %50 = icmp eq i32 %49, 0
  br i1 %50, label %51, label %52

51:                                               ; preds = %48
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %37) #16
  br label %52

52:                                               ; preds = %12, %48, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  %53 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %54 = icmp eq %"class.WTF::StringImpl"* %53, null
  br i1 %54, label %68, label %55

55:                                               ; preds = %52
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load atomic i32, i32* %56 monotonic, align 4
  %58 = and i32 %57, 2
  %59 = icmp eq i32 %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %53, i64 0, i32 0
  %61 = load i32, i32* %60, align 4
  br i1 %59, label %62, label %64

62:                                               ; preds = %55
  %63 = add i32 %61, -1
  store i32 %63, i32* %60, align 4
  br label %64

64:                                               ; preds = %62, %55
  %65 = phi i32 [ %63, %62 ], [ %61, %55 ]
  %66 = icmp eq i32 %65, 0
  br i1 %66, label %67, label %68

67:                                               ; preds = %64
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %53) #16
  br label %68

68:                                               ; preds = %52, %64, %67
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %69 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %69) #16
  %70 = bitcast %"class.blink::InspectorStyleSheet"** %4 to %"class.blink::InspectorStyleSheetBase"**
  %71 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %71, i64 0, i32 1, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %92, label %75

75:                                               ; preds = %68
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %92

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %82 = load i32, i32* %81, align 4
  %83 = zext i32 %82 to i33
  %84 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %83, i33 1) #16
  %85 = extractvalue { i33, i1 } %84, 1
  %86 = extractvalue { i33, i1 } %84, 0
  %87 = icmp slt i33 %86, 0
  %88 = or i1 %85, %87
  br i1 %88, label %89, label %90, !prof !3

89:                                               ; preds = %80
  call void @llvm.trap() #16
  unreachable

90:                                               ; preds = %80
  %91 = trunc i33 %86 to i32
  store i32 %91, i32* %81, align 4
  br label %92

92:                                               ; preds = %68, %75, %90
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %73, %"class.WTF::StringImpl"** %93, align 8
  %94 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8, i32 0, i32 0
  %95 = call { %"struct.WTF::KeyValuePair.3277"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.3275"* %94, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %4) #16
  %96 = extractvalue { %"struct.WTF::KeyValuePair.3277"*, i8 } %95, 1
  %97 = and i8 %96, 1
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %110

99:                                               ; preds = %92
  %100 = extractvalue { %"struct.WTF::KeyValuePair.3277"*, i8 } %95, 0
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %100, i64 0, i32 1
  %102 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %4, align 8
  %103 = ptrtoint %"class.blink::InspectorStyleSheet"* %102 to i64
  %104 = bitcast %"class.blink::Member.3916"* %101 to i64*
  store atomic i64 %103, i64* %104 monotonic, align 8
  %105 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %110, label %107

107:                                              ; preds = %99
  %108 = bitcast %"class.blink::InspectorStyleSheet"* %102 to i8*
  %109 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %108) #16
  br label %110

110:                                              ; preds = %92, %99, %107
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %126, label %113

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %111) #16
  br label %126

126:                                              ; preds = %110, %122, %125
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %69) #16
  %127 = getelementptr inbounds %"class.WTF::HashMap.3288", %"class.WTF::HashMap.3288"* %9, i64 0, i32 0
  %128 = call { %"struct.WTF::KeyValuePair.3291"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS3_RPS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3289"* %127, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %4) #16
  %129 = extractvalue { %"struct.WTF::KeyValuePair.3291"*, i8 } %128, 1
  %130 = and i8 %129, 1
  %131 = icmp eq i8 %130, 0
  br i1 %131, label %132, label %143

132:                                              ; preds = %126
  %133 = extractvalue { %"struct.WTF::KeyValuePair.3291"*, i8 } %128, 0
  %134 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %133, i64 0, i32 1
  %135 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %4, align 8
  %136 = ptrtoint %"class.blink::InspectorStyleSheet"* %135 to i64
  %137 = bitcast %"class.blink::Member.3916"* %134 to i64*
  store atomic i64 %136, i64* %137 monotonic, align 8
  %138 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %139 = icmp eq i32 %138, 0
  br i1 %139, label %143, label %140

140:                                              ; preds = %132
  %141 = bitcast %"class.blink::InspectorStyleSheet"* %135 to i8*
  %142 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %141) #16
  br label %143

143:                                              ; preds = %140, %132, %126, %2
  %144 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret %"class.blink::InspectorStyleSheet"* %144
}

declare void @_ZN5blink8protocol3CSS8Frontend15styleSheetAddedENSt3__110unique_ptrINS1_19CSSStyleSheetHeaderENS3_14default_deleteIS5_EEEE(%"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::CSSStyleSheetHeader"*) local_unnamed_addr #1

declare %"class.blink::protocol::CSS::CSSStyleSheetHeader"* @_ZN5blink19InspectorStyleSheet28BuildObjectForStyleSheetInfoEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent16DocumentDetachedEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::HeapVector.383", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0
  %5 = ptrtoint %"class.blink::Document"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashSet.3302", %"class.WTF::HashSet.3302"* %4, i64 0, i32 0, i32 0
  %7 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %6, align 8
  %8 = icmp eq %"class.blink::Member.326"* %7, null
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12, i32 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  br i1 %8, label %72, label %11

11:                                               ; preds = %2
  %12 = add i32 %10, -1
  %13 = zext i32 %12 to i64
  %14 = shl i64 %5, 32
  %15 = xor i64 %14, -1
  %16 = add i64 %15, %5
  %17 = lshr i64 %16, 22
  %18 = xor i64 %17, %16
  %19 = shl i64 %18, 13
  %20 = xor i64 %19, -1
  %21 = add i64 %18, %20
  %22 = lshr i64 %21, 8
  %23 = xor i64 %22, %21
  %24 = mul i64 %23, 9
  %25 = lshr i64 %24, 15
  %26 = xor i64 %25, %24
  %27 = shl i64 %26, 27
  %28 = xor i64 %27, -1
  %29 = add i64 %26, %28
  %30 = lshr i64 %29, 31
  %31 = xor i64 %30, %29
  %32 = trunc i64 %31 to i32
  %33 = and i32 %12, %32
  %34 = zext i32 %33 to i64
  %35 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %7, i64 %34
  %36 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %35, i64 0, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = icmp eq %"class.blink::Document"* %37, %1
  br i1 %38, label %67, label %39

39:                                               ; preds = %11
  %40 = xor i32 %32, -1
  %41 = lshr i32 %32, 23
  %42 = add i32 %41, %40
  %43 = shl i32 %42, 12
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 7
  %46 = xor i32 %45, %44
  %47 = shl i32 %46, 2
  %48 = xor i32 %47, %46
  %49 = lshr i32 %48, 20
  %50 = xor i32 %49, %48
  %51 = or i32 %50, 1
  %52 = zext i32 %51 to i64
  br label %53

53:                                               ; preds = %58, %39
  %54 = phi %"class.blink::Document"* [ %37, %39 ], [ %65, %58 ]
  %55 = phi i64 [ %34, %39 ], [ %62, %58 ]
  %56 = phi i64 [ 0, %39 ], [ %60, %58 ]
  %57 = icmp eq %"class.blink::Document"* %54, null
  br i1 %57, label %72, label %58

58:                                               ; preds = %53
  %59 = icmp eq i64 %56, 0
  %60 = select i1 %59, i64 %52, i64 %56
  %61 = add i64 %60, %55
  %62 = and i64 %61, %13
  %63 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %7, i64 %62
  %64 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %63, i64 0, i32 0, i32 0
  %65 = load %"class.blink::Document"*, %"class.blink::Document"** %64, align 8
  %66 = icmp eq %"class.blink::Document"* %65, %1
  br i1 %66, label %67, label %53

67:                                               ; preds = %58, %11
  %68 = phi %"class.blink::Member.326"* [ %35, %11 ], [ %63, %58 ]
  %69 = icmp eq %"class.blink::Member.326"* %68, null
  br i1 %69, label %72, label %70

70:                                               ; preds = %67
  %71 = zext i32 %10 to i64
  br label %75

72:                                               ; preds = %53, %67, %2
  %73 = zext i32 %10 to i64
  %74 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %7, i64 %73
  br label %75

75:                                               ; preds = %72, %70
  %76 = phi i64 [ %71, %70 ], [ %73, %72 ]
  %77 = phi %"class.blink::Member.326"* [ %68, %70 ], [ %74, %72 ]
  %78 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %7, i64 %76
  %79 = icmp eq %"class.blink::Member.326"* %78, %77
  br i1 %79, label %82, label %80

80:                                               ; preds = %75
  %81 = getelementptr inbounds %"class.WTF::HashSet.3302", %"class.WTF::HashSet.3302"* %4, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.3303"* %81, %"class.blink::Member.326"* %77) #16
  br label %82

82:                                               ; preds = %75, %80
  %83 = bitcast %"class.blink::HeapVector.383"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %83) #16
  %84 = bitcast %"class.blink::HeapVector.383"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %84, i8 0, i64 16, i1 false)
  call void @_ZN5blink17InspectorCSSAgent20SetActiveStyleSheetsEPNS_8DocumentERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::Document"* %1, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %3)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %83) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent16ForcePseudoStateEPNS_7ElementENS_11CSSSelector10PseudoTypeEPb(%"class.blink::InspectorCSSAgent"* nocapture readonly, %"class.blink::Element"*, i32, i8* nocapture) local_unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14, i32 0, i32 2
  %6 = load i32, i32* %5, align 4
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %184, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %12 = tail call i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %10, %"class.blink::Node"* %11) #16
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %184, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %15, align 8
  %17 = icmp eq %"struct.WTF::KeyValuePair.3316"* %16, null
  %18 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15, i32 0, i32 1
  %19 = load i32, i32* %18, align 8
  br i1 %17, label %75, label %20

20:                                               ; preds = %14
  %21 = add i32 %19, -1
  %22 = zext i32 %21 to i64
  %23 = shl i32 %12, 15
  %24 = xor i32 %23, -1
  %25 = add i32 %12, %24
  %26 = lshr i32 %25, 10
  %27 = xor i32 %26, %25
  %28 = mul i32 %27, 9
  %29 = lshr i32 %28, 6
  %30 = xor i32 %29, %28
  %31 = shl i32 %30, 11
  %32 = xor i32 %31, -1
  %33 = add i32 %30, %32
  %34 = lshr i32 %33, 16
  %35 = xor i32 %34, %33
  %36 = and i32 %21, %35
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %16, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32 %40, %12
  br i1 %41, label %70, label %42

42:                                               ; preds = %20
  %43 = xor i32 %35, -1
  %44 = lshr i32 %33, 23
  %45 = add i32 %44, %43
  %46 = shl i32 %45, 12
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 7
  %49 = xor i32 %48, %47
  %50 = shl i32 %49, 2
  %51 = xor i32 %50, %49
  %52 = lshr i32 %51, 20
  %53 = xor i32 %52, %51
  %54 = or i32 %53, 1
  %55 = zext i32 %54 to i64
  br label %56

56:                                               ; preds = %61, %42
  %57 = phi i32 [ %40, %42 ], [ %68, %61 ]
  %58 = phi i64 [ %37, %42 ], [ %65, %61 ]
  %59 = phi i64 [ 0, %42 ], [ %63, %61 ]
  %60 = icmp eq i32 %57, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %56
  %62 = icmp eq i64 %59, 0
  %63 = select i1 %62, i64 %55, i64 %59
  %64 = add i64 %63, %58
  %65 = and i64 %64, %22
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %16, i64 %65
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %66, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  %69 = icmp eq i32 %68, %12
  br i1 %69, label %70, label %56

70:                                               ; preds = %61, %20
  %71 = phi %"struct.WTF::KeyValuePair.3316"* [ %38, %20 ], [ %66, %61 ]
  %72 = icmp eq %"struct.WTF::KeyValuePair.3316"* %71, null
  br i1 %72, label %75, label %73

73:                                               ; preds = %70
  %74 = zext i32 %19 to i64
  br label %78

75:                                               ; preds = %56, %70, %14
  %76 = zext i32 %19 to i64
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %16, i64 %76
  br label %78

78:                                               ; preds = %73, %75
  %79 = phi i64 [ %74, %73 ], [ %76, %75 ]
  %80 = phi %"struct.WTF::KeyValuePair.3316"* [ %71, %73 ], [ %77, %75 ]
  %81 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %16, i64 %79
  %82 = icmp eq %"struct.WTF::KeyValuePair.3316"* %80, %81
  br i1 %82, label %90, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %80, i64 0, i32 1
  %85 = load i32, i32* %84, align 4
  %86 = icmp ne i32 %85, 0
  %87 = icmp eq i32 %2, 30
  %88 = and i1 %87, %86
  br i1 %88, label %89, label %90

89:                                               ; preds = %83
  store i8 1, i8* %3, align 1
  br label %184

90:                                               ; preds = %78, %83
  %91 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14, i32 0, i32 0
  %92 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %91, align 8
  %93 = icmp eq %"struct.WTF::KeyValuePair.3316"* %92, null
  %94 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14, i32 0, i32 1
  %95 = load i32, i32* %94, align 8
  br i1 %93, label %151, label %96

96:                                               ; preds = %90
  %97 = add i32 %95, -1
  %98 = zext i32 %97 to i64
  %99 = shl i32 %12, 15
  %100 = xor i32 %99, -1
  %101 = add i32 %12, %100
  %102 = lshr i32 %101, 10
  %103 = xor i32 %102, %101
  %104 = mul i32 %103, 9
  %105 = lshr i32 %104, 6
  %106 = xor i32 %105, %104
  %107 = shl i32 %106, 11
  %108 = xor i32 %107, -1
  %109 = add i32 %106, %108
  %110 = lshr i32 %109, 16
  %111 = xor i32 %110, %109
  %112 = and i32 %97, %111
  %113 = zext i32 %112 to i64
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %92, i64 %113
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %114, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = icmp eq i32 %116, %12
  br i1 %117, label %146, label %118

118:                                              ; preds = %96
  %119 = xor i32 %111, -1
  %120 = lshr i32 %109, 23
  %121 = add i32 %120, %119
  %122 = shl i32 %121, 12
  %123 = xor i32 %122, %121
  %124 = lshr i32 %123, 7
  %125 = xor i32 %124, %123
  %126 = shl i32 %125, 2
  %127 = xor i32 %126, %125
  %128 = lshr i32 %127, 20
  %129 = xor i32 %128, %127
  %130 = or i32 %129, 1
  %131 = zext i32 %130 to i64
  br label %132

132:                                              ; preds = %137, %118
  %133 = phi i32 [ %116, %118 ], [ %144, %137 ]
  %134 = phi i64 [ %113, %118 ], [ %141, %137 ]
  %135 = phi i64 [ 0, %118 ], [ %139, %137 ]
  %136 = icmp eq i32 %133, 0
  br i1 %136, label %151, label %137

137:                                              ; preds = %132
  %138 = icmp eq i64 %135, 0
  %139 = select i1 %138, i64 %131, i64 %135
  %140 = add i64 %139, %134
  %141 = and i64 %140, %98
  %142 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %92, i64 %141
  %143 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %142, i64 0, i32 0
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, %12
  br i1 %145, label %146, label %132

146:                                              ; preds = %137, %96
  %147 = phi %"struct.WTF::KeyValuePair.3316"* [ %114, %96 ], [ %142, %137 ]
  %148 = icmp eq %"struct.WTF::KeyValuePair.3316"* %147, null
  br i1 %148, label %151, label %149

149:                                              ; preds = %146
  %150 = zext i32 %95 to i64
  br label %154

151:                                              ; preds = %132, %146, %90
  %152 = zext i32 %95 to i64
  %153 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %92, i64 %152
  br label %154

154:                                              ; preds = %149, %151
  %155 = phi i64 [ %150, %149 ], [ %152, %151 ]
  %156 = phi %"struct.WTF::KeyValuePair.3316"* [ %147, %149 ], [ %153, %151 ]
  %157 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %92, i64 %155
  %158 = icmp eq %"struct.WTF::KeyValuePair.3316"* %156, %157
  br i1 %158, label %184, label %159

159:                                              ; preds = %154
  %160 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %156, i64 0, i32 1
  %161 = load i32, i32* %160, align 4
  switch i32 %2, label %184 [
    i32 31, label %180
    i32 28, label %162
    i32 30, label %165
    i32 29, label %168
    i32 26, label %171
    i32 45, label %174
    i32 17, label %177
  ]

162:                                              ; preds = %159
  %163 = and i32 %161, 2
  %164 = icmp eq i32 %163, 0
  br i1 %164, label %184, label %183

165:                                              ; preds = %159
  %166 = and i32 %161, 16
  %167 = icmp eq i32 %166, 0
  br i1 %167, label %184, label %183

168:                                              ; preds = %159
  %169 = and i32 %161, 32
  %170 = icmp eq i32 %169, 0
  br i1 %170, label %184, label %183

171:                                              ; preds = %159
  %172 = and i32 %161, 1
  %173 = icmp eq i32 %172, 0
  br i1 %173, label %184, label %183

174:                                              ; preds = %159
  %175 = and i32 %161, 64
  %176 = icmp eq i32 %175, 0
  br i1 %176, label %184, label %183

177:                                              ; preds = %159
  %178 = and i32 %161, 8
  %179 = icmp eq i32 %178, 0
  br i1 %179, label %184, label %183

180:                                              ; preds = %159
  %181 = and i32 %161, 4
  %182 = icmp eq i32 %181, 0
  br i1 %182, label %184, label %183

183:                                              ; preds = %180, %162, %165, %168, %171, %174, %177
  store i8 1, i8* %3, align 1
  br label %184

184:                                              ; preds = %180, %162, %165, %168, %171, %174, %177, %8, %154, %159, %183, %89, %4
  ret void
}

declare i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent15getMediaQueriesEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS8CSSMediaENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4142"* nocapture) unnamed_addr #0 align 2 {
  %4 = tail call i8* @_Znwm(i64 24) #18
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 24, i1 false) #16
  %5 = ptrtoint i8* %4 to i64
  %6 = getelementptr inbounds %"class.std::__1::unique_ptr.4142", %"class.std::__1::unique_ptr.4142"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.std::__1::vector.4145"*, %"class.std::__1::vector.4145"** %6, align 8
  %8 = bitcast %"class.std::__1::unique_ptr.4142"* %2 to i64*
  store i64 %5, i64* %8, align 8
  %9 = icmp eq %"class.std::__1::vector.4145"* %7, null
  br i1 %9, label %39, label %10

10:                                               ; preds = %3
  %11 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %7, i64 0, i32 0, i32 0
  %12 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %11, align 8
  %13 = icmp eq %"class.std::__1::unique_ptr.4147"* %12, null
  br i1 %13, label %37, label %14

14:                                               ; preds = %10
  %15 = bitcast %"class.std::__1::unique_ptr.4147"* %12 to i8*
  %16 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %7, i64 0, i32 0, i32 1
  %17 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %16, align 8
  %18 = icmp eq %"class.std::__1::unique_ptr.4147"* %17, %12
  br i1 %18, label %35, label %19

19:                                               ; preds = %14, %30
  %20 = phi %"class.std::__1::unique_ptr.4147"* [ %21, %30 ], [ %17, %14 ]
  %21 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %20, i64 -1
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %21, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.blink::protocol::CSS::CSSMedia"*, %"class.blink::protocol::CSS::CSSMedia"** %22, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %22, align 8
  %24 = icmp eq %"class.blink::protocol::CSS::CSSMedia"* %23, null
  br i1 %24, label %30, label %25

25:                                               ; preds = %19
  %26 = bitcast %"class.blink::protocol::CSS::CSSMedia"* %23 to void (%"class.blink::protocol::CSS::CSSMedia"*)***
  %27 = load void (%"class.blink::protocol::CSS::CSSMedia"*)**, void (%"class.blink::protocol::CSS::CSSMedia"*)*** %26, align 8
  %28 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %27, i64 2
  %29 = load void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %28, align 8
  tail call void %29(%"class.blink::protocol::CSS::CSSMedia"* nonnull %23) #16
  br label %30

30:                                               ; preds = %25, %19
  %31 = icmp eq %"class.std::__1::unique_ptr.4147"* %21, %12
  br i1 %31, label %32, label %19

32:                                               ; preds = %30
  %33 = bitcast %"class.std::__1::vector.4145"* %7 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %32, %14
  %36 = phi i8* [ %34, %32 ], [ %15, %14 ]
  store %"class.std::__1::unique_ptr.4147"* %12, %"class.std::__1::unique_ptr.4147"** %16, align 8
  tail call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %35, %10
  %38 = bitcast %"class.std::__1::vector.4145"* %7 to i8*
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %37, %3
  %40 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 8, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %44 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %46 = load i32, i32* %45, align 8
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %44, i64 %47
  br i1 %42, label %61, label %49

49:                                               ; preds = %39
  %50 = icmp eq i32 %46, 0
  br i1 %50, label %58, label %51

51:                                               ; preds = %49, %55
  %52 = phi %"struct.WTF::KeyValuePair.3277"* [ %56, %55 ], [ %44, %49 ]
  %53 = bitcast %"struct.WTF::KeyValuePair.3277"* %52 to i64*
  %54 = load i64, i64* %53, align 8
  switch i64 %54, label %58 [
    i64 -1, label %55
    i64 0, label %55
  ]

55:                                               ; preds = %51, %51
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %52, i64 1
  %57 = icmp eq %"struct.WTF::KeyValuePair.3277"* %56, %48
  br i1 %57, label %61, label %51

58:                                               ; preds = %51, %49
  %59 = phi %"struct.WTF::KeyValuePair.3277"* [ %44, %49 ], [ %52, %51 ]
  %60 = icmp eq %"struct.WTF::KeyValuePair.3277"* %59, %48
  br i1 %60, label %61, label %62

61:                                               ; preds = %55, %75, %85, %82, %39, %58
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void

62:                                               ; preds = %58, %85
  %63 = phi %"struct.WTF::KeyValuePair.3277"* [ %79, %85 ], [ %59, %58 ]
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %63, i64 0, i32 1, i32 0, i32 0
  %65 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %65, i64 0, i32 3, i32 0, i32 0
  %67 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %66, align 8
  %68 = load %"class.std::__1::vector.4145"*, %"class.std::__1::vector.4145"** %6, align 8
  tail call void @_ZN5blink17InspectorCSSAgent33CollectMediaQueriesFromStyleSheetEPNS_13CSSStyleSheetEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::CSSStyleSheet"* %67, %"class.std::__1::vector.4145"* %68)
  %69 = tail call dereferenceable(16) %"class.blink::HeapVector.657"* @_ZN5blink19InspectorStyleSheet9FlatRulesEv(%"class.blink::InspectorStyleSheet"* %65) #16
  %70 = getelementptr inbounds %"class.blink::HeapVector.657", %"class.blink::HeapVector.657"* %69, i64 0, i32 0, i32 0, i32 0, i32 2
  %71 = load i32, i32* %70, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %75, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.blink::HeapVector.657", %"class.blink::HeapVector.657"* %69, i64 0, i32 0
  br label %87

75:                                               ; preds = %106, %62
  %76 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %63, i64 1
  %77 = icmp eq %"struct.WTF::KeyValuePair.3277"* %76, %48
  br i1 %77, label %61, label %78

78:                                               ; preds = %75, %82
  %79 = phi %"struct.WTF::KeyValuePair.3277"* [ %83, %82 ], [ %76, %75 ]
  %80 = bitcast %"struct.WTF::KeyValuePair.3277"* %79 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %85 [
    i64 -1, label %82
    i64 0, label %82
  ]

82:                                               ; preds = %78, %78
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %79, i64 1
  %84 = icmp eq %"struct.WTF::KeyValuePair.3277"* %83, %48
  br i1 %84, label %61, label %78

85:                                               ; preds = %78
  %86 = icmp eq %"struct.WTF::KeyValuePair.3277"* %79, %48
  br i1 %86, label %61, label %62

87:                                               ; preds = %73, %106
  %88 = phi i32 [ 0, %73 ], [ %107, %106 ]
  %89 = tail call dereferenceable(8) %"class.blink::Member.644"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.660"* %74, i32 %88)
  %90 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %89, i64 0, i32 0, i32 0
  %91 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %90, align 8
  %92 = bitcast %"class.blink::CSSRule"* %91 to i32 (%"class.blink::CSSRule"*)***
  %93 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %92, align 8
  %94 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %93, i64 9
  %95 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %94, align 8
  %96 = tail call i32 %95(%"class.blink::CSSRule"* %91) #16
  %97 = icmp eq i32 %96, 4
  br i1 %97, label %104, label %98

98:                                               ; preds = %87
  %99 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %92, align 8
  %100 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %99, i64 9
  %101 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %100, align 8
  %102 = tail call i32 %101(%"class.blink::CSSRule"* %91) #16
  %103 = icmp eq i32 %102, 3
  br i1 %103, label %104, label %106

104:                                              ; preds = %98, %87
  %105 = load %"class.std::__1::vector.4145"*, %"class.std::__1::vector.4145"** %6, align 8
  tail call void @_ZN5blink17InspectorCSSAgent27CollectMediaQueriesFromRuleEPNS_7CSSRuleEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::CSSRule"* %91, %"class.std::__1::vector.4145"* %105)
  br label %106

106:                                              ; preds = %104, %98
  %107 = add nuw i32 %88, 1
  %108 = load i32, i32* %70, align 4
  %109 = icmp ult i32 %107, %108
  br i1 %109, label %87, label %75
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent33CollectMediaQueriesFromStyleSheetEPNS_13CSSStyleSheetEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSStyleSheet"*, %"class.std::__1::vector.4145"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::unique_ptr.4147", align 8
  %7 = tail call %"class.blink::MediaList"* @_ZN5blink13CSSStyleSheet5mediaEv(%"class.blink::CSSStyleSheet"* %1) #16
  %8 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.blink::MediaList"* %7, null
  br i1 %10, label %128, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.blink::MediaList", %"class.blink::MediaList"* %7, i64 0, i32 1, i32 0
  %13 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %13, i64 0, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %128, label %17

17:                                               ; preds = %11
  %18 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %1) #16
  %19 = icmp eq %"class.blink::Document"* %18, null
  br i1 %19, label %44, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %18, i64 0, i32 19, i32 4, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %41, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %41

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %31 = load i32, i32* %30, align 4
  %32 = zext i32 %31 to i33
  %33 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %32, i33 1) #16
  %34 = extractvalue { i33, i1 } %33, 1
  %35 = extractvalue { i33, i1 } %33, 0
  %36 = icmp slt i33 %35, 0
  %37 = or i1 %34, %36
  br i1 %37, label %38, label %39, !prof !3

38:                                               ; preds = %29
  tail call void @llvm.trap() #16
  unreachable

39:                                               ; preds = %29
  %40 = trunc i33 %35 to i32
  store i32 %40, i32* %30, align 4
  br label %41

41:                                               ; preds = %20, %24, %39
  %42 = ptrtoint %"class.WTF::StringImpl"* %22 to i64
  %43 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %42, i64* %43, align 8
  br label %84

44:                                               ; preds = %17
  %45 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 1, i32 0, i32 0
  %46 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %46, i64 0, i32 10, i32 0, i32 0
  %48 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %48, i64 0, i32 0
  %50 = tail call zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"* %49) #16
  br i1 %50, label %78, label %51

51:                                               ; preds = %44
  %52 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %45, align 8
  %53 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %52, i64 0, i32 10, i32 0, i32 0
  %54 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %53, align 8
  %55 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %54, i64 0, i32 0, i32 4, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #16
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %63
  tail call void @llvm.trap() #16
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %51, %58, %73
  %76 = ptrtoint %"class.WTF::StringImpl"* %56 to i64
  %77 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %76, i64* %77, align 8
  br label %84

78:                                               ; preds = %44
  %79 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %79) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i64 0) #16
  %80 = bitcast %"class.WTF::String"* %5 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %81, i64* %82, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %79) #16
  %83 = inttoptr i64 %81 to %"class.WTF::StringImpl"*
  br label %84

84:                                               ; preds = %75, %78, %41
  %85 = phi %"class.WTF::StringImpl"* [ %56, %75 ], [ %83, %78 ], [ %22, %41 ]
  %86 = bitcast %"class.std::__1::unique_ptr.4147"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %86) #16
  %87 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 11, i32 0, i32 0
  %88 = load %"class.blink::Node"*, %"class.blink::Node"** %87, align 8
  %89 = icmp eq %"class.blink::Node"* %88, null
  %90 = zext i1 %89 to i32
  %91 = call %"class.blink::protocol::CSS::CSSMedia"* @_ZN5blink17InspectorCSSAgent16BuildMediaObjectEPKNS_9MediaListENS0_15MediaListSourceERKN3WTF6StringEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::MediaList"* nonnull %7, i32 %90, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::CSSStyleSheet"* %1)
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::CSS::CSSMedia"* %91, %"class.blink::protocol::CSS::CSSMedia"** %92, align 8
  %93 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %2, i64 0, i32 0, i32 1
  %94 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %93, align 8
  %95 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %96 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %95, align 8
  %97 = icmp ult %"class.std::__1::unique_ptr.4147"* %94, %96
  br i1 %97, label %98, label %104

98:                                               ; preds = %84
  %99 = ptrtoint %"class.blink::protocol::CSS::CSSMedia"* %91 to i64
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %92, align 8
  %100 = bitcast %"class.std::__1::unique_ptr.4147"* %94 to i64*
  store i64 %99, i64* %100, align 8
  %101 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %94, i64 1
  %102 = ptrtoint %"class.std::__1::unique_ptr.4147"* %101 to i64
  %103 = bitcast %"class.std::__1::unique_ptr.4147"** %93 to i64*
  store i64 %102, i64* %103, align 8
  br label %105

104:                                              ; preds = %84
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS8CSSMediaENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4145"* %2, %"class.std::__1::unique_ptr.4147"* nonnull dereferenceable(8) %6) #16
  br label %105

105:                                              ; preds = %98, %104
  %106 = load %"class.blink::protocol::CSS::CSSMedia"*, %"class.blink::protocol::CSS::CSSMedia"** %92, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %92, align 8
  %107 = icmp eq %"class.blink::protocol::CSS::CSSMedia"* %106, null
  br i1 %107, label %113, label %108

108:                                              ; preds = %105
  %109 = bitcast %"class.blink::protocol::CSS::CSSMedia"* %106 to void (%"class.blink::protocol::CSS::CSSMedia"*)***
  %110 = load void (%"class.blink::protocol::CSS::CSSMedia"*)**, void (%"class.blink::protocol::CSS::CSSMedia"*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %110, i64 2
  %112 = load void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %111, align 8
  call void %112(%"class.blink::protocol::CSS::CSSMedia"* nonnull %106) #16
  br label %113

113:                                              ; preds = %108, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %86) #16
  %114 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %114, label %128, label %115

115:                                              ; preds = %113
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load atomic i32, i32* %116 monotonic, align 4
  %118 = and i32 %117, 2
  %119 = icmp eq i32 %118, 0
  %120 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %121 = load i32, i32* %120, align 4
  br i1 %119, label %122, label %124

122:                                              ; preds = %115
  %123 = add i32 %121, -1
  store i32 %123, i32* %120, align 4
  br label %124

124:                                              ; preds = %122, %115
  %125 = phi i32 [ %123, %122 ], [ %121, %115 ]
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %128

127:                                              ; preds = %124
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #16
  br label %128

128:                                              ; preds = %11, %3, %113, %124, %127
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret void
}

declare dereferenceable(16) %"class.blink::HeapVector.657"* @_ZN5blink19InspectorStyleSheet9FlatRulesEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.644"* @_ZNK3WTF6VectorIN5blink6MemberINS1_7CSSRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.660"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.660", %"class.WTF::Vector.660"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.660", %"class.WTF::Vector.660"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %24, i64 %25
  ret %"class.blink::Member.644"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent27CollectMediaQueriesFromRuleEPNS_7CSSRuleEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSRule"*, %"class.std::__1::vector.4145"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::unique_ptr.4147", align 8
  %7 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %8, align 8
  %9 = icmp eq %"class.blink::CSSRule"* %1, null
  br i1 %9, label %121, label %10

10:                                               ; preds = %3
  %11 = bitcast %"class.blink::CSSRule"* %1 to i32 (%"class.blink::CSSRule"*)***
  %12 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %11, align 8
  %13 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %12, i64 9
  %14 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %13, align 8
  %15 = tail call i32 %14(%"class.blink::CSSRule"* nonnull %1) #16
  %16 = icmp eq i32 %15, 4
  br i1 %16, label %17, label %39

17:                                               ; preds = %10
  %18 = bitcast %"class.blink::CSSRule"* %1 to %"class.blink::CSSMediaRule"*
  %19 = tail call %"class.blink::MediaList"* @_ZNK5blink12CSSMediaRule5mediaEv(%"class.blink::CSSMediaRule"* nonnull %18) #16
  %20 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %1, i64 0, i32 1
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, 2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %1, i64 0, i32 2, i32 0, i32 0
  br i1 %23, label %67, label %25

25:                                               ; preds = %17, %30
  %26 = phi %"class.blink::ScriptWrappable"** [ %38, %30 ], [ %24, %17 ]
  %27 = phi %"class.blink::CSSRule"* [ %33, %30 ], [ %1, %17 ]
  %28 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %26, align 8
  %29 = icmp eq %"class.blink::ScriptWrappable"* %28, null
  br i1 %29, label %121, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %27, i64 0, i32 2, i32 0, i32 0
  %32 = bitcast %"class.blink::ScriptWrappable"** %31 to %"class.blink::CSSRule"**
  %33 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %33, i64 0, i32 1
  %35 = load i8, i8* %34, align 8
  %36 = and i8 %35, 2
  %37 = icmp eq i8 %36, 0
  %38 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %33, i64 0, i32 2, i32 0, i32 0
  br i1 %37, label %67, label %25

39:                                               ; preds = %10
  %40 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %11, align 8
  %41 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %40, i64 9
  %42 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %41, align 8
  %43 = tail call i32 %42(%"class.blink::CSSRule"* nonnull %1) #16
  %44 = icmp eq i32 %43, 3
  br i1 %44, label %45, label %121

45:                                               ; preds = %39
  %46 = bitcast %"class.blink::CSSRule"* %1 to %"class.blink::CSSImportRule"*
  %47 = tail call %"class.blink::MediaList"* @_ZNK5blink13CSSImportRule5mediaEv(%"class.blink::CSSImportRule"* nonnull %46) #16
  %48 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %1, i64 0, i32 1
  %49 = load i8, i8* %48, align 8
  %50 = and i8 %49, 2
  %51 = icmp eq i8 %50, 0
  %52 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %1, i64 0, i32 2, i32 0, i32 0
  br i1 %51, label %67, label %53

53:                                               ; preds = %45, %58
  %54 = phi %"class.blink::ScriptWrappable"** [ %66, %58 ], [ %52, %45 ]
  %55 = phi %"class.blink::CSSRule"* [ %61, %58 ], [ %1, %45 ]
  %56 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %54, align 8
  %57 = icmp eq %"class.blink::ScriptWrappable"* %56, null
  br i1 %57, label %121, label %58

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %55, i64 0, i32 2, i32 0, i32 0
  %60 = bitcast %"class.blink::ScriptWrappable"** %59 to %"class.blink::CSSRule"**
  %61 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %60, align 8
  %62 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %61, i64 0, i32 1
  %63 = load i8, i8* %62, align 8
  %64 = and i8 %63, 2
  %65 = icmp eq i8 %64, 0
  %66 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %61, i64 0, i32 2, i32 0, i32 0
  br i1 %65, label %67, label %53

67:                                               ; preds = %58, %30, %45, %17
  %68 = phi %"class.blink::MediaList"* [ %19, %17 ], [ %47, %45 ], [ %19, %30 ], [ %47, %58 ]
  %69 = phi %"class.blink::ScriptWrappable"** [ %24, %17 ], [ %52, %45 ], [ %38, %30 ], [ %66, %58 ]
  %70 = phi i1 [ true, %17 ], [ false, %45 ], [ true, %30 ], [ false, %58 ]
  %71 = bitcast %"class.blink::ScriptWrappable"** %69 to %"class.blink::CSSStyleSheet"**
  %72 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %71, align 8
  %73 = icmp eq %"class.blink::CSSStyleSheet"* %72, null
  br i1 %73, label %121, label %74

74:                                               ; preds = %67
  %75 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %72, i64 0, i32 1, i32 0, i32 0
  %76 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %75, align 8
  %77 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %76, i64 0, i32 10, i32 0, i32 0
  %78 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %77, align 8
  %79 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %78, i64 0, i32 0, i32 4, i32 0, i32 0
  %80 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %79, align 8
  %81 = icmp eq %"class.WTF::StringImpl"* %80, null
  br i1 %81, label %129, label %82

82:                                               ; preds = %74
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %99

87:                                               ; preds = %82
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %89 = load i32, i32* %88, align 4
  %90 = zext i32 %89 to i33
  %91 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %90, i33 1) #16
  %92 = extractvalue { i33, i1 } %91, 1
  %93 = extractvalue { i33, i1 } %91, 0
  %94 = icmp slt i33 %93, 0
  %95 = or i1 %92, %94
  br i1 %95, label %96, label %97, !prof !3

96:                                               ; preds = %87
  tail call void @llvm.trap() #16
  unreachable

97:                                               ; preds = %87
  %98 = trunc i33 %93 to i32
  store i32 %98, i32* %88, align 4
  br label %99

99:                                               ; preds = %82, %97
  %100 = ptrtoint %"class.WTF::StringImpl"* %80 to i64
  %101 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %100, i64* %101, align 8
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 1
  %103 = load i32, i32* %102, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %134

105:                                              ; preds = %99
  %106 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* nonnull %72) #16
  %107 = tail call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"* %106) #16
  %108 = ptrtoint %"class.WTF::StringImpl"* %107 to i64
  store i64 %108, i64* %101, align 8
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %110 = load atomic i32, i32* %109 monotonic, align 4
  %111 = and i32 %110, 2
  %112 = icmp eq i32 %111, 0
  %113 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %80, i64 0, i32 0
  %114 = load i32, i32* %113, align 4
  br i1 %112, label %115, label %117

115:                                              ; preds = %105
  %116 = add i32 %114, -1
  store i32 %116, i32* %113, align 4
  br label %117

117:                                              ; preds = %115, %105
  %118 = phi i32 [ %116, %115 ], [ %114, %105 ]
  %119 = icmp eq i32 %118, 0
  br i1 %119, label %120, label %134

120:                                              ; preds = %117
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %80) #16
  br label %134

121:                                              ; preds = %53, %25, %39, %3, %67
  %122 = phi i1 [ %70, %67 ], [ true, %39 ], [ true, %3 ], [ true, %25 ], [ false, %53 ]
  %123 = phi %"class.blink::MediaList"* [ %68, %67 ], [ null, %39 ], [ null, %3 ], [ %19, %25 ], [ %47, %53 ]
  %124 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %124) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i64 0) #16
  %125 = bitcast %"class.WTF::String"* %5 to i64*
  %126 = load i64, i64* %125, align 8
  %127 = bitcast %"class.WTF::String"* %4 to i64*
  store i64 %126, i64* %127, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %124) #16
  %128 = inttoptr i64 %126 to %"class.WTF::StringImpl"*
  br label %134

129:                                              ; preds = %74
  %130 = bitcast %"class.WTF::String"* %4 to i64*
  %131 = tail call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* nonnull %72) #16
  %132 = tail call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"* %131) #16
  %133 = ptrtoint %"class.WTF::StringImpl"* %132 to i64
  store i64 %133, i64* %130, align 8
  br label %134

134:                                              ; preds = %129, %117, %120, %99, %121
  %135 = phi %"class.WTF::StringImpl"* [ %80, %99 ], [ %128, %121 ], [ %107, %120 ], [ %107, %117 ], [ %132, %129 ]
  %136 = phi i1 [ %70, %99 ], [ %122, %121 ], [ %70, %120 ], [ %70, %117 ], [ %70, %129 ]
  %137 = phi %"class.blink::CSSStyleSheet"* [ %72, %99 ], [ null, %121 ], [ %72, %120 ], [ %72, %117 ], [ %72, %129 ]
  %138 = phi %"class.blink::MediaList"* [ %68, %99 ], [ %123, %121 ], [ %68, %120 ], [ %68, %117 ], [ %68, %129 ]
  %139 = icmp eq %"class.blink::MediaList"* %138, null
  br i1 %139, label %172, label %140

140:                                              ; preds = %134
  %141 = getelementptr inbounds %"class.blink::MediaList", %"class.blink::MediaList"* %138, i64 0, i32 1, i32 0
  %142 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %141, align 8
  %143 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %142, i64 0, i32 1, i32 0, i32 0, i32 2
  %144 = load i32, i32* %143, align 4
  %145 = icmp eq i32 %144, 0
  br i1 %145, label %172, label %146

146:                                              ; preds = %140
  %147 = bitcast %"class.std::__1::unique_ptr.4147"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %147) #16
  %148 = select i1 %136, i32 2, i32 3
  %149 = call %"class.blink::protocol::CSS::CSSMedia"* @_ZN5blink17InspectorCSSAgent16BuildMediaObjectEPKNS_9MediaListENS0_15MediaListSourceERKN3WTF6StringEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::MediaList"* nonnull %138, i32 %148, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.blink::CSSStyleSheet"* %137)
  %150 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.blink::protocol::CSS::CSSMedia"* %149, %"class.blink::protocol::CSS::CSSMedia"** %150, align 8
  %151 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %2, i64 0, i32 0, i32 1
  %152 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %151, align 8
  %153 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %2, i64 0, i32 0, i32 2, i32 0, i32 0
  %154 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %153, align 8
  %155 = icmp ult %"class.std::__1::unique_ptr.4147"* %152, %154
  br i1 %155, label %156, label %162

156:                                              ; preds = %146
  %157 = ptrtoint %"class.blink::protocol::CSS::CSSMedia"* %149 to i64
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %150, align 8
  %158 = bitcast %"class.std::__1::unique_ptr.4147"* %152 to i64*
  store i64 %157, i64* %158, align 8
  %159 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %152, i64 1
  %160 = ptrtoint %"class.std::__1::unique_ptr.4147"* %159 to i64
  %161 = bitcast %"class.std::__1::unique_ptr.4147"** %151 to i64*
  store i64 %160, i64* %161, align 8
  br label %163

162:                                              ; preds = %146
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS8CSSMediaENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4145"* %2, %"class.std::__1::unique_ptr.4147"* nonnull dereferenceable(8) %6) #16
  br label %163

163:                                              ; preds = %156, %162
  %164 = load %"class.blink::protocol::CSS::CSSMedia"*, %"class.blink::protocol::CSS::CSSMedia"** %150, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %150, align 8
  %165 = icmp eq %"class.blink::protocol::CSS::CSSMedia"* %164, null
  br i1 %165, label %171, label %166

166:                                              ; preds = %163
  %167 = bitcast %"class.blink::protocol::CSS::CSSMedia"* %164 to void (%"class.blink::protocol::CSS::CSSMedia"*)***
  %168 = load void (%"class.blink::protocol::CSS::CSSMedia"*)**, void (%"class.blink::protocol::CSS::CSSMedia"*)*** %167, align 8
  %169 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %168, i64 2
  %170 = load void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %169, align 8
  call void %170(%"class.blink::protocol::CSS::CSSMedia"* nonnull %164) #16
  br label %171

171:                                              ; preds = %163, %166
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %147) #16
  br label %172

172:                                              ; preds = %140, %134, %171
  %173 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %173, label %187, label %174

174:                                              ; preds = %172
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  %179 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %180 = load i32, i32* %179, align 4
  br i1 %178, label %181, label %183

181:                                              ; preds = %174
  %182 = add i32 %180, -1
  store i32 %182, i32* %179, align 4
  br label %183

183:                                              ; preds = %181, %174
  %184 = phi i32 [ %182, %181 ], [ %180, %174 ]
  %185 = icmp eq i32 %184, 0
  br i1 %185, label %186, label %187

186:                                              ; preds = %183
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #16
  br label %187

187:                                              ; preds = %172, %183, %186
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent15getMediaQueriesEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS8CSSMediaENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4142"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent15getMediaQueriesEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS8CSSMediaENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %5, %"class.std::__1::unique_ptr.4142"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent23getMatchedStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_PNS3_INSt3__16vectorINS9_10unique_ptrINS5_9RuleMatchENS9_14default_deleteISC_EEEENS9_9allocatorISF_EEEEEEPNS3_INSA_INSB_INS5_20PseudoElementMatchesENSD_ISL_EEEENSG_ISN_EEEEEEPNS3_INSA_INSB_INS5_19InheritedStyleEntryENSD_ISS_EEEENSG_ISU_EEEEEEPNS3_INSA_INSB_INS5_16CSSKeyframesRuleENSD_ISZ_EEEENSG_IS11_EEEEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"* nocapture, %"class.crdtp::detail::PtrMaybe.4223"* nocapture, %"class.crdtp::detail::PtrMaybe.4247"* nocapture, %"class.crdtp::detail::PtrMaybe.4302"* nocapture, %"class.crdtp::detail::PtrMaybe.4325"* nocapture, %"class.crdtp::detail::PtrMaybe.4348"* nocapture) unnamed_addr #0 align 2 {
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.crdtp::DispatchResponse", align 8
  %12 = alloca %"class.blink::Element"*, align 8
  %13 = alloca %"class.crdtp::DispatchResponse", align 8
  %14 = alloca %"class.std::__1::basic_string", align 8
  %15 = alloca %"class.std::__1::basic_string", align 8
  %16 = alloca %"class.blink::InspectorStyleResolver", align 8
  %17 = alloca %"class.blink::HeapVector.4413", align 8
  %18 = alloca %"class.std::__1::unique_ptr.4308", align 8
  %19 = alloca %"class.blink::HeapVector.4413", align 8
  %20 = alloca %"class.std::__1::unique_ptr.4331", align 8
  %21 = bitcast %"class.crdtp::DispatchResponse"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %21) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 -86, i64 32, i1 false)
  %22 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22)
  %23 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  %24 = load i8, i8* %23, align 8, !range !4, !noalias !21
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %27, label %26

26:                                               ; preds = %9
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %11) #16
  br label %39

27:                                               ; preds = %9
  %28 = tail call i8* @_Znwm(i64 32) #18
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %28, i8** %29, align 8, !noalias !21
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %31 = bitcast i64* %30 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %31, align 8, !noalias !21
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %28, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i64 25, i1 false) #16
  %32 = getelementptr inbounds i8, i8* %28, i64 25
  store i8 0, i8* %32, align 1, !noalias !21
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %11, %"class.std::__1::basic_string"* nonnull %10) #16
  %33 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1, !noalias !21
  %36 = icmp slt i8 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %27
  %38 = load i8*, i8** %29, align 8, !noalias !21
  call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %26, %27, %37
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22)
  %40 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %11, i64 0, i32 0
  %41 = load i32, i32* %40, align 8
  %42 = icmp eq i32 %41, 1
  br i1 %42, label %49, label %43

43:                                               ; preds = %39
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %41, i32* %44, align 8
  %45 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %46 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %11, i64 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"* %45 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #16
  br label %607

49:                                               ; preds = %39
  %50 = bitcast %"class.blink::Element"** %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #16
  store %"class.blink::Element"* null, %"class.blink::Element"** %12, align 8
  %51 = bitcast %"class.crdtp::DispatchResponse"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %51) #16
  %52 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %53 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %52, align 8
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %13, %"class.blink::InspectorDOMAgent"* %53, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %12) #16
  %54 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %13, i64 0, i32 0
  %55 = load i32, i32* %54, align 8
  store i32 %55, i32* %40, align 8
  %56 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %11, i64 0, i32 1
  %57 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %13, i64 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string"* %56 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %59 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %58, i64 0, i32 1, i32 0
  %60 = load i8, i8* %59, align 1
  %61 = icmp slt i8 %60, 0
  br i1 %61, label %62, label %66

62:                                               ; preds = %49
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %56, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  call void @_ZdlPv(i8* %64) #18
  %65 = load i32, i32* %40, align 8
  br label %66

66:                                               ; preds = %62, %49
  %67 = phi i32 [ %65, %62 ], [ %55, %49 ]
  %68 = bitcast %"class.std::__1::basic_string"* %56 to i8*
  %69 = bitcast %"class.std::__1::basic_string"* %57 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %68, i8* align 8 %69, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %51) #16
  %70 = icmp eq i32 %67, 1
  br i1 %70, label %75, label %71

71:                                               ; preds = %66
  %72 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %67, i32* %72, align 8
  %73 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %74 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %68, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %68, i8 0, i64 24, i1 false) #16
  br label %601

75:                                               ; preds = %66
  %76 = bitcast %"class.blink::Element"** %12 to %"class.blink::Node"**
  %77 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  %78 = bitcast %"class.blink::Node"* %77 to i8 (%"class.blink::Node"*)***
  %79 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %78, align 8
  %80 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %79, i64 34
  %81 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %80, align 8
  %82 = call zeroext i8 %81(%"class.blink::Node"* %77) #16
  %83 = icmp ne i8 %82, 0
  %84 = load %"class.blink::Node"*, %"class.blink::Node"** %76, align 8
  br i1 %83, label %87, label %85

85:                                               ; preds = %75
  %86 = bitcast %"class.blink::Node"* %84 to %"class.blink::Element"*
  br label %103

87:                                               ; preds = %75
  %88 = call %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"* %84) #16
  store %"class.blink::Element"* %88, %"class.blink::Element"** %12, align 8
  %89 = icmp eq %"class.blink::Element"* %88, null
  %90 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %88, i64 0, i32 0, i32 0
  br i1 %89, label %91, label %103

91:                                               ; preds = %87
  %92 = call i8* @_Znwm(i64 32) #18
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %92, i8** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %14, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %95, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %92, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.1, i64 0, i64 0), i64 28, i1 false) #16
  %96 = getelementptr inbounds i8, i8* %92, i64 28
  store i8 0, i8* %96, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %14) #16
  %97 = bitcast %"class.std::__1::basic_string"* %14 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %601

101:                                              ; preds = %91
  %102 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %601

103:                                              ; preds = %85, %87
  %104 = phi %"class.blink::Element"* [ %86, %85 ], [ %88, %87 ]
  %105 = phi %"class.blink::Node"* [ %84, %85 ], [ %90, %87 ]
  %106 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %105, i64 0, i32 3, i32 0, i32 0
  %107 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %106, align 8
  %108 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %107, i64 0, i32 2, i32 0, i32 0
  %109 = load %"class.blink::Document"*, %"class.blink::Document"** %108, align 8
  %110 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %109, i64 0, i32 5, i32 0
  %111 = load i32, i32* %110, align 4
  %112 = add i32 %111, -2
  %113 = icmp ult i32 %112, 18
  br i1 %113, label %124, label %114

114:                                              ; preds = %103
  %115 = bitcast %"class.std::__1::basic_string"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %116 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %115, i64 0, i32 1, i32 0
  store i8 22, i8* %116, align 1
  %117 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %117, i8* align 1 getelementptr inbounds ([23 x i8], [23 x i8]* @.str.2, i64 0, i64 0), i64 22, i1 false) #16
  %118 = getelementptr inbounds i8, i8* %117, i64 22
  store i8 0, i8* %118, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %15) #16
  %119 = load i8, i8* %116, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %601

121:                                              ; preds = %114
  %122 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load i8*, i8** %122, align 8
  call void @_ZdlPv(i8* %123) #18
  br label %601

124:                                              ; preds = %103
  %125 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 10, i32 0, i32 0, i32 2
  %126 = load i32, i32* %125, align 4
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 10, i32 0, i32 0, i32 0
  %129 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %128, align 8
  %130 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 10, i32 0, i32 0, i32 1
  %131 = load i32, i32* %130, align 8
  %132 = zext i32 %131 to i64
  %133 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %129, i64 %132
  br i1 %127, label %148, label %134

134:                                              ; preds = %124
  %135 = icmp eq i32 %131, 0
  br i1 %135, label %143, label %136

136:                                              ; preds = %134, %140
  %137 = phi %"struct.WTF::KeyValuePair.3291"* [ %141, %140 ], [ %129, %134 ]
  %138 = bitcast %"struct.WTF::KeyValuePair.3291"* %137 to i64*
  %139 = load i64, i64* %138, align 8
  switch i64 %139, label %143 [
    i64 -1, label %140
    i64 0, label %140
  ]

140:                                              ; preds = %136, %136
  %141 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %137, i64 1
  %142 = icmp eq %"struct.WTF::KeyValuePair.3291"* %141, %133
  br i1 %142, label %148, label %136

143:                                              ; preds = %136, %134
  %144 = phi %"struct.WTF::KeyValuePair.3291"* [ %129, %134 ], [ %137, %136 ]
  %145 = icmp eq %"struct.WTF::KeyValuePair.3291"* %144, %133
  br i1 %145, label %148, label %188

146:                                              ; preds = %188, %201, %198
  %147 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  br label %148

148:                                              ; preds = %140, %124, %146, %143
  %149 = phi %"class.blink::Element"* [ %147, %146 ], [ %104, %143 ], [ %104, %124 ], [ %104, %140 ]
  %150 = bitcast %"class.blink::InspectorStyleResolver"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %150) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %150, i8 -86, i64 48, i1 false)
  call void @_ZN5blink22InspectorStyleResolverC1EPNS_7ElementENS_8PseudoIdE(%"class.blink::InspectorStyleResolver"* nonnull %16, %"class.blink::Element"* %149, i8 zeroext %82) #16
  %151 = call %"class.blink::HeapVector.4405"* @_ZNK5blink22InspectorStyleResolver12MatchedRulesEv(%"class.blink::InspectorStyleResolver"* nonnull %16) #16
  %152 = call %"class.std::__1::vector.4251"* @_ZN5blink17InspectorCSSAgent28BuildArrayForMatchedRuleListEPNS_10HeapVectorINSt3__14pairINS_6MemberINS_7CSSRuleEEEiEELj0EEENS_8PseudoIdE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::HeapVector.4405"* %151, i8 zeroext undef)
  %153 = ptrtoint %"class.std::__1::vector.4251"* %152 to i64
  %154 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4247", %"class.crdtp::detail::PtrMaybe.4247"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %155 = load %"class.std::__1::vector.4251"*, %"class.std::__1::vector.4251"** %154, align 8
  %156 = bitcast %"class.crdtp::detail::PtrMaybe.4247"* %5 to i64*
  store i64 %153, i64* %156, align 8
  %157 = icmp eq %"class.std::__1::vector.4251"* %155, null
  br i1 %157, label %187, label %158

158:                                              ; preds = %148
  %159 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %155, i64 0, i32 0, i32 0
  %160 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %159, align 8
  %161 = icmp eq %"class.std::__1::unique_ptr.4253"* %160, null
  br i1 %161, label %185, label %162

162:                                              ; preds = %158
  %163 = bitcast %"class.std::__1::unique_ptr.4253"* %160 to i8*
  %164 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %155, i64 0, i32 0, i32 1
  %165 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %164, align 8
  %166 = icmp eq %"class.std::__1::unique_ptr.4253"* %165, %160
  br i1 %166, label %183, label %167

167:                                              ; preds = %162, %178
  %168 = phi %"class.std::__1::unique_ptr.4253"* [ %169, %178 ], [ %165, %162 ]
  %169 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %168, i64 -1
  %170 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %169, i64 0, i32 0, i32 0, i32 0
  %171 = load %"class.blink::protocol::CSS::RuleMatch"*, %"class.blink::protocol::CSS::RuleMatch"** %170, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %170, align 8
  %172 = icmp eq %"class.blink::protocol::CSS::RuleMatch"* %171, null
  br i1 %172, label %178, label %173

173:                                              ; preds = %167
  %174 = bitcast %"class.blink::protocol::CSS::RuleMatch"* %171 to void (%"class.blink::protocol::CSS::RuleMatch"*)***
  %175 = load void (%"class.blink::protocol::CSS::RuleMatch"*)**, void (%"class.blink::protocol::CSS::RuleMatch"*)*** %174, align 8
  %176 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %175, i64 2
  %177 = load void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %176, align 8
  call void %177(%"class.blink::protocol::CSS::RuleMatch"* nonnull %171) #16
  br label %178

178:                                              ; preds = %173, %167
  %179 = icmp eq %"class.std::__1::unique_ptr.4253"* %169, %160
  br i1 %179, label %180, label %167

180:                                              ; preds = %178
  %181 = bitcast %"class.std::__1::vector.4251"* %155 to i8**
  %182 = load i8*, i8** %181, align 8
  br label %183

183:                                              ; preds = %180, %162
  %184 = phi i8* [ %182, %180 ], [ %163, %162 ]
  store %"class.std::__1::unique_ptr.4253"* %160, %"class.std::__1::unique_ptr.4253"** %164, align 8
  call void @_ZdlPv(i8* %184) #18
  br label %185

185:                                              ; preds = %183, %158
  %186 = bitcast %"class.std::__1::vector.4251"* %155 to i8*
  call void @_ZdlPv(i8* %186) #18
  br label %187

187:                                              ; preds = %148, %185
  br i1 %83, label %600, label %203

188:                                              ; preds = %143, %201
  %189 = phi %"struct.WTF::KeyValuePair.3291"* [ %195, %201 ], [ %144, %143 ]
  %190 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %189, i64 0, i32 1, i32 0, i32 0
  %191 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %190, align 8
  call void @_ZN5blink19InspectorStyleSheet16SyncTextIfNeededEv(%"class.blink::InspectorStyleSheet"* %191) #16
  %192 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %189, i64 1
  %193 = icmp eq %"struct.WTF::KeyValuePair.3291"* %192, %133
  br i1 %193, label %146, label %194

194:                                              ; preds = %188, %198
  %195 = phi %"struct.WTF::KeyValuePair.3291"* [ %199, %198 ], [ %192, %188 ]
  %196 = bitcast %"struct.WTF::KeyValuePair.3291"* %195 to i64*
  %197 = load i64, i64* %196, align 8
  switch i64 %197, label %201 [
    i64 -1, label %198
    i64 0, label %198
  ]

198:                                              ; preds = %194, %194
  %199 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %195, i64 1
  %200 = icmp eq %"struct.WTF::KeyValuePair.3291"* %199, %133
  br i1 %200, label %146, label %194

201:                                              ; preds = %194
  %202 = icmp eq %"struct.WTF::KeyValuePair.3291"* %195, %133
  br i1 %202, label %146, label %188

203:                                              ; preds = %187
  %204 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %205 = call %"class.blink::InspectorStyleSheetForInlineStyle"* @_ZN5blink17InspectorCSSAgent21AsInspectorStyleSheetEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Element"* %204)
  %206 = icmp eq %"class.blink::InspectorStyleSheetForInlineStyle"* %205, null
  br i1 %206, label %235, label %207

207:                                              ; preds = %203
  %208 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %205, i64 0, i32 0
  %209 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %210 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %209) #16
  %211 = call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"* %208, %"class.blink::CSSStyleDeclaration"* %210) #16
  %212 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %211 to i64
  %213 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4223", %"class.crdtp::detail::PtrMaybe.4223"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %214 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %213, align 8
  %215 = bitcast %"class.crdtp::detail::PtrMaybe.4223"* %3 to i64*
  store i64 %212, i64* %215, align 8
  %216 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %214, null
  br i1 %216, label %222, label %217

217:                                              ; preds = %207
  %218 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %214 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %219 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %218, align 8
  %220 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %219, i64 2
  %221 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %220, align 8
  call void %221(%"class.blink::protocol::CSS::CSSStyle"* nonnull %214) #16
  br label %222

222:                                              ; preds = %207, %217
  %223 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %224 = call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink17InspectorCSSAgent29BuildObjectForAttributesStyleEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* undef, %"class.blink::Element"* %223)
  %225 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %224 to i64
  %226 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4223", %"class.crdtp::detail::PtrMaybe.4223"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %227 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %226, align 8
  %228 = bitcast %"class.crdtp::detail::PtrMaybe.4223"* %4 to i64*
  store i64 %225, i64* %228, align 8
  %229 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %227, null
  br i1 %229, label %235, label %230

230:                                              ; preds = %222
  %231 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %227 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %232 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %231, align 8
  %233 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %232, i64 2
  %234 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %233, align 8
  call void %234(%"class.blink::protocol::CSS::CSSStyle"* nonnull %227) #16
  br label %235

235:                                              ; preds = %230, %222, %203
  %236 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %236, i8 0, i64 24, i1 false) #16
  %237 = ptrtoint i8* %236 to i64
  %238 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4302", %"class.crdtp::detail::PtrMaybe.4302"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %239 = load %"class.std::__1::vector.4306"*, %"class.std::__1::vector.4306"** %238, align 8
  %240 = bitcast %"class.crdtp::detail::PtrMaybe.4302"* %6 to i64*
  store i64 %237, i64* %240, align 8
  %241 = icmp eq %"class.std::__1::vector.4306"* %239, null
  br i1 %241, label %271, label %242

242:                                              ; preds = %235
  %243 = getelementptr inbounds %"class.std::__1::vector.4306", %"class.std::__1::vector.4306"* %239, i64 0, i32 0, i32 0
  %244 = load %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"** %243, align 8
  %245 = icmp eq %"class.std::__1::unique_ptr.4308"* %244, null
  br i1 %245, label %269, label %246

246:                                              ; preds = %242
  %247 = bitcast %"class.std::__1::unique_ptr.4308"* %244 to i8*
  %248 = getelementptr inbounds %"class.std::__1::vector.4306", %"class.std::__1::vector.4306"* %239, i64 0, i32 0, i32 1
  %249 = load %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"** %248, align 8
  %250 = icmp eq %"class.std::__1::unique_ptr.4308"* %249, %244
  br i1 %250, label %267, label %251

251:                                              ; preds = %246, %262
  %252 = phi %"class.std::__1::unique_ptr.4308"* [ %253, %262 ], [ %249, %246 ]
  %253 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %252, i64 -1
  %254 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %253, i64 0, i32 0, i32 0, i32 0
  %255 = load %"class.blink::protocol::CSS::PseudoElementMatches"*, %"class.blink::protocol::CSS::PseudoElementMatches"** %254, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %254, align 8
  %256 = icmp eq %"class.blink::protocol::CSS::PseudoElementMatches"* %255, null
  br i1 %256, label %262, label %257

257:                                              ; preds = %251
  %258 = bitcast %"class.blink::protocol::CSS::PseudoElementMatches"* %255 to void (%"class.blink::protocol::CSS::PseudoElementMatches"*)***
  %259 = load void (%"class.blink::protocol::CSS::PseudoElementMatches"*)**, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*** %258, align 8
  %260 = getelementptr inbounds void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)** %259, i64 2
  %261 = load void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)** %260, align 8
  call void %261(%"class.blink::protocol::CSS::PseudoElementMatches"* nonnull %255) #16
  br label %262

262:                                              ; preds = %257, %251
  %263 = icmp eq %"class.std::__1::unique_ptr.4308"* %253, %244
  br i1 %263, label %264, label %251

264:                                              ; preds = %262
  %265 = bitcast %"class.std::__1::vector.4306"* %239 to i8**
  %266 = load i8*, i8** %265, align 8
  br label %267

267:                                              ; preds = %264, %246
  %268 = phi i8* [ %266, %264 ], [ %247, %246 ]
  store %"class.std::__1::unique_ptr.4308"* %244, %"class.std::__1::unique_ptr.4308"** %248, align 8
  call void @_ZdlPv(i8* %268) #18
  br label %269

269:                                              ; preds = %267, %242
  %270 = bitcast %"class.std::__1::vector.4306"* %239 to i8*
  call void @_ZdlPv(i8* %270) #18
  br label %271

271:                                              ; preds = %235, %269
  %272 = bitcast %"class.blink::HeapVector.4413"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %272) #16
  call void @_ZN5blink22InspectorStyleResolver18PseudoElementRulesEv(%"class.blink::HeapVector.4413"* nonnull sret %17, %"class.blink::InspectorStyleResolver"* nonnull %16) #16
  %273 = getelementptr inbounds %"class.blink::HeapVector.4413", %"class.blink::HeapVector.4413"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %274 = load %"class.blink::Member.4419"*, %"class.blink::Member.4419"** %273, align 8
  %275 = getelementptr inbounds %"class.blink::HeapVector.4413", %"class.blink::HeapVector.4413"* %17, i64 0, i32 0, i32 0, i32 0, i32 2
  %276 = load i32, i32* %275, align 4
  %277 = zext i32 %276 to i64
  %278 = getelementptr inbounds %"class.blink::Member.4419", %"class.blink::Member.4419"* %274, i64 %277
  %279 = icmp eq i32 %276, 0
  br i1 %279, label %284, label %280

280:                                              ; preds = %271
  %281 = bitcast %"class.std::__1::unique_ptr.4308"* %18 to i8*
  %282 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %18, i64 0, i32 0, i32 0, i32 0
  %283 = bitcast %"class.std::__1::unique_ptr.4308"* %18 to i8**
  br label %334

284:                                              ; preds = %456, %271
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %272) #16
  %285 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %285, i8 0, i64 24, i1 false) #16
  %286 = ptrtoint i8* %285 to i64
  %287 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4325", %"class.crdtp::detail::PtrMaybe.4325"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %288 = load %"class.std::__1::vector.4329"*, %"class.std::__1::vector.4329"** %287, align 8
  %289 = bitcast %"class.crdtp::detail::PtrMaybe.4325"* %7 to i64*
  store i64 %286, i64* %289, align 8
  %290 = icmp eq %"class.std::__1::vector.4329"* %288, null
  br i1 %290, label %320, label %291

291:                                              ; preds = %284
  %292 = getelementptr inbounds %"class.std::__1::vector.4329", %"class.std::__1::vector.4329"* %288, i64 0, i32 0, i32 0
  %293 = load %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"** %292, align 8
  %294 = icmp eq %"class.std::__1::unique_ptr.4331"* %293, null
  br i1 %294, label %318, label %295

295:                                              ; preds = %291
  %296 = bitcast %"class.std::__1::unique_ptr.4331"* %293 to i8*
  %297 = getelementptr inbounds %"class.std::__1::vector.4329", %"class.std::__1::vector.4329"* %288, i64 0, i32 0, i32 1
  %298 = load %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"** %297, align 8
  %299 = icmp eq %"class.std::__1::unique_ptr.4331"* %298, %293
  br i1 %299, label %316, label %300

300:                                              ; preds = %295, %311
  %301 = phi %"class.std::__1::unique_ptr.4331"* [ %302, %311 ], [ %298, %295 ]
  %302 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %301, i64 -1
  %303 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %302, i64 0, i32 0, i32 0, i32 0
  %304 = load %"class.blink::protocol::CSS::InheritedStyleEntry"*, %"class.blink::protocol::CSS::InheritedStyleEntry"** %303, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %303, align 8
  %305 = icmp eq %"class.blink::protocol::CSS::InheritedStyleEntry"* %304, null
  br i1 %305, label %311, label %306

306:                                              ; preds = %300
  %307 = bitcast %"class.blink::protocol::CSS::InheritedStyleEntry"* %304 to void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)***
  %308 = load void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)**, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*** %307, align 8
  %309 = getelementptr inbounds void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)** %308, i64 2
  %310 = load void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)** %309, align 8
  call void %310(%"class.blink::protocol::CSS::InheritedStyleEntry"* nonnull %304) #16
  br label %311

311:                                              ; preds = %306, %300
  %312 = icmp eq %"class.std::__1::unique_ptr.4331"* %302, %293
  br i1 %312, label %313, label %300

313:                                              ; preds = %311
  %314 = bitcast %"class.std::__1::vector.4329"* %288 to i8**
  %315 = load i8*, i8** %314, align 8
  br label %316

316:                                              ; preds = %313, %295
  %317 = phi i8* [ %315, %313 ], [ %296, %295 ]
  store %"class.std::__1::unique_ptr.4331"* %293, %"class.std::__1::unique_ptr.4331"** %297, align 8
  call void @_ZdlPv(i8* %317) #18
  br label %318

318:                                              ; preds = %316, %291
  %319 = bitcast %"class.std::__1::vector.4329"* %288 to i8*
  call void @_ZdlPv(i8* %319) #18
  br label %320

320:                                              ; preds = %284, %318
  %321 = bitcast %"class.blink::HeapVector.4413"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %321) #16
  call void @_ZN5blink22InspectorStyleResolver11ParentRulesEv(%"class.blink::HeapVector.4413"* nonnull sret %19, %"class.blink::InspectorStyleResolver"* nonnull %16) #16
  %322 = getelementptr inbounds %"class.blink::HeapVector.4413", %"class.blink::HeapVector.4413"* %19, i64 0, i32 0, i32 0, i32 0, i32 0
  %323 = load %"class.blink::Member.4419"*, %"class.blink::Member.4419"** %322, align 8
  %324 = getelementptr inbounds %"class.blink::HeapVector.4413", %"class.blink::HeapVector.4413"* %19, i64 0, i32 0, i32 0, i32 0, i32 2
  %325 = load i32, i32* %324, align 4
  %326 = zext i32 %325 to i64
  %327 = getelementptr inbounds %"class.blink::Member.4419", %"class.blink::Member.4419"* %323, i64 %326
  %328 = icmp eq i32 %325, 0
  br i1 %328, label %459, label %329

329:                                              ; preds = %320
  %330 = bitcast %"class.std::__1::unique_ptr.4331"* %20 to i8*
  %331 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %20, i64 0, i32 0, i32 0, i32 0
  %332 = bitcast %"class.std::__1::unique_ptr.4331"* %20 to i8**
  %333 = bitcast %"class.std::__1::unique_ptr.4331"* %20 to i64*
  br label %496

334:                                              ; preds = %280, %456
  %335 = phi %"class.blink::Member.4419"* [ %274, %280 ], [ %457, %456 ]
  %336 = getelementptr inbounds %"class.blink::Member.4419", %"class.blink::Member.4419"* %335, i64 0, i32 0, i32 0
  %337 = load %"struct.blink::InspectorCSSMatchedRules"*, %"struct.blink::InspectorCSSMatchedRules"** %336, align 8
  %338 = load %"class.std::__1::vector.4306"*, %"class.std::__1::vector.4306"** %238, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %281) #16
  %339 = call i8* @_Znwm(i64 24) #18
  %340 = bitcast i8* %339 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS20PseudoElementMatchesE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %340, align 8
  %341 = getelementptr inbounds i8, i8* %339, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %341, i8 0, i64 16, i1 false) #16
  %342 = getelementptr inbounds %"struct.blink::InspectorCSSMatchedRules", %"struct.blink::InspectorCSSMatchedRules"* %337, i64 0, i32 2
  %343 = load i8, i8* %342, align 8
  %344 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent25ProtocolPseudoElementTypeENS_8PseudoIdE(i8 zeroext %343) #16
  %345 = icmp eq %"class.WTF::StringImpl"* %344, null
  br i1 %345, label %363, label %346

346:                                              ; preds = %334
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %348 = load atomic i32, i32* %347 monotonic, align 4
  %349 = and i32 %348, 2
  %350 = icmp eq i32 %349, 0
  br i1 %350, label %351, label %363

351:                                              ; preds = %346
  %352 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %353 = load i32, i32* %352, align 4
  %354 = zext i32 %353 to i33
  %355 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %354, i33 1) #16
  %356 = extractvalue { i33, i1 } %355, 1
  %357 = extractvalue { i33, i1 } %355, 0
  %358 = icmp slt i33 %357, 0
  %359 = or i1 %356, %358
  br i1 %359, label %360, label %361, !prof !3

360:                                              ; preds = %351
  call void @llvm.trap() #16
  unreachable

361:                                              ; preds = %351
  %362 = trunc i33 %357 to i32
  store i32 %362, i32* %352, align 4
  br label %363

363:                                              ; preds = %361, %346, %334
  %364 = ptrtoint %"class.WTF::StringImpl"* %344 to i64
  %365 = bitcast i8* %341 to i64*
  %366 = bitcast i8* %341 to %"class.WTF::StringImpl"**
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  store i64 %364, i64* %365, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %363
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #16
  br label %382

382:                                              ; preds = %363, %378, %381
  %383 = getelementptr inbounds %"struct.blink::InspectorCSSMatchedRules", %"struct.blink::InspectorCSSMatchedRules"* %337, i64 0, i32 1, i32 0, i32 0
  %384 = load %"class.blink::HeapVector.4405"*, %"class.blink::HeapVector.4405"** %383, align 8
  %385 = call %"class.std::__1::vector.4251"* @_ZN5blink17InspectorCSSAgent28BuildArrayForMatchedRuleListEPNS_10HeapVectorINSt3__14pairINS_6MemberINS_7CSSRuleEEEiEELj0EEENS_8PseudoIdE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::HeapVector.4405"* %384, i8 zeroext undef)
  %386 = ptrtoint %"class.std::__1::vector.4251"* %385 to i64
  %387 = getelementptr inbounds i8, i8* %339, i64 16
  %388 = bitcast i8* %387 to %"class.std::__1::vector.4251"**
  %389 = load %"class.std::__1::vector.4251"*, %"class.std::__1::vector.4251"** %388, align 8
  %390 = bitcast i8* %387 to i64*
  store i64 %386, i64* %390, align 8
  %391 = icmp eq %"class.std::__1::vector.4251"* %389, null
  br i1 %391, label %421, label %392

392:                                              ; preds = %382
  %393 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %389, i64 0, i32 0, i32 0
  %394 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %393, align 8
  %395 = icmp eq %"class.std::__1::unique_ptr.4253"* %394, null
  br i1 %395, label %419, label %396

396:                                              ; preds = %392
  %397 = bitcast %"class.std::__1::unique_ptr.4253"* %394 to i8*
  %398 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %389, i64 0, i32 0, i32 1
  %399 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %398, align 8
  %400 = icmp eq %"class.std::__1::unique_ptr.4253"* %399, %394
  br i1 %400, label %417, label %401

401:                                              ; preds = %396, %412
  %402 = phi %"class.std::__1::unique_ptr.4253"* [ %403, %412 ], [ %399, %396 ]
  %403 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %402, i64 -1
  %404 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %403, i64 0, i32 0, i32 0, i32 0
  %405 = load %"class.blink::protocol::CSS::RuleMatch"*, %"class.blink::protocol::CSS::RuleMatch"** %404, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %404, align 8
  %406 = icmp eq %"class.blink::protocol::CSS::RuleMatch"* %405, null
  br i1 %406, label %412, label %407

407:                                              ; preds = %401
  %408 = bitcast %"class.blink::protocol::CSS::RuleMatch"* %405 to void (%"class.blink::protocol::CSS::RuleMatch"*)***
  %409 = load void (%"class.blink::protocol::CSS::RuleMatch"*)**, void (%"class.blink::protocol::CSS::RuleMatch"*)*** %408, align 8
  %410 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %409, i64 2
  %411 = load void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %410, align 8
  call void %411(%"class.blink::protocol::CSS::RuleMatch"* nonnull %405) #16
  br label %412

412:                                              ; preds = %407, %401
  %413 = icmp eq %"class.std::__1::unique_ptr.4253"* %403, %394
  br i1 %413, label %414, label %401

414:                                              ; preds = %412
  %415 = bitcast %"class.std::__1::vector.4251"* %389 to i8**
  %416 = load i8*, i8** %415, align 8
  br label %417

417:                                              ; preds = %414, %396
  %418 = phi i8* [ %416, %414 ], [ %397, %396 ]
  store %"class.std::__1::unique_ptr.4253"* %394, %"class.std::__1::unique_ptr.4253"** %398, align 8
  call void @_ZdlPv(i8* %418) #18
  br label %419

419:                                              ; preds = %417, %392
  %420 = bitcast %"class.std::__1::vector.4251"* %389 to i8*
  call void @_ZdlPv(i8* %420) #18
  br label %421

421:                                              ; preds = %382, %419
  store i8* %339, i8** %283, align 8
  %422 = getelementptr inbounds %"class.std::__1::vector.4306", %"class.std::__1::vector.4306"* %338, i64 0, i32 0, i32 1
  %423 = load %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"** %422, align 8
  %424 = getelementptr inbounds %"class.std::__1::vector.4306", %"class.std::__1::vector.4306"* %338, i64 0, i32 0, i32 2, i32 0, i32 0
  %425 = load %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"** %424, align 8
  %426 = icmp ult %"class.std::__1::unique_ptr.4308"* %423, %425
  br i1 %426, label %427, label %433

427:                                              ; preds = %421
  %428 = ptrtoint i8* %339 to i64
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %282, align 8
  %429 = bitcast %"class.std::__1::unique_ptr.4308"* %423 to i64*
  store i64 %428, i64* %429, align 8
  %430 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %423, i64 1
  %431 = ptrtoint %"class.std::__1::unique_ptr.4308"* %430 to i64
  %432 = bitcast %"class.std::__1::unique_ptr.4308"** %422 to i64*
  store i64 %431, i64* %432, align 8
  br label %434

433:                                              ; preds = %421
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS20PseudoElementMatchesENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4306"* %338, %"class.std::__1::unique_ptr.4308"* nonnull dereferenceable(8) %18) #16
  br label %434

434:                                              ; preds = %427, %433
  %435 = load %"class.blink::protocol::CSS::PseudoElementMatches"*, %"class.blink::protocol::CSS::PseudoElementMatches"** %282, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %282, align 8
  %436 = icmp eq %"class.blink::protocol::CSS::PseudoElementMatches"* %435, null
  br i1 %436, label %442, label %437

437:                                              ; preds = %434
  %438 = bitcast %"class.blink::protocol::CSS::PseudoElementMatches"* %435 to void (%"class.blink::protocol::CSS::PseudoElementMatches"*)***
  %439 = load void (%"class.blink::protocol::CSS::PseudoElementMatches"*)**, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*** %438, align 8
  %440 = getelementptr inbounds void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)** %439, i64 2
  %441 = load void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)** %440, align 8
  call void %441(%"class.blink::protocol::CSS::PseudoElementMatches"* nonnull %435) #16
  br label %442

442:                                              ; preds = %434, %437
  br i1 %345, label %456, label %443

443:                                              ; preds = %442
  %444 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %445 = load atomic i32, i32* %444 monotonic, align 4
  %446 = and i32 %445, 2
  %447 = icmp eq i32 %446, 0
  %448 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %344, i64 0, i32 0
  %449 = load i32, i32* %448, align 4
  br i1 %447, label %450, label %452

450:                                              ; preds = %443
  %451 = add i32 %449, -1
  store i32 %451, i32* %448, align 4
  br label %452

452:                                              ; preds = %450, %443
  %453 = phi i32 [ %451, %450 ], [ %449, %443 ]
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %344) #16
  br label %456

456:                                              ; preds = %455, %452, %442
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %281) #16
  %457 = getelementptr inbounds %"class.blink::Member.4419", %"class.blink::Member.4419"* %335, i64 1
  %458 = icmp eq %"class.blink::Member.4419"* %457, %278
  br i1 %458, label %284, label %334

459:                                              ; preds = %597, %320
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %321) #16
  %460 = load %"class.blink::Element"*, %"class.blink::Element"** %12, align 8
  %461 = call %"class.std::__1::vector.4352"* @_ZN5blink17InspectorCSSAgent17AnimationsForNodeEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Element"* %460)
  %462 = ptrtoint %"class.std::__1::vector.4352"* %461 to i64
  %463 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4348", %"class.crdtp::detail::PtrMaybe.4348"* %8, i64 0, i32 0, i32 0, i32 0, i32 0
  %464 = load %"class.std::__1::vector.4352"*, %"class.std::__1::vector.4352"** %463, align 8
  %465 = bitcast %"class.crdtp::detail::PtrMaybe.4348"* %8 to i64*
  store i64 %462, i64* %465, align 8
  %466 = icmp eq %"class.std::__1::vector.4352"* %464, null
  br i1 %466, label %600, label %467

467:                                              ; preds = %459
  %468 = getelementptr inbounds %"class.std::__1::vector.4352", %"class.std::__1::vector.4352"* %464, i64 0, i32 0, i32 0
  %469 = load %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"** %468, align 8
  %470 = icmp eq %"class.std::__1::unique_ptr.4354"* %469, null
  br i1 %470, label %494, label %471

471:                                              ; preds = %467
  %472 = bitcast %"class.std::__1::unique_ptr.4354"* %469 to i8*
  %473 = getelementptr inbounds %"class.std::__1::vector.4352", %"class.std::__1::vector.4352"* %464, i64 0, i32 0, i32 1
  %474 = load %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"** %473, align 8
  %475 = icmp eq %"class.std::__1::unique_ptr.4354"* %474, %469
  br i1 %475, label %492, label %476

476:                                              ; preds = %471, %487
  %477 = phi %"class.std::__1::unique_ptr.4354"* [ %478, %487 ], [ %474, %471 ]
  %478 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %477, i64 -1
  %479 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %478, i64 0, i32 0, i32 0, i32 0
  %480 = load %"class.blink::protocol::CSS::CSSKeyframesRule"*, %"class.blink::protocol::CSS::CSSKeyframesRule"** %479, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %479, align 8
  %481 = icmp eq %"class.blink::protocol::CSS::CSSKeyframesRule"* %480, null
  br i1 %481, label %487, label %482

482:                                              ; preds = %476
  %483 = bitcast %"class.blink::protocol::CSS::CSSKeyframesRule"* %480 to void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)***
  %484 = load void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)**, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*** %483, align 8
  %485 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)** %484, i64 2
  %486 = load void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)** %485, align 8
  call void %486(%"class.blink::protocol::CSS::CSSKeyframesRule"* nonnull %480) #16
  br label %487

487:                                              ; preds = %482, %476
  %488 = icmp eq %"class.std::__1::unique_ptr.4354"* %478, %469
  br i1 %488, label %489, label %476

489:                                              ; preds = %487
  %490 = bitcast %"class.std::__1::vector.4352"* %464 to i8**
  %491 = load i8*, i8** %490, align 8
  br label %492

492:                                              ; preds = %489, %471
  %493 = phi i8* [ %491, %489 ], [ %472, %471 ]
  store %"class.std::__1::unique_ptr.4354"* %469, %"class.std::__1::unique_ptr.4354"** %473, align 8
  call void @_ZdlPv(i8* %493) #18
  br label %494

494:                                              ; preds = %492, %467
  %495 = bitcast %"class.std::__1::vector.4352"* %464 to i8*
  call void @_ZdlPv(i8* %495) #18
  br label %600

496:                                              ; preds = %329, %597
  %497 = phi %"class.blink::Member.4419"* [ %323, %329 ], [ %598, %597 ]
  %498 = getelementptr inbounds %"class.blink::Member.4419", %"class.blink::Member.4419"* %497, i64 0, i32 0, i32 0
  %499 = load %"struct.blink::InspectorCSSMatchedRules"*, %"struct.blink::InspectorCSSMatchedRules"** %498, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %330) #16
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CSS::InheritedStyleEntry"*), %"class.blink::protocol::CSS::InheritedStyleEntry"** %331, align 8
  %500 = call i8* @_Znwm(i64 24) #18
  %501 = bitcast i8* %500 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS19InheritedStyleEntryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %501, align 8
  %502 = getelementptr inbounds i8, i8* %500, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %502, i8 0, i64 16, i1 false) #16
  %503 = getelementptr inbounds %"struct.blink::InspectorCSSMatchedRules", %"struct.blink::InspectorCSSMatchedRules"* %499, i64 0, i32 1, i32 0, i32 0
  %504 = load %"class.blink::HeapVector.4405"*, %"class.blink::HeapVector.4405"** %503, align 8
  %505 = call %"class.std::__1::vector.4251"* @_ZN5blink17InspectorCSSAgent28BuildArrayForMatchedRuleListEPNS_10HeapVectorINSt3__14pairINS_6MemberINS_7CSSRuleEEEiEELj0EEENS_8PseudoIdE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::HeapVector.4405"* %504, i8 zeroext undef)
  %506 = ptrtoint %"class.std::__1::vector.4251"* %505 to i64
  %507 = getelementptr inbounds i8, i8* %500, i64 16
  %508 = bitcast i8* %507 to %"class.std::__1::vector.4251"**
  %509 = load %"class.std::__1::vector.4251"*, %"class.std::__1::vector.4251"** %508, align 8
  %510 = bitcast i8* %507 to i64*
  store i64 %506, i64* %510, align 8
  %511 = icmp eq %"class.std::__1::vector.4251"* %509, null
  br i1 %511, label %541, label %512

512:                                              ; preds = %496
  %513 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %509, i64 0, i32 0, i32 0
  %514 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %513, align 8
  %515 = icmp eq %"class.std::__1::unique_ptr.4253"* %514, null
  br i1 %515, label %539, label %516

516:                                              ; preds = %512
  %517 = bitcast %"class.std::__1::unique_ptr.4253"* %514 to i8*
  %518 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %509, i64 0, i32 0, i32 1
  %519 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %518, align 8
  %520 = icmp eq %"class.std::__1::unique_ptr.4253"* %519, %514
  br i1 %520, label %537, label %521

521:                                              ; preds = %516, %532
  %522 = phi %"class.std::__1::unique_ptr.4253"* [ %523, %532 ], [ %519, %516 ]
  %523 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %522, i64 -1
  %524 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %523, i64 0, i32 0, i32 0, i32 0
  %525 = load %"class.blink::protocol::CSS::RuleMatch"*, %"class.blink::protocol::CSS::RuleMatch"** %524, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %524, align 8
  %526 = icmp eq %"class.blink::protocol::CSS::RuleMatch"* %525, null
  br i1 %526, label %532, label %527

527:                                              ; preds = %521
  %528 = bitcast %"class.blink::protocol::CSS::RuleMatch"* %525 to void (%"class.blink::protocol::CSS::RuleMatch"*)***
  %529 = load void (%"class.blink::protocol::CSS::RuleMatch"*)**, void (%"class.blink::protocol::CSS::RuleMatch"*)*** %528, align 8
  %530 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %529, i64 2
  %531 = load void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %530, align 8
  call void %531(%"class.blink::protocol::CSS::RuleMatch"* nonnull %525) #16
  br label %532

532:                                              ; preds = %527, %521
  %533 = icmp eq %"class.std::__1::unique_ptr.4253"* %523, %514
  br i1 %533, label %534, label %521

534:                                              ; preds = %532
  %535 = bitcast %"class.std::__1::vector.4251"* %509 to i8**
  %536 = load i8*, i8** %535, align 8
  br label %537

537:                                              ; preds = %534, %516
  %538 = phi i8* [ %536, %534 ], [ %517, %516 ]
  store %"class.std::__1::unique_ptr.4253"* %514, %"class.std::__1::unique_ptr.4253"** %518, align 8
  call void @_ZdlPv(i8* %538) #18
  br label %539

539:                                              ; preds = %537, %512
  %540 = bitcast %"class.std::__1::vector.4251"* %509 to i8*
  call void @_ZdlPv(i8* %540) #18
  br label %541

541:                                              ; preds = %539, %496
  store i8* %500, i8** %332, align 8
  %542 = getelementptr inbounds %"struct.blink::InspectorCSSMatchedRules", %"struct.blink::InspectorCSSMatchedRules"* %499, i64 0, i32 0, i32 0, i32 0
  %543 = load %"class.blink::Element"*, %"class.blink::Element"** %542, align 8
  %544 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %543) #16
  %545 = icmp eq %"class.blink::CSSStyleDeclaration"* %544, null
  br i1 %545, label %575, label %546

546:                                              ; preds = %541
  %547 = load %"class.blink::Element"*, %"class.blink::Element"** %542, align 8
  %548 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %547) #16
  %549 = bitcast %"class.blink::CSSStyleDeclaration"* %548 to i32 (%"class.blink::CSSStyleDeclaration"*)***
  %550 = load i32 (%"class.blink::CSSStyleDeclaration"*)**, i32 (%"class.blink::CSSStyleDeclaration"*)*** %549, align 8
  %551 = getelementptr inbounds i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %550, i64 12
  %552 = load i32 (%"class.blink::CSSStyleDeclaration"*)*, i32 (%"class.blink::CSSStyleDeclaration"*)** %551, align 8
  %553 = call i32 %552(%"class.blink::CSSStyleDeclaration"* %548) #16
  %554 = icmp eq i32 %553, 0
  br i1 %554, label %575, label %555

555:                                              ; preds = %546
  %556 = load %"class.blink::Element"*, %"class.blink::Element"** %542, align 8
  %557 = call %"class.blink::InspectorStyleSheetForInlineStyle"* @_ZN5blink17InspectorCSSAgent21AsInspectorStyleSheetEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Element"* %556)
  %558 = icmp eq %"class.blink::InspectorStyleSheetForInlineStyle"* %557, null
  br i1 %558, label %575, label %559

559:                                              ; preds = %555
  %560 = load %"class.blink::protocol::CSS::InheritedStyleEntry"*, %"class.blink::protocol::CSS::InheritedStyleEntry"** %331, align 8
  %561 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %557, i64 0, i32 0
  %562 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink33InspectorStyleSheetForInlineStyle11InlineStyleEv(%"class.blink::InspectorStyleSheetForInlineStyle"* nonnull %557) #16
  %563 = call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"* %561, %"class.blink::CSSStyleDeclaration"* %562) #16
  %564 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %563 to i64
  %565 = getelementptr inbounds %"class.blink::protocol::CSS::InheritedStyleEntry", %"class.blink::protocol::CSS::InheritedStyleEntry"* %560, i64 0, i32 1
  %566 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4223", %"class.crdtp::detail::PtrMaybe.4223"* %565, i64 0, i32 0, i32 0, i32 0, i32 0
  %567 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %566, align 8
  %568 = bitcast %"class.crdtp::detail::PtrMaybe.4223"* %565 to i64*
  store i64 %564, i64* %568, align 8
  %569 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %567, null
  br i1 %569, label %575, label %570

570:                                              ; preds = %559
  %571 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %567 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %572 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %571, align 8
  %573 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %572, i64 2
  %574 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %573, align 8
  call void %574(%"class.blink::protocol::CSS::CSSStyle"* nonnull %567) #16
  br label %575

575:                                              ; preds = %570, %559, %555, %546, %541
  %576 = load %"class.std::__1::vector.4329"*, %"class.std::__1::vector.4329"** %287, align 8
  %577 = getelementptr inbounds %"class.std::__1::vector.4329", %"class.std::__1::vector.4329"* %576, i64 0, i32 0, i32 1
  %578 = load %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"** %577, align 8
  %579 = getelementptr inbounds %"class.std::__1::vector.4329", %"class.std::__1::vector.4329"* %576, i64 0, i32 0, i32 2, i32 0, i32 0
  %580 = load %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"** %579, align 8
  %581 = icmp ult %"class.std::__1::unique_ptr.4331"* %578, %580
  br i1 %581, label %582, label %588

582:                                              ; preds = %575
  %583 = load i64, i64* %333, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %331, align 8
  %584 = bitcast %"class.std::__1::unique_ptr.4331"* %578 to i64*
  store i64 %583, i64* %584, align 8
  %585 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %578, i64 1
  %586 = ptrtoint %"class.std::__1::unique_ptr.4331"* %585 to i64
  %587 = bitcast %"class.std::__1::unique_ptr.4331"** %577 to i64*
  store i64 %586, i64* %587, align 8
  br label %589

588:                                              ; preds = %575
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS19InheritedStyleEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4329"* %576, %"class.std::__1::unique_ptr.4331"* nonnull dereferenceable(8) %20) #16
  br label %589

589:                                              ; preds = %582, %588
  %590 = load %"class.blink::protocol::CSS::InheritedStyleEntry"*, %"class.blink::protocol::CSS::InheritedStyleEntry"** %331, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %331, align 8
  %591 = icmp eq %"class.blink::protocol::CSS::InheritedStyleEntry"* %590, null
  br i1 %591, label %597, label %592

592:                                              ; preds = %589
  %593 = bitcast %"class.blink::protocol::CSS::InheritedStyleEntry"* %590 to void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)***
  %594 = load void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)**, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*** %593, align 8
  %595 = getelementptr inbounds void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)** %594, i64 2
  %596 = load void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)** %595, align 8
  call void %596(%"class.blink::protocol::CSS::InheritedStyleEntry"* nonnull %590) #16
  br label %597

597:                                              ; preds = %589, %592
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %330) #16
  %598 = getelementptr inbounds %"class.blink::Member.4419", %"class.blink::Member.4419"* %497, i64 1
  %599 = icmp eq %"class.blink::Member.4419"* %598, %327
  br i1 %599, label %459, label %496

600:                                              ; preds = %494, %459, %187
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %150) #16
  br label %601

601:                                              ; preds = %71, %600, %91, %101, %114, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #16
  %602 = load i8, i8* %59, align 1
  %603 = icmp slt i8 %602, 0
  br i1 %603, label %604, label %607

604:                                              ; preds = %601
  %605 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %11, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %606 = load i8*, i8** %605, align 8
  call void @_ZdlPv(i8* %606) #18
  br label %607

607:                                              ; preds = %43, %601, %604
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %21) #16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent13AssertEnabledEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::basic_string", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  %5 = load i8, i8* %4, align 8, !range !4
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %8, label %7

7:                                                ; preds = %2
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %20

8:                                                ; preds = %2
  %9 = tail call i8* @_Znwm(i64 32) #18
  %10 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %9, i8** %10, align 8
  %11 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %12 = bitcast i64* %11 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %12, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %9, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i64 25, i1 false) #16
  %13 = getelementptr inbounds i8, i8* %9, i64 25
  store i8 0, i8* %13, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %3) #16
  %14 = bitcast %"class.std::__1::basic_string"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %15 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %14, i64 0, i32 1, i32 0
  %16 = load i8, i8* %15, align 1
  %17 = icmp slt i8 %16, 0
  br i1 %17, label %18, label %20

18:                                               ; preds = %8
  %19 = load i8*, i8** %10, align 8
  call void @_ZdlPv(i8* %19) #18
  br label %20

20:                                               ; preds = %18, %8, %7
  ret void
}

declare void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.blink::Element"** dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZNK5blink4Node25ParentOrShadowHostElementEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorStyleSheet16SyncTextIfNeededEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #1

declare void @_ZN5blink22InspectorStyleResolverC1EPNS_7ElementENS_8PseudoIdE(%"class.blink::InspectorStyleResolver"*, %"class.blink::Element"*, i8 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.4251"* @_ZN5blink17InspectorCSSAgent28BuildArrayForMatchedRuleListEPNS_10HeapVectorINSt3__14pairINS_6MemberINS_7CSSRuleEEEiEELj0EEENS_8PseudoIdE(%"class.blink::InspectorCSSAgent"*, %"class.blink::HeapVector.4405"* readonly, i8 zeroext) local_unnamed_addr #0 align 2 {
  %4 = alloca %"struct.std::__1::__less", align 1
  %5 = alloca %"class.blink::HeapVector.4617", align 8
  %6 = alloca %"class.blink::HeapHashSet.4624", align 8
  %7 = alloca %"class.blink::HeapHashMap.4630", align 8
  %8 = alloca %"class.blink::CSSRule"*, align 8
  %9 = alloca %"class.blink::CSSStyleRule"*, align 8
  %10 = alloca %"class.std::__1::unique_ptr.3920", align 8
  %11 = alloca %"class.blink::CSSStyleRule"*, align 8
  %12 = alloca %"class.std::__1::unique_ptr.4253", align 8
  %13 = tail call i8* @_Znwm(i64 24) #18
  %14 = bitcast i8* %13 to %"class.std::__1::vector.4251"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 0, i64 24, i1 false) #16
  %15 = icmp eq %"class.blink::HeapVector.4405"* %1, null
  br i1 %15, label %409, label %16

16:                                               ; preds = %3
  %17 = bitcast %"class.blink::HeapVector.4617"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %19 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %5, i64 0, i32 0, i32 0, i32 0, i32 1
  %20 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 0, i64 16, i1 false) #16
  %21 = bitcast %"class.blink::HeapHashSet.4624"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #16
  %22 = getelementptr inbounds %"class.blink::HeapHashSet.4624", %"class.blink::HeapHashSet.4624"* %6, i64 0, i32 0, i32 0, i32 0
  %23 = getelementptr inbounds %"class.blink::HeapHashSet.4624", %"class.blink::HeapHashSet.4624"* %6, i64 0, i32 0, i32 0, i32 1
  %24 = bitcast %"class.blink::HeapHashSet.4624"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %21, i8 0, i64 20, i1 false) #16
  %25 = bitcast %"class.blink::HeapHashMap.4630"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %25) #16
  %26 = bitcast %"class.blink::HeapHashMap.4630"* %7 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 0, i64 20, i1 false) #16
  %27 = getelementptr inbounds %"class.blink::HeapVector.4405", %"class.blink::HeapVector.4405"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %28 = getelementptr inbounds %"class.blink::HeapVector.4405", %"class.blink::HeapVector.4405"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %228, label %31

31:                                               ; preds = %16
  %32 = zext i32 %29 to i64
  %33 = load %"struct.std::__1::pair.4411"*, %"struct.std::__1::pair.4411"** %27, align 8
  %34 = getelementptr inbounds %"struct.std::__1::pair.4411", %"struct.std::__1::pair.4411"* %33, i64 %32
  %35 = bitcast %"class.blink::CSSRule"** %8 to i8*
  %36 = bitcast %"class.blink::CSSStyleRule"** %9 to i8*
  %37 = bitcast %"class.blink::CSSStyleRule"** %9 to %"class.blink::CSSRule"**
  %38 = getelementptr inbounds %"class.blink::HeapHashSet.4624", %"class.blink::HeapHashSet.4624"* %6, i64 0, i32 0, i32 0
  %39 = bitcast %"class.blink::CSSStyleRule"** %9 to i64*
  %40 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %5, i64 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.3920"* %10 to i8*
  %42 = getelementptr inbounds %"class.std::__1::unique_ptr.3920", %"class.std::__1::unique_ptr.3920"* %10, i64 0, i32 0, i32 0, i32 0
  %43 = bitcast %"class.std::__1::unique_ptr.3920"* %10 to i8**
  %44 = getelementptr inbounds %"class.blink::HeapHashMap.4630", %"class.blink::HeapHashMap.4630"* %7, i64 0, i32 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.3920"* %10 to i64*
  %46 = getelementptr inbounds %"class.blink::HeapHashMap.4630", %"class.blink::HeapHashMap.4630"* %7, i64 0, i32 0
  br label %65

47:                                               ; preds = %225
  %48 = load i32, i32* %20, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %228, label %50

50:                                               ; preds = %47
  %51 = zext i32 %48 to i64
  %52 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %18, align 8
  %53 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %52, i64 %51
  %54 = bitcast %"class.blink::CSSStyleRule"** %11 to i8*
  %55 = getelementptr inbounds %"class.blink::HeapHashMap.4630", %"class.blink::HeapHashMap.4630"* %7, i64 0, i32 0
  %56 = getelementptr inbounds %"struct.std::__1::__less", %"struct.std::__1::__less"* %4, i64 0, i32 0
  %57 = bitcast %"class.std::__1::unique_ptr.4253"* %12 to i8*
  %58 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %12, i64 0, i32 0, i32 0, i32 0
  %59 = bitcast %"class.std::__1::unique_ptr.4253"* %12 to i8**
  %60 = getelementptr inbounds i8, i8* %13, i64 8
  %61 = bitcast i8* %60 to %"class.std::__1::unique_ptr.4253"**
  %62 = getelementptr inbounds i8, i8* %13, i64 16
  %63 = bitcast i8* %62 to %"class.std::__1::unique_ptr.4253"**
  %64 = bitcast i8* %60 to i64*
  br label %229

65:                                               ; preds = %31, %225
  %66 = phi %"struct.std::__1::pair.4411"* [ %34, %31 ], [ %67, %225 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  store %"class.blink::CSSRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSRule"*), %"class.blink::CSSRule"** %8, align 8
  %67 = getelementptr inbounds %"struct.std::__1::pair.4411", %"struct.std::__1::pair.4411"* %66, i64 -1
  %68 = getelementptr inbounds %"struct.std::__1::pair.4411", %"struct.std::__1::pair.4411"* %67, i64 0, i32 0, i32 0, i32 0
  %69 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %68, align 8
  store %"class.blink::CSSRule"* %69, %"class.blink::CSSRule"** %8, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  store %"class.blink::CSSStyleRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleRule"*), %"class.blink::CSSStyleRule"** %9, align 8
  %70 = icmp eq %"class.blink::CSSRule"* %69, null
  br i1 %70, label %78, label %71

71:                                               ; preds = %65
  %72 = bitcast %"class.blink::CSSRule"* %69 to i32 (%"class.blink::CSSRule"*)***
  %73 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %72, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %73, i64 9
  %75 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %74, align 8
  %76 = call i32 %75(%"class.blink::CSSRule"* nonnull %69) #16
  %77 = icmp eq i32 %76, 1
  br i1 %77, label %79, label %78

78:                                               ; preds = %71, %65
  store %"class.blink::CSSStyleRule"* null, %"class.blink::CSSStyleRule"** %9, align 8
  br label %225

79:                                               ; preds = %71
  store %"class.blink::CSSRule"* %69, %"class.blink::CSSRule"** %37, align 8
  %80 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %8, align 8
  %81 = ptrtoint %"class.blink::CSSRule"* %80 to i64
  %82 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %22, align 8
  %83 = icmp eq %"class.blink::Member.644"* %82, null
  br i1 %83, label %144, label %84

84:                                               ; preds = %79
  %85 = load i32, i32* %23, align 8
  %86 = add i32 %85, -1
  %87 = zext i32 %86 to i64
  %88 = shl i64 %81, 32
  %89 = xor i64 %88, -1
  %90 = add i64 %89, %81
  %91 = lshr i64 %90, 22
  %92 = xor i64 %91, %90
  %93 = shl i64 %92, 13
  %94 = xor i64 %93, -1
  %95 = add i64 %92, %94
  %96 = lshr i64 %95, 8
  %97 = xor i64 %96, %95
  %98 = mul i64 %97, 9
  %99 = lshr i64 %98, 15
  %100 = xor i64 %99, %98
  %101 = shl i64 %100, 27
  %102 = xor i64 %101, -1
  %103 = add i64 %100, %102
  %104 = lshr i64 %103, 31
  %105 = xor i64 %104, %103
  %106 = trunc i64 %105 to i32
  %107 = and i32 %86, %106
  %108 = zext i32 %107 to i64
  %109 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %82, i64 %108
  %110 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %109, i64 0, i32 0, i32 0
  %111 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %110, align 8
  %112 = icmp eq %"class.blink::CSSRule"* %111, %80
  br i1 %112, label %141, label %113

113:                                              ; preds = %84
  %114 = xor i32 %106, -1
  %115 = lshr i32 %106, 23
  %116 = add i32 %115, %114
  %117 = shl i32 %116, 12
  %118 = xor i32 %117, %116
  %119 = lshr i32 %118, 7
  %120 = xor i32 %119, %118
  %121 = shl i32 %120, 2
  %122 = xor i32 %121, %120
  %123 = lshr i32 %122, 20
  %124 = xor i32 %123, %122
  %125 = or i32 %124, 1
  %126 = zext i32 %125 to i64
  br label %127

127:                                              ; preds = %132, %113
  %128 = phi %"class.blink::CSSRule"* [ %111, %113 ], [ %139, %132 ]
  %129 = phi i64 [ %108, %113 ], [ %136, %132 ]
  %130 = phi i64 [ 0, %113 ], [ %134, %132 ]
  %131 = icmp eq %"class.blink::CSSRule"* %128, null
  br i1 %131, label %144, label %132

132:                                              ; preds = %127
  %133 = icmp eq i64 %130, 0
  %134 = select i1 %133, i64 %126, i64 %130
  %135 = add i64 %134, %129
  %136 = and i64 %135, %87
  %137 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %82, i64 %136
  %138 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %137, i64 0, i32 0, i32 0
  %139 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %138, align 8
  %140 = icmp eq %"class.blink::CSSRule"* %139, %80
  br i1 %140, label %141, label %127

141:                                              ; preds = %132, %84
  %142 = phi %"class.blink::Member.644"* [ %109, %84 ], [ %137, %132 ]
  %143 = icmp eq %"class.blink::Member.644"* %142, null
  br i1 %143, label %144, label %208

144:                                              ; preds = %127, %141, %79
  %145 = call { %"class.blink::Member.644"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4628"* nonnull %38, %"class.blink::CSSRule"** nonnull dereferenceable(8) %8, %"class.blink::CSSRule"** nonnull dereferenceable(8) %8) #16
  %146 = load i32, i32* %20, align 4
  %147 = load i32, i32* %19, align 8
  %148 = icmp eq i32 %146, %147
  br i1 %148, label %163, label %149, !prof !3

149:                                              ; preds = %144
  %150 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %18, align 8
  %151 = zext i32 %146 to i64
  %152 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %150, i64 %151
  %153 = load i64, i64* %39, align 8
  %154 = bitcast %"class.blink::Member.4589"* %152 to i64*
  store atomic i64 %153, i64* %154 monotonic, align 8
  %155 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %160, label %157

157:                                              ; preds = %149
  %158 = inttoptr i64 %153 to i8*
  %159 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %158) #16
  br label %160

160:                                              ; preds = %157, %149
  %161 = load i32, i32* %20, align 4
  %162 = add i32 %161, 1
  store i32 %162, i32* %20, align 4
  br label %164

163:                                              ; preds = %144
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.4620"* nonnull %40, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %9) #16
  br label %164

164:                                              ; preds = %160, %163
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #16
  %165 = call i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64 16, i8* getelementptr inbounds ([101 x i8], [101 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6VectorIjLj0ENS_18PartitionAllocatorEEEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %165, i8 0, i64 16, i1 false) #16
  store i8* %165, i8** %43, align 8
  %166 = call { %"struct.WTF::KeyValuePair.4636"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EERPS3_SD_EENS_18HashTableAddResultISO_SE_EEOT0_OT1_(%"class.WTF::HashTable.4634"* nonnull %44, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %9, %"class.std::__1::unique_ptr.3920"* nonnull dereferenceable(8) %10) #16
  %167 = extractvalue { %"struct.WTF::KeyValuePair.4636"*, i8 } %166, 1
  %168 = and i8 %167, 1
  %169 = icmp eq i8 %168, 0
  br i1 %169, label %170, label %191

170:                                              ; preds = %164
  %171 = extractvalue { %"struct.WTF::KeyValuePair.4636"*, i8 } %166, 0
  %172 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %171, i64 0, i32 1
  %173 = load i64, i64* %45, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %42, align 8
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.3920", %"class.std::__1::unique_ptr.3920"* %172, i64 0, i32 0, i32 0, i32 0
  %175 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %174, align 8
  %176 = bitcast %"class.std::__1::unique_ptr.3920"* %172 to i64*
  store i64 %173, i64* %176, align 8
  %177 = icmp eq %"class.WTF::Vector.3923"* %175, null
  br i1 %177, label %191, label %178

178:                                              ; preds = %170
  %179 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %175, i64 0, i32 0, i32 0, i32 0
  %180 = load i32*, i32** %179, align 8
  %181 = icmp eq i32* %180, null
  %182 = bitcast i32* %180 to i8*
  br i1 %181, label %189, label %183, !prof !2

183:                                              ; preds = %178
  %184 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %175, i64 0, i32 0, i32 0, i32 2
  %185 = load i32, i32* %184, align 4
  %186 = icmp eq i32 %185, 0
  br i1 %186, label %188, label %187, !prof !3

187:                                              ; preds = %183
  store i32 0, i32* %184, align 4
  br label %188

188:                                              ; preds = %187, %183
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %182) #16
  store i32* null, i32** %179, align 8
  br label %189

189:                                              ; preds = %188, %178
  %190 = bitcast %"class.WTF::Vector.3923"* %175 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %190) #16
  br label %191

191:                                              ; preds = %164, %170, %189
  %192 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %42, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %42, align 8
  %193 = icmp eq %"class.WTF::Vector.3923"* %192, null
  br i1 %193, label %207, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %192, i64 0, i32 0, i32 0, i32 0
  %196 = load i32*, i32** %195, align 8
  %197 = icmp eq i32* %196, null
  %198 = bitcast i32* %196 to i8*
  br i1 %197, label %205, label %199, !prof !2

199:                                              ; preds = %194
  %200 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %192, i64 0, i32 0, i32 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = icmp eq i32 %201, 0
  br i1 %202, label %204, label %203, !prof !3

203:                                              ; preds = %199
  store i32 0, i32* %200, align 4
  br label %204

204:                                              ; preds = %203, %199
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %198) #16
  store i32* null, i32** %195, align 8
  br label %205

205:                                              ; preds = %204, %194
  %206 = bitcast %"class.WTF::Vector.3923"* %192 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %206) #16
  br label %207

207:                                              ; preds = %191, %205
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #16
  br label %208

208:                                              ; preds = %141, %207
  %209 = call %"class.WTF::Vector.3923"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_12CSSStyleRuleEEENSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS5_14default_deleteIS9_EEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSF_ISC_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.4633"* nonnull %46, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %9)
  %210 = getelementptr inbounds %"struct.std::__1::pair.4411", %"struct.std::__1::pair.4411"* %66, i64 -1, i32 1
  %211 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %209, i64 0, i32 0, i32 0, i32 2
  %212 = load i32, i32* %211, align 4
  %213 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %209, i64 0, i32 0, i32 0, i32 1
  %214 = load i32, i32* %213, align 8
  %215 = icmp eq i32 %212, %214
  br i1 %215, label %224, label %216, !prof !3

216:                                              ; preds = %208
  %217 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %209, i64 0, i32 0, i32 0, i32 0
  %218 = load i32*, i32** %217, align 8
  %219 = zext i32 %212 to i64
  %220 = getelementptr inbounds i32, i32* %218, i64 %219
  %221 = load i32, i32* %210, align 4
  store i32 %221, i32* %220, align 4
  %222 = load i32, i32* %211, align 4
  %223 = add i32 %222, 1
  store i32 %223, i32* %211, align 4
  br label %225

224:                                              ; preds = %208
  call void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.3923"* %209, i32* dereferenceable(4) %210) #16
  br label %225

225:                                              ; preds = %224, %216, %78
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  %226 = load %"struct.std::__1::pair.4411"*, %"struct.std::__1::pair.4411"** %27, align 8
  %227 = icmp eq %"struct.std::__1::pair.4411"* %67, %226
  br i1 %227, label %47, label %65

228:                                              ; preds = %406, %16, %47
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %25) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  br label %409

229:                                              ; preds = %50, %406
  %230 = phi %"class.blink::Member.4589"* [ %53, %50 ], [ %231, %406 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #16
  store %"class.blink::CSSStyleRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleRule"*), %"class.blink::CSSStyleRule"** %11, align 8
  %231 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %230, i64 -1
  %232 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %231, i64 0, i32 0, i32 0
  %233 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %232, align 8
  store %"class.blink::CSSStyleRule"* %233, %"class.blink::CSSStyleRule"** %11, align 8
  %234 = call %"class.blink::protocol::CSS::CSSRule"* @_ZN5blink17InspectorCSSAgent18BuildObjectForRuleEPNS_12CSSStyleRuleE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleRule"* %233)
  %235 = ptrtoint %"class.blink::protocol::CSS::CSSRule"* %234 to i64
  %236 = icmp eq %"class.blink::protocol::CSS::CSSRule"* %234, null
  br i1 %236, label %406, label %237

237:                                              ; preds = %229
  %238 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %238, i8 0, i64 24, i1 false) #16
  %239 = ptrtoint i8* %238 to i64
  %240 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %11, align 8
  %241 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %240, i64 0, i32 1, i32 0, i32 0
  %242 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %241, align 8
  %243 = icmp eq %"class.blink::StyleRule"* %242, null
  br i1 %243, label %381, label %244

244:                                              ; preds = %237
  %245 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %242, i64 0, i32 2, i32 0
  %246 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %245, align 8
  %247 = icmp eq %"class.blink::CSSSelector"* %246, null
  br i1 %247, label %381, label %248

248:                                              ; preds = %244, %248
  %249 = phi %"class.blink::CSSSelector"* [ %254, %248 ], [ %246, %244 ]
  %250 = bitcast %"class.blink::CSSSelector"* %249 to i32*
  %251 = load i32, i32* %250, align 8
  %252 = and i32 %251, 131072
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %249, i64 1
  br i1 %253, label %248, label %255

255:                                              ; preds = %248
  %256 = call %"class.WTF::Vector.3923"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_12CSSStyleRuleEEENSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS5_14default_deleteIS9_EEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSF_ISC_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.4633"* nonnull %55, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %11)
  %257 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %256, i64 0, i32 0, i32 0, i32 0
  %258 = load i32*, i32** %257, align 8
  %259 = call %"class.WTF::Vector.3923"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_12CSSStyleRuleEEENSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS5_14default_deleteIS9_EEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSF_ISC_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.4633"* nonnull %55, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %11)
  %260 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %259, i64 0, i32 0, i32 0, i32 0
  %261 = load i32*, i32** %260, align 8
  %262 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %259, i64 0, i32 0, i32 0, i32 2
  %263 = load i32, i32* %262, align 4
  %264 = zext i32 %263 to i64
  %265 = getelementptr inbounds i32, i32* %261, i64 %264
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %56) #16
  call void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32* %258, i32* %265, %"struct.std::__1::__less"* nonnull dereferenceable(1) %4) #16
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %56) #16
  %266 = call %"class.WTF::Vector.3923"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_12CSSStyleRuleEEENSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS5_14default_deleteIS9_EEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSF_ISC_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.4633"* nonnull %55, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %11)
  %267 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %266, i64 0, i32 0, i32 0, i32 0
  %268 = load i32*, i32** %267, align 8
  %269 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %266, i64 0, i32 0, i32 0, i32 2
  %270 = load i32, i32* %269, align 4
  %271 = zext i32 %270 to i64
  %272 = getelementptr inbounds i32, i32* %268, i64 %271
  %273 = icmp eq i32 %270, 0
  br i1 %273, label %381, label %274

274:                                              ; preds = %255
  %275 = ptrtoint %"class.blink::CSSSelector"* %246 to i64
  %276 = and i32 %251, 2097152
  %277 = icmp eq i32 %276, 0
  %278 = ptrtoint %"class.blink::CSSSelector"* %254 to i64
  %279 = sub i64 %278, %275
  %280 = lshr exact i64 %279, 4
  %281 = trunc i64 %280 to i32
  %282 = select i1 %277, i32 %281, i32 -1
  %283 = getelementptr inbounds i8, i8* %238, i64 8
  %284 = bitcast i8* %283 to i32**
  %285 = getelementptr inbounds i8, i8* %238, i64 16
  %286 = bitcast i8* %285 to i32**
  %287 = bitcast i8* %283 to i64*
  %288 = bitcast i8* %238 to i64*
  %289 = bitcast i8* %285 to i64*
  br label %290

290:                                              ; preds = %274, %378
  %291 = phi i32* [ %268, %274 ], [ %379, %378 ]
  %292 = phi i32 [ %282, %274 ], [ %327, %378 ]
  %293 = phi i32 [ 0, %274 ], [ %326, %378 ]
  %294 = load i32, i32* %291, align 4
  %295 = icmp uge i32 %294, %292
  %296 = icmp ne i32 %292, -1
  %297 = and i1 %296, %295
  br i1 %297, label %298, label %325

298:                                              ; preds = %290
  %299 = load %"class.blink::CSSSelector"*, %"class.blink::CSSSelector"** %245, align 8
  %300 = ptrtoint %"class.blink::CSSSelector"* %299 to i64
  br label %301

301:                                              ; preds = %298, %313
  %302 = phi i32 [ %292, %298 ], [ %319, %313 ]
  %303 = phi i32 [ %293, %298 ], [ %321, %313 ]
  %304 = zext i32 %302 to i64
  %305 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %299, i64 %304
  br label %306

306:                                              ; preds = %306, %301
  %307 = phi %"class.blink::CSSSelector"* [ %305, %301 ], [ %312, %306 ]
  %308 = bitcast %"class.blink::CSSSelector"* %307 to i32*
  %309 = load i32, i32* %308, align 8
  %310 = and i32 %309, 131072
  %311 = icmp eq i32 %310, 0
  %312 = getelementptr inbounds %"class.blink::CSSSelector", %"class.blink::CSSSelector"* %307, i64 1
  br i1 %311, label %306, label %313

313:                                              ; preds = %306
  %314 = and i32 %309, 2097152
  %315 = icmp eq i32 %314, 0
  %316 = ptrtoint %"class.blink::CSSSelector"* %312 to i64
  %317 = sub i64 %316, %300
  %318 = lshr exact i64 %317, 4
  %319 = trunc i64 %318 to i32
  %320 = select i1 %315, i32 %319, i32 -1
  %321 = add nsw i32 %303, 1
  %322 = icmp uge i32 %294, %320
  %323 = icmp ne i32 %320, -1
  %324 = and i1 %323, %322
  br i1 %324, label %301, label %325

325:                                              ; preds = %313, %290
  %326 = phi i32 [ %293, %290 ], [ %321, %313 ]
  %327 = phi i32 [ %292, %290 ], [ %320, %313 ]
  %328 = load i32*, i32** %284, align 8
  %329 = load i32*, i32** %286, align 8
  %330 = icmp eq i32* %328, %329
  %331 = ptrtoint i32* %329 to i64
  br i1 %330, label %335, label %332

332:                                              ; preds = %325
  store i32 %326, i32* %328, align 4
  %333 = getelementptr inbounds i32, i32* %328, i64 1
  %334 = ptrtoint i32* %333 to i64
  store i64 %334, i64* %287, align 8
  br label %378

335:                                              ; preds = %325
  %336 = ptrtoint i32* %328 to i64
  %337 = load i64, i64* %288, align 8
  %338 = sub i64 %336, %337
  %339 = ashr exact i64 %338, 2
  %340 = add nsw i64 %339, 1
  %341 = icmp ugt i64 %340, 4611686018427387903
  br i1 %341, label %342, label %344

342:                                              ; preds = %335
  %343 = bitcast i8* %238 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %343) #19
  unreachable

344:                                              ; preds = %335
  %345 = sub i64 %331, %337
  %346 = ashr exact i64 %345, 2
  %347 = icmp ult i64 %346, 2305843009213693951
  br i1 %347, label %348, label %356

348:                                              ; preds = %344
  %349 = ashr exact i64 %345, 1
  %350 = icmp ult i64 %349, %340
  %351 = select i1 %350, i64 %340, i64 %349
  %352 = icmp eq i64 %351, 0
  br i1 %352, label %361, label %353

353:                                              ; preds = %348
  %354 = icmp ugt i64 %351, 4611686018427387903
  br i1 %354, label %355, label %356

355:                                              ; preds = %353
  call void @abort() #19
  unreachable

356:                                              ; preds = %353, %344
  %357 = phi i64 [ %351, %353 ], [ 4611686018427387903, %344 ]
  %358 = shl i64 %357, 2
  %359 = call i8* @_Znwm(i64 %358) #18
  %360 = bitcast i8* %359 to i32*
  br label %361

361:                                              ; preds = %356, %348
  %362 = phi i64 [ %357, %356 ], [ 0, %348 ]
  %363 = phi i8* [ %359, %356 ], [ null, %348 ]
  %364 = phi i32* [ %360, %356 ], [ null, %348 ]
  %365 = getelementptr inbounds i32, i32* %364, i64 %339
  %366 = getelementptr inbounds i32, i32* %364, i64 %362
  %367 = ptrtoint i32* %366 to i64
  store i32 %326, i32* %365, align 4
  %368 = getelementptr inbounds i32, i32* %365, i64 1
  %369 = ptrtoint i32* %368 to i64
  %370 = ptrtoint i32* %364 to i64
  %371 = icmp sgt i64 %338, 0
  br i1 %371, label %372, label %374

372:                                              ; preds = %361
  %373 = inttoptr i64 %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %363, i8* align 4 %373, i64 %338, i1 false) #16
  br label %374

374:                                              ; preds = %372, %361
  store i64 %370, i64* %288, align 8
  store i64 %369, i64* %287, align 8
  store i64 %367, i64* %289, align 8
  %375 = icmp eq i64 %337, 0
  br i1 %375, label %378, label %376

376:                                              ; preds = %374
  %377 = inttoptr i64 %337 to i8*
  call void @_ZdlPv(i8* %377) #18
  br label %378

378:                                              ; preds = %332, %374, %376
  %379 = getelementptr inbounds i32, i32* %291, i64 1
  %380 = icmp eq i32* %379, %272
  br i1 %380, label %381, label %290

381:                                              ; preds = %378, %237, %244, %255
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #16
  %382 = call i8* @_Znwm(i64 24) #18
  %383 = bitcast i8* %382 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS9RuleMatchE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %383, align 8
  %384 = getelementptr inbounds i8, i8* %382, i64 8
  %385 = bitcast i8* %384 to i64*
  store i64 %235, i64* %385, align 8
  %386 = getelementptr inbounds i8, i8* %382, i64 16
  %387 = bitcast i8* %386 to i64*
  store i64 %239, i64* %387, align 8
  %388 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %61, align 8
  %389 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %63, align 8
  store i8* %382, i8** %59, align 8
  %390 = icmp ult %"class.std::__1::unique_ptr.4253"* %388, %389
  br i1 %390, label %391, label %396

391:                                              ; preds = %381
  %392 = ptrtoint i8* %382 to i64
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %58, align 8
  %393 = bitcast %"class.std::__1::unique_ptr.4253"* %388 to i64*
  store i64 %392, i64* %393, align 8
  %394 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %388, i64 1
  %395 = ptrtoint %"class.std::__1::unique_ptr.4253"* %394 to i64
  store i64 %395, i64* %64, align 8
  br label %397

396:                                              ; preds = %381
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS9RuleMatchENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4251"* nonnull %14, %"class.std::__1::unique_ptr.4253"* nonnull dereferenceable(8) %12) #16
  br label %397

397:                                              ; preds = %391, %396
  %398 = load %"class.blink::protocol::CSS::RuleMatch"*, %"class.blink::protocol::CSS::RuleMatch"** %58, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %58, align 8
  %399 = icmp eq %"class.blink::protocol::CSS::RuleMatch"* %398, null
  br i1 %399, label %405, label %400

400:                                              ; preds = %397
  %401 = bitcast %"class.blink::protocol::CSS::RuleMatch"* %398 to void (%"class.blink::protocol::CSS::RuleMatch"*)***
  %402 = load void (%"class.blink::protocol::CSS::RuleMatch"*)**, void (%"class.blink::protocol::CSS::RuleMatch"*)*** %401, align 8
  %403 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %402, i64 2
  %404 = load void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %403, align 8
  call void %404(%"class.blink::protocol::CSS::RuleMatch"* nonnull %398) #16
  br label %405

405:                                              ; preds = %400, %397
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #16
  br label %406

406:                                              ; preds = %229, %405
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #16
  %407 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %18, align 8
  %408 = icmp eq %"class.blink::Member.4589"* %231, %407
  br i1 %408, label %228, label %229

409:                                              ; preds = %228, %3
  ret %"class.std::__1::vector.4251"* %14
}

declare %"class.blink::HeapVector.4405"* @_ZNK5blink22InspectorStyleResolver12MatchedRulesEv(%"class.blink::InspectorStyleResolver"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorStyleSheetForInlineStyle"* @_ZN5blink17InspectorCSSAgent21AsInspectorStyleSheetEPNS_7ElementE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::Element"*, align 8
  %4 = alloca %"class.blink::InspectorStyleSheetForInlineStyle"*, align 8
  %5 = alloca %"class.WTF::String", align 8
  store %"class.blink::Element"* %1, %"class.blink::Element"** %3, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashMap.3308", %"class.WTF::HashMap.3308"* %6, i64 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3309"* %8, %"class.blink::Node"* %7) #16
  %10 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } %9, 0
  %11 = getelementptr inbounds %"class.WTF::HashMap.3308", %"class.WTF::HashMap.3308"* %6, i64 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.3311"* %10, %16
  br i1 %17, label %21, label %18

18:                                               ; preds = %2
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %10, i64 0, i32 1, i32 0, i32 0
  %20 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %19, align 8
  br label %110

21:                                               ; preds = %2
  %22 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %1) #16
  %23 = icmp eq %"class.blink::CSSStyleDeclaration"* %22, null
  br i1 %23, label %110, label %24

24:                                               ; preds = %21
  %25 = bitcast %"class.blink::InspectorStyleSheetForInlineStyle"** %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  store %"class.blink::InspectorStyleSheetForInlineStyle"* inttoptr (i64 -6148914691236517206 to %"class.blink::InspectorStyleSheetForInlineStyle"*), %"class.blink::InspectorStyleSheetForInlineStyle"** %4, align 8
  %26 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_23InspectorStyleSheetBaseEEEPhm(i64 48) #16
  %27 = bitcast i8* %26 to %"class.blink::InspectorStyleSheetForInlineStyle"*
  %28 = icmp eq %"class.blink::InspectorCSSAgent"* %0, null
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 2
  %30 = select i1 %28, %"class.blink::InspectorStyleSheetBase::Listener"* null, %"class.blink::InspectorStyleSheetBase::Listener"* %29
  tail call void @_ZN5blink33InspectorStyleSheetForInlineStyleC1EPNS_7ElementEPNS_23InspectorStyleSheetBase8ListenerE(%"class.blink::InspectorStyleSheetForInlineStyle"* %27, %"class.blink::Element"* %1, %"class.blink::InspectorStyleSheetBase::Listener"* %30) #16
  %31 = getelementptr inbounds i8, i8* %26, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  %35 = bitcast %"class.blink::InspectorStyleSheetForInlineStyle"** %4 to i8**
  store i8* %26, i8** %35, align 8
  %36 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  %37 = getelementptr inbounds i8, i8* %26, i64 8
  %38 = bitcast i8* %37 to %"class.WTF::StringImpl"**
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %58, label %41

41:                                               ; preds = %24
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %58

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  %49 = zext i32 %48 to i33
  %50 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %49, i33 1) #16
  %51 = extractvalue { i33, i1 } %50, 1
  %52 = extractvalue { i33, i1 } %50, 0
  %53 = icmp slt i33 %52, 0
  %54 = or i1 %51, %53
  br i1 %54, label %55, label %56, !prof !3

55:                                               ; preds = %46
  tail call void @llvm.trap() #16
  unreachable

56:                                               ; preds = %46
  %57 = trunc i33 %52 to i32
  store i32 %57, i32* %47, align 4
  br label %58

58:                                               ; preds = %24, %41, %56
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %39, %"class.WTF::StringImpl"** %59, align 8
  %60 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9, i32 0, i32 0
  %61 = call { %"struct.WTF::KeyValuePair.3284"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.3282"* %60, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.blink::InspectorStyleSheetForInlineStyle"** nonnull dereferenceable(8) %4) #16
  %62 = extractvalue { %"struct.WTF::KeyValuePair.3284"*, i8 } %61, 1
  %63 = and i8 %62, 1
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %65, label %76

65:                                               ; preds = %58
  %66 = extractvalue { %"struct.WTF::KeyValuePair.3284"*, i8 } %61, 0
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %66, i64 0, i32 1
  %68 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %4, align 8
  %69 = ptrtoint %"class.blink::InspectorStyleSheetForInlineStyle"* %68 to i64
  %70 = bitcast %"class.blink::Member.3963"* %67 to i64*
  store atomic i64 %69, i64* %70 monotonic, align 8
  %71 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %76, label %73

73:                                               ; preds = %65
  %74 = bitcast %"class.blink::InspectorStyleSheetForInlineStyle"* %68 to i8*
  %75 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %74) #16
  br label %76

76:                                               ; preds = %58, %65, %73
  %77 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %78 = icmp eq %"class.WTF::StringImpl"* %77, null
  br i1 %78, label %92, label %79

79:                                               ; preds = %76
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %77, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %79
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %79
  %89 = phi i32 [ %87, %86 ], [ %85, %79 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %77) #16
  br label %92

92:                                               ; preds = %76, %88, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  %93 = call { %"struct.WTF::KeyValuePair.3311"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPNS1_7ElementERPS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3309"* %8, %"class.blink::Element"** nonnull dereferenceable(8) %3, %"class.blink::InspectorStyleSheetForInlineStyle"** nonnull dereferenceable(8) %4) #16
  %94 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, i8 } %93, 1
  %95 = and i8 %94, 1
  %96 = icmp eq i8 %95, 0
  br i1 %96, label %97, label %108

97:                                               ; preds = %92
  %98 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, i8 } %93, 0
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %98, i64 0, i32 1
  %100 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %4, align 8
  %101 = ptrtoint %"class.blink::InspectorStyleSheetForInlineStyle"* %100 to i64
  %102 = bitcast %"class.blink::Member.3963"* %99 to i64*
  store atomic i64 %101, i64* %102 monotonic, align 8
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %97
  %106 = bitcast %"class.blink::InspectorStyleSheetForInlineStyle"* %100 to i8*
  %107 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %106) #16
  br label %108

108:                                              ; preds = %92, %97, %105
  %109 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  br label %110

110:                                              ; preds = %108, %21, %18
  %111 = phi %"class.blink::InspectorStyleSheetForInlineStyle"* [ %20, %18 ], [ %109, %108 ], [ null, %21 ]
  ret %"class.blink::InspectorStyleSheetForInlineStyle"* %111
}

declare %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"*, %"class.blink::CSSStyleDeclaration"*) local_unnamed_addr #1

declare %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink17InspectorCSSAgent29BuildObjectForAttributesStyleEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* nocapture readnone, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %4 = tail call zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"* %3) #16
  br i1 %4, label %5, label %47

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %8 = icmp eq %"class.blink::ElementData"* %7, null
  br i1 %8, label %47, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %7, i64 0, i32 0, i32 0, i32 0
  %11 = load i32, i32* %10, align 4
  %12 = and i32 %11, 536870912
  %13 = icmp eq i32 %12, 0
  br i1 %13, label %18, label %14

14:                                               ; preds = %9
  tail call void @_ZN5blink7Element32UpdatePresentationAttributeStyleEv(%"class.blink::Element"* %1) #16
  %15 = load %"class.blink::ElementData"*, %"class.blink::ElementData"** %6, align 8
  %16 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %15, i64 0, i32 0, i32 0, i32 0
  %17 = load i32, i32* %16, align 4
  br label %18

18:                                               ; preds = %14, %9
  %19 = phi i32 [ %11, %9 ], [ %17, %14 ]
  %20 = phi %"class.blink::ElementData"* [ %7, %9 ], [ %15, %14 ]
  %21 = and i32 %19, 1
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %47, label %23

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"class.blink::ElementData", %"class.blink::ElementData"* %20, i64 1
  %25 = bitcast %"class.blink::ElementData"* %24 to %"class.blink::CSSPropertyValueSet"**
  %26 = load %"class.blink::CSSPropertyValueSet"*, %"class.blink::CSSPropertyValueSet"** %25, align 8
  %27 = icmp eq %"class.blink::CSSPropertyValueSet"* %26, null
  br i1 %27, label %47, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::CSSPropertyValueSet", %"class.blink::CSSPropertyValueSet"* %26, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  %31 = icmp sgt i32 %30, -1
  br i1 %31, label %47, label %32

32:                                               ; preds = %28
  %33 = bitcast %"class.blink::CSSPropertyValueSet"* %26 to %"class.blink::MutableCSSPropertyValueSet"*
  %34 = bitcast %"class.blink::Element"* %1 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %35 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %34, align 8
  %36 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %35, i64 10
  %37 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %36, align 8
  %38 = tail call %"class.blink::ExecutionContext"* %37(%"class.blink::Node"* %3) #16
  %39 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"* nonnull %33, %"class.blink::ExecutionContext"* %38) #16
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_14InspectorStyleEEEPhm(i64 24) #16
  %41 = bitcast i8* %40 to %"class.blink::InspectorStyle"*
  tail call void @_ZN5blink14InspectorStyleC1EPNS_19CSSStyleDeclarationEPNS_17CSSRuleSourceDataEPNS_23InspectorStyleSheetBaseE(%"class.blink::InspectorStyle"* %41, %"class.blink::CSSStyleDeclaration"* %39, %"class.blink::CSSRuleSourceData"* null, %"class.blink::InspectorStyleSheetBase"* null) #16
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19BuildObjectForStyleEv(%"class.blink::InspectorStyle"* %41) #16
  br label %47

47:                                               ; preds = %28, %18, %5, %23, %2, %32
  %48 = phi %"class.blink::protocol::CSS::CSSStyle"* [ %46, %32 ], [ null, %2 ], [ null, %28 ], [ null, %23 ], [ null, %5 ], [ null, %18 ]
  ret %"class.blink::protocol::CSS::CSSStyle"* %48
}

declare void @_ZN5blink22InspectorStyleResolver18PseudoElementRulesEv(%"class.blink::HeapVector.4413"* sret, %"class.blink::InspectorStyleResolver"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent25ProtocolPseudoElementTypeENS_8PseudoIdE(i8 zeroext) local_unnamed_addr #1

declare void @_ZN5blink22InspectorStyleResolver11ParentRulesEv(%"class.blink::HeapVector.4413"* sret, %"class.blink::InspectorStyleResolver"*) local_unnamed_addr #1

declare %"class.blink::CSSStyleDeclaration"* @_ZN5blink33InspectorStyleSheetForInlineStyle11InlineStyleEv(%"class.blink::InspectorStyleSheetForInlineStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.4352"* @_ZN5blink17InspectorCSSAgent17AnimationsForNodeEPNS_7ElementE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::AtomicString", align 8
  %4 = alloca %"class.blink::Document"*, align 8
  %5 = alloca %"class.std::__1::unique_ptr.4374", align 8
  %6 = alloca %"class.std::__1::unique_ptr.4354", align 8
  %7 = tail call i8* @_Znwm(i64 24) #18
  %8 = bitcast i8* %7 to %"class.std::__1::vector.4352"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 0, i64 24, i1 false) #16
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %14 = tail call %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"* %1, i8 zeroext 0, %"class.WTF::AtomicString"* dereferenceable(8) %13) #16
  %15 = icmp eq %"class.blink::ComputedStyle"* %14, null
  br i1 %15, label %350, label %16

16:                                               ; preds = %2
  %17 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %14, i64 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentData"* %18, i64 0, i32 3, i32 0, i32 0
  %20 = load %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"*, %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"** %19, align 8
  %21 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData", %"class.blink::ComputedStyleBase::StyleRareNonInheritedUsageLessThan14PercentSubData"* %20, i64 0, i32 8, i32 0, i32 0, i32 0
  %22 = load %"class.blink::CSSAnimationData"*, %"class.blink::CSSAnimationData"** %21, align 8
  %23 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %12) #16
  %24 = icmp eq %"class.blink::CSSAnimationData"* %22, null
  br i1 %24, label %350, label %25

25:                                               ; preds = %16
  %26 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %22, i64 0, i32 1, i32 0, i32 0, i32 2
  %27 = getelementptr inbounds %"class.blink::CSSAnimationData", %"class.blink::CSSAnimationData"* %22, i64 0, i32 1
  %28 = bitcast %"class.WTF::AtomicString"* %3 to i8*
  %29 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %3, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11, i32 0
  %31 = bitcast %"class.blink::Document"** %4 to i8*
  %32 = bitcast %"class.std::__1::unique_ptr.4374"* %5 to i8*
  %33 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %5, i64 0, i32 0, i32 0, i32 0
  %34 = bitcast %"class.std::__1::unique_ptr.4354"* %6 to i8*
  %35 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %6, i64 0, i32 0, i32 0, i32 0
  %36 = bitcast %"class.std::__1::unique_ptr.4354"* %6 to i8**
  %37 = getelementptr inbounds i8, i8* %7, i64 8
  %38 = bitcast i8* %37 to %"class.std::__1::unique_ptr.4354"**
  %39 = getelementptr inbounds i8, i8* %7, i64 16
  %40 = bitcast i8* %39 to %"class.std::__1::unique_ptr.4354"**
  %41 = bitcast i8* %37 to i64*
  %42 = load i32, i32* %26, align 4
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %350, label %44

44:                                               ; preds = %25, %346
  %45 = phi i32 [ %347, %346 ], [ 0, %25 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %29, align 8
  %46 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.284"* %27, i32 %45) #16
  %47 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %46, i64 0, i32 0, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  store %"class.WTF::StringImpl"* %48, %"class.WTF::StringImpl"** %29, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %67, label %50

50:                                               ; preds = %44
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %67

55:                                               ; preds = %50
  %56 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = zext i32 %57 to i33
  %59 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %58, i33 1) #16
  %60 = extractvalue { i33, i1 } %59, 1
  %61 = extractvalue { i33, i1 } %59, 0
  %62 = icmp slt i33 %61, 0
  %63 = or i1 %60, %62
  br i1 %63, label %64, label %65, !prof !3

64:                                               ; preds = %55
  call void @llvm.trap() #16
  unreachable

65:                                               ; preds = %55
  %66 = trunc i33 %61 to i32
  store i32 %66, i32* %56, align 4
  br label %67

67:                                               ; preds = %44, %50, %65
  %68 = call dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink16CSSAnimationData11InitialNameEv() #16
  %69 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %70 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %68, i64 0, i32 0, i32 0, i32 0
  %71 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %70, align 8
  %72 = icmp eq %"class.WTF::StringImpl"* %69, %71
  br i1 %72, label %330, label %73

73:                                               ; preds = %67
  %74 = call %"class.blink::StyleRuleKeyframes"* @_ZN5blink13StyleResolver17FindKeyframesRuleEPKNS_7ElementERKN3WTF12AtomicStringE(%"class.blink::StyleResolver"* %23, %"class.blink::Element"* %1, %"class.WTF::AtomicString"* nonnull dereferenceable(8) %3) #16
  %75 = icmp eq %"class.blink::StyleRuleKeyframes"* %74, null
  br i1 %75, label %328, label %76

76:                                               ; preds = %73
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  store %"class.blink::Document"* %12, %"class.blink::Document"** %4, align 8
  %77 = call %"class.blink::HeapHashSet.4120"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_8DocumentEEENS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS6_EENS_10HashTraitsIS7_EEEEEENS8_IS3_EENSA_IS4_EENSA_ISD_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3295"* %30, %"class.blink::Document"** nonnull dereferenceable(8) %4)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  %78 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %77, i64 0, i32 0, i32 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = icmp eq i32 %79, 0
  %81 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %77, i64 0, i32 0, i32 0, i32 0
  %82 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %81, align 8
  %83 = getelementptr inbounds %"class.blink::HeapHashSet.4120", %"class.blink::HeapHashSet.4120"* %77, i64 0, i32 0, i32 0, i32 1
  %84 = load i32, i32* %83, align 8
  %85 = zext i32 %84 to i64
  %86 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %82, i64 %85
  br i1 %80, label %328, label %87

87:                                               ; preds = %76
  %88 = icmp eq i32 %84, 0
  br i1 %88, label %96, label %89

89:                                               ; preds = %87, %93
  %90 = phi %"class.blink::Member.389"* [ %94, %93 ], [ %82, %87 ]
  %91 = bitcast %"class.blink::Member.389"* %90 to i64*
  %92 = load i64, i64* %91, align 8
  switch i64 %92, label %96 [
    i64 -1, label %93
    i64 0, label %93
  ]

93:                                               ; preds = %89, %89
  %94 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %90, i64 1
  %95 = icmp eq %"class.blink::Member.389"* %94, %86
  br i1 %95, label %328, label %89

96:                                               ; preds = %89, %87
  %97 = phi %"class.blink::Member.389"* [ %82, %87 ], [ %90, %89 ]
  %98 = icmp eq %"class.blink::Member.389"* %97, %86
  br i1 %98, label %328, label %99

99:                                               ; preds = %96, %115
  %100 = phi %"class.blink::Member.389"* [ %109, %115 ], [ %97, %96 ]
  %101 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %100, i64 0, i32 0, i32 0
  %102 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %101, align 8
  %103 = call fastcc %"class.blink::CSSKeyframesRule"* @_ZN5blinkL17FindKeyframesRuleINS_13CSSStyleSheetEEEPNS_16CSSKeyframesRuleEPT_PNS_18StyleRuleKeyframesE(%"class.blink::CSSStyleSheet"* %102, %"class.blink::StyleRuleKeyframes"* nonnull %74)
  %104 = icmp eq %"class.blink::CSSKeyframesRule"* %103, null
  br i1 %104, label %105, label %117

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %100, i64 1
  %107 = icmp eq %"class.blink::Member.389"* %106, %86
  br i1 %107, label %328, label %108

108:                                              ; preds = %105, %112
  %109 = phi %"class.blink::Member.389"* [ %113, %112 ], [ %106, %105 ]
  %110 = bitcast %"class.blink::Member.389"* %109 to i64*
  %111 = load i64, i64* %110, align 8
  switch i64 %111, label %115 [
    i64 -1, label %112
    i64 0, label %112
  ]

112:                                              ; preds = %108, %108
  %113 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %109, i64 1
  %114 = icmp eq %"class.blink::Member.389"* %113, %86
  br i1 %114, label %328, label %108

115:                                              ; preds = %108
  %116 = icmp eq %"class.blink::Member.389"* %109, %86
  br i1 %116, label %328, label %99

117:                                              ; preds = %99
  %118 = call i8* @_Znwm(i64 24) #18
  %119 = bitcast i8* %118 to %"class.std::__1::vector.4372"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %118, i8 0, i64 24, i1 false) #16
  %120 = getelementptr inbounds %"class.blink::CSSKeyframesRule", %"class.blink::CSSKeyframesRule"* %103, i64 0, i32 0
  %121 = getelementptr inbounds %"class.blink::CSSKeyframesRule", %"class.blink::CSSKeyframesRule"* %103, i64 0, i32 0, i32 1
  %122 = getelementptr inbounds %"class.blink::CSSKeyframesRule", %"class.blink::CSSKeyframesRule"* %103, i64 0, i32 0, i32 2, i32 0, i32 0
  %123 = getelementptr inbounds i8, i8* %118, i64 8
  %124 = bitcast i8* %123 to %"class.std::__1::unique_ptr.4374"**
  %125 = getelementptr inbounds i8, i8* %118, i64 16
  %126 = bitcast i8* %125 to %"class.std::__1::unique_ptr.4374"**
  %127 = bitcast i8* %123 to i64*
  br label %128

128:                                              ; preds = %286, %117
  %129 = phi i32 [ 0, %117 ], [ %287, %286 ]
  %130 = call i32 @_ZNK5blink16CSSKeyframesRule6lengthEv(%"class.blink::CSSKeyframesRule"* nonnull %103) #16
  %131 = icmp ult i32 %129, %130
  %132 = load i8, i8* %121, align 8
  %133 = and i8 %132, 2
  %134 = icmp eq i8 %133, 0
  br i1 %134, label %149, label %135

135:                                              ; preds = %128, %140
  %136 = phi %"class.blink::ScriptWrappable"** [ %148, %140 ], [ %122, %128 ]
  %137 = phi %"class.blink::CSSRule"* [ %143, %140 ], [ %120, %128 ]
  %138 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %136, align 8
  %139 = icmp eq %"class.blink::ScriptWrappable"* %138, null
  br i1 %139, label %153, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %137, i64 0, i32 2, i32 0, i32 0
  %142 = bitcast %"class.blink::ScriptWrappable"** %141 to %"class.blink::CSSRule"**
  %143 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %143, i64 0, i32 1
  %145 = load i8, i8* %144, align 8
  %146 = and i8 %145, 2
  %147 = icmp eq i8 %146, 0
  %148 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %143, i64 0, i32 2, i32 0, i32 0
  br i1 %147, label %149, label %135

149:                                              ; preds = %140, %128
  %150 = phi %"class.blink::ScriptWrappable"** [ %122, %128 ], [ %148, %140 ]
  %151 = bitcast %"class.blink::ScriptWrappable"** %150 to %"class.blink::CSSStyleSheet"**
  %152 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %151, align 8
  br label %153

153:                                              ; preds = %135, %149
  %154 = phi %"class.blink::CSSStyleSheet"* [ %152, %149 ], [ null, %135 ]
  %155 = call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleSheet"* %154)
  br i1 %131, label %266, label %156

156:                                              ; preds = %153
  %157 = ptrtoint i8* %118 to i64
  %158 = call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %155, %"class.blink::CSSRule"* %120) #16
  %159 = call i8* @_Znwm(i64 24) #18
  %160 = bitcast i8* %159 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %160, align 8
  %161 = getelementptr inbounds i8, i8* %159, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %161, i8 0, i64 16, i1 false) #16
  %162 = getelementptr inbounds %"class.blink::CSSKeyframesRule", %"class.blink::CSSKeyframesRule"* %103, i64 0, i32 1, i32 0, i32 0
  %163 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %162, align 8
  %164 = getelementptr inbounds %"class.blink::StyleRuleKeyframes", %"class.blink::StyleRuleKeyframes"* %163, i64 0, i32 3, i32 0, i32 0, i32 0
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %211, label %167

167:                                              ; preds = %156
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %184

174:                                              ; preds = %167
  %175 = zext i32 %173 to i33
  %176 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %175, i33 1) #16
  %177 = extractvalue { i33, i1 } %176, 1
  %178 = extractvalue { i33, i1 } %176, 0
  %179 = icmp slt i33 %178, 0
  %180 = or i1 %177, %179
  br i1 %180, label %181, label %182, !prof !3

181:                                              ; preds = %174
  call void @llvm.trap() #16
  unreachable

182:                                              ; preds = %174
  %183 = trunc i33 %178 to i32
  store i32 %183, i32* %172, align 4
  br label %184

184:                                              ; preds = %167, %182
  %185 = phi i32 [ %183, %182 ], [ %173, %167 ]
  %186 = load atomic i32, i32* %168 monotonic, align 4
  %187 = and i32 %186, 2
  %188 = icmp eq i32 %187, 0
  %189 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  br i1 %188, label %190, label %200

190:                                              ; preds = %184
  %191 = zext i32 %185 to i33
  %192 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %191, i33 1) #16
  %193 = extractvalue { i33, i1 } %192, 1
  %194 = extractvalue { i33, i1 } %192, 0
  %195 = icmp slt i33 %194, 0
  %196 = or i1 %193, %195
  br i1 %196, label %197, label %198, !prof !3

197:                                              ; preds = %190
  call void @llvm.trap() #16
  unreachable

198:                                              ; preds = %190
  %199 = trunc i33 %194 to i32
  store i32 %199, i32* %189, align 4
  br label %200

200:                                              ; preds = %198, %184
  %201 = phi i32 [ %199, %198 ], [ %185, %184 ]
  %202 = load atomic i32, i32* %168 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  br i1 %204, label %205, label %207

205:                                              ; preds = %200
  %206 = add i32 %201, -1
  store i32 %206, i32* %189, align 4
  br label %207

207:                                              ; preds = %205, %200
  %208 = phi i32 [ %206, %205 ], [ %201, %200 ]
  %209 = icmp eq i32 %208, 0
  br i1 %209, label %210, label %213

210:                                              ; preds = %207
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #16
  br label %213

211:                                              ; preds = %156
  %212 = bitcast i8* %161 to %"class.WTF::String"*
  br label %229

213:                                              ; preds = %207, %210
  %214 = bitcast i8* %161 to %"class.WTF::String"*
  %215 = load atomic i32, i32* %168 monotonic, align 4
  %216 = and i32 %215, 2
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %218, label %229

218:                                              ; preds = %213
  %219 = load i32, i32* %189, align 4
  %220 = zext i32 %219 to i33
  %221 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %220, i33 1) #16
  %222 = extractvalue { i33, i1 } %221, 1
  %223 = extractvalue { i33, i1 } %221, 0
  %224 = icmp slt i33 %223, 0
  %225 = or i1 %222, %224
  br i1 %225, label %226, label %227, !prof !3

226:                                              ; preds = %218
  call void @llvm.trap() #16
  unreachable

227:                                              ; preds = %218
  %228 = trunc i33 %223 to i32
  store i32 %228, i32* %189, align 4
  br label %229

229:                                              ; preds = %211, %227, %213
  %230 = phi %"class.WTF::String"* [ %214, %227 ], [ %214, %213 ], [ %212, %211 ]
  %231 = ptrtoint %"class.WTF::StringImpl"* %165 to i64
  %232 = bitcast %"class.WTF::String"* %230 to i64*
  %233 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %230, i64 0, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  store i64 %231, i64* %232, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %249, label %236

236:                                              ; preds = %229
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  %241 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %242 = load i32, i32* %241, align 4
  br i1 %240, label %243, label %245

243:                                              ; preds = %236
  %244 = add i32 %242, -1
  store i32 %244, i32* %241, align 4
  br label %245

245:                                              ; preds = %243, %236
  %246 = phi i32 [ %244, %243 ], [ %242, %236 ]
  %247 = icmp eq i32 %246, 0
  br i1 %247, label %248, label %249

248:                                              ; preds = %245
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %234) #16
  br label %249

249:                                              ; preds = %229, %245, %248
  %250 = ptrtoint i8* %159 to i64
  br i1 %166, label %264, label %251

251:                                              ; preds = %249
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %253 = load atomic i32, i32* %252 monotonic, align 4
  %254 = and i32 %253, 2
  %255 = icmp eq i32 %254, 0
  %256 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %257 = load i32, i32* %256, align 4
  br i1 %255, label %258, label %260

258:                                              ; preds = %251
  %259 = add i32 %257, -1
  store i32 %259, i32* %256, align 4
  br label %260

260:                                              ; preds = %258, %251
  %261 = phi i32 [ %259, %258 ], [ %257, %251 ]
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %264

263:                                              ; preds = %260
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #16
  br label %264

264:                                              ; preds = %263, %260, %249
  %265 = icmp eq %"class.blink::CSSRuleSourceData"* %158, null
  br i1 %265, label %303, label %288

266:                                              ; preds = %153
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  %267 = call %"class.blink::CSSKeyframeRule"* @_ZNK5blink16CSSKeyframesRule4ItemEj(%"class.blink::CSSKeyframesRule"* nonnull %103, i32 %129) #16
  %268 = call %"class.blink::protocol::CSS::CSSKeyframeRule"* @_ZN5blink19InspectorStyleSheet26BuildObjectForKeyframeRuleEPNS_15CSSKeyframeRuleE(%"class.blink::InspectorStyleSheet"* %155, %"class.blink::CSSKeyframeRule"* %267) #16
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* %268, %"class.blink::protocol::CSS::CSSKeyframeRule"** %33, align 8
  %269 = load %"class.std::__1::unique_ptr.4374"*, %"class.std::__1::unique_ptr.4374"** %124, align 8
  %270 = load %"class.std::__1::unique_ptr.4374"*, %"class.std::__1::unique_ptr.4374"** %126, align 8
  %271 = icmp ult %"class.std::__1::unique_ptr.4374"* %269, %270
  br i1 %271, label %272, label %277

272:                                              ; preds = %266
  %273 = ptrtoint %"class.blink::protocol::CSS::CSSKeyframeRule"* %268 to i64
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %33, align 8
  %274 = bitcast %"class.std::__1::unique_ptr.4374"* %269 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %269, i64 1
  %276 = ptrtoint %"class.std::__1::unique_ptr.4374"* %275 to i64
  store i64 %276, i64* %127, align 8
  br label %278

277:                                              ; preds = %266
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS15CSSKeyframeRuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4372"* nonnull %119, %"class.std::__1::unique_ptr.4374"* nonnull dereferenceable(8) %5) #16
  br label %278

278:                                              ; preds = %272, %277
  %279 = load %"class.blink::protocol::CSS::CSSKeyframeRule"*, %"class.blink::protocol::CSS::CSSKeyframeRule"** %33, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %33, align 8
  %280 = icmp eq %"class.blink::protocol::CSS::CSSKeyframeRule"* %279, null
  br i1 %280, label %286, label %281

281:                                              ; preds = %278
  %282 = bitcast %"class.blink::protocol::CSS::CSSKeyframeRule"* %279 to void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)***
  %283 = load void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)**, void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)*** %282, align 8
  %284 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)** %283, i64 2
  %285 = load void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)** %284, align 8
  call void %285(%"class.blink::protocol::CSS::CSSKeyframeRule"* nonnull %279) #16
  br label %286

286:                                              ; preds = %278, %281
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  %287 = add nuw i32 %129, 1
  br label %128

288:                                              ; preds = %264
  %289 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %155, i64 0, i32 0
  %290 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %158, i64 0, i32 1
  %291 = call %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink23InspectorStyleSheetBase22BuildSourceRangeObjectERKNS_11SourceRangeE(%"class.blink::InspectorStyleSheetBase"* %289, %"class.blink::SourceRange"* dereferenceable(8) %290) #16
  %292 = ptrtoint %"class.blink::protocol::CSS::SourceRange"* %291 to i64
  %293 = getelementptr inbounds i8, i8* %159, i64 16
  %294 = bitcast i8* %293 to %"class.blink::protocol::CSS::SourceRange"**
  %295 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %294, align 8
  %296 = bitcast i8* %293 to i64*
  store i64 %292, i64* %296, align 8
  %297 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %295, null
  br i1 %297, label %303, label %298

298:                                              ; preds = %288
  %299 = bitcast %"class.blink::protocol::CSS::SourceRange"* %295 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %300 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %299, align 8
  %301 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %300, i64 2
  %302 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %301, align 8
  call void %302(%"class.blink::protocol::CSS::SourceRange"* nonnull %295) #16
  br label %303

303:                                              ; preds = %264, %288, %298
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %304 = call i8* @_Znwm(i64 24) #18
  %305 = bitcast i8* %304 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS16CSSKeyframesRuleE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %305, align 8
  %306 = getelementptr inbounds i8, i8* %304, i64 8
  %307 = bitcast i8* %306 to i64*
  store i64 %250, i64* %307, align 8
  %308 = getelementptr inbounds i8, i8* %304, i64 16
  %309 = bitcast i8* %308 to i64*
  store i64 %157, i64* %309, align 8
  %310 = load %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"** %38, align 8
  %311 = load %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"** %40, align 8
  store i8* %304, i8** %36, align 8
  %312 = icmp ult %"class.std::__1::unique_ptr.4354"* %310, %311
  br i1 %312, label %313, label %318

313:                                              ; preds = %303
  %314 = ptrtoint i8* %304 to i64
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %35, align 8
  %315 = bitcast %"class.std::__1::unique_ptr.4354"* %310 to i64*
  store i64 %314, i64* %315, align 8
  %316 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %310, i64 1
  %317 = ptrtoint %"class.std::__1::unique_ptr.4354"* %316 to i64
  store i64 %317, i64* %41, align 8
  br label %319

318:                                              ; preds = %303
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS16CSSKeyframesRuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4352"* nonnull %8, %"class.std::__1::unique_ptr.4354"* nonnull dereferenceable(8) %6) #16
  br label %319

319:                                              ; preds = %313, %318
  %320 = load %"class.blink::protocol::CSS::CSSKeyframesRule"*, %"class.blink::protocol::CSS::CSSKeyframesRule"** %35, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %35, align 8
  %321 = icmp eq %"class.blink::protocol::CSS::CSSKeyframesRule"* %320, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %319
  %323 = bitcast %"class.blink::protocol::CSS::CSSKeyframesRule"* %320 to void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)***
  %324 = load void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)**, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)** %324, i64 2
  %326 = load void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)** %325, align 8
  call void %326(%"class.blink::protocol::CSS::CSSKeyframesRule"* nonnull %320) #16
  br label %327

327:                                              ; preds = %319, %322
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  br label %328

328:                                              ; preds = %93, %105, %115, %112, %76, %96, %73, %327
  %329 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  br label %330

330:                                              ; preds = %328, %67
  %331 = phi %"class.WTF::StringImpl"* [ %329, %328 ], [ %69, %67 ]
  %332 = icmp eq %"class.WTF::StringImpl"* %331, null
  br i1 %332, label %346, label %333

333:                                              ; preds = %330
  %334 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %335 = load atomic i32, i32* %334 monotonic, align 4
  %336 = and i32 %335, 2
  %337 = icmp eq i32 %336, 0
  %338 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %331, i64 0, i32 0
  %339 = load i32, i32* %338, align 4
  br i1 %337, label %340, label %342

340:                                              ; preds = %333
  %341 = add i32 %339, -1
  store i32 %341, i32* %338, align 4
  br label %342

342:                                              ; preds = %340, %333
  %343 = phi i32 [ %341, %340 ], [ %339, %333 ]
  %344 = icmp eq i32 %343, 0
  br i1 %344, label %345, label %346

345:                                              ; preds = %342
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %331) #16
  br label %346

346:                                              ; preds = %330, %342, %345
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  %347 = add i32 %45, 1
  %348 = load i32, i32* %26, align 4
  %349 = icmp ult i32 %347, %348
  br i1 %349, label %44, label %350

350:                                              ; preds = %346, %25, %16, %2
  ret %"class.std::__1::vector.4352"* %8
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent23getMatchedStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_PNS3_INSt3__16vectorINS9_10unique_ptrINS5_9RuleMatchENS9_14default_deleteISC_EEEENS9_9allocatorISF_EEEEEEPNS3_INSA_INSB_INS5_20PseudoElementMatchesENSD_ISL_EEEENSG_ISN_EEEEEEPNS3_INSA_INSB_INS5_19InheritedStyleEntryENSD_ISS_EEEENSG_ISU_EEEEEEPNS3_INSA_INSB_INS5_16CSSKeyframesRuleENSD_ISZ_EEEENSG_IS11_EEEEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"* nocapture, %"class.crdtp::detail::PtrMaybe.4223"* nocapture, %"class.crdtp::detail::PtrMaybe.4247"* nocapture, %"class.crdtp::detail::PtrMaybe.4302"* nocapture, %"class.crdtp::detail::PtrMaybe.4325"* nocapture, %"class.crdtp::detail::PtrMaybe.4348"* nocapture) unnamed_addr #0 align 2 {
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %11 = bitcast i32* %10 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent23getMatchedStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_PNS3_INSt3__16vectorINS9_10unique_ptrINS5_9RuleMatchENS9_14default_deleteISC_EEEENS9_9allocatorISF_EEEEEEPNS3_INSA_INSB_INS5_20PseudoElementMatchesENSD_ISL_EEEENSG_ISN_EEEEEEPNS3_INSA_INSB_INS5_19InheritedStyleEntryENSD_ISS_EEEENSG_ISU_EEEEEEPNS3_INSA_INSB_INS5_16CSSKeyframesRuleENSD_ISZ_EEEENSG_IS11_EEEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %11, i32 %2, %"class.crdtp::detail::PtrMaybe.4223"* %3, %"class.crdtp::detail::PtrMaybe.4223"* %4, %"class.crdtp::detail::PtrMaybe.4247"* %5, %"class.crdtp::detail::PtrMaybe.4302"* %6, %"class.crdtp::detail::PtrMaybe.4325"* %7, %"class.crdtp::detail::PtrMaybe.4348"* %8)
  ret void
}

declare %"class.blink::ComputedStyle"* @_ZN5blink7Element19EnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Element"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

declare dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"*) local_unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZN5blink16CSSAnimationData11InitialNameEv() local_unnamed_addr #1

declare %"class.blink::StyleRuleKeyframes"* @_ZN5blink13StyleResolver17FindKeyframesRuleEPKNS_7ElementERKN3WTF12AtomicStringE(%"class.blink::StyleResolver"*, %"class.blink::Element"*, %"class.WTF::AtomicString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSKeyframesRule"* @_ZN5blinkL17FindKeyframesRuleINS_13CSSStyleSheetEEEPNS_16CSSKeyframesRuleEPT_PNS_18StyleRuleKeyframesE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleRuleKeyframes"*) unnamed_addr #0 {
  %3 = icmp eq %"class.blink::CSSStyleSheet"* %0, null
  br i1 %3, label %7, label %4

4:                                                ; preds = %2
  %5 = tail call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* nonnull %0) #16
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %9

7:                                                ; preds = %44, %4, %2
  %8 = phi %"class.blink::CSSKeyframesRule"* [ null, %2 ], [ null, %4 ], [ %45, %44 ]
  ret %"class.blink::CSSKeyframesRule"* %8

9:                                                ; preds = %4, %44
  %10 = phi i32 [ %46, %44 ], [ 0, %4 ]
  %11 = tail call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* nonnull %0, i32 %10) #16
  %12 = icmp eq %"class.blink::CSSRule"* %11, null
  br i1 %12, label %37, label %13

13:                                               ; preds = %9
  %14 = bitcast %"class.blink::CSSRule"* %11 to i32 (%"class.blink::CSSRule"*)***
  %15 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %14, align 8
  %16 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %15, i64 9
  %17 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %16, align 8
  %18 = tail call i32 %17(%"class.blink::CSSRule"* nonnull %11) #16
  %19 = icmp eq i32 %18, 7
  br i1 %19, label %20, label %27

20:                                               ; preds = %13
  %21 = bitcast %"class.blink::CSSRule"* %11 to %"class.blink::CSSKeyframesRule"*
  %22 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %11, i64 1
  %23 = bitcast %"class.blink::CSSRule"* %22 to %"class.blink::StyleRuleKeyframes"**
  %24 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %23, align 8
  %25 = icmp eq %"class.blink::StyleRuleKeyframes"* %24, %1
  %26 = select i1 %25, %"class.blink::CSSKeyframesRule"* %21, %"class.blink::CSSKeyframesRule"* null
  br label %44

27:                                               ; preds = %13
  %28 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %14, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %28, i64 9
  %30 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %29, align 8
  %31 = tail call i32 %30(%"class.blink::CSSRule"* nonnull %11) #16
  %32 = icmp eq i32 %31, 3
  br i1 %32, label %33, label %37

33:                                               ; preds = %27
  %34 = bitcast %"class.blink::CSSRule"* %11 to %"class.blink::CSSImportRule"*
  %35 = tail call %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSImportRule10styleSheetEv(%"class.blink::CSSImportRule"* nonnull %34) #16
  %36 = tail call fastcc %"class.blink::CSSKeyframesRule"* @_ZN5blinkL17FindKeyframesRuleINS_13CSSStyleSheetEEEPNS_16CSSKeyframesRuleEPT_PNS_18StyleRuleKeyframesE(%"class.blink::CSSStyleSheet"* %35, %"class.blink::StyleRuleKeyframes"* %1)
  br label %44

37:                                               ; preds = %27, %9
  %38 = bitcast %"class.blink::CSSRule"* %11 to %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)***
  %39 = load %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)**, %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)*** %38, align 8
  %40 = getelementptr inbounds %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)*, %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)** %39, i64 12
  %41 = load %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)*, %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)** %40, align 8
  %42 = tail call %"class.blink::CSSRuleList"* %41(%"class.blink::CSSRule"* %11) #16
  %43 = tail call fastcc %"class.blink::CSSKeyframesRule"* @_ZN5blinkL17FindKeyframesRuleINS_11CSSRuleListEEEPNS_16CSSKeyframesRuleEPT_PNS_18StyleRuleKeyframesE(%"class.blink::CSSRuleList"* %42, %"class.blink::StyleRuleKeyframes"* %1)
  br label %44

44:                                               ; preds = %20, %33, %37
  %45 = phi %"class.blink::CSSKeyframesRule"* [ %26, %20 ], [ %36, %33 ], [ %43, %37 ]
  %46 = add nuw i32 %10, 1
  %47 = tail call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* nonnull %0) #16
  %48 = icmp ult i32 %46, %47
  %49 = icmp eq %"class.blink::CSSKeyframesRule"* %45, null
  %50 = and i1 %49, %48
  br i1 %50, label %9, label %7
}

declare i32 @_ZNK5blink16CSSKeyframesRule6lengthEv(%"class.blink::CSSKeyframesRule"*) local_unnamed_addr #1

declare %"class.blink::protocol::CSS::CSSKeyframeRule"* @_ZN5blink19InspectorStyleSheet26BuildObjectForKeyframeRuleEPNS_15CSSKeyframeRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSKeyframeRule"*) local_unnamed_addr #1

declare %"class.blink::CSSKeyframeRule"* @_ZNK5blink16CSSKeyframesRule4ItemEj(%"class.blink::CSSKeyframesRule"*, i32) local_unnamed_addr #1

declare %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*) local_unnamed_addr #1

declare %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink23InspectorStyleSheetBase22BuildSourceRangeObjectERKNS_11SourceRangeE(%"class.blink::InspectorStyleSheetBase"*, %"class.blink::SourceRange"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent22getInlineStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"* nocapture, %"class.crdtp::detail::PtrMaybe.4223"* nocapture) unnamed_addr #0 align 2 {
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.blink::Element"*, align 8
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  %14 = load i8, i8* %13, align 8, !range !4, !noalias !24
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %5
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %7) #16
  br label %29

17:                                               ; preds = %5
  %18 = tail call i8* @_Znwm(i64 32) #18
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !noalias !24
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast i64* %20 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %21, align 8, !noalias !24
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i64 25, i1 false) #16
  %22 = getelementptr inbounds i8, i8* %18, i64 25
  store i8 0, i8* %22, align 1, !noalias !24
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull %6) #16
  %23 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !24
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = load i8*, i8** %19, align 8, !noalias !24
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %16, %17, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12)
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %31, i32* %34, align 8
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #16
  br label %116

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::Element"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  store %"class.blink::Element"* null, %"class.blink::Element"** %8, align 8
  %41 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #16
  %42 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %42, align 8
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.blink::InspectorDOMAgent"* %43, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %8) #16
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %30, align 8
  %46 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %47 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #18
  %55 = load i32, i32* %30, align 8
  br label %56

56:                                               ; preds = %52, %39
  %57 = phi i32 [ %55, %52 ], [ %45, %39 ]
  %58 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #16
  %60 = icmp eq i32 %57, 1
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %57, i32* %62, align 8
  %63 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %58, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #16
  br label %110

65:                                               ; preds = %56
  %66 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %67 = call %"class.blink::InspectorStyleSheetForInlineStyle"* @_ZN5blink17InspectorCSSAgent21AsInspectorStyleSheetEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Element"* %66)
  %68 = icmp eq %"class.blink::InspectorStyleSheetForInlineStyle"* %67, null
  br i1 %68, label %69, label %81

69:                                               ; preds = %65
  %70 = call i8* @_Znwm(i64 32) #18
  %71 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %70, i8** %71, align 8
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %73 = bitcast i64* %72 to <2 x i64>*
  store <2 x i64> <i64 28, i64 -9223372036854775776>, <2 x i64>* %73, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %70, i8* align 1 getelementptr inbounds ([29 x i8], [29 x i8]* @.str.3, i64 0, i64 0), i64 28, i1 false) #16
  %74 = getelementptr inbounds i8, i8* %70, i64 28
  store i8 0, i8* %74, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #16
  %75 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %76 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %75, i64 0, i32 1, i32 0
  %77 = load i8, i8* %76, align 1
  %78 = icmp slt i8 %77, 0
  br i1 %78, label %79, label %110

79:                                               ; preds = %69
  %80 = load i8*, i8** %71, align 8
  call void @_ZdlPv(i8* %80) #18
  br label %110

81:                                               ; preds = %65
  %82 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %67, i64 0, i32 0
  %83 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %84 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %83) #16
  %85 = call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"* %82, %"class.blink::CSSStyleDeclaration"* %84) #16
  %86 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %85 to i64
  %87 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4223", %"class.crdtp::detail::PtrMaybe.4223"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %88 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %87, align 8
  %89 = bitcast %"class.crdtp::detail::PtrMaybe.4223"* %3 to i64*
  store i64 %86, i64* %89, align 8
  %90 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %88, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %81
  %92 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %88 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %93 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %93, i64 2
  %95 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %94, align 8
  call void %95(%"class.blink::protocol::CSS::CSSStyle"* nonnull %88) #16
  br label %96

96:                                               ; preds = %81, %91
  %97 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  %98 = call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink17InspectorCSSAgent29BuildObjectForAttributesStyleEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* undef, %"class.blink::Element"* %97)
  %99 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %98 to i64
  %100 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4223", %"class.crdtp::detail::PtrMaybe.4223"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %101 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %100, align 8
  %102 = bitcast %"class.crdtp::detail::PtrMaybe.4223"* %4 to i64*
  store i64 %99, i64* %102, align 8
  %103 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %101, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %96
  %105 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %101 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %106 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %106, i64 2
  %108 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %107, align 8
  call void %108(%"class.blink::protocol::CSS::CSSStyle"* nonnull %101) #16
  br label %109

109:                                              ; preds = %96, %104
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %110

110:                                              ; preds = %61, %109, %69, %79
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  %111 = load i8, i8* %49, align 1
  %112 = icmp slt i8 %111, 0
  br i1 %112, label %113, label %116

113:                                              ; preds = %110
  %114 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load i8*, i8** %114, align 8
  call void @_ZdlPv(i8* %115) #18
  br label %116

116:                                              ; preds = %33, %110, %113
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent22getInlineStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.crdtp::detail::PtrMaybe.4223"* nocapture, %"class.crdtp::detail::PtrMaybe.4223"* nocapture) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %7 = bitcast i32* %6 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent22getInlineStylesForNodeEiPN5crdtp6detail8PtrMaybeINS_8protocol3CSS8CSSStyleEEES8_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %7, i32 %2, %"class.crdtp::detail::PtrMaybe.4223"* %3, %"class.crdtp::detail::PtrMaybe.4223"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent23getComputedStyleForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.4442"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.blink::Node"*, align 8
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.std::__1::unique_ptr.4447", align 8
  %12 = alloca %"class.blink::HeapHashMap", align 8
  %13 = alloca %"class.std::__1::unique_ptr.4447", align 8
  %14 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %14) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 32, i1 false)
  %15 = bitcast %"class.std::__1::basic_string"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15)
  %16 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  %17 = load i8, i8* %16, align 8, !range !4, !noalias !27
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %20, label %19

19:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %7) #16
  br label %32

20:                                               ; preds = %4
  %21 = tail call i8* @_Znwm(i64 32) #18
  %22 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %21, i8** %22, align 8, !noalias !27
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %24 = bitcast i64* %23 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %24, align 8, !noalias !27
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %21, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i64 25, i1 false) #16
  %25 = getelementptr inbounds i8, i8* %21, i64 25
  store i8 0, i8* %25, align 1, !noalias !27
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull %6) #16
  %26 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1, !noalias !27
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %20
  %31 = load i8*, i8** %22, align 8, !noalias !27
  call void @_ZdlPv(i8* %31) #18
  br label %32

32:                                               ; preds = %19, %20, %30
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15)
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  %35 = icmp eq i32 %34, 1
  br i1 %35, label %42, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %34, i32* %37, align 8
  %38 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %39 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %40 = bitcast %"class.std::__1::basic_string"* %38 to i8*
  %41 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %40, i8* align 8 %41, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %41, i8 0, i64 24, i1 false) #16
  br label %502

42:                                               ; preds = %32
  %43 = bitcast %"class.blink::Node"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %43) #16
  store %"class.blink::Node"* null, %"class.blink::Node"** %8, align 8
  %44 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #16
  %45 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %46 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %45, align 8
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.blink::InspectorDOMAgent"* %46, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %8) #16
  %47 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %33, align 8
  %49 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %50 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %42
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #18
  %58 = load i32, i32* %33, align 8
  br label %59

59:                                               ; preds = %55, %42
  %60 = phi i32 [ %58, %55 ], [ %48, %42 ]
  %61 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #16
  %63 = icmp eq i32 %60, 1
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %60, i32* %65, align 8
  %66 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %61, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #16
  br label %496

68:                                               ; preds = %59
  %69 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %70 = call %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"* %69) #16
  %71 = icmp eq %"class.blink::Document"* %70, null
  br i1 %71, label %72, label %84

72:                                               ; preds = %68
  %73 = call i8* @_Znwm(i64 48) #18
  %74 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %73, i8** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %76 = bitcast i64* %75 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %76, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %73, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.4, i64 0, i64 0), i64 36, i1 false) #16
  %77 = getelementptr inbounds i8, i8* %73, i64 36
  store i8 0, i8* %77, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #16
  %78 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %82, label %496

82:                                               ; preds = %72
  %83 = load i8*, i8** %74, align 8
  call void @_ZdlPv(i8* %83) #18
  br label %496

84:                                               ; preds = %68
  %85 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 64) #16
  %86 = bitcast i8* %85 to %"class.blink::CSSComputedStyleDeclaration"*
  %87 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %88 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #16
  %89 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %89, align 8
  call void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"* %86, %"class.blink::Node"* %87, i1 zeroext true, %"class.WTF::String"* nonnull dereferenceable(8) %5) #16
  %90 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %89, align 8
  %91 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %91, label %105, label %92

92:                                               ; preds = %84
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load atomic i32, i32* %93 monotonic, align 4
  %95 = and i32 %94, 2
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %98 = load i32, i32* %97, align 4
  br i1 %96, label %99, label %101

99:                                               ; preds = %92
  %100 = add i32 %98, -1
  store i32 %100, i32* %97, align 4
  br label %101

101:                                              ; preds = %99, %92
  %102 = phi i32 [ %100, %99 ], [ %98, %92 ]
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %105

104:                                              ; preds = %101
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #16
  br label %105

105:                                              ; preds = %84, %101, %104
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %88) #16
  %106 = getelementptr inbounds i8, i8* %85, i64 -4
  %107 = bitcast i8* %106 to i16*
  %108 = load atomic i16, i16* %107 monotonic, align 2
  %109 = or i16 %108, 1
  store atomic i16 %109, i16* %107 release, align 2
  %110 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %110, i8 0, i64 24, i1 false) #16
  %111 = ptrtoint i8* %110 to i64
  %112 = getelementptr inbounds %"class.std::__1::unique_ptr.4442", %"class.std::__1::unique_ptr.4442"* %3, i64 0, i32 0, i32 0, i32 0
  %113 = load %"class.std::__1::vector.4445"*, %"class.std::__1::vector.4445"** %112, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4442"* %3 to i64*
  store i64 %111, i64* %114, align 8
  %115 = icmp eq %"class.std::__1::vector.4445"* %113, null
  br i1 %115, label %145, label %116

116:                                              ; preds = %105
  %117 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %113, i64 0, i32 0, i32 0
  %118 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %117, align 8
  %119 = icmp eq %"class.std::__1::unique_ptr.4447"* %118, null
  br i1 %119, label %143, label %120

120:                                              ; preds = %116
  %121 = bitcast %"class.std::__1::unique_ptr.4447"* %118 to i8*
  %122 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %113, i64 0, i32 0, i32 1
  %123 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %122, align 8
  %124 = icmp eq %"class.std::__1::unique_ptr.4447"* %123, %118
  br i1 %124, label %141, label %125

125:                                              ; preds = %120, %136
  %126 = phi %"class.std::__1::unique_ptr.4447"* [ %127, %136 ], [ %123, %120 ]
  %127 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %126, i64 -1
  %128 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %127, i64 0, i32 0, i32 0, i32 0
  %129 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %128, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %128, align 8
  %130 = icmp eq %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %129, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %125
  %132 = bitcast %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %129 to void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)***
  %133 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)**, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %133, i64 2
  %135 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %134, align 8
  call void %135(%"class.blink::protocol::CSS::CSSComputedStyleProperty"* nonnull %129) #16
  br label %136

136:                                              ; preds = %131, %125
  %137 = icmp eq %"class.std::__1::unique_ptr.4447"* %127, %118
  br i1 %137, label %138, label %125

138:                                              ; preds = %136
  %139 = bitcast %"class.std::__1::vector.4445"* %113 to i8**
  %140 = load i8*, i8** %139, align 8
  br label %141

141:                                              ; preds = %138, %120
  %142 = phi i8* [ %140, %138 ], [ %121, %120 ]
  store %"class.std::__1::unique_ptr.4447"* %118, %"class.std::__1::unique_ptr.4447"** %122, align 8
  call void @_ZdlPv(i8* %142) #18
  br label %143

143:                                              ; preds = %141, %116
  %144 = bitcast %"class.std::__1::vector.4445"* %113 to i8*
  call void @_ZdlPv(i8* %144) #18
  br label %145

145:                                              ; preds = %143, %105
  %146 = bitcast %"class.std::__1::unique_ptr.4447"* %11 to i8*
  %147 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %11, i64 0, i32 0, i32 0, i32 0
  %148 = bitcast %"class.std::__1::unique_ptr.4447"* %11 to i8**
  br label %176

149:                                              ; preds = %356
  %150 = bitcast %"class.blink::HeapHashMap"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %150) #16
  call void @_ZNK5blink27CSSComputedStyleDeclaration12GetVariablesEv(%"class.blink::HeapHashMap"* nonnull sret %12, %"class.blink::CSSComputedStyleDeclaration"* %86) #16
  %151 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %12, i64 0, i32 0, i32 0, i32 2
  %152 = load i32, i32* %151, align 4
  %153 = icmp eq i32 %152, 0
  %154 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %12, i64 0, i32 0, i32 0, i32 0
  %155 = load %"struct.WTF::KeyValuePair.268"*, %"struct.WTF::KeyValuePair.268"** %154, align 8
  %156 = getelementptr inbounds %"class.blink::HeapHashMap", %"class.blink::HeapHashMap"* %12, i64 0, i32 0, i32 0, i32 1
  %157 = load i32, i32* %156, align 8
  %158 = zext i32 %157 to i64
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %155, i64 %158
  br i1 %153, label %359, label %160

160:                                              ; preds = %149
  %161 = icmp eq i32 %157, 0
  br i1 %161, label %169, label %162

162:                                              ; preds = %160, %166
  %163 = phi %"struct.WTF::KeyValuePair.268"* [ %167, %166 ], [ %155, %160 ]
  %164 = bitcast %"struct.WTF::KeyValuePair.268"* %163 to i64*
  %165 = load i64, i64* %164, align 8
  switch i64 %165, label %169 [
    i64 -1, label %166
    i64 0, label %166
  ]

166:                                              ; preds = %162, %162
  %167 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %163, i64 1
  %168 = icmp eq %"struct.WTF::KeyValuePair.268"* %167, %159
  br i1 %168, label %359, label %162

169:                                              ; preds = %162, %160
  %170 = phi %"struct.WTF::KeyValuePair.268"* [ %155, %160 ], [ %163, %162 ]
  %171 = icmp eq %"struct.WTF::KeyValuePair.268"* %170, %159
  br i1 %171, label %359, label %172

172:                                              ; preds = %169
  %173 = bitcast %"class.std::__1::unique_ptr.4447"* %13 to i8*
  %174 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %13, i64 0, i32 0, i32 0, i32 0
  %175 = bitcast %"class.std::__1::unique_ptr.4447"* %13 to i8**
  br label %360

176:                                              ; preds = %145, %356
  %177 = phi i32 [ 2, %145 ], [ %357, %356 ]
  %178 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %177) #16
  %179 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %178, i64 0, i32 0
  %180 = load %"class.blink::Node"*, %"class.blink::Node"** %8, align 8
  %181 = bitcast %"class.blink::Node"* %180 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %182 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %181, align 8
  %183 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %182, i64 10
  %184 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %183, align 8
  %185 = call %"class.blink::ExecutionContext"* %184(%"class.blink::Node"* %180) #16
  %186 = bitcast %"class.blink::CSSProperty"* %178 to i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)***
  %187 = load i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)**, i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)*** %186, align 8
  %188 = getelementptr inbounds i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)*, i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)** %187, i64 1
  %189 = load i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)*, i32 (%"class.blink::CSSUnresolvedProperty"*, %"class.blink::ExecutionContext"*)** %188, align 8
  %190 = call i32 %189(%"class.blink::CSSUnresolvedProperty"* %179, %"class.blink::ExecutionContext"* %185) #16
  %191 = icmp eq i32 %190, 2
  br i1 %191, label %192, label %356

192:                                              ; preds = %176
  %193 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %178, i64 0, i32 2
  %194 = load i32, i32* %193, align 4
  %195 = and i32 %194, 24
  %196 = icmp eq i32 %195, 8
  br i1 %196, label %197, label %356

197:                                              ; preds = %192
  %198 = load %"class.std::__1::vector.4445"*, %"class.std::__1::vector.4445"** %112, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %146) #16
  %199 = call i8* @_Znwm(i64 24) #18
  %200 = bitcast i8* %199 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS24CSSComputedStylePropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %200, align 8
  %201 = getelementptr inbounds i8, i8* %199, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %201, i8 0, i64 16, i1 false) #16
  %202 = bitcast %"class.blink::CSSProperty"* %178 to %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)***
  %203 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*** %202, align 8
  %204 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %203, i64 4
  %205 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %204, align 8
  %206 = call dereferenceable(8) %"class.WTF::AtomicString"* %205(%"class.blink::CSSUnresolvedProperty"* %179) #16
  %207 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %206, i64 0, i32 0, i32 0, i32 0
  %208 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %207, align 8
  %209 = icmp eq %"class.WTF::StringImpl"* %208, null
  br i1 %209, label %227, label %210

210:                                              ; preds = %197
  %211 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %212 = load atomic i32, i32* %211 monotonic, align 4
  %213 = and i32 %212, 2
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %215, label %229

215:                                              ; preds = %210
  %216 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %217 = load i32, i32* %216, align 4
  %218 = zext i32 %217 to i33
  %219 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %218, i33 1) #16
  %220 = extractvalue { i33, i1 } %219, 1
  %221 = extractvalue { i33, i1 } %219, 0
  %222 = icmp slt i33 %221, 0
  %223 = or i1 %220, %222
  br i1 %223, label %224, label %225, !prof !3

224:                                              ; preds = %215
  call void @llvm.trap() #16
  unreachable

225:                                              ; preds = %215
  %226 = trunc i33 %221 to i32
  store i32 %226, i32* %216, align 4
  br label %229

227:                                              ; preds = %197
  %228 = bitcast i8* %201 to %"class.WTF::String"*
  br label %246

229:                                              ; preds = %210, %225
  %230 = bitcast i8* %201 to %"class.WTF::String"*
  %231 = load atomic i32, i32* %211 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  br i1 %233, label %234, label %246

234:                                              ; preds = %229
  %235 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %236 = load i32, i32* %235, align 4
  %237 = zext i32 %236 to i33
  %238 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %237, i33 1) #16
  %239 = extractvalue { i33, i1 } %238, 1
  %240 = extractvalue { i33, i1 } %238, 0
  %241 = icmp slt i33 %240, 0
  %242 = or i1 %239, %241
  br i1 %242, label %243, label %244, !prof !3

243:                                              ; preds = %234
  call void @llvm.trap() #16
  unreachable

244:                                              ; preds = %234
  %245 = trunc i33 %240 to i32
  store i32 %245, i32* %235, align 4
  br label %246

246:                                              ; preds = %227, %244, %229
  %247 = phi %"class.WTF::String"* [ %230, %244 ], [ %230, %229 ], [ %228, %227 ]
  %248 = ptrtoint %"class.WTF::StringImpl"* %208 to i64
  %249 = bitcast %"class.WTF::String"* %247 to i64*
  %250 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %247, i64 0, i32 0, i32 0
  %251 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %250, align 8
  store i64 %248, i64* %249, align 8
  %252 = icmp eq %"class.WTF::StringImpl"* %251, null
  br i1 %252, label %266, label %253

253:                                              ; preds = %246
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %255 = load atomic i32, i32* %254 monotonic, align 4
  %256 = and i32 %255, 2
  %257 = icmp eq i32 %256, 0
  %258 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %251, i64 0, i32 0
  %259 = load i32, i32* %258, align 4
  br i1 %257, label %260, label %262

260:                                              ; preds = %253
  %261 = add i32 %259, -1
  store i32 %261, i32* %258, align 4
  br label %262

262:                                              ; preds = %260, %253
  %263 = phi i32 [ %261, %260 ], [ %259, %253 ]
  %264 = icmp eq i32 %263, 0
  br i1 %264, label %265, label %266

265:                                              ; preds = %262
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %251) #16
  br label %266

266:                                              ; preds = %246, %262, %265
  %267 = call %"class.WTF::StringImpl"* @_ZNK5blink27CSSComputedStyleDeclaration16GetPropertyValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"* %86, i32 %177) #16
  %268 = getelementptr inbounds i8, i8* %199, i64 16
  %269 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %269, label %287, label %270

270:                                              ; preds = %266
  %271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %272 = load atomic i32, i32* %271 monotonic, align 4
  %273 = and i32 %272, 2
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %275, label %287

275:                                              ; preds = %270
  %276 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %277 = load i32, i32* %276, align 4
  %278 = zext i32 %277 to i33
  %279 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %278, i33 1) #16
  %280 = extractvalue { i33, i1 } %279, 1
  %281 = extractvalue { i33, i1 } %279, 0
  %282 = icmp slt i33 %281, 0
  %283 = or i1 %280, %282
  br i1 %283, label %284, label %285, !prof !3

284:                                              ; preds = %275
  call void @llvm.trap() #16
  unreachable

285:                                              ; preds = %275
  %286 = trunc i33 %281 to i32
  store i32 %286, i32* %276, align 4
  br label %287

287:                                              ; preds = %285, %270, %266
  %288 = ptrtoint %"class.WTF::StringImpl"* %267 to i64
  %289 = bitcast i8* %268 to i64*
  %290 = bitcast i8* %268 to %"class.WTF::StringImpl"**
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %290, align 8
  store i64 %288, i64* %289, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %287
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #16
  br label %306

306:                                              ; preds = %287, %302, %305
  store i8* %199, i8** %148, align 8
  %307 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %198, i64 0, i32 0, i32 1
  %308 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %307, align 8
  %309 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %198, i64 0, i32 0, i32 2, i32 0, i32 0
  %310 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %309, align 8
  %311 = icmp ult %"class.std::__1::unique_ptr.4447"* %308, %310
  br i1 %311, label %312, label %318

312:                                              ; preds = %306
  %313 = ptrtoint i8* %199 to i64
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %147, align 8
  %314 = bitcast %"class.std::__1::unique_ptr.4447"* %308 to i64*
  store i64 %313, i64* %314, align 8
  %315 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %308, i64 1
  %316 = ptrtoint %"class.std::__1::unique_ptr.4447"* %315 to i64
  %317 = bitcast %"class.std::__1::unique_ptr.4447"** %307 to i64*
  store i64 %316, i64* %317, align 8
  br label %319

318:                                              ; preds = %306
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS24CSSComputedStylePropertyENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4445"* %198, %"class.std::__1::unique_ptr.4447"* nonnull dereferenceable(8) %11) #16
  br label %319

319:                                              ; preds = %312, %318
  %320 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %147, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %147, align 8
  %321 = icmp eq %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %320, null
  br i1 %321, label %327, label %322

322:                                              ; preds = %319
  %323 = bitcast %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %320 to void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)***
  %324 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)**, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*** %323, align 8
  %325 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %324, i64 2
  %326 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %325, align 8
  call void %326(%"class.blink::protocol::CSS::CSSComputedStyleProperty"* nonnull %320) #16
  br label %327

327:                                              ; preds = %319, %322
  br i1 %269, label %341, label %328

328:                                              ; preds = %327
  %329 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %330 = load atomic i32, i32* %329 monotonic, align 4
  %331 = and i32 %330, 2
  %332 = icmp eq i32 %331, 0
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %267, i64 0, i32 0
  %334 = load i32, i32* %333, align 4
  br i1 %332, label %335, label %337

335:                                              ; preds = %328
  %336 = add i32 %334, -1
  store i32 %336, i32* %333, align 4
  br label %337

337:                                              ; preds = %335, %328
  %338 = phi i32 [ %336, %335 ], [ %334, %328 ]
  %339 = icmp eq i32 %338, 0
  br i1 %339, label %340, label %341

340:                                              ; preds = %337
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %267) #16
  br label %341

341:                                              ; preds = %327, %337, %340
  br i1 %209, label %355, label %342

342:                                              ; preds = %341
  %343 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %344 = load atomic i32, i32* %343 monotonic, align 4
  %345 = and i32 %344, 2
  %346 = icmp eq i32 %345, 0
  %347 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %208, i64 0, i32 0
  %348 = load i32, i32* %347, align 4
  br i1 %346, label %349, label %351

349:                                              ; preds = %342
  %350 = add i32 %348, -1
  store i32 %350, i32* %347, align 4
  br label %351

351:                                              ; preds = %349, %342
  %352 = phi i32 [ %350, %349 ], [ %348, %342 ]
  %353 = icmp eq i32 %352, 0
  br i1 %353, label %354, label %355

354:                                              ; preds = %351
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %208) #16
  br label %355

355:                                              ; preds = %354, %351, %341
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %146) #16
  br label %356

356:                                              ; preds = %192, %176, %355
  %357 = add nuw nsw i32 %177, 1
  %358 = icmp eq i32 %357, 525
  br i1 %358, label %149, label %176

359:                                              ; preds = %166, %484, %494, %491, %149, %169
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %150) #16
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %496

360:                                              ; preds = %172, %494
  %361 = phi %"struct.WTF::KeyValuePair.268"* [ %170, %172 ], [ %488, %494 ]
  %362 = load %"class.std::__1::vector.4445"*, %"class.std::__1::vector.4445"** %112, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %173) #16
  %363 = call i8* @_Znwm(i64 24) #18
  %364 = bitcast i8* %363 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS24CSSComputedStylePropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %364, align 8
  %365 = getelementptr inbounds i8, i8* %363, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %365, i8 0, i64 16, i1 false) #16
  %366 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %361, i64 0, i32 0, i32 0, i32 0, i32 0
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %384, label %369

369:                                              ; preds = %360
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %384

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = zext i32 %376 to i33
  %378 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %377, i33 1) #16
  %379 = extractvalue { i33, i1 } %378, 1
  %380 = extractvalue { i33, i1 } %378, 0
  %381 = icmp slt i33 %380, 0
  %382 = or i1 %379, %381
  br i1 %382, label %383, label %387, !prof !3

383:                                              ; preds = %374
  call void @llvm.trap() #16
  unreachable

384:                                              ; preds = %369, %360
  %385 = ptrtoint %"class.WTF::StringImpl"* %367 to i64
  %386 = bitcast i8* %365 to i64*
  store i64 %385, i64* %386, align 8
  br label %407

387:                                              ; preds = %374
  %388 = trunc i33 %380 to i32
  store i32 %388, i32* %375, align 4
  %389 = bitcast i8* %365 to %"class.WTF::StringImpl"**
  %390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  %391 = ptrtoint %"class.WTF::StringImpl"* %367 to i64
  %392 = bitcast i8* %365 to i64*
  store i64 %391, i64* %392, align 8
  %393 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %393, label %407, label %394

394:                                              ; preds = %387
  %395 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %396 = load atomic i32, i32* %395 monotonic, align 4
  %397 = and i32 %396, 2
  %398 = icmp eq i32 %397, 0
  %399 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 0
  %400 = load i32, i32* %399, align 4
  br i1 %398, label %401, label %403

401:                                              ; preds = %394
  %402 = add i32 %400, -1
  store i32 %402, i32* %399, align 4
  br label %403

403:                                              ; preds = %401, %394
  %404 = phi i32 [ %402, %401 ], [ %400, %394 ]
  %405 = icmp eq i32 %404, 0
  br i1 %405, label %406, label %407

406:                                              ; preds = %403
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %390) #16
  br label %407

407:                                              ; preds = %384, %387, %403, %406
  %408 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %361, i64 0, i32 1, i32 0, i32 0
  %409 = load %"class.blink::CSSValue"*, %"class.blink::CSSValue"** %408, align 8
  %410 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* %409) #16
  %411 = getelementptr inbounds i8, i8* %363, i64 16
  %412 = icmp eq %"class.WTF::StringImpl"* %410, null
  br i1 %412, label %430, label %413

413:                                              ; preds = %407
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  br i1 %417, label %418, label %430

418:                                              ; preds = %413
  %419 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %420 = load i32, i32* %419, align 4
  %421 = zext i32 %420 to i33
  %422 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %421, i33 1) #16
  %423 = extractvalue { i33, i1 } %422, 1
  %424 = extractvalue { i33, i1 } %422, 0
  %425 = icmp slt i33 %424, 0
  %426 = or i1 %423, %425
  br i1 %426, label %427, label %428, !prof !3

427:                                              ; preds = %418
  call void @llvm.trap() #16
  unreachable

428:                                              ; preds = %418
  %429 = trunc i33 %424 to i32
  store i32 %429, i32* %419, align 4
  br label %430

430:                                              ; preds = %428, %413, %407
  %431 = ptrtoint %"class.WTF::StringImpl"* %410 to i64
  %432 = bitcast i8* %411 to i64*
  %433 = bitcast i8* %411 to %"class.WTF::StringImpl"**
  %434 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %433, align 8
  store i64 %431, i64* %432, align 8
  %435 = icmp eq %"class.WTF::StringImpl"* %434, null
  br i1 %435, label %449, label %436

436:                                              ; preds = %430
  %437 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %438 = load atomic i32, i32* %437 monotonic, align 4
  %439 = and i32 %438, 2
  %440 = icmp eq i32 %439, 0
  %441 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %434, i64 0, i32 0
  %442 = load i32, i32* %441, align 4
  br i1 %440, label %443, label %445

443:                                              ; preds = %436
  %444 = add i32 %442, -1
  store i32 %444, i32* %441, align 4
  br label %445

445:                                              ; preds = %443, %436
  %446 = phi i32 [ %444, %443 ], [ %442, %436 ]
  %447 = icmp eq i32 %446, 0
  br i1 %447, label %448, label %449

448:                                              ; preds = %445
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %434) #16
  br label %449

449:                                              ; preds = %430, %445, %448
  store i8* %363, i8** %175, align 8
  %450 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %362, i64 0, i32 0, i32 1
  %451 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %450, align 8
  %452 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %362, i64 0, i32 0, i32 2, i32 0, i32 0
  %453 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %452, align 8
  %454 = icmp ult %"class.std::__1::unique_ptr.4447"* %451, %453
  br i1 %454, label %455, label %461

455:                                              ; preds = %449
  %456 = ptrtoint i8* %363 to i64
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %174, align 8
  %457 = bitcast %"class.std::__1::unique_ptr.4447"* %451 to i64*
  store i64 %456, i64* %457, align 8
  %458 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %451, i64 1
  %459 = ptrtoint %"class.std::__1::unique_ptr.4447"* %458 to i64
  %460 = bitcast %"class.std::__1::unique_ptr.4447"** %450 to i64*
  store i64 %459, i64* %460, align 8
  br label %462

461:                                              ; preds = %449
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS24CSSComputedStylePropertyENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4445"* %362, %"class.std::__1::unique_ptr.4447"* nonnull dereferenceable(8) %13) #16
  br label %462

462:                                              ; preds = %455, %461
  %463 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %174, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %174, align 8
  %464 = icmp eq %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %463, null
  br i1 %464, label %470, label %465

465:                                              ; preds = %462
  %466 = bitcast %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %463 to void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)***
  %467 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)**, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*** %466, align 8
  %468 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %467, i64 2
  %469 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %468, align 8
  call void %469(%"class.blink::protocol::CSS::CSSComputedStyleProperty"* nonnull %463) #16
  br label %470

470:                                              ; preds = %462, %465
  br i1 %412, label %484, label %471

471:                                              ; preds = %470
  %472 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %473 = load atomic i32, i32* %472 monotonic, align 4
  %474 = and i32 %473, 2
  %475 = icmp eq i32 %474, 0
  %476 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %410, i64 0, i32 0
  %477 = load i32, i32* %476, align 4
  br i1 %475, label %478, label %480

478:                                              ; preds = %471
  %479 = add i32 %477, -1
  store i32 %479, i32* %476, align 4
  br label %480

480:                                              ; preds = %478, %471
  %481 = phi i32 [ %479, %478 ], [ %477, %471 ]
  %482 = icmp eq i32 %481, 0
  br i1 %482, label %483, label %484

483:                                              ; preds = %480
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %410) #16
  br label %484

484:                                              ; preds = %483, %480, %470
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %173) #16
  %485 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %361, i64 1
  %486 = icmp eq %"struct.WTF::KeyValuePair.268"* %485, %159
  br i1 %486, label %359, label %487

487:                                              ; preds = %484, %491
  %488 = phi %"struct.WTF::KeyValuePair.268"* [ %492, %491 ], [ %485, %484 ]
  %489 = bitcast %"struct.WTF::KeyValuePair.268"* %488 to i64*
  %490 = load i64, i64* %489, align 8
  switch i64 %490, label %494 [
    i64 -1, label %491
    i64 0, label %491
  ]

491:                                              ; preds = %487, %487
  %492 = getelementptr inbounds %"struct.WTF::KeyValuePair.268", %"struct.WTF::KeyValuePair.268"* %488, i64 1
  %493 = icmp eq %"struct.WTF::KeyValuePair.268"* %492, %159
  br i1 %493, label %359, label %487

494:                                              ; preds = %487
  %495 = icmp eq %"struct.WTF::KeyValuePair.268"* %488, %159
  br i1 %495, label %359, label %360

496:                                              ; preds = %64, %359, %72, %82
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %43) #16
  %497 = load i8, i8* %52, align 1
  %498 = icmp slt i8 %497, 0
  br i1 %498, label %499, label %502

499:                                              ; preds = %496
  %500 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %501 = load i8*, i8** %500, align 8
  call void @_ZdlPv(i8* %501) #18
  br label %502

502:                                              ; preds = %36, %496, %499
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %14) #16
  ret void
}

declare void @_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* sret, %"class.blink::InspectorDOMAgent"*, i32, %"class.blink::Node"** dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink4Node13ownerDocumentEv(%"class.blink::Node"*) local_unnamed_addr #1

declare dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink27CSSComputedStyleDeclaration16GetPropertyValueENS_13CSSPropertyIDE(%"class.blink::CSSComputedStyleDeclaration"*, i32) local_unnamed_addr #1

declare void @_ZNK5blink27CSSComputedStyleDeclaration12GetVariablesEv(%"class.blink::HeapHashMap"* sret, %"class.blink::CSSComputedStyleDeclaration"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent23getComputedStyleForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.4442"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent23getComputedStyleForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %6, i32 %2, %"class.std::__1::unique_ptr.4442"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent35CollectPlatformFontsForLayoutObjectEPNS_12LayoutObjectEPN3WTF14HashCountedSetINSt3__14pairIiNS3_6StringEEENS3_8PairHashIiS7_EENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEEj(%"class.blink::InspectorCSSAgent"* nocapture readnone, %"class.blink::LayoutObject"*, %"class.WTF::HashCountedSet.4469"*, i32) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.blink::NGInlineCursor", align 8
  %7 = alloca %"class.WTF::Vector.4493", align 8
  %8 = alloca %"class.blink::TextRun", align 8
  %9 = alloca %"class.blink::CachingWordShaper", align 8
  %10 = alloca %"class.WTF::Vector.4493", align 8
  %11 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 4
  %12 = bitcast %"class.blink::LayoutObject::LayoutObjectBitfields"* %11 to i96*
  %13 = load i96, i96* %12, align 4
  %14 = and i96 %13, 33554432
  %15 = icmp eq i96 %14, 0
  br i1 %15, label %16, label %43

16:                                               ; preds = %4
  %17 = icmp eq i32 %3, 0
  br i1 %17, label %191, label %18

18:                                               ; preds = %16
  %19 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedInclusiveAncestorERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %1) #16
  %20 = icmp eq %"class.blink::Element"* %19, null
  br i1 %20, label %21, label %191

21:                                               ; preds = %18
  %22 = load i96, i96* %12, align 4
  %23 = lshr i96 %22, 24
  %24 = trunc i96 %23 to i32
  %25 = and i32 %24, 1
  %26 = add i32 %3, -1
  %27 = add nuw i32 %26, %25
  %28 = bitcast %"class.blink::LayoutObject"* %1 to %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)***
  %29 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)**, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*** %28, align 8
  %30 = getelementptr inbounds %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %29, i64 13
  %31 = load %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)*, %"class.blink::LayoutObjectChildList"* (%"class.blink::LayoutObject"*)** %30, align 8
  %32 = tail call %"class.blink::LayoutObjectChildList"* %31(%"class.blink::LayoutObject"* %1) #16
  %33 = icmp eq %"class.blink::LayoutObjectChildList"* %32, null
  br i1 %33, label %191, label %34

34:                                               ; preds = %21
  %35 = getelementptr inbounds %"class.blink::LayoutObjectChildList", %"class.blink::LayoutObjectChildList"* %32, i64 0, i32 0
  %36 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %35, align 8
  %37 = icmp eq %"class.blink::LayoutObject"* %36, null
  br i1 %37, label %191, label %38

38:                                               ; preds = %34, %38
  %39 = phi %"class.blink::LayoutObject"* [ %41, %38 ], [ %36, %34 ]
  tail call void @_ZN5blink17InspectorCSSAgent35CollectPlatformFontsForLayoutObjectEPNS_12LayoutObjectEPN3WTF14HashCountedSetINSt3__14pairIiNS3_6StringEEENS3_8PairHashIiS7_EENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEEj(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::LayoutObject"* nonnull %39, %"class.WTF::HashCountedSet.4469"* %2, i32 %27)
  %40 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %39, i64 0, i32 9
  %41 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %40, align 8
  %42 = icmp eq %"class.blink::LayoutObject"* %41, null
  br i1 %42, label %191, label %38

43:                                               ; preds = %4
  %44 = tail call %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88) %1) #16
  %45 = icmp eq %"class.blink::Element"* %44, null
  br i1 %45, label %46, label %191

46:                                               ; preds = %43
  %47 = tail call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #16
  %48 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %47, i64 0, i32 2
  %49 = load i32, i32* %48, align 4
  %50 = add nsw i32 %49, 1
  store i32 %50, i32* %48, align 4
  %51 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase33is_css_container_queries_enabled_E, align 1, !range !4
  %52 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase26is_layout_ng_grid_enabled_E, align 1
  %53 = or i8 %52, %51
  %54 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase31is_bidi_caret_affinity_enabled_E, align 1
  %55 = or i8 %53, %54
  %56 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase21is_layout_ng_enabled_E, align 1
  %57 = or i8 %55, %56
  %58 = icmp eq i8 %57, 0
  %59 = load i96, i96* %12, align 4
  %60 = and i96 %59, 268435456
  %61 = icmp eq i96 %60, 0
  %62 = or i1 %58, %61
  br i1 %62, label %92, label %63

63:                                               ; preds = %46
  %64 = bitcast %"class.blink::NGInlineCursor"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %64) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 -86, i64 112, i1 false)
  %65 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %6, i64 0, i32 5
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %64, i8 0, i64 81, i1 false) #16
  %66 = bitcast %"class.blink::LayoutBlockFlow"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %66, i8 0, i64 20, i1 false) #16
  call void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"* nonnull %6, %"class.blink::LayoutObject"* dereferenceable(88) %1) #16
  %67 = getelementptr inbounds %"class.blink::NGInlineCursor", %"class.blink::NGInlineCursor"* %6, i64 0, i32 0, i32 0
  %68 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %67, align 8
  %69 = icmp eq %"class.blink::NGFragmentItem"* %68, null
  br i1 %69, label %91, label %70

70:                                               ; preds = %63
  %71 = bitcast %"class.WTF::Vector.4493"* %7 to i8*
  %72 = getelementptr inbounds %"class.WTF::Vector.4493", %"class.WTF::Vector.4493"* %7, i64 0, i32 0, i32 0, i32 0
  %73 = getelementptr inbounds %"class.WTF::Vector.4493", %"class.WTF::Vector.4493"* %7, i64 0, i32 0, i32 0, i32 2
  br label %74

74:                                               ; preds = %70, %88
  %75 = phi %"class.blink::NGFragmentItem"* [ %68, %70 ], [ %89, %88 ]
  %76 = call %"class.blink::ShapeResultView"* @_ZNK5blink14NGFragmentItem15TextShapeResultEv(%"class.blink::NGFragmentItem"* nonnull %75) #16
  %77 = icmp eq %"class.blink::ShapeResultView"* %76, null
  br i1 %77, label %88, label %78

78:                                               ; preds = %74
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %71) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %71, i8 0, i64 16, i1 false) #16
  call void @_ZNK5blink15ShapeResultView14GetRunFontDataEPN3WTF6VectorINS_11ShapeResult11RunFontDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ShapeResultView"* nonnull %76, %"class.WTF::Vector.4493"* nonnull %7) #16
  call fastcc void @_ZN5blink12_GLOBAL__N_139CollectPlatformFontsFromRunFontDataListERKN3WTF6VectorINS_11ShapeResult11RunFontDataELj0ENS1_18PartitionAllocatorEEEPNS1_14HashCountedSetINSt3__14pairIiNS1_6StringEEENS1_8PairHashIiSC_EENS1_10HashTraitsISD_EES5_EE(%"class.WTF::Vector.4493"* nonnull dereferenceable(16) %7, %"class.WTF::HashCountedSet.4469"* %2)
  %79 = load %"struct.blink::ShapeResult::RunFontData"*, %"struct.blink::ShapeResult::RunFontData"** %72, align 8
  %80 = icmp eq %"struct.blink::ShapeResult::RunFontData"* %79, null
  %81 = bitcast %"struct.blink::ShapeResult::RunFontData"* %79 to i8*
  br i1 %80, label %87, label %82, !prof !2

82:                                               ; preds = %78
  %83 = load i32, i32* %73, align 4
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %86, label %85, !prof !3

85:                                               ; preds = %82
  store i32 0, i32* %73, align 4
  br label %86

86:                                               ; preds = %85, %82
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %81) #16
  store %"struct.blink::ShapeResult::RunFontData"* null, %"struct.blink::ShapeResult::RunFontData"** %72, align 8
  br label %87

87:                                               ; preds = %78, %86
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %71) #16
  br label %88

88:                                               ; preds = %74, %87
  call void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"* nonnull %6) #16
  %89 = load %"class.blink::NGFragmentItem"*, %"class.blink::NGFragmentItem"** %67, align 8
  %90 = icmp eq %"class.blink::NGFragmentItem"* %89, null
  br i1 %90, label %91, label %74

91:                                               ; preds = %88, %63
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %64) #16
  br label %184

92:                                               ; preds = %46
  %93 = and i96 %59, 268435456
  %94 = icmp eq i96 %93, 0
  br i1 %94, label %97, label %95

95:                                               ; preds = %92
  %96 = tail call dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() #16
  br label %100

97:                                               ; preds = %92
  %98 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 1, i32 6
  %99 = bitcast %"class.blink::UntracedMember"* %98 to %"class.blink::InlineTextBoxList"*
  br label %100

100:                                              ; preds = %95, %97
  %101 = phi %"class.blink::InlineTextBoxList"* [ %96, %95 ], [ %99, %97 ]
  %102 = getelementptr inbounds %"class.blink::InlineTextBoxList", %"class.blink::InlineTextBoxList"* %101, i64 0, i32 0, i32 0
  %103 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %102, align 8
  %104 = icmp eq %"class.blink::InlineTextBox"* %103, null
  br i1 %104, label %184, label %105

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 6, i32 0, i32 0
  %107 = bitcast %"class.logging::CheckError"* %5 to i8*
  %108 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %1, i64 0, i32 5, i32 0
  %109 = bitcast %"class.blink::TextRun"* %8 to i8*
  %110 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 3
  %111 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 4
  %112 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 5
  %113 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 0
  %114 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 6, i64 1
  %115 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 0
  %116 = getelementptr inbounds %"class.blink::TextRun", %"class.blink::TextRun"* %8, i64 0, i32 7, i32 1
  %117 = bitcast %"class.blink::CachingWordShaper"* %9 to i8*
  %118 = getelementptr inbounds %"class.blink::CachingWordShaper", %"class.blink::CachingWordShaper"* %9, i64 0, i32 0
  %119 = bitcast %"class.WTF::Vector.4493"* %10 to i8*
  %120 = getelementptr inbounds %"class.WTF::Vector.4493", %"class.WTF::Vector.4493"* %10, i64 0, i32 0, i32 0, i32 0
  %121 = getelementptr inbounds %"class.WTF::Vector.4493", %"class.WTF::Vector.4493"* %10, i64 0, i32 0, i32 0, i32 2
  %122 = bitcast %"class.blink::TextRun"* %8 to i8*
  %123 = bitcast i8* %116 to i64*
  br label %124

124:                                              ; preds = %105, %180
  %125 = phi %"class.blink::InlineTextBox"* [ %103, %105 ], [ %182, %180 ]
  %126 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %125, i64 0, i32 0, i32 7, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = and i32 %127, 1
  %129 = icmp eq i32 %128, 0
  br i1 %129, label %163, label %130

130:                                              ; preds = %124
  %131 = load %"class.blink::Node"*, %"class.blink::Node"** %106, align 8
  %132 = icmp eq %"class.blink::Node"* %131, null
  br i1 %132, label %133, label %140

133:                                              ; preds = %130, %133
  %134 = phi %"class.blink::LayoutObject"* [ %136, %133 ], [ %1, %130 ]
  %135 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %134, i64 0, i32 7
  %136 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %135, align 8
  %137 = getelementptr inbounds %"class.blink::LayoutObject", %"class.blink::LayoutObject"* %136, i64 0, i32 6, i32 0, i32 0
  %138 = load %"class.blink::Node"*, %"class.blink::Node"** %137, align 8
  %139 = icmp eq %"class.blink::Node"* %138, null
  br i1 %139, label %133, label %140

140:                                              ; preds = %133, %130
  %141 = phi %"class.blink::Node"* [ %131, %130 ], [ %138, %133 ]
  %142 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %141, i64 0, i32 3, i32 0, i32 0
  %143 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %142, align 8
  %144 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %143, i64 0, i32 2, i32 0, i32 0
  %145 = load %"class.blink::Document"*, %"class.blink::Document"** %144, align 8
  %146 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %145, i64 0, i32 59, i32 0, i32 0
  %147 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %146, align 8
  %148 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %147, i64 0, i32 31, i32 0, i32 0
  %149 = load %"class.blink::CSSGlobalRuleSet"*, %"class.blink::CSSGlobalRuleSet"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %149, i64 0, i32 0, i32 11
  %151 = load i8, i8* %150, align 8
  %152 = and i8 %151, 1
  %153 = icmp eq i8 %152, 0
  br i1 %153, label %154, label %156

154:                                              ; preds = %140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %107) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([64 x i8], [64 x i8]* @.str.37, i64 0, i64 0), i32 37, i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.38, i64 0, i64 0)) #16
  %155 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %107) #16
  br label %156

156:                                              ; preds = %154, %140
  %157 = getelementptr inbounds %"class.blink::CSSGlobalRuleSet", %"class.blink::CSSGlobalRuleSet"* %149, i64 0, i32 0, i32 0, i32 0
  %158 = load i8, i8* %157, align 8, !range !4
  %159 = icmp eq i8 %158, 0
  br i1 %159, label %163, label %160

160:                                              ; preds = %156
  %161 = call %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"* %1) #16
  %162 = icmp eq %"class.blink::ComputedStyle"* %161, null
  br i1 %162, label %163, label %165

163:                                              ; preds = %124, %156, %160
  %164 = load %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"** %108, align 8
  br label %165

165:                                              ; preds = %163, %160
  %166 = phi %"class.blink::ComputedStyle"* [ %161, %160 ], [ %164, %163 ]
  %167 = getelementptr inbounds %"class.blink::ComputedStyle", %"class.blink::ComputedStyle"* %166, i64 0, i32 0, i32 0, i32 0, i32 0
  %168 = load %"class.blink::ComputedStyleBase::StyleInheritedData"*, %"class.blink::ComputedStyleBase::StyleInheritedData"** %167, align 8
  %169 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleInheritedData", %"class.blink::ComputedStyleBase::StyleInheritedData"* %168, i64 0, i32 1, i32 0, i32 0
  %170 = load %"class.blink::ComputedStyleBase::StyleFontData"*, %"class.blink::ComputedStyleBase::StyleFontData"** %169, align 8
  %171 = getelementptr inbounds %"class.blink::ComputedStyleBase::StyleFontData", %"class.blink::ComputedStyleBase::StyleFontData"* %170, i64 0, i32 1
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %109) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %122, i8 -86, i64 16, i1 false)
  store float 0xFFFFFFFFE0000000, float* %110, align 8
  store float 0xFFFFFFFFE0000000, float* %111, align 4
  store i16 -21846, i16* %112, align 8
  store i8 -86, i8* %113, align 2
  store i8 -86, i8* %114, align 1
  store float 0xFFFFFFFFE0000000, float* %115, align 4
  store i64 -6148914691236517206, i64* %123, align 4
  call void @_ZNK5blink13InlineTextBox28ConstructTextRunForInspectorERKNS_13ComputedStyleE(%"class.blink::TextRun"* nonnull sret %8, %"class.blink::InlineTextBox"* nonnull %125, %"class.blink::ComputedStyle"* dereferenceable(104) %166) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %117) #16
  store %"class.blink::Font"* %171, %"class.blink::Font"** %118, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %119) #16
  call void @_ZNK5blink17CachingWordShaper14GetRunFontDataERKNS_7TextRunE(%"class.WTF::Vector.4493"* nonnull sret %10, %"class.blink::CachingWordShaper"* nonnull %9, %"class.blink::TextRun"* nonnull dereferenceable(40) %8) #16
  call fastcc void @_ZN5blink12_GLOBAL__N_139CollectPlatformFontsFromRunFontDataListERKN3WTF6VectorINS_11ShapeResult11RunFontDataELj0ENS1_18PartitionAllocatorEEEPNS1_14HashCountedSetINSt3__14pairIiNS1_6StringEEENS1_8PairHashIiSC_EENS1_10HashTraitsISD_EES5_EE(%"class.WTF::Vector.4493"* nonnull dereferenceable(16) %10, %"class.WTF::HashCountedSet.4469"* %2)
  %172 = load %"struct.blink::ShapeResult::RunFontData"*, %"struct.blink::ShapeResult::RunFontData"** %120, align 8
  %173 = icmp eq %"struct.blink::ShapeResult::RunFontData"* %172, null
  %174 = bitcast %"struct.blink::ShapeResult::RunFontData"* %172 to i8*
  br i1 %173, label %180, label %175, !prof !2

175:                                              ; preds = %165
  %176 = load i32, i32* %121, align 4
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %179, label %178, !prof !3

178:                                              ; preds = %175
  store i32 0, i32* %121, align 4
  br label %179

179:                                              ; preds = %178, %175
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %174) #16
  store %"struct.blink::ShapeResult::RunFontData"* null, %"struct.blink::ShapeResult::RunFontData"** %120, align 8
  br label %180

180:                                              ; preds = %165, %179
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %119) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %117) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %109) #16
  %181 = getelementptr inbounds %"class.blink::InlineTextBox", %"class.blink::InlineTextBox"* %125, i64 0, i32 2
  %182 = load %"class.blink::InlineTextBox"*, %"class.blink::InlineTextBox"** %181, align 8
  %183 = icmp eq %"class.blink::InlineTextBox"* %182, null
  br i1 %183, label %184, label %124

184:                                              ; preds = %180, %100, %91
  %185 = call %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32 1) #16
  %186 = getelementptr inbounds %"class.blink::FontCache", %"class.blink::FontCache"* %185, i64 0, i32 2
  %187 = load i32, i32* %186, align 4
  %188 = add nsw i32 %187, -1
  store i32 %188, i32* %186, align 4
  %189 = icmp eq i32 %188, 0
  br i1 %189, label %190, label %191

190:                                              ; preds = %184
  call void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"* %185, i32 0) #16
  br label %191

191:                                              ; preds = %38, %21, %34, %190, %184, %43, %18, %16
  ret void
}

declare %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedInclusiveAncestorERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare %"class.blink::Element"* @_ZN5blink20DisplayLockUtilities30NearestLockedExclusiveAncestorERKNS_12LayoutObjectE(%"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZN5blink14NGInlineCursor6MoveToERKNS_12LayoutObjectE(%"class.blink::NGInlineCursor"*, %"class.blink::LayoutObject"* dereferenceable(88)) local_unnamed_addr #1

declare void @_ZNK5blink15ShapeResultView14GetRunFontDataEPN3WTF6VectorINS_11ShapeResult11RunFontDataELj0ENS1_18PartitionAllocatorEEE(%"class.blink::ShapeResultView"*, %"class.WTF::Vector.4493"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blink12_GLOBAL__N_139CollectPlatformFontsFromRunFontDataListERKN3WTF6VectorINS_11ShapeResult11RunFontDataELj0ENS1_18PartitionAllocatorEEEPNS1_14HashCountedSetINSt3__14pairIiNS1_6StringEEENS1_8PairHashIiSC_EENS1_10HashTraitsISD_EES5_EE(%"class.WTF::Vector.4493"* nocapture readonly dereferenceable(16), %"class.WTF::HashCountedSet.4469"*) unnamed_addr #0 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"struct.std::__1::pair.4475", align 8
  %6 = getelementptr inbounds %"class.WTF::Vector.4493", %"class.WTF::Vector.4493"* %0, i64 0, i32 0, i32 0, i32 0
  %7 = load %"struct.blink::ShapeResult::RunFontData"*, %"struct.blink::ShapeResult::RunFontData"** %6, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4493", %"class.WTF::Vector.4493"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"struct.blink::ShapeResult::RunFontData", %"struct.blink::ShapeResult::RunFontData"* %7, i64 %10
  %12 = icmp eq i32 %9, 0
  br i1 %12, label %21, label %13

13:                                               ; preds = %2
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %16 = bitcast %"struct.std::__1::pair.4475"* %5 to i8*
  %17 = getelementptr inbounds %"struct.std::__1::pair.4475", %"struct.std::__1::pair.4475"* %5, i64 0, i32 0
  %18 = getelementptr inbounds %"struct.std::__1::pair.4475", %"struct.std::__1::pair.4475"* %5, i64 0, i32 1, i32 0, i32 0
  %19 = bitcast i32* %3 to i8*
  %20 = getelementptr inbounds %"class.WTF::HashCountedSet.4469", %"class.WTF::HashCountedSet.4469"* %1, i64 0, i32 0, i32 0
  br label %22

21:                                               ; preds = %94, %2
  ret void

22:                                               ; preds = %13, %94
  %23 = phi %"struct.blink::ShapeResult::RunFontData"* [ %7, %13 ], [ %95, %94 ]
  %24 = getelementptr inbounds %"struct.blink::ShapeResult::RunFontData", %"struct.blink::ShapeResult::RunFontData"* %23, i64 0, i32 0
  %25 = load %"class.blink::SimpleFontData"*, %"class.blink::SimpleFontData"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::SimpleFontData", %"class.blink::SimpleFontData"* %25, i64 0, i32 5
  %27 = call %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData14FontFamilyNameEv(%"class.blink::FontPlatformData"* %26) #16
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %28, label %29, label %31

29:                                               ; preds = %22
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i64 0) #16
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  br label %31

31:                                               ; preds = %29, %22
  %32 = phi %"class.WTF::StringImpl"* [ %30, %29 ], [ %27, %22 ]
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %33 = bitcast %"class.blink::SimpleFontData"* %25 to i1 (%"class.blink::SimpleFontData"*)***
  %34 = load i1 (%"class.blink::SimpleFontData"*)**, i1 (%"class.blink::SimpleFontData"*)*** %33, align 8
  %35 = getelementptr inbounds i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %34, i64 3
  %36 = load i1 (%"class.blink::SimpleFontData"*)*, i1 (%"class.blink::SimpleFontData"*)** %35, align 8
  %37 = call zeroext i1 %36(%"class.blink::SimpleFontData"* %25) #16
  %38 = zext i1 %37 to i32
  %39 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %39, label %57, label %40

40:                                               ; preds = %31
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %57

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #16
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  call void @llvm.trap() #16
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  br label %57

57:                                               ; preds = %31, %40, %55
  store i32 %38, i32* %17, align 8
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %18, align 8
  %58 = getelementptr inbounds %"struct.blink::ShapeResult::RunFontData", %"struct.blink::ShapeResult::RunFontData"* %23, i64 0, i32 1
  %59 = load i32, i32* %58, align 8
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %19) #16
  store i32 0, i32* %3, align 4
  %60 = call { %"struct.WTF::KeyValuePair.4474"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.4471"* %20, %"struct.std::__1::pair.4475"* nonnull dereferenceable(16) %5, i32* nonnull dereferenceable(4) %3) #16
  %61 = extractvalue { %"struct.WTF::KeyValuePair.4474"*, i8 } %60, 0
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %19) #16
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %61, i64 0, i32 1
  %63 = load i32, i32* %62, align 8
  %64 = add i32 %63, %59
  store i32 %64, i32* %62, align 8
  %65 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %66 = icmp eq %"class.WTF::StringImpl"* %65, null
  br i1 %66, label %80, label %67

67:                                               ; preds = %57
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %69 = load atomic i32, i32* %68 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %65, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %67
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %67
  %77 = phi i32 [ %75, %74 ], [ %73, %67 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %65) #16
  br label %80

80:                                               ; preds = %57, %76, %79
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  br i1 %39, label %94, label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #16
  br label %94

94:                                               ; preds = %80, %90, %93
  %95 = getelementptr inbounds %"struct.blink::ShapeResult::RunFontData", %"struct.blink::ShapeResult::RunFontData"* %23, i64 1
  %96 = icmp eq %"struct.blink::ShapeResult::RunFontData"* %95, %11
  br i1 %96, label %21, label %22
}

declare void @_ZN5blink14NGInlineCursor29MoveToNextForSameLayoutObjectEv(%"class.blink::NGInlineCursor"*) local_unnamed_addr #1

declare void @_ZNK5blink13InlineTextBox28ConstructTextRunForInspectorERKNS_13ComputedStyleE(%"class.blink::TextRun"* sret, %"class.blink::InlineTextBox"*, %"class.blink::ComputedStyle"* dereferenceable(104)) local_unnamed_addr #1

declare void @_ZNK5blink17CachingWordShaper14GetRunFontDataERKNS_7TextRunE(%"class.WTF::Vector.4493"* sret, %"class.blink::CachingWordShaper"*, %"class.blink::TextRun"* dereferenceable(40)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent23getPlatformFontsForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS17PlatformFontUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.4499"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.blink::Node"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.WTF::HashCountedSet.4469", align 8
  %10 = alloca %"class.std::__1::unique_ptr.4504", align 8
  %11 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %11) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 32, i1 false)
  %12 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %12)
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  %14 = load i8, i8* %13, align 8, !range !4, !noalias !30
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %17, label %16

16:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #16
  br label %29

17:                                               ; preds = %4
  %18 = tail call i8* @_Znwm(i64 32) #18
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %18, i8** %19, align 8, !noalias !30
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = bitcast i64* %20 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %21, align 8, !noalias !30
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %18, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i64 25, i1 false) #16
  %22 = getelementptr inbounds i8, i8* %18, i64 25
  store i8 0, i8* %22, align 1, !noalias !30
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #16
  %23 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1, !noalias !30
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %29

27:                                               ; preds = %17
  %28 = load i8*, i8** %19, align 8, !noalias !30
  call void @_ZdlPv(i8* %28) #18
  br label %29

29:                                               ; preds = %16, %17, %27
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %12)
  %30 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %39, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %31, i32* %34, align 8
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %37, i8* align 8 %38, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #16
  br label %326

39:                                               ; preds = %29
  %40 = bitcast %"class.blink::Node"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  store %"class.blink::Node"* null, %"class.blink::Node"** %7, align 8
  %41 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #16
  %42 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %43 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %42, align 8
  call void @_ZN5blink17InspectorDOMAgent10AssertNodeEiRPNS_4NodeE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %43, i32 %2, %"class.blink::Node"** nonnull dereferenceable(8) %7) #16
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %45 = load i32, i32* %44, align 8
  store i32 %45, i32* %30, align 8
  %46 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %47 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %48 = bitcast %"class.std::__1::basic_string"* %46 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %49 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %48, i64 0, i32 1, i32 0
  %50 = load i8, i8* %49, align 1
  %51 = icmp slt i8 %50, 0
  br i1 %51, label %52, label %56

52:                                               ; preds = %39
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %46, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load i8*, i8** %53, align 8
  call void @_ZdlPv(i8* %54) #18
  %55 = load i32, i32* %30, align 8
  br label %56

56:                                               ; preds = %52, %39
  %57 = phi i32 [ %55, %52 ], [ %45, %39 ]
  %58 = bitcast %"class.std::__1::basic_string"* %46 to i8*
  %59 = bitcast %"class.std::__1::basic_string"* %47 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %58, i8* align 8 %59, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #16
  %60 = icmp eq i32 %57, 1
  br i1 %60, label %65, label %61

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %57, i32* %62, align 8
  %63 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %64 = bitcast %"class.std::__1::basic_string"* %63 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %64, i8* align 8 %58, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  br label %326

65:                                               ; preds = %56
  %66 = bitcast %"class.WTF::HashCountedSet.4469"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #16
  %67 = getelementptr inbounds %"class.WTF::HashCountedSet.4469", %"class.WTF::HashCountedSet.4469"* %9, i64 0, i32 0, i32 0, i32 0
  %68 = getelementptr inbounds %"class.WTF::HashCountedSet.4469", %"class.WTF::HashCountedSet.4469"* %9, i64 0, i32 0, i32 0, i32 1
  %69 = getelementptr inbounds %"class.WTF::HashCountedSet.4469", %"class.WTF::HashCountedSet.4469"* %9, i64 0, i32 0, i32 0, i32 2
  %70 = bitcast %"class.WTF::HashCountedSet.4469"* %9 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %70, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 20, i1 false) #16
  %71 = load %"class.blink::Node"*, %"class.blink::Node"** %7, align 8
  %72 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 0, i32 1
  %73 = load i32, i32* %72, align 8
  %74 = and i32 %73, 1
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %71, i64 0, i32 6, i32 0, i32 0
  br i1 %75, label %81, label %77

77:                                               ; preds = %65
  %78 = bitcast %"class.blink::NodeData"** %76 to %"class.blink::NodeRareData"**
  %79 = load %"class.blink::NodeRareData"*, %"class.blink::NodeRareData"** %78, align 8
  %80 = getelementptr inbounds %"class.blink::NodeRareData", %"class.blink::NodeRareData"* %79, i64 0, i32 1, i32 0, i32 0
  br label %83

81:                                               ; preds = %65
  %82 = bitcast %"class.blink::NodeData"** %76 to %"class.blink::NodeRenderingData"**
  br label %83

83:                                               ; preds = %77, %81
  %84 = phi %"class.blink::NodeRenderingData"** [ %80, %77 ], [ %82, %81 ]
  %85 = load %"class.blink::NodeRenderingData"*, %"class.blink::NodeRenderingData"** %84, align 8
  %86 = getelementptr inbounds %"class.blink::NodeRenderingData", %"class.blink::NodeRenderingData"* %85, i64 0, i32 1
  %87 = load %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"** %86, align 8
  %88 = icmp eq %"class.blink::LayoutObject"* %87, null
  br i1 %88, label %90, label %89

89:                                               ; preds = %83
  call void @_ZN5blink17InspectorCSSAgent35CollectPlatformFontsForLayoutObjectEPNS_12LayoutObjectEPN3WTF14HashCountedSetINSt3__14pairIiNS3_6StringEEENS3_8PairHashIiS7_EENS3_10HashTraitsIS8_EENS3_18PartitionAllocatorEEEj(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::LayoutObject"* nonnull %87, %"class.WTF::HashCountedSet.4469"* nonnull %9, i32 2)
  br label %90

90:                                               ; preds = %83, %89
  %91 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 0, i64 24, i1 false) #16
  %92 = ptrtoint i8* %91 to i64
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4499", %"class.std::__1::unique_ptr.4499"* %3, i64 0, i32 0, i32 0, i32 0
  %94 = load %"class.std::__1::vector.4502"*, %"class.std::__1::vector.4502"** %93, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.4499"* %3 to i64*
  store i64 %92, i64* %95, align 8
  %96 = icmp eq %"class.std::__1::vector.4502"* %94, null
  br i1 %96, label %126, label %97

97:                                               ; preds = %90
  %98 = getelementptr inbounds %"class.std::__1::vector.4502", %"class.std::__1::vector.4502"* %94, i64 0, i32 0, i32 0
  %99 = load %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"** %98, align 8
  %100 = icmp eq %"class.std::__1::unique_ptr.4504"* %99, null
  br i1 %100, label %124, label %101

101:                                              ; preds = %97
  %102 = bitcast %"class.std::__1::unique_ptr.4504"* %99 to i8*
  %103 = getelementptr inbounds %"class.std::__1::vector.4502", %"class.std::__1::vector.4502"* %94, i64 0, i32 0, i32 1
  %104 = load %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"** %103, align 8
  %105 = icmp eq %"class.std::__1::unique_ptr.4504"* %104, %99
  br i1 %105, label %122, label %106

106:                                              ; preds = %101, %117
  %107 = phi %"class.std::__1::unique_ptr.4504"* [ %108, %117 ], [ %104, %101 ]
  %108 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %107, i64 -1
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %108, i64 0, i32 0, i32 0, i32 0
  %110 = load %"class.blink::protocol::CSS::PlatformFontUsage"*, %"class.blink::protocol::CSS::PlatformFontUsage"** %109, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %109, align 8
  %111 = icmp eq %"class.blink::protocol::CSS::PlatformFontUsage"* %110, null
  br i1 %111, label %117, label %112

112:                                              ; preds = %106
  %113 = bitcast %"class.blink::protocol::CSS::PlatformFontUsage"* %110 to void (%"class.blink::protocol::CSS::PlatformFontUsage"*)***
  %114 = load void (%"class.blink::protocol::CSS::PlatformFontUsage"*)**, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*** %113, align 8
  %115 = getelementptr inbounds void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)** %114, i64 2
  %116 = load void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)** %115, align 8
  call void %116(%"class.blink::protocol::CSS::PlatformFontUsage"* nonnull %110) #16
  br label %117

117:                                              ; preds = %112, %106
  %118 = icmp eq %"class.std::__1::unique_ptr.4504"* %108, %99
  br i1 %118, label %119, label %106

119:                                              ; preds = %117
  %120 = bitcast %"class.std::__1::vector.4502"* %94 to i8**
  %121 = load i8*, i8** %120, align 8
  br label %122

122:                                              ; preds = %119, %101
  %123 = phi i8* [ %121, %119 ], [ %102, %101 ]
  store %"class.std::__1::unique_ptr.4504"* %99, %"class.std::__1::unique_ptr.4504"** %103, align 8
  call void @_ZdlPv(i8* %123) #18
  br label %124

124:                                              ; preds = %122, %97
  %125 = bitcast %"class.std::__1::vector.4502"* %94 to i8*
  call void @_ZdlPv(i8* %125) #18
  br label %126

126:                                              ; preds = %124, %90
  %127 = load i32, i32* %69, align 4
  %128 = icmp eq i32 %127, 0
  %129 = load %"struct.WTF::KeyValuePair.4474"*, %"struct.WTF::KeyValuePair.4474"** %67, align 8
  %130 = load i32, i32* %68, align 8
  %131 = zext i32 %130 to i64
  %132 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %129, i64 %131
  br i1 %128, label %156, label %133

133:                                              ; preds = %126
  %134 = icmp eq i32 %130, 0
  br i1 %134, label %149, label %135

135:                                              ; preds = %133, %146
  %136 = phi %"struct.WTF::KeyValuePair.4474"* [ %147, %146 ], [ %129, %133 ]
  %137 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %136, i64 0, i32 0, i32 0
  %138 = load i32, i32* %137, align 4
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %136, i64 0, i32 0, i32 1, i32 0, i32 0
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %140, align 8
  %142 = icmp eq %"class.WTF::StringImpl"* %141, null
  %143 = and i1 %139, %142
  %144 = icmp eq i32 %138, -1
  %145 = or i1 %144, %143
  br i1 %145, label %146, label %149

146:                                              ; preds = %135
  %147 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %136, i64 1
  %148 = icmp eq %"struct.WTF::KeyValuePair.4474"* %147, %132
  br i1 %148, label %156, label %135

149:                                              ; preds = %135, %133
  %150 = phi %"struct.WTF::KeyValuePair.4474"* [ %129, %133 ], [ %136, %135 ]
  %151 = icmp eq %"struct.WTF::KeyValuePair.4474"* %150, %132
  br i1 %151, label %156, label %152

152:                                              ; preds = %149
  %153 = bitcast %"class.std::__1::unique_ptr.4504"* %10 to i8*
  %154 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %10, i64 0, i32 0, i32 0, i32 0
  %155 = bitcast %"class.std::__1::unique_ptr.4504"* %10 to i8**
  br label %191

156:                                              ; preds = %146, %301, %318, %315, %126, %149
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  %157 = load %"struct.WTF::KeyValuePair.4474"*, %"struct.WTF::KeyValuePair.4474"** %67, align 8
  %158 = icmp eq %"struct.WTF::KeyValuePair.4474"* %157, null
  br i1 %158, label %320, label %159, !prof !2

159:                                              ; preds = %156
  %160 = load i32, i32* %68, align 8
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %189, label %162

162:                                              ; preds = %159
  %163 = zext i32 %160 to i64
  br label %164

164:                                              ; preds = %186, %162
  %165 = phi i64 [ 0, %162 ], [ %187, %186 ]
  %166 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %157, i64 %165, i32 0, i32 0
  %167 = load i32, i32* %166, align 8
  %168 = icmp eq i32 %167, -1
  br i1 %168, label %186, label %169

169:                                              ; preds = %164
  %170 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %157, i64 %165, i32 0, i32 1, i32 0, i32 0
  %171 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %170, align 8
  %172 = icmp eq %"class.WTF::StringImpl"* %171, null
  br i1 %172, label %186, label %173

173:                                              ; preds = %169
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %175 = load atomic i32, i32* %174 monotonic, align 4
  %176 = and i32 %175, 2
  %177 = icmp eq i32 %176, 0
  %178 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %171, i64 0, i32 0
  %179 = load i32, i32* %178, align 4
  br i1 %177, label %180, label %182

180:                                              ; preds = %173
  %181 = add i32 %179, -1
  store i32 %181, i32* %178, align 4
  br label %182

182:                                              ; preds = %180, %173
  %183 = phi i32 [ %181, %180 ], [ %179, %173 ]
  %184 = icmp eq i32 %183, 0
  br i1 %184, label %185, label %186

185:                                              ; preds = %182
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %171) #16
  br label %186

186:                                              ; preds = %185, %182, %169, %164
  %187 = add nuw nsw i64 %165, 1
  %188 = icmp eq i64 %187, %163
  br i1 %188, label %189, label %164

189:                                              ; preds = %186, %159
  %190 = bitcast %"struct.WTF::KeyValuePair.4474"* %157 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %190) #16
  store %"struct.WTF::KeyValuePair.4474"* null, %"struct.WTF::KeyValuePair.4474"** %67, align 8
  br label %320

191:                                              ; preds = %152, %318
  %192 = phi %"struct.WTF::KeyValuePair.4474"* [ %150, %152 ], [ %305, %318 ]
  %193 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %192, i64 0, i32 0, i32 0
  %194 = load i32, i32* %193, align 8
  %195 = icmp eq i32 %194, 1
  %196 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %192, i64 0, i32 0, i32 1, i32 0, i32 0
  %197 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %196, align 8
  %198 = icmp eq %"class.WTF::StringImpl"* %197, null
  br i1 %198, label %216, label %199

199:                                              ; preds = %191
  %200 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  br i1 %203, label %204, label %216

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  %207 = zext i32 %206 to i33
  %208 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %207, i33 1) #16
  %209 = extractvalue { i33, i1 } %208, 1
  %210 = extractvalue { i33, i1 } %208, 0
  %211 = icmp slt i33 %210, 0
  %212 = or i1 %209, %211
  br i1 %212, label %213, label %214, !prof !3

213:                                              ; preds = %204
  call void @llvm.trap() #16
  unreachable

214:                                              ; preds = %204
  %215 = trunc i33 %210 to i32
  store i32 %215, i32* %205, align 4
  br label %216

216:                                              ; preds = %191, %199, %214
  %217 = load %"class.std::__1::vector.4502"*, %"class.std::__1::vector.4502"** %93, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %153) #16
  %218 = call i8* @_Znwm(i64 32) #18
  %219 = bitcast i8* %218 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS17PlatformFontUsageE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %219, align 8
  %220 = getelementptr inbounds i8, i8* %218, i64 8
  %221 = bitcast i8* %220 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %221, align 8
  %222 = getelementptr inbounds i8, i8* %218, i64 16
  store i8 0, i8* %222, align 8
  %223 = getelementptr inbounds i8, i8* %218, i64 24
  %224 = bitcast i8* %223 to double*
  store double 0.000000e+00, double* %224, align 8
  br i1 %198, label %240, label %225

225:                                              ; preds = %216
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %227 = load atomic i32, i32* %226 monotonic, align 4
  %228 = and i32 %227, 2
  %229 = icmp eq i32 %228, 0
  br i1 %229, label %230, label %240

230:                                              ; preds = %225
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %232 = load i32, i32* %231, align 4
  %233 = zext i32 %232 to i33
  %234 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %233, i33 1) #16
  %235 = extractvalue { i33, i1 } %234, 1
  %236 = extractvalue { i33, i1 } %234, 0
  %237 = icmp slt i33 %236, 0
  %238 = or i1 %235, %237
  br i1 %238, label %239, label %243, !prof !3

239:                                              ; preds = %230
  call void @llvm.trap() #16
  unreachable

240:                                              ; preds = %225, %216
  %241 = ptrtoint %"class.WTF::StringImpl"* %197 to i64
  %242 = bitcast i8* %220 to i64*
  store i64 %241, i64* %242, align 8
  br label %262

243:                                              ; preds = %230
  %244 = trunc i33 %236 to i32
  store i32 %244, i32* %231, align 4
  %245 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %221, align 8
  %246 = ptrtoint %"class.WTF::StringImpl"* %197 to i64
  %247 = bitcast i8* %220 to i64*
  store i64 %246, i64* %247, align 8
  %248 = icmp eq %"class.WTF::StringImpl"* %245, null
  br i1 %248, label %262, label %249

249:                                              ; preds = %243
  %250 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load atomic i32, i32* %250 monotonic, align 4
  %252 = and i32 %251, 2
  %253 = icmp eq i32 %252, 0
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %245, i64 0, i32 0
  %255 = load i32, i32* %254, align 4
  br i1 %253, label %256, label %258

256:                                              ; preds = %249
  %257 = add i32 %255, -1
  store i32 %257, i32* %254, align 4
  br label %258

258:                                              ; preds = %256, %249
  %259 = phi i32 [ %257, %256 ], [ %255, %249 ]
  %260 = icmp eq i32 %259, 0
  br i1 %260, label %261, label %262

261:                                              ; preds = %258
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %245) #16
  br label %262

262:                                              ; preds = %240, %243, %258, %261
  %263 = zext i1 %195 to i8
  store i8 %263, i8* %222, align 8
  %264 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %192, i64 0, i32 1
  %265 = load i32, i32* %264, align 8
  %266 = uitofp i32 %265 to double
  store double %266, double* %224, align 8
  store i8* %218, i8** %155, align 8
  %267 = getelementptr inbounds %"class.std::__1::vector.4502", %"class.std::__1::vector.4502"* %217, i64 0, i32 0, i32 1
  %268 = load %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"** %267, align 8
  %269 = getelementptr inbounds %"class.std::__1::vector.4502", %"class.std::__1::vector.4502"* %217, i64 0, i32 0, i32 2, i32 0, i32 0
  %270 = load %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"** %269, align 8
  %271 = icmp ult %"class.std::__1::unique_ptr.4504"* %268, %270
  br i1 %271, label %272, label %278

272:                                              ; preds = %262
  %273 = ptrtoint i8* %218 to i64
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %154, align 8
  %274 = bitcast %"class.std::__1::unique_ptr.4504"* %268 to i64*
  store i64 %273, i64* %274, align 8
  %275 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %268, i64 1
  %276 = ptrtoint %"class.std::__1::unique_ptr.4504"* %275 to i64
  %277 = bitcast %"class.std::__1::unique_ptr.4504"** %267 to i64*
  store i64 %276, i64* %277, align 8
  br label %279

278:                                              ; preds = %262
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS17PlatformFontUsageENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4502"* %217, %"class.std::__1::unique_ptr.4504"* nonnull dereferenceable(8) %10) #16
  br label %279

279:                                              ; preds = %272, %278
  %280 = load %"class.blink::protocol::CSS::PlatformFontUsage"*, %"class.blink::protocol::CSS::PlatformFontUsage"** %154, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %154, align 8
  %281 = icmp eq %"class.blink::protocol::CSS::PlatformFontUsage"* %280, null
  br i1 %281, label %287, label %282

282:                                              ; preds = %279
  %283 = bitcast %"class.blink::protocol::CSS::PlatformFontUsage"* %280 to void (%"class.blink::protocol::CSS::PlatformFontUsage"*)***
  %284 = load void (%"class.blink::protocol::CSS::PlatformFontUsage"*)**, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*** %283, align 8
  %285 = getelementptr inbounds void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)** %284, i64 2
  %286 = load void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)** %285, align 8
  call void %286(%"class.blink::protocol::CSS::PlatformFontUsage"* nonnull %280) #16
  br label %287

287:                                              ; preds = %282, %279
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %153) #16
  br i1 %198, label %301, label %288

288:                                              ; preds = %287
  %289 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %290 = load atomic i32, i32* %289 monotonic, align 4
  %291 = and i32 %290, 2
  %292 = icmp eq i32 %291, 0
  %293 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %197, i64 0, i32 0
  %294 = load i32, i32* %293, align 4
  br i1 %292, label %295, label %297

295:                                              ; preds = %288
  %296 = add i32 %294, -1
  store i32 %296, i32* %293, align 4
  br label %297

297:                                              ; preds = %295, %288
  %298 = phi i32 [ %296, %295 ], [ %294, %288 ]
  %299 = icmp eq i32 %298, 0
  br i1 %299, label %300, label %301

300:                                              ; preds = %297
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %197) #16
  br label %301

301:                                              ; preds = %287, %297, %300
  %302 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %192, i64 1
  %303 = icmp eq %"struct.WTF::KeyValuePair.4474"* %302, %132
  br i1 %303, label %156, label %304

304:                                              ; preds = %301, %315
  %305 = phi %"struct.WTF::KeyValuePair.4474"* [ %316, %315 ], [ %302, %301 ]
  %306 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %305, i64 0, i32 0, i32 0
  %307 = load i32, i32* %306, align 4
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %305, i64 0, i32 0, i32 1, i32 0, i32 0
  %310 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %309, align 8
  %311 = icmp eq %"class.WTF::StringImpl"* %310, null
  %312 = and i1 %308, %311
  %313 = icmp eq i32 %307, -1
  %314 = or i1 %313, %312
  br i1 %314, label %315, label %318

315:                                              ; preds = %304
  %316 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %305, i64 1
  %317 = icmp eq %"struct.WTF::KeyValuePair.4474"* %316, %132
  br i1 %317, label %156, label %304

318:                                              ; preds = %304
  %319 = icmp eq %"struct.WTF::KeyValuePair.4474"* %305, %132
  br i1 %319, label %156, label %191

320:                                              ; preds = %189, %156
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #16
  %321 = load i8, i8* %49, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  %322 = icmp slt i8 %321, 0
  br i1 %322, label %323, label %326

323:                                              ; preds = %320
  %324 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %325 = load i8*, i8** %324, align 8
  call void @_ZdlPv(i8* %325) #18
  br label %326

326:                                              ; preds = %61, %33, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %11) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent23getPlatformFontsForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS17PlatformFontUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly, i32, %"class.std::__1::unique_ptr.4499"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent23getPlatformFontsForNodeEiPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS17PlatformFontUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %6, i32 %2, %"class.std::__1::unique_ptr.4499"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17getStyleSheetTextERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::InspectorStyleSheetBase"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = bitcast %"class.blink::InspectorStyleSheetBase"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  store %"class.blink::InspectorStyleSheetBase"* null, %"class.blink::InspectorStyleSheetBase"** %5, align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent21AssertStyleSheetForIdERKN3WTF6StringERPNS_23InspectorStyleSheetBaseE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheetBase"** nonnull dereferenceable(8) %5)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16
  br label %33

18:                                               ; preds = %4
  %19 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %5, align 8
  %20 = bitcast %"class.blink::InspectorStyleSheetBase"* %19 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)***
  %21 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*** %20, align 8
  %22 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %21, i64 4
  %23 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %22, align 8
  %24 = call zeroext i1 %23(%"class.blink::InspectorStyleSheetBase"* %19, %"class.WTF::String"* %3) #16
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  %25 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %27 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %26, i64 0, i32 1, i32 0
  %28 = load i8, i8* %27, align 1
  %29 = icmp slt i8 %28, 0
  br i1 %29, label %30, label %33

30:                                               ; preds = %18
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  call void @_ZdlPv(i8* %32) #18
  br label %33

33:                                               ; preds = %12, %18, %30
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent21AssertStyleSheetForIdERKN3WTF6StringERPNS_23InspectorStyleSheetBaseE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectorStyleSheetBase"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::InspectorStyleSheet"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.blink::InspectorStyleSheet"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #16
  store %"class.blink::InspectorStyleSheet"* null, %"class.blink::InspectorStyleSheet"** %5, align 8
  %9 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %9) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent30AssertInspectorStyleSheetForIdERKN3WTF6StringERPNS_19InspectorStyleSheetE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %5)
  %10 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 1
  br i1 %12, label %13, label %22

13:                                               ; preds = %4
  %14 = bitcast %"class.blink::InspectorStyleSheet"** %5 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.blink::InspectorStyleSheetBase"** %3 to i64*
  store i64 %15, i64* %16, align 8
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 1, i32* %17, align 8
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"* %18 to i8*
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %20, i8* align 8 %21, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 24, i1 false) #16
  br label %50

22:                                               ; preds = %4
  %23 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 9, i32 0
  %24 = getelementptr inbounds %"class.WTF::HashMap.3281", %"class.WTF::HashMap.3281"* %23, i64 0, i32 0
  %25 = call { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.3282"* %24, %"class.WTF::String"* dereferenceable(8) %2) #16
  %26 = extractvalue { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } %25, 0
  %27 = getelementptr inbounds %"class.WTF::HashMap.3281", %"class.WTF::HashMap.3281"* %23, i64 0, i32 0, i32 0
  %28 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 9, i32 0, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %28, i64 %31
  %33 = icmp eq %"struct.WTF::KeyValuePair.3284"* %26, %32
  br i1 %33, label %34, label %46

34:                                               ; preds = %22
  %35 = call i8* @_Znwm(i64 48) #18
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %35, i8** %36, align 8
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %38 = bitcast i64* %37 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %38, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %35, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i64 34, i1 false) #16
  %39 = getelementptr inbounds i8, i8* %35, i64 34
  store i8 0, i8* %39, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #16
  %40 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %41 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %40, i64 0, i32 1, i32 0
  %42 = load i8, i8* %41, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %34
  %45 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %50

46:                                               ; preds = %22
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %26, i64 0, i32 1, i32 0, i32 0
  %48 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %48, i64 0, i32 0
  store %"class.blink::InspectorStyleSheetBase"* %49, %"class.blink::InspectorStyleSheetBase"** %3, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %50

50:                                               ; preds = %46, %34, %44, %13
  %51 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  br i1 %55, label %56, label %59

56:                                               ; preds = %50
  %57 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %51, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load i8*, i8** %57, align 8
  call void @_ZdlPv(i8* %58) #18
  br label %59

59:                                               ; preds = %50, %56
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent17getStyleSheetTextERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::InspectorStyleSheetBase"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorCSSAgent"*
  %9 = bitcast %"class.blink::InspectorStyleSheetBase"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16, !noalias !33
  store %"class.blink::InspectorStyleSheetBase"* null, %"class.blink::InspectorStyleSheetBase"** %5, align 8, !noalias !33
  %10 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %10) #16, !noalias !33
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 32, i1 false) #16, !noalias !33
  call void @_ZN5blink17InspectorCSSAgent21AssertStyleSheetForIdERKN3WTF6StringERPNS_23InspectorStyleSheetBaseE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorCSSAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheetBase"** nonnull dereferenceable(8) %5) #16, !noalias !33
  %11 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %12 = load i32, i32* %11, align 8, !noalias !33
  %13 = icmp eq i32 %12, 1
  br i1 %13, label %20, label %14

14:                                               ; preds = %4
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %12, i32* %15, align 8, !alias.scope !33
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %18 = bitcast %"class.std::__1::basic_string"* %16 to i8*
  %19 = bitcast %"class.std::__1::basic_string"* %17 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %18, i8* align 8 %19, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 24, i1 false) #16, !noalias !33
  br label %35

20:                                               ; preds = %4
  %21 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %5, align 8, !noalias !33
  %22 = bitcast %"class.blink::InspectorStyleSheetBase"* %21 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)***
  %23 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*** %22, align 8, !noalias !33
  %24 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %23, i64 4
  %25 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %24, align 8, !noalias !33
  %26 = call zeroext i1 %25(%"class.blink::InspectorStyleSheetBase"* %21, %"class.WTF::String"* %3) #16, !noalias !33
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %28 = bitcast %"class.std::__1::basic_string"* %27 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %29 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %28, i64 0, i32 1, i32 0
  %30 = load i8, i8* %29, align 1, !noalias !33
  %31 = icmp slt i8 %30, 0
  br i1 %31, label %32, label %35

32:                                               ; preds = %20
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load i8*, i8** %33, align 8, !noalias !33
  call void @_ZdlPv(i8* %34) #18
  br label %35

35:                                               ; preds = %14, %20, %32
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %10) #16, !noalias !33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16, !noalias !33
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17collectClassNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4527"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::InspectorStyleSheet"*, align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = bitcast %"class.blink::InspectorStyleSheet"** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  store %"class.blink::InspectorStyleSheet"* null, %"class.blink::InspectorStyleSheet"** %5, align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent30AssertInspectorStyleSheetForIdERKN3WTF6StringERPNS_19InspectorStyleSheetE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %5)
  %9 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = icmp eq i32 %10, 1
  br i1 %11, label %18, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %10, i32* %13, align 8
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %15 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %16 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %17 = bitcast %"class.std::__1::basic_string"* %15 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %16, i8* align 8 %17, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 24, i1 false) #16
  br label %72

18:                                               ; preds = %4
  %19 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %5, align 8
  %20 = call %"class.std::__1::vector.4530"* @_ZN5blink19InspectorStyleSheet17CollectClassNamesEv(%"class.blink::InspectorStyleSheet"* %19) #16
  %21 = ptrtoint %"class.std::__1::vector.4530"* %20 to i64
  %22 = getelementptr inbounds %"class.std::__1::unique_ptr.4527", %"class.std::__1::unique_ptr.4527"* %3, i64 0, i32 0, i32 0, i32 0
  %23 = load %"class.std::__1::vector.4530"*, %"class.std::__1::vector.4530"** %22, align 8
  %24 = bitcast %"class.std::__1::unique_ptr.4527"* %3 to i64*
  store i64 %21, i64* %24, align 8
  %25 = icmp eq %"class.std::__1::vector.4530"* %23, null
  br i1 %25, label %63, label %26

26:                                               ; preds = %18
  %27 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %23, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::String"*, %"class.WTF::String"** %27, align 8
  %29 = icmp eq %"class.WTF::String"* %28, null
  br i1 %29, label %61, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.WTF::String"* %28 to i8*
  %32 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %23, i64 0, i32 0, i32 1
  %33 = load %"class.WTF::String"*, %"class.WTF::String"** %32, align 8
  %34 = icmp eq %"class.WTF::String"* %33, %28
  br i1 %34, label %59, label %35

35:                                               ; preds = %30, %54
  %36 = phi %"class.WTF::String"* [ %37, %54 ], [ %33, %30 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 -1
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %35
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #16
  br label %54

54:                                               ; preds = %53, %50, %35
  %55 = icmp eq %"class.WTF::String"* %37, %28
  br i1 %55, label %56, label %35

56:                                               ; preds = %54
  %57 = bitcast %"class.std::__1::vector.4530"* %23 to i8**
  %58 = load i8*, i8** %57, align 8
  br label %59

59:                                               ; preds = %56, %30
  %60 = phi i8* [ %58, %56 ], [ %31, %30 ]
  store %"class.WTF::String"* %28, %"class.WTF::String"** %32, align 8
  call void @_ZdlPv(i8* %60) #18
  br label %61

61:                                               ; preds = %59, %26
  %62 = bitcast %"class.std::__1::vector.4530"* %23 to i8*
  call void @_ZdlPv(i8* %62) #18
  br label %63

63:                                               ; preds = %18, %61
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  %64 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %65 = bitcast %"class.std::__1::basic_string"* %64 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %66 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %65, i64 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1
  %68 = icmp slt i8 %67, 0
  br i1 %68, label %69, label %72

69:                                               ; preds = %63
  %70 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load i8*, i8** %70, align 8
  call void @_ZdlPv(i8* %71) #18
  br label %72

72:                                               ; preds = %12, %63, %69
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent30AssertInspectorStyleSheetForIdERKN3WTF6StringERPNS_19InspectorStyleSheetE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectorStyleSheet"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 32, i1 false)
  %9 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %9)
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  %11 = load i8, i8* %10, align 8, !range !4, !noalias !36
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %14, label %13

13:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %6) #16
  br label %26

14:                                               ; preds = %4
  %15 = tail call i8* @_Znwm(i64 32) #18
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8, !noalias !36
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %18, align 8, !noalias !36
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i64 25, i1 false) #16
  %19 = getelementptr inbounds i8, i8* %15, i64 25
  store i8 0, i8* %19, align 1, !noalias !36
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.std::__1::basic_string"* nonnull %5) #16
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1, !noalias !36
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %26

24:                                               ; preds = %14
  %25 = load i8*, i8** %16, align 8, !noalias !36
  call void @_ZdlPv(i8* %25) #18
  br label %26

26:                                               ; preds = %13, %14, %24
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %9)
  %27 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  %29 = icmp eq i32 %28, 1
  br i1 %29, label %36, label %30

30:                                               ; preds = %26
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %28, i32* %31, align 8
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %34 = bitcast %"class.std::__1::basic_string"* %32 to i8*
  %35 = bitcast %"class.std::__1::basic_string"* %33 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %34, i8* align 8 %35, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 24, i1 false) #16
  br label %65

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 8, i32 0
  %38 = getelementptr inbounds %"class.WTF::HashMap.3274", %"class.WTF::HashMap.3274"* %37, i64 0, i32 0
  %39 = call { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.3275"* %38, %"class.WTF::String"* dereferenceable(8) %2) #16
  %40 = extractvalue { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } %39, 0
  %41 = getelementptr inbounds %"class.WTF::HashMap.3274", %"class.WTF::HashMap.3274"* %37, i64 0, i32 0, i32 0
  %42 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %41, align 8
  %43 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 8, i32 0, i32 0, i32 1
  %44 = load i32, i32* %43, align 8
  %45 = zext i32 %44 to i64
  %46 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %42, i64 %45
  %47 = icmp eq %"struct.WTF::KeyValuePair.3277"* %40, %46
  br i1 %47, label %48, label %60

48:                                               ; preds = %36
  %49 = call i8* @_Znwm(i64 48) #18
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast i64* %51 to <2 x i64>*
  store <2 x i64> <i64 34, i64 -9223372036854775760>, <2 x i64>* %52, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 getelementptr inbounds ([35 x i8], [35 x i8]* @.str.14, i64 0, i64 0), i64 34, i1 false) #16
  %53 = getelementptr inbounds i8, i8* %49, i64 34
  store i8 0, i8* %53, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #16
  %54 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %65

58:                                               ; preds = %48
  %59 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %65

60:                                               ; preds = %36
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %40, i64 0, i32 1, i32 0, i32 0
  %62 = bitcast %"class.blink::InspectorStyleSheet"** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast %"class.blink::InspectorStyleSheet"** %3 to i64*
  store i64 %63, i64* %64, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %65

65:                                               ; preds = %60, %48, %58, %30
  %66 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %66 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %68 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %67, i64 0, i32 1, i32 0
  %69 = load i8, i8* %68, align 1
  %70 = icmp slt i8 %69, 0
  br i1 %70, label %71, label %74

71:                                               ; preds = %65
  %72 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %66, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  call void @_ZdlPv(i8* %73) #18
  br label %74

74:                                               ; preds = %65, %71
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %8) #16
  ret void
}

declare %"class.std::__1::vector.4530"* @_ZN5blink19InspectorStyleSheet17CollectClassNamesEv(%"class.blink::InspectorStyleSheet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent17collectClassNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4527"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent17collectClassNamesERKN3WTF6StringEPNSt3__110unique_ptrINS5_6vectorIS2_NS5_9allocatorIS2_EEEENS5_14default_deleteISA_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.std::__1::unique_ptr.4527"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17setStyleSheetTextERKN3WTF6StringES4_PN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::InspectorStyleSheetBase"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %11 = add nsw i32 %10, 1
  store i32 %11, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %12 = bitcast %"class.blink::InspectorStyleSheetBase"** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  store %"class.blink::InspectorStyleSheetBase"* null, %"class.blink::InspectorStyleSheetBase"** %6, align 8
  %13 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %13) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent21AssertStyleSheetForIdERKN3WTF6StringERPNS_23InspectorStyleSheetBaseE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheetBase"** nonnull dereferenceable(8) %6)
  %14 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 1
  br i1 %16, label %23, label %17

17:                                               ; preds = %5
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %15, i32* %18, align 8
  %19 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %21 = bitcast %"class.std::__1::basic_string"* %19 to i8*
  %22 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %21, i8* align 8 %22, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 24, i1 false) #16
  br label %105

23:                                               ; preds = %5
  %24 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %24) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %24, i8 -86, i64 56, i1 false)
  %25 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %26 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %26, align 8
  %27 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %27, align 2
  %28 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %29 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %30 = bitcast %"class.WTF::StringImpl"** %29 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %30, i8 0, i64 16, i1 false) #16
  %31 = bitcast i8** %28 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %31, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %25, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %33 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %32, align 8
  %34 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %33, i64 0, i32 17, i32 0, i32 0
  %35 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %34, align 8
  %36 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 40) #16
  %37 = bitcast i8* %36 to %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*
  %38 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %6, align 8
  call void @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionC2EPNS_23InspectorStyleSheetBaseERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %37, %"class.blink::InspectorStyleSheetBase"* %38, %"class.WTF::String"* dereferenceable(8) %3) #16
  %39 = getelementptr inbounds i8, i8* %36, i64 -4
  %40 = bitcast i8* %39 to i16*
  %41 = load atomic i16, i16* %40 monotonic, align 2
  %42 = or i16 %41, 1
  store atomic i16 %42, i16* %40 release, align 2
  %43 = bitcast i8* %36 to %"class.blink::InspectorHistory::Action"*
  %44 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  %45 = call zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %35, %"class.blink::InspectorHistory::Action"* %43, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %44) #16
  %46 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %46) #16
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %44) #16
  %47 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 0
  %48 = load i32, i32* %47, align 8
  store i32 %48, i32* %14, align 8
  %49 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %50 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %51 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %52 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %51, i64 0, i32 1, i32 0
  %53 = load i8, i8* %52, align 1
  %54 = icmp slt i8 %53, 0
  br i1 %54, label %55, label %59

55:                                               ; preds = %23
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %57 = load i8*, i8** %56, align 8
  call void @_ZdlPv(i8* %57) #18
  %58 = load i32, i32* %14, align 8
  br label %59

59:                                               ; preds = %55, %23
  %60 = phi i32 [ %58, %55 ], [ %48, %23 ]
  %61 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  %62 = bitcast %"class.std::__1::basic_string"* %50 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %61, i8* align 8 %62, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %46) #16
  %63 = icmp eq i32 %60, 1
  br i1 %63, label %68, label %64

64:                                               ; preds = %59
  %65 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %60, i32* %65, align 8
  %66 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %67 = bitcast %"class.std::__1::basic_string"* %66 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %67, i8* align 8 %61, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #16
  br label %99

68:                                               ; preds = %59
  %69 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %6, align 8
  %70 = bitcast %"class.blink::InspectorStyleSheetBase"* %69 to %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)***
  %71 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)*** %70, align 8
  %72 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)** %71, i64 5
  %73 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)** %72, align 8
  %74 = call %"class.WTF::StringImpl"* %73(%"class.blink::InspectorStyleSheetBase"* %69) #16
  %75 = icmp eq %"class.WTF::StringImpl"* %74, null
  br i1 %75, label %98, label %76

76:                                               ; preds = %68
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 1
  %78 = load i32, i32* %77, align 4
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %81 = load atomic i32, i32* %80 monotonic, align 4
  %82 = and i32 %81, 2
  %83 = icmp eq i32 %82, 0
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %74, i64 0, i32 0
  %85 = load i32, i32* %84, align 4
  br i1 %83, label %86, label %88

86:                                               ; preds = %76
  %87 = add i32 %85, -1
  store i32 %87, i32* %84, align 4
  br label %88

88:                                               ; preds = %86, %76
  %89 = phi i32 [ %87, %86 ], [ %85, %76 ]
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %92

91:                                               ; preds = %88
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %74) #16
  br i1 %79, label %98, label %93

92:                                               ; preds = %88
  br i1 %79, label %98, label %93

93:                                               ; preds = %91, %92
  %94 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)**, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)*** %70, align 8
  %95 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)** %94, i64 5
  %96 = load %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)*, %"class.WTF::StringImpl"* (%"class.blink::InspectorStyleSheetBase"*)** %95, align 8
  %97 = call %"class.WTF::StringImpl"* %96(%"class.blink::InspectorStyleSheetBase"* %69) #16
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %4, %"class.WTF::StringImpl"* %97)
  br label %98

98:                                               ; preds = %68, %91, %92, %93
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %99

99:                                               ; preds = %64, %98
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %24) #16
  %100 = load i8, i8* %52, align 1
  %101 = icmp slt i8 %100, 0
  br i1 %101, label %102, label %105

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %104 = load i8*, i8** %103, align 8
  call void @_ZdlPv(i8* %104) #18
  br label %105

105:                                              ; preds = %17, %99, %102
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  %106 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %107 = add nsw i32 %106, -1
  store i32 %107, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  ret void
}

declare zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"*, %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 1
  %4 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #16
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !3

19:                                               ; preds = %10
  tail call void @llvm.trap() #16
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %20, %5, %2
  %23 = ptrtoint %"class.WTF::StringImpl"* %1 to i64
  %24 = bitcast %"class.WTF::String"* %3 to i64*
  %25 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %26 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %25, align 8
  store i64 %23, i64* %24, align 8
  %27 = icmp eq %"class.WTF::StringImpl"* %26, null
  br i1 %27, label %41, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load atomic i32, i32* %29 monotonic, align 4
  %31 = and i32 %30, 2
  %32 = icmp eq i32 %31, 0
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %26, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  br i1 %32, label %35, label %37

35:                                               ; preds = %28
  %36 = add i32 %34, -1
  store i32 %36, i32* %33, align 4
  br label %37

37:                                               ; preds = %35, %28
  %38 = phi i32 [ %36, %35 ], [ %34, %28 ]
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %37
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %26) #16
  br label %41

41:                                               ; preds = %22, %37, %40
  %42 = getelementptr inbounds %"class.crdtp::detail::ValueMaybe", %"class.crdtp::detail::ValueMaybe"* %0, i64 0, i32 0
  store i8 1, i8* %42, align 8
  br i1 %4, label %56, label %43

43:                                               ; preds = %41
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %45 = load atomic i32, i32* %44 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %43
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %43
  %53 = phi i32 [ %51, %50 ], [ %49, %43 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #16
  br label %56

56:                                               ; preds = %41, %52, %55
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 4
  %4 = load i32, i32* %3, align 8
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0
  tail call void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink14ExceptionStateE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %10 = load i64*, i64** %9, align 8
  %11 = icmp eq i64* %10, null
  br i1 %11, label %22, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 3
  %14 = load %"class.v8::Isolate"*, %"class.v8::Isolate"** %13, align 8
  %15 = bitcast %"class.v8::Isolate"* %14 to %"class.v8::internal::Isolate"*
  %16 = load i64, i64* %10, align 8
  %17 = tail call i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"* %15, i64 %16) #16
  %18 = tail call zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"* %14) #16
  br i1 %18, label %22, label %19

19:                                               ; preds = %12
  %20 = bitcast i64* %17 to %"class.v8::Value"*
  %21 = tail call %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"* %14, %"class.v8::Value"* %20) #16
  br label %22

22:                                               ; preds = %19, %12, %8
  %23 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %0, i64 0, i32 0, i32 5, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %39, label %26

26:                                               ; preds = %22
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %35

33:                                               ; preds = %26
  %34 = add i32 %32, -1
  store i32 %34, i32* %31, align 4
  br label %35

35:                                               ; preds = %33, %26
  %36 = phi i32 [ %34, %33 ], [ %32, %26 ]
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %39

38:                                               ; preds = %35
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #16
  br label %39

39:                                               ; preds = %22, %35, %38
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent17setStyleSheetTextERKN3WTF6StringES4_PN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %7 = bitcast i32* %6 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent17setStyleSheetTextERKN3WTF6StringES4_PN5crdtp6detail10ValueMaybeIS2_EE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %7, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.crdtp::detail::ValueMaybe"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent15setRuleSelectorERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_12SelectorListENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4265"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::InspectorStyleSheet"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.blink::SourceRange", align 4
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %15 = bitcast %"class.blink::InspectorStyleSheet"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  store %"class.blink::InspectorStyleSheet"* null, %"class.blink::InspectorStyleSheet"** %7, align 8
  %16 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent30AssertInspectorStyleSheetForIdERKN3WTF6StringERPNS_19InspectorStyleSheetE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %7)
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #16
  br label %127

26:                                               ; preds = %6
  %27 = bitcast %"class.blink::SourceRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 1
  store i32 -1431655766, i32* %29, align 4
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* nonnull %9) #16
  %30 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16
  %31 = bitcast %"class.blink::InspectorStyleSheet"** %7 to %"class.blink::InspectorStyleSheetBase"**
  %32 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %31, align 8
  call fastcc void @_ZN5blinkL22JsonRangeToSourceRangeEPNS_23InspectorStyleSheetBaseEPNS_8protocol3CSS11SourceRangeEPNS_11SourceRangeE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorStyleSheetBase"* %32, %"class.blink::protocol::CSS::SourceRange"* %3, %"class.blink::SourceRange"* nonnull %9)
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %17, align 8
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.blink::InspectorStyleSheetBase"* %32 to %"class.blink::InspectorStyleSheet"*
  br i1 %40, label %42, label %46

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #18
  %45 = load i32, i32* %17, align 8
  br label %46

46:                                               ; preds = %42, %26
  %47 = phi i32 [ %45, %42 ], [ %34, %26 ]
  %48 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16
  %50 = icmp eq i32 %47, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %47, i32* %52, align 8
  %53 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %48, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %127

55:                                               ; preds = %46
  %56 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %56) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 56, i1 false)
  %57 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %58, align 8
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %62 = bitcast %"class.WTF::StringImpl"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #16
  %63 = bitcast i8** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %64 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 72) #16
  %65 = bitcast i8* %64 to %"class.blink::InspectorCSSAgent::ModifyRuleAction"*
  call void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionC2ENS1_4TypeEPNS_19InspectorStyleSheetERKNS_11SourceRangeERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"* %65, i32 0, %"class.blink::InspectorStyleSheet"* %41, %"class.blink::SourceRange"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %4) #16
  %66 = getelementptr inbounds i8, i8* %64, i64 -4
  %67 = bitcast i8* %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = or i16 %68, 1
  store atomic i16 %69, i16* %67 release, align 2
  %70 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %71, i64 0, i32 17, i32 0, i32 0
  %73 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %72, align 8
  %74 = bitcast i8* %64 to %"class.blink::InspectorHistory::Action"*
  %75 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %73, %"class.blink::InspectorHistory::Action"* %74, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %75) #16
  br i1 %76, label %77, label %120

77:                                               ; preds = %55
  %78 = getelementptr inbounds i8, i8* %64, i64 64
  %79 = bitcast i8* %78 to %"class.blink::CSSRule"**
  %80 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %79, align 8
  %81 = bitcast i8* %78 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  %82 = icmp eq %"class.blink::CSSRule"* %80, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.blink::CSSRule"* %80 to i32 (%"class.blink::CSSRule"*)***
  %85 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %84, align 8
  %86 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %85, i64 9
  %87 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %86, align 8
  %88 = call i32 %87(%"class.blink::CSSRule"* nonnull %80) #16
  %89 = icmp eq i32 %88, 1
  %90 = bitcast %"class.blink::CSSRule"* %80 to %"class.blink::CSSStyleRule"*
  %91 = select i1 %89, %"class.blink::CSSStyleRule"* %90, %"class.blink::CSSStyleRule"* null
  br label %92

92:                                               ; preds = %77, %83
  %93 = phi %"class.blink::CSSStyleRule"* [ %91, %83 ], [ null, %77 ]
  %94 = call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent26InspectorStyleSheetForRuleEPNS_12CSSStyleRuleE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::CSSStyleRule"* %93)
  store %"class.blink::InspectorStyleSheet"* %94, %"class.blink::InspectorStyleSheet"** %7, align 8
  %95 = icmp eq %"class.blink::InspectorStyleSheet"* %94, null
  br i1 %95, label %96, label %108

96:                                               ; preds = %92
  %97 = call i8* @_Znwm(i64 48) #18
  %98 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %97, i8** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %100 = bitcast i64* %99 to <2 x i64>*
  store <2 x i64> <i64 45, i64 -9223372036854775760>, <2 x i64>* %100, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %97, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i64 45, i1 false) #16
  %101 = getelementptr inbounds i8, i8* %97, i64 45
  store i8 0, i8* %101, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %12) #16
  %102 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %103 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %102, i64 0, i32 1, i32 0
  %104 = load i8, i8* %103, align 1
  %105 = icmp slt i8 %104, 0
  br i1 %105, label %106, label %121

106:                                              ; preds = %96
  %107 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %107) #18
  br label %121

108:                                              ; preds = %92
  %109 = call %"class.blink::protocol::CSS::SelectorList"* @_ZN5blink19InspectorStyleSheet26BuildObjectForSelectorListEPNS_12CSSStyleRuleE(%"class.blink::InspectorStyleSheet"* nonnull %94, %"class.blink::CSSStyleRule"* %93) #16
  %110 = ptrtoint %"class.blink::protocol::CSS::SelectorList"* %109 to i64
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4265", %"class.std::__1::unique_ptr.4265"* %5, i64 0, i32 0, i32 0, i32 0
  %112 = load %"class.blink::protocol::CSS::SelectorList"*, %"class.blink::protocol::CSS::SelectorList"** %111, align 8
  %113 = bitcast %"class.std::__1::unique_ptr.4265"* %5 to i64*
  store i64 %110, i64* %113, align 8
  %114 = icmp eq %"class.blink::protocol::CSS::SelectorList"* %112, null
  br i1 %114, label %120, label %115

115:                                              ; preds = %108
  %116 = bitcast %"class.blink::protocol::CSS::SelectorList"* %112 to void (%"class.blink::protocol::CSS::SelectorList"*)***
  %117 = load void (%"class.blink::protocol::CSS::SelectorList"*)**, void (%"class.blink::protocol::CSS::SelectorList"*)*** %116, align 8
  %118 = getelementptr inbounds void (%"class.blink::protocol::CSS::SelectorList"*)*, void (%"class.blink::protocol::CSS::SelectorList"*)** %117, i64 2
  %119 = load void (%"class.blink::protocol::CSS::SelectorList"*)*, void (%"class.blink::protocol::CSS::SelectorList"*)** %118, align 8
  call void %119(%"class.blink::protocol::CSS::SelectorList"* nonnull %112) #16
  br label %120

120:                                              ; preds = %108, %115, %55
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %75) #16
  br label %121

121:                                              ; preds = %120, %96, %106
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %56) #16
  %122 = load i8, i8* %38, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %121
  %125 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  call void @_ZdlPv(i8* %126) #18
  br label %127

127:                                              ; preds = %51, %20, %121, %124
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %128 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %129 = add nsw i32 %128, -1
  store i32 %129, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %130 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %3, null
  br i1 %130, label %136, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.blink::protocol::CSS::SourceRange"* %3 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %133 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %132, align 8
  %134 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %133, i64 2
  %135 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %134, align 8
  call void %135(%"class.blink::protocol::CSS::SourceRange"* nonnull %3) #16
  br label %136

136:                                              ; preds = %127, %131
  ret void
}

declare void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define internal fastcc void @_ZN5blinkL22JsonRangeToSourceRangeEPNS_23InspectorStyleSheetBaseEPNS_8protocol3CSS11SourceRangeEPNS_11SourceRangeE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorStyleSheetBase"*, %"class.blink::protocol::CSS::SourceRange"* nocapture readonly, %"class.blink::SourceRange"* nocapture) unnamed_addr #0 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = alloca %"class.std::__1::basic_string", align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca i32, align 4
  %10 = alloca i32, align 4
  %11 = alloca %"class.std::__1::basic_string", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = getelementptr inbounds %"class.blink::protocol::CSS::SourceRange", %"class.blink::protocol::CSS::SourceRange"* %2, i64 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = icmp slt i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %4
  %17 = tail call i8* @_Znwm(i64 48) #18
  %18 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %17, i8** %18, align 8
  %19 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %20 = bitcast i64* %19 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %20, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %17, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str.39, i64 0, i64 0), i64 46, i1 false) #16
  %21 = getelementptr inbounds i8, i8* %17, i64 46
  store i8 0, i8* %21, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #16
  %22 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %23 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %22, i64 0, i32 1, i32 0
  %24 = load i8, i8* %23, align 1
  %25 = icmp slt i8 %24, 0
  br i1 %25, label %26, label %116

26:                                               ; preds = %16
  %27 = load i8*, i8** %18, align 8
  call void @_ZdlPv(i8* %27) #18
  br label %116

28:                                               ; preds = %4
  %29 = getelementptr inbounds %"class.blink::protocol::CSS::SourceRange", %"class.blink::protocol::CSS::SourceRange"* %2, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = icmp slt i32 %30, 0
  br i1 %31, label %32, label %44

32:                                               ; preds = %28
  %33 = tail call i8* @_Znwm(i64 64) #18
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %33, i8** %34, align 8
  %35 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %36 = bitcast i64* %35 to <2 x i64>*
  store <2 x i64> <i64 48, i64 -9223372036854775744>, <2 x i64>* %36, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %33, i8* align 1 getelementptr inbounds ([49 x i8], [49 x i8]* @.str.40, i64 0, i64 0), i64 48, i1 false) #16
  %37 = getelementptr inbounds i8, i8* %33, i64 48
  store i8 0, i8* %37, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %6) #16
  %38 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %39 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %38, i64 0, i32 1, i32 0
  %40 = load i8, i8* %39, align 1
  %41 = icmp slt i8 %40, 0
  br i1 %41, label %42, label %116

42:                                               ; preds = %32
  %43 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %43) #18
  br label %116

44:                                               ; preds = %28
  %45 = getelementptr inbounds %"class.blink::protocol::CSS::SourceRange", %"class.blink::protocol::CSS::SourceRange"* %2, i64 0, i32 3
  %46 = load i32, i32* %45, align 8
  %47 = icmp slt i32 %46, 0
  br i1 %47, label %48, label %60

48:                                               ; preds = %44
  %49 = tail call i8* @_Znwm(i64 48) #18
  %50 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %49, i8** %50, align 8
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %52 = bitcast i64* %51 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %52, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %49, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.41, i64 0, i64 0), i64 44, i1 false) #16
  %53 = getelementptr inbounds i8, i8* %49, i64 44
  store i8 0, i8* %53, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %7) #16
  %54 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %55 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %54, i64 0, i32 1, i32 0
  %56 = load i8, i8* %55, align 1
  %57 = icmp slt i8 %56, 0
  br i1 %57, label %58, label %116

58:                                               ; preds = %48
  %59 = load i8*, i8** %50, align 8
  call void @_ZdlPv(i8* %59) #18
  br label %116

60:                                               ; preds = %44
  %61 = getelementptr inbounds %"class.blink::protocol::CSS::SourceRange", %"class.blink::protocol::CSS::SourceRange"* %2, i64 0, i32 4
  %62 = load i32, i32* %61, align 4
  %63 = icmp slt i32 %62, 0
  br i1 %63, label %64, label %76

64:                                               ; preds = %60
  %65 = tail call i8* @_Znwm(i64 48) #18
  %66 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %65, i8** %66, align 8
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %68 = bitcast i64* %67 to <2 x i64>*
  store <2 x i64> <i64 46, i64 -9223372036854775760>, <2 x i64>* %68, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %65, i8* align 1 getelementptr inbounds ([47 x i8], [47 x i8]* @.str.42, i64 0, i64 0), i64 46, i1 false) #16
  %69 = getelementptr inbounds i8, i8* %65, i64 46
  store i8 0, i8* %69, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #16
  %70 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  br i1 %73, label %74, label %116

74:                                               ; preds = %64
  %75 = load i8*, i8** %66, align 8
  call void @_ZdlPv(i8* %75) #18
  br label %116

76:                                               ; preds = %60
  %77 = bitcast i32* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %77) #16
  store i32 0, i32* %9, align 4
  %78 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %78) #16
  store i32 0, i32* %10, align 4
  %79 = call zeroext i1 @_ZN5blink23InspectorStyleSheetBase27LineNumberAndColumnToOffsetEjjPj(%"class.blink::InspectorStyleSheetBase"* %1, i32 %14, i32 %30, i32* nonnull %9) #16
  br i1 %79, label %80, label %84

80:                                               ; preds = %76
  %81 = load i32, i32* %45, align 8
  %82 = load i32, i32* %61, align 4
  %83 = call zeroext i1 @_ZN5blink23InspectorStyleSheetBase27LineNumberAndColumnToOffsetEjjPj(%"class.blink::InspectorStyleSheetBase"* %1, i32 %81, i32 %82, i32* nonnull %10) #16
  br i1 %83, label %96, label %84

84:                                               ; preds = %76, %80
  %85 = call i8* @_Znwm(i64 48) #18
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %85, i8** %86, align 8
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %11, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %88 = bitcast i64* %87 to <2 x i64>*
  store <2 x i64> <i64 32, i64 -9223372036854775760>, <2 x i64>* %88, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %85, i8* align 1 getelementptr inbounds ([33 x i8], [33 x i8]* @.str.43, i64 0, i64 0), i64 32, i1 false) #16
  %89 = getelementptr inbounds i8, i8* %85, i64 32
  store i8 0, i8* %89, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %11) #16
  %90 = bitcast %"class.std::__1::basic_string"* %11 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %91 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %90, i64 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1
  %93 = icmp slt i8 %92, 0
  br i1 %93, label %94, label %115

94:                                               ; preds = %84
  %95 = load i8*, i8** %86, align 8
  call void @_ZdlPv(i8* %95) #18
  br label %115

96:                                               ; preds = %80
  %97 = load i32, i32* %9, align 4
  %98 = load i32, i32* %10, align 4
  %99 = icmp ugt i32 %97, %98
  br i1 %99, label %100, label %112

100:                                              ; preds = %96
  %101 = call i8* @_Znwm(i64 48) #18
  %102 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %101, i8** %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %104 = bitcast i64* %103 to <2 x i64>*
  store <2 x i64> <i64 36, i64 -9223372036854775760>, <2 x i64>* %104, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %101, i8* align 1 getelementptr inbounds ([37 x i8], [37 x i8]* @.str.44, i64 0, i64 0), i64 36, i1 false) #16
  %105 = getelementptr inbounds i8, i8* %101, i64 36
  store i8 0, i8* %105, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %12) #16
  %106 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %107 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %106, i64 0, i32 1, i32 0
  %108 = load i8, i8* %107, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %115

110:                                              ; preds = %100
  %111 = load i8*, i8** %102, align 8
  call void @_ZdlPv(i8* %111) #18
  br label %115

112:                                              ; preds = %96
  %113 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %3, i64 0, i32 0
  store i32 %97, i32* %113, align 4
  %114 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %3, i64 0, i32 1
  store i32 %98, i32* %114, align 4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %115

115:                                              ; preds = %110, %100, %94, %84, %112
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %78) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %77) #16
  br label %116

116:                                              ; preds = %74, %64, %58, %48, %42, %32, %26, %16, %115
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent26InspectorStyleSheetForRuleEPNS_12CSSStyleRuleE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSStyleRule"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::CSSStyleRule"* %1, null
  br i1 %3, label %81, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %1, i64 0, i32 0
  %6 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %1, i64 0, i32 0, i32 1
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 2
  %9 = icmp eq i8 %8, 0
  %10 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %1, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %9, label %25, label %11

11:                                               ; preds = %4, %16
  %12 = phi %"class.blink::ScriptWrappable"** [ %24, %16 ], [ %10, %4 ]
  %13 = phi %"class.blink::CSSRule"* [ %19, %16 ], [ %5, %4 ]
  %14 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %12, align 8
  %15 = icmp eq %"class.blink::ScriptWrappable"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %13, i64 0, i32 2, i32 0, i32 0
  %18 = bitcast %"class.blink::ScriptWrappable"** %17 to %"class.blink::CSSRule"**
  %19 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %19, i64 0, i32 1
  %21 = load i8, i8* %20, align 8
  %22 = and i8 %21, 2
  %23 = icmp eq i8 %22, 0
  %24 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %19, i64 0, i32 2, i32 0, i32 0
  br i1 %23, label %25, label %11

25:                                               ; preds = %16, %4
  %26 = phi %"class.blink::ScriptWrappable"** [ %10, %4 ], [ %24, %16 ]
  %27 = bitcast %"class.blink::ScriptWrappable"** %26 to %"class.blink::CSSStyleSheet"**
  %28 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %27, align 8
  %29 = icmp eq %"class.blink::CSSStyleSheet"* %28, null
  br i1 %29, label %30, label %57

30:                                               ; preds = %11, %25
  %31 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 17
  %32 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %31, i64 0, i32 0, i32 0
  %33 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %32, align 8
  %34 = icmp eq %"class.blink::CSSStyleSheet"* %33, null
  br i1 %34, label %35, label %53

35:                                               ; preds = %30
  %36 = tail call dereferenceable(192) %"class.blink::CSSDefaultStyleSheets"* @_ZN5blink21CSSDefaultStyleSheets8InstanceEv() #16
  %37 = getelementptr inbounds %"class.blink::CSSDefaultStyleSheets", %"class.blink::CSSDefaultStyleSheets"* %36, i64 0, i32 9, i32 0, i32 0
  %38 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %37, align 8
  %39 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #16
  %40 = bitcast i8* %39 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"* %40, %"class.blink::StyleSheetContents"* %38, %"class.blink::CSSImportRule"* null) #16
  %41 = getelementptr inbounds i8, i8* %39, i64 -4
  %42 = bitcast i8* %41 to i16*
  %43 = load atomic i16, i16* %42 monotonic, align 2
  %44 = or i16 %43, 1
  store atomic i16 %44, i16* %42 release, align 2
  %45 = ptrtoint i8* %39 to i64
  %46 = bitcast %"class.blink::Member.389"* %31 to i64*
  store atomic i64 %45, i64* %46 monotonic, align 8
  %47 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %48 = icmp eq i32 %47, 0
  %49 = bitcast i8* %39 to %"class.blink::CSSStyleSheet"*
  br i1 %48, label %53, label %50

50:                                               ; preds = %35
  %51 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %39) #16
  %52 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %32, align 8
  br label %53

53:                                               ; preds = %30, %50, %35
  %54 = phi %"class.blink::CSSStyleSheet"* [ %33, %30 ], [ %52, %50 ], [ %49, %35 ]
  tail call void @_ZN5blink7CSSRule19SetParentStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::CSSRule"* %5, %"class.blink::CSSStyleSheet"* %54) #16
  %55 = load i8, i8* %6, align 8
  %56 = and i8 %55, 2
  br label %57

57:                                               ; preds = %25, %53
  %58 = phi i8 [ %8, %25 ], [ %56, %53 ]
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %74, label %60

60:                                               ; preds = %57, %65
  %61 = phi %"class.blink::ScriptWrappable"** [ %73, %65 ], [ %10, %57 ]
  %62 = phi %"class.blink::CSSRule"* [ %68, %65 ], [ %5, %57 ]
  %63 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %61, align 8
  %64 = icmp eq %"class.blink::ScriptWrappable"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %60
  %66 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %62, i64 0, i32 2, i32 0, i32 0
  %67 = bitcast %"class.blink::ScriptWrappable"** %66 to %"class.blink::CSSRule"**
  %68 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %68, i64 0, i32 1
  %70 = load i8, i8* %69, align 8
  %71 = and i8 %70, 2
  %72 = icmp eq i8 %71, 0
  %73 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %68, i64 0, i32 2, i32 0, i32 0
  br i1 %72, label %74, label %60

74:                                               ; preds = %65, %57
  %75 = phi %"class.blink::ScriptWrappable"** [ %10, %57 ], [ %73, %65 ]
  %76 = bitcast %"class.blink::ScriptWrappable"** %75 to %"class.blink::CSSStyleSheet"**
  %77 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %76, align 8
  br label %78

78:                                               ; preds = %60, %74
  %79 = phi %"class.blink::CSSStyleSheet"* [ %77, %74 ], [ null, %60 ]
  %80 = tail call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleSheet"* %79)
  br label %81

81:                                               ; preds = %2, %78
  %82 = phi %"class.blink::InspectorStyleSheet"* [ %80, %78 ], [ null, %2 ]
  ret %"class.blink::InspectorStyleSheet"* %82
}

declare %"class.blink::protocol::CSS::SelectorList"* @_ZN5blink19InspectorStyleSheet26BuildObjectForSelectorListEPNS_12CSSStyleRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSStyleRule"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent15setRuleSelectorERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_12SelectorListENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4265"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent15setRuleSelectorERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_12SelectorListENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::CSS::SourceRange"* %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.std::__1::unique_ptr.4265"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent14setKeyframeKeyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_5ValueENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4360"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::InspectorStyleSheet"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.blink::SourceRange", align 4
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = alloca %"class.std::__1::basic_string", align 8
  %13 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %15 = bitcast %"class.blink::InspectorStyleSheet"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  store %"class.blink::InspectorStyleSheet"* null, %"class.blink::InspectorStyleSheet"** %7, align 8
  %16 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent30AssertInspectorStyleSheetForIdERKN3WTF6StringERPNS_19InspectorStyleSheetE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %7)
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #16
  br label %216

26:                                               ; preds = %6
  %27 = bitcast %"class.blink::SourceRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 1
  store i32 -1431655766, i32* %29, align 4
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* nonnull %9) #16
  %30 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16
  %31 = bitcast %"class.blink::InspectorStyleSheet"** %7 to %"class.blink::InspectorStyleSheetBase"**
  %32 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %31, align 8
  call fastcc void @_ZN5blinkL22JsonRangeToSourceRangeEPNS_23InspectorStyleSheetBaseEPNS_8protocol3CSS11SourceRangeEPNS_11SourceRangeE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorStyleSheetBase"* %32, %"class.blink::protocol::CSS::SourceRange"* %3, %"class.blink::SourceRange"* nonnull %9)
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %17, align 8
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.blink::InspectorStyleSheetBase"* %32 to %"class.blink::InspectorStyleSheet"*
  br i1 %40, label %42, label %46

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #18
  %45 = load i32, i32* %17, align 8
  br label %46

46:                                               ; preds = %42, %26
  %47 = phi i32 [ %45, %42 ], [ %34, %26 ]
  %48 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16
  %50 = icmp eq i32 %47, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %47, i32* %52, align 8
  %53 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %48, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %216

55:                                               ; preds = %46
  %56 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %56) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 56, i1 false)
  %57 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %58, align 8
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %62 = bitcast %"class.WTF::StringImpl"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #16
  %63 = bitcast i8** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %64 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 72) #16
  %65 = bitcast i8* %64 to %"class.blink::InspectorCSSAgent::ModifyRuleAction"*
  call void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionC2ENS1_4TypeEPNS_19InspectorStyleSheetERKNS_11SourceRangeERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"* %65, i32 3, %"class.blink::InspectorStyleSheet"* %41, %"class.blink::SourceRange"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %4) #16
  %66 = getelementptr inbounds i8, i8* %64, i64 -4
  %67 = bitcast i8* %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = or i16 %68, 1
  store atomic i16 %69, i16* %67 release, align 2
  %70 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %71, i64 0, i32 17, i32 0, i32 0
  %73 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %72, align 8
  %74 = bitcast i8* %64 to %"class.blink::InspectorHistory::Action"*
  %75 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %73, %"class.blink::InspectorHistory::Action"* %74, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %75) #16
  br i1 %76, label %77, label %209

77:                                               ; preds = %55
  %78 = getelementptr inbounds i8, i8* %64, i64 64
  %79 = bitcast i8* %78 to %"class.blink::CSSKeyframeRule"**
  %80 = load %"class.blink::CSSKeyframeRule"*, %"class.blink::CSSKeyframeRule"** %79, align 8
  %81 = bitcast i8* %78 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  %82 = getelementptr inbounds %"class.blink::CSSKeyframeRule", %"class.blink::CSSKeyframeRule"* %80, i64 0, i32 0
  %83 = getelementptr inbounds %"class.blink::CSSKeyframeRule", %"class.blink::CSSKeyframeRule"* %80, i64 0, i32 0, i32 1
  %84 = load i8, i8* %83, align 8
  %85 = and i8 %84, 2
  %86 = icmp eq i8 %85, 0
  %87 = getelementptr inbounds %"class.blink::CSSKeyframeRule", %"class.blink::CSSKeyframeRule"* %80, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %86, label %102, label %88

88:                                               ; preds = %77, %93
  %89 = phi %"class.blink::ScriptWrappable"** [ %101, %93 ], [ %87, %77 ]
  %90 = phi %"class.blink::CSSRule"* [ %96, %93 ], [ %82, %77 ]
  %91 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %89, align 8
  %92 = icmp eq %"class.blink::ScriptWrappable"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %88
  %94 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %90, i64 0, i32 2, i32 0, i32 0
  %95 = bitcast %"class.blink::ScriptWrappable"** %94 to %"class.blink::CSSRule"**
  %96 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %95, align 8
  %97 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %96, i64 0, i32 1
  %98 = load i8, i8* %97, align 8
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  %101 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %96, i64 0, i32 2, i32 0, i32 0
  br i1 %100, label %102, label %88

102:                                              ; preds = %93, %77
  %103 = phi %"class.blink::ScriptWrappable"** [ %87, %77 ], [ %101, %93 ]
  %104 = bitcast %"class.blink::ScriptWrappable"** %103 to %"class.blink::CSSStyleSheet"**
  %105 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %104, align 8
  br label %106

106:                                              ; preds = %88, %102
  %107 = phi %"class.blink::CSSStyleSheet"* [ %105, %102 ], [ null, %88 ]
  %108 = call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::CSSStyleSheet"* %107)
  store %"class.blink::InspectorStyleSheet"* %108, %"class.blink::InspectorStyleSheet"** %7, align 8
  %109 = icmp eq %"class.blink::InspectorStyleSheet"* %108, null
  %110 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %108, i64 0, i32 0
  br i1 %109, label %111, label %123

111:                                              ; preds = %106
  %112 = call i8* @_Znwm(i64 48) #18
  %113 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %112, i8** %113, align 8
  %114 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %115 = bitcast i64* %114 to <2 x i64>*
  store <2 x i64> <i64 45, i64 -9223372036854775760>, <2 x i64>* %115, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %112, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str.5, i64 0, i64 0), i64 45, i1 false) #16
  %116 = getelementptr inbounds i8, i8* %112, i64 45
  store i8 0, i8* %116, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %12) #16
  %117 = bitcast %"class.std::__1::basic_string"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %118 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %117, i64 0, i32 1, i32 0
  %119 = load i8, i8* %118, align 1
  %120 = icmp slt i8 %119, 0
  br i1 %120, label %121, label %210

121:                                              ; preds = %111
  %122 = load i8*, i8** %113, align 8
  call void @_ZdlPv(i8* %122) #18
  br label %210

123:                                              ; preds = %106
  %124 = call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* nonnull %108, %"class.blink::CSSRule"* %82) #16
  %125 = call i8* @_Znwm(i64 24) #18
  %126 = bitcast i8* %125 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS5ValueE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %126, align 8
  %127 = getelementptr inbounds i8, i8* %125, i64 8
  call void @llvm.memset.p0i8.i64(i8* align 8 %127, i8 0, i64 16, i1 false) #16
  %128 = getelementptr inbounds %"class.blink::CSSKeyframeRule", %"class.blink::CSSKeyframeRule"* %80, i64 0, i32 1, i32 0, i32 0
  %129 = load %"class.blink::StyleRuleKeyframe"*, %"class.blink::StyleRuleKeyframe"** %128, align 8
  %130 = call %"class.WTF::StringImpl"* @_ZNK5blink17StyleRuleKeyframe7KeyTextEv(%"class.blink::StyleRuleKeyframe"* %129) #16
  %131 = icmp eq %"class.WTF::StringImpl"* %130, null
  br i1 %131, label %147, label %132

132:                                              ; preds = %123
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %147

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #16
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %150, !prof !3

146:                                              ; preds = %137
  call void @llvm.trap() #16
  unreachable

147:                                              ; preds = %132, %123
  %148 = ptrtoint %"class.WTF::StringImpl"* %130 to i64
  %149 = bitcast i8* %127 to i64*
  store i64 %148, i64* %149, align 8
  br label %170

150:                                              ; preds = %137
  %151 = trunc i33 %143 to i32
  store i32 %151, i32* %138, align 4
  %152 = bitcast i8* %127 to %"class.WTF::StringImpl"**
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %152, align 8
  %154 = ptrtoint %"class.WTF::StringImpl"* %130 to i64
  %155 = bitcast i8* %127 to i64*
  store i64 %154, i64* %155, align 8
  %156 = icmp eq %"class.WTF::StringImpl"* %153, null
  br i1 %156, label %170, label %157

157:                                              ; preds = %150
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %153, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  br i1 %161, label %164, label %166

164:                                              ; preds = %157
  %165 = add i32 %163, -1
  store i32 %165, i32* %162, align 4
  br label %166

166:                                              ; preds = %164, %157
  %167 = phi i32 [ %165, %164 ], [ %163, %157 ]
  %168 = icmp eq i32 %167, 0
  br i1 %168, label %169, label %170

169:                                              ; preds = %166
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %153) #16
  br label %170

170:                                              ; preds = %147, %150, %166, %169
  %171 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %124, i64 0, i32 1
  %172 = call %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink23InspectorStyleSheetBase22BuildSourceRangeObjectERKNS_11SourceRangeE(%"class.blink::InspectorStyleSheetBase"* %110, %"class.blink::SourceRange"* dereferenceable(8) %171) #16
  %173 = ptrtoint %"class.blink::protocol::CSS::SourceRange"* %172 to i64
  %174 = getelementptr inbounds i8, i8* %125, i64 16
  %175 = bitcast i8* %174 to %"class.blink::protocol::CSS::SourceRange"**
  %176 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %175, align 8
  %177 = bitcast i8* %174 to i64*
  store i64 %173, i64* %177, align 8
  %178 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %176, null
  br i1 %178, label %184, label %179

179:                                              ; preds = %170
  %180 = bitcast %"class.blink::protocol::CSS::SourceRange"* %176 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %181 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %180, align 8
  %182 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %181, i64 2
  %183 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %182, align 8
  call void %183(%"class.blink::protocol::CSS::SourceRange"* nonnull %176) #16
  br label %184

184:                                              ; preds = %170, %179
  %185 = ptrtoint i8* %125 to i64
  %186 = getelementptr inbounds %"class.std::__1::unique_ptr.4360", %"class.std::__1::unique_ptr.4360"* %5, i64 0, i32 0, i32 0, i32 0
  %187 = load %"class.blink::protocol::CSS::Value"*, %"class.blink::protocol::CSS::Value"** %186, align 8
  %188 = bitcast %"class.std::__1::unique_ptr.4360"* %5 to i64*
  store i64 %185, i64* %188, align 8
  %189 = icmp eq %"class.blink::protocol::CSS::Value"* %187, null
  br i1 %189, label %195, label %190

190:                                              ; preds = %184
  %191 = bitcast %"class.blink::protocol::CSS::Value"* %187 to void (%"class.blink::protocol::CSS::Value"*)***
  %192 = load void (%"class.blink::protocol::CSS::Value"*)**, void (%"class.blink::protocol::CSS::Value"*)*** %191, align 8
  %193 = getelementptr inbounds void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %192, i64 2
  %194 = load void (%"class.blink::protocol::CSS::Value"*)*, void (%"class.blink::protocol::CSS::Value"*)** %193, align 8
  call void %194(%"class.blink::protocol::CSS::Value"* nonnull %187) #16
  br label %195

195:                                              ; preds = %190, %184
  br i1 %131, label %209, label %196

196:                                              ; preds = %195
  %197 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %198 = load atomic i32, i32* %197 monotonic, align 4
  %199 = and i32 %198, 2
  %200 = icmp eq i32 %199, 0
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %130, i64 0, i32 0
  %202 = load i32, i32* %201, align 4
  br i1 %200, label %203, label %205

203:                                              ; preds = %196
  %204 = add i32 %202, -1
  store i32 %204, i32* %201, align 4
  br label %205

205:                                              ; preds = %203, %196
  %206 = phi i32 [ %204, %203 ], [ %202, %196 ]
  %207 = icmp eq i32 %206, 0
  br i1 %207, label %208, label %209

208:                                              ; preds = %205
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %130) #16
  br label %209

209:                                              ; preds = %195, %205, %208, %55
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %75) #16
  br label %210

210:                                              ; preds = %209, %111, %121
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %56) #16
  %211 = load i8, i8* %38, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  %212 = icmp slt i8 %211, 0
  br i1 %212, label %213, label %216

213:                                              ; preds = %210
  %214 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %215 = load i8*, i8** %214, align 8
  call void @_ZdlPv(i8* %215) #18
  br label %216

216:                                              ; preds = %51, %20, %210, %213
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %217 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %218 = add nsw i32 %217, -1
  store i32 %218, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %219 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %3, null
  br i1 %219, label %225, label %220

220:                                              ; preds = %216
  %221 = bitcast %"class.blink::protocol::CSS::SourceRange"* %3 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %222 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %221, align 8
  %223 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %222, i64 2
  %224 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %223, align 8
  call void %224(%"class.blink::protocol::CSS::SourceRange"* nonnull %3) #16
  br label %225

225:                                              ; preds = %216, %220
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent14setKeyframeKeyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_5ValueENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4360"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent14setKeyframeKeyERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_5ValueENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::CSS::SourceRange"* %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.std::__1::unique_ptr.4360"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent25MultipleStyleTextsActionsENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS20StyleDeclarationEditENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPNS_10HeapVectorINS_6MemberINS0_16StyleSheetActionEEELj0EEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4548"*, %"class.blink::HeapVector.4567"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.blink::InspectorStyleSheetBase"*, align 8
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.blink::SourceRange", align 4
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  %13 = alloca %"class.blink::InspectorCSSAgent::SetElementStyleAction"*, align 8
  %14 = alloca %"class.WTF::String", align 8
  %15 = alloca %"class.blink::InspectorCSSAgent::ModifyRuleAction"*, align 8
  %16 = alloca %"class.WTF::String", align 8
  %17 = getelementptr inbounds %"class.std::__1::vector.4548", %"class.std::__1::vector.4548"* %2, i64 0, i32 0, i32 1
  %18 = bitcast %"class.std::__1::unique_ptr.4550"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.4548"* %2 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %65, label %25

25:                                               ; preds = %4
  %26 = inttoptr i64 %21 to %"class.std::__1::unique_ptr.4550"*
  %27 = getelementptr inbounds %"class.std::__1::vector.4548", %"class.std::__1::vector.4548"* %2, i64 0, i32 0, i32 0
  %28 = bitcast %"class.blink::InspectorStyleSheetBase"** %6 to i8*
  %29 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  %30 = bitcast %"class.WTF::String"* %8 to i8*
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %33 = bitcast %"class.WTF::String"* %10 to i8*
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = bitcast %"class.blink::SourceRange"* %11 to i8*
  %39 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %11, i64 0, i32 0
  %40 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %11, i64 0, i32 1
  %41 = bitcast %"class.crdtp::DispatchResponse"* %12 to i8*
  %42 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 0
  %43 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %44 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %45 = bitcast %"class.std::__1::basic_string"* %43 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %46 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %45, i64 0, i32 1, i32 0
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = bitcast %"class.std::__1::basic_string"* %43 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %44 to i8*
  %50 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  %51 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %52 = bitcast %"class.std::__1::basic_string"* %51 to i8*
  %53 = bitcast %"class.blink::InspectorCSSAgent::ModifyRuleAction"** %15 to i8*
  %54 = bitcast %"class.WTF::String"* %16 to i8*
  %55 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %16, i64 0, i32 0, i32 0
  %56 = bitcast %"class.blink::InspectorCSSAgent::ModifyRuleAction"** %15 to i8**
  %57 = getelementptr inbounds %"class.blink::HeapVector.4567", %"class.blink::HeapVector.4567"* %3, i64 0, i32 0, i32 0, i32 0, i32 2
  %58 = getelementptr inbounds %"class.blink::HeapVector.4567", %"class.blink::HeapVector.4567"* %3, i64 0, i32 0, i32 0, i32 0, i32 1
  %59 = getelementptr inbounds %"class.blink::HeapVector.4567", %"class.blink::HeapVector.4567"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %60 = getelementptr inbounds %"class.blink::HeapVector.4567", %"class.blink::HeapVector.4567"* %3, i64 0, i32 0
  %61 = bitcast %"class.blink::InspectorCSSAgent::SetElementStyleAction"** %13 to i8*
  %62 = bitcast %"class.WTF::String"* %14 to i8*
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %64 = bitcast %"class.blink::InspectorCSSAgent::SetElementStyleAction"** %13 to i8**
  br label %81

65:                                               ; preds = %4
  %66 = tail call i8* @_Znwm(i64 32) #18
  %67 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %66, i8** %67, align 8
  %68 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %69 = bitcast i64* %68 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %69, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %66, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.6, i64 0, i64 0), i64 25, i1 false) #16
  %70 = getelementptr inbounds i8, i8* %66, i64 25
  store i8 0, i8* %70, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #16
  %71 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %72 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %71, i64 0, i32 1, i32 0
  %73 = load i8, i8* %72, align 1
  %74 = icmp slt i8 %73, 0
  br i1 %74, label %75, label %305

75:                                               ; preds = %65
  %76 = load i8*, i8** %67, align 8
  call void @_ZdlPv(i8* %76) #18
  br label %305

77:                                               ; preds = %301
  %78 = icmp ult i64 %303, %23
  br i1 %78, label %79, label %304

79:                                               ; preds = %77
  %80 = load %"class.std::__1::unique_ptr.4550"*, %"class.std::__1::unique_ptr.4550"** %27, align 8
  br label %81

81:                                               ; preds = %79, %25
  %82 = phi %"class.std::__1::unique_ptr.4550"* [ %26, %25 ], [ %80, %79 ]
  %83 = phi i64 [ 0, %25 ], [ %303, %79 ]
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.4550", %"class.std::__1::unique_ptr.4550"* %82, i64 %83, i32 0, i32 0, i32 0
  %85 = load %"class.blink::protocol::CSS::StyleDeclarationEdit"*, %"class.blink::protocol::CSS::StyleDeclarationEdit"** %84, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  store %"class.blink::InspectorStyleSheetBase"* null, %"class.blink::InspectorStyleSheetBase"** %6, align 8
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 32, i1 false)
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %30) #16
  %86 = getelementptr inbounds %"class.blink::protocol::CSS::StyleDeclarationEdit", %"class.blink::protocol::CSS::StyleDeclarationEdit"* %85, i64 0, i32 1, i32 0, i32 0
  %87 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %86, align 8
  %88 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %88, label %106, label %89

89:                                               ; preds = %81
  %90 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load atomic i32, i32* %90 monotonic, align 4
  %92 = and i32 %91, 2
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %106

94:                                               ; preds = %89
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  %97 = zext i32 %96 to i33
  %98 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %97, i33 1) #16
  %99 = extractvalue { i33, i1 } %98, 1
  %100 = extractvalue { i33, i1 } %98, 0
  %101 = icmp slt i33 %100, 0
  %102 = or i1 %99, %101
  br i1 %102, label %103, label %104, !prof !3

103:                                              ; preds = %94
  call void @llvm.trap() #16
  unreachable

104:                                              ; preds = %94
  %105 = trunc i33 %100 to i32
  store i32 %105, i32* %95, align 4
  br label %106

106:                                              ; preds = %81, %89, %104
  store %"class.WTF::StringImpl"* %87, %"class.WTF::StringImpl"** %31, align 8
  call void @_ZN5blink17InspectorCSSAgent21AssertStyleSheetForIdERKN3WTF6StringERPNS_23InspectorStyleSheetBaseE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* nonnull dereferenceable(8) %8, %"class.blink::InspectorStyleSheetBase"** nonnull dereferenceable(8) %6)
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #16
  br label %122

122:                                              ; preds = %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %30) #16
  %123 = load i32, i32* %32, align 8
  %124 = icmp eq i32 %123, 1
  br i1 %124, label %148, label %125

125:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  %126 = add nuw i64 %83, 1
  %127 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str.7, i64 0, i64 0), i64 %126, i64 %23) #16
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %34, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %9, %"class.WTF::String"* nonnull %10, i32 0) #16
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #16
  %128 = load i8, i8* %36, align 1
  %129 = icmp slt i8 %128, 0
  br i1 %129, label %130, label %132

130:                                              ; preds = %125
  %131 = load i8*, i8** %37, align 8
  call void @_ZdlPv(i8* %131) #18
  br label %132

132:                                              ; preds = %125, %130
  %133 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %134 = icmp eq %"class.WTF::StringImpl"* %133, null
  br i1 %134, label %294, label %135

135:                                              ; preds = %132
  %136 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %137 = load atomic i32, i32* %136 monotonic, align 4
  %138 = and i32 %137, 2
  %139 = icmp eq i32 %138, 0
  %140 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %133, i64 0, i32 0
  %141 = load i32, i32* %140, align 4
  br i1 %139, label %142, label %144

142:                                              ; preds = %135
  %143 = add i32 %141, -1
  store i32 %143, i32* %140, align 4
  br label %144

144:                                              ; preds = %142, %135
  %145 = phi i32 [ %143, %142 ], [ %141, %135 ]
  %146 = icmp eq i32 %145, 0
  br i1 %146, label %147, label %294

147:                                              ; preds = %144
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %133) #16
  br label %294

148:                                              ; preds = %122
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %38) #16
  store i32 -1431655766, i32* %39, align 4
  store i32 -1431655766, i32* %40, align 4
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* nonnull %11) #16
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #16
  %149 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %6, align 8
  %150 = getelementptr inbounds %"class.blink::protocol::CSS::StyleDeclarationEdit", %"class.blink::protocol::CSS::StyleDeclarationEdit"* %85, i64 0, i32 2, i32 0, i32 0, i32 0
  %151 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %150, align 8
  call fastcc void @_ZN5blinkL22JsonRangeToSourceRangeEPNS_23InspectorStyleSheetBaseEPNS_8protocol3CSS11SourceRangeEPNS_11SourceRangeE(%"class.crdtp::DispatchResponse"* nonnull sret %12, %"class.blink::InspectorStyleSheetBase"* %149, %"class.blink::protocol::CSS::SourceRange"* %151, %"class.blink::SourceRange"* nonnull %11)
  %152 = load i32, i32* %42, align 8
  store i32 %152, i32* %32, align 8
  %153 = load i8, i8* %46, align 1
  %154 = icmp slt i8 %153, 0
  %155 = bitcast %"class.blink::InspectorStyleSheetBase"* %149 to %"class.blink::InspectorStyleSheet"*
  %156 = bitcast %"class.blink::InspectorStyleSheetBase"* %149 to %"class.blink::InspectorStyleSheetForInlineStyle"*
  br i1 %154, label %157, label %160

157:                                              ; preds = %148
  %158 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %158) #18
  %159 = load i32, i32* %32, align 8
  br label %160

160:                                              ; preds = %157, %148
  %161 = phi i32 [ %159, %157 ], [ %152, %148 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #16
  %162 = icmp eq i32 %161, 1
  br i1 %162, label %164, label %163

163:                                              ; preds = %160
  store i32 %161, i32* %50, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %52, i8* align 8 %48, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #16
  br label %294

164:                                              ; preds = %160
  %165 = bitcast %"class.blink::InspectorStyleSheetBase"* %149 to i1 (%"class.blink::InspectorStyleSheetBase"*)***
  %166 = load i1 (%"class.blink::InspectorStyleSheetBase"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*)*** %165, align 8
  %167 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*)** %166, i64 7
  %168 = load i1 (%"class.blink::InspectorStyleSheetBase"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*)** %167, align 8
  %169 = call zeroext i1 %168(%"class.blink::InspectorStyleSheetBase"* %149) #16
  br i1 %169, label %170, label %232

170:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #16
  store %"class.blink::InspectorCSSAgent::SetElementStyleAction"* inttoptr (i64 -6148914691236517206 to %"class.blink::InspectorCSSAgent::SetElementStyleAction"*), %"class.blink::InspectorCSSAgent::SetElementStyleAction"** %13, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %62) #16
  %171 = getelementptr inbounds %"class.blink::protocol::CSS::StyleDeclarationEdit", %"class.blink::protocol::CSS::StyleDeclarationEdit"* %85, i64 0, i32 3, i32 0, i32 0
  %172 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %171, align 8
  %173 = icmp eq %"class.WTF::StringImpl"* %172, null
  br i1 %173, label %191, label %174

174:                                              ; preds = %170
  %175 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %176 = load atomic i32, i32* %175 monotonic, align 4
  %177 = and i32 %176, 2
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %191

179:                                              ; preds = %174
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %172, i64 0, i32 0
  %181 = load i32, i32* %180, align 4
  %182 = zext i32 %181 to i33
  %183 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %182, i33 1) #16
  %184 = extractvalue { i33, i1 } %183, 1
  %185 = extractvalue { i33, i1 } %183, 0
  %186 = icmp slt i33 %185, 0
  %187 = or i1 %184, %186
  br i1 %187, label %188, label %189, !prof !3

188:                                              ; preds = %179
  call void @llvm.trap() #16
  unreachable

189:                                              ; preds = %179
  %190 = trunc i33 %185 to i32
  store i32 %190, i32* %180, align 4
  br label %191

191:                                              ; preds = %170, %174, %189
  store %"class.WTF::StringImpl"* %172, %"class.WTF::StringImpl"** %63, align 8
  %192 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 40) #16
  %193 = bitcast i8* %192 to %"class.blink::InspectorCSSAgent::SetElementStyleAction"*
  call void @_ZN5blink17InspectorCSSAgent21SetElementStyleActionC2EPNS_33InspectorStyleSheetForInlineStyleERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"* %193, %"class.blink::InspectorStyleSheetForInlineStyle"* %156, %"class.WTF::String"* nonnull dereferenceable(8) %14) #16
  %194 = getelementptr inbounds i8, i8* %192, i64 -4
  %195 = bitcast i8* %194 to i16*
  %196 = load atomic i16, i16* %195 monotonic, align 2
  %197 = or i16 %196, 1
  store atomic i16 %197, i16* %195 release, align 2
  %198 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %63, align 8
  %199 = icmp eq %"class.WTF::StringImpl"* %198, null
  br i1 %199, label %213, label %200

200:                                              ; preds = %191
  %201 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %202 = load atomic i32, i32* %201 monotonic, align 4
  %203 = and i32 %202, 2
  %204 = icmp eq i32 %203, 0
  %205 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %198, i64 0, i32 0
  %206 = load i32, i32* %205, align 4
  br i1 %204, label %207, label %209

207:                                              ; preds = %200
  %208 = add i32 %206, -1
  store i32 %208, i32* %205, align 4
  br label %209

209:                                              ; preds = %207, %200
  %210 = phi i32 [ %208, %207 ], [ %206, %200 ]
  %211 = icmp eq i32 %210, 0
  br i1 %211, label %212, label %213

212:                                              ; preds = %209
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %198) #16
  br label %213

213:                                              ; preds = %191, %209, %212
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %62) #16
  store i8* %192, i8** %64, align 8
  %214 = load i32, i32* %57, align 4
  %215 = load i32, i32* %58, align 8
  %216 = icmp eq i32 %214, %215
  br i1 %216, label %230, label %217, !prof !3

217:                                              ; preds = %213
  %218 = ptrtoint i8* %192 to i64
  %219 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %59, align 8
  %220 = zext i32 %214 to i64
  %221 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %219, i64 %220
  %222 = bitcast %"class.blink::Member.4573"* %221 to i64*
  store atomic i64 %218, i64* %222 monotonic, align 8
  %223 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %227, label %225

225:                                              ; preds = %217
  %226 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %192) #16
  br label %227

227:                                              ; preds = %225, %217
  %228 = load i32, i32* %57, align 4
  %229 = add i32 %228, 1
  store i32 %229, i32* %57, align 4
  br label %231

230:                                              ; preds = %213
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS3_21SetElementStyleActionEEEvOT_(%"class.WTF::Vector.4570"* %60, %"class.blink::InspectorCSSAgent::SetElementStyleAction"** nonnull dereferenceable(8) %13) #16
  br label %231

231:                                              ; preds = %227, %230
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #16
  br label %294

232:                                              ; preds = %164
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  store %"class.blink::InspectorCSSAgent::ModifyRuleAction"* inttoptr (i64 -6148914691236517206 to %"class.blink::InspectorCSSAgent::ModifyRuleAction"*), %"class.blink::InspectorCSSAgent::ModifyRuleAction"** %15, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #16
  %233 = getelementptr inbounds %"class.blink::protocol::CSS::StyleDeclarationEdit", %"class.blink::protocol::CSS::StyleDeclarationEdit"* %85, i64 0, i32 3, i32 0, i32 0
  %234 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %233, align 8
  %235 = icmp eq %"class.WTF::StringImpl"* %234, null
  br i1 %235, label %253, label %236

236:                                              ; preds = %232
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %238 = load atomic i32, i32* %237 monotonic, align 4
  %239 = and i32 %238, 2
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %253

241:                                              ; preds = %236
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %234, i64 0, i32 0
  %243 = load i32, i32* %242, align 4
  %244 = zext i32 %243 to i33
  %245 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %244, i33 1) #16
  %246 = extractvalue { i33, i1 } %245, 1
  %247 = extractvalue { i33, i1 } %245, 0
  %248 = icmp slt i33 %247, 0
  %249 = or i1 %246, %248
  br i1 %249, label %250, label %251, !prof !3

250:                                              ; preds = %241
  call void @llvm.trap() #16
  unreachable

251:                                              ; preds = %241
  %252 = trunc i33 %247 to i32
  store i32 %252, i32* %242, align 4
  br label %253

253:                                              ; preds = %232, %236, %251
  store %"class.WTF::StringImpl"* %234, %"class.WTF::StringImpl"** %55, align 8
  %254 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 72) #16
  %255 = bitcast i8* %254 to %"class.blink::InspectorCSSAgent::ModifyRuleAction"*
  call void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionC2ENS1_4TypeEPNS_19InspectorStyleSheetERKNS_11SourceRangeERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"* %255, i32 1, %"class.blink::InspectorStyleSheet"* %155, %"class.blink::SourceRange"* nonnull dereferenceable(8) %11, %"class.WTF::String"* nonnull dereferenceable(8) %16) #16
  %256 = getelementptr inbounds i8, i8* %254, i64 -4
  %257 = bitcast i8* %256 to i16*
  %258 = load atomic i16, i16* %257 monotonic, align 2
  %259 = or i16 %258, 1
  store atomic i16 %259, i16* %257 release, align 2
  %260 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %261 = icmp eq %"class.WTF::StringImpl"* %260, null
  br i1 %261, label %275, label %262

262:                                              ; preds = %253
  %263 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %264 = load atomic i32, i32* %263 monotonic, align 4
  %265 = and i32 %264, 2
  %266 = icmp eq i32 %265, 0
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %260, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  br i1 %266, label %269, label %271

269:                                              ; preds = %262
  %270 = add i32 %268, -1
  store i32 %270, i32* %267, align 4
  br label %271

271:                                              ; preds = %269, %262
  %272 = phi i32 [ %270, %269 ], [ %268, %262 ]
  %273 = icmp eq i32 %272, 0
  br i1 %273, label %274, label %275

274:                                              ; preds = %271
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %260) #16
  br label %275

275:                                              ; preds = %253, %271, %274
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #16
  store i8* %254, i8** %56, align 8
  %276 = load i32, i32* %57, align 4
  %277 = load i32, i32* %58, align 8
  %278 = icmp eq i32 %276, %277
  br i1 %278, label %292, label %279, !prof !3

279:                                              ; preds = %275
  %280 = ptrtoint i8* %254 to i64
  %281 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %59, align 8
  %282 = zext i32 %276 to i64
  %283 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %281, i64 %282
  %284 = bitcast %"class.blink::Member.4573"* %283 to i64*
  store atomic i64 %280, i64* %284 monotonic, align 8
  %285 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %286 = icmp eq i32 %285, 0
  br i1 %286, label %289, label %287

287:                                              ; preds = %279
  %288 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %254) #16
  br label %289

289:                                              ; preds = %287, %279
  %290 = load i32, i32* %57, align 4
  %291 = add i32 %290, 1
  store i32 %291, i32* %57, align 4
  br label %293

292:                                              ; preds = %275
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS3_16ModifyRuleActionEEEvOT_(%"class.WTF::Vector.4570"* %60, %"class.blink::InspectorCSSAgent::ModifyRuleAction"** nonnull dereferenceable(8) %15) #16
  br label %293

293:                                              ; preds = %289, %292
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  br label %294

294:                                              ; preds = %163, %293, %231, %147, %144, %132
  %295 = phi i8* [ %33, %132 ], [ %33, %144 ], [ %33, %147 ], [ %38, %231 ], [ %38, %293 ], [ %38, %163 ]
  %296 = phi i32 [ 1, %132 ], [ 1, %144 ], [ 1, %147 ], [ 0, %231 ], [ 0, %293 ], [ 1, %163 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %295) #16
  %297 = load i8, i8* %46, align 1
  %298 = icmp slt i8 %297, 0
  br i1 %298, label %299, label %301

299:                                              ; preds = %294
  %300 = load i8*, i8** %47, align 8
  call void @_ZdlPv(i8* %300) #18
  br label %301

301:                                              ; preds = %294, %299
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  %302 = icmp eq i32 %296, 0
  %303 = add nuw i64 %83, 1
  br i1 %302, label %77, label %305

304:                                              ; preds = %77
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %305

305:                                              ; preds = %301, %75, %65, %304
  %306 = icmp eq %"class.std::__1::vector.4548"* %2, null
  br i1 %306, label %335, label %307

307:                                              ; preds = %305
  %308 = getelementptr inbounds %"class.std::__1::vector.4548", %"class.std::__1::vector.4548"* %2, i64 0, i32 0, i32 0
  %309 = load %"class.std::__1::unique_ptr.4550"*, %"class.std::__1::unique_ptr.4550"** %308, align 8
  %310 = icmp eq %"class.std::__1::unique_ptr.4550"* %309, null
  br i1 %310, label %333, label %311

311:                                              ; preds = %307
  %312 = bitcast %"class.std::__1::unique_ptr.4550"* %309 to i8*
  %313 = load %"class.std::__1::unique_ptr.4550"*, %"class.std::__1::unique_ptr.4550"** %17, align 8
  %314 = icmp eq %"class.std::__1::unique_ptr.4550"* %313, %309
  br i1 %314, label %331, label %315

315:                                              ; preds = %311, %326
  %316 = phi %"class.std::__1::unique_ptr.4550"* [ %317, %326 ], [ %313, %311 ]
  %317 = getelementptr inbounds %"class.std::__1::unique_ptr.4550", %"class.std::__1::unique_ptr.4550"* %316, i64 -1
  %318 = getelementptr inbounds %"class.std::__1::unique_ptr.4550", %"class.std::__1::unique_ptr.4550"* %317, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.blink::protocol::CSS::StyleDeclarationEdit"*, %"class.blink::protocol::CSS::StyleDeclarationEdit"** %318, align 8
  store %"class.blink::protocol::CSS::StyleDeclarationEdit"* null, %"class.blink::protocol::CSS::StyleDeclarationEdit"** %318, align 8
  %320 = icmp eq %"class.blink::protocol::CSS::StyleDeclarationEdit"* %319, null
  br i1 %320, label %326, label %321

321:                                              ; preds = %315
  %322 = bitcast %"class.blink::protocol::CSS::StyleDeclarationEdit"* %319 to void (%"class.blink::protocol::CSS::StyleDeclarationEdit"*)***
  %323 = load void (%"class.blink::protocol::CSS::StyleDeclarationEdit"*)**, void (%"class.blink::protocol::CSS::StyleDeclarationEdit"*)*** %322, align 8
  %324 = getelementptr inbounds void (%"class.blink::protocol::CSS::StyleDeclarationEdit"*)*, void (%"class.blink::protocol::CSS::StyleDeclarationEdit"*)** %323, i64 2
  %325 = load void (%"class.blink::protocol::CSS::StyleDeclarationEdit"*)*, void (%"class.blink::protocol::CSS::StyleDeclarationEdit"*)** %324, align 8
  call void %325(%"class.blink::protocol::CSS::StyleDeclarationEdit"* nonnull %319) #16
  br label %326

326:                                              ; preds = %321, %315
  %327 = icmp eq %"class.std::__1::unique_ptr.4550"* %317, %309
  br i1 %327, label %328, label %315

328:                                              ; preds = %326
  %329 = bitcast %"class.std::__1::vector.4548"* %2 to i8**
  %330 = load i8*, i8** %329, align 8
  br label %331

331:                                              ; preds = %328, %311
  %332 = phi i8* [ %330, %328 ], [ %312, %311 ]
  store %"class.std::__1::unique_ptr.4550"* %309, %"class.std::__1::unique_ptr.4550"** %17, align 8
  call void @_ZdlPv(i8* %332) #18
  br label %333

333:                                              ; preds = %331, %307
  %334 = bitcast %"class.std::__1::vector.4548"* %2 to i8*
  call void @_ZdlPv(i8* %334) #18
  br label %335

335:                                              ; preds = %305, %333
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF6String6FormatEPKcz(i8*, ...) local_unnamed_addr #1

declare void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* sret, %"class.WTF::String"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent13setStyleTextsENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS20StyleDeclarationEditENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPNS2_INS3_INS2_INS5_8CSSStyleENS7_ISF_EEEENSA_ISH_EEEENS7_ISJ_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4548"*, %"class.std::__1::unique_ptr.4576"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.4567", align 8
  %6 = alloca %"class.crdtp::DispatchResponse", align 8
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.crdtp::DispatchResponse", align 8
  %13 = alloca %"class.std::__1::unique_ptr.4224", align 8
  %14 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %15 = add nsw i32 %14, 1
  store i32 %15, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %16 = bitcast %"class.blink::HeapVector.4567"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 0, i64 16, i1 false) #16
  %17 = bitcast %"class.crdtp::DispatchResponse"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %17) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent25MultipleStyleTextsActionsENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS20StyleDeclarationEditENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPNS_10HeapVectorINS_6MemberINS0_16StyleSheetActionEEELj0EEE(%"class.crdtp::DispatchResponse"* nonnull sret %6, %"class.blink::InspectorCSSAgent"* %1, %"class.std::__1::vector.4548"* %2, %"class.blink::HeapVector.4567"* nonnull %5)
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %27, label %21

21:                                               ; preds = %4
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %19, i32* %22, align 8
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #16
  br label %257

27:                                               ; preds = %4
  %28 = getelementptr inbounds %"class.blink::HeapVector.4567", %"class.blink::HeapVector.4567"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %29 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %29) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 56, i1 false)
  %30 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %31 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %31, align 8
  %32 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %32, align 2
  %33 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %34 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %35 = bitcast %"class.WTF::StringImpl"** %34 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %35, i8 0, i64 16, i1 false) #16
  %36 = bitcast i8** %33 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %36, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %30, align 8
  %37 = getelementptr inbounds %"class.blink::HeapVector.4567", %"class.blink::HeapVector.4567"* %5, i64 0, i32 0
  %38 = load i32, i32* %28, align 4
  %39 = call i8* @_Znwm(i64 24) #18
  %40 = bitcast i8* %39 to %"class.std::__1::vector.4579"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %39, i8 0, i64 24, i1 false) #16
  %41 = ptrtoint i8* %39 to i64
  %42 = icmp sgt i32 %38, 0
  br i1 %42, label %43, label %175

43:                                               ; preds = %27
  %44 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  %45 = bitcast %"class.std::__1::unique_ptr.4224"* %13 to i8*
  %46 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %13, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds i8, i8* %39, i64 8
  %48 = bitcast i8* %47 to %"class.std::__1::unique_ptr.4224"**
  %49 = getelementptr inbounds i8, i8* %39, i64 16
  %50 = bitcast i8* %49 to %"class.std::__1::unique_ptr.4224"**
  %51 = bitcast i8* %47 to i64*
  br label %55

52:                                               ; preds = %172
  br i1 %42, label %53, label %175

53:                                               ; preds = %52
  %54 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  br label %210

55:                                               ; preds = %172, %43
  %56 = phi i32 [ 0, %43 ], [ %173, %172 ]
  %57 = call dereferenceable(8) %"class.blink::Member.4573"* @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4570"* nonnull %37, i32 %56)
  %58 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.blink::InspectorCSSAgent::StyleSheetAction"*, %"class.blink::InspectorCSSAgent::StyleSheetAction"** %58, align 8
  %60 = getelementptr inbounds %"class.blink::InspectorCSSAgent::StyleSheetAction", %"class.blink::InspectorCSSAgent::StyleSheetAction"* %59, i64 0, i32 0
  %61 = bitcast %"class.blink::InspectorCSSAgent::StyleSheetAction"* %59 to i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)***
  %62 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*** %61, align 8
  %63 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %62, i64 6
  %64 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %63, align 8
  %65 = call zeroext i1 %64(%"class.blink::InspectorHistory::Action"* %60, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %44) #16
  br i1 %65, label %149, label %66

66:                                               ; preds = %55
  %67 = icmp eq i32 %56, 0
  br i1 %67, label %78, label %68

68:                                               ; preds = %66
  %69 = bitcast %"class.blink::DummyExceptionStateForTesting"* %8 to i8*
  %70 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 0
  %71 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 0
  %72 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 1
  %73 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 1, i32 2
  %74 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0, i32 5, i32 0, i32 0
  %75 = bitcast %"class.WTF::StringImpl"** %74 to i8*
  %76 = bitcast i8** %73 to i8*
  %77 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %8, i64 0, i32 0
  br label %136

78:                                               ; preds = %136, %66
  %79 = bitcast %"class.std::__1::basic_string"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %79) #16
  %80 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #16
  %81 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.8, i64 0, i64 0), i32 %56) #16
  %82 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %81, %"class.WTF::StringImpl"** %82, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %10, %"class.WTF::String"* nonnull %11, i32 0) #16
  %83 = bitcast %"class.crdtp::DispatchResponse"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %83) #16
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* nonnull sret %12, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %44) #16
  %84 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1
  %85 = bitcast %"class.std::__1::basic_string"* %84 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %86 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %85, i64 0, i32 1, i32 0
  %87 = load i8, i8* %86, align 1, !noalias !39
  %88 = icmp slt i8 %87, 0
  %89 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load i8*, i8** %89, align 8, !noalias !39
  %91 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %92 = load i64, i64* %91, align 8, !noalias !39
  %93 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %94 = zext i8 %87 to i64
  %95 = select i1 %88, i8* %90, i8* %93
  %96 = select i1 %88, i64 %92, i64 %94
  %97 = call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"* nonnull %10, i8* %95, i64 %96) #16, !noalias !39
  %98 = bitcast %"class.std::__1::basic_string"* %9 to i8*
  %99 = bitcast %"class.std::__1::basic_string"* %97 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %98, i8* align 8 %99, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %99, i8 0, i64 24, i1 false) #16, !noalias !39
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #16
  %100 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %78
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  call void @_ZdlPv(i8* %106) #18
  br label %107

107:                                              ; preds = %78, %104
  %108 = load i8, i8* %86, align 1
  %109 = icmp slt i8 %108, 0
  br i1 %109, label %110, label %112

110:                                              ; preds = %107
  %111 = load i8*, i8** %89, align 8
  call void @_ZdlPv(i8* %111) #18
  br label %112

112:                                              ; preds = %107, %110
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %83) #16
  %113 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  %115 = load i8, i8* %114, align 1
  %116 = icmp slt i8 %115, 0
  br i1 %116, label %117, label %120

117:                                              ; preds = %112
  %118 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %119 = load i8*, i8** %118, align 8
  call void @_ZdlPv(i8* %119) #18
  br label %120

120:                                              ; preds = %112, %117
  %121 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %82, align 8
  %122 = icmp eq %"class.WTF::StringImpl"* %121, null
  br i1 %122, label %221, label %123

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %125 = load atomic i32, i32* %124 monotonic, align 4
  %126 = and i32 %125, 2
  %127 = icmp eq i32 %126, 0
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %121, i64 0, i32 0
  %129 = load i32, i32* %128, align 4
  br i1 %127, label %130, label %132

130:                                              ; preds = %123
  %131 = add i32 %129, -1
  store i32 %131, i32* %128, align 4
  br label %132

132:                                              ; preds = %130, %123
  %133 = phi i32 [ %131, %130 ], [ %129, %123 ]
  %134 = icmp eq i32 %133, 0
  br i1 %134, label %135, label %221

135:                                              ; preds = %132
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %121) #16
  br label %221

136:                                              ; preds = %68, %136
  %137 = phi i32 [ %56, %68 ], [ %138, %136 ]
  %138 = add nsw i32 %137, -1
  %139 = call dereferenceable(8) %"class.blink::Member.4573"* @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4570"* nonnull %37, i32 %138)
  %140 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %139, i64 0, i32 0, i32 0
  %141 = load %"class.blink::InspectorCSSAgent::StyleSheetAction"*, %"class.blink::InspectorCSSAgent::StyleSheetAction"** %140, align 8
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %69) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %69, i8 -86, i64 56, i1 false)
  store i16 1, i16* %71, align 8
  store i16 0, i16* %72, align 2
  call void @llvm.memset.p0i8.i64(i8* align 8 %75, i8 0, i64 16, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %70, align 8
  %142 = getelementptr inbounds %"class.blink::InspectorCSSAgent::StyleSheetAction", %"class.blink::InspectorCSSAgent::StyleSheetAction"* %141, i64 0, i32 0
  %143 = bitcast %"class.blink::InspectorCSSAgent::StyleSheetAction"* %141 to i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)***
  %144 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*** %143, align 8
  %145 = getelementptr inbounds i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %144, i64 7
  %146 = load i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorHistory::Action"*, %"class.blink::ExceptionState"*)** %145, align 8
  %147 = call zeroext i1 %146(%"class.blink::InspectorHistory::Action"* %142, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %77) #16
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %69) #16
  %148 = icmp sgt i32 %138, 0
  br i1 %148, label %136, label %78

149:                                              ; preds = %55
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #16
  %150 = bitcast %"class.blink::InspectorCSSAgent::StyleSheetAction"* %59 to %"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)***
  %151 = load %"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)**, %"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)*** %150, align 8
  %152 = getelementptr inbounds %"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)*, %"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)** %151, i64 11
  %153 = load %"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)*, %"class.blink::protocol::CSS::CSSStyle"* (%"class.blink::InspectorCSSAgent::StyleSheetAction"*)** %152, align 8
  %154 = call %"class.blink::protocol::CSS::CSSStyle"* %153(%"class.blink::InspectorCSSAgent::StyleSheetAction"* %59) #16
  store %"class.blink::protocol::CSS::CSSStyle"* %154, %"class.blink::protocol::CSS::CSSStyle"** %46, align 8
  %155 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %48, align 8
  %156 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %50, align 8
  %157 = icmp ult %"class.std::__1::unique_ptr.4224"* %155, %156
  br i1 %157, label %158, label %163

158:                                              ; preds = %149
  %159 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %154 to i64
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %46, align 8
  %160 = bitcast %"class.std::__1::unique_ptr.4224"* %155 to i64*
  store i64 %159, i64* %160, align 8
  %161 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %155, i64 1
  %162 = ptrtoint %"class.std::__1::unique_ptr.4224"* %161 to i64
  store i64 %162, i64* %51, align 8
  br label %164

163:                                              ; preds = %149
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS8CSSStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4579"* nonnull %40, %"class.std::__1::unique_ptr.4224"* nonnull dereferenceable(8) %13) #16
  br label %164

164:                                              ; preds = %158, %163
  %165 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %46, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %46, align 8
  %166 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %165, null
  br i1 %166, label %172, label %167

167:                                              ; preds = %164
  %168 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %165 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %169 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %168, align 8
  %170 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %169, i64 2
  %171 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %170, align 8
  call void %171(%"class.blink::protocol::CSS::CSSStyle"* nonnull %165) #16
  br label %172

172:                                              ; preds = %167, %164
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #16
  %173 = add nuw nsw i32 %56, 1
  %174 = icmp eq i32 %173, %38
  br i1 %174, label %52, label %55

175:                                              ; preds = %210, %27, %52
  %176 = getelementptr inbounds %"class.std::__1::unique_ptr.4576", %"class.std::__1::unique_ptr.4576"* %3, i64 0, i32 0, i32 0, i32 0
  %177 = load %"class.std::__1::vector.4579"*, %"class.std::__1::vector.4579"** %176, align 8
  %178 = bitcast %"class.std::__1::unique_ptr.4576"* %3 to i64*
  store i64 %41, i64* %178, align 8
  %179 = icmp eq %"class.std::__1::vector.4579"* %177, null
  br i1 %179, label %209, label %180

180:                                              ; preds = %175
  %181 = getelementptr inbounds %"class.std::__1::vector.4579", %"class.std::__1::vector.4579"* %177, i64 0, i32 0, i32 0
  %182 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %181, align 8
  %183 = icmp eq %"class.std::__1::unique_ptr.4224"* %182, null
  br i1 %183, label %207, label %184

184:                                              ; preds = %180
  %185 = bitcast %"class.std::__1::unique_ptr.4224"* %182 to i8*
  %186 = getelementptr inbounds %"class.std::__1::vector.4579", %"class.std::__1::vector.4579"* %177, i64 0, i32 0, i32 1
  %187 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %186, align 8
  %188 = icmp eq %"class.std::__1::unique_ptr.4224"* %187, %182
  br i1 %188, label %205, label %189

189:                                              ; preds = %184, %200
  %190 = phi %"class.std::__1::unique_ptr.4224"* [ %191, %200 ], [ %187, %184 ]
  %191 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %190, i64 -1
  %192 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %191, i64 0, i32 0, i32 0, i32 0
  %193 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %192, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %192, align 8
  %194 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %193, null
  br i1 %194, label %200, label %195

195:                                              ; preds = %189
  %196 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %193 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %197 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %196, align 8
  %198 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %197, i64 2
  %199 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %198, align 8
  call void %199(%"class.blink::protocol::CSS::CSSStyle"* nonnull %193) #16
  br label %200

200:                                              ; preds = %195, %189
  %201 = icmp eq %"class.std::__1::unique_ptr.4224"* %191, %182
  br i1 %201, label %202, label %189

202:                                              ; preds = %200
  %203 = bitcast %"class.std::__1::vector.4579"* %177 to i8**
  %204 = load i8*, i8** %203, align 8
  br label %205

205:                                              ; preds = %202, %184
  %206 = phi i8* [ %204, %202 ], [ %185, %184 ]
  store %"class.std::__1::unique_ptr.4224"* %182, %"class.std::__1::unique_ptr.4224"** %186, align 8
  call void @_ZdlPv(i8* %206) #18
  br label %207

207:                                              ; preds = %205, %180
  %208 = bitcast %"class.std::__1::vector.4579"* %177 to i8*
  call void @_ZdlPv(i8* %208) #18
  br label %209

209:                                              ; preds = %207, %175
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %248

210:                                              ; preds = %210, %53
  %211 = phi i32 [ 0, %53 ], [ %219, %210 ]
  %212 = call dereferenceable(8) %"class.blink::Member.4573"* @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4570"* nonnull %37, i32 %211)
  %213 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %212, i64 0, i32 0, i32 0
  %214 = load %"class.blink::InspectorCSSAgent::StyleSheetAction"*, %"class.blink::InspectorCSSAgent::StyleSheetAction"** %213, align 8
  %215 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %54, align 8
  %216 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %215, i64 0, i32 17, i32 0, i32 0
  %217 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %216, align 8
  %218 = getelementptr inbounds %"class.blink::InspectorCSSAgent::StyleSheetAction", %"class.blink::InspectorCSSAgent::StyleSheetAction"* %214, i64 0, i32 0
  call void @_ZN5blink16InspectorHistory21AppendPerformedActionEPNS0_6ActionE(%"class.blink::InspectorHistory"* %217, %"class.blink::InspectorHistory::Action"* %218) #16
  %219 = add nuw nsw i32 %211, 1
  %220 = icmp eq i32 %219, %38
  br i1 %220, label %175, label %210

221:                                              ; preds = %135, %132, %120
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %79) #16
  %222 = bitcast i8* %39 to %"class.std::__1::unique_ptr.4224"**
  %223 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %222, align 8
  %224 = icmp eq %"class.std::__1::unique_ptr.4224"* %223, null
  br i1 %224, label %247, label %225

225:                                              ; preds = %221
  %226 = bitcast %"class.std::__1::unique_ptr.4224"* %223 to i8*
  %227 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %48, align 8
  %228 = icmp eq %"class.std::__1::unique_ptr.4224"* %227, %223
  br i1 %228, label %245, label %229

229:                                              ; preds = %225, %240
  %230 = phi %"class.std::__1::unique_ptr.4224"* [ %231, %240 ], [ %227, %225 ]
  %231 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %230, i64 -1
  %232 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %231, i64 0, i32 0, i32 0, i32 0
  %233 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %232, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %232, align 8
  %234 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %233, null
  br i1 %234, label %240, label %235

235:                                              ; preds = %229
  %236 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %233 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %237 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %236, align 8
  %238 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %237, i64 2
  %239 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %238, align 8
  call void %239(%"class.blink::protocol::CSS::CSSStyle"* nonnull %233) #16
  br label %240

240:                                              ; preds = %235, %229
  %241 = icmp eq %"class.std::__1::unique_ptr.4224"* %231, %223
  br i1 %241, label %242, label %229

242:                                              ; preds = %240
  %243 = bitcast i8* %39 to i8**
  %244 = load i8*, i8** %243, align 8
  br label %245

245:                                              ; preds = %242, %225
  %246 = phi i8* [ %244, %242 ], [ %226, %225 ]
  store %"class.std::__1::unique_ptr.4224"* %223, %"class.std::__1::unique_ptr.4224"** %48, align 8
  call void @_ZdlPv(i8* %246) #18
  br label %247

247:                                              ; preds = %245, %221
  call void @_ZdlPv(i8* nonnull %39) #18
  br label %248

248:                                              ; preds = %247, %209
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %29) #16
  %249 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1
  %250 = bitcast %"class.std::__1::basic_string"* %249 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %251 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %250, i64 0, i32 1, i32 0
  %252 = load i8, i8* %251, align 1
  %253 = icmp slt i8 %252, 0
  br i1 %253, label %254, label %257

254:                                              ; preds = %248
  %255 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %256 = load i8*, i8** %255, align 8
  call void @_ZdlPv(i8* %256) #18
  br label %257

257:                                              ; preds = %21, %248, %254
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  %258 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %259 = add nsw i32 %258, -1
  store i32 %259, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.4573"* @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4570"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %24, i64 %25
  ret %"class.blink::Member.4573"* %26
}

declare void @_ZN5blink16InspectorHistory21AppendPerformedActionEPNS0_6ActionE(%"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory::Action"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent13setStyleTextsENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS20StyleDeclarationEditENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPNS2_INS3_INS2_INS5_8CSSStyleENS7_ISF_EEEENSA_ISH_EEEENS7_ISJ_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4548"*, %"class.std::__1::unique_ptr.4576"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent13setStyleTextsENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS20StyleDeclarationEditENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPNS2_INS3_INS2_INS5_8CSSStyleENS7_ISF_EEEENSA_ISH_EEEENS7_ISJ_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %6, %"class.std::__1::vector.4548"* %2, %"class.std::__1::unique_ptr.4576"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent12SetStyleTextEPNS_23InspectorStyleSheetBaseERKNS_11SourceRangeERKN3WTF6StringERPNS_19CSSStyleDeclarationE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly, %"class.blink::InspectorStyleSheetBase"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::CSSStyleDeclaration"** nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %8 = bitcast %"class.blink::DummyExceptionStateForTesting"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 56, i1 false)
  %9 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %10, align 8
  %11 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %11, align 2
  %12 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 1, i32 2
  %13 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0, i32 5, i32 0, i32 0
  %14 = bitcast %"class.WTF::StringImpl"** %13 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 16, i1 false) #16
  %15 = bitcast i8** %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %15, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %16 = bitcast %"class.blink::InspectorStyleSheetBase"* %2 to i1 (%"class.blink::InspectorStyleSheetBase"*)***
  %17 = load i1 (%"class.blink::InspectorStyleSheetBase"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*)*** %16, align 8
  %18 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*)** %17, i64 7
  %19 = load i1 (%"class.blink::InspectorStyleSheetBase"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*)** %18, align 8
  %20 = tail call zeroext i1 %19(%"class.blink::InspectorStyleSheetBase"* %2) #16
  br i1 %20, label %21, label %38

21:                                               ; preds = %6
  %22 = bitcast %"class.blink::InspectorStyleSheetBase"* %2 to %"class.blink::InspectorStyleSheetForInlineStyle"*
  %23 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 40) #16
  %24 = bitcast i8* %23 to %"class.blink::InspectorCSSAgent::SetElementStyleAction"*
  tail call void @_ZN5blink17InspectorCSSAgent21SetElementStyleActionC2EPNS_33InspectorStyleSheetForInlineStyleERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"* %24, %"class.blink::InspectorStyleSheetForInlineStyle"* %22, %"class.WTF::String"* dereferenceable(8) %4) #16
  %25 = getelementptr inbounds i8, i8* %23, i64 -4
  %26 = bitcast i8* %25 to i16*
  %27 = load atomic i16, i16* %26 monotonic, align 2
  %28 = or i16 %27, 1
  store atomic i16 %28, i16* %26 release, align 2
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %30 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %29, align 8
  %31 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %30, i64 0, i32 17, i32 0, i32 0
  %32 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %31, align 8
  %33 = bitcast i8* %23 to %"class.blink::InspectorHistory::Action"*
  %34 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  %35 = call zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %32, %"class.blink::InspectorHistory::Action"* %33, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %34) #16
  br i1 %35, label %36, label %78

36:                                               ; preds = %21
  %37 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink33InspectorStyleSheetForInlineStyle11InlineStyleEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %22) #16
  store %"class.blink::CSSStyleDeclaration"* %37, %"class.blink::CSSStyleDeclaration"** %5, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %80

38:                                               ; preds = %6
  %39 = bitcast %"class.blink::InspectorStyleSheetBase"* %2 to %"class.blink::InspectorStyleSheet"*
  %40 = tail call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 72) #16
  %41 = bitcast i8* %40 to %"class.blink::InspectorCSSAgent::ModifyRuleAction"*
  tail call void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionC2ENS1_4TypeEPNS_19InspectorStyleSheetERKNS_11SourceRangeERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"* %41, i32 1, %"class.blink::InspectorStyleSheet"* %39, %"class.blink::SourceRange"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4) #16
  %42 = getelementptr inbounds i8, i8* %40, i64 -4
  %43 = bitcast i8* %42 to i16*
  %44 = load atomic i16, i16* %43 monotonic, align 2
  %45 = or i16 %44, 1
  store atomic i16 %45, i16* %43 release, align 2
  %46 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %47 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %46, align 8
  %48 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %47, i64 0, i32 17, i32 0, i32 0
  %49 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %48, align 8
  %50 = bitcast i8* %40 to %"class.blink::InspectorHistory::Action"*
  %51 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  %52 = call zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %49, %"class.blink::InspectorHistory::Action"* %50, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %51) #16
  br i1 %52, label %53, label %78

53:                                               ; preds = %38
  %54 = getelementptr inbounds i8, i8* %40, i64 64
  %55 = bitcast i8* %54 to %"class.blink::CSSRule"**
  %56 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %55, align 8
  %57 = bitcast i8* %54 to i64*
  store atomic i64 0, i64* %57 monotonic, align 8
  %58 = icmp eq %"class.blink::CSSRule"* %56, null
  br i1 %58, label %78, label %59

59:                                               ; preds = %53
  %60 = bitcast %"class.blink::CSSRule"* %56 to i32 (%"class.blink::CSSRule"*)***
  %61 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %60, align 8
  %62 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %61, i64 9
  %63 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %62, align 8
  %64 = call i32 %63(%"class.blink::CSSRule"* nonnull %56) #16
  %65 = icmp eq i32 %64, 1
  br i1 %65, label %66, label %69

66:                                               ; preds = %59
  %67 = bitcast %"class.blink::CSSRule"* %56 to %"class.blink::CSSStyleRule"*
  %68 = call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"* nonnull %67) #16
  store %"class.blink::CSSStyleDeclaration"* %68, %"class.blink::CSSStyleDeclaration"** %5, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %80

69:                                               ; preds = %59
  %70 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %60, align 8
  %71 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %70, i64 9
  %72 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %71, align 8
  %73 = call i32 %72(%"class.blink::CSSRule"* nonnull %56) #16
  %74 = icmp eq i32 %73, 8
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = bitcast %"class.blink::CSSRule"* %56 to %"class.blink::CSSKeyframeRule"*
  %77 = call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink15CSSKeyframeRule5styleEv(%"class.blink::CSSKeyframeRule"* nonnull %76) #16
  store %"class.blink::CSSStyleDeclaration"* %77, %"class.blink::CSSStyleDeclaration"** %5, align 8
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %80

78:                                               ; preds = %69, %53, %38, %21
  %79 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %7, i64 0, i32 0
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %79) #16
  br label %80

80:                                               ; preds = %66, %75, %36, %78
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %8) #16
  ret void
}

declare %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"*) local_unnamed_addr #1

declare %"class.blink::CSSStyleDeclaration"* @_ZNK5blink15CSSKeyframeRule5styleEv(%"class.blink::CSSKeyframeRule"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent12setMediaTextERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_8CSSMediaENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4147"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::InspectorStyleSheet"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.blink::SourceRange", align 4
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = alloca %"class.WTF::String", align 8
  %13 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %14 = add nsw i32 %13, 1
  store i32 %14, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %15 = bitcast %"class.blink::InspectorStyleSheet"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  store %"class.blink::InspectorStyleSheet"* null, %"class.blink::InspectorStyleSheet"** %7, align 8
  %16 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent30AssertInspectorStyleSheetForIdERKN3WTF6StringERPNS_19InspectorStyleSheetE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %7)
  %17 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 8
  %19 = icmp eq i32 %18, 1
  br i1 %19, label %26, label %20

20:                                               ; preds = %6
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %18, i32* %21, align 8
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %24, i8* align 8 %25, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %25, i8 0, i64 24, i1 false) #16
  br label %252

26:                                               ; preds = %6
  %27 = bitcast %"class.blink::SourceRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %28, align 4
  %29 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 1
  store i32 -1431655766, i32* %29, align 4
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* nonnull %9) #16
  %30 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %30) #16
  %31 = bitcast %"class.blink::InspectorStyleSheet"** %7 to %"class.blink::InspectorStyleSheetBase"**
  %32 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %31, align 8
  call fastcc void @_ZN5blinkL22JsonRangeToSourceRangeEPNS_23InspectorStyleSheetBaseEPNS_8protocol3CSS11SourceRangeEPNS_11SourceRangeE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorStyleSheetBase"* %32, %"class.blink::protocol::CSS::SourceRange"* %3, %"class.blink::SourceRange"* nonnull %9)
  %33 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %34 = load i32, i32* %33, align 8
  store i32 %34, i32* %17, align 8
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"* %35 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  %41 = bitcast %"class.blink::InspectorStyleSheetBase"* %32 to %"class.blink::InspectorStyleSheet"*
  br i1 %40, label %42, label %46

42:                                               ; preds = %26
  %43 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @_ZdlPv(i8* %44) #18
  %45 = load i32, i32* %17, align 8
  br label %46

46:                                               ; preds = %42, %26
  %47 = phi i32 [ %45, %42 ], [ %34, %26 ]
  %48 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  %49 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %48, i8* align 8 %49, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %30) #16
  %50 = icmp eq i32 %47, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %46
  %52 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %47, i32* %52, align 8
  %53 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %54 = bitcast %"class.std::__1::basic_string"* %53 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %54, i8* align 8 %48, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %48, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %252

55:                                               ; preds = %46
  %56 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %56) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %56, i8 -86, i64 56, i1 false)
  %57 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %58, align 8
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %59, align 2
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %61 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %62 = bitcast %"class.WTF::StringImpl"** %61 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 16, i1 false) #16
  %63 = bitcast i8** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %63, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %57, align 8
  %64 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 72) #16
  %65 = bitcast i8* %64 to %"class.blink::InspectorCSSAgent::ModifyRuleAction"*
  call void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionC2ENS1_4TypeEPNS_19InspectorStyleSheetERKNS_11SourceRangeERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"* %65, i32 2, %"class.blink::InspectorStyleSheet"* %41, %"class.blink::SourceRange"* nonnull dereferenceable(8) %9, %"class.WTF::String"* dereferenceable(8) %4) #16
  %66 = getelementptr inbounds i8, i8* %64, i64 -4
  %67 = bitcast i8* %66 to i16*
  %68 = load atomic i16, i16* %67 monotonic, align 2
  %69 = or i16 %68, 1
  store atomic i16 %69, i16* %67 release, align 2
  %70 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %71 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %70, align 8
  %72 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %71, i64 0, i32 17, i32 0, i32 0
  %73 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %72, align 8
  %74 = bitcast i8* %64 to %"class.blink::InspectorHistory::Action"*
  %75 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %73, %"class.blink::InspectorHistory::Action"* %74, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %75) #16
  br i1 %76, label %77, label %246

77:                                               ; preds = %55
  %78 = getelementptr inbounds i8, i8* %64, i64 64
  %79 = bitcast i8* %78 to %"class.blink::CSSRule"**
  %80 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %79, align 8
  %81 = bitcast i8* %78 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  %82 = icmp eq %"class.blink::CSSRule"* %80, null
  br i1 %82, label %92, label %83

83:                                               ; preds = %77
  %84 = bitcast %"class.blink::CSSRule"* %80 to i32 (%"class.blink::CSSRule"*)***
  %85 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %84, align 8
  %86 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %85, i64 9
  %87 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %86, align 8
  %88 = call i32 %87(%"class.blink::CSSRule"* nonnull %80) #16
  %89 = icmp eq i32 %88, 4
  %90 = bitcast %"class.blink::CSSRule"* %80 to %"class.blink::CSSMediaRule"*
  %91 = select i1 %89, %"class.blink::CSSMediaRule"* %90, %"class.blink::CSSMediaRule"* null
  br label %92

92:                                               ; preds = %77, %83
  %93 = phi %"class.blink::CSSMediaRule"* [ %91, %83 ], [ null, %77 ]
  %94 = bitcast %"class.WTF::String"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %94) #16
  %95 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %12, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %95, align 8
  %96 = getelementptr inbounds %"class.blink::CSSMediaRule", %"class.blink::CSSMediaRule"* %93, i64 0, i32 0, i32 0, i32 0
  %97 = getelementptr inbounds %"class.blink::CSSMediaRule", %"class.blink::CSSMediaRule"* %93, i64 0, i32 0, i32 0, i32 0, i32 1
  %98 = load i8, i8* %97, align 8
  %99 = and i8 %98, 2
  %100 = icmp eq i8 %99, 0
  %101 = getelementptr inbounds %"class.blink::CSSMediaRule", %"class.blink::CSSMediaRule"* %93, i64 0, i32 0, i32 0, i32 0, i32 2, i32 0, i32 0
  br i1 %100, label %116, label %102

102:                                              ; preds = %92, %107
  %103 = phi %"class.blink::ScriptWrappable"** [ %115, %107 ], [ %101, %92 ]
  %104 = phi %"class.blink::CSSRule"* [ %110, %107 ], [ %96, %92 ]
  %105 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %103, align 8
  %106 = icmp eq %"class.blink::ScriptWrappable"* %105, null
  br i1 %106, label %120, label %107

107:                                              ; preds = %102
  %108 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %104, i64 0, i32 2, i32 0, i32 0
  %109 = bitcast %"class.blink::ScriptWrappable"** %108 to %"class.blink::CSSRule"**
  %110 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %109, align 8
  %111 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %110, i64 0, i32 1
  %112 = load i8, i8* %111, align 8
  %113 = and i8 %112, 2
  %114 = icmp eq i8 %113, 0
  %115 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %110, i64 0, i32 2, i32 0, i32 0
  br i1 %114, label %116, label %102

116:                                              ; preds = %107, %92
  %117 = phi %"class.blink::ScriptWrappable"** [ %101, %92 ], [ %115, %107 ]
  %118 = bitcast %"class.blink::ScriptWrappable"** %117 to %"class.blink::CSSStyleSheet"**
  %119 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %118, align 8
  br label %120

120:                                              ; preds = %102, %116
  %121 = phi %"class.blink::CSSStyleSheet"* [ %119, %116 ], [ null, %102 ]
  %122 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %121, i64 0, i32 1, i32 0, i32 0
  %123 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %122, align 8
  %124 = getelementptr inbounds %"class.blink::StyleSheetContents", %"class.blink::StyleSheetContents"* %123, i64 0, i32 10, i32 0, i32 0
  %125 = load %"class.blink::CSSParserContext"*, %"class.blink::CSSParserContext"** %124, align 8
  %126 = getelementptr inbounds %"class.blink::CSSParserContext", %"class.blink::CSSParserContext"* %125, i64 0, i32 0, i32 4, i32 0, i32 0
  %127 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %126, align 8
  store %"class.WTF::StringImpl"* %127, %"class.WTF::StringImpl"** %95, align 8
  %128 = icmp eq %"class.WTF::StringImpl"* %127, null
  br i1 %128, label %153, label %129

129:                                              ; preds = %120
  %130 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %131 = load atomic i32, i32* %130 monotonic, align 4
  %132 = and i32 %131, 2
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %146

134:                                              ; preds = %129
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %136 = load i32, i32* %135, align 4
  %137 = zext i32 %136 to i33
  %138 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %137, i33 1) #16
  %139 = extractvalue { i33, i1 } %138, 1
  %140 = extractvalue { i33, i1 } %138, 0
  %141 = icmp slt i33 %140, 0
  %142 = or i1 %139, %141
  br i1 %142, label %143, label %144, !prof !3

143:                                              ; preds = %134
  call void @llvm.trap() #16
  unreachable

144:                                              ; preds = %134
  %145 = trunc i33 %140 to i32
  store i32 %145, i32* %135, align 4
  br label %146

146:                                              ; preds = %144, %129
  %147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 1
  %148 = load i32, i32* %147, align 4
  %149 = icmp eq i32 %148, 0
  br i1 %149, label %150, label %193

150:                                              ; preds = %146
  %151 = load i8, i8* %97, align 8
  %152 = and i8 %151, 2
  br label %153

153:                                              ; preds = %150, %120
  %154 = phi i8 [ %152, %150 ], [ %99, %120 ]
  %155 = icmp eq i8 %154, 0
  br i1 %155, label %170, label %156

156:                                              ; preds = %153, %161
  %157 = phi %"class.blink::ScriptWrappable"** [ %169, %161 ], [ %101, %153 ]
  %158 = phi %"class.blink::CSSRule"* [ %164, %161 ], [ %96, %153 ]
  %159 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %157, align 8
  %160 = icmp eq %"class.blink::ScriptWrappable"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %158, i64 0, i32 2, i32 0, i32 0
  %163 = bitcast %"class.blink::ScriptWrappable"** %162 to %"class.blink::CSSRule"**
  %164 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %163, align 8
  %165 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %164, i64 0, i32 1
  %166 = load i8, i8* %165, align 8
  %167 = and i8 %166, 2
  %168 = icmp eq i8 %167, 0
  %169 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %164, i64 0, i32 2, i32 0, i32 0
  br i1 %168, label %170, label %156

170:                                              ; preds = %161, %153
  %171 = phi %"class.blink::ScriptWrappable"** [ %101, %153 ], [ %169, %161 ]
  %172 = bitcast %"class.blink::ScriptWrappable"** %171 to %"class.blink::CSSStyleSheet"**
  %173 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %172, align 8
  br label %174

174:                                              ; preds = %156, %170
  %175 = phi %"class.blink::CSSStyleSheet"* [ %173, %170 ], [ null, %156 ]
  %176 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* %175) #16
  %177 = call %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"* %176) #16
  %178 = ptrtoint %"class.WTF::StringImpl"* %177 to i64
  %179 = bitcast %"class.WTF::String"* %12 to i64*
  store i64 %178, i64* %179, align 8
  br i1 %128, label %193, label %180

180:                                              ; preds = %174
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %182 = load atomic i32, i32* %181 monotonic, align 4
  %183 = and i32 %182, 2
  %184 = icmp eq i32 %183, 0
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %127, i64 0, i32 0
  %186 = load i32, i32* %185, align 4
  br i1 %184, label %187, label %189

187:                                              ; preds = %180
  %188 = add i32 %186, -1
  store i32 %188, i32* %185, align 4
  br label %189

189:                                              ; preds = %187, %180
  %190 = phi i32 [ %188, %187 ], [ %186, %180 ]
  %191 = icmp eq i32 %190, 0
  br i1 %191, label %192, label %193

192:                                              ; preds = %189
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %127) #16
  br label %193

193:                                              ; preds = %174, %189, %192, %146
  %194 = phi %"class.WTF::StringImpl"* [ %177, %174 ], [ %177, %189 ], [ %177, %192 ], [ %127, %146 ]
  %195 = call %"class.blink::MediaList"* @_ZNK5blink12CSSMediaRule5mediaEv(%"class.blink::CSSMediaRule"* %93) #16
  %196 = load i8, i8* %97, align 8
  %197 = and i8 %196, 2
  %198 = icmp eq i8 %197, 0
  br i1 %198, label %213, label %199

199:                                              ; preds = %193, %204
  %200 = phi %"class.blink::ScriptWrappable"** [ %212, %204 ], [ %101, %193 ]
  %201 = phi %"class.blink::CSSRule"* [ %207, %204 ], [ %96, %193 ]
  %202 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %200, align 8
  %203 = icmp eq %"class.blink::ScriptWrappable"* %202, null
  br i1 %203, label %217, label %204

204:                                              ; preds = %199
  %205 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %201, i64 0, i32 2, i32 0, i32 0
  %206 = bitcast %"class.blink::ScriptWrappable"** %205 to %"class.blink::CSSRule"**
  %207 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %206, align 8
  %208 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %207, i64 0, i32 1
  %209 = load i8, i8* %208, align 8
  %210 = and i8 %209, 2
  %211 = icmp eq i8 %210, 0
  %212 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %207, i64 0, i32 2, i32 0, i32 0
  br i1 %211, label %213, label %199

213:                                              ; preds = %204, %193
  %214 = phi %"class.blink::ScriptWrappable"** [ %101, %193 ], [ %212, %204 ]
  %215 = bitcast %"class.blink::ScriptWrappable"** %214 to %"class.blink::CSSStyleSheet"**
  %216 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %215, align 8
  br label %217

217:                                              ; preds = %199, %213
  %218 = phi %"class.blink::CSSStyleSheet"* [ %216, %213 ], [ null, %199 ]
  %219 = call %"class.blink::protocol::CSS::CSSMedia"* @_ZN5blink17InspectorCSSAgent16BuildMediaObjectEPKNS_9MediaListENS0_15MediaListSourceERKN3WTF6StringEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::MediaList"* %195, i32 2, %"class.WTF::String"* nonnull dereferenceable(8) %12, %"class.blink::CSSStyleSheet"* %218)
  %220 = ptrtoint %"class.blink::protocol::CSS::CSSMedia"* %219 to i64
  %221 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %5, i64 0, i32 0, i32 0, i32 0
  %222 = load %"class.blink::protocol::CSS::CSSMedia"*, %"class.blink::protocol::CSS::CSSMedia"** %221, align 8
  %223 = bitcast %"class.std::__1::unique_ptr.4147"* %5 to i64*
  store i64 %220, i64* %223, align 8
  %224 = icmp eq %"class.blink::protocol::CSS::CSSMedia"* %222, null
  br i1 %224, label %230, label %225

225:                                              ; preds = %217
  %226 = bitcast %"class.blink::protocol::CSS::CSSMedia"* %222 to void (%"class.blink::protocol::CSS::CSSMedia"*)***
  %227 = load void (%"class.blink::protocol::CSS::CSSMedia"*)**, void (%"class.blink::protocol::CSS::CSSMedia"*)*** %226, align 8
  %228 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %227, i64 2
  %229 = load void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %228, align 8
  call void %229(%"class.blink::protocol::CSS::CSSMedia"* nonnull %222) #16
  br label %230

230:                                              ; preds = %225, %217
  %231 = icmp eq %"class.WTF::StringImpl"* %194, null
  br i1 %231, label %245, label %232

232:                                              ; preds = %230
  %233 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %234 = load atomic i32, i32* %233 monotonic, align 4
  %235 = and i32 %234, 2
  %236 = icmp eq i32 %235, 0
  %237 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %194, i64 0, i32 0
  %238 = load i32, i32* %237, align 4
  br i1 %236, label %239, label %241

239:                                              ; preds = %232
  %240 = add i32 %238, -1
  store i32 %240, i32* %237, align 4
  br label %241

241:                                              ; preds = %239, %232
  %242 = phi i32 [ %240, %239 ], [ %238, %232 ]
  %243 = icmp eq i32 %242, 0
  br i1 %243, label %244, label %245

244:                                              ; preds = %241
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %194) #16
  br label %245

245:                                              ; preds = %230, %241, %244
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %94) #16
  br label %246

246:                                              ; preds = %55, %245
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %75) #16
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %56) #16
  %247 = load i8, i8* %38, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  %248 = icmp slt i8 %247, 0
  br i1 %248, label %249, label %252

249:                                              ; preds = %246
  %250 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %251 = load i8*, i8** %250, align 8
  call void @_ZdlPv(i8* %251) #18
  br label %252

252:                                              ; preds = %51, %20, %246, %249
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %253 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %254 = add nsw i32 %253, -1
  store i32 %254, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %255 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %3, null
  br i1 %255, label %261, label %256

256:                                              ; preds = %252
  %257 = bitcast %"class.blink::protocol::CSS::SourceRange"* %3 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %258 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %257, align 8
  %259 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %258, i64 2
  %260 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %259, align 8
  call void %260(%"class.blink::protocol::CSS::SourceRange"* nonnull %3) #16
  br label %261

261:                                              ; preds = %252, %256
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink17InspectorDOMAgent17DocumentURLStringEPNS_8DocumentE(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden noalias nonnull %"class.blink::protocol::CSS::CSSMedia"* @_ZN5blink17InspectorCSSAgent16BuildMediaObjectEPKNS_9MediaListENS0_15MediaListSourceERKN3WTF6StringEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"*, %"class.blink::MediaList"* nocapture readonly, i32, %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca %"class.std::__1::unique_ptr.4180", align 8
  %13 = alloca %"class.WTF::String", align 8
  %14 = alloca i32, align 4
  %15 = alloca %"class.std::__1::unique_ptr.4169", align 8
  store %"class.blink::CSSStyleSheet"* %4, %"class.blink::CSSStyleSheet"** %6, align 8
  %16 = bitcast %"class.WTF::String"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %17, align 8
  %18 = load i8*, i8** @_ZN5blink8protocol3CSS8CSSMedia10SourceEnum11InlineSheetE, align 8
  %19 = icmp eq i8* %18, null
  br i1 %19, label %22, label %20

20:                                               ; preds = %5
  %21 = tail call i64 @strlen(i8* nonnull %18) #17
  br label %22

22:                                               ; preds = %5, %20
  %23 = phi i64 [ %21, %20 ], [ 0, %5 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* %18, i64 %23) #16
  switch i32 %2, label %198 [
    i32 2, label %24
    i32 3, label %67
    i32 0, label %110
    i32 1, label %153
  ]

24:                                               ; preds = %22
  %25 = bitcast %"class.WTF::String"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = load i8*, i8** @_ZN5blink8protocol3CSS8CSSMedia10SourceEnum9MediaRuleE, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call i64 @strlen(i8* nonnull %26) #17
  br label %30

30:                                               ; preds = %24, %28
  %31 = phi i64 [ %29, %28 ], [ 0, %24 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* %26, i64 %31) #16
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %33 = bitcast %"class.WTF::String"* %8 to i64*
  %34 = load i64, i64* %33, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %35 = bitcast %"class.WTF::String"* %7 to i64*
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %34, i64* %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %196, label %38

38:                                               ; preds = %30
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #16
  br label %51

51:                                               ; preds = %47, %50
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %196, label %54

54:                                               ; preds = %51
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %196

66:                                               ; preds = %63
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %52) #16
  br label %196

67:                                               ; preds = %22
  %68 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %68) #16
  %69 = load i8*, i8** @_ZN5blink8protocol3CSS8CSSMedia10SourceEnum10ImportRuleE, align 8
  %70 = icmp eq i8* %69, null
  br i1 %70, label %73, label %71

71:                                               ; preds = %67
  %72 = call i64 @strlen(i8* nonnull %69) #17
  br label %73

73:                                               ; preds = %67, %71
  %74 = phi i64 [ %72, %71 ], [ 0, %67 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %9, i8* %69, i64 %74) #16
  %75 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  %76 = bitcast %"class.WTF::String"* %9 to i64*
  %77 = load i64, i64* %76, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %75, align 8
  %78 = bitcast %"class.WTF::String"* %7 to i64*
  %79 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %77, i64* %78, align 8
  %80 = icmp eq %"class.WTF::StringImpl"* %79, null
  br i1 %80, label %196, label %81

81:                                               ; preds = %73
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %79, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #16
  br label %94

94:                                               ; preds = %90, %93
  %95 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %75, align 8
  %96 = icmp eq %"class.WTF::StringImpl"* %95, null
  br i1 %96, label %196, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load atomic i32, i32* %98 monotonic, align 4
  %100 = and i32 %99, 2
  %101 = icmp eq i32 %100, 0
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %95, i64 0, i32 0
  %103 = load i32, i32* %102, align 4
  br i1 %101, label %104, label %106

104:                                              ; preds = %97
  %105 = add i32 %103, -1
  store i32 %105, i32* %102, align 4
  br label %106

106:                                              ; preds = %104, %97
  %107 = phi i32 [ %105, %104 ], [ %103, %97 ]
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %109, label %196

109:                                              ; preds = %106
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %95) #16
  br label %196

110:                                              ; preds = %22
  %111 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %111) #16
  %112 = load i8*, i8** @_ZN5blink8protocol3CSS8CSSMedia10SourceEnum11LinkedSheetE, align 8
  %113 = icmp eq i8* %112, null
  br i1 %113, label %116, label %114

114:                                              ; preds = %110
  %115 = call i64 @strlen(i8* nonnull %112) #17
  br label %116

116:                                              ; preds = %110, %114
  %117 = phi i64 [ %115, %114 ], [ 0, %110 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %10, i8* %112, i64 %117) #16
  %118 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  %119 = bitcast %"class.WTF::String"* %10 to i64*
  %120 = load i64, i64* %119, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %118, align 8
  %121 = bitcast %"class.WTF::String"* %7 to i64*
  %122 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %120, i64* %121, align 8
  %123 = icmp eq %"class.WTF::StringImpl"* %122, null
  br i1 %123, label %196, label %124

124:                                              ; preds = %116
  %125 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load atomic i32, i32* %125 monotonic, align 4
  %127 = and i32 %126, 2
  %128 = icmp eq i32 %127, 0
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %122, i64 0, i32 0
  %130 = load i32, i32* %129, align 4
  br i1 %128, label %131, label %133

131:                                              ; preds = %124
  %132 = add i32 %130, -1
  store i32 %132, i32* %129, align 4
  br label %133

133:                                              ; preds = %131, %124
  %134 = phi i32 [ %132, %131 ], [ %130, %124 ]
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %137

136:                                              ; preds = %133
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %122) #16
  br label %137

137:                                              ; preds = %133, %136
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %118, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %196, label %140

140:                                              ; preds = %137
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  %145 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %146 = load i32, i32* %145, align 4
  br i1 %144, label %147, label %149

147:                                              ; preds = %140
  %148 = add i32 %146, -1
  store i32 %148, i32* %145, align 4
  br label %149

149:                                              ; preds = %147, %140
  %150 = phi i32 [ %148, %147 ], [ %146, %140 ]
  %151 = icmp eq i32 %150, 0
  br i1 %151, label %152, label %196

152:                                              ; preds = %149
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %138) #16
  br label %196

153:                                              ; preds = %22
  %154 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #16
  %155 = load i8*, i8** @_ZN5blink8protocol3CSS8CSSMedia10SourceEnum11InlineSheetE, align 8
  %156 = icmp eq i8* %155, null
  br i1 %156, label %159, label %157

157:                                              ; preds = %153
  %158 = call i64 @strlen(i8* nonnull %155) #17
  br label %159

159:                                              ; preds = %153, %157
  %160 = phi i64 [ %158, %157 ], [ 0, %153 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %11, i8* %155, i64 %160) #16
  %161 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  %162 = bitcast %"class.WTF::String"* %11 to i64*
  %163 = load i64, i64* %162, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %161, align 8
  %164 = bitcast %"class.WTF::String"* %7 to i64*
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  store i64 %163, i64* %164, align 8
  %166 = icmp eq %"class.WTF::StringImpl"* %165, null
  br i1 %166, label %196, label %167

167:                                              ; preds = %159
  %168 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %169 = load atomic i32, i32* %168 monotonic, align 4
  %170 = and i32 %169, 2
  %171 = icmp eq i32 %170, 0
  %172 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %165, i64 0, i32 0
  %173 = load i32, i32* %172, align 4
  br i1 %171, label %174, label %176

174:                                              ; preds = %167
  %175 = add i32 %173, -1
  store i32 %175, i32* %172, align 4
  br label %176

176:                                              ; preds = %174, %167
  %177 = phi i32 [ %175, %174 ], [ %173, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %165) #16
  br label %180

180:                                              ; preds = %176, %179
  %181 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %161, align 8
  %182 = icmp eq %"class.WTF::StringImpl"* %181, null
  br i1 %182, label %196, label %183

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %185 = load atomic i32, i32* %184 monotonic, align 4
  %186 = and i32 %185, 2
  %187 = icmp eq i32 %186, 0
  %188 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %181, i64 0, i32 0
  %189 = load i32, i32* %188, align 4
  br i1 %187, label %190, label %192

190:                                              ; preds = %183
  %191 = add i32 %189, -1
  store i32 %191, i32* %188, align 4
  br label %192

192:                                              ; preds = %190, %183
  %193 = phi i32 [ %191, %190 ], [ %189, %183 ]
  %194 = icmp eq i32 %193, 0
  br i1 %194, label %195, label %196

195:                                              ; preds = %192
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %181) #16
  br label %196

196:                                              ; preds = %195, %192, %180, %159, %152, %149, %137, %116, %109, %106, %94, %73, %66, %63, %51, %30
  %197 = phi i8* [ %25, %30 ], [ %25, %51 ], [ %25, %63 ], [ %25, %66 ], [ %68, %73 ], [ %68, %94 ], [ %68, %106 ], [ %68, %109 ], [ %111, %116 ], [ %111, %137 ], [ %111, %149 ], [ %111, %152 ], [ %154, %159 ], [ %154, %180 ], [ %154, %192 ], [ %154, %195 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %197) #16
  br label %198

198:                                              ; preds = %196, %22
  %199 = getelementptr inbounds %"class.blink::MediaList", %"class.blink::MediaList"* %1, i64 0, i32 1, i32 0
  %200 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %199, align 8
  %201 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %200, i64 0, i32 1
  %202 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %6, align 8
  %203 = icmp eq %"class.blink::CSSStyleSheet"* %202, null
  br i1 %203, label %209, label %204

204:                                              ; preds = %198
  %205 = call %"class.blink::Document"* @_ZNK5blink13CSSStyleSheet13OwnerDocumentEv(%"class.blink::CSSStyleSheet"* nonnull %202) #16
  %206 = icmp eq %"class.blink::Document"* %205, null
  br i1 %206, label %209, label %207

207:                                              ; preds = %204
  %208 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* nonnull %205) #16
  br label %209

209:                                              ; preds = %207, %204, %198
  %210 = phi %"class.blink::LocalFrame"* [ null, %198 ], [ null, %204 ], [ %208, %207 ]
  %211 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_19MediaQueryEvaluatorEEEPhm(i64 24) #16
  %212 = bitcast i8* %211 to %"class.blink::MediaQueryEvaluator"*
  call void @_ZN5blink19MediaQueryEvaluatorC1EPNS_10LocalFrameE(%"class.blink::MediaQueryEvaluator"* %212, %"class.blink::LocalFrame"* %210) #16
  %213 = getelementptr inbounds i8, i8* %211, i64 -4
  %214 = bitcast i8* %213 to i16*
  %215 = load atomic i16, i16* %214 monotonic, align 2
  %216 = or i16 %215, 1
  store atomic i16 %216, i16* %214 release, align 2
  %217 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %6, align 8
  %218 = icmp eq %"class.blink::CSSStyleSheet"* %217, null
  br i1 %218, label %222, label %219

219:                                              ; preds = %209
  %220 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %221 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %220, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %6)
  br label %222

222:                                              ; preds = %209, %219
  %223 = phi %"class.blink::InspectorStyleSheet"* [ %221, %219 ], [ null, %209 ]
  %224 = call i8* @_Znwm(i64 24) #18
  %225 = bitcast i8* %224 to %"class.std::__1::vector.4167"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %224, i8 0, i64 24, i1 false) #16
  %226 = ptrtoint i8* %224 to i64
  %227 = call %"class.blink::MediaValues"* @_ZN5blink11MediaValues26CreateDynamicIfFrameExistsEPNS_10LocalFrameE(%"class.blink::LocalFrame"* %210) #16
  %228 = getelementptr inbounds %"class.blink::MediaQuerySet", %"class.blink::MediaQuerySet"* %200, i64 0, i32 1, i32 0, i32 0, i32 2
  %229 = load i32, i32* %228, align 4
  %230 = icmp eq i32 %229, 0
  br i1 %230, label %250, label %231

231:                                              ; preds = %222
  %232 = bitcast %"class.std::__1::unique_ptr.4180"* %12 to i8*
  %233 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %12, i64 0, i32 0, i32 0, i32 0
  %234 = bitcast %"class.WTF::String"* %13 to i8*
  %235 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  %236 = bitcast %"class.std::__1::unique_ptr.4180"* %12 to i8**
  %237 = icmp eq %"class.blink::InspectorStyleSheet"* %223, null
  %238 = getelementptr inbounds %"class.blink::MediaList", %"class.blink::MediaList"* %1, i64 0, i32 3, i32 0, i32 0
  %239 = bitcast i32* %14 to i8*
  %240 = bitcast %"class.blink::MediaValues"* %227 to i1 (%"class.blink::MediaValues"*, double, i32, i32*)***
  %241 = bitcast %"class.std::__1::unique_ptr.4180"* %12 to i64*
  %242 = bitcast %"class.std::__1::unique_ptr.4169"* %15 to i8*
  %243 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %15, i64 0, i32 0, i32 0, i32 0
  %244 = bitcast %"class.std::__1::unique_ptr.4169"* %15 to i8**
  %245 = getelementptr inbounds i8, i8* %224, i64 8
  %246 = bitcast i8* %245 to %"class.std::__1::unique_ptr.4169"**
  %247 = getelementptr inbounds i8, i8* %224, i64 16
  %248 = bitcast i8* %247 to %"class.std::__1::unique_ptr.4169"**
  %249 = bitcast i8* %245 to i64*
  br label %320

250:                                              ; preds = %604, %222
  %251 = phi i8 [ 0, %222 ], [ %605, %604 ]
  %252 = call i8* @_Znwm(i64 72) #18
  %253 = bitcast i8* %252 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS8CSSMediaE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %253, align 8
  %254 = getelementptr inbounds i8, i8* %252, i64 8
  %255 = getelementptr inbounds i8, i8* %252, i64 32
  %256 = getelementptr inbounds i8, i8* %252, i64 56
  call void @llvm.memset.p0i8.i64(i8* align 8 %254, i8 0, i64 17, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %255, i8 0, i64 17, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %256, i8 0, i64 16, i1 false) #16
  %257 = bitcast i8* %252 to %"class.blink::protocol::CSS::CSSMedia"*
  %258 = load %"class.blink::MediaQuerySet"*, %"class.blink::MediaQuerySet"** %199, align 8
  %259 = call %"class.WTF::StringImpl"* @_ZNK5blink13MediaQuerySet9MediaTextEv(%"class.blink::MediaQuerySet"* %258) #16
  %260 = icmp eq %"class.WTF::StringImpl"* %259, null
  br i1 %260, label %278, label %261

261:                                              ; preds = %250
  %262 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %263 = load atomic i32, i32* %262 monotonic, align 4
  %264 = and i32 %263, 2
  %265 = icmp eq i32 %264, 0
  br i1 %265, label %266, label %278

266:                                              ; preds = %261
  %267 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %268 = load i32, i32* %267, align 4
  %269 = zext i32 %268 to i33
  %270 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %269, i33 1) #16
  %271 = extractvalue { i33, i1 } %270, 1
  %272 = extractvalue { i33, i1 } %270, 0
  %273 = icmp slt i33 %272, 0
  %274 = or i1 %271, %273
  br i1 %274, label %275, label %276, !prof !3

275:                                              ; preds = %266
  call void @llvm.trap() #16
  unreachable

276:                                              ; preds = %266
  %277 = trunc i33 %272 to i32
  store i32 %277, i32* %267, align 4
  br label %278

278:                                              ; preds = %250, %261, %276
  %279 = ptrtoint %"class.WTF::StringImpl"* %259 to i64
  %280 = bitcast i8* %254 to i64*
  store i64 %279, i64* %280, align 8
  %281 = getelementptr inbounds i8, i8* %252, i64 16
  %282 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %283 = icmp eq %"class.WTF::StringImpl"* %282, null
  br i1 %283, label %301, label %284

284:                                              ; preds = %278
  %285 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %286 = load atomic i32, i32* %285 monotonic, align 4
  %287 = and i32 %286, 2
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %301

289:                                              ; preds = %284
  %290 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %282, i64 0, i32 0
  %291 = load i32, i32* %290, align 4
  %292 = zext i32 %291 to i33
  %293 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %292, i33 1) #16
  %294 = extractvalue { i33, i1 } %293, 1
  %295 = extractvalue { i33, i1 } %293, 0
  %296 = icmp slt i33 %295, 0
  %297 = or i1 %294, %296
  br i1 %297, label %298, label %299, !prof !3

298:                                              ; preds = %289
  call void @llvm.trap() #16
  unreachable

299:                                              ; preds = %289
  %300 = trunc i33 %295 to i32
  store i32 %300, i32* %290, align 4
  br label %301

301:                                              ; preds = %278, %284, %299
  %302 = ptrtoint %"class.WTF::StringImpl"* %282 to i64
  %303 = bitcast i8* %281 to i64*
  store i64 %302, i64* %303, align 8
  br i1 %260, label %317, label %304

304:                                              ; preds = %301
  %305 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %306 = load atomic i32, i32* %305 monotonic, align 4
  %307 = and i32 %306, 2
  %308 = icmp eq i32 %307, 0
  %309 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %259, i64 0, i32 0
  %310 = load i32, i32* %309, align 4
  br i1 %308, label %311, label %313

311:                                              ; preds = %304
  %312 = add i32 %310, -1
  store i32 %312, i32* %309, align 4
  br label %313

313:                                              ; preds = %311, %304
  %314 = phi i32 [ %312, %311 ], [ %310, %304 ]
  %315 = icmp eq i32 %314, 0
  br i1 %315, label %316, label %317

316:                                              ; preds = %313
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %259) #16
  br label %317

317:                                              ; preds = %316, %313, %301
  %318 = and i8 %251, 1
  %319 = icmp eq i8 %318, 0
  br i1 %319, label %612, label %609

320:                                              ; preds = %231, %604
  %321 = phi i32 [ 0, %231 ], [ %606, %604 ]
  %322 = phi i8 [ 0, %231 ], [ %605, %604 ]
  %323 = call dereferenceable(8) %"class.std::__1::unique_ptr.617"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink10MediaQueryENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.614"* %201, i32 %321)
  %324 = getelementptr inbounds %"class.std::__1::unique_ptr.617", %"class.std::__1::unique_ptr.617"* %323, i64 0, i32 0, i32 0, i32 0
  %325 = load %"class.blink::MediaQuery"*, %"class.blink::MediaQuery"** %324, align 8
  %326 = getelementptr inbounds %"class.blink::MediaQuery", %"class.blink::MediaQuery"* %325, i64 0, i32 2
  %327 = call i8* @_Znwm(i64 24) #18
  %328 = bitcast i8* %327 to %"class.std::__1::vector.4178"*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %327, i8 0, i64 24, i1 false) #16
  %329 = ptrtoint i8* %327 to i64
  %330 = getelementptr inbounds %"class.blink::MediaQuery", %"class.blink::MediaQuery"* %325, i64 0, i32 2, i32 0, i32 0, i32 2
  %331 = load i32, i32* %330, align 4
  %332 = icmp eq i32 %331, 0
  br i1 %332, label %603, label %333

333:                                              ; preds = %320
  %334 = getelementptr inbounds i8, i8* %327, i64 8
  %335 = bitcast i8* %334 to %"class.std::__1::unique_ptr.4180"**
  %336 = getelementptr inbounds i8, i8* %327, i64 16
  %337 = bitcast i8* %336 to %"class.std::__1::unique_ptr.4180"**
  %338 = bitcast i8* %334 to i64*
  br label %342

339:                                              ; preds = %510
  %340 = and i8 %511, 1
  %341 = icmp eq i8 %340, 0
  br i1 %341, label %574, label %515

342:                                              ; preds = %333, %510
  %343 = phi i32 [ 0, %333 ], [ %512, %510 ]
  %344 = phi i8 [ 0, %333 ], [ %511, %510 ]
  %345 = call dereferenceable(40) %"class.blink::MediaQueryExp"* @_ZNK3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.620"* %326, i32 %343)
  %346 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %345, i64 0, i32 1, i32 2
  %347 = load double, double* %346, align 8
  %348 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %345, i64 0, i32 1, i32 3
  %349 = load i32, i32* %348, align 8
  %350 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %345, i64 0, i32 1, i32 7
  %351 = load i8, i8* %350, align 1
  %352 = icmp eq i8 %351, 0
  br i1 %352, label %510, label %353

353:                                              ; preds = %342
  %354 = call i8* @_ZN5blink17CSSPrimitiveValue16UnitTypeToStringENS0_8UnitTypeE(i32 %349) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %232) #16
  store %"class.blink::protocol::CSS::MediaQueryExpression"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CSS::MediaQueryExpression"*), %"class.blink::protocol::CSS::MediaQueryExpression"** %233, align 8
  %355 = call i8* @_Znwm(i64 56) #18
  %356 = bitcast i8* %355 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS20MediaQueryExpressionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %356, align 8
  %357 = getelementptr inbounds i8, i8* %355, i64 48
  %358 = bitcast i8* %357 to double*
  store double 0.000000e+00, double* %358, align 8
  %359 = getelementptr inbounds i8, i8* %355, i64 8
  %360 = getelementptr inbounds i8, i8* %355, i64 16
  call void @llvm.memset.p0i8.i64(i8* align 8 %360, i8 0, i64 25, i1 false) #16
  %361 = bitcast i8* %359 to double*
  store double %347, double* %361, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %234) #16
  %362 = icmp eq i8* %354, null
  br i1 %362, label %365, label %363

363:                                              ; preds = %353
  %364 = call i64 @strlen(i8* nonnull %354) #17
  br label %365

365:                                              ; preds = %353, %363
  %366 = phi i64 [ %364, %363 ], [ 0, %353 ]
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %13, i8* %354, i64 %366) #16
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %386, label %369

369:                                              ; preds = %365
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  br i1 %373, label %374, label %386

374:                                              ; preds = %369
  %375 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %376 = load i32, i32* %375, align 4
  %377 = zext i32 %376 to i33
  %378 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %377, i33 1) #16
  %379 = extractvalue { i33, i1 } %378, 1
  %380 = extractvalue { i33, i1 } %378, 0
  %381 = icmp slt i33 %380, 0
  %382 = or i1 %379, %381
  br i1 %382, label %383, label %384, !prof !3

383:                                              ; preds = %374
  call void @llvm.trap() #16
  unreachable

384:                                              ; preds = %374
  %385 = trunc i33 %380 to i32
  store i32 %385, i32* %375, align 4
  br label %386

386:                                              ; preds = %384, %369, %365
  %387 = ptrtoint %"class.WTF::StringImpl"* %367 to i64
  %388 = bitcast i8* %360 to i64*
  %389 = bitcast i8* %360 to %"class.WTF::StringImpl"**
  %390 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %389, align 8
  store i64 %387, i64* %388, align 8
  %391 = icmp eq %"class.WTF::StringImpl"* %390, null
  br i1 %391, label %405, label %392

392:                                              ; preds = %386
  %393 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %394 = load atomic i32, i32* %393 monotonic, align 4
  %395 = and i32 %394, 2
  %396 = icmp eq i32 %395, 0
  %397 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %390, i64 0, i32 0
  %398 = load i32, i32* %397, align 4
  br i1 %396, label %399, label %401

399:                                              ; preds = %392
  %400 = add i32 %398, -1
  store i32 %400, i32* %397, align 4
  br label %401

401:                                              ; preds = %399, %392
  %402 = phi i32 [ %400, %399 ], [ %398, %392 ]
  %403 = icmp eq i32 %402, 0
  br i1 %403, label %404, label %405

404:                                              ; preds = %401
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %390) #16
  br label %405

405:                                              ; preds = %386, %401, %404
  %406 = getelementptr inbounds i8, i8* %355, i64 24
  %407 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %345, i64 0, i32 0, i32 0, i32 0
  %408 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %407, align 8
  %409 = icmp eq %"class.WTF::StringImpl"* %408, null
  br i1 %409, label %427, label %410

410:                                              ; preds = %405
  %411 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %412 = load atomic i32, i32* %411 monotonic, align 4
  %413 = and i32 %412, 2
  %414 = icmp eq i32 %413, 0
  br i1 %414, label %415, label %427

415:                                              ; preds = %410
  %416 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %408, i64 0, i32 0
  %417 = load i32, i32* %416, align 4
  %418 = zext i32 %417 to i33
  %419 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %418, i33 1) #16
  %420 = extractvalue { i33, i1 } %419, 1
  %421 = extractvalue { i33, i1 } %419, 0
  %422 = icmp slt i33 %421, 0
  %423 = or i1 %420, %422
  br i1 %423, label %424, label %425, !prof !3

424:                                              ; preds = %415
  call void @llvm.trap() #16
  unreachable

425:                                              ; preds = %415
  %426 = trunc i33 %421 to i32
  store i32 %426, i32* %416, align 4
  br label %427

427:                                              ; preds = %425, %410, %405
  %428 = ptrtoint %"class.WTF::StringImpl"* %408 to i64
  %429 = bitcast i8* %406 to i64*
  %430 = bitcast i8* %406 to %"class.WTF::StringImpl"**
  %431 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %430, align 8
  store i64 %428, i64* %429, align 8
  %432 = icmp eq %"class.WTF::StringImpl"* %431, null
  br i1 %432, label %446, label %433

433:                                              ; preds = %427
  %434 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %435 = load atomic i32, i32* %434 monotonic, align 4
  %436 = and i32 %435, 2
  %437 = icmp eq i32 %436, 0
  %438 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %431, i64 0, i32 0
  %439 = load i32, i32* %438, align 4
  br i1 %437, label %440, label %442

440:                                              ; preds = %433
  %441 = add i32 %439, -1
  store i32 %441, i32* %438, align 4
  br label %442

442:                                              ; preds = %440, %433
  %443 = phi i32 [ %441, %440 ], [ %439, %433 ]
  %444 = icmp eq i32 %443, 0
  br i1 %444, label %445, label %446

445:                                              ; preds = %442
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %431) #16
  br label %446

446:                                              ; preds = %427, %442, %445
  store i8* %355, i8** %236, align 8
  %447 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %235, align 8
  %448 = icmp eq %"class.WTF::StringImpl"* %447, null
  br i1 %448, label %462, label %449

449:                                              ; preds = %446
  %450 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %451 = load atomic i32, i32* %450 monotonic, align 4
  %452 = and i32 %451, 2
  %453 = icmp eq i32 %452, 0
  %454 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %447, i64 0, i32 0
  %455 = load i32, i32* %454, align 4
  br i1 %453, label %456, label %458

456:                                              ; preds = %449
  %457 = add i32 %455, -1
  store i32 %457, i32* %454, align 4
  br label %458

458:                                              ; preds = %456, %449
  %459 = phi i32 [ %457, %456 ], [ %455, %449 ]
  %460 = icmp eq i32 %459, 0
  br i1 %460, label %461, label %462

461:                                              ; preds = %458
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %447) #16
  br label %462

462:                                              ; preds = %461, %458, %446
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %234) #16
  br i1 %237, label %480, label %463

463:                                              ; preds = %462
  %464 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %238, align 8
  %465 = icmp eq %"class.blink::CSSRule"* %464, null
  br i1 %465, label %480, label %466

466:                                              ; preds = %463
  %467 = load %"class.blink::protocol::CSS::MediaQueryExpression"*, %"class.blink::protocol::CSS::MediaQueryExpression"** %233, align 8
  %468 = call %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink19InspectorStyleSheet29MediaQueryExpValueSourceRangeEPNS_7CSSRuleEjj(%"class.blink::InspectorStyleSheet"* nonnull %223, %"class.blink::CSSRule"* nonnull %464, i32 %321, i32 %343) #16
  %469 = ptrtoint %"class.blink::protocol::CSS::SourceRange"* %468 to i64
  %470 = getelementptr inbounds %"class.blink::protocol::CSS::MediaQueryExpression", %"class.blink::protocol::CSS::MediaQueryExpression"* %467, i64 0, i32 4
  %471 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4153", %"class.crdtp::detail::PtrMaybe.4153"* %470, i64 0, i32 0, i32 0, i32 0, i32 0
  %472 = load %"class.blink::protocol::CSS::SourceRange"*, %"class.blink::protocol::CSS::SourceRange"** %471, align 8
  %473 = bitcast %"class.crdtp::detail::PtrMaybe.4153"* %470 to i64*
  store i64 %469, i64* %473, align 8
  %474 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %472, null
  br i1 %474, label %480, label %475

475:                                              ; preds = %466
  %476 = bitcast %"class.blink::protocol::CSS::SourceRange"* %472 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %477 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %476, align 8
  %478 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %477, i64 2
  %479 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %478, align 8
  call void %479(%"class.blink::protocol::CSS::SourceRange"* nonnull %472) #16
  br label %480

480:                                              ; preds = %475, %466, %463, %462
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %239) #16
  store i32 -1431655766, i32* %14, align 4
  %481 = load i1 (%"class.blink::MediaValues"*, double, i32, i32*)**, i1 (%"class.blink::MediaValues"*, double, i32, i32*)*** %240, align 8
  %482 = getelementptr inbounds i1 (%"class.blink::MediaValues"*, double, i32, i32*)*, i1 (%"class.blink::MediaValues"*, double, i32, i32*)** %481, i64 4
  %483 = load i1 (%"class.blink::MediaValues"*, double, i32, i32*)*, i1 (%"class.blink::MediaValues"*, double, i32, i32*)** %482, align 8
  %484 = call zeroext i1 %483(%"class.blink::MediaValues"* %227, double %347, i32 %349, i32* nonnull dereferenceable(4) %14) #16
  br i1 %484, label %485, label %491

485:                                              ; preds = %480
  %486 = load %"class.blink::protocol::CSS::MediaQueryExpression"*, %"class.blink::protocol::CSS::MediaQueryExpression"** %233, align 8
  %487 = load i32, i32* %14, align 4
  %488 = sitofp i32 %487 to double
  %489 = getelementptr inbounds %"class.blink::protocol::CSS::MediaQueryExpression", %"class.blink::protocol::CSS::MediaQueryExpression"* %486, i64 0, i32 5, i32 1
  store double %488, double* %489, align 8
  %490 = getelementptr inbounds %"class.blink::protocol::CSS::MediaQueryExpression", %"class.blink::protocol::CSS::MediaQueryExpression"* %486, i64 0, i32 5, i32 0
  store i8 1, i8* %490, align 8
  br label %491

491:                                              ; preds = %485, %480
  %492 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %335, align 8
  %493 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %337, align 8
  %494 = icmp ult %"class.std::__1::unique_ptr.4180"* %492, %493
  br i1 %494, label %495, label %500

495:                                              ; preds = %491
  %496 = load i64, i64* %241, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %233, align 8
  %497 = bitcast %"class.std::__1::unique_ptr.4180"* %492 to i64*
  store i64 %496, i64* %497, align 8
  %498 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %492, i64 1
  %499 = ptrtoint %"class.std::__1::unique_ptr.4180"* %498 to i64
  store i64 %499, i64* %338, align 8
  br label %501

500:                                              ; preds = %491
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS20MediaQueryExpressionENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4178"* nonnull %328, %"class.std::__1::unique_ptr.4180"* nonnull dereferenceable(8) %12) #16
  br label %501

501:                                              ; preds = %495, %500
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %239) #16
  %502 = load %"class.blink::protocol::CSS::MediaQueryExpression"*, %"class.blink::protocol::CSS::MediaQueryExpression"** %233, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %233, align 8
  %503 = icmp eq %"class.blink::protocol::CSS::MediaQueryExpression"* %502, null
  br i1 %503, label %509, label %504

504:                                              ; preds = %501
  %505 = bitcast %"class.blink::protocol::CSS::MediaQueryExpression"* %502 to void (%"class.blink::protocol::CSS::MediaQueryExpression"*)***
  %506 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)**, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*** %505, align 8
  %507 = getelementptr inbounds void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %506, i64 2
  %508 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %507, align 8
  call void %508(%"class.blink::protocol::CSS::MediaQueryExpression"* nonnull %502) #16
  br label %509

509:                                              ; preds = %501, %504
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %232) #16
  br label %510

510:                                              ; preds = %342, %509
  %511 = phi i8 [ 1, %509 ], [ %344, %342 ]
  %512 = add nuw i32 %343, 1
  %513 = load i32, i32* %330, align 4
  %514 = icmp ult i32 %512, %513
  br i1 %514, label %342, label %339

515:                                              ; preds = %339
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %242) #16
  store %"class.blink::protocol::CSS::MediaQuery"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CSS::MediaQuery"*), %"class.blink::protocol::CSS::MediaQuery"** %243, align 8
  %516 = call i8* @_Znwm(i64 24) #18
  %517 = bitcast i8* %516 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5blink8protocol3CSS10MediaQueryE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %517, align 8
  %518 = getelementptr inbounds i8, i8* %516, i64 8
  %519 = bitcast i8* %518 to i64*
  store i64 0, i64* %519, align 8
  %520 = getelementptr inbounds i8, i8* %516, i64 16
  store i8 0, i8* %520, align 8
  %521 = call zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_10MediaQueryEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"* %212, %"class.blink::MediaQuery"* dereferenceable(40) %325, %"class.WTF::Vector.528"* null, %"class.WTF::Vector.528"* null) #16
  %522 = zext i1 %521 to i8
  store i8 %522, i8* %520, align 8
  %523 = bitcast i8* %518 to %"class.std::__1::vector.4178"**
  %524 = load %"class.std::__1::vector.4178"*, %"class.std::__1::vector.4178"** %523, align 8
  store i64 %329, i64* %519, align 8
  %525 = icmp eq %"class.std::__1::vector.4178"* %524, null
  br i1 %525, label %555, label %526

526:                                              ; preds = %515
  %527 = getelementptr inbounds %"class.std::__1::vector.4178", %"class.std::__1::vector.4178"* %524, i64 0, i32 0, i32 0
  %528 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %527, align 8
  %529 = icmp eq %"class.std::__1::unique_ptr.4180"* %528, null
  br i1 %529, label %553, label %530

530:                                              ; preds = %526
  %531 = bitcast %"class.std::__1::unique_ptr.4180"* %528 to i8*
  %532 = getelementptr inbounds %"class.std::__1::vector.4178", %"class.std::__1::vector.4178"* %524, i64 0, i32 0, i32 1
  %533 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %532, align 8
  %534 = icmp eq %"class.std::__1::unique_ptr.4180"* %533, %528
  br i1 %534, label %551, label %535

535:                                              ; preds = %530, %546
  %536 = phi %"class.std::__1::unique_ptr.4180"* [ %537, %546 ], [ %533, %530 ]
  %537 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %536, i64 -1
  %538 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %537, i64 0, i32 0, i32 0, i32 0
  %539 = load %"class.blink::protocol::CSS::MediaQueryExpression"*, %"class.blink::protocol::CSS::MediaQueryExpression"** %538, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %538, align 8
  %540 = icmp eq %"class.blink::protocol::CSS::MediaQueryExpression"* %539, null
  br i1 %540, label %546, label %541

541:                                              ; preds = %535
  %542 = bitcast %"class.blink::protocol::CSS::MediaQueryExpression"* %539 to void (%"class.blink::protocol::CSS::MediaQueryExpression"*)***
  %543 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)**, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*** %542, align 8
  %544 = getelementptr inbounds void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %543, i64 2
  %545 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %544, align 8
  call void %545(%"class.blink::protocol::CSS::MediaQueryExpression"* nonnull %539) #16
  br label %546

546:                                              ; preds = %541, %535
  %547 = icmp eq %"class.std::__1::unique_ptr.4180"* %537, %528
  br i1 %547, label %548, label %535

548:                                              ; preds = %546
  %549 = bitcast %"class.std::__1::vector.4178"* %524 to i8**
  %550 = load i8*, i8** %549, align 8
  br label %551

551:                                              ; preds = %548, %530
  %552 = phi i8* [ %550, %548 ], [ %531, %530 ]
  store %"class.std::__1::unique_ptr.4180"* %528, %"class.std::__1::unique_ptr.4180"** %532, align 8
  call void @_ZdlPv(i8* %552) #18
  br label %553

553:                                              ; preds = %551, %526
  %554 = bitcast %"class.std::__1::vector.4178"* %524 to i8*
  call void @_ZdlPv(i8* %554) #18
  br label %555

555:                                              ; preds = %553, %515
  store i8* %516, i8** %244, align 8
  %556 = load %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"** %246, align 8
  %557 = load %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"** %248, align 8
  %558 = icmp ult %"class.std::__1::unique_ptr.4169"* %556, %557
  br i1 %558, label %559, label %564

559:                                              ; preds = %555
  %560 = ptrtoint i8* %516 to i64
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %243, align 8
  %561 = bitcast %"class.std::__1::unique_ptr.4169"* %556 to i64*
  store i64 %560, i64* %561, align 8
  %562 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %556, i64 1
  %563 = ptrtoint %"class.std::__1::unique_ptr.4169"* %562 to i64
  store i64 %563, i64* %249, align 8
  br label %565

564:                                              ; preds = %555
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS10MediaQueryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4167"* nonnull %225, %"class.std::__1::unique_ptr.4169"* nonnull dereferenceable(8) %15) #16
  br label %565

565:                                              ; preds = %559, %564
  %566 = load %"class.blink::protocol::CSS::MediaQuery"*, %"class.blink::protocol::CSS::MediaQuery"** %243, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %243, align 8
  %567 = icmp eq %"class.blink::protocol::CSS::MediaQuery"* %566, null
  br i1 %567, label %573, label %568

568:                                              ; preds = %565
  %569 = bitcast %"class.blink::protocol::CSS::MediaQuery"* %566 to void (%"class.blink::protocol::CSS::MediaQuery"*)***
  %570 = load void (%"class.blink::protocol::CSS::MediaQuery"*)**, void (%"class.blink::protocol::CSS::MediaQuery"*)*** %569, align 8
  %571 = getelementptr inbounds void (%"class.blink::protocol::CSS::MediaQuery"*)*, void (%"class.blink::protocol::CSS::MediaQuery"*)** %570, i64 2
  %572 = load void (%"class.blink::protocol::CSS::MediaQuery"*)*, void (%"class.blink::protocol::CSS::MediaQuery"*)** %571, align 8
  call void %572(%"class.blink::protocol::CSS::MediaQuery"* nonnull %566) #16
  br label %573

573:                                              ; preds = %568, %565
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %242) #16
  br label %604

574:                                              ; preds = %339
  %575 = bitcast i8* %327 to %"class.std::__1::unique_ptr.4180"**
  %576 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %575, align 8
  %577 = icmp eq %"class.std::__1::unique_ptr.4180"* %576, null
  br i1 %577, label %603, label %578

578:                                              ; preds = %574
  %579 = bitcast %"class.std::__1::unique_ptr.4180"* %576 to i8*
  %580 = getelementptr inbounds i8, i8* %327, i64 8
  %581 = bitcast i8* %580 to %"class.std::__1::unique_ptr.4180"**
  %582 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %581, align 8
  %583 = icmp eq %"class.std::__1::unique_ptr.4180"* %582, %576
  br i1 %583, label %600, label %584

584:                                              ; preds = %578, %595
  %585 = phi %"class.std::__1::unique_ptr.4180"* [ %586, %595 ], [ %582, %578 ]
  %586 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %585, i64 -1
  %587 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %586, i64 0, i32 0, i32 0, i32 0
  %588 = load %"class.blink::protocol::CSS::MediaQueryExpression"*, %"class.blink::protocol::CSS::MediaQueryExpression"** %587, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %587, align 8
  %589 = icmp eq %"class.blink::protocol::CSS::MediaQueryExpression"* %588, null
  br i1 %589, label %595, label %590

590:                                              ; preds = %584
  %591 = bitcast %"class.blink::protocol::CSS::MediaQueryExpression"* %588 to void (%"class.blink::protocol::CSS::MediaQueryExpression"*)***
  %592 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)**, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*** %591, align 8
  %593 = getelementptr inbounds void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %592, i64 2
  %594 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %593, align 8
  call void %594(%"class.blink::protocol::CSS::MediaQueryExpression"* nonnull %588) #16
  br label %595

595:                                              ; preds = %590, %584
  %596 = icmp eq %"class.std::__1::unique_ptr.4180"* %586, %576
  br i1 %596, label %597, label %584

597:                                              ; preds = %595
  %598 = bitcast i8* %327 to i8**
  %599 = load i8*, i8** %598, align 8
  br label %600

600:                                              ; preds = %597, %578
  %601 = phi i8* [ %599, %597 ], [ %579, %578 ]
  %602 = bitcast i8* %580 to %"class.std::__1::unique_ptr.4180"**
  store %"class.std::__1::unique_ptr.4180"* %576, %"class.std::__1::unique_ptr.4180"** %602, align 8
  call void @_ZdlPv(i8* %601) #18
  br label %603

603:                                              ; preds = %320, %600, %574
  call void @_ZdlPv(i8* nonnull %327) #18
  br label %604

604:                                              ; preds = %573, %603
  %605 = phi i8 [ 1, %573 ], [ %322, %603 ]
  %606 = add nuw i32 %321, 1
  %607 = load i32, i32* %228, align 4
  %608 = icmp ult i32 %606, %607
  br i1 %608, label %320, label %250

609:                                              ; preds = %317
  %610 = getelementptr inbounds i8, i8* %252, i64 64
  %611 = bitcast i8* %610 to i64*
  store i64 %226, i64* %611, align 8
  br label %612

612:                                              ; preds = %609, %317
  %613 = phi i64 [ %226, %317 ], [ 0, %609 ]
  %614 = icmp ne %"class.blink::InspectorStyleSheet"* %223, null
  %615 = icmp ne i32 %2, 0
  %616 = and i1 %615, %614
  br i1 %616, label %617, label %700

617:                                              ; preds = %612
  %618 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %223, i64 0, i32 0, i32 1, i32 0, i32 0
  %619 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %618, align 8
  %620 = icmp eq %"class.WTF::StringImpl"* %619, null
  br i1 %620, label %654, label %621

621:                                              ; preds = %617
  %622 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %623 = load atomic i32, i32* %622 monotonic, align 4
  %624 = and i32 %623, 2
  %625 = icmp eq i32 %624, 0
  br i1 %625, label %626, label %638

626:                                              ; preds = %621
  %627 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 0
  %628 = load i32, i32* %627, align 4
  %629 = zext i32 %628 to i33
  %630 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %629, i33 1) #16
  %631 = extractvalue { i33, i1 } %630, 1
  %632 = extractvalue { i33, i1 } %630, 0
  %633 = icmp slt i33 %632, 0
  %634 = or i1 %631, %633
  br i1 %634, label %635, label %636, !prof !3

635:                                              ; preds = %626
  call void @llvm.trap() #16
  unreachable

636:                                              ; preds = %626
  %637 = trunc i33 %632 to i32
  store i32 %637, i32* %627, align 4
  br label %638

638:                                              ; preds = %621, %636
  %639 = load atomic i32, i32* %622 monotonic, align 4
  %640 = and i32 %639, 2
  %641 = icmp eq i32 %640, 0
  br i1 %641, label %642, label %657

642:                                              ; preds = %638
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 0
  %644 = load i32, i32* %643, align 4
  %645 = zext i32 %644 to i33
  %646 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %645, i33 1) #16
  %647 = extractvalue { i33, i1 } %646, 1
  %648 = extractvalue { i33, i1 } %646, 0
  %649 = icmp slt i33 %648, 0
  %650 = or i1 %647, %649
  br i1 %650, label %651, label %652, !prof !3

651:                                              ; preds = %642
  call void @llvm.trap() #16
  unreachable

652:                                              ; preds = %642
  %653 = trunc i33 %648 to i32
  store i32 %653, i32* %643, align 4
  br label %657

654:                                              ; preds = %617
  %655 = getelementptr inbounds i8, i8* %252, i64 48
  %656 = bitcast i8* %256 to i64*
  store i64 0, i64* %656, align 8
  store i8 1, i8* %655, align 8
  br label %700

657:                                              ; preds = %652, %638
  %658 = getelementptr inbounds i8, i8* %252, i64 48
  %659 = load atomic i32, i32* %622 monotonic, align 4
  %660 = and i32 %659, 2
  %661 = icmp eq i32 %660, 0
  br i1 %661, label %662, label %674

662:                                              ; preds = %657
  %663 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 0
  %664 = load i32, i32* %663, align 4
  %665 = zext i32 %664 to i33
  %666 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %665, i33 1) #16
  %667 = extractvalue { i33, i1 } %666, 1
  %668 = extractvalue { i33, i1 } %666, 0
  %669 = icmp slt i33 %668, 0
  %670 = or i1 %667, %669
  br i1 %670, label %671, label %672, !prof !3

671:                                              ; preds = %662
  call void @llvm.trap() #16
  unreachable

672:                                              ; preds = %662
  %673 = trunc i33 %668 to i32
  store i32 %673, i32* %663, align 4
  br label %674

674:                                              ; preds = %657, %672
  %675 = ptrtoint %"class.WTF::StringImpl"* %619 to i64
  %676 = bitcast i8* %256 to i64*
  store i64 %675, i64* %676, align 8
  store i8 1, i8* %658, align 8
  %677 = load atomic i32, i32* %622 monotonic, align 4
  %678 = and i32 %677, 2
  %679 = icmp eq i32 %678, 0
  %680 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %619, i64 0, i32 0
  %681 = load i32, i32* %680, align 4
  br i1 %679, label %682, label %684

682:                                              ; preds = %674
  %683 = add i32 %681, -1
  store i32 %683, i32* %680, align 4
  br label %684

684:                                              ; preds = %682, %674
  %685 = phi i32 [ %683, %682 ], [ %681, %674 ]
  %686 = icmp eq i32 %685, 0
  br i1 %686, label %687, label %689

687:                                              ; preds = %684
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %619) #16
  %688 = load i32, i32* %680, align 4
  br label %689

689:                                              ; preds = %684, %687
  %690 = phi i32 [ %685, %684 ], [ %688, %687 ]
  %691 = load atomic i32, i32* %622 monotonic, align 4
  %692 = and i32 %691, 2
  %693 = icmp eq i32 %692, 0
  br i1 %693, label %694, label %696

694:                                              ; preds = %689
  %695 = add i32 %690, -1
  store i32 %695, i32* %680, align 4
  br label %696

696:                                              ; preds = %694, %689
  %697 = phi i32 [ %695, %694 ], [ %690, %689 ]
  %698 = icmp eq i32 %697, 0
  br i1 %698, label %699, label %700

699:                                              ; preds = %696
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %619) #16
  br label %700

700:                                              ; preds = %699, %696, %654, %612
  %701 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %702 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %701, align 8
  %703 = icmp eq %"class.WTF::StringImpl"* %702, null
  br i1 %703, label %791, label %704

704:                                              ; preds = %700
  %705 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 1
  %706 = load i32, i32* %705, align 4
  %707 = icmp eq i32 %706, 0
  br i1 %707, label %791, label %708

708:                                              ; preds = %704
  %709 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %710 = load atomic i32, i32* %709 monotonic, align 4
  %711 = and i32 %710, 2
  %712 = icmp eq i32 %711, 0
  br i1 %712, label %713, label %725

713:                                              ; preds = %708
  %714 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 0
  %715 = load i32, i32* %714, align 4
  %716 = zext i32 %715 to i33
  %717 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %716, i33 1) #16
  %718 = extractvalue { i33, i1 } %717, 1
  %719 = extractvalue { i33, i1 } %717, 0
  %720 = icmp slt i33 %719, 0
  %721 = or i1 %718, %720
  br i1 %721, label %722, label %723, !prof !3

722:                                              ; preds = %713
  call void @llvm.trap() #16
  unreachable

723:                                              ; preds = %713
  %724 = trunc i33 %719 to i32
  store i32 %724, i32* %714, align 4
  br label %725

725:                                              ; preds = %723, %708
  %726 = getelementptr inbounds i8, i8* %252, i64 24
  %727 = load atomic i32, i32* %709 monotonic, align 4
  %728 = and i32 %727, 2
  %729 = icmp eq i32 %728, 0
  br i1 %729, label %730, label %742

730:                                              ; preds = %725
  %731 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 0
  %732 = load i32, i32* %731, align 4
  %733 = zext i32 %732 to i33
  %734 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %733, i33 1) #16
  %735 = extractvalue { i33, i1 } %734, 1
  %736 = extractvalue { i33, i1 } %734, 0
  %737 = icmp slt i33 %736, 0
  %738 = or i1 %735, %737
  br i1 %738, label %739, label %740, !prof !3

739:                                              ; preds = %730
  call void @llvm.trap() #16
  unreachable

740:                                              ; preds = %730
  %741 = trunc i33 %736 to i32
  store i32 %741, i32* %731, align 4
  br label %742

742:                                              ; preds = %725, %740
  %743 = ptrtoint %"class.WTF::StringImpl"* %702 to i64
  %744 = bitcast i8* %255 to i64*
  store i64 %743, i64* %744, align 8
  store i8 1, i8* %726, align 8
  %745 = load atomic i32, i32* %709 monotonic, align 4
  %746 = and i32 %745, 2
  %747 = icmp eq i32 %746, 0
  %748 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %702, i64 0, i32 0
  %749 = load i32, i32* %748, align 4
  br i1 %747, label %750, label %752

750:                                              ; preds = %742
  %751 = add i32 %749, -1
  store i32 %751, i32* %748, align 4
  br label %752

752:                                              ; preds = %750, %742
  %753 = phi i32 [ %751, %750 ], [ %749, %742 ]
  %754 = icmp eq i32 %753, 0
  br i1 %754, label %755, label %756

755:                                              ; preds = %752
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %702) #16
  br label %756

756:                                              ; preds = %752, %755
  %757 = getelementptr inbounds %"class.blink::MediaList", %"class.blink::MediaList"* %1, i64 0, i32 3, i32 0, i32 0
  %758 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %757, align 8
  %759 = icmp eq %"class.blink::CSSRule"* %758, null
  br i1 %759, label %791, label %760

760:                                              ; preds = %756
  %761 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %758, i64 0, i32 1
  %762 = load i8, i8* %761, align 8
  %763 = and i8 %762, 2
  %764 = icmp eq i8 %763, 0
  %765 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %758, i64 0, i32 2, i32 0, i32 0
  br i1 %764, label %780, label %766

766:                                              ; preds = %760, %771
  %767 = phi %"class.blink::ScriptWrappable"** [ %779, %771 ], [ %765, %760 ]
  %768 = phi %"class.blink::CSSRule"* [ %774, %771 ], [ %758, %760 ]
  %769 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %767, align 8
  %770 = icmp eq %"class.blink::ScriptWrappable"* %769, null
  br i1 %770, label %784, label %771

771:                                              ; preds = %766
  %772 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %768, i64 0, i32 2, i32 0, i32 0
  %773 = bitcast %"class.blink::ScriptWrappable"** %772 to %"class.blink::CSSRule"**
  %774 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %773, align 8
  %775 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %774, i64 0, i32 1
  %776 = load i8, i8* %775, align 8
  %777 = and i8 %776, 2
  %778 = icmp eq i8 %777, 0
  %779 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %774, i64 0, i32 2, i32 0, i32 0
  br i1 %778, label %780, label %766

780:                                              ; preds = %771, %760
  %781 = phi %"class.blink::ScriptWrappable"** [ %765, %760 ], [ %779, %771 ]
  %782 = bitcast %"class.blink::ScriptWrappable"** %781 to %"class.blink::CSSStyleSheet"**
  %783 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %782, align 8
  br label %784

784:                                              ; preds = %766, %780
  %785 = phi %"class.blink::CSSStyleSheet"* [ %783, %780 ], [ null, %766 ]
  %786 = call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleSheet"* %785)
  %787 = call %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink19InspectorStyleSheet21RuleHeaderSourceRangeEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %786, %"class.blink::CSSRule"* nonnull %758) #16
  %788 = ptrtoint %"class.blink::protocol::CSS::SourceRange"* %787 to i64
  %789 = getelementptr inbounds i8, i8* %252, i64 40
  %790 = bitcast i8* %789 to i64*
  store i64 %788, i64* %790, align 8
  br label %791

791:                                              ; preds = %784, %700, %756, %704
  %792 = inttoptr i64 %613 to %"class.std::__1::vector.4167"*
  %793 = icmp eq i64 %613, 0
  br i1 %793, label %823, label %794

794:                                              ; preds = %791
  %795 = getelementptr inbounds %"class.std::__1::vector.4167", %"class.std::__1::vector.4167"* %792, i64 0, i32 0, i32 0
  %796 = load %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"** %795, align 8
  %797 = icmp eq %"class.std::__1::unique_ptr.4169"* %796, null
  br i1 %797, label %821, label %798

798:                                              ; preds = %794
  %799 = bitcast %"class.std::__1::unique_ptr.4169"* %796 to i8*
  %800 = getelementptr inbounds %"class.std::__1::vector.4167", %"class.std::__1::vector.4167"* %792, i64 0, i32 0, i32 1
  %801 = load %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"** %800, align 8
  %802 = icmp eq %"class.std::__1::unique_ptr.4169"* %801, %796
  br i1 %802, label %819, label %803

803:                                              ; preds = %798, %814
  %804 = phi %"class.std::__1::unique_ptr.4169"* [ %805, %814 ], [ %801, %798 ]
  %805 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %804, i64 -1
  %806 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %805, i64 0, i32 0, i32 0, i32 0
  %807 = load %"class.blink::protocol::CSS::MediaQuery"*, %"class.blink::protocol::CSS::MediaQuery"** %806, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %806, align 8
  %808 = icmp eq %"class.blink::protocol::CSS::MediaQuery"* %807, null
  br i1 %808, label %814, label %809

809:                                              ; preds = %803
  %810 = bitcast %"class.blink::protocol::CSS::MediaQuery"* %807 to void (%"class.blink::protocol::CSS::MediaQuery"*)***
  %811 = load void (%"class.blink::protocol::CSS::MediaQuery"*)**, void (%"class.blink::protocol::CSS::MediaQuery"*)*** %810, align 8
  %812 = getelementptr inbounds void (%"class.blink::protocol::CSS::MediaQuery"*)*, void (%"class.blink::protocol::CSS::MediaQuery"*)** %811, i64 2
  %813 = load void (%"class.blink::protocol::CSS::MediaQuery"*)*, void (%"class.blink::protocol::CSS::MediaQuery"*)** %812, align 8
  call void %813(%"class.blink::protocol::CSS::MediaQuery"* nonnull %807) #16
  br label %814

814:                                              ; preds = %809, %803
  %815 = icmp eq %"class.std::__1::unique_ptr.4169"* %805, %796
  br i1 %815, label %816, label %803

816:                                              ; preds = %814
  %817 = inttoptr i64 %613 to i8**
  %818 = load i8*, i8** %817, align 8
  br label %819

819:                                              ; preds = %816, %798
  %820 = phi i8* [ %818, %816 ], [ %799, %798 ]
  store %"class.std::__1::unique_ptr.4169"* %796, %"class.std::__1::unique_ptr.4169"** %800, align 8
  call void @_ZdlPv(i8* %820) #18
  br label %821

821:                                              ; preds = %819, %794
  %822 = inttoptr i64 %613 to i8*
  call void @_ZdlPv(i8* %822) #18
  br label %823

823:                                              ; preds = %791, %821
  %824 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %825 = icmp eq %"class.WTF::StringImpl"* %824, null
  br i1 %825, label %839, label %826

826:                                              ; preds = %823
  %827 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %824, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %828 = load atomic i32, i32* %827 monotonic, align 4
  %829 = and i32 %828, 2
  %830 = icmp eq i32 %829, 0
  %831 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %824, i64 0, i32 0
  %832 = load i32, i32* %831, align 4
  br i1 %830, label %833, label %835

833:                                              ; preds = %826
  %834 = add i32 %832, -1
  store i32 %834, i32* %831, align 4
  br label %835

835:                                              ; preds = %833, %826
  %836 = phi i32 [ %834, %833 ], [ %832, %826 ]
  %837 = icmp eq i32 %836, 0
  br i1 %837, label %838, label %839

838:                                              ; preds = %835
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %824) #16
  br label %839

839:                                              ; preds = %823, %835, %838
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  ret %"class.blink::protocol::CSS::CSSMedia"* %257
}

declare %"class.blink::MediaList"* @_ZNK5blink12CSSMediaRule5mediaEv(%"class.blink::CSSMediaRule"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent12setMediaTextERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_8CSSMediaENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.WTF::String"* dereferenceable(8), %"class.std::__1::unique_ptr.4147"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent12setMediaTextERKN3WTF6StringENSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEES4_PNS6_INS8_8CSSMediaENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::protocol::CSS::SourceRange"* %3, %"class.WTF::String"* dereferenceable(8) %4, %"class.std::__1::unique_ptr.4147"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent16createStyleSheetERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.blink::HeapVector.1298", align 8
  %6 = alloca %"class.blink::HeapVector.383", align 8
  %7 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %8 = alloca %"class.std::__1::basic_string", align 8
  %9 = alloca %"class.std::__1::basic_string", align 8
  %10 = alloca %"class.std::__1::basic_string", align 8
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 4, i32 0, i32 0
  %12 = load %"class.blink::InspectedFrames"*, %"class.blink::InspectedFrames"** %11, align 8
  %13 = tail call %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"* %12, %"class.WTF::String"* dereferenceable(8) %2) #16
  %14 = icmp eq %"class.blink::LocalFrame"* %13, null
  br i1 %14, label %15, label %25

15:                                               ; preds = %4
  %16 = bitcast %"class.std::__1::basic_string"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %17 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %16, i64 0, i32 1, i32 0
  store i8 15, i8* %17, align 1
  %18 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %18, i8* align 1 getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i64 15, i1 false) #16
  %19 = getelementptr inbounds i8, i8* %18, i64 15
  store i8 0, i8* %19, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %8) #16
  %20 = load i8, i8* %17, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %123

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @_ZdlPv(i8* %24) #18
  br label %123

25:                                               ; preds = %4
  %26 = tail call %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"* nonnull %13) #16
  %27 = icmp eq %"class.blink::Document"* %26, null
  br i1 %27, label %28, label %40

28:                                               ; preds = %25
  %29 = tail call i8* @_Znwm(i64 32) #18
  %30 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %29, i8** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %9, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = bitcast i64* %31 to <2 x i64>*
  store <2 x i64> <i64 30, i64 -9223372036854775776>, <2 x i64>* %32, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %29, i8* align 1 getelementptr inbounds ([31 x i8], [31 x i8]* @.str.10, i64 0, i64 0), i64 30, i1 false) #16
  %33 = getelementptr inbounds i8, i8* %29, i64 30
  store i8 0, i8* %33, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %9) #16
  %34 = bitcast %"class.std::__1::basic_string"* %9 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %35 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %34, i64 0, i32 1, i32 0
  %36 = load i8, i8* %35, align 1
  %37 = icmp slt i8 %36, 0
  br i1 %37, label %38, label %123

38:                                               ; preds = %28
  %39 = load i8*, i8** %30, align 8
  call void @_ZdlPv(i8* %39) #18
  br label %123

40:                                               ; preds = %25
  %41 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 107
  %42 = load i8, i8* %41, align 8
  %43 = and i8 %42, 33
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %53, label %45

45:                                               ; preds = %40
  %46 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %26, i64 0, i32 59, i32 0, i32 0
  %47 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %46, align 8
  %48 = tail call dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink11StyleEngine25EnsureInspectorStyleSheetEv(%"class.blink::StyleEngine"* %47) #16
  tail call void @_ZN5blink17InspectorCSSAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorCSSAgent"* %1) #16
  %49 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 10, i32 0
  %50 = bitcast %"class.blink::CSSStyleSheet"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #16
  store %"class.blink::CSSStyleSheet"* %48, %"class.blink::CSSStyleSheet"** %7, align 8
  %51 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %49, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #16
  %52 = icmp eq %"class.blink::InspectorStyleSheet"* %51, null
  br i1 %52, label %53, label %65

53:                                               ; preds = %40, %45
  %54 = call i8* @_Znwm(i64 32) #18
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %54, i8** %55, align 8
  %56 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = bitcast i64* %56 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %57, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %54, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.11, i64 0, i64 0), i64 26, i1 false) #16
  %58 = getelementptr inbounds i8, i8* %54, i64 26
  store i8 0, i8* %58, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %10) #16
  %59 = bitcast %"class.std::__1::basic_string"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %60 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %59, i64 0, i32 1, i32 0
  %61 = load i8, i8* %60, align 1
  %62 = icmp slt i8 %61, 0
  br i1 %62, label %63, label %123

63:                                               ; preds = %53
  %64 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %64) #18
  br label %123

65:                                               ; preds = %45
  %66 = bitcast %"class.blink::HeapVector.383"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %66) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %66, i8 0, i64 16, i1 false) #16
  %67 = bitcast %"class.blink::HeapVector.1298"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %67) #16
  %68 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %46, align 8
  call void @_ZN5blink11StyleEngine29ActiveStyleSheetsForInspectorEv(%"class.blink::HeapVector.1298"* nonnull sret %5, %"class.blink::StyleEngine"* %68) #16
  %69 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %"struct.std::__1::pair.1304"*, %"struct.std::__1::pair.1304"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::HeapVector.1298", %"class.blink::HeapVector.1298"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = zext i32 %72 to i64
  %74 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %70, i64 %73
  %75 = icmp eq i32 %72, 0
  br i1 %75, label %82, label %76

76:                                               ; preds = %65, %76
  %77 = phi %"struct.std::__1::pair.1304"* [ %80, %76 ], [ %70, %65 ]
  %78 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %77, i64 0, i32 0, i32 0, i32 0
  %79 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %78, align 8
  call void @_ZN5blink17InspectorCSSAgent18CollectStyleSheetsEPNS_13CSSStyleSheetERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::CSSStyleSheet"* %79, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %6) #16
  %80 = getelementptr inbounds %"struct.std::__1::pair.1304", %"struct.std::__1::pair.1304"* %77, i64 1
  %81 = icmp eq %"struct.std::__1::pair.1304"* %80, %74
  br i1 %81, label %82, label %76

82:                                               ; preds = %76, %65
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %67) #16
  call void @_ZN5blink17InspectorCSSAgent20SetActiveStyleSheetsEPNS_8DocumentERKNS_10HeapVectorINS_6MemberINS_13CSSStyleSheetEEELj0EEE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Document"* nonnull %26, %"class.blink::HeapVector.383"* nonnull dereferenceable(16) %6) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %66) #16
  %83 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %51, i64 0, i32 0, i32 1, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %103, label %86

86:                                               ; preds = %82
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  br i1 %90, label %91, label %103

91:                                               ; preds = %86
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = zext i32 %93 to i33
  %95 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %94, i33 1) #16
  %96 = extractvalue { i33, i1 } %95, 1
  %97 = extractvalue { i33, i1 } %95, 0
  %98 = icmp slt i33 %97, 0
  %99 = or i1 %96, %98
  br i1 %99, label %100, label %101, !prof !3

100:                                              ; preds = %91
  call void @llvm.trap() #16
  unreachable

101:                                              ; preds = %91
  %102 = trunc i33 %97 to i32
  store i32 %102, i32* %92, align 4
  br label %103

103:                                              ; preds = %82, %86, %101
  %104 = ptrtoint %"class.WTF::StringImpl"* %84 to i64
  %105 = bitcast %"class.WTF::String"* %3 to i64*
  %106 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %106, align 8
  store i64 %104, i64* %105, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %103
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #16
  br label %122

122:                                              ; preds = %121, %118, %103
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %123

123:                                              ; preds = %63, %53, %38, %28, %22, %15, %122
  ret void
}

declare %"class.blink::LocalFrame"* @_ZN5blink18IdentifiersFactory9FrameByIdEPNS_15InspectedFramesERKN3WTF6StringE(%"class.blink::InspectedFrames"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.blink::Document"* @_ZNK5blink10LocalFrame11GetDocumentEv(%"class.blink::LocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent22ViaInspectorStyleSheetEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Document"* readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %4 = icmp eq %"class.blink::Document"* %1, null
  br i1 %4, label %17, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 107
  %7 = load i8, i8* %6, align 8
  %8 = and i8 %7, 33
  %9 = icmp eq i8 %8, 0
  br i1 %9, label %17, label %10

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 59, i32 0, i32 0
  %12 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %11, align 8
  %13 = tail call dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink11StyleEngine25EnsureInspectorStyleSheetEv(%"class.blink::StyleEngine"* %12) #16
  tail call void @_ZN5blink17InspectorCSSAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorCSSAgent"* %0)
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %15 = bitcast %"class.blink::CSSStyleSheet"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  store %"class.blink::CSSStyleSheet"* %13, %"class.blink::CSSStyleSheet"** %3, align 8
  %16 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %14, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  br label %17

17:                                               ; preds = %5, %2, %10
  %18 = phi %"class.blink::InspectorStyleSheet"* [ %16, %10 ], [ null, %2 ], [ null, %5 ]
  ret %"class.blink::InspectorStyleSheet"* %18
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent16createStyleSheetERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent16createStyleSheetERKN3WTF6StringEPS2_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %6, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent7addRuleERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEEPNS6_INS8_7CSSRuleENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.std::__1::unique_ptr.4259"* nocapture) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::InspectorStyleSheet"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.blink::SourceRange", align 4
  %10 = alloca %"class.crdtp::DispatchResponse", align 8
  %11 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %12 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %13 = add nsw i32 %12, 1
  store i32 %13, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %14 = bitcast %"class.blink::InspectorStyleSheet"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  store %"class.blink::InspectorStyleSheet"* null, %"class.blink::InspectorStyleSheet"** %7, align 8
  %15 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent30AssertInspectorStyleSheetForIdERKN3WTF6StringERPNS_19InspectorStyleSheetE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorCSSAgent"* %1, %"class.WTF::String"* dereferenceable(8) %2, %"class.blink::InspectorStyleSheet"** nonnull dereferenceable(8) %7)
  %16 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = icmp eq i32 %17, 1
  br i1 %18, label %25, label %19

19:                                               ; preds = %6
  %20 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %17, i32* %20, align 8
  %21 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %21 to i8*
  %24 = bitcast %"class.std::__1::basic_string"* %22 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %23, i8* align 8 %24, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #16
  br label %100

25:                                               ; preds = %6
  %26 = bitcast %"class.blink::SourceRange"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 0
  store i32 -1431655766, i32* %27, align 4
  %28 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %9, i64 0, i32 1
  store i32 -1431655766, i32* %28, align 4
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* nonnull %9) #16
  %29 = bitcast %"class.crdtp::DispatchResponse"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %29) #16
  %30 = bitcast %"class.blink::InspectorStyleSheet"** %7 to %"class.blink::InspectorStyleSheetBase"**
  %31 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %30, align 8
  call fastcc void @_ZN5blinkL22JsonRangeToSourceRangeEPNS_23InspectorStyleSheetBaseEPNS_8protocol3CSS11SourceRangeEPNS_11SourceRangeE(%"class.crdtp::DispatchResponse"* nonnull sret %10, %"class.blink::InspectorStyleSheetBase"* %31, %"class.blink::protocol::CSS::SourceRange"* %4, %"class.blink::SourceRange"* nonnull %9)
  %32 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 0
  %33 = load i32, i32* %32, align 8
  store i32 %33, i32* %16, align 8
  %34 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %10, i64 0, i32 1
  %36 = bitcast %"class.std::__1::basic_string"* %34 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  %40 = bitcast %"class.blink::InspectorStyleSheetBase"* %31 to %"class.blink::InspectorStyleSheet"*
  br i1 %39, label %41, label %45

41:                                               ; preds = %25
  %42 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %34, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load i8*, i8** %42, align 8
  call void @_ZdlPv(i8* %43) #18
  %44 = load i32, i32* %16, align 8
  br label %45

45:                                               ; preds = %41, %25
  %46 = phi i32 [ %44, %41 ], [ %33, %25 ]
  %47 = bitcast %"class.std::__1::basic_string"* %34 to i8*
  %48 = bitcast %"class.std::__1::basic_string"* %35 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %47, i8* align 8 %48, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %29) #16
  %49 = icmp eq i32 %46, 1
  br i1 %49, label %54, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %46, i32* %51, align 8
  %52 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %53 = bitcast %"class.std::__1::basic_string"* %52 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %53, i8* align 8 %47, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  br label %100

54:                                               ; preds = %45
  %55 = bitcast %"class.blink::DummyExceptionStateForTesting"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %55) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %55, i8 -86, i64 56, i1 false)
  %56 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 0
  %57 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %57, align 8
  %58 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %58, align 2
  %59 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 1, i32 2
  %60 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0, i32 5, i32 0, i32 0
  %61 = bitcast %"class.WTF::StringImpl"** %60 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 16, i1 false) #16
  %62 = bitcast i8** %59 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %62, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %56, align 8
  %63 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64 64) #16
  %64 = bitcast i8* %63 to %"class.blink::InspectorCSSAgent::AddRuleAction"*
  call void @_ZN5blink17InspectorCSSAgent13AddRuleActionC2EPNS_19InspectorStyleSheetERKN3WTF6StringERKNS_11SourceRangeE(%"class.blink::InspectorCSSAgent::AddRuleAction"* %64, %"class.blink::InspectorStyleSheet"* %40, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::SourceRange"* nonnull dereferenceable(8) %9) #16
  %65 = getelementptr inbounds i8, i8* %63, i64 -4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 monotonic, align 2
  %68 = or i16 %67, 1
  store atomic i16 %68, i16* %66 release, align 2
  %69 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %70 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %69, align 8
  %71 = getelementptr inbounds %"class.blink::InspectorDOMAgent", %"class.blink::InspectorDOMAgent"* %70, i64 0, i32 17, i32 0, i32 0
  %72 = load %"class.blink::InspectorHistory"*, %"class.blink::InspectorHistory"** %71, align 8
  %73 = bitcast i8* %63 to %"class.blink::InspectorHistory::Action"*
  %74 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %11, i64 0, i32 0
  %75 = call zeroext i1 @_ZN5blink16InspectorHistory7PerformEPNS0_6ActionERNS_14ExceptionStateE(%"class.blink::InspectorHistory"* %72, %"class.blink::InspectorHistory::Action"* %73, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %74) #16
  br i1 %75, label %77, label %76

76:                                               ; preds = %54
  call void @_ZN5blink17InspectorDOMAgent10ToResponseERNS_14ExceptionStateE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %74) #16
  br label %94

77:                                               ; preds = %54
  %78 = getelementptr inbounds i8, i8* %63, i64 24
  %79 = bitcast i8* %78 to %"class.blink::CSSStyleRule"**
  %80 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %79, align 8
  %81 = bitcast i8* %78 to i64*
  store atomic i64 0, i64* %81 monotonic, align 8
  %82 = call %"class.blink::protocol::CSS::CSSRule"* @_ZN5blink17InspectorCSSAgent18BuildObjectForRuleEPNS_12CSSStyleRuleE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::CSSStyleRule"* %80)
  %83 = ptrtoint %"class.blink::protocol::CSS::CSSRule"* %82 to i64
  %84 = getelementptr inbounds %"class.std::__1::unique_ptr.4259", %"class.std::__1::unique_ptr.4259"* %5, i64 0, i32 0, i32 0, i32 0
  %85 = load %"class.blink::protocol::CSS::CSSRule"*, %"class.blink::protocol::CSS::CSSRule"** %84, align 8
  %86 = bitcast %"class.std::__1::unique_ptr.4259"* %5 to i64*
  store i64 %83, i64* %86, align 8
  %87 = icmp eq %"class.blink::protocol::CSS::CSSRule"* %85, null
  br i1 %87, label %93, label %88

88:                                               ; preds = %77
  %89 = bitcast %"class.blink::protocol::CSS::CSSRule"* %85 to void (%"class.blink::protocol::CSS::CSSRule"*)***
  %90 = load void (%"class.blink::protocol::CSS::CSSRule"*)**, void (%"class.blink::protocol::CSS::CSSRule"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSRule"*)*, void (%"class.blink::protocol::CSS::CSSRule"*)** %90, i64 2
  %92 = load void (%"class.blink::protocol::CSS::CSSRule"*)*, void (%"class.blink::protocol::CSS::CSSRule"*)** %91, align 8
  call void %92(%"class.blink::protocol::CSS::CSSRule"* nonnull %85) #16
  br label %93

93:                                               ; preds = %88, %77
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %94

94:                                               ; preds = %76, %93
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %55) #16
  %95 = load i8, i8* %37, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26) #16
  %96 = icmp slt i8 %95, 0
  br i1 %96, label %97, label %100

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8*, i8** %98, align 8
  call void @_ZdlPv(i8* %99) #18
  br label %100

100:                                              ; preds = %50, %19, %94, %97
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %101 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %102 = add nsw i32 %101, -1
  store i32 %102, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %103 = icmp eq %"class.blink::protocol::CSS::SourceRange"* %4, null
  br i1 %103, label %109, label %104

104:                                              ; preds = %100
  %105 = bitcast %"class.blink::protocol::CSS::SourceRange"* %4 to void (%"class.blink::protocol::CSS::SourceRange"*)***
  %106 = load void (%"class.blink::protocol::CSS::SourceRange"*)**, void (%"class.blink::protocol::CSS::SourceRange"*)*** %105, align 8
  %107 = getelementptr inbounds void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %106, i64 2
  %108 = load void (%"class.blink::protocol::CSS::SourceRange"*)*, void (%"class.blink::protocol::CSS::SourceRange"*)** %107, align 8
  call void %108(%"class.blink::protocol::CSS::SourceRange"* nonnull %4) #16
  br label %109

109:                                              ; preds = %100, %104
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::protocol::CSS::CSSRule"* @_ZN5blink17InspectorCSSAgent18BuildObjectForRuleEPNS_12CSSStyleRuleE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSStyleRule"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent26InspectorStyleSheetForRuleEPNS_12CSSStyleRuleE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleRule"* %1)
  %4 = icmp eq %"class.blink::InspectorStyleSheet"* %3, null
  br i1 %4, label %78, label %5

5:                                                ; preds = %2
  %6 = tail call %"class.blink::protocol::CSS::CSSRule"* @_ZN5blink19InspectorStyleSheet30BuildObjectForRuleWithoutMediaEPNS_12CSSStyleRuleE(%"class.blink::InspectorStyleSheet"* nonnull %3, %"class.blink::CSSStyleRule"* %1) #16
  %7 = ptrtoint %"class.blink::protocol::CSS::CSSRule"* %6 to i64
  %8 = icmp eq %"class.blink::CSSStyleRule"* %1, null
  br i1 %8, label %42, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %1, i64 0, i32 0
  %11 = tail call i8* @_Znwm(i64 24) #18
  %12 = bitcast i8* %11 to %"class.std::__1::vector.4145"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 0, i64 24, i1 false) #16
  br label %13

13:                                               ; preds = %27, %9
  %14 = phi %"class.blink::CSSRule"* [ %10, %9 ], [ %28, %27 ]
  %15 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %14, i64 0, i32 1
  %16 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %14, i64 0, i32 2, i32 0, i32 0
  %17 = bitcast %"class.blink::ScriptWrappable"** %16 to %"class.blink::CSSStyleSheet"**
  br label %18

18:                                               ; preds = %13, %29
  tail call void @_ZN5blink17InspectorCSSAgent27CollectMediaQueriesFromRuleEPNS_7CSSRuleEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSRule"* nonnull %14, %"class.std::__1::vector.4145"* nonnull %12) #16
  %19 = load i8, i8* %15, align 8
  %20 = and i8 %19, 2
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %29, label %22

22:                                               ; preds = %18
  %23 = bitcast %"class.blink::ScriptWrappable"** %16 to %"class.blink::CSSRule"**
  %24 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %23, align 8
  %25 = icmp eq %"class.blink::CSSRule"* %24, null
  %26 = select i1 %25, %"class.blink::CSSRule"* %14, %"class.blink::CSSRule"* %24
  br label %27

27:                                               ; preds = %32, %22
  %28 = phi %"class.blink::CSSRule"* [ %26, %22 ], [ %35, %32 ]
  br label %13

29:                                               ; preds = %18
  %30 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %17, align 8
  %31 = icmp eq %"class.blink::CSSStyleSheet"* %30, null
  br i1 %31, label %18, label %32

32:                                               ; preds = %29, %37
  %33 = phi %"class.blink::CSSStyleSheet"* [ %38, %37 ], [ %30, %29 ]
  tail call void @_ZN5blink17InspectorCSSAgent33CollectMediaQueriesFromStyleSheetEPNS_13CSSStyleSheetEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleSheet"* nonnull %33, %"class.std::__1::vector.4145"* nonnull %12) #16
  %34 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %33, i64 0, i32 12, i32 0, i32 0
  %35 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %34, align 8
  %36 = icmp eq %"class.blink::CSSRule"* %35, null
  br i1 %36, label %37, label %27

37:                                               ; preds = %32
  %38 = tail call %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSStyleSheet16parentStyleSheetEv(%"class.blink::CSSStyleSheet"* nonnull %33) #16
  %39 = icmp eq %"class.blink::CSSStyleSheet"* %38, null
  br i1 %39, label %40, label %32

40:                                               ; preds = %37
  %41 = ptrtoint i8* %11 to i64
  br label %42

42:                                               ; preds = %40, %5
  %43 = phi i64 [ 0, %5 ], [ %41, %40 ]
  %44 = getelementptr inbounds %"class.blink::protocol::CSS::CSSRule", %"class.blink::protocol::CSS::CSSRule"* %6, i64 0, i32 5
  %45 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4281", %"class.crdtp::detail::PtrMaybe.4281"* %44, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load %"class.std::__1::vector.4145"*, %"class.std::__1::vector.4145"** %45, align 8
  %47 = bitcast %"class.crdtp::detail::PtrMaybe.4281"* %44 to i64*
  store i64 %43, i64* %47, align 8
  %48 = icmp eq %"class.std::__1::vector.4145"* %46, null
  br i1 %48, label %78, label %49

49:                                               ; preds = %42
  %50 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %46, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %50, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr.4147"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::unique_ptr.4147"* %51 to i8*
  %55 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %46, i64 0, i32 0, i32 1
  %56 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr.4147"* %56, %51
  br i1 %57, label %74, label %58

58:                                               ; preds = %53, %69
  %59 = phi %"class.std::__1::unique_ptr.4147"* [ %60, %69 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::protocol::CSS::CSSMedia"*, %"class.blink::protocol::CSS::CSSMedia"** %61, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %61, align 8
  %63 = icmp eq %"class.blink::protocol::CSS::CSSMedia"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.blink::protocol::CSS::CSSMedia"* %62 to void (%"class.blink::protocol::CSS::CSSMedia"*)***
  %66 = load void (%"class.blink::protocol::CSS::CSSMedia"*)**, void (%"class.blink::protocol::CSS::CSSMedia"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %66, i64 2
  %68 = load void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %67, align 8
  tail call void %68(%"class.blink::protocol::CSS::CSSMedia"* nonnull %62) #16
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::unique_ptr.4147"* %60, %51
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.4145"* %46 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %53
  %75 = phi i8* [ %73, %71 ], [ %54, %53 ]
  store %"class.std::__1::unique_ptr.4147"* %51, %"class.std::__1::unique_ptr.4147"** %55, align 8
  tail call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %74, %49
  %77 = bitcast %"class.std::__1::vector.4145"* %46 to i8*
  tail call void @_ZdlPv(i8* %77) #18
  br label %78

78:                                               ; preds = %42, %76, %2
  %79 = phi i64 [ 0, %2 ], [ %7, %76 ], [ %7, %42 ]
  %80 = inttoptr i64 %79 to %"class.blink::protocol::CSS::CSSRule"*
  ret %"class.blink::protocol::CSS::CSSRule"* %80
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent7addRuleERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEEPNS6_INS8_7CSSRuleENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::protocol::CSS::SourceRange"*, %"class.std::__1::unique_ptr.4259"* nocapture) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent7addRuleERKN3WTF6StringES4_NSt3__110unique_ptrINS_8protocol3CSS11SourceRangeENS5_14default_deleteIS9_EEEEPNS6_INS8_7CSSRuleENSA_ISD_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %8, %"class.WTF::String"* dereferenceable(8) %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.blink::protocol::CSS::SourceRange"* %4, %"class.std::__1::unique_ptr.4259"* %5)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent16forcePseudoStateEiNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::vector.4530"*) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca i32, align 4
  %7 = alloca %"class.crdtp::DispatchResponse", align 8
  %8 = alloca %"class.blink::Element"*, align 8
  %9 = alloca %"class.crdtp::DispatchResponse", align 8
  %10 = alloca i32, align 4
  %11 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  store i32 %2, i32* %6, align 4
  %12 = bitcast %"class.crdtp::DispatchResponse"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 32, i1 false)
  %13 = bitcast %"class.std::__1::basic_string"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %13)
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 21
  %15 = load i8, i8* %14, align 8, !range !4, !noalias !42
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %18, label %17

17:                                               ; preds = %4
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* nonnull sret %7) #16
  br label %30

18:                                               ; preds = %4
  %19 = tail call i8* @_Znwm(i64 32) #18
  %20 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %19, i8** %20, align 8, !noalias !42
  %21 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = bitcast i64* %21 to <2 x i64>*
  store <2 x i64> <i64 25, i64 -9223372036854775776>, <2 x i64>* %22, align 8, !noalias !42
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %19, i8* align 1 getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i64 25, i1 false) #16
  %23 = getelementptr inbounds i8, i8* %19, i64 25
  store i8 0, i8* %23, align 1, !noalias !42
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %7, %"class.std::__1::basic_string"* nonnull %5) #16
  %24 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1, !noalias !42
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %30

28:                                               ; preds = %18
  %29 = load i8*, i8** %20, align 8, !noalias !42
  call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %17, %18, %28
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %13)
  %31 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp eq i32 %32, 1
  br i1 %33, label %40, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %32, i32* %35, align 8
  %36 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %37 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"* %36 to i8*
  %39 = bitcast %"class.std::__1::basic_string"* %37 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %38, i8* align 8 %39, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %39, i8 0, i64 24, i1 false) #16
  br label %390

40:                                               ; preds = %30
  %41 = bitcast %"class.blink::Element"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #16
  store %"class.blink::Element"* null, %"class.blink::Element"** %8, align 8
  %42 = bitcast %"class.crdtp::DispatchResponse"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %42) #16
  %43 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %43, align 8
  %45 = load i32, i32* %6, align 4
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %9, %"class.blink::InspectorDOMAgent"* %44, i32 %45, %"class.blink::Element"** nonnull dereferenceable(8) %8) #16
  %46 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 0
  %47 = load i32, i32* %46, align 8
  store i32 %47, i32* %31, align 8
  %48 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1
  %49 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %9, i64 0, i32 1
  %50 = bitcast %"class.std::__1::basic_string"* %48 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %58

54:                                               ; preds = %40
  %55 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  call void @_ZdlPv(i8* %56) #18
  %57 = load i32, i32* %31, align 8
  br label %58

58:                                               ; preds = %54, %40
  %59 = phi i32 [ %57, %54 ], [ %47, %40 ]
  %60 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %42) #16
  %62 = icmp eq i32 %59, 1
  br i1 %62, label %67, label %63

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %59, i32* %64, align 8
  %65 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %66 = bitcast %"class.std::__1::basic_string"* %65 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %66, i8* align 8 %60, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #16
  br label %390

67:                                               ; preds = %58
  %68 = bitcast i32* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %68) #16
  store i32 -1431655766, i32* %10, align 4
  %69 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_active to i8*) acquire, align 8
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %71, label %75, !prof !45

71:                                               ; preds = %67
  %72 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_active) #16
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74

74:                                               ; preds = %71
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_active to %"class.WTF::String"*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.45, i64 0, i64 0), i64 6) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_active) #16
  br label %75

75:                                               ; preds = %74, %71, %67
  %76 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_hover to i8*) acquire, align 8
  %77 = icmp eq i8 %76, 0
  br i1 %77, label %78, label %82, !prof !45

78:                                               ; preds = %75
  %79 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_hover) #16
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %82, label %81

81:                                               ; preds = %78
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_hover to %"class.WTF::String"*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.46, i64 0, i64 0), i64 5) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_hover) #16
  br label %82

82:                                               ; preds = %81, %78, %75
  %83 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_focus to i8*) acquire, align 8
  %84 = icmp eq i8 %83, 0
  br i1 %84, label %85, label %89, !prof !45

85:                                               ; preds = %82
  %86 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_focus) #16
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %89, label %88

88:                                               ; preds = %85
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_focus to %"class.WTF::String"*), i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.47, i64 0, i64 0), i64 5) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_focus) #16
  br label %89

89:                                               ; preds = %88, %85, %82
  %90 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE14s_focusVisible to i8*) acquire, align 8
  %91 = icmp eq i8 %90, 0
  br i1 %91, label %92, label %96, !prof !45

92:                                               ; preds = %89
  %93 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE14s_focusVisible) #16
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %96, label %95

95:                                               ; preds = %92
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE14s_focusVisible to %"class.WTF::String"*), i8* getelementptr inbounds ([14 x i8], [14 x i8]* @.str.48, i64 0, i64 0), i64 13) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE14s_focusVisible) #16
  br label %96

96:                                               ; preds = %95, %92, %89
  %97 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE13s_focusWithin to i8*) acquire, align 8
  %98 = icmp eq i8 %97, 0
  br i1 %98, label %99, label %103, !prof !45

99:                                               ; preds = %96
  %100 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE13s_focusWithin) #16
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %103, label %102

102:                                              ; preds = %99
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE13s_focusWithin to %"class.WTF::String"*), i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.49, i64 0, i64 0), i64 12) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE13s_focusWithin) #16
  br label %103

103:                                              ; preds = %102, %99, %96
  %104 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_target to i8*) acquire, align 8
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %110, !prof !45

106:                                              ; preds = %103
  %107 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_target) #16
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %110, label %109

109:                                              ; preds = %106
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_target to %"class.WTF::String"*), i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.50, i64 0, i64 0), i64 6) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_target) #16
  br label %110

110:                                              ; preds = %109, %106, %103
  %111 = load atomic i8, i8* bitcast (i64* @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE9s_visited to i8*) acquire, align 8
  %112 = icmp eq i8 %111, 0
  br i1 %112, label %113, label %117, !prof !45

113:                                              ; preds = %110
  %114 = call i32 @__cxa_guard_acquire(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE9s_visited) #16
  %115 = icmp eq i32 %114, 0
  br i1 %115, label %117, label %116

116:                                              ; preds = %113
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE9s_visited to %"class.WTF::String"*), i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.51, i64 0, i64 0), i64 7) #16
  call void @__cxa_guard_release(i64* nonnull @_ZGVZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE9s_visited) #16
  br label %117

117:                                              ; preds = %116, %113, %110
  %118 = icmp eq %"class.std::__1::vector.4530"* %3, null
  br i1 %118, label %212, label %119

119:                                              ; preds = %117
  %120 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %3, i64 0, i32 0, i32 0
  %121 = load %"class.WTF::String"*, %"class.WTF::String"** %120, align 8
  %122 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %3, i64 0, i32 0, i32 1
  %123 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %124 = icmp eq %"class.WTF::String"* %121, %123
  br i1 %124, label %176, label %125

125:                                              ; preds = %119, %170
  %126 = phi i32 [ %171, %170 ], [ 0, %119 ]
  %127 = phi %"class.WTF::String"* [ %172, %170 ], [ %121, %119 ]
  %128 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 0, i32 0, i32 0
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %130 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_active to %"class.WTF::StringImpl"**), align 8
  %131 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %129, %"class.WTF::StringImpl"* %130) #16
  br i1 %131, label %132, label %134

132:                                              ; preds = %125
  %133 = or i32 %126, 4
  br label %170

134:                                              ; preds = %125
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %136 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_hover to %"class.WTF::StringImpl"**), align 8
  %137 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"* %136) #16
  br i1 %137, label %138, label %140

138:                                              ; preds = %134
  %139 = or i32 %126, 1
  br label %170

140:                                              ; preds = %134
  %141 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %142 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE7s_focus to %"class.WTF::StringImpl"**), align 8
  %143 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"* %142) #16
  br i1 %143, label %144, label %146

144:                                              ; preds = %140
  %145 = or i32 %126, 2
  br label %170

146:                                              ; preds = %140
  %147 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE14s_focusVisible to %"class.WTF::StringImpl"**), align 8
  %149 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %147, %"class.WTF::StringImpl"* %148) #16
  br i1 %149, label %150, label %152

150:                                              ; preds = %146
  %151 = or i32 %126, 32
  br label %170

152:                                              ; preds = %146
  %153 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE13s_focusWithin to %"class.WTF::StringImpl"**), align 8
  %155 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %153, %"class.WTF::StringImpl"* %154) #16
  br i1 %155, label %156, label %158

156:                                              ; preds = %152
  %157 = or i32 %126, 16
  br label %170

158:                                              ; preds = %152
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %160 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE8s_target to %"class.WTF::StringImpl"**), align 8
  %161 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %159, %"class.WTF::StringImpl"* %160) #16
  br i1 %161, label %162, label %164

162:                                              ; preds = %158
  %163 = or i32 %126, 64
  br label %170

164:                                              ; preds = %158
  %165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %128, align 8
  %166 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** bitcast (%"class.WTF::StaticSingleton"* @_ZZN5blinkL22ComputePseudoClassMaskENSt3__110unique_ptrINS0_6vectorIN3WTF6StringENS0_9allocatorIS4_EEEENS0_14default_deleteIS7_EEEEE9s_visited to %"class.WTF::StringImpl"**), align 8
  %167 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %165, %"class.WTF::StringImpl"* %166) #16
  %168 = or i32 %126, 8
  %169 = select i1 %167, i32 %168, i32 %126
  br label %170

170:                                              ; preds = %164, %162, %156, %150, %144, %138, %132
  %171 = phi i32 [ %133, %132 ], [ %139, %138 ], [ %145, %144 ], [ %151, %150 ], [ %157, %156 ], [ %163, %162 ], [ %169, %164 ]
  %172 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %127, i64 1
  %173 = icmp eq %"class.WTF::String"* %172, %123
  br i1 %173, label %174, label %125

174:                                              ; preds = %170
  %175 = load %"class.WTF::String"*, %"class.WTF::String"** %120, align 8
  br label %176

176:                                              ; preds = %174, %119
  %177 = phi %"class.WTF::String"* [ %121, %119 ], [ %175, %174 ]
  %178 = phi i32 [ 0, %119 ], [ %171, %174 ]
  %179 = icmp eq %"class.WTF::String"* %177, null
  br i1 %179, label %210, label %180

180:                                              ; preds = %176
  %181 = bitcast %"class.WTF::String"* %177 to i8*
  %182 = load %"class.WTF::String"*, %"class.WTF::String"** %122, align 8
  %183 = icmp eq %"class.WTF::String"* %182, %177
  br i1 %183, label %208, label %184

184:                                              ; preds = %180, %203
  %185 = phi %"class.WTF::String"* [ %186, %203 ], [ %182, %180 ]
  %186 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %185, i64 -1
  %187 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %186, i64 0, i32 0, i32 0
  %188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %187, align 8
  %189 = icmp eq %"class.WTF::StringImpl"* %188, null
  br i1 %189, label %203, label %190

190:                                              ; preds = %184
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %188, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %188) #16
  br label %203

203:                                              ; preds = %202, %199, %184
  %204 = icmp eq %"class.WTF::String"* %186, %177
  br i1 %204, label %205, label %184

205:                                              ; preds = %203
  %206 = bitcast %"class.std::__1::vector.4530"* %3 to i8**
  %207 = load i8*, i8** %206, align 8
  br label %208

208:                                              ; preds = %205, %180
  %209 = phi i8* [ %207, %205 ], [ %181, %180 ]
  store %"class.WTF::String"* %177, %"class.WTF::String"** %122, align 8
  call void @_ZdlPv(i8* %209) #18
  br label %210

210:                                              ; preds = %208, %176
  %211 = bitcast %"class.std::__1::vector.4530"* %3 to i8*
  call void @_ZdlPv(i8* %211) #18
  br label %212

212:                                              ; preds = %117, %210
  %213 = phi i32 [ %178, %210 ], [ 0, %117 ]
  store i32 %213, i32* %10, align 4
  %214 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 14
  %215 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %214, i64 0, i32 0, i32 0
  %216 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %215, align 8
  %217 = icmp eq %"struct.WTF::KeyValuePair.3316"* %216, null
  %218 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 14, i32 0, i32 1
  %219 = load i32, i32* %218, align 8
  br i1 %217, label %276, label %220

220:                                              ; preds = %212
  %221 = add i32 %219, -1
  %222 = zext i32 %221 to i64
  %223 = load i32, i32* %6, align 4
  %224 = shl i32 %223, 15
  %225 = xor i32 %224, -1
  %226 = add i32 %223, %225
  %227 = lshr i32 %226, 10
  %228 = xor i32 %227, %226
  %229 = mul i32 %228, 9
  %230 = lshr i32 %229, 6
  %231 = xor i32 %230, %229
  %232 = shl i32 %231, 11
  %233 = xor i32 %232, -1
  %234 = add i32 %231, %233
  %235 = lshr i32 %234, 16
  %236 = xor i32 %235, %234
  %237 = and i32 %236, %221
  %238 = zext i32 %237 to i64
  %239 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %216, i64 %238
  %240 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %239, i64 0, i32 0
  %241 = load i32, i32* %240, align 4
  %242 = icmp eq i32 %241, %223
  br i1 %242, label %271, label %243

243:                                              ; preds = %220
  %244 = xor i32 %236, -1
  %245 = lshr i32 %234, 23
  %246 = add i32 %245, %244
  %247 = shl i32 %246, 12
  %248 = xor i32 %247, %246
  %249 = lshr i32 %248, 7
  %250 = xor i32 %249, %248
  %251 = shl i32 %250, 2
  %252 = xor i32 %251, %250
  %253 = lshr i32 %252, 20
  %254 = xor i32 %253, %252
  %255 = or i32 %254, 1
  %256 = zext i32 %255 to i64
  br label %257

257:                                              ; preds = %262, %243
  %258 = phi i32 [ %241, %243 ], [ %269, %262 ]
  %259 = phi i64 [ %238, %243 ], [ %266, %262 ]
  %260 = phi i64 [ 0, %243 ], [ %264, %262 ]
  %261 = icmp eq i32 %258, 0
  br i1 %261, label %276, label %262

262:                                              ; preds = %257
  %263 = icmp eq i64 %260, 0
  %264 = select i1 %263, i64 %256, i64 %260
  %265 = add i64 %264, %259
  %266 = and i64 %265, %222
  %267 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %216, i64 %266
  %268 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %267, i64 0, i32 0
  %269 = load i32, i32* %268, align 4
  %270 = icmp eq i32 %269, %223
  br i1 %270, label %271, label %257

271:                                              ; preds = %262, %220
  %272 = phi %"struct.WTF::KeyValuePair.3316"* [ %239, %220 ], [ %267, %262 ]
  %273 = icmp eq %"struct.WTF::KeyValuePair.3316"* %272, null
  br i1 %273, label %276, label %274

274:                                              ; preds = %271
  %275 = zext i32 %219 to i64
  br label %279

276:                                              ; preds = %257, %271, %212
  %277 = zext i32 %219 to i64
  %278 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %216, i64 %277
  br label %279

279:                                              ; preds = %274, %276
  %280 = phi i64 [ %275, %274 ], [ %277, %276 ]
  %281 = phi %"struct.WTF::KeyValuePair.3316"* [ %272, %274 ], [ %278, %276 ]
  %282 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %216, i64 %280
  %283 = icmp eq %"struct.WTF::KeyValuePair.3316"* %281, %282
  br i1 %283, label %287, label %284

284:                                              ; preds = %279
  %285 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %281, i64 0, i32 1
  %286 = load i32, i32* %285, align 4
  br label %287

287:                                              ; preds = %279, %284
  %288 = phi i32 [ %286, %284 ], [ 0, %279 ]
  %289 = icmp eq i32 %213, %288
  br i1 %289, label %383, label %290

290:                                              ; preds = %287
  %291 = icmp eq i32 %213, 0
  br i1 %291, label %302, label %292

292:                                              ; preds = %290
  %293 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %214, i64 0, i32 0
  %294 = call { %"struct.WTF::KeyValuePair.3316"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERiRjEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.3313"* %293, i32* nonnull dereferenceable(4) %6, i32* nonnull dereferenceable(4) %10) #16
  %295 = extractvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %294, 1
  %296 = and i8 %295, 1
  %297 = icmp eq i8 %296, 0
  br i1 %297, label %298, label %303

298:                                              ; preds = %292
  %299 = extractvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %294, 0
  %300 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %299, i64 0, i32 1
  %301 = load i32, i32* %10, align 4
  store i32 %301, i32* %300, align 4
  br label %303

302:                                              ; preds = %290
  call void @_ZN3WTF7HashMapIijNS_7IntHashIiEENS_10HashTraitsIiEENS3_IjEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.3312"* %214, i32* nonnull dereferenceable(4) %6)
  br label %303

303:                                              ; preds = %298, %292, %302
  %304 = load i32, i32* %10, align 4
  %305 = and i32 %304, 2
  %306 = icmp ne i32 %305, 0
  %307 = and i32 %288, 2
  %308 = icmp eq i32 %307, 0
  %309 = and i1 %308, %306
  br i1 %309, label %316, label %310

310:                                              ; preds = %303
  %311 = and i32 %304, 16
  %312 = icmp ne i32 %311, 0
  %313 = and i32 %288, 16
  %314 = icmp eq i32 %313, 0
  %315 = and i1 %314, %312
  br i1 %315, label %316, label %320

316:                                              ; preds = %310, %303
  %317 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  call void @_ZN5blink17InspectorCSSAgent33IncrementFocusedCountForAncestorsEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Element"* %317)
  %318 = load i32, i32* %10, align 4
  %319 = and i32 %318, 2
  br label %320

320:                                              ; preds = %310, %316
  %321 = phi i32 [ %305, %310 ], [ %319, %316 ]
  %322 = phi i32 [ %304, %310 ], [ %318, %316 ]
  %323 = icmp ne i32 %321, 0
  %324 = or i1 %308, %323
  br i1 %324, label %325, label %331

325:                                              ; preds = %320
  %326 = and i32 %322, 16
  %327 = icmp ne i32 %326, 0
  %328 = and i32 %288, 16
  %329 = icmp eq i32 %328, 0
  %330 = or i1 %329, %327
  br i1 %330, label %333, label %331

331:                                              ; preds = %325, %320
  %332 = load %"class.blink::Element"*, %"class.blink::Element"** %8, align 8
  call void @_ZN5blink17InspectorCSSAgent33DecrementFocusedCountForAncestorsEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Element"* %332)
  br label %333

333:                                              ; preds = %325, %331
  %334 = bitcast %"class.blink::Element"** %8 to %"class.blink::Node"**
  %335 = load %"class.blink::Node"*, %"class.blink::Node"** %334, align 8
  %336 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %335, i64 0, i32 3, i32 0, i32 0
  %337 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %336, align 8
  %338 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %337, i64 0, i32 2, i32 0, i32 0
  %339 = load %"class.blink::Document"*, %"class.blink::Document"** %338, align 8
  %340 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %339, i64 0, i32 59, i32 0, i32 0
  %341 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %340, align 8
  %342 = bitcast %"class.blink::StyleChangeReasonForTracing"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %342) #16
  %343 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %344 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %343, i64 0, i32 0, i32 0, i32 0
  %345 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %344, align 8
  %346 = icmp eq %"class.WTF::StringImpl"* %345, null
  br i1 %346, label %364, label %347

347:                                              ; preds = %333
  %348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %349 = load atomic i32, i32* %348 monotonic, align 4
  %350 = and i32 %349, 2
  %351 = icmp eq i32 %350, 0
  br i1 %351, label %352, label %364

352:                                              ; preds = %347
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %345, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  %355 = zext i32 %354 to i33
  %356 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %355, i33 1) #16
  %357 = extractvalue { i33, i1 } %356, 1
  %358 = extractvalue { i33, i1 } %356, 0
  %359 = icmp slt i33 %358, 0
  %360 = or i1 %357, %359
  br i1 %360, label %361, label %362, !prof !3

361:                                              ; preds = %352
  call void @llvm.trap() #16
  unreachable

362:                                              ; preds = %352
  %363 = trunc i33 %358 to i32
  store i32 %363, i32* %353, align 4
  br label %364

364:                                              ; preds = %333, %347, %362
  %365 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %11, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kInspectorE, i64 0, i64 0), i8** %365, align 8
  %366 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %11, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %345, %"class.WTF::StringImpl"** %366, align 8
  call void @_ZN5blink11StyleEngine29MarkAllElementsForStyleRecalcERKNS_27StyleChangeReasonForTracingE(%"class.blink::StyleEngine"* %341, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %11) #16
  %367 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %366, align 8
  %368 = icmp eq %"class.WTF::StringImpl"* %367, null
  br i1 %368, label %382, label %369

369:                                              ; preds = %364
  %370 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %371 = load atomic i32, i32* %370 monotonic, align 4
  %372 = and i32 %371, 2
  %373 = icmp eq i32 %372, 0
  %374 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %367, i64 0, i32 0
  %375 = load i32, i32* %374, align 4
  br i1 %373, label %376, label %378

376:                                              ; preds = %369
  %377 = add i32 %375, -1
  store i32 %377, i32* %374, align 4
  br label %378

378:                                              ; preds = %376, %369
  %379 = phi i32 [ %377, %376 ], [ %375, %369 ]
  %380 = icmp eq i32 %379, 0
  br i1 %380, label %381, label %382

381:                                              ; preds = %378
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %367) #16
  br label %382

382:                                              ; preds = %364, %378, %381
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %342) #16
  br label %383

383:                                              ; preds = %287, %382
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %68) #16
  %384 = load i8, i8* %51, align 1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41) #16
  %385 = icmp slt i8 %384, 0
  br i1 %385, label %386, label %389

386:                                              ; preds = %383
  %387 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %7, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %388 = load i8*, i8** %387, align 8
  call void @_ZdlPv(i8* %388) #18
  br label %389

389:                                              ; preds = %383, %386
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #16
  br label %429

390:                                              ; preds = %63, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #16
  %391 = icmp eq %"class.std::__1::vector.4530"* %3, null
  br i1 %391, label %429, label %392

392:                                              ; preds = %390
  %393 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %3, i64 0, i32 0, i32 0
  %394 = load %"class.WTF::String"*, %"class.WTF::String"** %393, align 8
  %395 = icmp eq %"class.WTF::String"* %394, null
  br i1 %395, label %427, label %396

396:                                              ; preds = %392
  %397 = bitcast %"class.WTF::String"* %394 to i8*
  %398 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %3, i64 0, i32 0, i32 1
  %399 = load %"class.WTF::String"*, %"class.WTF::String"** %398, align 8
  %400 = icmp eq %"class.WTF::String"* %399, %394
  br i1 %400, label %425, label %401

401:                                              ; preds = %396, %420
  %402 = phi %"class.WTF::String"* [ %403, %420 ], [ %399, %396 ]
  %403 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %402, i64 -1
  %404 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %403, i64 0, i32 0, i32 0
  %405 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %404, align 8
  %406 = icmp eq %"class.WTF::StringImpl"* %405, null
  br i1 %406, label %420, label %407

407:                                              ; preds = %401
  %408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %409 = load atomic i32, i32* %408 monotonic, align 4
  %410 = and i32 %409, 2
  %411 = icmp eq i32 %410, 0
  %412 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %405, i64 0, i32 0
  %413 = load i32, i32* %412, align 4
  br i1 %411, label %414, label %416

414:                                              ; preds = %407
  %415 = add i32 %413, -1
  store i32 %415, i32* %412, align 4
  br label %416

416:                                              ; preds = %414, %407
  %417 = phi i32 [ %415, %414 ], [ %413, %407 ]
  %418 = icmp eq i32 %417, 0
  br i1 %418, label %419, label %420

419:                                              ; preds = %416
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %405) #16
  br label %420

420:                                              ; preds = %419, %416, %401
  %421 = icmp eq %"class.WTF::String"* %403, %394
  br i1 %421, label %422, label %401

422:                                              ; preds = %420
  %423 = bitcast %"class.std::__1::vector.4530"* %3 to i8**
  %424 = load i8*, i8** %423, align 8
  br label %425

425:                                              ; preds = %422, %396
  %426 = phi i8* [ %424, %422 ], [ %397, %396 ]
  store %"class.WTF::String"* %394, %"class.WTF::String"** %398, align 8
  call void @_ZdlPv(i8* %426) #18
  br label %427

427:                                              ; preds = %425, %392
  %428 = bitcast %"class.std::__1::vector.4530"* %3 to i8*
  call void @_ZdlPv(i8* %428) #18
  br label %429

429:                                              ; preds = %389, %390, %427
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashMapIijNS_7IntHashIiEENS_10HashTraitsIiEENS3_IjEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.3312"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %0, i64 0, i32 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3316"* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %4, i64 %26
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %27, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  %30 = icmp eq i32 %29, %11
  br i1 %30, label %59, label %31

31:                                               ; preds = %8
  %32 = xor i32 %24, -1
  %33 = lshr i32 %22, 23
  %34 = add i32 %33, %32
  %35 = shl i32 %34, 12
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 7
  %38 = xor i32 %37, %36
  %39 = shl i32 %38, 2
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 20
  %42 = xor i32 %41, %40
  %43 = or i32 %42, 1
  %44 = zext i32 %43 to i64
  br label %45

45:                                               ; preds = %50, %31
  %46 = phi i32 [ %29, %31 ], [ %57, %50 ]
  %47 = phi i64 [ %26, %31 ], [ %54, %50 ]
  %48 = phi i64 [ 0, %31 ], [ %52, %50 ]
  %49 = icmp eq i32 %46, 0
  br i1 %49, label %64, label %50

50:                                               ; preds = %45
  %51 = icmp eq i64 %48, 0
  %52 = select i1 %51, i64 %44, i64 %48
  %53 = add i64 %52, %47
  %54 = and i64 %53, %10
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %4, i64 %54
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %55, i64 0, i32 0
  %57 = load i32, i32* %56, align 4
  %58 = icmp eq i32 %57, %11
  br i1 %58, label %59, label %45

59:                                               ; preds = %50, %8
  %60 = phi %"struct.WTF::KeyValuePair.3316"* [ %27, %8 ], [ %55, %50 ]
  %61 = icmp eq %"struct.WTF::KeyValuePair.3316"* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %45, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi %"struct.WTF::KeyValuePair.3316"* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %0, i64 0, i32 0
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %4, i64 %68
  %72 = icmp eq %"struct.WTF::KeyValuePair.3316"* %71, %69
  br i1 %72, label %96, label %73

73:                                               ; preds = %67
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %69, i64 0, i32 0
  store i32 -1, i32* %74, align 4
  %75 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %0, i64 0, i32 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 1
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  %81 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %0, i64 0, i32 0, i32 2
  %82 = load i32, i32* %81, align 4
  %83 = add i32 %82, -1
  store i32 %83, i32* %81, align 4
  %84 = mul i32 %83, 6
  %85 = load i32, i32* %6, align 8
  %86 = icmp ult i32 %84, %85
  %87 = icmp ugt i32 %85, 8
  %88 = and i1 %86, %87
  br i1 %88, label %89, label %96

89:                                               ; preds = %73
  %90 = lshr i32 %85, 1
  %91 = zext i32 %90 to i64
  %92 = shl nuw nsw i64 %91, 3
  %93 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %92, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIijEEEEPKcv, i64 0, i64 0)) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %93, i8 0, i64 %92, i1 false) #16
  %94 = bitcast i8* %93 to %"struct.WTF::KeyValuePair.3316"*
  %95 = tail call %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_(%"class.WTF::HashTable.3313"* %70, %"struct.WTF::KeyValuePair.3316"* %94, i32 %90, %"struct.WTF::KeyValuePair.3316"* null) #16
  br label %96

96:                                               ; preds = %67, %73, %89
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent33IncrementFocusedCountForAncestorsEPNS_7ElementE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %5) #16
  %7 = icmp eq %"class.blink::ContainerNode"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = bitcast i32* %3 to i8*
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15
  %12 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %11, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15, i32 0, i32 1
  %14 = bitcast i32* %4 to i8*
  %15 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %11, i64 0, i32 0
  br label %17

16:                                               ; preds = %111, %2
  ret void

17:                                               ; preds = %8, %111
  %18 = phi %"class.blink::ContainerNode"* [ %6, %8 ], [ %112, %111 ]
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %111

24:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #16
  store i32 -1431655766, i32* %3, align 4
  %25 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %10, align 8
  %26 = call i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %25, %"class.blink::Node"* nonnull %19) #16
  store i32 %26, i32* %3, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %110, label %28

28:                                               ; preds = %24
  %29 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %12, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.3316"* %29, null
  %31 = load i32, i32* %13, align 8
  br i1 %30, label %87, label %32

32:                                               ; preds = %28
  %33 = add i32 %31, -1
  %34 = zext i32 %33 to i64
  %35 = shl i32 %26, 15
  %36 = xor i32 %35, -1
  %37 = add i32 %26, %36
  %38 = lshr i32 %37, 10
  %39 = xor i32 %38, %37
  %40 = mul i32 %39, 9
  %41 = lshr i32 %40, 6
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 11
  %44 = xor i32 %43, -1
  %45 = add i32 %42, %44
  %46 = lshr i32 %45, 16
  %47 = xor i32 %46, %45
  %48 = and i32 %33, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %26
  br i1 %53, label %82, label %54

54:                                               ; preds = %32
  %55 = xor i32 %47, -1
  %56 = lshr i32 %45, 23
  %57 = add i32 %56, %55
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %68

68:                                               ; preds = %73, %54
  %69 = phi i32 [ %52, %54 ], [ %80, %73 ]
  %70 = phi i64 [ %49, %54 ], [ %77, %73 ]
  %71 = phi i64 [ 0, %54 ], [ %75, %73 ]
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %68
  %74 = icmp eq i64 %71, 0
  %75 = select i1 %74, i64 %67, i64 %71
  %76 = add i64 %75, %70
  %77 = and i64 %76, %34
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %26
  br i1 %81, label %82, label %68

82:                                               ; preds = %73, %32
  %83 = phi %"struct.WTF::KeyValuePair.3316"* [ %50, %32 ], [ %78, %73 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.3316"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = zext i32 %31 to i64
  br label %90

87:                                               ; preds = %68, %82, %28
  %88 = zext i32 %31 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %88
  br label %90

90:                                               ; preds = %85, %87
  %91 = phi i64 [ %86, %85 ], [ %88, %87 ]
  %92 = phi %"struct.WTF::KeyValuePair.3316"* [ %83, %85 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %91
  %94 = icmp eq %"struct.WTF::KeyValuePair.3316"* %92, %93
  br i1 %94, label %98, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %92, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  br label %98

98:                                               ; preds = %90, %95
  %99 = phi i32 [ %97, %95 ], [ 0, %90 ]
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #16
  %100 = add i32 %99, 1
  store i32 %100, i32* %4, align 4
  %101 = call { %"struct.WTF::KeyValuePair.3316"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERijEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.3313"* %15, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #16
  %102 = extractvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %101, 1
  %103 = and i8 %102, 1
  %104 = icmp eq i8 %103, 0
  br i1 %104, label %105, label %109

105:                                              ; preds = %98
  %106 = extractvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %101, 0
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %106, i64 0, i32 1
  %108 = load i32, i32* %4, align 4
  store i32 %108, i32* %107, align 4
  br label %109

109:                                              ; preds = %98, %105
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #16
  br label %110

110:                                              ; preds = %24, %109
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #16
  br label %111

111:                                              ; preds = %110, %17
  %112 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %19) #16
  %113 = icmp eq %"class.blink::ContainerNode"* %112, null
  br i1 %113, label %16, label %17
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent33DecrementFocusedCountForAncestorsEPNS_7ElementE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca i32, align 4
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %6 = tail call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %5) #16
  %7 = icmp eq %"class.blink::ContainerNode"* %6, null
  br i1 %7, label %16, label %8

8:                                                ; preds = %2
  %9 = bitcast i32* %3 to i8*
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15
  %12 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %11, i64 0, i32 0, i32 0
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 15, i32 0, i32 1
  %14 = bitcast i32* %4 to i8*
  %15 = getelementptr inbounds %"class.WTF::HashMap.3312", %"class.WTF::HashMap.3312"* %11, i64 0, i32 0
  br label %17

16:                                               ; preds = %112, %2
  ret void

17:                                               ; preds = %8, %112
  %18 = phi %"class.blink::ContainerNode"* [ %6, %8 ], [ %113, %112 ]
  %19 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0
  %20 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0, i32 1
  %21 = load i32, i32* %20, align 8
  %22 = and i32 %21, 12
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %112

24:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %9) #16
  store i32 -1431655766, i32* %3, align 4
  %25 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %10, align 8
  %26 = call i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %25, %"class.blink::Node"* nonnull %19) #16
  store i32 %26, i32* %3, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %111, label %28

28:                                               ; preds = %24
  %29 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %12, align 8
  %30 = icmp eq %"struct.WTF::KeyValuePair.3316"* %29, null
  %31 = load i32, i32* %13, align 8
  br i1 %30, label %87, label %32

32:                                               ; preds = %28
  %33 = add i32 %31, -1
  %34 = zext i32 %33 to i64
  %35 = shl i32 %26, 15
  %36 = xor i32 %35, -1
  %37 = add i32 %26, %36
  %38 = lshr i32 %37, 10
  %39 = xor i32 %38, %37
  %40 = mul i32 %39, 9
  %41 = lshr i32 %40, 6
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 11
  %44 = xor i32 %43, -1
  %45 = add i32 %42, %44
  %46 = lshr i32 %45, 16
  %47 = xor i32 %46, %45
  %48 = and i32 %33, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %50, i64 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, %26
  br i1 %53, label %82, label %54

54:                                               ; preds = %32
  %55 = xor i32 %47, -1
  %56 = lshr i32 %45, 23
  %57 = add i32 %56, %55
  %58 = shl i32 %57, 12
  %59 = xor i32 %58, %57
  %60 = lshr i32 %59, 7
  %61 = xor i32 %60, %59
  %62 = shl i32 %61, 2
  %63 = xor i32 %62, %61
  %64 = lshr i32 %63, 20
  %65 = xor i32 %64, %63
  %66 = or i32 %65, 1
  %67 = zext i32 %66 to i64
  br label %68

68:                                               ; preds = %73, %54
  %69 = phi i32 [ %52, %54 ], [ %80, %73 ]
  %70 = phi i64 [ %49, %54 ], [ %77, %73 ]
  %71 = phi i64 [ 0, %54 ], [ %75, %73 ]
  %72 = icmp eq i32 %69, 0
  br i1 %72, label %87, label %73

73:                                               ; preds = %68
  %74 = icmp eq i64 %71, 0
  %75 = select i1 %74, i64 %67, i64 %71
  %76 = add i64 %75, %70
  %77 = and i64 %76, %34
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %77
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %78, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  %81 = icmp eq i32 %80, %26
  br i1 %81, label %82, label %68

82:                                               ; preds = %73, %32
  %83 = phi %"struct.WTF::KeyValuePair.3316"* [ %50, %32 ], [ %78, %73 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.3316"* %83, null
  br i1 %84, label %87, label %85

85:                                               ; preds = %82
  %86 = zext i32 %31 to i64
  br label %90

87:                                               ; preds = %68, %82, %28
  %88 = zext i32 %31 to i64
  %89 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %88
  br label %90

90:                                               ; preds = %85, %87
  %91 = phi i64 [ %86, %85 ], [ %88, %87 ]
  %92 = phi %"struct.WTF::KeyValuePair.3316"* [ %83, %85 ], [ %89, %87 ]
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %29, i64 %91
  %94 = icmp eq %"struct.WTF::KeyValuePair.3316"* %92, %93
  br i1 %94, label %99, label %95

95:                                               ; preds = %90
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %92, i64 0, i32 1
  %97 = load i32, i32* %96, align 4
  %98 = icmp ult i32 %97, 2
  br i1 %98, label %99, label %100

99:                                               ; preds = %90, %95
  call void @_ZN3WTF7HashMapIijNS_7IntHashIiEENS_10HashTraitsIiEENS3_IjEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.3312"* %11, i32* nonnull dereferenceable(4) %3)
  br label %111

100:                                              ; preds = %95
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %14) #16
  %101 = add i32 %97, -1
  store i32 %101, i32* %4, align 4
  %102 = call { %"struct.WTF::KeyValuePair.3316"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERijEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.3313"* %15, i32* nonnull dereferenceable(4) %3, i32* nonnull dereferenceable(4) %4) #16
  %103 = extractvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %102, 1
  %104 = and i8 %103, 1
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %106, label %110

106:                                              ; preds = %100
  %107 = extractvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %102, 0
  %108 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %107, i64 0, i32 1
  %109 = load i32, i32* %4, align 4
  store i32 %109, i32* %108, align 4
  br label %110

110:                                              ; preds = %100, %106
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %14) #16
  br label %111

111:                                              ; preds = %24, %99, %110
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %9) #16
  br label %112

112:                                              ; preds = %111, %17
  %113 = call %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64) %19) #16
  %114 = icmp eq %"class.blink::ContainerNode"* %113, null
  br i1 %114, label %16, label %17
}

declare void @_ZN5blink11StyleEngine29MarkAllElementsForStyleRecalcERKNS_27StyleChangeReasonForTracingE(%"class.blink::StyleEngine"*, %"class.blink::StyleChangeReasonForTracing"* dereferenceable(16)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent16forcePseudoStateEiNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.std::__1::vector.4530"*) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent16forcePseudoStateEiNSt3__110unique_ptrINS1_6vectorIN3WTF6StringENS1_9allocatorIS5_EEEENS1_14default_deleteIS8_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %6, i32 %2, %"class.std::__1::vector.4530"* %3)
  ret void
}

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::MediaValues"* @_ZN5blink11MediaValues26CreateDynamicIfFrameExistsEPNS_10LocalFrameE(%"class.blink::LocalFrame"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::unique_ptr.617"* @_ZNK3WTF6VectorINSt3__110unique_ptrIN5blink10MediaQueryENS1_14default_deleteIS4_EEEELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.614"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.614", %"class.WTF::Vector.614"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.614", %"class.WTF::Vector.614"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.std::__1::unique_ptr.617"*, %"class.std::__1::unique_ptr.617"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.std::__1::unique_ptr.617", %"class.std::__1::unique_ptr.617"* %24, i64 %25
  ret %"class.std::__1::unique_ptr.617"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(40) %"class.blink::MediaQueryExp"* @_ZNK3WTF6VectorIN5blink13MediaQueryExpELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.620"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.620", %"class.WTF::Vector.620"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.620", %"class.WTF::Vector.620"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::MediaQueryExp"*, %"class.blink::MediaQueryExp"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::MediaQueryExp", %"class.blink::MediaQueryExp"* %24, i64 %25
  ret %"class.blink::MediaQueryExp"* %26
}

declare i8* @_ZN5blink17CSSPrimitiveValue16UnitTypeToStringENS0_8UnitTypeE(i32) local_unnamed_addr #1

declare %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink19InspectorStyleSheet29MediaQueryExpValueSourceRangeEPNS_7CSSRuleEjj(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*, i32, i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink19MediaQueryEvaluator4EvalERKNS_10MediaQueryEPN3WTF6VectorINS_16MediaQueryResultELj0ENS4_18PartitionAllocatorEEES9_(%"class.blink::MediaQueryEvaluator"*, %"class.blink::MediaQuery"* dereferenceable(40), %"class.WTF::Vector.528"*, %"class.WTF::Vector.528"*) local_unnamed_addr #1

declare %"class.blink::protocol::CSS::SourceRange"* @_ZN5blink19InspectorStyleSheet21RuleHeaderSourceRangeEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*) local_unnamed_addr #1

declare %"class.blink::MediaList"* @_ZN5blink13CSSStyleSheet5mediaEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4KURL7IsEmptyEv(%"class.blink::KURL"*) local_unnamed_addr #1

declare %"class.blink::MediaList"* @_ZNK5blink13CSSImportRule5mediaEv(%"class.blink::CSSImportRule"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.4145"* @_ZN5blink17InspectorCSSAgent19BuildMediaListChainEPNS_7CSSRuleE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSRule"*) local_unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::CSSRule"* %1, null
  br i1 %3, label %36, label %4

4:                                                ; preds = %2
  %5 = tail call i8* @_Znwm(i64 24) #18
  %6 = bitcast i8* %5 to %"class.std::__1::vector.4145"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %5, i8 0, i64 24, i1 false) #16
  br label %7

7:                                                ; preds = %21, %4
  %8 = phi %"class.blink::CSSRule"* [ %1, %4 ], [ %22, %21 ]
  %9 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %8, i64 0, i32 1
  %10 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %8, i64 0, i32 2, i32 0, i32 0
  %11 = bitcast %"class.blink::ScriptWrappable"** %10 to %"class.blink::CSSStyleSheet"**
  br label %12

12:                                               ; preds = %7, %23
  tail call void @_ZN5blink17InspectorCSSAgent27CollectMediaQueriesFromRuleEPNS_7CSSRuleEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSRule"* nonnull %8, %"class.std::__1::vector.4145"* nonnull %6)
  %13 = load i8, i8* %9, align 8
  %14 = and i8 %13, 2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %23, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.blink::ScriptWrappable"** %10 to %"class.blink::CSSRule"**
  %18 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %17, align 8
  %19 = icmp eq %"class.blink::CSSRule"* %18, null
  %20 = select i1 %19, %"class.blink::CSSRule"* %8, %"class.blink::CSSRule"* %18
  br label %21

21:                                               ; preds = %26, %16
  %22 = phi %"class.blink::CSSRule"* [ %20, %16 ], [ %29, %26 ]
  br label %7

23:                                               ; preds = %12
  %24 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %11, align 8
  %25 = icmp eq %"class.blink::CSSStyleSheet"* %24, null
  br i1 %25, label %12, label %26

26:                                               ; preds = %23, %31
  %27 = phi %"class.blink::CSSStyleSheet"* [ %32, %31 ], [ %24, %23 ]
  tail call void @_ZN5blink17InspectorCSSAgent33CollectMediaQueriesFromStyleSheetEPNS_13CSSStyleSheetEPNSt3__16vectorINS3_10unique_ptrINS_8protocol3CSS8CSSMediaENS3_14default_deleteIS8_EEEENS3_9allocatorISB_EEEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleSheet"* nonnull %27, %"class.std::__1::vector.4145"* nonnull %6)
  %28 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %27, i64 0, i32 12, i32 0, i32 0
  %29 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %28, align 8
  %30 = icmp eq %"class.blink::CSSRule"* %29, null
  br i1 %30, label %31, label %21

31:                                               ; preds = %26
  %32 = tail call %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSStyleSheet16parentStyleSheetEv(%"class.blink::CSSStyleSheet"* nonnull %27) #16
  %33 = icmp eq %"class.blink::CSSStyleSheet"* %32, null
  br i1 %33, label %34, label %26

34:                                               ; preds = %31
  %35 = bitcast i8* %5 to %"class.std::__1::vector.4145"*
  br label %36

36:                                               ; preds = %34, %2
  %37 = phi %"class.std::__1::vector.4145"* [ null, %2 ], [ %35, %34 ]
  ret %"class.std::__1::vector.4145"* %37
}

declare %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSStyleSheet16parentStyleSheetEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare void @_ZN5blink11StyleEngine29ActiveStyleSheetsForInspectorEv(%"class.blink::HeapVector.1298"* sret, %"class.blink::StyleEngine"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent18CollectStyleSheetsEPNS_13CSSStyleSheetERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::CSSStyleSheet"*, %"class.blink::HeapVector.383"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet"*, align 8
  store %"class.blink::CSSStyleSheet"* %0, %"class.blink::CSSStyleSheet"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %1, i64 0, i32 0, i32 0, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %1, i64 0, i32 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %5, %7
  br i1 %8, label %24, label %9, !prof !3

9:                                                ; preds = %2
  %10 = ptrtoint %"class.blink::CSSStyleSheet"* %0 to i64
  %11 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %11, align 8
  %13 = zext i32 %5 to i64
  %14 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %12, i64 %13
  %15 = bitcast %"class.blink::Member.389"* %14 to i64*
  store atomic i64 %10, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %21, label %18

18:                                               ; preds = %9
  %19 = bitcast %"class.blink::CSSStyleSheet"* %0 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #16
  br label %21

21:                                               ; preds = %18, %9
  %22 = load i32, i32* %4, align 4
  %23 = add i32 %22, 1
  store i32 %23, i32* %4, align 4
  br label %26

24:                                               ; preds = %2
  %25 = getelementptr inbounds %"class.blink::HeapVector.383", %"class.blink::HeapVector.383"* %1, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.386"* %25, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3) #16
  br label %26

26:                                               ; preds = %21, %24
  %27 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %28 = call i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"* %27) #16
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %48, %26
  ret void

31:                                               ; preds = %26, %48
  %32 = phi i32 [ %49, %48 ], [ 0, %26 ]
  %33 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %3, align 8
  %34 = call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %33, i32 %32) #16
  %35 = icmp eq %"class.blink::CSSRule"* %34, null
  br i1 %35, label %48, label %36

36:                                               ; preds = %31
  %37 = bitcast %"class.blink::CSSRule"* %34 to i32 (%"class.blink::CSSRule"*)***
  %38 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %37, align 8
  %39 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %38, i64 9
  %40 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %39, align 8
  %41 = call i32 %40(%"class.blink::CSSRule"* nonnull %34) #16
  %42 = icmp eq i32 %41, 3
  br i1 %42, label %43, label %48

43:                                               ; preds = %36
  %44 = bitcast %"class.blink::CSSRule"* %34 to %"class.blink::CSSImportRule"*
  %45 = call %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSImportRule10styleSheetEv(%"class.blink::CSSImportRule"* nonnull %44) #16
  %46 = icmp eq %"class.blink::CSSStyleSheet"* %45, null
  br i1 %46, label %48, label %47

47:                                               ; preds = %43
  call void @_ZN5blink17InspectorCSSAgent18CollectStyleSheetsEPNS_13CSSStyleSheetERNS_10HeapVectorINS_6MemberIS1_EELj0EEE(%"class.blink::CSSStyleSheet"* nonnull %45, %"class.blink::HeapVector.383"* dereferenceable(16) %1)
  br label %48

48:                                               ; preds = %36, %31, %47, %43
  %49 = add nuw i32 %32, 1
  %50 = icmp eq i32 %49, %28
  br i1 %50, label %30, label %31
}

declare i32 @_ZNK5blink13CSSStyleSheet6lengthEv(%"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"*, i32) local_unnamed_addr #1

declare %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSImportRule10styleSheetEv(%"class.blink::CSSImportRule"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent12DetectOriginEPNS_13CSSStyleSheetEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"* nocapture readnone, %"class.blink::CSSStyleSheet"*, %"class.blink::Document"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 11, i32 0, i32 0
  %6 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %7 = icmp eq %"class.blink::Node"* %6, null
  br i1 %7, label %8, label %41

8:                                                ; preds = %3
  %9 = tail call %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4hrefEv(%"class.blink::CSSStyleSheet"* %1) #16
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %11, label %15

11:                                               ; preds = %8
  %12 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 14, i32 0, i32 0
  %13 = load %"class.blink::Document"*, %"class.blink::Document"** %12, align 8
  %14 = icmp eq %"class.blink::Document"* %13, null
  br i1 %14, label %56, label %38

15:                                               ; preds = %8
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %17 = load i32, i32* %16, align 4
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %23

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %1, i64 0, i32 14, i32 0, i32 0
  %21 = load %"class.blink::Document"*, %"class.blink::Document"** %20, align 8
  %22 = icmp eq %"class.blink::Document"* %21, null
  br label %23

23:                                               ; preds = %15, %19
  %24 = phi i1 [ %22, %19 ], [ false, %15 ]
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %23
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %23
  %34 = phi i32 [ %32, %31 ], [ %30, %23 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #16
  br i1 %24, label %56, label %38

37:                                               ; preds = %33
  br i1 %24, label %56, label %38

38:                                               ; preds = %11, %36, %37
  %39 = load %"class.blink::Node"*, %"class.blink::Node"** %5, align 8
  %40 = icmp eq %"class.blink::Node"* %39, null
  br i1 %40, label %56, label %41

41:                                               ; preds = %3, %38
  %42 = phi %"class.blink::Node"* [ %39, %38 ], [ %6, %3 ]
  %43 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %42, i64 0, i32 3, i32 0, i32 0
  %44 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %44, i64 0, i32 2, i32 0, i32 0
  %46 = load %"class.blink::Document"*, %"class.blink::Document"** %45, align 8
  %47 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %46, i64 0, i32 0, i32 0
  %48 = icmp eq %"class.blink::Node"* %47, %42
  br i1 %48, label %49, label %56

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %2, i64 0, i32 59, i32 0, i32 0
  %51 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %50, align 8
  %52 = getelementptr inbounds %"class.blink::StyleEngine", %"class.blink::StyleEngine"* %51, i64 0, i32 6, i32 0, i32 0
  %53 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %52, align 8
  %54 = icmp eq %"class.blink::CSSStyleSheet"* %53, %1
  %55 = select i1 %54, i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9InspectorE, i64 0, i64 0), i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum8InjectedE, i64 0, i64 0)
  br label %56

56:                                               ; preds = %41, %38, %49, %37, %36, %11
  %57 = phi i8* [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0), %11 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0), %36 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum9UserAgentE, i64 0, i64 0), %37 ], [ %55, %49 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0), %38 ], [ getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink8protocol3CSS20StyleSheetOriginEnum7RegularE, i64 0, i64 0), %41 ]
  %58 = tail call i64 @strlen(i8* nonnull %57) #17
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* %57, i64 %58) #16
  %59 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  ret %"class.WTF::StringImpl"* %60
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent12StyleSheetIdEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = tail call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::CSSStyleSheet"* %1)
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %3, i64 0, i32 0, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  ret %"class.WTF::StringImpl"* %5
}

declare dereferenceable(192) %"class.blink::CSSDefaultStyleSheets"* @_ZN5blink21CSSDefaultStyleSheets8InstanceEv() local_unnamed_addr #1

declare void @_ZN5blink7CSSRule19SetParentStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::CSSRule"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #1

declare dereferenceable(192) %"class.blink::CSSStyleSheet"* @_ZN5blink11StyleEngine25EnsureInspectorStyleSheetEv(%"class.blink::StyleEngine"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13CSSStyleSheet4hrefEv(%"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare %"class.blink::protocol::CSS::CSSRule"* @_ZN5blink19InspectorStyleSheet30BuildObjectForRuleWithoutMediaEPNS_12CSSStyleRuleE(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSStyleRule"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::Vector.3923"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_12CSSStyleRuleEEENSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS5_14default_deleteIS9_EEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENSF_ISC_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.4633"*, %"class.blink::CSSStyleRule"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %1, align 8
  %4 = ptrtoint %"class.blink::CSSStyleRule"* %3 to i64
  %5 = getelementptr inbounds %"class.WTF::HashMap.4633", %"class.WTF::HashMap.4633"* %0, i64 0, i32 0, i32 0
  %6 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %5, align 8
  %7 = icmp eq %"struct.WTF::KeyValuePair.4636"* %6, null
  br i1 %7, label %73, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.WTF::HashMap.4633", %"class.WTF::HashMap.4633"* %0, i64 0, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = add i32 %10, -1
  %12 = zext i32 %11 to i64
  %13 = shl i64 %4, 32
  %14 = xor i64 %13, -1
  %15 = add i64 %14, %4
  %16 = lshr i64 %15, 22
  %17 = xor i64 %16, %15
  %18 = shl i64 %17, 13
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 8
  %22 = xor i64 %21, %20
  %23 = mul i64 %22, 9
  %24 = lshr i64 %23, 15
  %25 = xor i64 %24, %23
  %26 = shl i64 %25, 27
  %27 = xor i64 %26, -1
  %28 = add i64 %25, %27
  %29 = lshr i64 %28, 31
  %30 = xor i64 %29, %28
  %31 = trunc i64 %30 to i32
  %32 = and i32 %11, %31
  %33 = zext i32 %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %6, i64 %33
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %34, i64 0, i32 0, i32 0, i32 0
  %36 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %35, align 8
  %37 = icmp eq %"class.blink::CSSStyleRule"* %36, %3
  br i1 %37, label %67, label %38

38:                                               ; preds = %8
  %39 = xor i32 %31, -1
  %40 = lshr i32 %31, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %52

52:                                               ; preds = %58, %38
  %53 = phi i64 [ %33, %38 ], [ %62, %58 ]
  %54 = phi i64 [ 0, %38 ], [ %60, %58 ]
  %55 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %6, i64 %53, i32 0, i32 0, i32 0
  %56 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %55, align 8
  %57 = icmp eq %"class.blink::CSSStyleRule"* %56, null
  br i1 %57, label %73, label %58

58:                                               ; preds = %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %51, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %12
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %6, i64 %62
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %64, align 8
  %66 = icmp eq %"class.blink::CSSStyleRule"* %65, %3
  br i1 %66, label %67, label %52

67:                                               ; preds = %58, %8
  %68 = phi %"struct.WTF::KeyValuePair.4636"* [ %34, %8 ], [ %63, %58 ]
  %69 = icmp eq %"struct.WTF::KeyValuePair.4636"* %68, null
  br i1 %69, label %73, label %70

70:                                               ; preds = %67
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %68, i64 0, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %71, align 8
  br label %73

73:                                               ; preds = %52, %2, %67, %70
  %74 = phi %"class.WTF::Vector.3923"* [ %72, %70 ], [ null, %67 ], [ null, %2 ], [ null, %52 ]
  ret %"class.WTF::Vector.3923"* %74
}

declare zeroext i1 @_ZNK5blink4Node15IsStyledElementEv(%"class.blink::Node"*) local_unnamed_addr #1

declare %"class.blink::CSSStyleDeclaration"* @_ZN5blink26MutableCSSPropertyValueSet25EnsureCSSStyleDeclarationEPNS_16ExecutionContextE(%"class.blink::MutableCSSPropertyValueSet"*, %"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink14InspectorStyle19BuildObjectForStyleEv(%"class.blink::InspectorStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent14DidAddDocumentEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"* nocapture readonly, %"class.blink::Document"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 16, i32 0, i32 0
  %5 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %4, align 8
  %6 = icmp eq %"class.blink::StyleRuleUsageTracker"* %5, null
  br i1 %6, label %52, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 59, i32 0, i32 0
  %9 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %8, align 8
  tail call void @_ZN5blink11StyleEngine19SetRuleUsageTrackerEPNS_21StyleRuleUsageTrackerE(%"class.blink::StyleEngine"* %9, %"class.blink::StyleRuleUsageTracker"* nonnull %5) #16
  %10 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %8, align 8
  %11 = bitcast %"class.blink::StyleChangeReasonForTracing"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %13 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %12, i64 0, i32 0, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %33, label %16

16:                                               ; preds = %7
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %21, label %33

21:                                               ; preds = %16
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %23 = load i32, i32* %22, align 4
  %24 = zext i32 %23 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #16
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %21
  tail call void @llvm.trap() #16
  unreachable

31:                                               ; preds = %21
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %22, align 4
  br label %33

33:                                               ; preds = %7, %16, %31
  %34 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 0
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kInspectorE, i64 0, i64 0), i8** %34, align 8
  %35 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %3, i64 0, i32 1, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %35, align 8
  call void @_ZN5blink11StyleEngine29MarkAllElementsForStyleRecalcERKNS_27StyleChangeReasonForTracingE(%"class.blink::StyleEngine"* %10, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %3) #16
  %36 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %35, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %37, label %51, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %44 = load i32, i32* %43, align 4
  br i1 %42, label %45, label %47

45:                                               ; preds = %38
  %46 = add i32 %44, -1
  store i32 %46, i32* %43, align 4
  br label %47

47:                                               ; preds = %45, %38
  %48 = phi i32 [ %46, %45 ], [ %44, %38 ]
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %50, label %51

50:                                               ; preds = %47
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #16
  br label %51

51:                                               ; preds = %33, %47, %50
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  br label %52

52:                                               ; preds = %2, %51
  ret void
}

declare void @_ZN5blink11StyleEngine19SetRuleUsageTrackerEPNS_21StyleRuleUsageTrackerE(%"class.blink::StyleEngine"*, %"class.blink::StyleRuleUsageTracker"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink17InspectorCSSAgent14DidAddDocumentEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"* nocapture readonly, %"class.blink::Document"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 25
  %4 = bitcast %"class.WTF::HashMap.3317"* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent14DidAddDocumentEPNS_8DocumentE(%"class.blink::InspectorCSSAgent"* %4, %"class.blink::Document"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17WillRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Node"*) unnamed_addr #0 align 2 {
  %3 = alloca i32, align 4
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast i32* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %7 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %6, align 8
  %8 = tail call i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %7, %"class.blink::Node"* %1) #16
  store i32 %8, i32* %3, align 4
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 14
  call void @_ZN3WTF7HashMapIijNS_7IntHashIiEENS_10HashTraitsIiEENS3_IjEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashMap.3312"* %9, i32* nonnull dereferenceable(4) %3)
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27
  call void @_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashSet.3219"* %10, i32* nonnull dereferenceable(4) %3)
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0
  %12 = getelementptr inbounds %"class.WTF::HashMap.3308", %"class.WTF::HashMap.3308"* %11, i64 0, i32 0
  %13 = call { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3309"* %12, %"class.blink::Node"* %1) #16
  %14 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashMap.3308", %"class.WTF::HashMap.3308"* %11, i64 0, i32 0, i32 0
  %16 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = zext i32 %18 to i64
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %16, i64 %19
  %21 = icmp eq %"struct.WTF::KeyValuePair.3311"* %14, %20
  br i1 %21, label %85, label %22

22:                                               ; preds = %2
  %23 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9, i32 0
  %24 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %14, i64 0, i32 1, i32 0, i32 0
  %26 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %26, i64 0, i32 0, i32 1, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #16
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %22, %30, %45
  %48 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %28, %"class.WTF::StringImpl"** %48, align 8
  %49 = getelementptr inbounds %"class.WTF::HashMap.3281", %"class.WTF::HashMap.3281"* %23, i64 0, i32 0
  %50 = call { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.3282"* %49, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %51 = extractvalue { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } %50, 0
  %52 = getelementptr inbounds %"class.WTF::HashMap.3281", %"class.WTF::HashMap.3281"* %23, i64 0, i32 0, i32 0
  %53 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9, i32 0, i32 0, i32 1
  %55 = load i32, i32* %54, align 8
  %56 = zext i32 %55 to i64
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %53, i64 %56
  %58 = icmp eq %"struct.WTF::KeyValuePair.3284"* %57, %51
  br i1 %58, label %60, label %59

59:                                               ; preds = %47
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.3282"* %49, %"struct.WTF::KeyValuePair.3284"* %51) #16
  br label %60

60:                                               ; preds = %47, %59
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %62 = icmp eq %"class.WTF::StringImpl"* %61, null
  br i1 %62, label %76, label %63

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %65 = load atomic i32, i32* %64 monotonic, align 4
  %66 = and i32 %65, 2
  %67 = icmp eq i32 %66, 0
  %68 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %61, i64 0, i32 0
  %69 = load i32, i32* %68, align 4
  br i1 %67, label %70, label %72

70:                                               ; preds = %63
  %71 = add i32 %69, -1
  store i32 %71, i32* %68, align 4
  br label %72

72:                                               ; preds = %70, %63
  %73 = phi i32 [ %71, %70 ], [ %69, %63 ]
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %76

75:                                               ; preds = %72
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %61) #16
  br label %76

76:                                               ; preds = %60, %72, %75
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  %77 = call { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3309"* %12, %"class.blink::Node"* %1) #16
  %78 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } %77, 0
  %79 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %15, align 8
  %80 = load i32, i32* %17, align 8
  %81 = zext i32 %80 to i64
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %79, i64 %81
  %83 = icmp eq %"struct.WTF::KeyValuePair.3311"* %82, %78
  br i1 %83, label %85, label %84

84:                                               ; preds = %76
  call void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable.3309"* %12, %"struct.WTF::KeyValuePair.3311"* %78) #16
  br label %85

85:                                               ; preds = %84, %76, %2
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %5) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF7HashSetIiNS_7IntHashIiEENS_10HashTraitsIiEENS_18PartitionAllocatorEE5eraseERKi(%"class.WTF::HashSet.3219"*, i32* dereferenceable(4)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %0, i64 0, i32 0, i32 0
  %4 = load i32*, i32** %3, align 8
  %5 = icmp eq i32* %4, null
  %6 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %0, i64 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  br i1 %5, label %64, label %8

8:                                                ; preds = %2
  %9 = add i32 %7, -1
  %10 = zext i32 %9 to i64
  %11 = load i32, i32* %1, align 4
  %12 = shl i32 %11, 15
  %13 = xor i32 %12, -1
  %14 = add i32 %11, %13
  %15 = lshr i32 %14, 10
  %16 = xor i32 %15, %14
  %17 = mul i32 %16, 9
  %18 = lshr i32 %17, 6
  %19 = xor i32 %18, %17
  %20 = shl i32 %19, 11
  %21 = xor i32 %20, -1
  %22 = add i32 %19, %21
  %23 = lshr i32 %22, 16
  %24 = xor i32 %23, %22
  %25 = and i32 %24, %9
  %26 = zext i32 %25 to i64
  %27 = getelementptr inbounds i32, i32* %4, i64 %26
  %28 = load i32, i32* %27, align 4
  %29 = icmp eq i32 %28, %11
  br i1 %29, label %59, label %30

30:                                               ; preds = %8
  %31 = xor i32 %24, -1
  %32 = lshr i32 %22, 23
  %33 = add i32 %32, %31
  %34 = shl i32 %33, 12
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 7
  %37 = xor i32 %36, %35
  %38 = shl i32 %37, 2
  %39 = xor i32 %38, %37
  %40 = lshr i32 %39, 20
  %41 = xor i32 %40, %39
  %42 = or i32 %41, 1
  %43 = zext i32 %42 to i64
  br label %44

44:                                               ; preds = %49, %30
  %45 = phi i32 [ %28, %30 ], [ %55, %49 ]
  %46 = phi i64 [ %26, %30 ], [ %53, %49 ]
  %47 = phi i64 [ 0, %30 ], [ %51, %49 ]
  %48 = icmp eq i32 %45, 0
  br i1 %48, label %64, label %49

49:                                               ; preds = %44
  %50 = icmp eq i64 %47, 0
  %51 = select i1 %50, i64 %43, i64 %47
  %52 = add i64 %51, %46
  %53 = and i64 %52, %10
  %54 = getelementptr inbounds i32, i32* %4, i64 %53
  %55 = load i32, i32* %54, align 4
  %56 = icmp eq i32 %55, %11
  br i1 %56, label %57, label %44

57:                                               ; preds = %49
  %58 = getelementptr inbounds i32, i32* %4, i64 %53
  br label %59

59:                                               ; preds = %57, %8
  %60 = phi i32* [ %27, %8 ], [ %58, %57 ]
  %61 = icmp eq i32* %60, null
  br i1 %61, label %64, label %62

62:                                               ; preds = %59
  %63 = zext i32 %7 to i64
  br label %67

64:                                               ; preds = %44, %59, %2
  %65 = zext i32 %7 to i64
  %66 = getelementptr inbounds i32, i32* %4, i64 %65
  br label %67

67:                                               ; preds = %62, %64
  %68 = phi i64 [ %63, %62 ], [ %65, %64 ]
  %69 = phi i32* [ %60, %62 ], [ %66, %64 ]
  %70 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %0, i64 0, i32 0
  %71 = getelementptr inbounds i32, i32* %4, i64 %68
  %72 = icmp eq i32* %71, %69
  br i1 %72, label %95, label %73

73:                                               ; preds = %67
  store i32 -1, i32* %69, align 4
  %74 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %0, i64 0, i32 0, i32 3
  %75 = load i32, i32* %74, align 8
  %76 = add i32 %75, 1
  %77 = and i32 %76, 2147483647
  %78 = and i32 %75, -2147483648
  %79 = or i32 %77, %78
  store i32 %79, i32* %74, align 8
  %80 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %0, i64 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = add i32 %81, -1
  store i32 %82, i32* %80, align 4
  %83 = mul i32 %82, 6
  %84 = load i32, i32* %6, align 8
  %85 = icmp ult i32 %83, %84
  %86 = icmp ugt i32 %84, 8
  %87 = and i1 %85, %86
  br i1 %87, label %88, label %95

88:                                               ; preds = %73
  %89 = lshr i32 %84, 1
  %90 = zext i32 %89 to i64
  %91 = shl nuw nsw i64 %90, 2
  %92 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %91, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #16
  tail call void @llvm.memset.p0i8.i64(i8* align 1 %92, i8 0, i64 %91, i1 false) #16
  %93 = bitcast i8* %92 to i32*
  %94 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable.3220"* %70, i32* %93, i32 %89, i32* null) #16
  br label %95

95:                                               ; preds = %67, %73, %88
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink17InspectorCSSAgent17WillRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Node"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 25
  %4 = bitcast %"class.WTF::HashMap.3317"* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent17WillRemoveDOMNodeEPNS_4NodeE(%"class.blink::InspectorCSSAgent"* %4, %"class.blink::Node"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent16DidModifyDOMAttrEPNS_7ElementE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = icmp eq %"class.blink::Element"* %1, null
  br i1 %3, label %20, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0
  %6 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.WTF::HashMap.3308", %"class.WTF::HashMap.3308"* %5, i64 0, i32 0
  %8 = tail call { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3309"* %7, %"class.blink::Node"* %6) #16
  %9 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } %8, 0
  %10 = getelementptr inbounds %"class.WTF::HashMap.3308", %"class.WTF::HashMap.3308"* %5, i64 0, i32 0, i32 0
  %11 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13, i32 0, i32 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %11, i64 %14
  %16 = icmp eq %"struct.WTF::KeyValuePair.3311"* %9, %15
  br i1 %16, label %20, label %17

17:                                               ; preds = %4
  %18 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %9, i64 0, i32 1, i32 0, i32 0
  %19 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %18, align 8
  tail call void @_ZN5blink33InspectorStyleSheetForInlineStyle25DidModifyElementAttributeEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %19) #16
  br label %20

20:                                               ; preds = %17, %4, %2
  ret void
}

declare void @_ZN5blink33InspectorStyleSheetForInlineStyle25DidModifyElementAttributeEv(%"class.blink::InspectorStyleSheetForInlineStyle"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_N5blink17InspectorCSSAgent16DidModifyDOMAttrEPNS_7ElementE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 25
  %4 = icmp eq %"class.blink::Element"* %1, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.WTF::HashMap.3317", %"class.WTF::HashMap.3317"* %3, i64 9, i32 0, i32 3
  %7 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %8 = bitcast i32* %6 to %"class.WTF::HashTable.3309"*
  %9 = tail call { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3309"* %8, %"class.blink::Node"* %7) #16
  %10 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } %9, 0
  %11 = bitcast i32* %6 to %"struct.WTF::KeyValuePair.3311"**
  %12 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::HashMap.3317", %"class.WTF::HashMap.3317"* %3, i64 10
  %14 = bitcast %"class.WTF::HashMap.3317"* %13 to i32*
  %15 = load i32, i32* %14, align 8
  %16 = zext i32 %15 to i64
  %17 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %12, i64 %16
  %18 = icmp eq %"struct.WTF::KeyValuePair.3311"* %10, %17
  br i1 %18, label %22, label %19

19:                                               ; preds = %5
  %20 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %10, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %20, align 8
  tail call void @_ZN5blink33InspectorStyleSheetForInlineStyle25DidModifyElementAttributeEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %21) #16
  br label %22

22:                                               ; preds = %2, %5, %19
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent19DidMutateStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet"*, align 8
  store %"class.blink::CSSStyleSheet"* %1, %"class.blink::CSSStyleSheet"** %3, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %5 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %4, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %3)
  %6 = icmp eq %"class.blink::InspectorStyleSheet"* %5, null
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %5, i64 0, i32 13
  store i8 1, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %5, i64 0, i32 0
  call void @_ZN5blink17InspectorCSSAgent17StyleSheetChangedEPNS_23InspectorStyleSheetBaseE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::InspectorStyleSheetBase"* %9)
  br label %10

10:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17StyleSheetChangedEPNS_23InspectorStyleSheetBaseE(%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorStyleSheetBase"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = load i32, i32* @_ZN5blink12_GLOBAL__N_128g_frontend_operation_counterE, align 4
  %5 = icmp eq i32 %4, 0
  br i1 %5, label %6, label %48

6:                                                ; preds = %2
  tail call void @_ZN5blink17InspectorCSSAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorCSSAgent"* %0)
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 4, i32 0, i32 0, i32 0
  %8 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %7, align 8
  %9 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %1, i64 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %6
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #16
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #16
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %6, %13, %28
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %31, align 8
  call void @_ZN5blink8protocol3CSS8Frontend17styleSheetChangedERKN3WTF6StringE(%"class.blink::protocol::CSS::Frontend"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %3) #16
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  br i1 %38, label %41, label %43

41:                                               ; preds = %34
  %42 = add i32 %40, -1
  store i32 %42, i32* %39, align 4
  br label %43

43:                                               ; preds = %41, %34
  %44 = phi i32 [ %42, %41 ], [ %40, %34 ]
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %46, label %47

46:                                               ; preds = %43
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #16
  br label %47

47:                                               ; preds = %30, %43, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %9) #16
  br label %48

48:                                               ; preds = %2, %47
  ret void
}

declare void @_ZN5blink8protocol3CSS8Frontend17styleSheetChangedERKN3WTF6StringE(%"class.blink::protocol::CSS::Frontend"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn64_N5blink17InspectorCSSAgent17StyleSheetChangedEPNS_23InspectorStyleSheetBaseE(%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorStyleSheetBase"* nocapture readonly) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 24, i32 1
  %4 = bitcast i8* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent17StyleSheetChangedEPNS_23InspectorStyleSheetBaseE(%"class.blink::InspectorCSSAgent"* %4, %"class.blink::InspectorStyleSheetBase"* %1)
  ret void
}

declare %"class.blink::Node"* @_ZN5blink17InspectorDOMAgent9NodeForIdEi(%"class.blink::InspectorDOMAgent"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent14MatchingStylesEPNS_7ElementE(%"class.blink::HeapVector.4655"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readnone, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapHashSet.4624", align 8
  %5 = alloca %"class.blink::CSSRule"*, align 8
  %6 = alloca %"class.blink::CSSStyleRule"*, align 8
  %7 = alloca %"class.blink::HeapVector.4617", align 8
  %8 = alloca %"class.blink::CSSStyleDeclaration"*, align 8
  %9 = alloca %"class.blink::CSSStyleDeclaration"*, align 8
  %10 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %2, i64 0, i32 0, i32 0
  %11 = bitcast %"class.blink::Element"* %2 to i8 (%"class.blink::Node"*)***
  %12 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %11, align 8
  %13 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %12, i64 34
  %14 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %13, align 8
  %15 = tail call zeroext i8 %14(%"class.blink::Node"* %10) #16
  %16 = icmp ne i8 %15, 0
  br i1 %16, label %17, label %27

17:                                               ; preds = %3
  %18 = tail call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %10) #16
  %19 = icmp eq %"class.blink::ContainerNode"* %18, null
  br i1 %19, label %27, label %20

20:                                               ; preds = %17
  %21 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %18, i64 0, i32 0, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = and i32 %22, 12
  %24 = icmp eq i32 %23, 0
  %25 = bitcast %"class.blink::ContainerNode"* %18 to %"class.blink::Element"*
  %26 = select i1 %24, %"class.blink::Element"* %25, %"class.blink::Element"* null
  br label %27

27:                                               ; preds = %20, %17, %3
  %28 = phi %"class.blink::Element"* [ %2, %3 ], [ %26, %20 ], [ null, %17 ]
  %29 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %28, i64 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %28, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %31 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %31, i64 0, i32 2, i32 0, i32 0
  %33 = load %"class.blink::Document"*, %"class.blink::Document"** %32, align 8
  %34 = tail call dereferenceable(80) %"class.blink::StyleResolver"* @_ZNK5blink8Document16GetStyleResolverEv(%"class.blink::Document"* %33) #16
  tail call void @_ZN5blink4Node35UpdateDistributionForUnknownReasonsEv(%"class.blink::Node"* %29) #16
  %35 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %30, align 8
  %36 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %35, i64 0, i32 2, i32 0, i32 0
  %37 = load %"class.blink::Document"*, %"class.blink::Document"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %37, i64 0, i32 59, i32 0, i32 0
  %39 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %38, align 8
  tail call void @_ZN5blink11StyleEngine17UpdateActiveStyleEv(%"class.blink::StyleEngine"* %39) #16
  %40 = bitcast %"class.blink::HeapVector.4617"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %40) #16
  %41 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %7, i64 0, i32 0, i32 0, i32 0, i32 1
  %43 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %44 = tail call %"class.blink::HeapVector.4405"* @_ZN5blink13StyleResolver24PseudoCSSRulesForElementEPNS_7ElementENS_8PseudoIdEj(%"class.blink::StyleResolver"* %34, %"class.blink::Element"* %28, i8 zeroext %15, i32 62) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 16, i1 false) #16, !alias.scope !46
  %45 = bitcast %"class.blink::HeapHashSet.4624"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %45) #16, !noalias !46
  %46 = getelementptr inbounds %"class.blink::HeapHashSet.4624", %"class.blink::HeapHashSet.4624"* %4, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::HeapHashSet.4624", %"class.blink::HeapHashSet.4624"* %4, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 24, i1 false) #16, !noalias !46
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 0, i64 20, i1 false) #16, !noalias !46
  %48 = icmp eq %"class.blink::HeapVector.4405"* %44, null
  br i1 %48, label %193, label %49

49:                                               ; preds = %27
  %50 = getelementptr inbounds %"class.blink::HeapVector.4405", %"class.blink::HeapVector.4405"* %44, i64 0, i32 0, i32 0, i32 0, i32 2
  %51 = load i32, i32* %50, align 4, !noalias !46
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %193, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.blink::CSSRule"** %5 to i8*
  %55 = getelementptr inbounds %"class.blink::HeapVector.4405", %"class.blink::HeapVector.4405"* %44, i64 0, i32 0
  %56 = bitcast %"class.blink::CSSStyleRule"** %6 to i8*
  %57 = bitcast %"class.blink::CSSStyleRule"** %6 to %"class.blink::CSSRule"**
  %58 = getelementptr inbounds %"class.blink::HeapHashSet.4624", %"class.blink::HeapHashSet.4624"* %4, i64 0, i32 0, i32 0
  %59 = bitcast %"class.blink::CSSStyleRule"** %6 to i64*
  %60 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %7, i64 0, i32 0
  br label %91

61:                                               ; preds = %191
  %62 = load i32, i32* %43, align 4, !alias.scope !46
  %63 = icmp ugt i32 %62, 1
  br i1 %63, label %64, label %193

64:                                               ; preds = %61, %86
  %65 = phi i32 [ %87, %86 ], [ 0, %61 ]
  %66 = call dereferenceable(8) %"class.blink::Member.4589"* @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4620"* nonnull %60, i32 %65) #16
  %67 = load i32, i32* %43, align 4, !alias.scope !46
  %68 = xor i32 %65, -1
  %69 = add i32 %67, %68
  %70 = call dereferenceable(8) %"class.blink::Member.4589"* @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4620"* nonnull %60, i32 %69) #16
  %71 = bitcast %"class.blink::Member.4589"* %66 to i64*
  %72 = load i64, i64* %71, align 8
  %73 = bitcast %"class.blink::Member.4589"* %70 to i64*
  %74 = load i64, i64* %73, align 8
  store atomic i64 %74, i64* %71 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %80, label %77

77:                                               ; preds = %64
  %78 = inttoptr i64 %74 to i8*
  %79 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %78) #16
  br label %80

80:                                               ; preds = %77, %64
  store atomic i64 %72, i64* %73 monotonic, align 8
  %81 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %86, label %83

83:                                               ; preds = %80
  %84 = inttoptr i64 %72 to i8*
  %85 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %84) #16
  br label %86

86:                                               ; preds = %83, %80
  %87 = add nuw nsw i32 %65, 1
  %88 = load i32, i32* %43, align 4, !alias.scope !46
  %89 = lshr i32 %88, 1
  %90 = icmp ult i32 %87, %89
  br i1 %90, label %64, label %193

91:                                               ; preds = %191, %53
  %92 = phi i32 [ %51, %53 ], [ %93, %191 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %54) #16, !noalias !46
  store %"class.blink::CSSRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSRule"*), %"class.blink::CSSRule"** %5, align 8, !noalias !46
  %93 = add i32 %92, -1
  %94 = call dereferenceable(16) %"struct.std::__1::pair.4411"* @_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_7CSSRuleEEEiEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4408"* %55, i32 %93) #16
  %95 = getelementptr inbounds %"struct.std::__1::pair.4411", %"struct.std::__1::pair.4411"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %95, align 8
  store %"class.blink::CSSRule"* %96, %"class.blink::CSSRule"** %5, align 8, !noalias !46
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16, !noalias !46
  store %"class.blink::CSSStyleRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleRule"*), %"class.blink::CSSStyleRule"** %6, align 8, !noalias !46
  %97 = icmp eq %"class.blink::CSSRule"* %96, null
  br i1 %97, label %105, label %98

98:                                               ; preds = %91
  %99 = bitcast %"class.blink::CSSRule"* %96 to i32 (%"class.blink::CSSRule"*)***
  %100 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %99, align 8
  %101 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %100, i64 9
  %102 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %101, align 8
  %103 = call i32 %102(%"class.blink::CSSRule"* nonnull %96) #16
  %104 = icmp eq i32 %103, 1
  br i1 %104, label %106, label %105

105:                                              ; preds = %98, %91
  store %"class.blink::CSSStyleRule"* null, %"class.blink::CSSStyleRule"** %6, align 8, !noalias !46
  br label %191

106:                                              ; preds = %98
  store %"class.blink::CSSRule"* %96, %"class.blink::CSSRule"** %57, align 8, !noalias !46
  %107 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %5, align 8, !noalias !46
  %108 = ptrtoint %"class.blink::CSSRule"* %107 to i64
  %109 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %46, align 8, !noalias !46
  %110 = icmp eq %"class.blink::Member.644"* %109, null
  br i1 %110, label %171, label %111

111:                                              ; preds = %106
  %112 = load i32, i32* %47, align 8, !noalias !46
  %113 = add i32 %112, -1
  %114 = zext i32 %113 to i64
  %115 = shl i64 %108, 32
  %116 = xor i64 %115, -1
  %117 = add i64 %116, %108
  %118 = lshr i64 %117, 22
  %119 = xor i64 %118, %117
  %120 = shl i64 %119, 13
  %121 = xor i64 %120, -1
  %122 = add i64 %119, %121
  %123 = lshr i64 %122, 8
  %124 = xor i64 %123, %122
  %125 = mul i64 %124, 9
  %126 = lshr i64 %125, 15
  %127 = xor i64 %126, %125
  %128 = shl i64 %127, 27
  %129 = xor i64 %128, -1
  %130 = add i64 %127, %129
  %131 = lshr i64 %130, 31
  %132 = xor i64 %131, %130
  %133 = trunc i64 %132 to i32
  %134 = and i32 %113, %133
  %135 = zext i32 %134 to i64
  %136 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %109, i64 %135
  %137 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %136, i64 0, i32 0, i32 0
  %138 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %137, align 8
  %139 = icmp eq %"class.blink::CSSRule"* %138, %107
  br i1 %139, label %168, label %140

140:                                              ; preds = %111
  %141 = xor i32 %133, -1
  %142 = lshr i32 %133, 23
  %143 = add i32 %142, %141
  %144 = shl i32 %143, 12
  %145 = xor i32 %144, %143
  %146 = lshr i32 %145, 7
  %147 = xor i32 %146, %145
  %148 = shl i32 %147, 2
  %149 = xor i32 %148, %147
  %150 = lshr i32 %149, 20
  %151 = xor i32 %150, %149
  %152 = or i32 %151, 1
  %153 = zext i32 %152 to i64
  br label %154

154:                                              ; preds = %159, %140
  %155 = phi %"class.blink::CSSRule"* [ %138, %140 ], [ %166, %159 ]
  %156 = phi i64 [ %135, %140 ], [ %163, %159 ]
  %157 = phi i64 [ 0, %140 ], [ %161, %159 ]
  %158 = icmp eq %"class.blink::CSSRule"* %155, null
  br i1 %158, label %171, label %159

159:                                              ; preds = %154
  %160 = icmp eq i64 %157, 0
  %161 = select i1 %160, i64 %153, i64 %157
  %162 = add i64 %161, %156
  %163 = and i64 %162, %114
  %164 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %109, i64 %163
  %165 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %164, i64 0, i32 0, i32 0
  %166 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %165, align 8
  %167 = icmp eq %"class.blink::CSSRule"* %166, %107
  br i1 %167, label %168, label %154

168:                                              ; preds = %159, %111
  %169 = phi %"class.blink::Member.644"* [ %136, %111 ], [ %164, %159 ]
  %170 = icmp eq %"class.blink::Member.644"* %169, null
  br i1 %170, label %171, label %191

171:                                              ; preds = %154, %168, %106
  %172 = call { %"class.blink::Member.644"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4628"* nonnull %58, %"class.blink::CSSRule"** nonnull dereferenceable(8) %5, %"class.blink::CSSRule"** nonnull dereferenceable(8) %5) #16
  %173 = load i32, i32* %43, align 4, !alias.scope !46
  %174 = load i32, i32* %42, align 8, !alias.scope !46
  %175 = icmp eq i32 %173, %174
  br i1 %175, label %190, label %176, !prof !3

176:                                              ; preds = %171
  %177 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %41, align 8, !alias.scope !46
  %178 = zext i32 %173 to i64
  %179 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %177, i64 %178
  %180 = load i64, i64* %59, align 8, !noalias !46
  %181 = bitcast %"class.blink::Member.4589"* %179 to i64*
  store atomic i64 %180, i64* %181 monotonic, align 8
  %182 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %187, label %184

184:                                              ; preds = %176
  %185 = inttoptr i64 %180 to i8*
  %186 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %185) #16
  br label %187

187:                                              ; preds = %184, %176
  %188 = load i32, i32* %43, align 4, !alias.scope !46
  %189 = add i32 %188, 1
  store i32 %189, i32* %43, align 4, !alias.scope !46
  br label %191

190:                                              ; preds = %171
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.4620"* nonnull %60, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %6) #16
  br label %191

191:                                              ; preds = %190, %187, %168, %105
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16, !noalias !46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %54) #16, !noalias !46
  %192 = icmp eq i32 %93, 0
  br i1 %192, label %61, label %91

193:                                              ; preds = %86, %27, %49, %61
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %45) #16, !noalias !46
  %194 = getelementptr inbounds %"class.blink::HeapVector.4655", %"class.blink::HeapVector.4655"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %195 = getelementptr inbounds %"class.blink::HeapVector.4655", %"class.blink::HeapVector.4655"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %196 = getelementptr inbounds %"class.blink::HeapVector.4655", %"class.blink::HeapVector.4655"* %0, i64 0, i32 0, i32 0, i32 0, i32 2
  %197 = bitcast %"class.blink::HeapVector.4655"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %197, i8 0, i64 16, i1 false) #16
  br i1 %16, label %224, label %198

198:                                              ; preds = %193
  %199 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %28) #16
  %200 = icmp eq %"class.blink::CSSStyleDeclaration"* %199, null
  br i1 %200, label %224, label %201

201:                                              ; preds = %198
  %202 = bitcast %"class.blink::CSSStyleDeclaration"** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %202) #16
  %203 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink7Element5styleEv(%"class.blink::Element"* %28) #16
  store %"class.blink::CSSStyleDeclaration"* %203, %"class.blink::CSSStyleDeclaration"** %8, align 8
  %204 = load i32, i32* %196, align 4
  %205 = load i32, i32* %195, align 8
  %206 = icmp eq i32 %204, %205
  br i1 %206, label %221, label %207, !prof !3

207:                                              ; preds = %201
  %208 = ptrtoint %"class.blink::CSSStyleDeclaration"* %203 to i64
  %209 = load %"class.blink::Member.3969"*, %"class.blink::Member.3969"** %194, align 8
  %210 = zext i32 %204 to i64
  %211 = getelementptr inbounds %"class.blink::Member.3969", %"class.blink::Member.3969"* %209, i64 %210
  %212 = bitcast %"class.blink::Member.3969"* %211 to i64*
  store atomic i64 %208, i64* %212 monotonic, align 8
  %213 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %214 = icmp eq i32 %213, 0
  br i1 %214, label %218, label %215

215:                                              ; preds = %207
  %216 = bitcast %"class.blink::CSSStyleDeclaration"* %203 to i8*
  %217 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %216) #16
  br label %218

218:                                              ; preds = %215, %207
  %219 = load i32, i32* %196, align 4
  %220 = add i32 %219, 1
  store i32 %220, i32* %196, align 4
  br label %223

221:                                              ; preds = %201
  %222 = getelementptr inbounds %"class.blink::HeapVector.4655", %"class.blink::HeapVector.4655"* %0, i64 0, i32 0
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.4658"* %222, %"class.blink::CSSStyleDeclaration"** nonnull dereferenceable(8) %8) #16
  br label %223

223:                                              ; preds = %218, %221
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %202) #16
  br label %224

224:                                              ; preds = %198, %223, %193
  %225 = getelementptr inbounds %"class.blink::HeapVector.4617", %"class.blink::HeapVector.4617"* %7, i64 0, i32 0
  %226 = load i32, i32* %43, align 4
  %227 = icmp eq i32 %226, 0
  br i1 %227, label %231, label %228

228:                                              ; preds = %224
  %229 = bitcast %"class.blink::CSSStyleDeclaration"** %9 to i8*
  %230 = getelementptr inbounds %"class.blink::HeapVector.4655", %"class.blink::HeapVector.4655"* %0, i64 0, i32 0
  br label %232

231:                                              ; preds = %292, %224
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %40) #16
  ret void

232:                                              ; preds = %228, %292
  %233 = phi i32 [ %226, %228 ], [ %234, %292 ]
  %234 = add i32 %233, -1
  %235 = call dereferenceable(8) %"class.blink::Member.4589"* @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4620"* nonnull %225, i32 %234)
  %236 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %235, i64 0, i32 0, i32 0
  %237 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %236, align 8
  %238 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %237, i64 0, i32 0, i32 1
  %239 = load i8, i8* %238, align 8
  %240 = and i8 %239, 2
  %241 = icmp eq i8 %240, 0
  %242 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %237, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %241, label %259, label %243

243:                                              ; preds = %232
  %244 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %237, i64 0, i32 0
  br label %245

245:                                              ; preds = %243, %250
  %246 = phi %"class.blink::ScriptWrappable"** [ %258, %250 ], [ %242, %243 ]
  %247 = phi %"class.blink::CSSRule"* [ %253, %250 ], [ %244, %243 ]
  %248 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %246, align 8
  %249 = icmp eq %"class.blink::ScriptWrappable"* %248, null
  br i1 %249, label %292, label %250

250:                                              ; preds = %245
  %251 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %247, i64 0, i32 2, i32 0, i32 0
  %252 = bitcast %"class.blink::ScriptWrappable"** %251 to %"class.blink::CSSRule"**
  %253 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %252, align 8
  %254 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %253, i64 0, i32 1
  %255 = load i8, i8* %254, align 8
  %256 = and i8 %255, 2
  %257 = icmp eq i8 %256, 0
  %258 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %253, i64 0, i32 2, i32 0, i32 0
  br i1 %257, label %259, label %245

259:                                              ; preds = %250, %232
  %260 = phi %"class.blink::ScriptWrappable"** [ %242, %232 ], [ %258, %250 ]
  %261 = bitcast %"class.blink::ScriptWrappable"** %260 to %"class.blink::CSSStyleSheet"**
  %262 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %261, align 8
  %263 = icmp eq %"class.blink::CSSStyleSheet"* %262, null
  br i1 %263, label %292, label %264

264:                                              ; preds = %259
  %265 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %262, i64 0, i32 11, i32 0, i32 0
  %266 = load %"class.blink::Node"*, %"class.blink::Node"** %265, align 8
  %267 = icmp eq %"class.blink::Node"* %266, null
  br i1 %267, label %292, label %268

268:                                              ; preds = %264
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %229) #16
  %269 = call dereferenceable(8) %"class.blink::Member.4589"* @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4620"* nonnull %225, i32 %234)
  %270 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %269, i64 0, i32 0, i32 0
  %271 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %270, align 8
  %272 = call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"* %271) #16
  store %"class.blink::CSSStyleDeclaration"* %272, %"class.blink::CSSStyleDeclaration"** %9, align 8
  %273 = load i32, i32* %196, align 4
  %274 = load i32, i32* %195, align 8
  %275 = icmp eq i32 %273, %274
  br i1 %275, label %290, label %276, !prof !3

276:                                              ; preds = %268
  %277 = ptrtoint %"class.blink::CSSStyleDeclaration"* %272 to i64
  %278 = load %"class.blink::Member.3969"*, %"class.blink::Member.3969"** %194, align 8
  %279 = zext i32 %273 to i64
  %280 = getelementptr inbounds %"class.blink::Member.3969", %"class.blink::Member.3969"* %278, i64 %279
  %281 = bitcast %"class.blink::Member.3969"* %280 to i64*
  store atomic i64 %277, i64* %281 monotonic, align 8
  %282 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %283 = icmp eq i32 %282, 0
  br i1 %283, label %287, label %284

284:                                              ; preds = %276
  %285 = bitcast %"class.blink::CSSStyleDeclaration"* %272 to i8*
  %286 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %285) #16
  br label %287

287:                                              ; preds = %284, %276
  %288 = load i32, i32* %196, align 4
  %289 = add i32 %288, 1
  store i32 %289, i32* %196, align 4
  br label %291

290:                                              ; preds = %268
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.4658"* %230, %"class.blink::CSSStyleDeclaration"** nonnull dereferenceable(8) %9) #16
  br label %291

291:                                              ; preds = %287, %290
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %229) #16
  br label %292

292:                                              ; preds = %245, %259, %264, %291
  %293 = icmp eq i32 %234, 0
  br i1 %293, label %231, label %232
}

declare void @_ZN5blink4Node35UpdateDistributionForUnknownReasonsEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink11StyleEngine17UpdateActiveStyleEv(%"class.blink::StyleEngine"*) local_unnamed_addr #1

declare %"class.blink::HeapVector.4405"* @_ZN5blink13StyleResolver24PseudoCSSRulesForElementEPNS_7ElementENS_8PseudoIdEj(%"class.blink::StyleResolver"*, %"class.blink::Element"*, i8 zeroext, i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.4589"* @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4620"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %24, i64 %25
  ret %"class.blink::Member.4589"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::CSSStyleDeclaration"* @_ZN5blink17InspectorCSSAgent24FindEffectiveDeclarationERKNS_15CSSPropertyNameERKNS_10HeapVectorINS_6MemberINS_19CSSStyleDeclarationEEELj0EEE(%"class.blink::InspectorCSSAgent"* nocapture readnone, %"class.blink::CSSPropertyName"* dereferenceable(16), %"class.blink::HeapVector.4655"* dereferenceable(16)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::String", align 8
  %7 = getelementptr inbounds %"class.blink::HeapVector.4655", %"class.blink::HeapVector.4655"* %2, i64 0, i32 0
  %8 = getelementptr inbounds %"class.blink::HeapVector.4655", %"class.blink::HeapVector.4655"* %2, i64 0, i32 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %151, label %11

11:                                               ; preds = %3
  %12 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %14 = tail call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %1) #16
  store %"class.WTF::StringImpl"* %14, %"class.WTF::StringImpl"** %13, align 8
  %15 = icmp eq %"class.WTF::StringImpl"* %14, null
  br i1 %15, label %45, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 2
  %20 = icmp eq i32 %19, 0
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  br i1 %20, label %23, label %33

23:                                               ; preds = %16
  %24 = zext i32 %22 to i33
  %25 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %24, i33 1) #16
  %26 = extractvalue { i33, i1 } %25, 1
  %27 = extractvalue { i33, i1 } %25, 0
  %28 = icmp slt i33 %27, 0
  %29 = or i1 %26, %28
  br i1 %29, label %30, label %31, !prof !3

30:                                               ; preds = %23
  tail call void @llvm.trap() #16
  unreachable

31:                                               ; preds = %23
  %32 = trunc i33 %27 to i32
  store i32 %32, i32* %21, align 4
  br label %33

33:                                               ; preds = %16, %31
  %34 = phi i32 [ %32, %31 ], [ %22, %16 ]
  %35 = load atomic i32, i32* %17 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  br i1 %37, label %38, label %41

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %14, i64 0, i32 0
  %40 = add i32 %34, -1
  store i32 %40, i32* %39, align 4
  br label %41

41:                                               ; preds = %38, %33
  %42 = phi i32 [ %40, %38 ], [ %34, %33 ]
  %43 = icmp eq i32 %42, 0
  br i1 %43, label %44, label %45

44:                                               ; preds = %41
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %14) #16
  br label %45

45:                                               ; preds = %11, %41, %44
  %46 = load i32, i32* %8, align 4
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %129, label %48

48:                                               ; preds = %45
  %49 = bitcast %"class.WTF::StringView"* %4 to i8*
  %50 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  %51 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %52 = bitcast i8** %51 to %"class.WTF::StringImpl"**
  %53 = bitcast %"class.WTF::StringView"* %4 to i64*
  %54 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  %55 = bitcast %"class.WTF::StringView"* %5 to i8*
  %56 = bitcast %"class.WTF::StringView"* %5 to i64*
  %57 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  %58 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  br label %59

59:                                               ; preds = %48, %122
  %60 = phi i32 [ 0, %48 ], [ %124, %122 ]
  %61 = phi %"class.blink::CSSStyleDeclaration"* [ null, %48 ], [ %123, %122 ]
  %62 = call dereferenceable(8) %"class.blink::Member.3969"* @_ZNK3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4658"* %7, i32 %60)
  %63 = getelementptr inbounds %"class.blink::Member.3969", %"class.blink::Member.3969"* %62, i64 0, i32 0, i32 0
  %64 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %63, align 8
  %65 = bitcast %"class.blink::CSSStyleDeclaration"* %64 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %66 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %65, align 8
  %67 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %66, i64 14
  %68 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %67, align 8
  %69 = call %"class.WTF::StringImpl"* %68(%"class.blink::CSSStyleDeclaration"* %64, %"class.WTF::String"* nonnull dereferenceable(8) %6) #16
  %70 = icmp eq %"class.WTF::StringImpl"* %69, null
  br i1 %70, label %122, label %71

71:                                               ; preds = %59
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 1
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %76 = load atomic i32, i32* %75 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %69, i64 0, i32 0
  %80 = load i32, i32* %79, align 4
  br i1 %78, label %81, label %83

81:                                               ; preds = %71
  %82 = add i32 %80, -1
  store i32 %82, i32* %79, align 4
  br label %83

83:                                               ; preds = %81, %71
  %84 = phi i32 [ %82, %81 ], [ %80, %71 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %87

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %69) #16
  br i1 %74, label %122, label %88

87:                                               ; preds = %83
  br i1 %74, label %122, label %88

88:                                               ; preds = %86, %87
  %89 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %65, align 8
  %90 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %89, i64 15
  %91 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %90, align 8
  %92 = call %"class.WTF::StringImpl"* %91(%"class.blink::CSSStyleDeclaration"* %64, %"class.WTF::String"* nonnull dereferenceable(8) %6) #16
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #16
  %93 = icmp eq %"class.WTF::StringImpl"* %92, null
  br i1 %93, label %94, label %96

94:                                               ; preds = %88
  store i8* null, i8** %51, align 8
  %95 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  store i64 %95, i64* %53, align 8
  br label %101

96:                                               ; preds = %88
  store %"class.WTF::StringImpl"* %92, %"class.WTF::StringImpl"** %50, align 8
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 1
  %98 = load i32, i32* %97, align 4
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 1
  store %"class.WTF::StringImpl"* %99, %"class.WTF::StringImpl"** %52, align 8
  %100 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %101

101:                                              ; preds = %96, %94
  %102 = phi i64 [ %100, %96 ], [ %95, %94 ]
  %103 = phi i32 [ %98, %96 ], [ 0, %94 ]
  store i32 %103, i32* %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %55) #16
  store i64 %102, i64* %56, align 8
  store i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.15, i64 0, i64 0), i8** %57, align 8
  store i32 9, i32* %58, align 8
  %104 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %55) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #16
  br i1 %93, label %118, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %92, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %92) #16
  br label %118

118:                                              ; preds = %101, %114, %117
  br i1 %104, label %133, label %119

119:                                              ; preds = %118
  %120 = icmp eq %"class.blink::CSSStyleDeclaration"* %61, null
  %121 = select i1 %120, %"class.blink::CSSStyleDeclaration"* %64, %"class.blink::CSSStyleDeclaration"* %61
  br label %122

122:                                              ; preds = %59, %119, %87, %86
  %123 = phi %"class.blink::CSSStyleDeclaration"* [ %61, %86 ], [ %61, %87 ], [ %121, %119 ], [ %61, %59 ]
  %124 = add nuw i32 %60, 1
  %125 = load i32, i32* %8, align 4
  %126 = icmp ult i32 %124, %125
  br i1 %126, label %59, label %127

127:                                              ; preds = %122
  %128 = icmp eq %"class.blink::CSSStyleDeclaration"* %123, null
  br i1 %128, label %129, label %133

129:                                              ; preds = %45, %127
  %130 = call dereferenceable(8) %"class.blink::Member.3969"* @_ZNK3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4658"* %7, i32 0)
  %131 = getelementptr inbounds %"class.blink::Member.3969", %"class.blink::Member.3969"* %130, i64 0, i32 0, i32 0
  %132 = load %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSStyleDeclaration"** %131, align 8
  br label %133

133:                                              ; preds = %118, %129, %127
  %134 = phi %"class.blink::CSSStyleDeclaration"* [ %132, %129 ], [ %123, %127 ], [ %64, %118 ]
  %135 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %136 = icmp eq %"class.WTF::StringImpl"* %135, null
  br i1 %136, label %150, label %137

137:                                              ; preds = %133
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %139 = load atomic i32, i32* %138 monotonic, align 4
  %140 = and i32 %139, 2
  %141 = icmp eq i32 %140, 0
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %135, i64 0, i32 0
  %143 = load i32, i32* %142, align 4
  br i1 %141, label %144, label %146

144:                                              ; preds = %137
  %145 = add i32 %143, -1
  store i32 %145, i32* %142, align 4
  br label %146

146:                                              ; preds = %144, %137
  %147 = phi i32 [ %145, %144 ], [ %143, %137 ]
  %148 = icmp eq i32 %147, 0
  br i1 %148, label %149, label %150

149:                                              ; preds = %146
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %135) #16
  br label %150

150:                                              ; preds = %133, %146, %149
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  br label %151

151:                                              ; preds = %3, %150
  %152 = phi %"class.blink::CSSStyleDeclaration"* [ %134, %150 ], [ null, %3 ]
  ret %"class.blink::CSSStyleDeclaration"* %152
}

declare %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.blink::Member.3969"* @_ZNK3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4658"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::Member.3969"*, %"class.blink::Member.3969"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::Member.3969", %"class.blink::Member.3969"* %24, i64 %25
  ret %"class.blink::Member.3969"* %26
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent32setEffectivePropertyValueForNodeEiRKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = alloca %"class.WTF::StringAppend.4678", align 8
  %7 = alloca %"class.WTF::StringAppend.4679", align 8
  %8 = alloca %"class.WTF::StringAppend.4673", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::StringAppend.4672", align 8
  %12 = alloca %"class.WTF::StringAppend.4673", align 8
  %13 = alloca %"class.WTF::StringAppend.4674", align 8
  %14 = alloca %"class.blink::DummyExceptionStateForTesting", align 8
  %15 = alloca %"class.WTF::String", align 8
  %16 = alloca %"class.WTF::StringAppend.4672", align 8
  %17 = alloca %"class.WTF::StringAppend.4673", align 8
  %18 = alloca %"class.blink::Element"*, align 8
  %19 = alloca %"class.crdtp::DispatchResponse", align 8
  %20 = alloca %"class.std::__1::basic_string", align 8
  %21 = alloca %"class.std::__1::basic_string", align 8
  %22 = alloca %"class.absl::optional.4662", align 8
  %23 = alloca %"class.std::__1::basic_string", align 8
  %24 = alloca %"class.blink::HeapVector.4655", align 8
  %25 = alloca %"class.std::__1::basic_string", align 8
  %26 = alloca %"class.std::__1::basic_string", align 8
  %27 = alloca %"class.WTF::Vector.4667", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = alloca %"class.blink::CSSPropertySourceData", align 8
  %31 = alloca i64, align 8
  %32 = bitcast i64* %31 to %"class.blink::SourceRange"*
  %33 = alloca %"class.WTF::String", align 8
  %34 = alloca %"class.WTF::String", align 8
  %35 = alloca %"class.blink::SourceRange", align 4
  %36 = alloca %"class.WTF::StringAppend", align 8
  %37 = alloca %"class.WTF::StringAppend.4672", align 8
  %38 = alloca %"class.WTF::StringAppend.4673", align 8
  %39 = alloca %"class.WTF::StringAppend.4674", align 8
  %40 = alloca %"class.WTF::StringAppend.4675", align 8
  %41 = alloca %"class.WTF::StringAppend.4676", align 8
  %42 = alloca %"class.blink::CSSPropertySourceData", align 8
  %43 = alloca %"class.WTF::StringAppend.4677", align 8
  %44 = alloca %"class.WTF::StringAppend.4678", align 8
  %45 = alloca %"class.WTF::StringAppend.4679", align 8
  %46 = alloca %"class.WTF::StringAppend.4680", align 8
  %47 = alloca %"class.WTF::StringView", align 8
  %48 = alloca %"class.blink::CSSStyleDeclaration"*, align 8
  %49 = bitcast %"class.blink::Element"** %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %49) #16
  store %"class.blink::Element"* null, %"class.blink::Element"** %18, align 8
  %50 = bitcast %"class.crdtp::DispatchResponse"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %50) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %50, i8 -86, i64 32, i1 false)
  %51 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %52 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %51, align 8
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %19, %"class.blink::InspectorDOMAgent"* %52, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %18) #16
  %53 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %19, i64 0, i32 0
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %62, label %56

56:                                               ; preds = %5
  %57 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %54, i32* %57, align 8
  %58 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %59 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %19, i64 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"* %58 to i8*
  %61 = bitcast %"class.std::__1::basic_string"* %59 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %60, i8* align 8 %61, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %61, i8 0, i64 24, i1 false) #16
  br label %1881

62:                                               ; preds = %5
  %63 = bitcast %"class.blink::Element"** %18 to %"class.blink::Node"**
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = bitcast %"class.blink::Node"* %64 to i8 (%"class.blink::Node"*)***
  %66 = load i8 (%"class.blink::Node"*)**, i8 (%"class.blink::Node"*)*** %65, align 8
  %67 = getelementptr inbounds i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %66, i64 34
  %68 = load i8 (%"class.blink::Node"*)*, i8 (%"class.blink::Node"*)** %67, align 8
  %69 = call zeroext i8 %68(%"class.blink::Node"* %64) #16
  %70 = icmp eq i8 %69, 0
  br i1 %70, label %81, label %71

71:                                               ; preds = %62
  %72 = bitcast %"class.std::__1::basic_string"* %20 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %73 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %72, i64 0, i32 1, i32 0
  store i8 18, i8* %73, align 1
  %74 = bitcast %"class.std::__1::basic_string"* %20 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %74, i8* align 1 getelementptr inbounds ([19 x i8], [19 x i8]* @.str.16, i64 0, i64 0), i64 18, i1 false) #16
  %75 = getelementptr inbounds i8, i8* %74, i64 18
  store i8 0, i8* %75, align 2
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %20) #16
  %76 = load i8, i8* %73, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %78, label %1881

78:                                               ; preds = %71
  %79 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %20, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load i8*, i8** %79, align 8
  call void @_ZdlPv(i8* %80) #18
  br label %1881

81:                                               ; preds = %62
  %82 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %83 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %82, i64 0, i32 3, i32 0, i32 0
  %84 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %83, align 8
  %85 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %84, i64 0, i32 2, i32 0, i32 0
  %86 = load %"class.blink::Document"*, %"class.blink::Document"** %85, align 8
  %87 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %86, i64 0, i32 5, i32 0
  %88 = load i32, i32* %87, align 4
  %89 = add i32 %88, -2
  %90 = icmp ult i32 %89, 18
  br i1 %90, label %103, label %91

91:                                               ; preds = %81
  %92 = call i8* @_Znwm(i64 48) #18
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %92, i8** %93, align 8
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %21, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %95 = bitcast i64* %94 to <2 x i64>*
  store <2 x i64> <i64 44, i64 -9223372036854775760>, <2 x i64>* %95, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %92, i8* align 1 getelementptr inbounds ([45 x i8], [45 x i8]* @.str.17, i64 0, i64 0), i64 44, i1 false) #16
  %96 = getelementptr inbounds i8, i8* %92, i64 44
  store i8 0, i8* %96, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %21) #16
  %97 = bitcast %"class.std::__1::basic_string"* %21 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %98 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %97, i64 0, i32 1, i32 0
  %99 = load i8, i8* %98, align 1
  %100 = icmp slt i8 %99, 0
  br i1 %100, label %101, label %1881

101:                                              ; preds = %91
  %102 = load i8*, i8** %93, align 8
  call void @_ZdlPv(i8* %102) #18
  br label %1881

103:                                              ; preds = %81
  %104 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %104) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 -86, i64 24, i1 false)
  %105 = bitcast %"class.blink::Node"* %82 to %"class.blink::ExecutionContext"* (%"class.blink::Node"*)***
  %106 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)**, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*** %105, align 8
  %107 = getelementptr inbounds %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %106, i64 10
  %108 = load %"class.blink::ExecutionContext"* (%"class.blink::Node"*)*, %"class.blink::ExecutionContext"* (%"class.blink::Node"*)** %107, align 8
  %109 = call %"class.blink::ExecutionContext"* %108(%"class.blink::Node"* %82) #16
  call void @_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.absl::optional.4662"* nonnull sret %22, %"class.blink::ExecutionContext"* %109, %"class.WTF::String"* dereferenceable(8) %3)
  %110 = load i8, i8* %104, align 8, !range !4
  %111 = icmp eq i8 %110, 0
  br i1 %111, label %112, label %122

112:                                              ; preds = %103
  %113 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %114 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %113, i64 0, i32 1, i32 0
  store i8 21, i8* %114, align 1
  %115 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %115, i8* align 1 getelementptr inbounds ([22 x i8], [22 x i8]* @.str.18, i64 0, i64 0), i64 21, i1 false) #16
  %116 = getelementptr inbounds i8, i8* %115, i64 21
  store i8 0, i8* %116, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %23) #16
  %117 = load i8, i8* %114, align 1
  %118 = icmp slt i8 %117, 0
  br i1 %118, label %119, label %1859

119:                                              ; preds = %112
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %121 = load i8*, i8** %120, align 8
  call void @_ZdlPv(i8* %121) #18
  br label %1859

122:                                              ; preds = %103
  %123 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %124 = bitcast %"class.blink::HeapVector.4655"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %124) #16
  %125 = load %"class.blink::Element"*, %"class.blink::Element"** %18, align 8
  call void @_ZN5blink17InspectorCSSAgent14MatchingStylesEPNS_7ElementE(%"class.blink::HeapVector.4655"* nonnull sret %24, %"class.blink::InspectorCSSAgent"* undef, %"class.blink::Element"* %125)
  %126 = call %"class.blink::CSSStyleDeclaration"* @_ZN5blink17InspectorCSSAgent24FindEffectiveDeclarationERKNS_15CSSPropertyNameERKNS_10HeapVectorINS_6MemberINS_19CSSStyleDeclarationEEELj0EEE(%"class.blink::InspectorCSSAgent"* undef, %"class.blink::CSSPropertyName"* dereferenceable(16) %123, %"class.blink::HeapVector.4655"* nonnull dereferenceable(16) %24)
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %124) #16
  %127 = icmp eq %"class.blink::CSSStyleDeclaration"* %126, null
  br i1 %127, label %128, label %140

128:                                              ; preds = %122
  %129 = call i8* @_Znwm(i64 32) #18
  %130 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %129, i8** %130, align 8
  %131 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %25, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %132 = bitcast i64* %131 to <2 x i64>*
  store <2 x i64> <i64 26, i64 -9223372036854775776>, <2 x i64>* %132, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %129, i8* align 1 getelementptr inbounds ([27 x i8], [27 x i8]* @.str.19, i64 0, i64 0), i64 26, i1 false) #16
  %133 = getelementptr inbounds i8, i8* %129, i64 26
  store i8 0, i8* %133, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %25) #16
  %134 = bitcast %"class.std::__1::basic_string"* %25 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %135 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %134, i64 0, i32 1, i32 0
  %136 = load i8, i8* %135, align 1
  %137 = icmp slt i8 %136, 0
  br i1 %137, label %138, label %1859

138:                                              ; preds = %128
  %139 = load i8*, i8** %130, align 8
  call void @_ZdlPv(i8* %139) #18
  br label %1859

140:                                              ; preds = %122
  %141 = bitcast %"class.blink::CSSStyleDeclaration"* %126 to %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)***
  %142 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*** %141, align 8
  %143 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %142, i64 9
  %144 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %143, align 8
  %145 = call %"class.blink::CSSRule"* %144(%"class.blink::CSSStyleDeclaration"* nonnull %126) #16
  %146 = icmp eq %"class.blink::CSSRule"* %145, null
  br i1 %146, label %160, label %147

147:                                              ; preds = %140
  %148 = bitcast %"class.blink::CSSStyleDeclaration"* %126 to %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)***
  %149 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*** %148, align 8
  %150 = getelementptr inbounds %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %149, i64 25
  %151 = load %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSStyleSheet"* (%"class.blink::CSSStyleDeclaration"*)** %150, align 8
  %152 = call %"class.blink::CSSStyleSheet"* %151(%"class.blink::CSSStyleDeclaration"* nonnull %126) #16
  %153 = call %"class.blink::InspectorStyleSheet"* @_ZN5blink17InspectorCSSAgent14BindStyleSheetEPNS_13CSSStyleSheetE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::CSSStyleSheet"* %152)
  %154 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %153, i64 0, i32 0
  %155 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)**, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*** %141, align 8
  %156 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %155, i64 9
  %157 = load %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)*, %"class.blink::CSSRule"* (%"class.blink::CSSStyleDeclaration"*)** %156, align 8
  %158 = call %"class.blink::CSSRule"* %157(%"class.blink::CSSStyleDeclaration"* nonnull %126) #16
  %159 = call %"class.blink::CSSRuleSourceData"* @_ZN5blink19InspectorStyleSheet17SourceDataForRuleEPNS_7CSSRuleE(%"class.blink::InspectorStyleSheet"* %153, %"class.blink::CSSRule"* %158) #16
  br label %165

160:                                              ; preds = %140
  %161 = load %"class.blink::Element"*, %"class.blink::Element"** %18, align 8
  %162 = call %"class.blink::InspectorStyleSheetForInlineStyle"* @_ZN5blink17InspectorCSSAgent21AsInspectorStyleSheetEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::Element"* %161)
  %163 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %162, i64 0, i32 0
  %164 = call %"class.blink::CSSRuleSourceData"* @_ZN5blink33InspectorStyleSheetForInlineStyle14RuleSourceDataEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %162) #16
  br label %165

165:                                              ; preds = %160, %147
  %166 = phi %"class.blink::InspectorStyleSheetBase"* [ %154, %147 ], [ %163, %160 ]
  %167 = phi %"class.blink::CSSRuleSourceData"* [ %159, %147 ], [ %164, %160 ]
  %168 = icmp eq %"class.blink::CSSRuleSourceData"* %167, null
  br i1 %168, label %169, label %181

169:                                              ; preds = %165
  %170 = call i8* @_Znwm(i64 32) #18
  %171 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %170, i8** %171, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %26, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = bitcast i64* %172 to <2 x i64>*
  store <2 x i64> <i64 27, i64 -9223372036854775776>, <2 x i64>* %173, align 8
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %170, i8* align 1 getelementptr inbounds ([28 x i8], [28 x i8]* @.str.20, i64 0, i64 0), i64 27, i1 false) #16
  %174 = getelementptr inbounds i8, i8* %170, i64 27
  store i8 0, i8* %174, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %26) #16
  %175 = bitcast %"class.std::__1::basic_string"* %26 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %176 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %175, i64 0, i32 1, i32 0
  %177 = load i8, i8* %176, align 1
  %178 = icmp slt i8 %177, 0
  br i1 %178, label %179, label %1859

179:                                              ; preds = %169
  %180 = load i8*, i8** %171, align 8
  call void @_ZdlPv(i8* %180) #18
  br label %1859

181:                                              ; preds = %165
  %182 = bitcast %"class.WTF::Vector.4667"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 80, i8* nonnull %182) #16
  %183 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %27, i64 0, i32 0, i32 1, i64 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %183, i8 -86, i64 64, i1 false)
  %184 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %27, i64 0, i32 0, i32 1, i64 0
  %185 = bitcast %"class.WTF::Vector.4667"* %27 to i8**
  store i8* %184, i8** %185, align 8
  %186 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %27, i64 0, i32 0, i32 0, i32 1
  store i32 4, i32* %186, align 8
  %187 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %27, i64 0, i32 0, i32 0, i32 2
  store i32 0, i32* %187, align 4
  %188 = load i8, i8* %104, align 8, !range !4
  %189 = icmp eq i8 %188, 0
  br i1 %189, label %190, label %191, !prof !3

190:                                              ; preds = %181
  call void @llvm.trap() #16
  unreachable

191:                                              ; preds = %181
  %192 = getelementptr inbounds %"class.blink::CSSPropertyName", %"class.blink::CSSPropertyName"* %123, i64 0, i32 0
  %193 = load i32, i32* %192, align 8
  call void @_ZN5blink32getMatchingShorthandsForLonghandENS_13CSSPropertyIDEPN3WTF6VectorINS_22StylePropertyShorthandELj4ENS1_18PartitionAllocatorEEE(i32 %193, %"class.WTF::Vector.4667"* nonnull %27) #16
  %194 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %194) #16
  %195 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %195, align 8
  %196 = load i32, i32* %187, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %229, label %198

198:                                              ; preds = %191
  %199 = call dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN3WTF6VectorIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4667"* nonnull %27, i32 0) #16
  %200 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %199, i64 0, i32 2
  %201 = load i32, i32* %200, align 4
  %202 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %201) #16
  %203 = getelementptr inbounds %"class.blink::CSSProperty", %"class.blink::CSSProperty"* %202, i64 0, i32 0
  %204 = bitcast %"class.blink::CSSProperty"* %202 to %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)***
  %205 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)**, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*** %204, align 8
  %206 = getelementptr inbounds %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %205, i64 4
  %207 = load %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)*, %"class.WTF::AtomicString"* (%"class.blink::CSSUnresolvedProperty"*)** %206, align 8
  %208 = call dereferenceable(8) %"class.WTF::AtomicString"* %207(%"class.blink::CSSUnresolvedProperty"* %203) #16
  %209 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %208, i64 0, i32 0, i32 0, i32 0
  %210 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %209, align 8
  %211 = icmp eq %"class.WTF::StringImpl"* %210, null
  br i1 %211, label %231, label %212

212:                                              ; preds = %198
  %213 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %214 = load atomic i32, i32* %213 monotonic, align 4
  %215 = and i32 %214, 2
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %217, label %231

217:                                              ; preds = %212
  %218 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %210, i64 0, i32 0
  %219 = load i32, i32* %218, align 4
  %220 = zext i32 %219 to i33
  %221 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %220, i33 1) #16
  %222 = extractvalue { i33, i1 } %221, 1
  %223 = extractvalue { i33, i1 } %221, 0
  %224 = icmp slt i33 %223, 0
  %225 = or i1 %222, %224
  br i1 %225, label %226, label %227, !prof !3

226:                                              ; preds = %217
  call void @llvm.trap() #16
  unreachable

227:                                              ; preds = %217
  %228 = trunc i33 %223 to i32
  store i32 %228, i32* %218, align 4
  br label %231

229:                                              ; preds = %191
  %230 = bitcast %"class.WTF::String"* %28 to i64*
  store i64 0, i64* %230, align 8
  br label %231

231:                                              ; preds = %227, %212, %198, %229
  %232 = phi %"class.WTF::StringImpl"* [ null, %229 ], [ null, %198 ], [ %210, %212 ], [ %210, %227 ]
  store %"class.WTF::StringImpl"* %232, %"class.WTF::StringImpl"** %195, align 8
  %233 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %233) #16
  %234 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %234, align 8
  %235 = load i8, i8* %104, align 8, !range !4
  %236 = icmp eq i8 %235, 0
  br i1 %236, label %237, label %238, !prof !3

237:                                              ; preds = %231
  call void @llvm.trap() #16
  unreachable

238:                                              ; preds = %231
  %239 = call %"class.WTF::StringImpl"* @_ZNK5blink15CSSPropertyName14ToAtomicStringEv(%"class.blink::CSSPropertyName"* %123) #16
  store %"class.WTF::StringImpl"* %239, %"class.WTF::StringImpl"** %234, align 8
  %240 = icmp eq %"class.WTF::StringImpl"* %239, null
  br i1 %240, label %270, label %241

241:                                              ; preds = %238
  %242 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %243 = load atomic i32, i32* %242 monotonic, align 4
  %244 = and i32 %243, 2
  %245 = icmp eq i32 %244, 0
  %246 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %247 = load i32, i32* %246, align 4
  br i1 %245, label %248, label %258

248:                                              ; preds = %241
  %249 = zext i32 %247 to i33
  %250 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %249, i33 1) #16
  %251 = extractvalue { i33, i1 } %250, 1
  %252 = extractvalue { i33, i1 } %250, 0
  %253 = icmp slt i33 %252, 0
  %254 = or i1 %251, %253
  br i1 %254, label %255, label %256, !prof !3

255:                                              ; preds = %248
  call void @llvm.trap() #16
  unreachable

256:                                              ; preds = %248
  %257 = trunc i33 %252 to i32
  store i32 %257, i32* %246, align 4
  br label %258

258:                                              ; preds = %241, %256
  %259 = phi i32 [ %257, %256 ], [ %247, %241 ]
  %260 = load atomic i32, i32* %242 monotonic, align 4
  %261 = and i32 %260, 2
  %262 = icmp eq i32 %261, 0
  br i1 %262, label %263, label %266

263:                                              ; preds = %258
  %264 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %239, i64 0, i32 0
  %265 = add i32 %259, -1
  store i32 %265, i32* %264, align 4
  br label %266

266:                                              ; preds = %263, %258
  %267 = phi i32 [ %265, %263 ], [ %259, %258 ]
  %268 = icmp eq i32 %267, 0
  br i1 %268, label %269, label %270

269:                                              ; preds = %266
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %239) #16
  br label %270

270:                                              ; preds = %238, %266, %269
  %271 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %167, i64 0, i32 4
  %272 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %167, i64 0, i32 4, i32 0, i32 0, i32 2
  %273 = load i32, i32* %272, align 4
  %274 = icmp eq i32 %273, 0
  br i1 %274, label %382, label %275

275:                                              ; preds = %270
  %276 = bitcast %"class.blink::CSSPropertySourceData"* %30 to i8*
  %277 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %30, i64 0, i32 0, i32 0, i32 0
  %278 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %30, i64 0, i32 1, i32 0, i32 0
  %279 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %30, i64 0, i32 2
  %280 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %30, i64 0, i32 3
  %281 = bitcast %"class.blink::CSSPropertySourceData"* %30 to i8*
  br label %282

282:                                              ; preds = %275, %378
  %283 = phi i32 [ %273, %275 ], [ %380, %378 ]
  %284 = phi i32 [ 0, %275 ], [ %379, %378 ]
  %285 = phi i32 [ -1, %275 ], [ %331, %378 ]
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %276) #16
  %286 = xor i32 %284, -1
  %287 = add i32 %283, %286
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %281, i8 -86, i64 32, i1 false)
  %288 = call dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3953"* %271, i32 %287) #16
  call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* nonnull %30, %"class.blink::CSSPropertySourceData"* dereferenceable(32) %288) #16
  %289 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %290 = icmp eq %"class.WTF::StringImpl"* %289, null
  br i1 %290, label %308, label %291

291:                                              ; preds = %282
  %292 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %293 = load atomic i32, i32* %292 monotonic, align 4
  %294 = and i32 %293, 2
  %295 = icmp eq i32 %294, 0
  br i1 %295, label %296, label %308

296:                                              ; preds = %291
  %297 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %298 = load i32, i32* %297, align 4
  %299 = zext i32 %298 to i33
  %300 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %299, i33 1) #16
  %301 = extractvalue { i33, i1 } %300, 1
  %302 = extractvalue { i33, i1 } %300, 0
  %303 = icmp slt i33 %302, 0
  %304 = or i1 %301, %303
  br i1 %304, label %305, label %306, !prof !3

305:                                              ; preds = %296
  call void @llvm.trap() #16
  unreachable

306:                                              ; preds = %296
  %307 = trunc i33 %302 to i32
  store i32 %307, i32* %297, align 4
  br label %308

308:                                              ; preds = %282, %291, %306
  %309 = load i8, i8* %280, align 1, !range !4
  %310 = icmp eq i8 %309, 0
  br i1 %310, label %311, label %329

311:                                              ; preds = %308
  %312 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %313 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %289, %"class.WTF::StringImpl"* %312) #16
  br i1 %313, label %317, label %314

314:                                              ; preds = %311
  %315 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %316 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %289, %"class.WTF::StringImpl"* %315) #16
  br i1 %316, label %317, label %329

317:                                              ; preds = %314, %311
  %318 = load i8, i8* %279, align 8, !range !4
  %319 = icmp ne i8 %318, 0
  %320 = icmp eq i32 %285, -1
  %321 = or i1 %320, %319
  br i1 %321, label %322, label %325

322:                                              ; preds = %317
  %323 = load i32, i32* %272, align 4
  %324 = add i32 %323, %286
  br label %325

325:                                              ; preds = %317, %322
  %326 = phi i32 [ %324, %322 ], [ %285, %317 ]
  %327 = icmp eq i8 %318, 0
  %328 = select i1 %327, i32 0, i32 2
  br label %329

329:                                              ; preds = %314, %325, %308
  %330 = phi i32 [ 4, %308 ], [ 4, %314 ], [ %328, %325 ]
  %331 = phi i32 [ %285, %308 ], [ %285, %314 ], [ %326, %325 ]
  br i1 %290, label %345, label %332

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %334 = load atomic i32, i32* %333 monotonic, align 4
  %335 = and i32 %334, 2
  %336 = icmp eq i32 %335, 0
  %337 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %289, i64 0, i32 0
  %338 = load i32, i32* %337, align 4
  br i1 %336, label %339, label %341

339:                                              ; preds = %332
  %340 = add i32 %338, -1
  store i32 %340, i32* %337, align 4
  br label %341

341:                                              ; preds = %339, %332
  %342 = phi i32 [ %340, %339 ], [ %338, %332 ]
  %343 = icmp eq i32 %342, 0
  br i1 %343, label %344, label %345

344:                                              ; preds = %341
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %289) #16
  br label %345

345:                                              ; preds = %329, %341, %344
  %346 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %278, align 8
  %347 = icmp eq %"class.WTF::StringImpl"* %346, null
  br i1 %347, label %361, label %348

348:                                              ; preds = %345
  %349 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %350 = load atomic i32, i32* %349 monotonic, align 4
  %351 = and i32 %350, 2
  %352 = icmp eq i32 %351, 0
  %353 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %346, i64 0, i32 0
  %354 = load i32, i32* %353, align 4
  br i1 %352, label %355, label %357

355:                                              ; preds = %348
  %356 = add i32 %354, -1
  store i32 %356, i32* %353, align 4
  br label %357

357:                                              ; preds = %355, %348
  %358 = phi i32 [ %356, %355 ], [ %354, %348 ]
  %359 = icmp eq i32 %358, 0
  br i1 %359, label %360, label %361

360:                                              ; preds = %357
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %346) #16
  br label %361

361:                                              ; preds = %360, %357, %345
  %362 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %277, align 8
  %363 = icmp eq %"class.WTF::StringImpl"* %362, null
  br i1 %363, label %377, label %364

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %366 = load atomic i32, i32* %365 monotonic, align 4
  %367 = and i32 %366, 2
  %368 = icmp eq i32 %367, 0
  %369 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %362, i64 0, i32 0
  %370 = load i32, i32* %369, align 4
  br i1 %368, label %371, label %373

371:                                              ; preds = %364
  %372 = add i32 %370, -1
  store i32 %372, i32* %369, align 4
  br label %373

373:                                              ; preds = %371, %364
  %374 = phi i32 [ %372, %371 ], [ %370, %364 ]
  %375 = icmp eq i32 %374, 0
  br i1 %375, label %376, label %377

376:                                              ; preds = %373
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %362) #16
  br label %377

377:                                              ; preds = %361, %373, %376
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %276) #16
  switch i32 %330, label %382 [
    i32 0, label %378
    i32 4, label %378
  ]

378:                                              ; preds = %377, %377
  %379 = add nuw i32 %284, 1
  %380 = load i32, i32* %272, align 4
  %381 = icmp ult i32 %379, %380
  br i1 %381, label %282, label %382

382:                                              ; preds = %377, %378, %270
  %383 = phi i32 [ -1, %270 ], [ %331, %378 ], [ %331, %377 ]
  %384 = bitcast i64* %31 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %384) #16
  %385 = bitcast i64* %31 to i32*
  %386 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %32, i64 0, i32 1
  %387 = getelementptr inbounds %"class.blink::CSSRuleSourceData", %"class.blink::CSSRuleSourceData"* %167, i64 0, i32 2
  %388 = bitcast %"class.blink::SourceRange"* %387 to i64*
  %389 = load i64, i64* %388, align 4
  store i64 %389, i64* %31, align 8
  %390 = bitcast %"class.WTF::String"* %33 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %390) #16
  %391 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %33, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %391, align 8
  %392 = bitcast %"class.blink::InspectorStyleSheetBase"* %166 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)***
  %393 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*** %392, align 8
  %394 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %393, i64 4
  %395 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %394, align 8
  %396 = call zeroext i1 %395(%"class.blink::InspectorStyleSheetBase"* %166, %"class.WTF::String"* nonnull %33) #16
  %397 = bitcast %"class.WTF::String"* %34 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %397) #16
  %398 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %34, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %398, align 8
  %399 = load i32, i32* %385, align 8
  %400 = call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* nonnull %32) #16
  %401 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* nonnull %33, i32 %399, i32 %400) #16
  store %"class.WTF::StringImpl"* %401, %"class.WTF::StringImpl"** %398, align 8
  %402 = bitcast %"class.blink::SourceRange"* %35 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %402) #16
  %403 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %35, i64 0, i32 0
  store i32 -1431655766, i32* %403, align 4
  %404 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %35, i64 0, i32 1
  store i32 -1431655766, i32* %404, align 4
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* nonnull %35) #16
  %405 = icmp eq i32 %383, -1
  br i1 %405, label %406, label %967

406:                                              ; preds = %382
  %407 = bitcast %"class.WTF::StringAppend"* %36 to i8*
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %407) #16
  %408 = bitcast %"class.WTF::StringAppend.4672"* %37 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %408) #16
  %409 = bitcast %"class.WTF::StringAppend.4673"* %38 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %409) #16
  %410 = bitcast %"class.WTF::StringAppend.4674"* %39 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %410) #16
  %411 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %412 = icmp eq %"class.WTF::StringImpl"* %411, null
  br i1 %412, label %488, label %413

413:                                              ; preds = %406
  %414 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %415 = load atomic i32, i32* %414 monotonic, align 4
  %416 = and i32 %415, 2
  %417 = icmp eq i32 %416, 0
  %418 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 0
  %419 = load i32, i32* %418, align 4
  br i1 %417, label %420, label %430

420:                                              ; preds = %413
  %421 = zext i32 %419 to i33
  %422 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %421, i33 1) #16
  %423 = extractvalue { i33, i1 } %422, 1
  %424 = extractvalue { i33, i1 } %422, 0
  %425 = icmp slt i33 %424, 0
  %426 = or i1 %423, %425
  br i1 %426, label %427, label %428, !prof !3

427:                                              ; preds = %420
  call void @llvm.trap() #16
  unreachable

428:                                              ; preds = %420
  %429 = trunc i33 %424 to i32
  store i32 %429, i32* %418, align 4
  br label %430

430:                                              ; preds = %428, %413
  %431 = phi i32 [ %429, %428 ], [ %419, %413 ]
  %432 = load atomic i32, i32* %414 monotonic, align 4
  %433 = and i32 %432, 2
  %434 = icmp eq i32 %433, 0
  br i1 %434, label %435, label %445

435:                                              ; preds = %430
  %436 = zext i32 %431 to i33
  %437 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %436, i33 1) #16
  %438 = extractvalue { i33, i1 } %437, 1
  %439 = extractvalue { i33, i1 } %437, 0
  %440 = icmp slt i33 %439, 0
  %441 = or i1 %438, %440
  br i1 %441, label %442, label %443, !prof !3

442:                                              ; preds = %435
  call void @llvm.trap() #16
  unreachable

443:                                              ; preds = %435
  %444 = trunc i33 %439 to i32
  store i32 %444, i32* %418, align 4
  br label %445

445:                                              ; preds = %443, %430
  %446 = phi i32 [ %444, %443 ], [ %431, %430 ]
  %447 = load atomic i32, i32* %414 monotonic, align 4
  %448 = and i32 %447, 2
  %449 = icmp eq i32 %448, 0
  br i1 %449, label %450, label %452

450:                                              ; preds = %445
  %451 = add i32 %446, -1
  store i32 %451, i32* %418, align 4
  br label %452

452:                                              ; preds = %450, %445
  %453 = phi i32 [ %451, %450 ], [ %446, %445 ]
  %454 = icmp eq i32 %453, 0
  br i1 %454, label %455, label %456

455:                                              ; preds = %452
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #16
  br label %456

456:                                              ; preds = %452, %455
  %457 = load atomic i32, i32* %414 monotonic, align 4, !noalias !49
  %458 = and i32 %457, 2
  %459 = icmp eq i32 %458, 0
  %460 = load i32, i32* %418, align 4
  br i1 %459, label %461, label %471

461:                                              ; preds = %456
  %462 = zext i32 %460 to i33
  %463 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %462, i33 1) #16
  %464 = extractvalue { i33, i1 } %463, 1
  %465 = extractvalue { i33, i1 } %463, 0
  %466 = icmp slt i33 %465, 0
  %467 = or i1 %464, %466
  br i1 %467, label %468, label %469, !prof !3

468:                                              ; preds = %461
  call void @llvm.trap() #16, !noalias !49
  unreachable

469:                                              ; preds = %461
  %470 = trunc i33 %465 to i32
  store i32 %470, i32* %418, align 4, !noalias !49
  br label %471

471:                                              ; preds = %456, %469
  %472 = phi i32 [ %470, %469 ], [ %460, %456 ]
  %473 = bitcast %"class.WTF::StringAppend.4674"* %39 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.21 to i64), i64* %473, align 8, !alias.scope !49
  %474 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %411, %"class.WTF::StringImpl"** %474, align 8, !alias.scope !49
  %475 = load atomic i32, i32* %414 monotonic, align 4, !noalias !49
  %476 = and i32 %475, 2
  %477 = icmp eq i32 %476, 0
  br i1 %477, label %478, label %492

478:                                              ; preds = %471
  %479 = zext i32 %472 to i33
  %480 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %479, i33 1) #16
  %481 = extractvalue { i33, i1 } %480, 1
  %482 = extractvalue { i33, i1 } %480, 0
  %483 = icmp slt i33 %482, 0
  %484 = or i1 %481, %483
  br i1 %484, label %485, label %486, !prof !3

485:                                              ; preds = %478
  call void @llvm.trap() #16, !noalias !49
  unreachable

486:                                              ; preds = %478
  %487 = trunc i33 %482 to i32
  store i32 %487, i32* %418, align 4, !noalias !49
  br label %492

488:                                              ; preds = %406
  %489 = bitcast %"class.WTF::StringAppend.4674"* %39 to i64*
  store i64 ptrtoint ([2 x i8]* @.str.21 to i64), i64* %489, align 8, !alias.scope !49
  %490 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %490, align 8, !alias.scope !49
  %491 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %39, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %491, align 8, !alias.scope !49
  br label %504

492:                                              ; preds = %486, %471
  %493 = phi i32 [ %487, %486 ], [ %472, %471 ]
  %494 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %39, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %494, align 8, !alias.scope !49
  %495 = load atomic i32, i32* %414 monotonic, align 4, !noalias !49
  %496 = and i32 %495, 2
  %497 = icmp eq i32 %496, 0
  br i1 %497, label %498, label %500

498:                                              ; preds = %492
  %499 = add i32 %493, -1
  store i32 %499, i32* %418, align 4, !noalias !49
  br label %500

500:                                              ; preds = %498, %492
  %501 = phi i32 [ %499, %498 ], [ %493, %492 ]
  %502 = icmp eq i32 %501, 0
  br i1 %502, label %503, label %504

503:                                              ; preds = %500
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #16, !noalias !49
  br label %504

504:                                              ; preds = %488, %500, %503
  %505 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %506 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %505, align 8
  %507 = icmp eq %"class.WTF::StringImpl"* %506, null
  br i1 %507, label %525, label %508

508:                                              ; preds = %504
  %509 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %510 = load atomic i32, i32* %509 monotonic, align 4
  %511 = and i32 %510, 2
  %512 = icmp eq i32 %511, 0
  br i1 %512, label %513, label %525

513:                                              ; preds = %508
  %514 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %506, i64 0, i32 0
  %515 = load i32, i32* %514, align 4
  %516 = zext i32 %515 to i33
  %517 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %516, i33 1) #16
  %518 = extractvalue { i33, i1 } %517, 1
  %519 = extractvalue { i33, i1 } %517, 0
  %520 = icmp slt i33 %519, 0
  %521 = or i1 %518, %520
  br i1 %521, label %522, label %523, !prof !3

522:                                              ; preds = %513
  call void @llvm.trap() #16
  unreachable

523:                                              ; preds = %513
  %524 = trunc i33 %519 to i32
  store i32 %524, i32* %514, align 4
  br label %525

525:                                              ; preds = %504, %508, %523
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.4673"* nonnull sret %38, %"class.WTF::StringAppend.4674"* nonnull dereferenceable(24) %39, %"class.WTF::StringImpl"* %506)
  %526 = bitcast %"class.WTF::StringAppend.4673"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %526)
  %527 = bitcast %"class.WTF::StringAppend.4673"* %38 to i64*
  %528 = load i64, i64* %527, align 8, !noalias !52
  %529 = bitcast %"class.WTF::StringAppend.4673"* %17 to i64*
  store i64 %528, i64* %529, align 8, !noalias !52
  %530 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %38, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %531 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %530, align 8, !noalias !52
  %532 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %17, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %531, %"class.WTF::StringImpl"** %532, align 8, !noalias !52
  %533 = icmp eq %"class.WTF::StringImpl"* %531, null
  br i1 %533, label %551, label %534

534:                                              ; preds = %525
  %535 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %536 = load atomic i32, i32* %535 monotonic, align 4
  %537 = and i32 %536, 2
  %538 = icmp eq i32 %537, 0
  br i1 %538, label %539, label %551

539:                                              ; preds = %534
  %540 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %531, i64 0, i32 0
  %541 = load i32, i32* %540, align 4
  %542 = zext i32 %541 to i33
  %543 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %542, i33 1) #16
  %544 = extractvalue { i33, i1 } %543, 1
  %545 = extractvalue { i33, i1 } %543, 0
  %546 = icmp slt i33 %545, 0
  %547 = or i1 %544, %546
  br i1 %547, label %548, label %549, !prof !3

548:                                              ; preds = %539
  call void @llvm.trap() #16
  unreachable

549:                                              ; preds = %539
  %550 = trunc i33 %545 to i32
  store i32 %550, i32* %540, align 4
  br label %551

551:                                              ; preds = %549, %534, %525
  %552 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %17, i64 0, i32 0, i32 1
  %553 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %38, i64 0, i32 0, i32 1
  %554 = bitcast i8** %553 to i64*
  %555 = load i64, i64* %554, align 8, !noalias !52
  %556 = bitcast i8** %552 to i64*
  store i64 %555, i64* %556, align 8, !noalias !52
  %557 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %38, i64 0, i32 1, i32 0, i32 0
  %558 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %557, align 8, !noalias !52
  %559 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %17, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %558, %"class.WTF::StringImpl"** %559, align 8, !noalias !52
  %560 = icmp eq %"class.WTF::StringImpl"* %558, null
  br i1 %560, label %578, label %561

561:                                              ; preds = %551
  %562 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %563 = load atomic i32, i32* %562 monotonic, align 4
  %564 = and i32 %563, 2
  %565 = icmp eq i32 %564, 0
  br i1 %565, label %566, label %578

566:                                              ; preds = %561
  %567 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %558, i64 0, i32 0
  %568 = load i32, i32* %567, align 4
  %569 = zext i32 %568 to i33
  %570 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %569, i33 1) #16
  %571 = extractvalue { i33, i1 } %570, 1
  %572 = extractvalue { i33, i1 } %570, 0
  %573 = icmp slt i33 %572, 0
  %574 = or i1 %571, %573
  br i1 %574, label %575, label %576, !prof !3

575:                                              ; preds = %566
  call void @llvm.trap() #16
  unreachable

576:                                              ; preds = %566
  %577 = trunc i33 %572 to i32
  store i32 %577, i32* %567, align 4
  br label %578

578:                                              ; preds = %551, %561, %576
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.4672"* nonnull %37, %"class.WTF::StringAppend.4673"* nonnull byval(%"class.WTF::StringAppend.4673") align 8 %17, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %526)
  %579 = bitcast %"class.WTF::StringAppend.4672"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %579)
  %580 = bitcast %"class.WTF::StringAppend.4672"* %37 to i64*
  %581 = load i64, i64* %580, align 8, !noalias !55
  %582 = bitcast %"class.WTF::StringAppend.4672"* %16 to i64*
  store i64 %581, i64* %582, align 8, !noalias !55
  %583 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %37, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %584 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8, !noalias !55
  %585 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %16, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %584, %"class.WTF::StringImpl"** %585, align 8, !noalias !55
  %586 = icmp eq %"class.WTF::StringImpl"* %584, null
  br i1 %586, label %604, label %587

587:                                              ; preds = %578
  %588 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %589 = load atomic i32, i32* %588 monotonic, align 4
  %590 = and i32 %589, 2
  %591 = icmp eq i32 %590, 0
  br i1 %591, label %592, label %604

592:                                              ; preds = %587
  %593 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %584, i64 0, i32 0
  %594 = load i32, i32* %593, align 4
  %595 = zext i32 %594 to i33
  %596 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %595, i33 1) #16
  %597 = extractvalue { i33, i1 } %596, 1
  %598 = extractvalue { i33, i1 } %596, 0
  %599 = icmp slt i33 %598, 0
  %600 = or i1 %597, %599
  br i1 %600, label %601, label %602, !prof !3

601:                                              ; preds = %592
  call void @llvm.trap() #16
  unreachable

602:                                              ; preds = %592
  %603 = trunc i33 %598 to i32
  store i32 %603, i32* %593, align 4
  br label %604

604:                                              ; preds = %602, %587, %578
  %605 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %16, i64 0, i32 0, i32 0, i32 1
  %606 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %37, i64 0, i32 0, i32 0, i32 1
  %607 = bitcast i8** %606 to i64*
  %608 = load i64, i64* %607, align 8, !noalias !55
  %609 = bitcast i8** %605 to i64*
  store i64 %608, i64* %609, align 8, !noalias !55
  %610 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %37, i64 0, i32 0, i32 1, i32 0, i32 0
  %611 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %610, align 8, !noalias !55
  %612 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %16, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %611, %"class.WTF::StringImpl"** %612, align 8, !noalias !55
  %613 = icmp eq %"class.WTF::StringImpl"* %611, null
  br i1 %613, label %631, label %614

614:                                              ; preds = %604
  %615 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %611, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %616 = load atomic i32, i32* %615 monotonic, align 4
  %617 = and i32 %616, 2
  %618 = icmp eq i32 %617, 0
  br i1 %618, label %619, label %631

619:                                              ; preds = %614
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %611, i64 0, i32 0
  %621 = load i32, i32* %620, align 4
  %622 = zext i32 %621 to i33
  %623 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %622, i33 1) #16
  %624 = extractvalue { i33, i1 } %623, 1
  %625 = extractvalue { i33, i1 } %623, 0
  %626 = icmp slt i33 %625, 0
  %627 = or i1 %624, %626
  br i1 %627, label %628, label %629, !prof !3

628:                                              ; preds = %619
  call void @llvm.trap() #16
  unreachable

629:                                              ; preds = %619
  %630 = trunc i33 %625 to i32
  store i32 %630, i32* %620, align 4
  br label %631

631:                                              ; preds = %604, %614, %629
  %632 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %16, i64 0, i32 1
  %633 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %37, i64 0, i32 1
  %634 = bitcast i8** %633 to i64*
  %635 = load i64, i64* %634, align 8, !noalias !55
  %636 = bitcast i8** %632 to i64*
  store i64 %635, i64* %636, align 8, !noalias !55
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_(%"class.WTF::StringAppend"* nonnull %36, %"class.WTF::StringAppend.4672"* nonnull byval(%"class.WTF::StringAppend.4672") align 8 %16, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %579)
  %637 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"* nonnull %36)
  %638 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %639 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %638, align 8
  %640 = icmp eq %"class.WTF::StringImpl"* %639, null
  br i1 %640, label %654, label %641

641:                                              ; preds = %631
  %642 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %643 = load atomic i32, i32* %642 monotonic, align 4
  %644 = and i32 %643, 2
  %645 = icmp eq i32 %644, 0
  %646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %639, i64 0, i32 0
  %647 = load i32, i32* %646, align 4
  br i1 %645, label %648, label %650

648:                                              ; preds = %641
  %649 = add i32 %647, -1
  store i32 %649, i32* %646, align 4
  br label %650

650:                                              ; preds = %648, %641
  %651 = phi i32 [ %649, %648 ], [ %647, %641 ]
  %652 = icmp eq i32 %651, 0
  br i1 %652, label %653, label %654

653:                                              ; preds = %650
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %639) #16
  br label %654

654:                                              ; preds = %653, %650, %631
  %655 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %656 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %655, align 8
  %657 = icmp eq %"class.WTF::StringImpl"* %656, null
  br i1 %657, label %671, label %658

658:                                              ; preds = %654
  %659 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %656, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %660 = load atomic i32, i32* %659 monotonic, align 4
  %661 = and i32 %660, 2
  %662 = icmp eq i32 %661, 0
  %663 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %656, i64 0, i32 0
  %664 = load i32, i32* %663, align 4
  br i1 %662, label %665, label %667

665:                                              ; preds = %658
  %666 = add i32 %664, -1
  store i32 %666, i32* %663, align 4
  br label %667

667:                                              ; preds = %665, %658
  %668 = phi i32 [ %666, %665 ], [ %664, %658 ]
  %669 = icmp eq i32 %668, 0
  br i1 %669, label %670, label %671

670:                                              ; preds = %667
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %656) #16
  br label %671

671:                                              ; preds = %654, %667, %670
  %672 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %610, align 8
  %673 = icmp eq %"class.WTF::StringImpl"* %672, null
  br i1 %673, label %687, label %674

674:                                              ; preds = %671
  %675 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %676 = load atomic i32, i32* %675 monotonic, align 4
  %677 = and i32 %676, 2
  %678 = icmp eq i32 %677, 0
  %679 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %672, i64 0, i32 0
  %680 = load i32, i32* %679, align 4
  br i1 %678, label %681, label %683

681:                                              ; preds = %674
  %682 = add i32 %680, -1
  store i32 %682, i32* %679, align 4
  br label %683

683:                                              ; preds = %681, %674
  %684 = phi i32 [ %682, %681 ], [ %680, %674 ]
  %685 = icmp eq i32 %684, 0
  br i1 %685, label %686, label %687

686:                                              ; preds = %683
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %672) #16
  br label %687

687:                                              ; preds = %686, %683, %671
  %688 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %583, align 8
  %689 = icmp eq %"class.WTF::StringImpl"* %688, null
  br i1 %689, label %703, label %690

690:                                              ; preds = %687
  %691 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %692 = load atomic i32, i32* %691 monotonic, align 4
  %693 = and i32 %692, 2
  %694 = icmp eq i32 %693, 0
  %695 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %688, i64 0, i32 0
  %696 = load i32, i32* %695, align 4
  br i1 %694, label %697, label %699

697:                                              ; preds = %690
  %698 = add i32 %696, -1
  store i32 %698, i32* %695, align 4
  br label %699

699:                                              ; preds = %697, %690
  %700 = phi i32 [ %698, %697 ], [ %696, %690 ]
  %701 = icmp eq i32 %700, 0
  br i1 %701, label %702, label %703

702:                                              ; preds = %699
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %688) #16
  br label %703

703:                                              ; preds = %687, %699, %702
  %704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %557, align 8
  %705 = icmp eq %"class.WTF::StringImpl"* %704, null
  br i1 %705, label %719, label %706

706:                                              ; preds = %703
  %707 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %708 = load atomic i32, i32* %707 monotonic, align 4
  %709 = and i32 %708, 2
  %710 = icmp eq i32 %709, 0
  %711 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %704, i64 0, i32 0
  %712 = load i32, i32* %711, align 4
  br i1 %710, label %713, label %715

713:                                              ; preds = %706
  %714 = add i32 %712, -1
  store i32 %714, i32* %711, align 4
  br label %715

715:                                              ; preds = %713, %706
  %716 = phi i32 [ %714, %713 ], [ %712, %706 ]
  %717 = icmp eq i32 %716, 0
  br i1 %717, label %718, label %719

718:                                              ; preds = %715
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %704) #16
  br label %719

719:                                              ; preds = %718, %715, %703
  %720 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %530, align 8
  %721 = icmp eq %"class.WTF::StringImpl"* %720, null
  br i1 %721, label %735, label %722

722:                                              ; preds = %719
  %723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %724 = load atomic i32, i32* %723 monotonic, align 4
  %725 = and i32 %724, 2
  %726 = icmp eq i32 %725, 0
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %720, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  br i1 %726, label %729, label %731

729:                                              ; preds = %722
  %730 = add i32 %728, -1
  store i32 %730, i32* %727, align 4
  br label %731

731:                                              ; preds = %729, %722
  %732 = phi i32 [ %730, %729 ], [ %728, %722 ]
  %733 = icmp eq i32 %732, 0
  br i1 %733, label %734, label %735

734:                                              ; preds = %731
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %720) #16
  br label %735

735:                                              ; preds = %719, %731, %734
  %736 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %39, i64 0, i32 0, i32 1, i32 0, i32 0
  %737 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %736, align 8
  %738 = icmp eq %"class.WTF::StringImpl"* %737, null
  br i1 %738, label %752, label %739

739:                                              ; preds = %735
  %740 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %741 = load atomic i32, i32* %740 monotonic, align 4
  %742 = and i32 %741, 2
  %743 = icmp eq i32 %742, 0
  %744 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %737, i64 0, i32 0
  %745 = load i32, i32* %744, align 4
  br i1 %743, label %746, label %748

746:                                              ; preds = %739
  %747 = add i32 %745, -1
  store i32 %747, i32* %744, align 4
  br label %748

748:                                              ; preds = %746, %739
  %749 = phi i32 [ %747, %746 ], [ %745, %739 ]
  %750 = icmp eq i32 %749, 0
  br i1 %750, label %751, label %752

751:                                              ; preds = %748
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %737) #16
  br label %752

752:                                              ; preds = %735, %748, %751
  br i1 %412, label %766, label %753

753:                                              ; preds = %752
  %754 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %755 = load atomic i32, i32* %754 monotonic, align 4
  %756 = and i32 %755, 2
  %757 = icmp eq i32 %756, 0
  %758 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %411, i64 0, i32 0
  %759 = load i32, i32* %758, align 4
  br i1 %757, label %760, label %762

760:                                              ; preds = %753
  %761 = add i32 %759, -1
  store i32 %761, i32* %758, align 4
  br label %762

762:                                              ; preds = %760, %753
  %763 = phi i32 [ %761, %760 ], [ %759, %753 ]
  %764 = icmp eq i32 %763, 0
  br i1 %764, label %765, label %766

765:                                              ; preds = %762
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %411) #16
  br label %766

766:                                              ; preds = %752, %762, %765
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %410) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %409) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %408) #16
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %407) #16
  %767 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %768 = icmp eq %"class.WTF::StringImpl"* %767, null
  br i1 %768, label %871, label %769

769:                                              ; preds = %766
  %770 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %767, i64 0, i32 1
  %771 = load i32, i32* %770, align 4
  %772 = icmp eq i32 %771, 0
  br i1 %772, label %871, label %773

773:                                              ; preds = %769
  %774 = call %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"* nonnull %34) #16
  %775 = icmp eq %"class.WTF::StringImpl"* %774, null
  br i1 %775, label %791, label %776

776:                                              ; preds = %773
  %777 = call zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"* nonnull %774, i16 zeroext 59) #16
  %778 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %779 = load atomic i32, i32* %778 monotonic, align 4
  %780 = and i32 %779, 2
  %781 = icmp eq i32 %780, 0
  %782 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %774, i64 0, i32 0
  %783 = load i32, i32* %782, align 4
  br i1 %781, label %784, label %786

784:                                              ; preds = %776
  %785 = add i32 %783, -1
  store i32 %785, i32* %782, align 4
  br label %786

786:                                              ; preds = %784, %776
  %787 = phi i32 [ %785, %784 ], [ %783, %776 ]
  %788 = icmp eq i32 %787, 0
  br i1 %788, label %789, label %790

789:                                              ; preds = %786
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %774) #16
  br i1 %777, label %871, label %791

790:                                              ; preds = %786
  br i1 %777, label %871, label %791

791:                                              ; preds = %789, %790, %773
  %792 = bitcast %"class.WTF::StringAppend.4675"* %40 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %792) #16
  %793 = icmp eq %"class.WTF::StringImpl"* %637, null
  br i1 %793, label %837, label %794

794:                                              ; preds = %791
  %795 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %796 = load atomic i32, i32* %795 monotonic, align 4
  %797 = and i32 %796, 2
  %798 = icmp eq i32 %797, 0
  %799 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 0
  %800 = load i32, i32* %799, align 4
  br i1 %798, label %801, label %811

801:                                              ; preds = %794
  %802 = zext i32 %800 to i33
  %803 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %802, i33 1) #16
  %804 = extractvalue { i33, i1 } %803, 1
  %805 = extractvalue { i33, i1 } %803, 0
  %806 = icmp slt i33 %805, 0
  %807 = or i1 %804, %806
  br i1 %807, label %808, label %809, !prof !3

808:                                              ; preds = %801
  call void @llvm.trap() #16
  unreachable

809:                                              ; preds = %801
  %810 = trunc i33 %805 to i32
  store i32 %810, i32* %799, align 4
  br label %811

811:                                              ; preds = %809, %794
  %812 = phi i32 [ %810, %809 ], [ %800, %794 ]
  %813 = load atomic i32, i32* %795 monotonic, align 4
  %814 = and i32 %813, 2
  %815 = icmp eq i32 %814, 0
  br i1 %815, label %816, label %826

816:                                              ; preds = %811
  %817 = zext i32 %812 to i33
  %818 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %817, i33 1) #16
  %819 = extractvalue { i33, i1 } %818, 1
  %820 = extractvalue { i33, i1 } %818, 0
  %821 = icmp slt i33 %820, 0
  %822 = or i1 %819, %821
  br i1 %822, label %823, label %824, !prof !3

823:                                              ; preds = %816
  call void @llvm.trap() #16
  unreachable

824:                                              ; preds = %816
  %825 = trunc i33 %820 to i32
  store i32 %825, i32* %799, align 4
  br label %826

826:                                              ; preds = %824, %811
  %827 = phi i32 [ %825, %824 ], [ %812, %811 ]
  %828 = load atomic i32, i32* %795 monotonic, align 4
  %829 = and i32 %828, 2
  %830 = icmp eq i32 %829, 0
  br i1 %830, label %831, label %833

831:                                              ; preds = %826
  %832 = add i32 %827, -1
  store i32 %832, i32* %799, align 4
  br label %833

833:                                              ; preds = %831, %826
  %834 = phi i32 [ %832, %831 ], [ %827, %826 ]
  %835 = icmp eq i32 %834, 0
  br i1 %835, label %836, label %837

836:                                              ; preds = %833
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %637) #16
  br label %837

837:                                              ; preds = %791, %833, %836
  %838 = getelementptr inbounds %"class.WTF::StringAppend.4675", %"class.WTF::StringAppend.4675"* %40, i64 0, i32 0
  store i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0), i8** %838, align 8
  %839 = getelementptr inbounds %"class.WTF::StringAppend.4675", %"class.WTF::StringAppend.4675"* %40, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %637, %"class.WTF::StringImpl"** %839, align 8
  %840 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.4675"* nonnull %40)
  br i1 %793, label %854, label %841

841:                                              ; preds = %837
  %842 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %843 = load atomic i32, i32* %842 monotonic, align 4
  %844 = and i32 %843, 2
  %845 = icmp eq i32 %844, 0
  %846 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %637, i64 0, i32 0
  %847 = load i32, i32* %846, align 4
  br i1 %845, label %848, label %850

848:                                              ; preds = %841
  %849 = add i32 %847, -1
  store i32 %849, i32* %846, align 4
  br label %850

850:                                              ; preds = %848, %841
  %851 = phi i32 [ %849, %848 ], [ %847, %841 ]
  %852 = icmp eq i32 %851, 0
  br i1 %852, label %853, label %854

853:                                              ; preds = %850
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %637) #16
  br label %854

854:                                              ; preds = %853, %850, %837
  %855 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %839, align 8
  %856 = icmp eq %"class.WTF::StringImpl"* %855, null
  br i1 %856, label %870, label %857

857:                                              ; preds = %854
  %858 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %859 = load atomic i32, i32* %858 monotonic, align 4
  %860 = and i32 %859, 2
  %861 = icmp eq i32 %860, 0
  %862 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %855, i64 0, i32 0
  %863 = load i32, i32* %862, align 4
  br i1 %861, label %864, label %866

864:                                              ; preds = %857
  %865 = add i32 %863, -1
  store i32 %865, i32* %862, align 4
  br label %866

866:                                              ; preds = %864, %857
  %867 = phi i32 [ %865, %864 ], [ %863, %857 ]
  %868 = icmp eq i32 %867, 0
  br i1 %868, label %869, label %870

869:                                              ; preds = %866
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %855) #16
  br label %870

870:                                              ; preds = %854, %866, %869
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %792) #16
  br label %871

871:                                              ; preds = %789, %790, %769, %766, %870
  %872 = phi %"class.WTF::StringImpl"* [ %840, %870 ], [ %637, %790 ], [ %637, %789 ], [ %637, %766 ], [ %637, %769 ]
  %873 = bitcast %"class.WTF::StringAppend.4676"* %41 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %873) #16
  %874 = icmp eq %"class.WTF::StringImpl"* %872, null
  br i1 %874, label %892, label %875

875:                                              ; preds = %871
  %876 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %877 = load atomic i32, i32* %876 monotonic, align 4
  %878 = and i32 %877, 2
  %879 = icmp eq i32 %878, 0
  br i1 %879, label %880, label %892

880:                                              ; preds = %875
  %881 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 0
  %882 = load i32, i32* %881, align 4
  %883 = zext i32 %882 to i33
  %884 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %883, i33 1) #16
  %885 = extractvalue { i33, i1 } %884, 1
  %886 = extractvalue { i33, i1 } %884, 0
  %887 = icmp slt i33 %886, 0
  %888 = or i1 %885, %887
  br i1 %888, label %889, label %890, !prof !3

889:                                              ; preds = %880
  call void @llvm.trap() #16
  unreachable

890:                                              ; preds = %880
  %891 = trunc i33 %886 to i32
  store i32 %891, i32* %881, align 4
  br label %892

892:                                              ; preds = %871, %875, %890
  %893 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* nonnull dereferenceable(8) %34, %"class.WTF::StringImpl"* %872)
  %894 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %41, i64 0, i32 0, i32 0, i32 0
  %895 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %893, 0
  store %"class.WTF::StringImpl"* %895, %"class.WTF::StringImpl"** %894, align 8
  %896 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %41, i64 0, i32 1, i32 0, i32 0
  %897 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %893, 1
  store %"class.WTF::StringImpl"* %897, %"class.WTF::StringImpl"** %896, align 8
  %898 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.4676"* nonnull %41)
  %899 = ptrtoint %"class.WTF::StringImpl"* %898 to i64
  %900 = bitcast %"class.WTF::String"* %34 to i64*
  %901 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  store i64 %899, i64* %900, align 8
  %902 = icmp eq %"class.WTF::StringImpl"* %901, null
  br i1 %902, label %916, label %903

903:                                              ; preds = %892
  %904 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %901, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %905 = load atomic i32, i32* %904 monotonic, align 4
  %906 = and i32 %905, 2
  %907 = icmp eq i32 %906, 0
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %901, i64 0, i32 0
  %909 = load i32, i32* %908, align 4
  br i1 %907, label %910, label %912

910:                                              ; preds = %903
  %911 = add i32 %909, -1
  store i32 %911, i32* %908, align 4
  br label %912

912:                                              ; preds = %910, %903
  %913 = phi i32 [ %911, %910 ], [ %909, %903 ]
  %914 = icmp eq i32 %913, 0
  br i1 %914, label %915, label %916

915:                                              ; preds = %912
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %901) #16
  br label %916

916:                                              ; preds = %915, %912, %892
  %917 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %896, align 8
  %918 = icmp eq %"class.WTF::StringImpl"* %917, null
  br i1 %918, label %932, label %919

919:                                              ; preds = %916
  %920 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %921 = load atomic i32, i32* %920 monotonic, align 4
  %922 = and i32 %921, 2
  %923 = icmp eq i32 %922, 0
  %924 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %917, i64 0, i32 0
  %925 = load i32, i32* %924, align 4
  br i1 %923, label %926, label %928

926:                                              ; preds = %919
  %927 = add i32 %925, -1
  store i32 %927, i32* %924, align 4
  br label %928

928:                                              ; preds = %926, %919
  %929 = phi i32 [ %927, %926 ], [ %925, %919 ]
  %930 = icmp eq i32 %929, 0
  br i1 %930, label %931, label %932

931:                                              ; preds = %928
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %917) #16
  br label %932

932:                                              ; preds = %931, %928, %916
  %933 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %894, align 8
  %934 = icmp eq %"class.WTF::StringImpl"* %933, null
  br i1 %934, label %948, label %935

935:                                              ; preds = %932
  %936 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %937 = load atomic i32, i32* %936 monotonic, align 4
  %938 = and i32 %937, 2
  %939 = icmp eq i32 %938, 0
  %940 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %933, i64 0, i32 0
  %941 = load i32, i32* %940, align 4
  br i1 %939, label %942, label %944

942:                                              ; preds = %935
  %943 = add i32 %941, -1
  store i32 %943, i32* %940, align 4
  br label %944

944:                                              ; preds = %942, %935
  %945 = phi i32 [ %943, %942 ], [ %941, %935 ]
  %946 = icmp eq i32 %945, 0
  br i1 %946, label %947, label %948

947:                                              ; preds = %944
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %933) #16
  br label %948

948:                                              ; preds = %932, %944, %947
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %873) #16
  %949 = load i32, i32* %386, align 4
  store i32 %949, i32* %403, align 4
  br i1 %874, label %950, label %951

950:                                              ; preds = %948
  store i32 %949, i32* %404, align 4
  br label %1782

951:                                              ; preds = %948
  %952 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 1
  %953 = load i32, i32* %952, align 4
  %954 = add i32 %953, %949
  store i32 %954, i32* %404, align 4
  %955 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %956 = load atomic i32, i32* %955 monotonic, align 4
  %957 = and i32 %956, 2
  %958 = icmp eq i32 %957, 0
  %959 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %872, i64 0, i32 0
  %960 = load i32, i32* %959, align 4
  br i1 %958, label %961, label %963

961:                                              ; preds = %951
  %962 = add i32 %960, -1
  store i32 %962, i32* %959, align 4
  br label %963

963:                                              ; preds = %961, %951
  %964 = phi i32 [ %962, %961 ], [ %960, %951 ]
  %965 = icmp eq i32 %964, 0
  br i1 %965, label %966, label %1782

966:                                              ; preds = %963
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %872) #16
  br label %1782

967:                                              ; preds = %382
  %968 = bitcast %"class.blink::CSSPropertySourceData"* %42 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %968) #16
  %969 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %42, i64 0, i32 0, i32 0, i32 0
  %970 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %42, i64 0, i32 1, i32 0, i32 0
  %971 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %42, i64 0, i32 2
  %972 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %42, i64 0, i32 6
  %973 = getelementptr inbounds %"class.blink::SourceRange", %"class.blink::SourceRange"* %972, i64 0, i32 0
  %974 = bitcast %"class.blink::CSSPropertySourceData"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %974, i8 -86, i64 32, i1 false)
  %975 = call dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3953"* %271, i32 %383) #16
  call void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"* nonnull %42, %"class.blink::CSSPropertySourceData"* dereferenceable(32) %975) #16
  %976 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %969, align 8
  %977 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %978 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %976, %"class.WTF::StringImpl"* %977) #16
  br i1 %978, label %979, label %1357

979:                                              ; preds = %967
  %980 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %981 = getelementptr inbounds %"class.blink::Node", %"class.blink::Node"* %980, i64 0, i32 3, i32 0, i32 0
  %982 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %981, align 8
  %983 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %982, i64 0, i32 2, i32 0, i32 0
  %984 = load %"class.blink::Document"*, %"class.blink::Document"** %983, align 8
  %985 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %984) #16
  %986 = getelementptr inbounds %"class.blink::ExecutionContext", %"class.blink::ExecutionContext"* %985, i64 0, i32 6, i32 11
  %987 = load i32, i32* %986, align 8
  %988 = call %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32 %987) #16
  %989 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #16
  %990 = bitcast i8* %989 to %"class.blink::StyleSheetContents"*
  %991 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %991) #16
  %992 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %992, align 8
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %990, %"class.blink::CSSParserContext"* %988, %"class.WTF::String"* nonnull dereferenceable(8) %9, %"class.blink::StyleRuleImport"* null) #16
  %993 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %992, align 8
  %994 = icmp eq %"class.WTF::StringImpl"* %993, null
  br i1 %994, label %1008, label %995

995:                                              ; preds = %979
  %996 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %993, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %997 = load atomic i32, i32* %996 monotonic, align 4
  %998 = and i32 %997, 2
  %999 = icmp eq i32 %998, 0
  %1000 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %993, i64 0, i32 0
  %1001 = load i32, i32* %1000, align 4
  br i1 %999, label %1002, label %1004

1002:                                             ; preds = %995
  %1003 = add i32 %1001, -1
  store i32 %1003, i32* %1000, align 4
  br label %1004

1004:                                             ; preds = %1002, %995
  %1005 = phi i32 [ %1003, %1002 ], [ %1001, %995 ]
  %1006 = icmp eq i32 %1005, 0
  br i1 %1006, label %1007, label %1008

1007:                                             ; preds = %1004
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %993) #16
  br label %1008

1008:                                             ; preds = %1007, %1004, %979
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %991) #16
  %1009 = getelementptr inbounds i8, i8* %989, i64 -4
  %1010 = bitcast i8* %1009 to i16*
  %1011 = load atomic i16, i16* %1010 monotonic, align 2
  %1012 = or i16 %1011, 1
  store atomic i16 %1012, i16* %1010 release, align 2
  %1013 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1013) #16
  %1014 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %1014, align 8
  %1015 = bitcast %"class.WTF::StringAppend.4672"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1015) #16
  %1016 = bitcast %"class.WTF::StringAppend.4673"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1016) #16
  %1017 = bitcast %"class.WTF::StringAppend.4674"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1017) #16
  %1018 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %1019 = icmp eq %"class.WTF::StringImpl"* %1018, null
  br i1 %1019, label %1096, label %1020

1020:                                             ; preds = %1008
  %1021 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1022 = load atomic i32, i32* %1021 monotonic, align 4
  %1023 = and i32 %1022, 2
  %1024 = icmp eq i32 %1023, 0
  %1025 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 0
  %1026 = load i32, i32* %1025, align 4
  br i1 %1024, label %1027, label %1037

1027:                                             ; preds = %1020
  %1028 = zext i32 %1026 to i33
  %1029 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1028, i33 1) #16
  %1030 = extractvalue { i33, i1 } %1029, 1
  %1031 = extractvalue { i33, i1 } %1029, 0
  %1032 = icmp slt i33 %1031, 0
  %1033 = or i1 %1030, %1032
  br i1 %1033, label %1034, label %1035, !prof !3

1034:                                             ; preds = %1027
  call void @llvm.trap() #16
  unreachable

1035:                                             ; preds = %1027
  %1036 = trunc i33 %1031 to i32
  store i32 %1036, i32* %1025, align 4
  br label %1037

1037:                                             ; preds = %1035, %1020
  %1038 = phi i32 [ %1036, %1035 ], [ %1026, %1020 ]
  %1039 = load atomic i32, i32* %1021 monotonic, align 4
  %1040 = and i32 %1039, 2
  %1041 = icmp eq i32 %1040, 0
  br i1 %1041, label %1042, label %1052

1042:                                             ; preds = %1037
  %1043 = zext i32 %1038 to i33
  %1044 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1043, i33 1) #16
  %1045 = extractvalue { i33, i1 } %1044, 1
  %1046 = extractvalue { i33, i1 } %1044, 0
  %1047 = icmp slt i33 %1046, 0
  %1048 = or i1 %1045, %1047
  br i1 %1048, label %1049, label %1050, !prof !3

1049:                                             ; preds = %1042
  call void @llvm.trap() #16
  unreachable

1050:                                             ; preds = %1042
  %1051 = trunc i33 %1046 to i32
  store i32 %1051, i32* %1025, align 4
  br label %1052

1052:                                             ; preds = %1050, %1037
  %1053 = phi i32 [ %1051, %1050 ], [ %1038, %1037 ]
  %1054 = load atomic i32, i32* %1021 monotonic, align 4
  %1055 = and i32 %1054, 2
  %1056 = icmp eq i32 %1055, 0
  br i1 %1056, label %1057, label %1059

1057:                                             ; preds = %1052
  %1058 = add i32 %1053, -1
  store i32 %1058, i32* %1025, align 4
  br label %1059

1059:                                             ; preds = %1057, %1052
  %1060 = phi i32 [ %1058, %1057 ], [ %1053, %1052 ]
  %1061 = icmp eq i32 %1060, 0
  br i1 %1061, label %1062, label %1064

1062:                                             ; preds = %1059
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1018) #16
  %1063 = load i32, i32* %1025, align 4
  br label %1064

1064:                                             ; preds = %1062, %1059
  %1065 = phi i32 [ %1063, %1062 ], [ %1060, %1059 ]
  %1066 = load atomic i32, i32* %1021 monotonic, align 4, !noalias !58
  %1067 = and i32 %1066, 2
  %1068 = icmp eq i32 %1067, 0
  br i1 %1068, label %1069, label %1079

1069:                                             ; preds = %1064
  %1070 = zext i32 %1065 to i33
  %1071 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1070, i33 1) #16
  %1072 = extractvalue { i33, i1 } %1071, 1
  %1073 = extractvalue { i33, i1 } %1071, 0
  %1074 = icmp slt i33 %1073, 0
  %1075 = or i1 %1072, %1074
  br i1 %1075, label %1076, label %1077, !prof !3

1076:                                             ; preds = %1069
  call void @llvm.trap() #16, !noalias !58
  unreachable

1077:                                             ; preds = %1069
  %1078 = trunc i33 %1073 to i32
  store i32 %1078, i32* %1025, align 4, !noalias !58
  br label %1079

1079:                                             ; preds = %1077, %1064
  %1080 = phi i32 [ %1078, %1077 ], [ %1065, %1064 ]
  %1081 = bitcast %"class.WTF::StringAppend.4674"* %13 to i64*
  store i64 ptrtoint ([8 x i8]* @.str.54 to i64), i64* %1081, align 8, !alias.scope !58
  %1082 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1018, %"class.WTF::StringImpl"** %1082, align 8, !alias.scope !58
  %1083 = load atomic i32, i32* %1021 monotonic, align 4, !noalias !58
  %1084 = and i32 %1083, 2
  %1085 = icmp eq i32 %1084, 0
  br i1 %1085, label %1086, label %1100

1086:                                             ; preds = %1079
  %1087 = zext i32 %1080 to i33
  %1088 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1087, i33 1) #16
  %1089 = extractvalue { i33, i1 } %1088, 1
  %1090 = extractvalue { i33, i1 } %1088, 0
  %1091 = icmp slt i33 %1090, 0
  %1092 = or i1 %1089, %1091
  br i1 %1092, label %1093, label %1094, !prof !3

1093:                                             ; preds = %1086
  call void @llvm.trap() #16, !noalias !58
  unreachable

1094:                                             ; preds = %1086
  %1095 = trunc i33 %1090 to i32
  store i32 %1095, i32* %1025, align 4, !noalias !58
  br label %1100

1096:                                             ; preds = %1008
  %1097 = bitcast %"class.WTF::StringAppend.4674"* %13 to i64*
  store i64 ptrtoint ([8 x i8]* @.str.54 to i64), i64* %1097, align 8, !alias.scope !58
  %1098 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %1098, align 8, !alias.scope !58
  %1099 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %1099, align 8, !alias.scope !58
  br label %1112

1100:                                             ; preds = %1094, %1079
  %1101 = phi i32 [ %1095, %1094 ], [ %1080, %1079 ]
  %1102 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %1102, align 8, !alias.scope !58
  %1103 = load atomic i32, i32* %1021 monotonic, align 4, !noalias !58
  %1104 = and i32 %1103, 2
  %1105 = icmp eq i32 %1104, 0
  br i1 %1105, label %1106, label %1108

1106:                                             ; preds = %1100
  %1107 = add i32 %1101, -1
  store i32 %1107, i32* %1025, align 4, !noalias !58
  br label %1108

1108:                                             ; preds = %1106, %1100
  %1109 = phi i32 [ %1107, %1106 ], [ %1101, %1100 ]
  %1110 = icmp eq i32 %1109, 0
  br i1 %1110, label %1111, label %1112

1111:                                             ; preds = %1108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1018) #16, !noalias !58
  br label %1112

1112:                                             ; preds = %1111, %1108, %1096
  %1113 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %970, align 8
  %1114 = icmp eq %"class.WTF::StringImpl"* %1113, null
  br i1 %1114, label %1132, label %1115

1115:                                             ; preds = %1112
  %1116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1117 = load atomic i32, i32* %1116 monotonic, align 4
  %1118 = and i32 %1117, 2
  %1119 = icmp eq i32 %1118, 0
  br i1 %1119, label %1120, label %1132

1120:                                             ; preds = %1115
  %1121 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1113, i64 0, i32 0
  %1122 = load i32, i32* %1121, align 4
  %1123 = zext i32 %1122 to i33
  %1124 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1123, i33 1) #16
  %1125 = extractvalue { i33, i1 } %1124, 1
  %1126 = extractvalue { i33, i1 } %1124, 0
  %1127 = icmp slt i33 %1126, 0
  %1128 = or i1 %1125, %1127
  br i1 %1128, label %1129, label %1130, !prof !3

1129:                                             ; preds = %1120
  call void @llvm.trap() #16
  unreachable

1130:                                             ; preds = %1120
  %1131 = trunc i33 %1126 to i32
  store i32 %1131, i32* %1121, align 4
  br label %1132

1132:                                             ; preds = %1130, %1115, %1112
  call void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.4673"* nonnull sret %12, %"class.WTF::StringAppend.4674"* nonnull dereferenceable(24) %13, %"class.WTF::StringImpl"* %1113) #16
  %1133 = bitcast %"class.WTF::StringAppend.4673"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1133) #16
  %1134 = bitcast %"class.WTF::StringAppend.4673"* %12 to i64*
  %1135 = load i64, i64* %1134, align 8, !noalias !61
  %1136 = bitcast %"class.WTF::StringAppend.4673"* %8 to i64*
  store i64 %1135, i64* %1136, align 8, !noalias !61
  %1137 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %12, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1137, align 8, !noalias !61
  %1139 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %8, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1138, %"class.WTF::StringImpl"** %1139, align 8, !noalias !61
  %1140 = icmp eq %"class.WTF::StringImpl"* %1138, null
  br i1 %1140, label %1158, label %1141

1141:                                             ; preds = %1132
  %1142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1143 = load atomic i32, i32* %1142 monotonic, align 4
  %1144 = and i32 %1143, 2
  %1145 = icmp eq i32 %1144, 0
  br i1 %1145, label %1146, label %1158

1146:                                             ; preds = %1141
  %1147 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1138, i64 0, i32 0
  %1148 = load i32, i32* %1147, align 4
  %1149 = zext i32 %1148 to i33
  %1150 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1149, i33 1) #16
  %1151 = extractvalue { i33, i1 } %1150, 1
  %1152 = extractvalue { i33, i1 } %1150, 0
  %1153 = icmp slt i33 %1152, 0
  %1154 = or i1 %1151, %1153
  br i1 %1154, label %1155, label %1156, !prof !3

1155:                                             ; preds = %1146
  call void @llvm.trap() #16
  unreachable

1156:                                             ; preds = %1146
  %1157 = trunc i33 %1152 to i32
  store i32 %1157, i32* %1147, align 4
  br label %1158

1158:                                             ; preds = %1156, %1141, %1132
  %1159 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %8, i64 0, i32 0, i32 1
  %1160 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %12, i64 0, i32 0, i32 1
  %1161 = bitcast i8** %1160 to i64*
  %1162 = load i64, i64* %1161, align 8, !noalias !61
  %1163 = bitcast i8** %1159 to i64*
  store i64 %1162, i64* %1163, align 8, !noalias !61
  %1164 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %12, i64 0, i32 1, i32 0, i32 0
  %1165 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1164, align 8, !noalias !61
  %1166 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %8, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1165, %"class.WTF::StringImpl"** %1166, align 8, !noalias !61
  %1167 = icmp eq %"class.WTF::StringImpl"* %1165, null
  br i1 %1167, label %1185, label %1168

1168:                                             ; preds = %1158
  %1169 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1165, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1170 = load atomic i32, i32* %1169 monotonic, align 4
  %1171 = and i32 %1170, 2
  %1172 = icmp eq i32 %1171, 0
  br i1 %1172, label %1173, label %1185

1173:                                             ; preds = %1168
  %1174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1165, i64 0, i32 0
  %1175 = load i32, i32* %1174, align 4
  %1176 = zext i32 %1175 to i33
  %1177 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1176, i33 1) #16
  %1178 = extractvalue { i33, i1 } %1177, 1
  %1179 = extractvalue { i33, i1 } %1177, 0
  %1180 = icmp slt i33 %1179, 0
  %1181 = or i1 %1178, %1180
  br i1 %1181, label %1182, label %1183, !prof !3

1182:                                             ; preds = %1173
  call void @llvm.trap() #16
  unreachable

1183:                                             ; preds = %1173
  %1184 = trunc i33 %1179 to i32
  store i32 %1184, i32* %1174, align 4
  br label %1185

1185:                                             ; preds = %1183, %1168, %1158
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.4672"* nonnull %11, %"class.WTF::StringAppend.4673"* nonnull byval(%"class.WTF::StringAppend.4673") align 8 %8, i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.55, i64 0, i64 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1133) #16
  %1186 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.4672"* nonnull %11) #16
  store %"class.WTF::StringImpl"* %1186, %"class.WTF::StringImpl"** %1014, align 8
  %1187 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %11, i64 0, i32 0, i32 1, i32 0, i32 0
  %1188 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1187, align 8
  %1189 = icmp eq %"class.WTF::StringImpl"* %1188, null
  br i1 %1189, label %1203, label %1190

1190:                                             ; preds = %1185
  %1191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1188, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1192 = load atomic i32, i32* %1191 monotonic, align 4
  %1193 = and i32 %1192, 2
  %1194 = icmp eq i32 %1193, 0
  %1195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1188, i64 0, i32 0
  %1196 = load i32, i32* %1195, align 4
  br i1 %1194, label %1197, label %1199

1197:                                             ; preds = %1190
  %1198 = add i32 %1196, -1
  store i32 %1198, i32* %1195, align 4
  br label %1199

1199:                                             ; preds = %1197, %1190
  %1200 = phi i32 [ %1198, %1197 ], [ %1196, %1190 ]
  %1201 = icmp eq i32 %1200, 0
  br i1 %1201, label %1202, label %1203

1202:                                             ; preds = %1199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1188) #16
  br label %1203

1203:                                             ; preds = %1202, %1199, %1185
  %1204 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %11, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1205 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1204, align 8
  %1206 = icmp eq %"class.WTF::StringImpl"* %1205, null
  br i1 %1206, label %1220, label %1207

1207:                                             ; preds = %1203
  %1208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1209 = load atomic i32, i32* %1208 monotonic, align 4
  %1210 = and i32 %1209, 2
  %1211 = icmp eq i32 %1210, 0
  %1212 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1205, i64 0, i32 0
  %1213 = load i32, i32* %1212, align 4
  br i1 %1211, label %1214, label %1216

1214:                                             ; preds = %1207
  %1215 = add i32 %1213, -1
  store i32 %1215, i32* %1212, align 4
  br label %1216

1216:                                             ; preds = %1214, %1207
  %1217 = phi i32 [ %1215, %1214 ], [ %1213, %1207 ]
  %1218 = icmp eq i32 %1217, 0
  br i1 %1218, label %1219, label %1220

1219:                                             ; preds = %1216
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1205) #16
  br label %1220

1220:                                             ; preds = %1219, %1216, %1203
  %1221 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1164, align 8
  %1222 = icmp eq %"class.WTF::StringImpl"* %1221, null
  br i1 %1222, label %1236, label %1223

1223:                                             ; preds = %1220
  %1224 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1221, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1225 = load atomic i32, i32* %1224 monotonic, align 4
  %1226 = and i32 %1225, 2
  %1227 = icmp eq i32 %1226, 0
  %1228 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1221, i64 0, i32 0
  %1229 = load i32, i32* %1228, align 4
  br i1 %1227, label %1230, label %1232

1230:                                             ; preds = %1223
  %1231 = add i32 %1229, -1
  store i32 %1231, i32* %1228, align 4
  br label %1232

1232:                                             ; preds = %1230, %1223
  %1233 = phi i32 [ %1231, %1230 ], [ %1229, %1223 ]
  %1234 = icmp eq i32 %1233, 0
  br i1 %1234, label %1235, label %1236

1235:                                             ; preds = %1232
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1221) #16
  br label %1236

1236:                                             ; preds = %1235, %1232, %1220
  %1237 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1137, align 8
  %1238 = icmp eq %"class.WTF::StringImpl"* %1237, null
  br i1 %1238, label %1252, label %1239

1239:                                             ; preds = %1236
  %1240 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1241 = load atomic i32, i32* %1240 monotonic, align 4
  %1242 = and i32 %1241, 2
  %1243 = icmp eq i32 %1242, 0
  %1244 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1237, i64 0, i32 0
  %1245 = load i32, i32* %1244, align 4
  br i1 %1243, label %1246, label %1248

1246:                                             ; preds = %1239
  %1247 = add i32 %1245, -1
  store i32 %1247, i32* %1244, align 4
  br label %1248

1248:                                             ; preds = %1246, %1239
  %1249 = phi i32 [ %1247, %1246 ], [ %1245, %1239 ]
  %1250 = icmp eq i32 %1249, 0
  br i1 %1250, label %1251, label %1252

1251:                                             ; preds = %1248
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1237) #16
  br label %1252

1252:                                             ; preds = %1251, %1248, %1236
  %1253 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %13, i64 0, i32 0, i32 1, i32 0, i32 0
  %1254 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1253, align 8
  %1255 = icmp eq %"class.WTF::StringImpl"* %1254, null
  br i1 %1255, label %1269, label %1256

1256:                                             ; preds = %1252
  %1257 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1254, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1258 = load atomic i32, i32* %1257 monotonic, align 4
  %1259 = and i32 %1258, 2
  %1260 = icmp eq i32 %1259, 0
  %1261 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1254, i64 0, i32 0
  %1262 = load i32, i32* %1261, align 4
  br i1 %1260, label %1263, label %1265

1263:                                             ; preds = %1256
  %1264 = add i32 %1262, -1
  store i32 %1264, i32* %1261, align 4
  br label %1265

1265:                                             ; preds = %1263, %1256
  %1266 = phi i32 [ %1264, %1263 ], [ %1262, %1256 ]
  %1267 = icmp eq i32 %1266, 0
  br i1 %1267, label %1268, label %1269

1268:                                             ; preds = %1265
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1254) #16
  br label %1269

1269:                                             ; preds = %1268, %1265, %1252
  br i1 %1019, label %1283, label %1270

1270:                                             ; preds = %1269
  %1271 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1272 = load atomic i32, i32* %1271 monotonic, align 4
  %1273 = and i32 %1272, 2
  %1274 = icmp eq i32 %1273, 0
  %1275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1018, i64 0, i32 0
  %1276 = load i32, i32* %1275, align 4
  br i1 %1274, label %1277, label %1279

1277:                                             ; preds = %1270
  %1278 = add i32 %1276, -1
  store i32 %1278, i32* %1275, align 4
  br label %1279

1279:                                             ; preds = %1277, %1270
  %1280 = phi i32 [ %1278, %1277 ], [ %1276, %1270 ]
  %1281 = icmp eq i32 %1280, 0
  br i1 %1281, label %1282, label %1283

1282:                                             ; preds = %1279
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1018) #16
  br label %1283

1283:                                             ; preds = %1282, %1279, %1269
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1017) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1016) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1015) #16
  %1284 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #16
  %1285 = bitcast i8* %1284 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"* %1285, %"class.blink::Document"* dereferenceable(2848) %984) #16
  %1286 = getelementptr inbounds i8, i8* %1284, i64 -4
  %1287 = bitcast i8* %1286 to i16*
  %1288 = load atomic i16, i16* %1287 monotonic, align 2
  %1289 = or i16 %1288, 1
  store atomic i16 %1289, i16* %1287 release, align 2
  %1290 = call i32 @_ZN5blink9CSSParser10ParseSheetEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringENS_23CSSDeferPropertyParsingEb(%"class.blink::CSSParserContext"* %1285, %"class.blink::StyleSheetContents"* %990, %"class.WTF::String"* nonnull dereferenceable(8) %10, i32 0, i1 zeroext true) #16
  %1291 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #16
  %1292 = bitcast i8* %1291 to %"class.blink::CSSStyleSheet"*
  call void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"* %1292, %"class.blink::StyleSheetContents"* %990, %"class.blink::CSSImportRule"* null) #16
  %1293 = getelementptr inbounds i8, i8* %1291, i64 -4
  %1294 = bitcast i8* %1293 to i16*
  %1295 = load atomic i16, i16* %1294 monotonic, align 2
  %1296 = or i16 %1295, 1
  store atomic i16 %1296, i16* %1294 release, align 2
  %1297 = call %"class.blink::CSSRule"* @_ZN5blink13CSSStyleSheet4itemEj(%"class.blink::CSSStyleSheet"* %1292, i32 0) #16
  %1298 = bitcast %"class.blink::CSSRule"* %1297 to %"class.blink::CSSStyleRule"*
  %1299 = call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"* %1298) #16
  %1300 = bitcast %"class.blink::DummyExceptionStateForTesting"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 72, i8* nonnull %1300) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %1300, i8 -86, i64 56, i1 false) #16
  %1301 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 0
  %1302 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 0
  store i16 1, i16* %1302, align 8
  %1303 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 1
  store i16 0, i16* %1303, align 2
  %1304 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 1, i32 2
  %1305 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0, i32 5, i32 0, i32 0
  %1306 = bitcast %"class.WTF::StringImpl"** %1305 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1306, i8 0, i64 16, i1 false) #16
  %1307 = bitcast i8** %1304 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %1307, i8 0, i64 36, i1 false) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [9 x i8*] }, { [9 x i8*] }* @_ZTVN5blink29DummyExceptionStateForTestingE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %1301, align 8
  %1308 = call %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"* %984) #16
  %1309 = bitcast %"class.WTF::String"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1309) #16
  %1310 = bitcast %"class.blink::CSSStyleDeclaration"* %1299 to %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)***
  %1311 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %1310, align 8
  %1312 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %1311, i64 15
  %1313 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %1312, align 8
  %1314 = call %"class.WTF::StringImpl"* %1313(%"class.blink::CSSStyleDeclaration"* %1299, %"class.WTF::String"* nonnull dereferenceable(8) %29) #16
  %1315 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %15, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1314, %"class.WTF::StringImpl"** %1315, align 8
  %1316 = getelementptr inbounds %"class.blink::DummyExceptionStateForTesting", %"class.blink::DummyExceptionStateForTesting"* %14, i64 0, i32 0
  %1317 = bitcast %"class.blink::CSSStyleDeclaration"* %1299 to void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %1318 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %1317, align 8
  %1319 = getelementptr inbounds void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %1318, i64 18
  %1320 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::ExecutionContext"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %1319, align 8
  call void %1320(%"class.blink::CSSStyleDeclaration"* %1299, %"class.blink::ExecutionContext"* %1308, %"class.WTF::String"* nonnull dereferenceable(8) %29, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* nonnull dereferenceable(8) %15, %"class.blink::ExceptionState"* nonnull dereferenceable(72) %1316) #16
  %1321 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1315, align 8
  %1322 = icmp eq %"class.WTF::StringImpl"* %1321, null
  br i1 %1322, label %1336, label %1323

1323:                                             ; preds = %1283
  %1324 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1321, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1325 = load atomic i32, i32* %1324 monotonic, align 4
  %1326 = and i32 %1325, 2
  %1327 = icmp eq i32 %1326, 0
  %1328 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1321, i64 0, i32 0
  %1329 = load i32, i32* %1328, align 4
  br i1 %1327, label %1330, label %1332

1330:                                             ; preds = %1323
  %1331 = add i32 %1329, -1
  store i32 %1331, i32* %1328, align 4
  br label %1332

1332:                                             ; preds = %1330, %1323
  %1333 = phi i32 [ %1331, %1330 ], [ %1329, %1323 ]
  %1334 = icmp eq i32 %1333, 0
  br i1 %1334, label %1335, label %1336

1335:                                             ; preds = %1332
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1321) #16
  br label %1336

1336:                                             ; preds = %1335, %1332, %1283
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1309) #16
  %1337 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)**, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*** %1310, align 8
  %1338 = getelementptr inbounds %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %1337, i64 14
  %1339 = load %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)*, %"class.WTF::StringImpl"* (%"class.blink::CSSStyleDeclaration"*, %"class.WTF::String"*)** %1338, align 8
  %1340 = call %"class.WTF::StringImpl"* %1339(%"class.blink::CSSStyleDeclaration"* %1299, %"class.WTF::String"* nonnull dereferenceable(8) %28) #16
  call void @_ZN5blink29DummyExceptionStateForTestingD2Ev(%"class.blink::DummyExceptionStateForTesting"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 72, i8* nonnull %1300) #16
  %1341 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1014, align 8
  %1342 = icmp eq %"class.WTF::StringImpl"* %1341, null
  br i1 %1342, label %1356, label %1343

1343:                                             ; preds = %1336
  %1344 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1341, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1345 = load atomic i32, i32* %1344 monotonic, align 4
  %1346 = and i32 %1345, 2
  %1347 = icmp eq i32 %1346, 0
  %1348 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1341, i64 0, i32 0
  %1349 = load i32, i32* %1348, align 4
  br i1 %1347, label %1350, label %1352

1350:                                             ; preds = %1343
  %1351 = add i32 %1349, -1
  store i32 %1351, i32* %1348, align 4
  br label %1352

1352:                                             ; preds = %1350, %1343
  %1353 = phi i32 [ %1351, %1350 ], [ %1349, %1343 ]
  %1354 = icmp eq i32 %1353, 0
  br i1 %1354, label %1355, label %1356

1355:                                             ; preds = %1352
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1341) #16
  br label %1356

1356:                                             ; preds = %1336, %1352, %1355
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1013) #16
  br label %1378

1357:                                             ; preds = %967
  %1358 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %1359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1358, align 8
  %1360 = icmp eq %"class.WTF::StringImpl"* %1359, null
  br i1 %1360, label %1378, label %1361

1361:                                             ; preds = %1357
  %1362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1363 = load atomic i32, i32* %1362 monotonic, align 4
  %1364 = and i32 %1363, 2
  %1365 = icmp eq i32 %1364, 0
  br i1 %1365, label %1366, label %1378

1366:                                             ; preds = %1361
  %1367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1359, i64 0, i32 0
  %1368 = load i32, i32* %1367, align 4
  %1369 = zext i32 %1368 to i33
  %1370 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1369, i33 1) #16
  %1371 = extractvalue { i33, i1 } %1370, 1
  %1372 = extractvalue { i33, i1 } %1370, 0
  %1373 = icmp slt i33 %1372, 0
  %1374 = or i1 %1371, %1373
  br i1 %1374, label %1375, label %1376, !prof !3

1375:                                             ; preds = %1366
  call void @llvm.trap() #16
  unreachable

1376:                                             ; preds = %1366
  %1377 = trunc i33 %1372 to i32
  store i32 %1377, i32* %1367, align 4
  br label %1378

1378:                                             ; preds = %1376, %1361, %1357, %1356
  %1379 = phi %"class.WTF::StringImpl"* [ %1340, %1356 ], [ null, %1357 ], [ %1359, %1361 ], [ %1359, %1376 ]
  %1380 = bitcast %"class.WTF::StringAppend.4677"* %43 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %1380) #16
  %1381 = bitcast %"class.WTF::StringAppend.4678"* %44 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1381) #16
  %1382 = bitcast %"class.WTF::StringAppend.4679"* %45 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1382) #16
  %1383 = bitcast %"class.WTF::StringAppend.4680"* %46 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %1383) #16
  %1384 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %969, align 8
  %1385 = icmp eq %"class.WTF::StringImpl"* %1384, null
  br i1 %1385, label %1430, label %1386

1386:                                             ; preds = %1378
  %1387 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1384, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1388 = load atomic i32, i32* %1387 monotonic, align 4
  %1389 = and i32 %1388, 2
  %1390 = icmp eq i32 %1389, 0
  %1391 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1384, i64 0, i32 0
  %1392 = load i32, i32* %1391, align 4
  br i1 %1390, label %1393, label %1403

1393:                                             ; preds = %1386
  %1394 = zext i32 %1392 to i33
  %1395 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1394, i33 1) #16
  %1396 = extractvalue { i33, i1 } %1395, 1
  %1397 = extractvalue { i33, i1 } %1395, 0
  %1398 = icmp slt i33 %1397, 0
  %1399 = or i1 %1396, %1398
  br i1 %1399, label %1400, label %1401, !prof !3

1400:                                             ; preds = %1393
  call void @llvm.trap() #16
  unreachable

1401:                                             ; preds = %1393
  %1402 = trunc i33 %1397 to i32
  store i32 %1402, i32* %1391, align 4
  br label %1403

1403:                                             ; preds = %1386, %1401
  %1404 = phi i32 [ %1402, %1401 ], [ %1392, %1386 ]
  %1405 = load atomic i32, i32* %1387 monotonic, align 4
  %1406 = and i32 %1405, 2
  %1407 = icmp eq i32 %1406, 0
  %1408 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1384, i64 0, i32 0
  br i1 %1407, label %1409, label %1419

1409:                                             ; preds = %1403
  %1410 = zext i32 %1404 to i33
  %1411 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1410, i33 1) #16
  %1412 = extractvalue { i33, i1 } %1411, 1
  %1413 = extractvalue { i33, i1 } %1411, 0
  %1414 = icmp slt i33 %1413, 0
  %1415 = or i1 %1412, %1414
  br i1 %1415, label %1416, label %1417, !prof !3

1416:                                             ; preds = %1409
  call void @llvm.trap() #16
  unreachable

1417:                                             ; preds = %1409
  %1418 = trunc i33 %1413 to i32
  store i32 %1418, i32* %1408, align 4
  br label %1419

1419:                                             ; preds = %1417, %1403
  %1420 = phi i32 [ %1418, %1417 ], [ %1404, %1403 ]
  %1421 = load atomic i32, i32* %1387 monotonic, align 4
  %1422 = and i32 %1421, 2
  %1423 = icmp eq i32 %1422, 0
  br i1 %1423, label %1424, label %1426

1424:                                             ; preds = %1419
  %1425 = add i32 %1420, -1
  store i32 %1425, i32* %1408, align 4
  br label %1426

1426:                                             ; preds = %1424, %1419
  %1427 = phi i32 [ %1425, %1424 ], [ %1420, %1419 ]
  %1428 = icmp eq i32 %1427, 0
  br i1 %1428, label %1429, label %1430

1429:                                             ; preds = %1426
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1384) #16
  br label %1430

1430:                                             ; preds = %1378, %1426, %1429
  %1431 = getelementptr inbounds %"class.WTF::StringAppend.4680", %"class.WTF::StringAppend.4680"* %46, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1384, %"class.WTF::StringImpl"** %1431, align 8
  %1432 = getelementptr inbounds %"class.WTF::StringAppend.4680", %"class.WTF::StringAppend.4680"* %46, i64 0, i32 1
  store i8* getelementptr inbounds ([3 x i8], [3 x i8]* @.str.22, i64 0, i64 0), i8** %1432, align 8
  %1433 = icmp eq %"class.WTF::StringImpl"* %1379, null
  br i1 %1433, label %1451, label %1434

1434:                                             ; preds = %1430
  %1435 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1436 = load atomic i32, i32* %1435 monotonic, align 4
  %1437 = and i32 %1436, 2
  %1438 = icmp eq i32 %1437, 0
  br i1 %1438, label %1439, label %1451

1439:                                             ; preds = %1434
  %1440 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 0
  %1441 = load i32, i32* %1440, align 4
  %1442 = zext i32 %1441 to i33
  %1443 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1442, i33 1) #16
  %1444 = extractvalue { i33, i1 } %1443, 1
  %1445 = extractvalue { i33, i1 } %1443, 0
  %1446 = icmp slt i33 %1445, 0
  %1447 = or i1 %1444, %1446
  br i1 %1447, label %1448, label %1449, !prof !3

1448:                                             ; preds = %1439
  call void @llvm.trap() #16
  unreachable

1449:                                             ; preds = %1439
  %1450 = trunc i33 %1445 to i32
  store i32 %1450, i32* %1440, align 4
  br label %1451

1451:                                             ; preds = %1430, %1434, %1449
  call void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.4679"* nonnull sret %45, %"class.WTF::StringAppend.4680"* nonnull dereferenceable(16) %46, %"class.WTF::StringImpl"* %1379)
  %1452 = load i8, i8* %971, align 8, !range !4
  %1453 = icmp eq i8 %1452, 0
  %1454 = select i1 %1453, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.23, i64 0, i64 0)
  %1455 = bitcast %"class.WTF::StringAppend.4679"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1455)
  %1456 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %45, i64 0, i32 0, i32 0, i32 0, i32 0
  %1457 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1456, align 8, !noalias !64
  %1458 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1457, %"class.WTF::StringImpl"** %1458, align 8, !noalias !64
  %1459 = icmp eq %"class.WTF::StringImpl"* %1457, null
  br i1 %1459, label %1477, label %1460

1460:                                             ; preds = %1451
  %1461 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1457, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1462 = load atomic i32, i32* %1461 monotonic, align 4
  %1463 = and i32 %1462, 2
  %1464 = icmp eq i32 %1463, 0
  br i1 %1464, label %1465, label %1477

1465:                                             ; preds = %1460
  %1466 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1457, i64 0, i32 0
  %1467 = load i32, i32* %1466, align 4
  %1468 = zext i32 %1467 to i33
  %1469 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1468, i33 1) #16
  %1470 = extractvalue { i33, i1 } %1469, 1
  %1471 = extractvalue { i33, i1 } %1469, 0
  %1472 = icmp slt i33 %1471, 0
  %1473 = or i1 %1470, %1472
  br i1 %1473, label %1474, label %1475, !prof !3

1474:                                             ; preds = %1465
  call void @llvm.trap() #16
  unreachable

1475:                                             ; preds = %1465
  %1476 = trunc i33 %1471 to i32
  store i32 %1476, i32* %1466, align 4
  br label %1477

1477:                                             ; preds = %1475, %1460, %1451
  %1478 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %7, i64 0, i32 0, i32 1
  %1479 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %45, i64 0, i32 0, i32 1
  %1480 = bitcast i8** %1479 to i64*
  %1481 = load i64, i64* %1480, align 8, !noalias !64
  %1482 = bitcast i8** %1478 to i64*
  store i64 %1481, i64* %1482, align 8, !noalias !64
  %1483 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %45, i64 0, i32 1, i32 0, i32 0
  %1484 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1483, align 8, !noalias !64
  %1485 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %7, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1484, %"class.WTF::StringImpl"** %1485, align 8, !noalias !64
  %1486 = icmp eq %"class.WTF::StringImpl"* %1484, null
  br i1 %1486, label %1504, label %1487

1487:                                             ; preds = %1477
  %1488 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1484, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1489 = load atomic i32, i32* %1488 monotonic, align 4
  %1490 = and i32 %1489, 2
  %1491 = icmp eq i32 %1490, 0
  br i1 %1491, label %1492, label %1504

1492:                                             ; preds = %1487
  %1493 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1484, i64 0, i32 0
  %1494 = load i32, i32* %1493, align 4
  %1495 = zext i32 %1494 to i33
  %1496 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1495, i33 1) #16
  %1497 = extractvalue { i33, i1 } %1496, 1
  %1498 = extractvalue { i33, i1 } %1496, 0
  %1499 = icmp slt i33 %1498, 0
  %1500 = or i1 %1497, %1499
  br i1 %1500, label %1501, label %1502, !prof !3

1501:                                             ; preds = %1492
  call void @llvm.trap() #16
  unreachable

1502:                                             ; preds = %1492
  %1503 = trunc i33 %1498 to i32
  store i32 %1503, i32* %1493, align 4
  br label %1504

1504:                                             ; preds = %1477, %1487, %1502
  call void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.4678"* nonnull %44, %"class.WTF::StringAppend.4679"* nonnull byval(%"class.WTF::StringAppend.4679") align 8 %7, i8* %1454) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1455)
  %1505 = bitcast %"class.WTF::StringAppend.4678"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %1505)
  %1506 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %44, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1507 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1506, align 8, !noalias !67
  %1508 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1507, %"class.WTF::StringImpl"** %1508, align 8, !noalias !67
  %1509 = icmp eq %"class.WTF::StringImpl"* %1507, null
  br i1 %1509, label %1527, label %1510

1510:                                             ; preds = %1504
  %1511 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1507, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1512 = load atomic i32, i32* %1511 monotonic, align 4
  %1513 = and i32 %1512, 2
  %1514 = icmp eq i32 %1513, 0
  br i1 %1514, label %1515, label %1527

1515:                                             ; preds = %1510
  %1516 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1507, i64 0, i32 0
  %1517 = load i32, i32* %1516, align 4
  %1518 = zext i32 %1517 to i33
  %1519 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1518, i33 1) #16
  %1520 = extractvalue { i33, i1 } %1519, 1
  %1521 = extractvalue { i33, i1 } %1519, 0
  %1522 = icmp slt i33 %1521, 0
  %1523 = or i1 %1520, %1522
  br i1 %1523, label %1524, label %1525, !prof !3

1524:                                             ; preds = %1515
  call void @llvm.trap() #16
  unreachable

1525:                                             ; preds = %1515
  %1526 = trunc i33 %1521 to i32
  store i32 %1526, i32* %1516, align 4
  br label %1527

1527:                                             ; preds = %1525, %1510, %1504
  %1528 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %6, i64 0, i32 0, i32 0, i32 1
  %1529 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %44, i64 0, i32 0, i32 0, i32 1
  %1530 = bitcast i8** %1529 to i64*
  %1531 = load i64, i64* %1530, align 8, !noalias !67
  %1532 = bitcast i8** %1528 to i64*
  store i64 %1531, i64* %1532, align 8, !noalias !67
  %1533 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %44, i64 0, i32 0, i32 1, i32 0, i32 0
  %1534 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1533, align 8, !noalias !67
  %1535 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %6, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1534, %"class.WTF::StringImpl"** %1535, align 8, !noalias !67
  %1536 = icmp eq %"class.WTF::StringImpl"* %1534, null
  br i1 %1536, label %1554, label %1537

1537:                                             ; preds = %1527
  %1538 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1534, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1539 = load atomic i32, i32* %1538 monotonic, align 4
  %1540 = and i32 %1539, 2
  %1541 = icmp eq i32 %1540, 0
  br i1 %1541, label %1542, label %1554

1542:                                             ; preds = %1537
  %1543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1534, i64 0, i32 0
  %1544 = load i32, i32* %1543, align 4
  %1545 = zext i32 %1544 to i33
  %1546 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %1545, i33 1) #16
  %1547 = extractvalue { i33, i1 } %1546, 1
  %1548 = extractvalue { i33, i1 } %1546, 0
  %1549 = icmp slt i33 %1548, 0
  %1550 = or i1 %1547, %1549
  br i1 %1550, label %1551, label %1552, !prof !3

1551:                                             ; preds = %1542
  call void @llvm.trap() #16
  unreachable

1552:                                             ; preds = %1542
  %1553 = trunc i33 %1548 to i32
  store i32 %1553, i32* %1543, align 4
  br label %1554

1554:                                             ; preds = %1527, %1537, %1552
  %1555 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %6, i64 0, i32 1
  %1556 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %44, i64 0, i32 1
  %1557 = bitcast i8** %1556 to i64*
  %1558 = load i64, i64* %1557, align 8, !noalias !67
  %1559 = bitcast i8** %1555 to i64*
  store i64 %1558, i64* %1559, align 8, !noalias !67
  call void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_EC2ES6_S3_(%"class.WTF::StringAppend.4677"* nonnull %43, %"class.WTF::StringAppend.4678"* nonnull byval(%"class.WTF::StringAppend.4678") align 8 %6, i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.24, i64 0, i64 0)) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1505)
  %1560 = call %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_EcvS1_Ev(%"class.WTF::StringAppend.4677"* nonnull %43)
  %1561 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %43, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %1562 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1561, align 8
  %1563 = icmp eq %"class.WTF::StringImpl"* %1562, null
  br i1 %1563, label %1577, label %1564

1564:                                             ; preds = %1554
  %1565 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1562, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1566 = load atomic i32, i32* %1565 monotonic, align 4
  %1567 = and i32 %1566, 2
  %1568 = icmp eq i32 %1567, 0
  %1569 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1562, i64 0, i32 0
  %1570 = load i32, i32* %1569, align 4
  br i1 %1568, label %1571, label %1573

1571:                                             ; preds = %1564
  %1572 = add i32 %1570, -1
  store i32 %1572, i32* %1569, align 4
  br label %1573

1573:                                             ; preds = %1571, %1564
  %1574 = phi i32 [ %1572, %1571 ], [ %1570, %1564 ]
  %1575 = icmp eq i32 %1574, 0
  br i1 %1575, label %1576, label %1577

1576:                                             ; preds = %1573
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1562) #16
  br label %1577

1577:                                             ; preds = %1576, %1573, %1554
  %1578 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %43, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1579 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1578, align 8
  %1580 = icmp eq %"class.WTF::StringImpl"* %1579, null
  br i1 %1580, label %1594, label %1581

1581:                                             ; preds = %1577
  %1582 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1579, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1583 = load atomic i32, i32* %1582 monotonic, align 4
  %1584 = and i32 %1583, 2
  %1585 = icmp eq i32 %1584, 0
  %1586 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1579, i64 0, i32 0
  %1587 = load i32, i32* %1586, align 4
  br i1 %1585, label %1588, label %1590

1588:                                             ; preds = %1581
  %1589 = add i32 %1587, -1
  store i32 %1589, i32* %1586, align 4
  br label %1590

1590:                                             ; preds = %1588, %1581
  %1591 = phi i32 [ %1589, %1588 ], [ %1587, %1581 ]
  %1592 = icmp eq i32 %1591, 0
  br i1 %1592, label %1593, label %1594

1593:                                             ; preds = %1590
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1579) #16
  br label %1594

1594:                                             ; preds = %1577, %1590, %1593
  %1595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1533, align 8
  %1596 = icmp eq %"class.WTF::StringImpl"* %1595, null
  br i1 %1596, label %1610, label %1597

1597:                                             ; preds = %1594
  %1598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1595, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1599 = load atomic i32, i32* %1598 monotonic, align 4
  %1600 = and i32 %1599, 2
  %1601 = icmp eq i32 %1600, 0
  %1602 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1595, i64 0, i32 0
  %1603 = load i32, i32* %1602, align 4
  br i1 %1601, label %1604, label %1606

1604:                                             ; preds = %1597
  %1605 = add i32 %1603, -1
  store i32 %1605, i32* %1602, align 4
  br label %1606

1606:                                             ; preds = %1604, %1597
  %1607 = phi i32 [ %1605, %1604 ], [ %1603, %1597 ]
  %1608 = icmp eq i32 %1607, 0
  br i1 %1608, label %1609, label %1610

1609:                                             ; preds = %1606
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1595) #16
  br label %1610

1610:                                             ; preds = %1609, %1606, %1594
  %1611 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1506, align 8
  %1612 = icmp eq %"class.WTF::StringImpl"* %1611, null
  br i1 %1612, label %1626, label %1613

1613:                                             ; preds = %1610
  %1614 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1611, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1615 = load atomic i32, i32* %1614 monotonic, align 4
  %1616 = and i32 %1615, 2
  %1617 = icmp eq i32 %1616, 0
  %1618 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1611, i64 0, i32 0
  %1619 = load i32, i32* %1618, align 4
  br i1 %1617, label %1620, label %1622

1620:                                             ; preds = %1613
  %1621 = add i32 %1619, -1
  store i32 %1621, i32* %1618, align 4
  br label %1622

1622:                                             ; preds = %1620, %1613
  %1623 = phi i32 [ %1621, %1620 ], [ %1619, %1613 ]
  %1624 = icmp eq i32 %1623, 0
  br i1 %1624, label %1625, label %1626

1625:                                             ; preds = %1622
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1611) #16
  br label %1626

1626:                                             ; preds = %1610, %1622, %1625
  %1627 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1483, align 8
  %1628 = icmp eq %"class.WTF::StringImpl"* %1627, null
  br i1 %1628, label %1642, label %1629

1629:                                             ; preds = %1626
  %1630 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1627, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1631 = load atomic i32, i32* %1630 monotonic, align 4
  %1632 = and i32 %1631, 2
  %1633 = icmp eq i32 %1632, 0
  %1634 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1627, i64 0, i32 0
  %1635 = load i32, i32* %1634, align 4
  br i1 %1633, label %1636, label %1638

1636:                                             ; preds = %1629
  %1637 = add i32 %1635, -1
  store i32 %1637, i32* %1634, align 4
  br label %1638

1638:                                             ; preds = %1636, %1629
  %1639 = phi i32 [ %1637, %1636 ], [ %1635, %1629 ]
  %1640 = icmp eq i32 %1639, 0
  br i1 %1640, label %1641, label %1642

1641:                                             ; preds = %1638
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1627) #16
  br label %1642

1642:                                             ; preds = %1641, %1638, %1626
  %1643 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1456, align 8
  %1644 = icmp eq %"class.WTF::StringImpl"* %1643, null
  br i1 %1644, label %1658, label %1645

1645:                                             ; preds = %1642
  %1646 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1643, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1647 = load atomic i32, i32* %1646 monotonic, align 4
  %1648 = and i32 %1647, 2
  %1649 = icmp eq i32 %1648, 0
  %1650 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1643, i64 0, i32 0
  %1651 = load i32, i32* %1650, align 4
  br i1 %1649, label %1652, label %1654

1652:                                             ; preds = %1645
  %1653 = add i32 %1651, -1
  store i32 %1653, i32* %1650, align 4
  br label %1654

1654:                                             ; preds = %1652, %1645
  %1655 = phi i32 [ %1653, %1652 ], [ %1651, %1645 ]
  %1656 = icmp eq i32 %1655, 0
  br i1 %1656, label %1657, label %1658

1657:                                             ; preds = %1654
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1643) #16
  br label %1658

1658:                                             ; preds = %1642, %1654, %1657
  %1659 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1431, align 8
  %1660 = icmp eq %"class.WTF::StringImpl"* %1659, null
  br i1 %1660, label %1674, label %1661

1661:                                             ; preds = %1658
  %1662 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1659, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1663 = load atomic i32, i32* %1662 monotonic, align 4
  %1664 = and i32 %1663, 2
  %1665 = icmp eq i32 %1664, 0
  %1666 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1659, i64 0, i32 0
  %1667 = load i32, i32* %1666, align 4
  br i1 %1665, label %1668, label %1670

1668:                                             ; preds = %1661
  %1669 = add i32 %1667, -1
  store i32 %1669, i32* %1666, align 4
  br label %1670

1670:                                             ; preds = %1668, %1661
  %1671 = phi i32 [ %1669, %1668 ], [ %1667, %1661 ]
  %1672 = icmp eq i32 %1671, 0
  br i1 %1672, label %1673, label %1674

1673:                                             ; preds = %1670
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1659) #16
  br label %1674

1674:                                             ; preds = %1658, %1670, %1673
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %1383) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1382) #16
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %1381) #16
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %1380) #16
  %1675 = load i32, i32* %973, align 4
  %1676 = load i32, i32* %385, align 8
  %1677 = sub i32 %1675, %1676
  %1678 = call i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"* %972) #16
  %1679 = bitcast %"class.WTF::StringView"* %47 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %1679) #16
  %1680 = icmp eq %"class.WTF::StringImpl"* %1560, null
  br i1 %1680, label %1681, label %1685

1681:                                             ; preds = %1674
  %1682 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 1
  store i8* null, i8** %1682, align 8
  %1683 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %1684 = bitcast %"class.WTF::StringView"* %47 to i64*
  store i64 %1683, i64* %1684, align 8
  br label %1692

1685:                                             ; preds = %1674
  %1686 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 0
  store %"class.WTF::StringImpl"* %1560, %"class.WTF::StringImpl"** %1686, align 8
  %1687 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1560, i64 0, i32 1
  %1688 = load i32, i32* %1687, align 4
  %1689 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1560, i64 1
  %1690 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 1
  %1691 = bitcast i8** %1690 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %1689, %"class.WTF::StringImpl"** %1691, align 8
  br label %1692

1692:                                             ; preds = %1681, %1685
  %1693 = phi i32 [ %1688, %1685 ], [ 0, %1681 ]
  %1694 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %47, i64 0, i32 2
  store i32 %1693, i32* %1694, align 8
  %1695 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %1696 = icmp eq %"class.WTF::StringImpl"* %1695, null
  br i1 %1696, label %1716, label %1697

1697:                                             ; preds = %1692
  %1698 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"* nonnull %1695, i32 %1677, i32 %1678, %"class.WTF::StringView"* nonnull dereferenceable(24) %47) #16
  %1699 = ptrtoint %"class.WTF::StringImpl"* %1698 to i64
  %1700 = bitcast %"class.WTF::String"* %34 to i64*
  %1701 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  store i64 %1699, i64* %1700, align 8
  %1702 = icmp eq %"class.WTF::StringImpl"* %1701, null
  br i1 %1702, label %1716, label %1703

1703:                                             ; preds = %1697
  %1704 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1701, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1705 = load atomic i32, i32* %1704 monotonic, align 4
  %1706 = and i32 %1705, 2
  %1707 = icmp eq i32 %1706, 0
  %1708 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1701, i64 0, i32 0
  %1709 = load i32, i32* %1708, align 4
  br i1 %1707, label %1710, label %1712

1710:                                             ; preds = %1703
  %1711 = add i32 %1709, -1
  store i32 %1711, i32* %1708, align 4
  br label %1712

1712:                                             ; preds = %1710, %1703
  %1713 = phi i32 [ %1711, %1710 ], [ %1709, %1703 ]
  %1714 = icmp eq i32 %1713, 0
  br i1 %1714, label %1715, label %1716

1715:                                             ; preds = %1712
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1701) #16
  br label %1716

1716:                                             ; preds = %1692, %1697, %1712, %1715
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %1679) #16
  %1717 = load i32, i32* %973, align 4
  store i32 %1717, i32* %403, align 4
  br i1 %1680, label %1718, label %1719

1718:                                             ; preds = %1716
  store i32 %1717, i32* %404, align 4
  br label %1735

1719:                                             ; preds = %1716
  %1720 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1560, i64 0, i32 1
  %1721 = load i32, i32* %1720, align 4
  %1722 = add i32 %1721, %1717
  store i32 %1722, i32* %404, align 4
  %1723 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1560, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1724 = load atomic i32, i32* %1723 monotonic, align 4
  %1725 = and i32 %1724, 2
  %1726 = icmp eq i32 %1725, 0
  %1727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1560, i64 0, i32 0
  %1728 = load i32, i32* %1727, align 4
  br i1 %1726, label %1729, label %1731

1729:                                             ; preds = %1719
  %1730 = add i32 %1728, -1
  store i32 %1730, i32* %1727, align 4
  br label %1731

1731:                                             ; preds = %1729, %1719
  %1732 = phi i32 [ %1730, %1729 ], [ %1728, %1719 ]
  %1733 = icmp eq i32 %1732, 0
  br i1 %1733, label %1734, label %1735

1734:                                             ; preds = %1731
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1560) #16
  br label %1735

1735:                                             ; preds = %1718, %1731, %1734
  br i1 %1433, label %1749, label %1736

1736:                                             ; preds = %1735
  %1737 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1738 = load atomic i32, i32* %1737 monotonic, align 4
  %1739 = and i32 %1738, 2
  %1740 = icmp eq i32 %1739, 0
  %1741 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1379, i64 0, i32 0
  %1742 = load i32, i32* %1741, align 4
  br i1 %1740, label %1743, label %1745

1743:                                             ; preds = %1736
  %1744 = add i32 %1742, -1
  store i32 %1744, i32* %1741, align 4
  br label %1745

1745:                                             ; preds = %1743, %1736
  %1746 = phi i32 [ %1744, %1743 ], [ %1742, %1736 ]
  %1747 = icmp eq i32 %1746, 0
  br i1 %1747, label %1748, label %1749

1748:                                             ; preds = %1745
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1379) #16
  br label %1749

1749:                                             ; preds = %1735, %1745, %1748
  %1750 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %970, align 8
  %1751 = icmp eq %"class.WTF::StringImpl"* %1750, null
  br i1 %1751, label %1765, label %1752

1752:                                             ; preds = %1749
  %1753 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1754 = load atomic i32, i32* %1753 monotonic, align 4
  %1755 = and i32 %1754, 2
  %1756 = icmp eq i32 %1755, 0
  %1757 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1750, i64 0, i32 0
  %1758 = load i32, i32* %1757, align 4
  br i1 %1756, label %1759, label %1761

1759:                                             ; preds = %1752
  %1760 = add i32 %1758, -1
  store i32 %1760, i32* %1757, align 4
  br label %1761

1761:                                             ; preds = %1759, %1752
  %1762 = phi i32 [ %1760, %1759 ], [ %1758, %1752 ]
  %1763 = icmp eq i32 %1762, 0
  br i1 %1763, label %1764, label %1765

1764:                                             ; preds = %1761
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1750) #16
  br label %1765

1765:                                             ; preds = %1764, %1761, %1749
  %1766 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %969, align 8
  %1767 = icmp eq %"class.WTF::StringImpl"* %1766, null
  br i1 %1767, label %1781, label %1768

1768:                                             ; preds = %1765
  %1769 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1766, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1770 = load atomic i32, i32* %1769 monotonic, align 4
  %1771 = and i32 %1770, 2
  %1772 = icmp eq i32 %1771, 0
  %1773 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1766, i64 0, i32 0
  %1774 = load i32, i32* %1773, align 4
  br i1 %1772, label %1775, label %1777

1775:                                             ; preds = %1768
  %1776 = add i32 %1774, -1
  store i32 %1776, i32* %1773, align 4
  br label %1777

1777:                                             ; preds = %1775, %1768
  %1778 = phi i32 [ %1776, %1775 ], [ %1774, %1768 ]
  %1779 = icmp eq i32 %1778, 0
  br i1 %1779, label %1780, label %1781

1780:                                             ; preds = %1777
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1766) #16
  br label %1781

1781:                                             ; preds = %1765, %1777, %1780
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %968) #16
  br label %1782

1782:                                             ; preds = %966, %963, %950, %1781
  %1783 = bitcast %"class.blink::CSSStyleDeclaration"** %48 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %1783) #16
  store %"class.blink::CSSStyleDeclaration"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleDeclaration"*), %"class.blink::CSSStyleDeclaration"** %48, align 8
  call void @_ZN5blink17InspectorCSSAgent12SetStyleTextEPNS_23InspectorStyleSheetBaseERKNS_11SourceRangeERKN3WTF6StringERPNS_19CSSStyleDeclarationE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %1, %"class.blink::InspectorStyleSheetBase"* %166, %"class.blink::SourceRange"* nonnull dereferenceable(8) %32, %"class.WTF::String"* nonnull dereferenceable(8) %34, %"class.blink::CSSStyleDeclaration"** nonnull dereferenceable(8) %48)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %1783) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %402) #16
  %1784 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %398, align 8
  %1785 = icmp eq %"class.WTF::StringImpl"* %1784, null
  br i1 %1785, label %1799, label %1786

1786:                                             ; preds = %1782
  %1787 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1784, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1788 = load atomic i32, i32* %1787 monotonic, align 4
  %1789 = and i32 %1788, 2
  %1790 = icmp eq i32 %1789, 0
  %1791 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1784, i64 0, i32 0
  %1792 = load i32, i32* %1791, align 4
  br i1 %1790, label %1793, label %1795

1793:                                             ; preds = %1786
  %1794 = add i32 %1792, -1
  store i32 %1794, i32* %1791, align 4
  br label %1795

1795:                                             ; preds = %1793, %1786
  %1796 = phi i32 [ %1794, %1793 ], [ %1792, %1786 ]
  %1797 = icmp eq i32 %1796, 0
  br i1 %1797, label %1798, label %1799

1798:                                             ; preds = %1795
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1784) #16
  br label %1799

1799:                                             ; preds = %1782, %1795, %1798
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %397) #16
  %1800 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %391, align 8
  %1801 = icmp eq %"class.WTF::StringImpl"* %1800, null
  br i1 %1801, label %1815, label %1802

1802:                                             ; preds = %1799
  %1803 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1800, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1804 = load atomic i32, i32* %1803 monotonic, align 4
  %1805 = and i32 %1804, 2
  %1806 = icmp eq i32 %1805, 0
  %1807 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1800, i64 0, i32 0
  %1808 = load i32, i32* %1807, align 4
  br i1 %1806, label %1809, label %1811

1809:                                             ; preds = %1802
  %1810 = add i32 %1808, -1
  store i32 %1810, i32* %1807, align 4
  br label %1811

1811:                                             ; preds = %1809, %1802
  %1812 = phi i32 [ %1810, %1809 ], [ %1808, %1802 ]
  %1813 = icmp eq i32 %1812, 0
  br i1 %1813, label %1814, label %1815

1814:                                             ; preds = %1811
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1800) #16
  br label %1815

1815:                                             ; preds = %1799, %1811, %1814
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %390) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %384) #16
  %1816 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %234, align 8
  %1817 = icmp eq %"class.WTF::StringImpl"* %1816, null
  br i1 %1817, label %1831, label %1818

1818:                                             ; preds = %1815
  %1819 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1816, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1820 = load atomic i32, i32* %1819 monotonic, align 4
  %1821 = and i32 %1820, 2
  %1822 = icmp eq i32 %1821, 0
  %1823 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1816, i64 0, i32 0
  %1824 = load i32, i32* %1823, align 4
  br i1 %1822, label %1825, label %1827

1825:                                             ; preds = %1818
  %1826 = add i32 %1824, -1
  store i32 %1826, i32* %1823, align 4
  br label %1827

1827:                                             ; preds = %1825, %1818
  %1828 = phi i32 [ %1826, %1825 ], [ %1824, %1818 ]
  %1829 = icmp eq i32 %1828, 0
  br i1 %1829, label %1830, label %1831

1830:                                             ; preds = %1827
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1816) #16
  br label %1831

1831:                                             ; preds = %1815, %1827, %1830
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %233) #16
  %1832 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %195, align 8
  %1833 = icmp eq %"class.WTF::StringImpl"* %1832, null
  br i1 %1833, label %1847, label %1834

1834:                                             ; preds = %1831
  %1835 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1832, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1836 = load atomic i32, i32* %1835 monotonic, align 4
  %1837 = and i32 %1836, 2
  %1838 = icmp eq i32 %1837, 0
  %1839 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1832, i64 0, i32 0
  %1840 = load i32, i32* %1839, align 4
  br i1 %1838, label %1841, label %1843

1841:                                             ; preds = %1834
  %1842 = add i32 %1840, -1
  store i32 %1842, i32* %1839, align 4
  br label %1843

1843:                                             ; preds = %1841, %1834
  %1844 = phi i32 [ %1842, %1841 ], [ %1840, %1834 ]
  %1845 = icmp eq i32 %1844, 0
  br i1 %1845, label %1846, label %1847

1846:                                             ; preds = %1843
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1832) #16
  br label %1847

1847:                                             ; preds = %1831, %1843, %1846
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %194) #16
  %1848 = load i32, i32* %187, align 4
  %1849 = icmp eq i32 %1848, 0
  br i1 %1849, label %1851, label %1850, !prof !3

1850:                                             ; preds = %1847
  store i32 0, i32* %187, align 4
  br label %1851

1851:                                             ; preds = %1850, %1847
  %1852 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %27, i64 0, i32 0, i32 0, i32 0
  %1853 = load %"class.blink::StylePropertyShorthand"*, %"class.blink::StylePropertyShorthand"** %1852, align 8
  %1854 = bitcast i8* %184 to %"class.blink::StylePropertyShorthand"*
  %1855 = icmp eq %"class.blink::StylePropertyShorthand"* %1853, %1854
  br i1 %1855, label %1858, label %1856, !prof !2

1856:                                             ; preds = %1851
  %1857 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %27, i64 0, i32 0
  call void @_ZN3WTF12VectorBufferIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.4668"* nonnull %1857, %"class.blink::StylePropertyShorthand"* %1853) #16
  br label %1858

1858:                                             ; preds = %1851, %1856
  call void @llvm.lifetime.end.p0i8(i64 80, i8* nonnull %182) #16
  br label %1859

1859:                                             ; preds = %179, %169, %138, %128, %119, %112, %1858
  %1860 = load i8, i8* %104, align 8, !range !4
  %1861 = icmp eq i8 %1860, 0
  br i1 %1861, label %1880, label %1862

1862:                                             ; preds = %1859
  %1863 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %22, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1, i32 0, i32 0, i32 0
  %1864 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %1863, align 8
  %1865 = icmp eq %"class.WTF::StringImpl"* %1864, null
  br i1 %1865, label %1879, label %1866

1866:                                             ; preds = %1862
  %1867 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1864, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %1868 = load atomic i32, i32* %1867 monotonic, align 4
  %1869 = and i32 %1868, 2
  %1870 = icmp eq i32 %1869, 0
  %1871 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1864, i64 0, i32 0
  %1872 = load i32, i32* %1871, align 4
  br i1 %1870, label %1873, label %1875

1873:                                             ; preds = %1866
  %1874 = add i32 %1872, -1
  store i32 %1874, i32* %1871, align 4
  br label %1875

1875:                                             ; preds = %1873, %1866
  %1876 = phi i32 [ %1874, %1873 ], [ %1872, %1866 ]
  %1877 = icmp eq i32 %1876, 0
  br i1 %1877, label %1878, label %1879

1878:                                             ; preds = %1875
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1864) #16
  br label %1879

1879:                                             ; preds = %1878, %1875, %1862
  store i8 0, i8* %104, align 8
  br label %1880

1880:                                             ; preds = %1859, %1879
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %104) #16
  br label %1881

1881:                                             ; preds = %101, %91, %78, %71, %1880, %56
  %1882 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %19, i64 0, i32 1
  %1883 = bitcast %"class.std::__1::basic_string"* %1882 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %1884 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %1883, i64 0, i32 1, i32 0
  %1885 = load i8, i8* %1884, align 1
  %1886 = icmp slt i8 %1885, 0
  br i1 %1886, label %1887, label %1890

1887:                                             ; preds = %1881
  %1888 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1882, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %1889 = load i8*, i8** %1888, align 8
  call void @_ZdlPv(i8* %1889) #18
  br label %1890

1890:                                             ; preds = %1881, %1887
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %50) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %49) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink15CSSPropertyName4FromEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.absl::optional.4662"* noalias sret, %"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = tail call i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"* %1, %"class.WTF::String"* dereferenceable(8) %2) #16
  switch i32 %4, label %86 [
    i32 0, label %5
    i32 1, label %7
  ]

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  br label %91

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %61, label %11

11:                                               ; preds = %7
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 acquire, align 4
  %14 = and i32 %13, 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %34, label %16

16:                                               ; preds = %11
  %17 = load atomic i32, i32* %12 monotonic, align 4
  %18 = and i32 %17, 2
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %20, label %32

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %22 = load i32, i32* %21, align 4
  %23 = zext i32 %22 to i33
  %24 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %23, i33 1) #16
  %25 = extractvalue { i33, i1 } %24, 1
  %26 = extractvalue { i33, i1 } %24, 0
  %27 = icmp slt i33 %26, 0
  %28 = or i1 %25, %27
  br i1 %28, label %29, label %30, !prof !3

29:                                               ; preds = %20
  tail call void @llvm.trap() #16
  unreachable

30:                                               ; preds = %20
  %31 = trunc i33 %26 to i32
  store i32 %31, i32* %21, align 4
  br label %32

32:                                               ; preds = %16, %30
  %33 = ptrtoint %"class.WTF::StringImpl"* %9 to i64
  br label %38

34:                                               ; preds = %11
  %35 = tail call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %9) #16
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %61, label %38

38:                                               ; preds = %32, %34
  %39 = phi i64 [ %33, %32 ], [ %36, %34 ]
  %40 = phi %"class.WTF::StringImpl"* [ %9, %32 ], [ %35, %34 ]
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load atomic i32, i32* %41 monotonic, align 4
  %43 = and i32 %42, 2
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %67

45:                                               ; preds = %38
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  %48 = zext i32 %47 to i33
  %49 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %48, i33 1) #16
  %50 = extractvalue { i33, i1 } %49, 1
  %51 = extractvalue { i33, i1 } %49, 0
  %52 = icmp slt i33 %51, 0
  %53 = or i1 %50, %52
  br i1 %53, label %54, label %55, !prof !3

54:                                               ; preds = %45
  tail call void @llvm.trap() #16
  unreachable

55:                                               ; preds = %45
  %56 = trunc i33 %51 to i32
  store i32 %56, i32* %46, align 4
  %57 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %57, align 8, !alias.scope !70
  %58 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %58, align 8, !alias.scope !70
  %59 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %60 = bitcast %"class.WTF::AtomicString"* %59 to i64*
  store i64 %39, i64* %60, align 8, !alias.scope !70
  br label %74

61:                                               ; preds = %34, %7
  %62 = phi i64 [ %36, %34 ], [ 0, %7 ]
  %63 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %63, align 8, !alias.scope !70
  %64 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %64, align 8, !alias.scope !70
  %65 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %66 = bitcast %"class.WTF::AtomicString"* %65 to i64*
  store i64 %62, i64* %66, align 8, !alias.scope !70
  br label %91

67:                                               ; preds = %38
  %68 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %68, align 8, !alias.scope !70
  %69 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 1, i32* %69, align 8, !alias.scope !70
  %70 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %71 = bitcast %"class.WTF::AtomicString"* %70 to i64*
  store i64 %39, i64* %71, align 8, !alias.scope !70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br label %74

74:                                               ; preds = %55, %67
  %75 = phi i32 [ %56, %55 ], [ %73, %67 ]
  %76 = load atomic i32, i32* %41 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %82

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %81 = add i32 %75, -1
  store i32 %81, i32* %80, align 4
  br label %82

82:                                               ; preds = %79, %74
  %83 = phi i32 [ %81, %79 ], [ %75, %74 ]
  %84 = icmp eq i32 %83, 0
  br i1 %84, label %85, label %91

85:                                               ; preds = %82
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #16
  br label %91

86:                                               ; preds = %3
  %87 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store i8 1, i8* %87, align 8, !alias.scope !73
  %88 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store i32 %4, i32* %88, align 8, !alias.scope !73
  %89 = getelementptr inbounds %"class.absl::optional.4662", %"class.absl::optional.4662"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 1
  %90 = bitcast %"class.WTF::AtomicString"* %89 to i64*
  store i64 0, i64* %90, align 8, !alias.scope !73
  br label %91

91:                                               ; preds = %85, %82, %61, %86, %5
  ret void
}

declare %"class.blink::CSSRuleSourceData"* @_ZN5blink33InspectorStyleSheetForInlineStyle14RuleSourceDataEv(%"class.blink::InspectorStyleSheetForInlineStyle"*) local_unnamed_addr #1

declare void @_ZN5blink32getMatchingShorthandsForLonghandENS_13CSSPropertyIDEPN3WTF6VectorINS_22StylePropertyShorthandELj4ENS1_18PartitionAllocatorEEE(i32, %"class.WTF::Vector.4667"*) local_unnamed_addr #1

declare void @_ZN5blink21CSSPropertySourceDataC1ERKS0_(%"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"* dereferenceable(32)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

declare i32 @_ZNK5blink11SourceRange6lengthEv(%"class.blink::SourceRange"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_12StringAppendIPKcNS_6StringEEES3_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_(%"class.WTF::StringAppend.4673"* noalias sret, %"class.WTF::StringAppend.4674"* dereferenceable(24), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.WTF::StringAppend.4674", align 8
  %5 = bitcast %"class.WTF::StringAppend.4674"* %1 to i64*
  %6 = load i64, i64* %5, align 8
  %7 = bitcast %"class.WTF::StringAppend.4674"* %4 to i64*
  store i64 %6, i64* %7, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %4, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %10, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %11, label %29, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %29

17:                                               ; preds = %12
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  %20 = zext i32 %19 to i33
  %21 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %20, i33 1) #16
  %22 = extractvalue { i33, i1 } %21, 1
  %23 = extractvalue { i33, i1 } %21, 0
  %24 = icmp slt i33 %23, 0
  %25 = or i1 %22, %24
  br i1 %25, label %26, label %27, !prof !3

26:                                               ; preds = %17
  tail call void @llvm.trap() #16
  unreachable

27:                                               ; preds = %17
  %28 = trunc i33 %23 to i32
  store i32 %28, i32* %18, align 4
  br label %29

29:                                               ; preds = %3, %12, %27
  %30 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %4, i64 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %1, i64 0, i32 1
  %32 = bitcast i8** %31 to i64*
  %33 = load i64, i64* %32, align 8
  %34 = bitcast i8** %30 to i64*
  store i64 %33, i64* %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %53, label %36

36:                                               ; preds = %29
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  br i1 %40, label %41, label %54

41:                                               ; preds = %36
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %43 = load i32, i32* %42, align 4
  %44 = zext i32 %43 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #16
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %41
  tail call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %41
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %42, align 4
  br label %54

53:                                               ; preds = %29
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.4673"* %0, %"class.WTF::StringAppend.4674"* nonnull byval(%"class.WTF::StringAppend.4674") align 8 %4, %"class.WTF::StringImpl"* null)
  br label %66

54:                                               ; preds = %36, %51
  tail call void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.4673"* %0, %"class.WTF::StringAppend.4674"* nonnull byval(%"class.WTF::StringAppend.4674") align 8 %4, %"class.WTF::StringImpl"* nonnull %2)
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %59 = load i32, i32* %58, align 4
  br i1 %57, label %60, label %62

60:                                               ; preds = %54
  %61 = add i32 %59, -1
  store i32 %61, i32* %58, align 4
  br label %62

62:                                               ; preds = %60, %54
  %63 = phi i32 [ %61, %60 ], [ %59, %54 ]
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %66

65:                                               ; preds = %62
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #16
  br label %66

66:                                               ; preds = %53, %62, %65
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EcvS3_Ev(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %8 = alloca i8*, align 8
  %9 = alloca i16*, align 8
  %10 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.5127"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #16
  %13 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %7, i8* %13) #16
  %14 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %14, i8 -86, i64 16, i1 false) #16
  %16 = load i8*, i8** %15, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %16) #16
  %17 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %18 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %17, align 8
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %20 = bitcast %"class.WTF::StringTypeAdapter.5127"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false) #16
  %22 = load i8*, i8** %21, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %3, i8* %22) #16
  %23 = bitcast %"class.WTF::StringTypeAdapter.5127"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 -86, i64 16, i1 false) #16
  %25 = load i8*, i8** %24, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %2, i8* %25) #16
  %26 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %27, null
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %30 = select i1 %28, %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"* %27
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %30, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 1
  %34 = icmp eq i32 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %23) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %20) #16
  br i1 %34, label %35, label %36

35:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  br label %84

36:                                               ; preds = %1
  %37 = icmp eq %"class.WTF::StringImpl"* %18, null
  %38 = select i1 %37, %"class.WTF::StringImpl"* %19, %"class.WTF::StringImpl"* %18
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %38, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 1
  %42 = icmp eq i32 %41, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  br i1 %42, label %84, label %43

43:                                               ; preds = %36
  %44 = bitcast i8** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %8, align 8
  %45 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %46 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %45, i8** nonnull dereferenceable(8) %8) #16
  %47 = load i8*, i8** %8, align 8
  %48 = bitcast %"class.WTF::StringTypeAdapter.5127"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #16
  %49 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %6, i8* %49) #16
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.4672"* %10, i8* %47) #16
  %50 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.4672"* %10) #16
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %47, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %6, i8* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #16
  %53 = icmp eq %"class.WTF::StringImpl"* %46, null
  br i1 %53, label %125, label %54

54:                                               ; preds = %43
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load atomic i32, i32* %55 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %71

61:                                               ; preds = %54
  %62 = zext i32 %60 to i33
  %63 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %62, i33 1) #16
  %64 = extractvalue { i33, i1 } %63, 1
  %65 = extractvalue { i33, i1 } %63, 0
  %66 = icmp slt i33 %65, 0
  %67 = or i1 %64, %66
  br i1 %67, label %68, label %69, !prof !3

68:                                               ; preds = %61
  call void @llvm.trap() #16
  unreachable

69:                                               ; preds = %61
  %70 = trunc i33 %65 to i32
  store i32 %70, i32* %59, align 4
  br label %71

71:                                               ; preds = %54, %69
  %72 = phi i32 [ %70, %69 ], [ %60, %54 ]
  %73 = ptrtoint %"class.WTF::StringImpl"* %46 to i64
  %74 = load atomic i32, i32* %55 monotonic, align 4
  %75 = and i32 %74, 2
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %77, label %80

77:                                               ; preds = %71
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %46, i64 0, i32 0
  %79 = add i32 %72, -1
  store i32 %79, i32* %78, align 4
  br label %80

80:                                               ; preds = %77, %71
  %81 = phi i32 [ %79, %77 ], [ %72, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %125

83:                                               ; preds = %80
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #16
  br label %125

84:                                               ; preds = %36, %35
  %85 = bitcast i16** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %85) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %9, align 8
  %86 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"* %0)
  %87 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %86, i16** nonnull dereferenceable(8) %9) #16
  %88 = load i16*, i16** %9, align 8
  %89 = bitcast %"class.WTF::StringTypeAdapter.5127"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %89) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %89, i8 -86, i64 16, i1 false) #16
  %90 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i8* %90) #16
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.4672"* %10, i16* %88) #16
  %91 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.4672"* %10) #16
  %92 = zext i32 %91 to i64
  %93 = getelementptr inbounds i16, i16* %88, i64 %92
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i16* %93) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %89) #16
  %94 = icmp eq %"class.WTF::StringImpl"* %87, null
  br i1 %94, label %125, label %95

95:                                               ; preds = %84
  %96 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %97 = load atomic i32, i32* %96 monotonic, align 4
  %98 = and i32 %97, 2
  %99 = icmp eq i32 %98, 0
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %101 = load i32, i32* %100, align 4
  br i1 %99, label %102, label %112

102:                                              ; preds = %95
  %103 = zext i32 %101 to i33
  %104 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %103, i33 1) #16
  %105 = extractvalue { i33, i1 } %104, 1
  %106 = extractvalue { i33, i1 } %104, 0
  %107 = icmp slt i33 %106, 0
  %108 = or i1 %105, %107
  br i1 %108, label %109, label %110, !prof !3

109:                                              ; preds = %102
  call void @llvm.trap() #16
  unreachable

110:                                              ; preds = %102
  %111 = trunc i33 %106 to i32
  store i32 %111, i32* %100, align 4
  br label %112

112:                                              ; preds = %95, %110
  %113 = phi i32 [ %111, %110 ], [ %101, %95 ]
  %114 = ptrtoint %"class.WTF::StringImpl"* %87 to i64
  %115 = load atomic i32, i32* %96 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %121

118:                                              ; preds = %112
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %87, i64 0, i32 0
  %120 = add i32 %113, -1
  store i32 %120, i32* %119, align 4
  br label %121

121:                                              ; preds = %118, %112
  %122 = phi i32 [ %120, %118 ], [ %113, %112 ]
  %123 = icmp eq i32 %122, 0
  br i1 %123, label %124, label %125

124:                                              ; preds = %121
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %87) #16
  br label %125

125:                                              ; preds = %124, %121, %84, %83, %80, %43
  %126 = phi i8* [ %44, %43 ], [ %44, %80 ], [ %44, %83 ], [ %85, %84 ], [ %85, %121 ], [ %85, %124 ]
  %127 = phi i64 [ 0, %43 ], [ %73, %80 ], [ %73, %83 ], [ 0, %84 ], [ %114, %121 ], [ %114, %124 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %126) #16
  %128 = inttoptr i64 %127 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %128
}

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String15StripWhiteSpaceEv(%"class.WTF::String"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendIPKcNS_6StringEEcvS3_Ev(%"class.WTF::StringAppend.4675"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %7 = alloca i8*, align 8
  %8 = alloca i16*, align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.5127"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringAppend.4675", %"class.WTF::StringAppend.4675"* %0, i64 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false) #16
  %11 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %6, i8* %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringAppend.4675", %"class.WTF::StringAppend.4675"* %0, i64 0, i32 1, i32 0, i32 0
  %13 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %14 = icmp eq %"class.WTF::StringImpl"* %13, null
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %16 = select i1 %14, %"class.WTF::StringImpl"* %15, %"class.WTF::StringImpl"* %13
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load atomic i32, i32* %17 monotonic, align 4
  %19 = and i32 %18, 1
  %20 = icmp eq i32 %19, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  br i1 %20, label %82, label %21

21:                                               ; preds = %1
  %22 = bitcast i8** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %23 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.4675"* %0)
  %24 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %23, i8** nonnull dereferenceable(8) %7) #16
  %25 = load i8*, i8** %7, align 8
  %26 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %26) #16
  %27 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %26, i8 -86, i64 16, i1 false) #16
  %28 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %28) #16
  %29 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %29) #16
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 1
  %31 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %29, i8 -86, i64 24, i1 false) #16
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %36

34:                                               ; preds = %21
  %35 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %42

36:                                               ; preds = %21
  %37 = ptrtoint %"class.WTF::StringImpl"* %32 to i64
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %39 = load i32, i32* %38, align 4
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %41 = bitcast %"class.WTF::StringImpl"* %40 to i8*
  br label %42

42:                                               ; preds = %34, %36
  %43 = phi i8* [ null, %34 ], [ %41, %36 ]
  %44 = phi i64 [ %35, %34 ], [ %37, %36 ]
  %45 = phi i32 [ 0, %34 ], [ %39, %36 ]
  %46 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i64*
  store i64 %44, i64* %46, align 8
  store i8* %43, i8** %30, align 8
  store i32 %45, i32* %31, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %25) #16
  %47 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0
  %48 = load i32, i32* %27, align 8
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds i8, i8* %25, i64 %49
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"* nonnull %47, i8* %50) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %29) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %26) #16
  %51 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %51, label %143, label %52

52:                                               ; preds = %42
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %54 = load atomic i32, i32* %53 monotonic, align 4
  %55 = and i32 %54, 2
  %56 = icmp eq i32 %55, 0
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %58 = load i32, i32* %57, align 4
  br i1 %56, label %59, label %69

59:                                               ; preds = %52
  %60 = zext i32 %58 to i33
  %61 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %60, i33 1) #16
  %62 = extractvalue { i33, i1 } %61, 1
  %63 = extractvalue { i33, i1 } %61, 0
  %64 = icmp slt i33 %63, 0
  %65 = or i1 %62, %64
  br i1 %65, label %66, label %67, !prof !3

66:                                               ; preds = %59
  call void @llvm.trap() #16
  unreachable

67:                                               ; preds = %59
  %68 = trunc i33 %63 to i32
  store i32 %68, i32* %57, align 4
  br label %69

69:                                               ; preds = %52, %67
  %70 = phi i32 [ %68, %67 ], [ %58, %52 ]
  %71 = ptrtoint %"class.WTF::StringImpl"* %24 to i64
  %72 = load atomic i32, i32* %53 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %75, label %78

75:                                               ; preds = %69
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 0
  %77 = add i32 %70, -1
  store i32 %77, i32* %76, align 4
  br label %78

78:                                               ; preds = %75, %69
  %79 = phi i32 [ %77, %75 ], [ %70, %69 ]
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %143

81:                                               ; preds = %78
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %24) #16
  br label %143

82:                                               ; preds = %1
  %83 = bitcast i16** %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %83) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %8, align 8
  %84 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.4675"* %0)
  %85 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %84, i16** nonnull dereferenceable(8) %8) #16
  %86 = load i16*, i16** %8, align 8
  %87 = bitcast %"class.WTF::StringTypeAdapter.5127"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %87) #16
  %88 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %2, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %87, i8 -86, i64 16, i1 false) #16
  %89 = load i8*, i8** %10, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %2, i8* %89) #16
  %90 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %90) #16
  %91 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 1
  %92 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %90, i8 -86, i64 24, i1 false) #16
  %93 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %12, align 8
  %94 = icmp eq %"class.WTF::StringImpl"* %93, null
  br i1 %94, label %95, label %97

95:                                               ; preds = %82
  %96 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %103

97:                                               ; preds = %82
  %98 = ptrtoint %"class.WTF::StringImpl"* %93 to i64
  %99 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 0, i32 1
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %93, i64 1
  %102 = bitcast %"class.WTF::StringImpl"* %101 to i8*
  br label %103

103:                                              ; preds = %95, %97
  %104 = phi i8* [ null, %95 ], [ %102, %97 ]
  %105 = phi i64 [ %96, %95 ], [ %98, %97 ]
  %106 = phi i32 [ 0, %95 ], [ %100, %97 ]
  %107 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i64*
  store i64 %105, i64* %107, align 8
  store i8* %104, i8** %91, align 8
  store i32 %106, i32* %92, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %2, i16* %86) #16
  %108 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0
  %109 = load i32, i32* %88, align 8
  %110 = zext i32 %109 to i64
  %111 = getelementptr inbounds i16, i16* %86, i64 %110
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"* nonnull %108, i16* %111) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %90) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %87) #16
  %112 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %112, label %143, label %113

113:                                              ; preds = %103
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %130

120:                                              ; preds = %113
  %121 = zext i32 %119 to i33
  %122 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %121, i33 1) #16
  %123 = extractvalue { i33, i1 } %122, 1
  %124 = extractvalue { i33, i1 } %122, 0
  %125 = icmp slt i33 %124, 0
  %126 = or i1 %123, %125
  br i1 %126, label %127, label %128, !prof !3

127:                                              ; preds = %120
  call void @llvm.trap() #16
  unreachable

128:                                              ; preds = %120
  %129 = trunc i33 %124 to i32
  store i32 %129, i32* %118, align 4
  br label %130

130:                                              ; preds = %113, %128
  %131 = phi i32 [ %129, %128 ], [ %119, %113 ]
  %132 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %133 = load atomic i32, i32* %114 monotonic, align 4
  %134 = and i32 %133, 2
  %135 = icmp eq i32 %134, 0
  br i1 %135, label %136, label %139

136:                                              ; preds = %130
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %138 = add i32 %131, -1
  store i32 %138, i32* %137, align 4
  br label %139

139:                                              ; preds = %136, %130
  %140 = phi i32 [ %138, %136 ], [ %131, %130 ]
  %141 = icmp eq i32 %140, 0
  br i1 %141, label %142, label %143

142:                                              ; preds = %139
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #16
  br label %143

143:                                              ; preds = %142, %139, %103, %81, %78, %42
  %144 = phi i8* [ %22, %42 ], [ %22, %78 ], [ %22, %81 ], [ %83, %103 ], [ %83, %139 ], [ %83, %142 ]
  %145 = phi i64 [ 0, %42 ], [ %71, %78 ], [ %71, %81 ], [ 0, %103 ], [ %132, %139 ], [ %132, %142 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %144) #16
  %146 = inttoptr i64 %145 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %146
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN3WTFplINS_6StringEEENS_12StringAppendIS1_T_EERKS1_S3_(%"class.WTF::String"* dereferenceable(8), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %3 = alloca %"class.WTF::StringAppend.4676", align 8
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %0, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %2, %7, %22
  %25 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %25, label %43, label %26

26:                                               ; preds = %24
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  br i1 %30, label %31, label %44

31:                                               ; preds = %26
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  %34 = zext i32 %33 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #16
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %31
  tail call void @llvm.trap() #16
  unreachable

41:                                               ; preds = %31
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %32, align 4
  br label %44

43:                                               ; preds = %24
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.4676"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* null)
  br label %56

44:                                               ; preds = %26, %41
  call void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.4676"* nonnull %3, %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"* nonnull %1)
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %49 = load i32, i32* %48, align 4
  br i1 %47, label %50, label %52

50:                                               ; preds = %44
  %51 = add i32 %49, -1
  store i32 %51, i32* %48, align 4
  br label %52

52:                                               ; preds = %50, %44
  %53 = phi i32 [ %51, %50 ], [ %49, %44 ]
  %54 = icmp eq i32 %53, 0
  br i1 %54, label %55, label %56

55:                                               ; preds = %52
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #16
  br label %56

56:                                               ; preds = %43, %52, %55
  %57 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %3, i64 0, i32 0, i32 0, i32 0
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %57, align 8
  %59 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } undef, %"class.WTF::StringImpl"* %58, 0
  %60 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %3, i64 0, i32 1, i32 0, i32 0
  %61 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %60, align 8
  %62 = insertvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %59, %"class.WTF::StringImpl"* %61, 1
  ret { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %62
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS_6StringES1_EcvS1_Ev(%"class.WTF::StringAppend.4676"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %6 = alloca i8*, align 8
  %7 = alloca i16*, align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %12 = select i1 %10, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %9
  %13 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %16 = load atomic i32, i32* %15 monotonic, align 4
  %17 = and i32 %16, 1
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %103, label %19

19:                                               ; preds = %1
  %20 = icmp eq %"class.WTF::StringImpl"* %14, null
  %21 = select i1 %20, %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"* %14
  %22 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %23 = load atomic i32, i32* %22 monotonic, align 4
  %24 = and i32 %23, 1
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %103, label %26

26:                                               ; preds = %19
  %27 = bitcast i8** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %28 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.4676"* %0)
  %29 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %28, i8** nonnull dereferenceable(8) %6) #16
  %30 = load i8*, i8** %6, align 8
  %31 = bitcast %"class.WTF::StringTypeAdapter.5129"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0, i32 0, i32 1
  %33 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false) #16
  %34 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %34, null
  br i1 %35, label %36, label %38

36:                                               ; preds = %26
  %37 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %44

38:                                               ; preds = %26
  %39 = ptrtoint %"class.WTF::StringImpl"* %34 to i64
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %34, i64 1
  %43 = bitcast %"class.WTF::StringImpl"* %42 to i8*
  br label %44

44:                                               ; preds = %38, %36
  %45 = phi i8* [ null, %36 ], [ %43, %38 ]
  %46 = phi i64 [ %37, %36 ], [ %39, %38 ]
  %47 = phi i32 [ 0, %36 ], [ %41, %38 ]
  %48 = bitcast %"class.WTF::StringTypeAdapter.5129"* %4 to i64*
  store i64 %46, i64* %48, align 8
  store i8* %45, i8** %32, align 8
  store i32 %47, i32* %33, align 8
  %49 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %49) #16
  %50 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 1
  %51 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %49, i8 -86, i64 24, i1 false) #16
  %52 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %53 = icmp eq %"class.WTF::StringImpl"* %52, null
  br i1 %53, label %54, label %56

54:                                               ; preds = %44
  %55 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %62

56:                                               ; preds = %44
  %57 = ptrtoint %"class.WTF::StringImpl"* %52 to i64
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 0, i32 1
  %59 = load i32, i32* %58, align 4
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %52, i64 1
  %61 = bitcast %"class.WTF::StringImpl"* %60 to i8*
  br label %62

62:                                               ; preds = %54, %56
  %63 = phi i8* [ null, %54 ], [ %61, %56 ]
  %64 = phi i64 [ %55, %54 ], [ %57, %56 ]
  %65 = phi i32 [ 0, %54 ], [ %59, %56 ]
  %66 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i64*
  store i64 %64, i64* %66, align 8
  store i8* %63, i8** %50, align 8
  store i32 %65, i32* %51, align 8
  %67 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"* nonnull %67, i8* %30) #16
  %68 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0
  %69 = load i32, i32* %33, align 8
  %70 = zext i32 %69 to i64
  %71 = getelementptr inbounds i8, i8* %30, i64 %70
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"* nonnull %68, i8* %71) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %49) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %31) #16
  %72 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %72, label %180, label %73

73:                                               ; preds = %62
  %74 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %75 = load atomic i32, i32* %74 monotonic, align 4
  %76 = and i32 %75, 2
  %77 = icmp eq i32 %76, 0
  %78 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %79 = load i32, i32* %78, align 4
  br i1 %77, label %80, label %90

80:                                               ; preds = %73
  %81 = zext i32 %79 to i33
  %82 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %81, i33 1) #16
  %83 = extractvalue { i33, i1 } %82, 1
  %84 = extractvalue { i33, i1 } %82, 0
  %85 = icmp slt i33 %84, 0
  %86 = or i1 %83, %85
  br i1 %86, label %87, label %88, !prof !3

87:                                               ; preds = %80
  call void @llvm.trap() #16
  unreachable

88:                                               ; preds = %80
  %89 = trunc i33 %84 to i32
  store i32 %89, i32* %78, align 4
  br label %90

90:                                               ; preds = %73, %88
  %91 = phi i32 [ %89, %88 ], [ %79, %73 ]
  %92 = ptrtoint %"class.WTF::StringImpl"* %29 to i64
  %93 = load atomic i32, i32* %74 monotonic, align 4
  %94 = and i32 %93, 2
  %95 = icmp eq i32 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %90
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %98 = add i32 %91, -1
  store i32 %98, i32* %97, align 4
  br label %99

99:                                               ; preds = %96, %90
  %100 = phi i32 [ %98, %96 ], [ %91, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %180

102:                                              ; preds = %99
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %29) #16
  br label %180

103:                                              ; preds = %19, %1
  %104 = bitcast i16** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %7, align 8
  %105 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.4676"* %0)
  %106 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %105, i16** nonnull dereferenceable(8) %7) #16
  %107 = load i16*, i16** %7, align 8
  %108 = bitcast %"class.WTF::StringTypeAdapter.5129"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %108) #16
  %109 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %2, i64 0, i32 0, i32 0, i32 1
  %110 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %2, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %108, i8 -86, i64 24, i1 false) #16
  %111 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %112 = icmp eq %"class.WTF::StringImpl"* %111, null
  br i1 %112, label %113, label %115

113:                                              ; preds = %103
  %114 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %121

115:                                              ; preds = %103
  %116 = ptrtoint %"class.WTF::StringImpl"* %111 to i64
  %117 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 0, i32 1
  %118 = load i32, i32* %117, align 4
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %111, i64 1
  %120 = bitcast %"class.WTF::StringImpl"* %119 to i8*
  br label %121

121:                                              ; preds = %115, %113
  %122 = phi i8* [ null, %113 ], [ %120, %115 ]
  %123 = phi i64 [ %114, %113 ], [ %116, %115 ]
  %124 = phi i32 [ 0, %113 ], [ %118, %115 ]
  %125 = bitcast %"class.WTF::StringTypeAdapter.5129"* %2 to i64*
  store i64 %123, i64* %125, align 8
  store i8* %122, i8** %109, align 8
  store i32 %124, i32* %110, align 8
  %126 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %126) #16
  %127 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 1
  %128 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %126, i8 -86, i64 24, i1 false) #16
  %129 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %130 = icmp eq %"class.WTF::StringImpl"* %129, null
  br i1 %130, label %131, label %133

131:                                              ; preds = %121
  %132 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %139

133:                                              ; preds = %121
  %134 = ptrtoint %"class.WTF::StringImpl"* %129 to i64
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 0, i32 1
  %136 = load i32, i32* %135, align 4
  %137 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %129, i64 1
  %138 = bitcast %"class.WTF::StringImpl"* %137 to i8*
  br label %139

139:                                              ; preds = %131, %133
  %140 = phi i8* [ null, %131 ], [ %138, %133 ]
  %141 = phi i64 [ %132, %131 ], [ %134, %133 ]
  %142 = phi i32 [ 0, %131 ], [ %136, %133 ]
  %143 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i64*
  store i64 %141, i64* %143, align 8
  store i8* %140, i8** %127, align 8
  store i32 %142, i32* %128, align 8
  %144 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %2, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"* nonnull %144, i16* %107) #16
  %145 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0
  %146 = load i32, i32* %110, align 8
  %147 = zext i32 %146 to i64
  %148 = getelementptr inbounds i16, i16* %107, i64 %147
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"* nonnull %145, i16* %148) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %126) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %108) #16
  %149 = icmp eq %"class.WTF::StringImpl"* %106, null
  br i1 %149, label %180, label %150

150:                                              ; preds = %139
  %151 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %152 = load atomic i32, i32* %151 monotonic, align 4
  %153 = and i32 %152, 2
  %154 = icmp eq i32 %153, 0
  %155 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %156 = load i32, i32* %155, align 4
  br i1 %154, label %157, label %167

157:                                              ; preds = %150
  %158 = zext i32 %156 to i33
  %159 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %158, i33 1) #16
  %160 = extractvalue { i33, i1 } %159, 1
  %161 = extractvalue { i33, i1 } %159, 0
  %162 = icmp slt i33 %161, 0
  %163 = or i1 %160, %162
  br i1 %163, label %164, label %165, !prof !3

164:                                              ; preds = %157
  call void @llvm.trap() #16
  unreachable

165:                                              ; preds = %157
  %166 = trunc i33 %161 to i32
  store i32 %166, i32* %155, align 4
  br label %167

167:                                              ; preds = %150, %165
  %168 = phi i32 [ %166, %165 ], [ %156, %150 ]
  %169 = ptrtoint %"class.WTF::StringImpl"* %106 to i64
  %170 = load atomic i32, i32* %151 monotonic, align 4
  %171 = and i32 %170, 2
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %176

173:                                              ; preds = %167
  %174 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %106, i64 0, i32 0
  %175 = add i32 %168, -1
  store i32 %175, i32* %174, align 4
  br label %176

176:                                              ; preds = %173, %167
  %177 = phi i32 [ %175, %173 ], [ %168, %167 ]
  %178 = icmp eq i32 %177, 0
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %106) #16
  br label %180

180:                                              ; preds = %179, %176, %139, %102, %99, %62
  %181 = phi i8* [ %27, %62 ], [ %27, %99 ], [ %27, %102 ], [ %104, %139 ], [ %104, %176 ], [ %104, %179 ]
  %182 = phi i64 [ 0, %62 ], [ %92, %99 ], [ %92, %102 ], [ 0, %139 ], [ %169, %176 ], [ %169, %179 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %181) #16
  %183 = inttoptr i64 %182 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %183
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTFplINS_6StringEPKcS1_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_(%"class.WTF::StringAppend.4679"* noalias sret, %"class.WTF::StringAppend.4680"* dereferenceable(16), %"class.WTF::StringImpl"*) local_unnamed_addr #0 comdat {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.4680", %"class.WTF::StringAppend.4680"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %3, %7, %22
  %25 = getelementptr inbounds %"class.WTF::StringAppend.4680", %"class.WTF::StringAppend.4680"* %1, i64 0, i32 1
  %26 = bitcast i8** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %28, label %46, label %29

29:                                               ; preds = %24
  %30 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %31 = load atomic i32, i32* %30 monotonic, align 4
  %32 = and i32 %31, 2
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %34, label %48

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i33
  %38 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %37, i33 1) #16
  %39 = extractvalue { i33, i1 } %38, 1
  %40 = extractvalue { i33, i1 } %38, 0
  %41 = icmp slt i33 %40, 0
  %42 = or i1 %39, %41
  br i1 %42, label %43, label %44, !prof !3

43:                                               ; preds = %34
  tail call void @llvm.trap() #16
  unreachable

44:                                               ; preds = %34
  %45 = trunc i33 %40 to i32
  store i32 %45, i32* %35, align 4
  br label %48

46:                                               ; preds = %24
  %47 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.4679"* %0, %"class.WTF::StringImpl"* %5, i8* %47, %"class.WTF::StringImpl"* null)
  br label %61

48:                                               ; preds = %29, %44
  %49 = inttoptr i64 %27 to i8*
  tail call void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.4679"* %0, %"class.WTF::StringImpl"* %5, i8* %49, %"class.WTF::StringImpl"* nonnull %2)
  %50 = load atomic i32, i32* %30 monotonic, align 4
  %51 = and i32 %50, 2
  %52 = icmp eq i32 %51, 0
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  br i1 %52, label %55, label %57

55:                                               ; preds = %48
  %56 = add i32 %54, -1
  store i32 %56, i32* %53, align 4
  br label %57

57:                                               ; preds = %55, %48
  %58 = phi i32 [ %56, %55 ], [ %54, %48 ]
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %60, label %61

60:                                               ; preds = %57
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #16
  br label %61

61:                                               ; preds = %46, %57, %60
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_EcvS1_Ev(%"class.WTF::StringAppend.4677"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %6 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %7 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %8 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %9 = alloca i8*, align 8
  %10 = alloca i16*, align 8
  %11 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.5127"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false) #16
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %8, i8* %14) #16
  %15 = bitcast %"class.WTF::StringTypeAdapter.5127"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 16, i1 false) #16
  %17 = load i8*, i8** %16, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %3, i8* %17) #16
  %18 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %21 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  %24 = select i1 %23, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %22
  %25 = bitcast %"class.WTF::StringTypeAdapter.5127"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %25, i8 -86, i64 16, i1 false) #16
  %27 = load i8*, i8** %26, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %2, i8* %27) #16
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %24, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 1
  %31 = icmp eq i32 %30, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %25) #16
  br i1 %31, label %32, label %33

32:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  br label %87

33:                                               ; preds = %1
  %34 = icmp eq %"class.WTF::StringImpl"* %19, null
  %35 = select i1 %34, %"class.WTF::StringImpl"* %20, %"class.WTF::StringImpl"* %19
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 1
  %39 = icmp eq i32 %38, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %12) #16
  br i1 %39, label %87, label %40

40:                                               ; preds = %33
  %41 = bitcast i8** %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %9, align 8
  %42 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_E6lengthEv(%"class.WTF::StringAppend.4677"* %0)
  %43 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %42, i8** nonnull dereferenceable(8) %9) #16
  %44 = load i8*, i8** %9, align 8
  %45 = bitcast %"class.WTF::StringTypeAdapter.5127"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %45) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %45, i8 -86, i64 16, i1 false) #16
  %46 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %7, i8* %46) #16
  %47 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0
  %48 = bitcast %"class.WTF::StringTypeAdapter.5127"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %48) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %48, i8 -86, i64 16, i1 false) #16
  %49 = load i8*, i8** %16, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %6, i8* %49) #16
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.4679"* %47, i8* %44) #16
  %50 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.4679"* %47) #16
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %44, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %6, i8* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %48) #16
  %53 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.4678"* %11) #16
  %54 = zext i32 %53 to i64
  %55 = getelementptr inbounds i8, i8* %44, i64 %54
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %7, i8* %55) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %45) #16
  %56 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %56, label %134, label %57

57:                                               ; preds = %40
  %58 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load atomic i32, i32* %58 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %74

64:                                               ; preds = %57
  %65 = zext i32 %63 to i33
  %66 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %65, i33 1) #16
  %67 = extractvalue { i33, i1 } %66, 1
  %68 = extractvalue { i33, i1 } %66, 0
  %69 = icmp slt i33 %68, 0
  %70 = or i1 %67, %69
  br i1 %70, label %71, label %72, !prof !3

71:                                               ; preds = %64
  call void @llvm.trap() #16
  unreachable

72:                                               ; preds = %64
  %73 = trunc i33 %68 to i32
  store i32 %73, i32* %62, align 4
  br label %74

74:                                               ; preds = %57, %72
  %75 = phi i32 [ %73, %72 ], [ %63, %57 ]
  %76 = ptrtoint %"class.WTF::StringImpl"* %43 to i64
  %77 = load atomic i32, i32* %58 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %83

80:                                               ; preds = %74
  %81 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %82 = add i32 %75, -1
  store i32 %82, i32* %81, align 4
  br label %83

83:                                               ; preds = %80, %74
  %84 = phi i32 [ %82, %80 ], [ %75, %74 ]
  %85 = icmp eq i32 %84, 0
  br i1 %85, label %86, label %134

86:                                               ; preds = %83
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #16
  br label %134

87:                                               ; preds = %33, %32
  %88 = bitcast i16** %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %88) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %10, align 8
  %89 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_E6lengthEv(%"class.WTF::StringAppend.4677"* %0)
  %90 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %89, i16** nonnull dereferenceable(8) %10) #16
  %91 = load i16*, i16** %10, align 8
  %92 = bitcast %"class.WTF::StringTypeAdapter.5127"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %92) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %92, i8 -86, i64 16, i1 false) #16
  %93 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i8* %93) #16
  %94 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0
  %95 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %95) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %95, i8 -86, i64 16, i1 false) #16
  %96 = load i8*, i8** %16, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %96) #16
  call void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.4679"* %94, i16* %91) #16
  %97 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.4679"* %94) #16
  %98 = zext i32 %97 to i64
  %99 = getelementptr inbounds i16, i16* %91, i64 %98
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i16* %99) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %95) #16
  %100 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.4678"* %11) #16
  %101 = zext i32 %100 to i64
  %102 = getelementptr inbounds i16, i16* %91, i64 %101
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i16* %102) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %92) #16
  %103 = icmp eq %"class.WTF::StringImpl"* %90, null
  br i1 %103, label %134, label %104

104:                                              ; preds = %87
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load atomic i32, i32* %105 monotonic, align 4
  %107 = and i32 %106, 2
  %108 = icmp eq i32 %107, 0
  %109 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %110 = load i32, i32* %109, align 4
  br i1 %108, label %111, label %121

111:                                              ; preds = %104
  %112 = zext i32 %110 to i33
  %113 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %112, i33 1) #16
  %114 = extractvalue { i33, i1 } %113, 1
  %115 = extractvalue { i33, i1 } %113, 0
  %116 = icmp slt i33 %115, 0
  %117 = or i1 %114, %116
  br i1 %117, label %118, label %119, !prof !3

118:                                              ; preds = %111
  call void @llvm.trap() #16
  unreachable

119:                                              ; preds = %111
  %120 = trunc i33 %115 to i32
  store i32 %120, i32* %109, align 4
  br label %121

121:                                              ; preds = %104, %119
  %122 = phi i32 [ %120, %119 ], [ %110, %104 ]
  %123 = ptrtoint %"class.WTF::StringImpl"* %90 to i64
  %124 = load atomic i32, i32* %105 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  br i1 %126, label %127, label %130

127:                                              ; preds = %121
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %90, i64 0, i32 0
  %129 = add i32 %122, -1
  store i32 %129, i32* %128, align 4
  br label %130

130:                                              ; preds = %127, %121
  %131 = phi i32 [ %129, %127 ], [ %122, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %90) #16
  br label %134

134:                                              ; preds = %133, %130, %87, %86, %83, %40
  %135 = phi i8* [ %41, %40 ], [ %41, %83 ], [ %41, %86 ], [ %88, %87 ], [ %88, %130 ], [ %88, %133 ]
  %136 = phi i64 [ 0, %40 ], [ %76, %83 ], [ %76, %86 ], [ 0, %87 ], [ %123, %130 ], [ %123, %133 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %135) #16
  %137 = inttoptr i64 %136 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %137
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent32setEffectivePropertyValueForNodeEiRKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i32, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 align 2 {
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %7 = bitcast i32* %6 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent32setEffectivePropertyValueForNodeEiRKN3WTF6StringES4_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %7, i32 %2, %"class.WTF::String"* dereferenceable(8) %3, %"class.WTF::String"* dereferenceable(8) %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent19getBackgroundColorsEiPN5crdtp6detail8PtrMaybeINSt3__16vectorIN3WTF6StringENS4_9allocatorIS7_EEEEEEPNS2_10ValueMaybeIS7_EESF_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly, i32, %"class.crdtp::detail::PtrMaybe.4681"* nocapture, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %7 = alloca %"class.blink::Element"*, align 8
  %8 = alloca %"class.crdtp::DispatchResponse", align 8
  %9 = alloca %"class.WTF::Vector.4682", align 8
  %10 = alloca %"class.WTF::String", align 8
  %11 = alloca %"class.WTF::String", align 8
  %12 = alloca float, align 4
  %13 = alloca %"class.WTF::String", align 8
  %14 = bitcast %"class.blink::Element"** %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  store %"class.blink::Element"* null, %"class.blink::Element"** %7, align 8
  %15 = bitcast %"class.crdtp::DispatchResponse"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %17 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %16, align 8
  call void @_ZN5blink17InspectorDOMAgent13AssertElementEiRPNS_7ElementE(%"class.crdtp::DispatchResponse"* nonnull sret %8, %"class.blink::InspectorDOMAgent"* %17, i32 %2, %"class.blink::Element"** nonnull dereferenceable(8) %7) #16
  %18 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 0
  %19 = load i32, i32* %18, align 8
  %20 = icmp eq i32 %19, 1
  br i1 %20, label %27, label %21

21:                                               ; preds = %6
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 0
  store i32 %19, i32* %22, align 8
  %23 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %0, i64 0, i32 1
  %24 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %25 = bitcast %"class.std::__1::basic_string"* %23 to i8*
  %26 = bitcast %"class.std::__1::basic_string"* %24 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %25, i8* align 8 %26, i64 24, i1 false) #16
  call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 24, i1 false) #16
  br label %219

27:                                               ; preds = %6
  %28 = bitcast %"class.WTF::Vector.4682"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %28) #16
  %29 = getelementptr inbounds %"class.WTF::Vector.4682", %"class.WTF::Vector.4682"* %9, i64 0, i32 0, i32 0, i32 0
  %30 = getelementptr inbounds %"class.WTF::Vector.4682", %"class.WTF::Vector.4682"* %9, i64 0, i32 0, i32 0, i32 2
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %28, i8 0, i64 16, i1 false) #16
  %31 = bitcast %"class.WTF::String"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  %32 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %10, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %32, align 8
  %33 = bitcast %"class.WTF::String"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %34, align 8
  %35 = bitcast float* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %35) #16
  store float 1.000000e+00, float* %12, align 4
  %36 = load %"class.blink::Element"*, %"class.blink::Element"** %7, align 8
  call void @_ZN5blink17InspectorCSSAgent19GetBackgroundColorsEPNS_7ElementEPN3WTF6VectorINS_5ColorELj0ENS3_18PartitionAllocatorEEEPNS3_6StringESA_Pf(%"class.blink::Element"* %36, %"class.WTF::Vector.4682"* nonnull %9, %"class.WTF::String"* nonnull %10, %"class.WTF::String"* nonnull %11, float* nonnull %12)
  %37 = load i32, i32* %30, align 4
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %125, label %39

39:                                               ; preds = %27
  %40 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %40, i8 0, i64 24, i1 false) #16
  %41 = ptrtoint i8* %40 to i64
  %42 = getelementptr inbounds %"class.crdtp::detail::PtrMaybe.4681", %"class.crdtp::detail::PtrMaybe.4681"* %3, i64 0, i32 0, i32 0, i32 0, i32 0
  %43 = load %"class.std::__1::vector.4530"*, %"class.std::__1::vector.4530"** %42, align 8
  %44 = bitcast %"class.crdtp::detail::PtrMaybe.4681"* %3 to i64*
  store i64 %41, i64* %44, align 8
  %45 = icmp eq %"class.std::__1::vector.4530"* %43, null
  br i1 %45, label %83, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %43, i64 0, i32 0, i32 0
  %48 = load %"class.WTF::String"*, %"class.WTF::String"** %47, align 8
  %49 = icmp eq %"class.WTF::String"* %48, null
  br i1 %49, label %81, label %50

50:                                               ; preds = %46
  %51 = bitcast %"class.WTF::String"* %48 to i8*
  %52 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %43, i64 0, i32 0, i32 1
  %53 = load %"class.WTF::String"*, %"class.WTF::String"** %52, align 8
  %54 = icmp eq %"class.WTF::String"* %53, %48
  br i1 %54, label %79, label %55

55:                                               ; preds = %50, %74
  %56 = phi %"class.WTF::String"* [ %57, %74 ], [ %53, %50 ]
  %57 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %56, i64 -1
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #16
  br label %74

74:                                               ; preds = %73, %70, %55
  %75 = icmp eq %"class.WTF::String"* %57, %48
  br i1 %75, label %76, label %55

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::vector.4530"* %43 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %50
  %80 = phi i8* [ %78, %76 ], [ %51, %50 ]
  store %"class.WTF::String"* %48, %"class.WTF::String"** %52, align 8
  call void @_ZdlPv(i8* %80) #18
  br label %81

81:                                               ; preds = %79, %46
  %82 = bitcast %"class.std::__1::vector.4530"* %43 to i8*
  call void @_ZdlPv(i8* %82) #18
  br label %83

83:                                               ; preds = %81, %39
  %84 = load %"class.blink::Color"*, %"class.blink::Color"** %29, align 8
  %85 = zext i32 %37 to i64
  %86 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %84, i64 %85
  %87 = bitcast %"class.WTF::String"* %13 to i8*
  %88 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %13, i64 0, i32 0, i32 0
  br label %89

89:                                               ; preds = %83, %122
  %90 = phi %"class.blink::Color"* [ %84, %83 ], [ %123, %122 ]
  %91 = load %"class.std::__1::vector.4530"*, %"class.std::__1::vector.4530"** %42, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %87) #16
  %92 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %90, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  %94 = call %"class.WTF::StringImpl"* @_ZN5blink8cssvalue8CSSColor28SerializeAsCSSComponentValueENS_5ColorE(i32 %93) #16
  store %"class.WTF::StringImpl"* %94, %"class.WTF::StringImpl"** %88, align 8
  %95 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %91, i64 0, i32 0, i32 1
  %96 = load %"class.WTF::String"*, %"class.WTF::String"** %95, align 8
  %97 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %91, i64 0, i32 0, i32 2, i32 0, i32 0
  %98 = load %"class.WTF::String"*, %"class.WTF::String"** %97, align 8
  %99 = icmp ult %"class.WTF::String"* %96, %98
  br i1 %99, label %100, label %106

100:                                              ; preds = %89
  %101 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %102 = bitcast %"class.WTF::String"* %96 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %88, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %96, i64 1
  %104 = ptrtoint %"class.WTF::String"* %103 to i64
  %105 = bitcast %"class.WTF::String"** %95 to i64*
  store i64 %104, i64* %105, align 8
  br label %122

106:                                              ; preds = %89
  call void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.4530"* %91, %"class.WTF::String"* nonnull dereferenceable(8) %13) #16
  %107 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  %108 = icmp eq %"class.WTF::StringImpl"* %107, null
  br i1 %108, label %122, label %109

109:                                              ; preds = %106
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %111 = load atomic i32, i32* %110 monotonic, align 4
  %112 = and i32 %111, 2
  %113 = icmp eq i32 %112, 0
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %107, i64 0, i32 0
  %115 = load i32, i32* %114, align 4
  br i1 %113, label %116, label %118

116:                                              ; preds = %109
  %117 = add i32 %115, -1
  store i32 %117, i32* %114, align 4
  br label %118

118:                                              ; preds = %116, %109
  %119 = phi i32 [ %117, %116 ], [ %115, %109 ]
  %120 = icmp eq i32 %119, 0
  br i1 %120, label %121, label %122

121:                                              ; preds = %118
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %107) #16
  br label %122

122:                                              ; preds = %100, %106, %118, %121
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %87) #16
  %123 = getelementptr inbounds %"class.blink::Color", %"class.blink::Color"* %90, i64 1
  %124 = icmp eq %"class.blink::Color"* %123, %86
  br i1 %124, label %125, label %89

125:                                              ; preds = %122, %27
  %126 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %127 = icmp eq %"class.WTF::StringImpl"* %126, null
  br i1 %127, label %150, label %128

128:                                              ; preds = %125
  %129 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 1
  %130 = load i32, i32* %129, align 4
  %131 = icmp eq i32 %130, 0
  br i1 %131, label %150, label %132

132:                                              ; preds = %128
  %133 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load atomic i32, i32* %133 monotonic, align 4
  %135 = and i32 %134, 2
  %136 = icmp eq i32 %135, 0
  br i1 %136, label %137, label %149

137:                                              ; preds = %132
  %138 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %139 = load i32, i32* %138, align 4
  %140 = zext i32 %139 to i33
  %141 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %140, i33 1) #16
  %142 = extractvalue { i33, i1 } %141, 1
  %143 = extractvalue { i33, i1 } %141, 0
  %144 = icmp slt i33 %143, 0
  %145 = or i1 %142, %144
  br i1 %145, label %146, label %147, !prof !3

146:                                              ; preds = %137
  call void @llvm.trap() #16
  unreachable

147:                                              ; preds = %137
  %148 = trunc i33 %143 to i32
  store i32 %148, i32* %138, align 4
  br label %149

149:                                              ; preds = %132, %147
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %4, %"class.WTF::StringImpl"* nonnull %126)
  br label %150

150:                                              ; preds = %125, %149, %128
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %152 = icmp eq %"class.WTF::StringImpl"* %151, null
  br i1 %152, label %175, label %153

153:                                              ; preds = %150
  %154 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 1
  %155 = load i32, i32* %154, align 4
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %176, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %159 = load atomic i32, i32* %158 monotonic, align 4
  %160 = and i32 %159, 2
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %174

162:                                              ; preds = %157
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %164 = load i32, i32* %163, align 4
  %165 = zext i32 %164 to i33
  %166 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %165, i33 1) #16
  %167 = extractvalue { i33, i1 } %166, 1
  %168 = extractvalue { i33, i1 } %166, 0
  %169 = icmp slt i33 %168, 0
  %170 = or i1 %167, %169
  br i1 %170, label %171, label %172, !prof !3

171:                                              ; preds = %162
  call void @llvm.trap() #16
  unreachable

172:                                              ; preds = %162
  %173 = trunc i33 %168 to i32
  store i32 %173, i32* %163, align 4
  br label %174

174:                                              ; preds = %157, %172
  call void @_ZN5crdtp6detail10ValueMaybeIN3WTF6StringEEaSES3_(%"class.crdtp::detail::ValueMaybe"* %5, %"class.WTF::StringImpl"* nonnull %151)
  br label %176

175:                                              ; preds = %150
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #16
  br label %189

176:                                              ; preds = %174, %153
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %35) #16
  %177 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %178 = load atomic i32, i32* %177 monotonic, align 4
  %179 = and i32 %178, 2
  %180 = icmp eq i32 %179, 0
  %181 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %151, i64 0, i32 0
  %182 = load i32, i32* %181, align 4
  br i1 %180, label %183, label %185

183:                                              ; preds = %176
  %184 = add i32 %182, -1
  store i32 %184, i32* %181, align 4
  br label %185

185:                                              ; preds = %183, %176
  %186 = phi i32 [ %184, %183 ], [ %182, %176 ]
  %187 = icmp eq i32 %186, 0
  br i1 %187, label %188, label %189

188:                                              ; preds = %185
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %151) #16
  br label %189

189:                                              ; preds = %175, %185, %188
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %33) #16
  br i1 %127, label %203, label %190

190:                                              ; preds = %189
  %191 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %192 = load atomic i32, i32* %191 monotonic, align 4
  %193 = and i32 %192, 2
  %194 = icmp eq i32 %193, 0
  %195 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %126, i64 0, i32 0
  %196 = load i32, i32* %195, align 4
  br i1 %194, label %197, label %199

197:                                              ; preds = %190
  %198 = add i32 %196, -1
  store i32 %198, i32* %195, align 4
  br label %199

199:                                              ; preds = %197, %190
  %200 = phi i32 [ %198, %197 ], [ %196, %190 ]
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %203

202:                                              ; preds = %199
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %126) #16
  br label %203

203:                                              ; preds = %189, %199, %202
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  %204 = load %"class.blink::Color"*, %"class.blink::Color"** %29, align 8
  %205 = icmp eq %"class.blink::Color"* %204, null
  %206 = bitcast %"class.blink::Color"* %204 to i8*
  br i1 %205, label %210, label %207, !prof !2

207:                                              ; preds = %203
  br i1 %38, label %209, label %208, !prof !3

208:                                              ; preds = %207
  store i32 0, i32* %30, align 4
  br label %209

209:                                              ; preds = %208, %207
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %206) #16
  store %"class.blink::Color"* null, %"class.blink::Color"** %29, align 8
  br label %210

210:                                              ; preds = %209, %203
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %28) #16
  %211 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1
  %212 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %216, label %219

216:                                              ; preds = %210
  %217 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %8, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %218 = load i8*, i8** %217, align 8
  call void @_ZdlPv(i8* %218) #18
  br label %219

219:                                              ; preds = %21, %210, %216
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent19GetBackgroundColorsEPNS_7ElementEPN3WTF6VectorINS_5ColorELj0ENS3_18PartitionAllocatorEEEPNS3_6StringESA_Pf(%"class.blink::Element"*, %"class.WTF::Vector.4682"* nocapture, %"class.WTF::String"* nocapture, %"class.WTF::String"* nocapture, float*) local_unnamed_addr #0 align 2 {
  %6 = alloca %"class.blink::InspectorContrast", align 8
  %7 = alloca %"class.WTF::Vector.4682", align 8
  %8 = bitcast %"class.blink::InspectorContrast"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 104, i8* nonnull %8) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 104, i1 false)
  %9 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  call void @_ZN5blink17InspectorContrastC1EPNS_8DocumentE(%"class.blink::InspectorContrast"* nonnull %6, %"class.blink::Document"* %12) #16
  %13 = bitcast %"class.WTF::Vector.4682"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #16
  call void @_ZN5blink17InspectorContrast19GetBackgroundColorsEPNS_7ElementEPf(%"class.WTF::Vector.4682"* nonnull sret %7, %"class.blink::InspectorContrast"* nonnull %6, %"class.blink::Element"* %0, float* %4) #16
  %14 = bitcast %"class.WTF::Vector.4682"* %7 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = bitcast %"class.WTF::Vector.4682"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  store atomic i64 %17, i64* %14 monotonic, align 8
  store atomic i64 %15, i64* %16 monotonic, align 8
  %18 = getelementptr inbounds %"class.WTF::Vector.4682", %"class.WTF::Vector.4682"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::Vector.4682", %"class.WTF::Vector.4682"* %7, i64 0, i32 0, i32 0, i32 1
  %20 = load i32, i32* %18, align 4
  %21 = load i32, i32* %19, align 8
  store i32 %21, i32* %18, align 4
  store i32 %20, i32* %19, align 8
  %22 = getelementptr inbounds %"class.WTF::Vector.4682", %"class.WTF::Vector.4682"* %1, i64 0, i32 0, i32 0, i32 2
  %23 = getelementptr inbounds %"class.WTF::Vector.4682", %"class.WTF::Vector.4682"* %7, i64 0, i32 0, i32 0, i32 2
  %24 = load i32, i32* %22, align 4
  %25 = load i32, i32* %23, align 4
  store i32 %25, i32* %22, align 4
  store i32 %24, i32* %23, align 4
  %26 = getelementptr inbounds %"class.WTF::Vector.4682", %"class.WTF::Vector.4682"* %7, i64 0, i32 0, i32 0, i32 0
  %27 = icmp eq i64 %17, 0
  %28 = inttoptr i64 %17 to i8*
  br i1 %27, label %33, label %29, !prof !2

29:                                               ; preds = %5
  %30 = icmp eq i32 %24, 0
  br i1 %30, label %32, label %31, !prof !3

31:                                               ; preds = %29
  store i32 0, i32* %23, align 4
  br label %32

32:                                               ; preds = %31, %29
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %28) #16
  store %"class.blink::Color"* null, %"class.blink::Color"** %26, align 8
  br label %33

33:                                               ; preds = %5, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #16
  %34 = call { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN5blink17InspectorContrast11GetTextInfoEPNS_7ElementE(%"class.blink::InspectorContrast"* nonnull %6, %"class.blink::Element"* %0) #16
  %35 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %34, 0
  %36 = extractvalue { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } %34, 1
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %33
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %55

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #16
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  call void @llvm.trap() #16
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %55

55:                                               ; preds = %53, %38, %33
  %56 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %57 = bitcast %"class.WTF::String"* %2 to i64*
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  store i64 %56, i64* %57, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %74, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load atomic i32, i32* %62 monotonic, align 4
  %64 = and i32 %63, 2
  %65 = icmp eq i32 %64, 0
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %59, i64 0, i32 0
  %67 = load i32, i32* %66, align 4
  br i1 %65, label %68, label %70

68:                                               ; preds = %61
  %69 = add i32 %67, -1
  store i32 %69, i32* %66, align 4
  br label %70

70:                                               ; preds = %68, %61
  %71 = phi i32 [ %69, %68 ], [ %67, %61 ]
  %72 = icmp eq i32 %71, 0
  br i1 %72, label %73, label %74

73:                                               ; preds = %70
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %59) #16
  br label %74

74:                                               ; preds = %55, %70, %73
  %75 = icmp eq %"class.WTF::StringImpl"* %36, null
  br i1 %75, label %93, label %76

76:                                               ; preds = %74
  %77 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %78 = load atomic i32, i32* %77 monotonic, align 4
  %79 = and i32 %78, 2
  %80 = icmp eq i32 %79, 0
  br i1 %80, label %81, label %93

81:                                               ; preds = %76
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %83 = load i32, i32* %82, align 4
  %84 = zext i32 %83 to i33
  %85 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %84, i33 1) #16
  %86 = extractvalue { i33, i1 } %85, 1
  %87 = extractvalue { i33, i1 } %85, 0
  %88 = icmp slt i33 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %91, !prof !3

90:                                               ; preds = %81
  call void @llvm.trap() #16
  unreachable

91:                                               ; preds = %81
  %92 = trunc i33 %87 to i32
  store i32 %92, i32* %82, align 4
  br label %93

93:                                               ; preds = %91, %76, %74
  %94 = ptrtoint %"class.WTF::StringImpl"* %36 to i64
  %95 = bitcast %"class.WTF::String"* %3 to i64*
  %96 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  store i64 %94, i64* %95, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %112, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  %104 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %105 = load i32, i32* %104, align 4
  br i1 %103, label %106, label %108

106:                                              ; preds = %99
  %107 = add i32 %105, -1
  store i32 %107, i32* %104, align 4
  br label %108

108:                                              ; preds = %106, %99
  %109 = phi i32 [ %107, %106 ], [ %105, %99 ]
  %110 = icmp eq i32 %109, 0
  br i1 %110, label %111, label %112

111:                                              ; preds = %108
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %97) #16
  br label %112

112:                                              ; preds = %93, %108, %111
  br i1 %75, label %126, label %113

113:                                              ; preds = %112
  %114 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %115 = load atomic i32, i32* %114 monotonic, align 4
  %116 = and i32 %115, 2
  %117 = icmp eq i32 %116, 0
  %118 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %36, i64 0, i32 0
  %119 = load i32, i32* %118, align 4
  br i1 %117, label %120, label %122

120:                                              ; preds = %113
  %121 = add i32 %119, -1
  store i32 %121, i32* %118, align 4
  br label %122

122:                                              ; preds = %120, %113
  %123 = phi i32 [ %121, %120 ], [ %119, %113 ]
  %124 = icmp eq i32 %123, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %122
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %36) #16
  br label %126

126:                                              ; preds = %125, %122, %112
  br i1 %37, label %140, label %127

127:                                              ; preds = %126
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %129 = load atomic i32, i32* %128 monotonic, align 4
  %130 = and i32 %129, 2
  %131 = icmp eq i32 %130, 0
  %132 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %133 = load i32, i32* %132, align 4
  br i1 %131, label %134, label %136

134:                                              ; preds = %127
  %135 = add i32 %133, -1
  store i32 %135, i32* %132, align 4
  br label %136

136:                                              ; preds = %134, %127
  %137 = phi i32 [ %135, %134 ], [ %133, %127 ]
  %138 = icmp eq i32 %137, 0
  br i1 %138, label %139, label %140

139:                                              ; preds = %136
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #16
  br label %140

140:                                              ; preds = %126, %136, %139
  %141 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %6, i64 0, i32 0, i32 2, i32 0, i32 0
  %142 = load %"struct.cc::RTree<blink::Member<blink::Node> >::Node"*, %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %141, align 8
  %143 = icmp eq %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %142, null
  br i1 %143, label %149, label %144

144:                                              ; preds = %140
  %145 = ptrtoint %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %142 to i64
  %146 = getelementptr inbounds %"class.blink::InspectorContrast", %"class.blink::InspectorContrast"* %6, i64 0, i32 0, i32 2, i32 0, i32 1
  %147 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"** %146 to i64*
  store i64 %145, i64* %147, align 8
  %148 = bitcast %"struct.cc::RTree<blink::Member<blink::Node> >::Node"* %142 to i8*
  call void @_ZdlPv(i8* %148) #18
  br label %149

149:                                              ; preds = %140, %144
  call void @llvm.lifetime.end.p0i8(i64 104, i8* nonnull %8) #16
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink8cssvalue8CSSColor28SerializeAsCSSComponentValueENS_5ColorE(i32) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent19getBackgroundColorsEiPN5crdtp6detail8PtrMaybeINSt3__16vectorIN3WTF6StringENS4_9allocatorIS7_EEEEEEPNS2_10ValueMaybeIS7_EESF_(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"* nocapture readonly, i32, %"class.crdtp::detail::PtrMaybe.4681"* nocapture, %"class.crdtp::detail::ValueMaybe"*, %"class.crdtp::detail::ValueMaybe"*) unnamed_addr #0 align 2 {
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %8 = bitcast i32* %7 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent19getBackgroundColorsEiPN5crdtp6detail8PtrMaybeINSt3__16vectorIN3WTF6StringENS4_9allocatorIS7_EEEEEEPNS2_10ValueMaybeIS7_EESF_(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %8, i32 %2, %"class.crdtp::detail::PtrMaybe.4681"* %3, %"class.crdtp::detail::ValueMaybe"* %4, %"class.crdtp::detail::ValueMaybe"* %5)
  ret void
}

declare void @_ZN5blink17InspectorContrastC1EPNS_8DocumentE(%"class.blink::InspectorContrast"*, %"class.blink::Document"*) unnamed_addr #1

declare void @_ZN5blink17InspectorContrast19GetBackgroundColorsEPNS_7ElementEPf(%"class.WTF::Vector.4682"* sret, %"class.blink::InspectorContrast"*, %"class.blink::Element"*, float*) local_unnamed_addr #1

declare { %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"* } @_ZN5blink17InspectorContrast11GetTextInfoEPNS_7ElementE(%"class.blink::InspectorContrast"*, %"class.blink::Element"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent22WillChangeStyleElementEPNS_7ElementE(%"class.blink::InspectorCSSAgent"* nocapture readonly, %"class.blink::Element"*) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 7, i32 0, i32 0
  %4 = load %"class.blink::InspectorResourceContainer"*, %"class.blink::InspectorResourceContainer"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %6 = tail call i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"* %5) #16
  tail call void @_ZN5blink26InspectorResourceContainer24EraseStyleElementContentEi(%"class.blink::InspectorResourceContainer"* %4, i32 %6) #16
  ret void
}

declare void @_ZN5blink26InspectorResourceContainer24EraseStyleElementContentEi(%"class.blink::InspectorResourceContainer"*, i32) local_unnamed_addr #1

declare i32 @_ZN5blink10DOMNodeIds9IdForNodeEPNS_4NodeE(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent22startRuleUsageTrackingEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.blink::WebVector.3688", align 8
  %4 = alloca %"class.blink::HeapVector.4001", align 8
  %5 = alloca %"class.blink::StyleChangeReasonForTracing", align 8
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 2
  %8 = load i8, i8* %7, align 1, !range !4
  %9 = icmp eq i8 %8, 1
  br i1 %9, label %32, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 1
  %12 = load i8, i8* %11, align 8, !range !4
  %13 = icmp eq i8 %12, 1
  br i1 %13, label %14, label %19

14:                                               ; preds = %10
  %15 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %6 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %16 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %15, align 8
  %17 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %16, i64 2
  %18 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %17, align 8
  tail call void %18(%"class.blink::InspectorAgentState::SimpleField"* %6) #16
  br label %32

19:                                               ; preds = %10
  store i8 1, i8* %7, align 1
  %20 = bitcast %"class.blink::WebVector.3688"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %20) #16
  %21 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %3, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 0, i64 24, i1 false) #16
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext true, %"class.blink::WebVector.3688"* nonnull %3) #16
  %22 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 0, i32 2
  %23 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 23, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %23, %"class.WTF::String"* dereferenceable(8) %24, %"class.blink::WebVector.3688"* nonnull %3) #16
  %25 = load i8*, i8** %21, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %31, label %27

27:                                               ; preds = %19
  %28 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = ptrtoint i8* %25 to i64
  %30 = bitcast i8** %28 to i64*
  store i64 %29, i64* %30, align 8
  call void @_ZdlPv(i8* nonnull %25) #18
  br label %31

31:                                               ; preds = %27, %19
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %20) #16
  br label %32

32:                                               ; preds = %2, %14, %31
  call void @_ZN5blink17InspectorCSSAgent18SetCoverageEnabledEb(%"class.blink::InspectorCSSAgent"* %1, i1 zeroext true)
  %33 = bitcast %"class.blink::HeapVector.4001"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %33) #16
  %34 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %35 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %34, align 8
  call void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.4001"* nonnull sret %4, %"class.blink::InspectorDOMAgent"* %35) #16
  %36 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %36, align 8
  %38 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i64
  %41 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %37, i64 %40
  %42 = icmp eq i32 %39, 0
  br i1 %42, label %49, label %43

43:                                               ; preds = %32
  %44 = bitcast %"class.blink::StyleChangeReasonForTracing"* %5 to i8*
  %45 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN3WTF11g_null_atomE, align 8
  %46 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %45, i64 0, i32 0, i32 0, i32 0
  %47 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 0
  %48 = getelementptr inbounds %"class.blink::StyleChangeReasonForTracing", %"class.blink::StyleChangeReasonForTracing"* %5, i64 0, i32 1, i32 0, i32 0, i32 0
  br label %50

49:                                               ; preds = %91, %32
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %33) #16
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void

50:                                               ; preds = %43, %91
  %51 = phi %"class.blink::Member.326"* [ %37, %43 ], [ %92, %91 ]
  %52 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %51, i64 0, i32 0, i32 0
  %53 = load %"class.blink::Document"*, %"class.blink::Document"** %52, align 8
  %54 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %53, i64 0, i32 59, i32 0, i32 0
  %55 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %54, align 8
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %44) #16
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %46, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %75, label %58

58:                                               ; preds = %50
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  br i1 %62, label %63, label %75

63:                                               ; preds = %58
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  %66 = zext i32 %65 to i33
  %67 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %66, i33 1) #16
  %68 = extractvalue { i33, i1 } %67, 1
  %69 = extractvalue { i33, i1 } %67, 0
  %70 = icmp slt i33 %69, 0
  %71 = or i1 %68, %70
  br i1 %71, label %72, label %73, !prof !3

72:                                               ; preds = %63
  call void @llvm.trap() #16
  unreachable

73:                                               ; preds = %63
  %74 = trunc i33 %69 to i32
  store i32 %74, i32* %64, align 4
  br label %75

75:                                               ; preds = %50, %58, %73
  store i8* getelementptr inbounds ([0 x i8], [0 x i8]* @_ZN5blink19style_change_reason10kInspectorE, i64 0, i64 0), i8** %47, align 8
  store %"class.WTF::StringImpl"* %56, %"class.WTF::StringImpl"** %48, align 8
  call void @_ZN5blink11StyleEngine29MarkAllElementsForStyleRecalcERKNS_27StyleChangeReasonForTracingE(%"class.blink::StyleEngine"* %55, %"class.blink::StyleChangeReasonForTracing"* nonnull dereferenceable(16) %5) #16
  %76 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %77 = icmp eq %"class.WTF::StringImpl"* %76, null
  br i1 %77, label %91, label %78

78:                                               ; preds = %75
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %76, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %76) #16
  br label %91

91:                                               ; preds = %75, %87, %90
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %44) #16
  call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %53) #16
  %92 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %51, i64 1
  %93 = icmp eq %"class.blink::Member.326"* %92, %41
  br i1 %93, label %49, label %50
}

declare void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent22startRuleUsageTrackingEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent22startRuleUsageTrackingEv(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %4)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent21stopRuleUsageTrackingEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"* nocapture) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::HeapVector.4001", align 8
  %5 = alloca %"class.blink::HeapVector.4001", align 8
  %6 = alloca double, align 8
  %7 = bitcast %"class.blink::HeapVector.4001"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %8, align 8
  call void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.4001"* nonnull sret %5, %"class.blink::InspectorDOMAgent"* %9) #16
  %10 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %11 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %5, i64 0, i32 0, i32 0, i32 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %11, i64 %14
  %16 = icmp eq i32 %13, 0
  br i1 %16, label %17, label %51

17:                                               ; preds = %51, %3
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  %18 = bitcast double* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  store double 0xFFFFFFFFFFFFFFFF, double* %6, align 8
  %19 = bitcast %"class.crdtp::DispatchResponse"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 -86, i64 32, i1 false)
  call void @_ZN5blink17InspectorCSSAgent17takeCoverageDeltaEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPd(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %1, %"class.std::__1::unique_ptr.4701"* %2, double* nonnull %6)
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 16
  %21 = getelementptr inbounds %"class.blink::Member.1313", %"class.blink::Member.1313"* %20, i64 0, i32 0, i32 0
  %22 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %21, align 8
  %23 = icmp eq %"class.blink::StyleRuleUsageTracker"* %22, null
  br i1 %23, label %50, label %24

24:                                               ; preds = %17
  %25 = bitcast %"class.blink::Member.1313"* %20 to i64*
  store atomic i64 0, i64* %25 monotonic, align 8
  %26 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %27 = icmp eq i32 %26, 0
  br i1 %27, label %30, label %28

28:                                               ; preds = %24
  %29 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* null) #16
  br label %30

30:                                               ; preds = %28, %24
  %31 = bitcast %"class.blink::HeapVector.4001"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %31) #16
  %32 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %8, align 8
  call void @_ZN5blink17InspectorDOMAgent9DocumentsEv(%"class.blink::HeapVector.4001"* nonnull sret %4, %"class.blink::InspectorDOMAgent"* %32) #16
  %33 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %34 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %33, align 8
  %35 = getelementptr inbounds %"class.blink::HeapVector.4001", %"class.blink::HeapVector.4001"* %4, i64 0, i32 0, i32 0, i32 0, i32 2
  %36 = load i32, i32* %35, align 4
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %34, i64 %37
  %39 = icmp eq i32 %36, 0
  br i1 %39, label %40, label %41

40:                                               ; preds = %41, %30
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %31) #16
  br label %50

41:                                               ; preds = %30, %41
  %42 = phi %"class.blink::Member.326"* [ %48, %41 ], [ %34, %30 ]
  %43 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %42, i64 0, i32 0, i32 0
  %44 = load %"class.blink::Document"*, %"class.blink::Document"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %44, i64 0, i32 59, i32 0, i32 0
  %46 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %45, align 8
  %47 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %21, align 8
  call void @_ZN5blink11StyleEngine19SetRuleUsageTrackerEPNS_21StyleRuleUsageTrackerE(%"class.blink::StyleEngine"* %46, %"class.blink::StyleRuleUsageTracker"* %47) #16
  %48 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %42, i64 1
  %49 = icmp eq %"class.blink::Member.326"* %48, %38
  br i1 %49, label %40, label %41

50:                                               ; preds = %17, %40
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  ret void

51:                                               ; preds = %3, %51
  %52 = phi %"class.blink::Member.326"* [ %55, %51 ], [ %11, %3 ]
  %53 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %52, i64 0, i32 0, i32 0
  %54 = load %"class.blink::Document"*, %"class.blink::Document"** %53, align 8
  call void @_ZN5blink8Document24UpdateStyleAndLayoutTreeEv(%"class.blink::Document"* %54) #16
  %55 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %52, i64 1
  %56 = icmp eq %"class.blink::Member.326"* %55, %15
  br i1 %56, label %17, label %51
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17takeCoverageDeltaEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"* nocapture, double* nocapture) unnamed_addr #0 align 2 {
  %5 = alloca %"class.std::__1::basic_string", align 8
  %6 = alloca %"class.blink::HeapHashMap.1324", align 8
  %7 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %8 = alloca %"class.blink::HeapHashMap.4723", align 8
  %9 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %10 = alloca %"class.std::__1::unique_ptr.4706", align 8
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 16, i32 0, i32 0
  %12 = load %"class.blink::StyleRuleUsageTracker"*, %"class.blink::StyleRuleUsageTracker"** %11, align 8
  %13 = icmp eq %"class.blink::StyleRuleUsageTracker"* %12, null
  br i1 %13, label %14, label %26

14:                                               ; preds = %4
  %15 = tail call i8* @_Znwm(i64 48) #18
  %16 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %15, i8** %16, align 8
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %18 = bitcast i64* %17 to <2 x i64>*
  store <2 x i64> <i64 38, i64 -9223372036854775760>, <2 x i64>* %18, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %15, i8* align 1 getelementptr inbounds ([39 x i8], [39 x i8]* @.str.25, i64 0, i64 0), i64 38, i1 false) #16
  %19 = getelementptr inbounds i8, i8* %15, i64 38
  store i8 0, i8* %19, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.std::__1::basic_string"* nonnull %5) #16
  %20 = bitcast %"class.std::__1::basic_string"* %5 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %21 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %20, i64 0, i32 1, i32 0
  %22 = load i8, i8* %21, align 1
  %23 = icmp slt i8 %22, 0
  br i1 %23, label %24, label %269

24:                                               ; preds = %14
  %25 = load i8*, i8** %16, align 8
  call void @_ZdlPv(i8* %25) #18
  br label %269

26:                                               ; preds = %4
  %27 = bitcast %"class.blink::HeapHashMap.1324"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.blink::HeapHashMap.1324", %"class.blink::HeapHashMap.1324"* %6, i64 0, i32 0, i32 0, i32 0
  %29 = getelementptr inbounds %"class.blink::HeapHashMap.1324", %"class.blink::HeapHashMap.1324"* %6, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.blink::HeapHashMap.1324", %"class.blink::HeapHashMap.1324"* %6, i64 0, i32 0, i32 0, i32 2
  %31 = bitcast %"class.blink::HeapHashMap.1324"* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %31, i8 -86, i64 24, i1 false)
  call void @_ZN5blink21StyleRuleUsageTracker9TakeDeltaEv(%"class.blink::HeapHashMap.1324"* nonnull sret %6, %"class.blink::StyleRuleUsageTracker"* nonnull %12) #16
  %32 = call i64 @_ZN4base9TimeTicks3NowEv() #16
  %33 = add i64 %32, -9223372036854775807
  %34 = icmp ult i64 %33, 2
  br i1 %34, label %38, label %35

35:                                               ; preds = %26
  %36 = sitofp i64 %32 to double
  %37 = fdiv double %36, 1.000000e+06
  br label %41

38:                                               ; preds = %26
  %39 = icmp slt i64 %32, 0
  %40 = select i1 %39, double 0xFFF0000000000000, double 0x7FF0000000000000
  br label %41

41:                                               ; preds = %35, %38
  %42 = phi double [ %40, %38 ], [ %37, %35 ]
  store double %42, double* %3, align 8
  %43 = call i8* @_Znwm(i64 24) #18
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %43, i8 0, i64 24, i1 false) #16
  %44 = ptrtoint i8* %43 to i64
  %45 = getelementptr inbounds %"class.std::__1::unique_ptr.4701", %"class.std::__1::unique_ptr.4701"* %2, i64 0, i32 0, i32 0, i32 0
  %46 = load %"class.std::__1::vector.4704"*, %"class.std::__1::vector.4704"** %45, align 8
  %47 = bitcast %"class.std::__1::unique_ptr.4701"* %2 to i64*
  store i64 %44, i64* %47, align 8
  %48 = icmp eq %"class.std::__1::vector.4704"* %46, null
  br i1 %48, label %78, label %49

49:                                               ; preds = %41
  %50 = getelementptr inbounds %"class.std::__1::vector.4704", %"class.std::__1::vector.4704"* %46, i64 0, i32 0, i32 0
  %51 = load %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"** %50, align 8
  %52 = icmp eq %"class.std::__1::unique_ptr.4706"* %51, null
  br i1 %52, label %76, label %53

53:                                               ; preds = %49
  %54 = bitcast %"class.std::__1::unique_ptr.4706"* %51 to i8*
  %55 = getelementptr inbounds %"class.std::__1::vector.4704", %"class.std::__1::vector.4704"* %46, i64 0, i32 0, i32 1
  %56 = load %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"** %55, align 8
  %57 = icmp eq %"class.std::__1::unique_ptr.4706"* %56, %51
  br i1 %57, label %74, label %58

58:                                               ; preds = %53, %69
  %59 = phi %"class.std::__1::unique_ptr.4706"* [ %60, %69 ], [ %56, %53 ]
  %60 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %59, i64 -1
  %61 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %60, i64 0, i32 0, i32 0, i32 0
  %62 = load %"class.blink::protocol::CSS::RuleUsage"*, %"class.blink::protocol::CSS::RuleUsage"** %61, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %61, align 8
  %63 = icmp eq %"class.blink::protocol::CSS::RuleUsage"* %62, null
  br i1 %63, label %69, label %64

64:                                               ; preds = %58
  %65 = bitcast %"class.blink::protocol::CSS::RuleUsage"* %62 to void (%"class.blink::protocol::CSS::RuleUsage"*)***
  %66 = load void (%"class.blink::protocol::CSS::RuleUsage"*)**, void (%"class.blink::protocol::CSS::RuleUsage"*)*** %65, align 8
  %67 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleUsage"*)*, void (%"class.blink::protocol::CSS::RuleUsage"*)** %66, i64 2
  %68 = load void (%"class.blink::protocol::CSS::RuleUsage"*)*, void (%"class.blink::protocol::CSS::RuleUsage"*)** %67, align 8
  call void %68(%"class.blink::protocol::CSS::RuleUsage"* nonnull %62) #16
  br label %69

69:                                               ; preds = %64, %58
  %70 = icmp eq %"class.std::__1::unique_ptr.4706"* %60, %51
  br i1 %70, label %71, label %58

71:                                               ; preds = %69
  %72 = bitcast %"class.std::__1::vector.4704"* %46 to i8**
  %73 = load i8*, i8** %72, align 8
  br label %74

74:                                               ; preds = %71, %53
  %75 = phi i8* [ %73, %71 ], [ %54, %53 ]
  store %"class.std::__1::unique_ptr.4706"* %51, %"class.std::__1::unique_ptr.4706"** %55, align 8
  call void @_ZdlPv(i8* %75) #18
  br label %76

76:                                               ; preds = %74, %49
  %77 = bitcast %"class.std::__1::vector.4704"* %46 to i8*
  call void @_ZdlPv(i8* %77) #18
  br label %78

78:                                               ; preds = %76, %41
  %79 = load i32, i32* %30, align 4
  %80 = icmp eq i32 %79, 0
  %81 = load %"struct.WTF::KeyValuePair.1330"*, %"struct.WTF::KeyValuePair.1330"** %28, align 8
  %82 = load i32, i32* %29, align 8
  %83 = zext i32 %82 to i64
  %84 = getelementptr inbounds %"struct.WTF::KeyValuePair.1330", %"struct.WTF::KeyValuePair.1330"* %81, i64 %83
  br i1 %80, label %108, label %85

85:                                               ; preds = %78
  %86 = icmp eq i32 %82, 0
  br i1 %86, label %94, label %87

87:                                               ; preds = %85, %91
  %88 = phi %"struct.WTF::KeyValuePair.1330"* [ %92, %91 ], [ %81, %85 ]
  %89 = bitcast %"struct.WTF::KeyValuePair.1330"* %88 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %94 [
    i64 -1, label %91
    i64 0, label %91
  ]

91:                                               ; preds = %87, %87
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.1330", %"struct.WTF::KeyValuePair.1330"* %88, i64 1
  %93 = icmp eq %"struct.WTF::KeyValuePair.1330"* %92, %84
  br i1 %93, label %108, label %87

94:                                               ; preds = %87, %85
  %95 = phi %"struct.WTF::KeyValuePair.1330"* [ %81, %85 ], [ %88, %87 ]
  %96 = icmp eq %"struct.WTF::KeyValuePair.1330"* %95, %84
  br i1 %96, label %108, label %97

97:                                               ; preds = %94
  %98 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 10, i32 0
  %99 = bitcast %"class.blink::CSSStyleSheet"** %7 to i8*
  %100 = bitcast %"class.blink::CSSStyleSheet"** %7 to i64*
  %101 = bitcast %"class.blink::HeapHashMap.4723"* %8 to i8*
  %102 = getelementptr inbounds %"class.blink::HeapHashMap.4723", %"class.blink::HeapHashMap.4723"* %8, i64 0, i32 0, i32 0, i32 0
  %103 = getelementptr inbounds %"class.blink::HeapHashMap.4723", %"class.blink::HeapHashMap.4723"* %8, i64 0, i32 0, i32 0, i32 1
  %104 = bitcast %"class.blink::CSSStyleSheet"** %9 to i8*
  %105 = bitcast %"class.std::__1::unique_ptr.4706"* %10 to i8*
  %106 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %10, i64 0, i32 0, i32 0, i32 0
  %107 = bitcast %"class.blink::HeapHashMap.4723"* %8 to i8*
  br label %109

108:                                              ; preds = %91, %257, %267, %264, %78, %94
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  br label %269

109:                                              ; preds = %97, %267
  %110 = phi %"struct.WTF::KeyValuePair.1330"* [ %95, %97 ], [ %261, %267 ]
  %111 = bitcast %"struct.WTF::KeyValuePair.1330"* %110 to i64*
  %112 = load i64, i64* %111, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #16
  store i64 %112, i64* %100, align 8
  %113 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %98, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %7)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #16
  %114 = icmp eq %"class.blink::InspectorStyleSheet"* %113, null
  br i1 %114, label %257, label %115

115:                                              ; preds = %109
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %101) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %107, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %101, i8 0, i64 20, i1 false) #16
  call void @_ZN5blink17InspectorCSSAgent13BuildRulesMapEPNS_19InspectorStyleSheetEPNS_11HeapHashMapINS_6MemberIKNS_9StyleRuleEEENS4_INS_12CSSStyleRuleEEEN3WTF10MemberHashIS6_EENSA_10HashTraitsIS7_EENSD_IS9_EEEE(%"class.blink::InspectorCSSAgent"* %1, %"class.blink::InspectorStyleSheet"* nonnull %113, %"class.blink::HeapHashMap.4723"* nonnull %8)
  %116 = getelementptr inbounds %"struct.WTF::KeyValuePair.1330", %"struct.WTF::KeyValuePair.1330"* %110, i64 0, i32 1, i32 0, i32 0
  %117 = load %"class.blink::HeapVector.3978"*, %"class.blink::HeapVector.3978"** %116, align 8
  %118 = getelementptr inbounds %"class.blink::HeapVector.3978", %"class.blink::HeapVector.3978"* %117, i64 0, i32 0, i32 0, i32 0, i32 0
  %119 = load %"class.blink::Member.3984"*, %"class.blink::Member.3984"** %118, align 8
  %120 = getelementptr inbounds %"class.blink::HeapVector.3978", %"class.blink::HeapVector.3978"* %117, i64 0, i32 0, i32 0, i32 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = zext i32 %121 to i64
  %123 = getelementptr inbounds %"class.blink::Member.3984", %"class.blink::Member.3984"* %119, i64 %122
  %124 = icmp eq i32 %121, 0
  br i1 %124, label %125, label %126

125:                                              ; preds = %254, %115
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %101) #16
  br label %257

126:                                              ; preds = %115, %254
  %127 = phi %"class.blink::Member.3984"* [ %255, %254 ], [ %119, %115 ]
  %128 = bitcast %"class.blink::Member.3984"* %127 to i64*
  %129 = load i64, i64* %128, align 8
  %130 = inttoptr i64 %129 to %"class.blink::StyleRule"*
  %131 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %102, align 8
  %132 = icmp eq %"struct.WTF::KeyValuePair.4729"* %131, null
  br i1 %132, label %254, label %133

133:                                              ; preds = %126
  %134 = load i32, i32* %103, align 8
  %135 = add i32 %134, -1
  %136 = zext i32 %135 to i64
  %137 = shl i64 %129, 32
  %138 = xor i64 %137, -1
  %139 = add i64 %129, %138
  %140 = lshr i64 %139, 22
  %141 = xor i64 %140, %139
  %142 = shl i64 %141, 13
  %143 = xor i64 %142, -1
  %144 = add i64 %141, %143
  %145 = lshr i64 %144, 8
  %146 = xor i64 %145, %144
  %147 = mul i64 %146, 9
  %148 = lshr i64 %147, 15
  %149 = xor i64 %148, %147
  %150 = shl i64 %149, 27
  %151 = xor i64 %150, -1
  %152 = add i64 %149, %151
  %153 = lshr i64 %152, 31
  %154 = xor i64 %153, %152
  %155 = trunc i64 %154 to i32
  %156 = and i32 %135, %155
  %157 = zext i32 %156 to i64
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %131, i64 %157
  %159 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %158, i64 0, i32 0, i32 0, i32 0
  %160 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %159, align 8
  %161 = icmp eq %"class.blink::StyleRule"* %160, %130
  br i1 %161, label %191, label %162

162:                                              ; preds = %133
  %163 = xor i32 %155, -1
  %164 = lshr i32 %155, 23
  %165 = add i32 %164, %163
  %166 = shl i32 %165, 12
  %167 = xor i32 %166, %165
  %168 = lshr i32 %167, 7
  %169 = xor i32 %168, %167
  %170 = shl i32 %169, 2
  %171 = xor i32 %170, %169
  %172 = lshr i32 %171, 20
  %173 = xor i32 %172, %171
  %174 = or i32 %173, 1
  %175 = zext i32 %174 to i64
  br label %176

176:                                              ; preds = %182, %162
  %177 = phi i64 [ %157, %162 ], [ %186, %182 ]
  %178 = phi i64 [ 0, %162 ], [ %184, %182 ]
  %179 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %131, i64 %177, i32 0, i32 0, i32 0
  %180 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %179, align 8
  %181 = icmp eq %"class.blink::StyleRule"* %180, null
  br i1 %181, label %254, label %182

182:                                              ; preds = %176
  %183 = icmp eq i64 %178, 0
  %184 = select i1 %183, i64 %175, i64 %178
  %185 = add i64 %184, %177
  %186 = and i64 %185, %136
  %187 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %131, i64 %186
  %188 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %187, i64 0, i32 0, i32 0, i32 0
  %189 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %188, align 8
  %190 = icmp eq %"class.blink::StyleRule"* %189, %130
  br i1 %190, label %191, label %176

191:                                              ; preds = %182, %133
  %192 = phi %"struct.WTF::KeyValuePair.4729"* [ %158, %133 ], [ %187, %182 ]
  %193 = icmp eq %"struct.WTF::KeyValuePair.4729"* %192, null
  br i1 %193, label %254, label %194

194:                                              ; preds = %191
  %195 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %192, i64 0, i32 1, i32 0, i32 0
  %196 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %195, align 8
  %197 = icmp eq %"class.blink::CSSStyleRule"* %196, null
  br i1 %197, label %254, label %198

198:                                              ; preds = %194
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %104) #16
  %199 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %196, i64 0, i32 0
  %200 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %196, i64 0, i32 0, i32 1
  %201 = load i8, i8* %200, align 8
  %202 = and i8 %201, 2
  %203 = icmp eq i8 %202, 0
  %204 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %196, i64 0, i32 0, i32 2, i32 0, i32 0
  br i1 %203, label %219, label %205

205:                                              ; preds = %198, %210
  %206 = phi %"class.blink::ScriptWrappable"** [ %218, %210 ], [ %204, %198 ]
  %207 = phi %"class.blink::CSSRule"* [ %213, %210 ], [ %199, %198 ]
  %208 = load %"class.blink::ScriptWrappable"*, %"class.blink::ScriptWrappable"** %206, align 8
  %209 = icmp eq %"class.blink::ScriptWrappable"* %208, null
  br i1 %209, label %223, label %210

210:                                              ; preds = %205
  %211 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %207, i64 0, i32 2, i32 0, i32 0
  %212 = bitcast %"class.blink::ScriptWrappable"** %211 to %"class.blink::CSSRule"**
  %213 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %212, align 8
  %214 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %213, i64 0, i32 1
  %215 = load i8, i8* %214, align 8
  %216 = and i8 %215, 2
  %217 = icmp eq i8 %216, 0
  %218 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %213, i64 0, i32 2, i32 0, i32 0
  br i1 %217, label %219, label %205

219:                                              ; preds = %210, %198
  %220 = phi %"class.blink::ScriptWrappable"** [ %204, %198 ], [ %218, %210 ]
  %221 = bitcast %"class.blink::ScriptWrappable"** %220 to %"class.blink::CSSStyleSheet"**
  %222 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %221, align 8
  br label %223

223:                                              ; preds = %205, %219
  %224 = phi %"class.blink::CSSStyleSheet"* [ %222, %219 ], [ null, %205 ]
  store %"class.blink::CSSStyleSheet"* %224, %"class.blink::CSSStyleSheet"** %9, align 8
  %225 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %98, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %9)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %104) #16
  %226 = icmp eq %"class.blink::InspectorStyleSheet"* %225, null
  br i1 %226, label %254, label %227

227:                                              ; preds = %223
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %105) #16
  store %"class.blink::protocol::CSS::RuleUsage"* inttoptr (i64 -6148914691236517206 to %"class.blink::protocol::CSS::RuleUsage"*), %"class.blink::protocol::CSS::RuleUsage"** %106, align 8
  %228 = call %"class.blink::protocol::CSS::RuleUsage"* @_ZN5blink19InspectorStyleSheet23BuildObjectForRuleUsageEPNS_7CSSRuleEb(%"class.blink::InspectorStyleSheet"* nonnull %225, %"class.blink::CSSRule"* %199, i1 zeroext true) #16
  store %"class.blink::protocol::CSS::RuleUsage"* %228, %"class.blink::protocol::CSS::RuleUsage"** %106, align 8
  %229 = icmp eq %"class.blink::protocol::CSS::RuleUsage"* %228, null
  %230 = ptrtoint %"class.blink::protocol::CSS::RuleUsage"* %228 to i64
  br i1 %229, label %231, label %232

231:                                              ; preds = %227
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %106, align 8
  br label %253

232:                                              ; preds = %227
  %233 = load %"class.std::__1::vector.4704"*, %"class.std::__1::vector.4704"** %45, align 8
  %234 = getelementptr inbounds %"class.std::__1::vector.4704", %"class.std::__1::vector.4704"* %233, i64 0, i32 0, i32 1
  %235 = load %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"** %234, align 8
  %236 = getelementptr inbounds %"class.std::__1::vector.4704", %"class.std::__1::vector.4704"* %233, i64 0, i32 0, i32 2, i32 0, i32 0
  %237 = load %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"** %236, align 8
  %238 = icmp ult %"class.std::__1::unique_ptr.4706"* %235, %237
  br i1 %238, label %239, label %244

239:                                              ; preds = %232
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %106, align 8
  %240 = bitcast %"class.std::__1::unique_ptr.4706"* %235 to i64*
  store i64 %230, i64* %240, align 8
  %241 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %235, i64 1
  %242 = ptrtoint %"class.std::__1::unique_ptr.4706"* %241 to i64
  %243 = bitcast %"class.std::__1::unique_ptr.4706"** %234 to i64*
  store i64 %242, i64* %243, align 8
  br label %245

244:                                              ; preds = %232
  call void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS9RuleUsageENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4704"* %233, %"class.std::__1::unique_ptr.4706"* nonnull dereferenceable(8) %10) #16
  br label %245

245:                                              ; preds = %244, %239
  %246 = load %"class.blink::protocol::CSS::RuleUsage"*, %"class.blink::protocol::CSS::RuleUsage"** %106, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %106, align 8
  %247 = icmp eq %"class.blink::protocol::CSS::RuleUsage"* %246, null
  br i1 %247, label %253, label %248

248:                                              ; preds = %245
  %249 = bitcast %"class.blink::protocol::CSS::RuleUsage"* %246 to void (%"class.blink::protocol::CSS::RuleUsage"*)***
  %250 = load void (%"class.blink::protocol::CSS::RuleUsage"*)**, void (%"class.blink::protocol::CSS::RuleUsage"*)*** %249, align 8
  %251 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleUsage"*)*, void (%"class.blink::protocol::CSS::RuleUsage"*)** %250, i64 2
  %252 = load void (%"class.blink::protocol::CSS::RuleUsage"*)*, void (%"class.blink::protocol::CSS::RuleUsage"*)** %251, align 8
  call void %252(%"class.blink::protocol::CSS::RuleUsage"* nonnull %246) #16
  br label %253

253:                                              ; preds = %231, %245, %248
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %105) #16
  br label %254

254:                                              ; preds = %176, %126, %191, %253, %223, %194
  %255 = getelementptr inbounds %"class.blink::Member.3984", %"class.blink::Member.3984"* %127, i64 1
  %256 = icmp eq %"class.blink::Member.3984"* %255, %123
  br i1 %256, label %125, label %126

257:                                              ; preds = %109, %125
  %258 = getelementptr inbounds %"struct.WTF::KeyValuePair.1330", %"struct.WTF::KeyValuePair.1330"* %110, i64 1
  %259 = icmp eq %"struct.WTF::KeyValuePair.1330"* %258, %84
  br i1 %259, label %108, label %260

260:                                              ; preds = %257, %264
  %261 = phi %"struct.WTF::KeyValuePair.1330"* [ %265, %264 ], [ %258, %257 ]
  %262 = bitcast %"struct.WTF::KeyValuePair.1330"* %261 to i64*
  %263 = load i64, i64* %262, align 8
  switch i64 %263, label %267 [
    i64 -1, label %264
    i64 0, label %264
  ]

264:                                              ; preds = %260, %260
  %265 = getelementptr inbounds %"struct.WTF::KeyValuePair.1330", %"struct.WTF::KeyValuePair.1330"* %261, i64 1
  %266 = icmp eq %"struct.WTF::KeyValuePair.1330"* %265, %84
  br i1 %266, label %108, label %260

267:                                              ; preds = %260
  %268 = icmp eq %"struct.WTF::KeyValuePair.1330"* %261, %84
  br i1 %268, label %108, label %109

269:                                              ; preds = %24, %14, %108
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent21stopRuleUsageTrackingEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent21stopRuleUsageTrackingEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %5, %"class.std::__1::unique_ptr.4701"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent13BuildRulesMapEPNS_19InspectorStyleSheetEPNS_11HeapHashMapINS_6MemberIKNS_9StyleRuleEEENS4_INS_12CSSStyleRuleEEEN3WTF10MemberHashIS6_EENSA_10HashTraitsIS7_EENSD_IS9_EEEE(%"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorStyleSheet"*, %"class.blink::HeapHashMap.4723"*) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::CSSStyleRule"*, align 8
  %5 = alloca %"class.blink::StyleRule"*, align 8
  %6 = alloca %"class.blink::CSSStyleSheet"*, align 8
  %7 = tail call dereferenceable(16) %"class.blink::HeapVector.657"* @_ZN5blink19InspectorStyleSheet9FlatRulesEv(%"class.blink::InspectorStyleSheet"* %1) #16
  %8 = getelementptr inbounds %"class.blink::HeapVector.657", %"class.blink::HeapVector.657"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::HeapVector.657", %"class.blink::HeapVector.657"* %7, i64 0, i32 0, i32 0, i32 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = zext i32 %11 to i64
  %13 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %9, i64 %12
  %14 = icmp eq i32 %11, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %3
  %16 = bitcast %"class.blink::CSSStyleRule"** %4 to i8*
  %17 = bitcast %"class.blink::StyleRule"** %5 to i8*
  %18 = bitcast %"class.blink::StyleRule"** %5 to i64*
  %19 = getelementptr inbounds %"class.blink::HeapHashMap.4723", %"class.blink::HeapHashMap.4723"* %2, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10, i32 0
  %21 = bitcast %"class.blink::CSSStyleSheet"** %6 to i8*
  br label %23

22:                                               ; preds = %86, %3
  ret void

23:                                               ; preds = %15, %86
  %24 = phi %"class.blink::Member.644"* [ %9, %15 ], [ %87, %86 ]
  %25 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %24, i64 0, i32 0, i32 0
  %26 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %25, align 8
  %27 = bitcast %"class.blink::CSSRule"* %26 to i32 (%"class.blink::CSSRule"*)***
  %28 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %27, align 8
  %29 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %28, i64 9
  %30 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %29, align 8
  %31 = call i32 %30(%"class.blink::CSSRule"* %26) #16
  %32 = icmp eq i32 %31, 1
  br i1 %32, label %33, label %64

33:                                               ; preds = %23
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  store %"class.blink::CSSStyleRule"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleRule"*), %"class.blink::CSSStyleRule"** %4, align 8
  %34 = icmp eq %"class.blink::CSSRule"* %26, null
  br i1 %34, label %43, label %35

35:                                               ; preds = %33
  %36 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %27, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %36, i64 9
  %38 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %37, align 8
  %39 = call i32 %38(%"class.blink::CSSRule"* nonnull %26) #16
  %40 = icmp eq i32 %39, 1
  %41 = bitcast %"class.blink::CSSRule"* %26 to %"class.blink::CSSStyleRule"*
  %42 = select i1 %40, %"class.blink::CSSStyleRule"* %41, %"class.blink::CSSStyleRule"* null
  br label %43

43:                                               ; preds = %33, %35
  %44 = phi %"class.blink::CSSStyleRule"* [ %42, %35 ], [ null, %33 ]
  store %"class.blink::CSSStyleRule"* %44, %"class.blink::CSSStyleRule"** %4, align 8
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %45 = getelementptr inbounds %"class.blink::CSSStyleRule", %"class.blink::CSSStyleRule"* %44, i64 0, i32 1, i32 0, i32 0
  %46 = bitcast %"class.blink::StyleRule"** %45 to i64*
  %47 = load i64, i64* %46, align 8
  store i64 %47, i64* %18, align 8
  %48 = call { %"struct.WTF::KeyValuePair.4729"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EEPS3_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.4727"* %19, %"class.blink::StyleRule"** nonnull dereferenceable(8) %5, %"class.blink::CSSStyleRule"** nonnull dereferenceable(8) %4) #16
  %49 = extractvalue { %"struct.WTF::KeyValuePair.4729"*, i8 } %48, 1
  %50 = and i8 %49, 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %52, label %63

52:                                               ; preds = %43
  %53 = extractvalue { %"struct.WTF::KeyValuePair.4729"*, i8 } %48, 0
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %53, i64 0, i32 1
  %55 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %4, align 8
  %56 = ptrtoint %"class.blink::CSSStyleRule"* %55 to i64
  %57 = bitcast %"class.blink::Member.4589"* %54 to i64*
  store atomic i64 %56, i64* %57 monotonic, align 8
  %58 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %63, label %60

60:                                               ; preds = %52
  %61 = bitcast %"class.blink::CSSStyleRule"* %55 to i8*
  %62 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %61) #16
  br label %63

63:                                               ; preds = %43, %52, %60
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %64

64:                                               ; preds = %63, %23
  %65 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %27, align 8
  %66 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %65, i64 9
  %67 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %66, align 8
  %68 = call i32 %67(%"class.blink::CSSRule"* %26) #16
  %69 = icmp eq i32 %68, 3
  br i1 %69, label %70, label %86

70:                                               ; preds = %64
  %71 = icmp eq %"class.blink::CSSRule"* %26, null
  br i1 %71, label %80, label %72

72:                                               ; preds = %70
  %73 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %27, align 8
  %74 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %73, i64 9
  %75 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %74, align 8
  %76 = call i32 %75(%"class.blink::CSSRule"* nonnull %26) #16
  %77 = icmp eq i32 %76, 3
  %78 = bitcast %"class.blink::CSSRule"* %26 to %"class.blink::CSSImportRule"*
  %79 = select i1 %77, %"class.blink::CSSImportRule"* %78, %"class.blink::CSSImportRule"* null
  br label %80

80:                                               ; preds = %70, %72
  %81 = phi %"class.blink::CSSImportRule"* [ %79, %72 ], [ null, %70 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %82 = call %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSImportRule10styleSheetEv(%"class.blink::CSSImportRule"* %81) #16
  store %"class.blink::CSSStyleSheet"* %82, %"class.blink::CSSStyleSheet"** %6, align 8
  %83 = call %"class.blink::InspectorStyleSheet"* @_ZNK3WTF7HashMapIN5blink6MemberINS1_13CSSStyleSheetEEENS2_INS1_19InspectorStyleSheetEEENS_10MemberHashIS3_EENS_10HashTraitsIS4_EENS9_IS6_EENS1_13HeapAllocatorEE2atERKPS3_(%"class.WTF::HashMap.3288"* %20, %"class.blink::CSSStyleSheet"** nonnull dereferenceable(8) %6)
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  %84 = icmp eq %"class.blink::InspectorStyleSheet"* %83, null
  br i1 %84, label %86, label %85

85:                                               ; preds = %80
  call void @_ZN5blink17InspectorCSSAgent13BuildRulesMapEPNS_19InspectorStyleSheetEPNS_11HeapHashMapINS_6MemberIKNS_9StyleRuleEEENS4_INS_12CSSStyleRuleEEEN3WTF10MemberHashIS6_EENSA_10HashTraitsIS7_EENSD_IS9_EEEE(%"class.blink::InspectorCSSAgent"* %0, %"class.blink::InspectorStyleSheet"* nonnull %83, %"class.blink::HeapHashMap.4723"* %2)
  br label %86

86:                                               ; preds = %64, %85, %80
  %87 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %24, i64 1
  %88 = icmp eq %"class.blink::Member.644"* %87, %13
  br i1 %88, label %22, label %23
}

declare void @_ZN5blink21StyleRuleUsageTracker9TakeDeltaEv(%"class.blink::HeapHashMap.1324"* sret, %"class.blink::StyleRuleUsageTracker"*) local_unnamed_addr #1

declare i64 @_ZN4base9TimeTicks3NowEv() local_unnamed_addr #1

declare %"class.blink::protocol::CSS::RuleUsage"* @_ZN5blink19InspectorStyleSheet23BuildObjectForRuleUsageEPNS_7CSSRuleEb(%"class.blink::InspectorStyleSheet"*, %"class.blink::CSSRule"*, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent17takeCoverageDeltaEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPd(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::unique_ptr.4701"* nocapture, double* nocapture) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent17takeCoverageDeltaEPNSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS9RuleUsageENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEEPd(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %6, %"class.std::__1::unique_ptr.4701"* %2, double* %3)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent25trackComputedStyleUpdatesENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4445"*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = alloca %"class.WTF::String", align 8
  %6 = alloca %"class.WTF::HashSet.2527", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 25
  %9 = getelementptr inbounds %"class.WTF::HashMap.3317", %"class.WTF::HashMap.3317"* %8, i64 0, i32 0
  tail call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E5clearEv(%"class.WTF::HashTable.3318"* %9) #16
  %10 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %2, i64 0, i32 0, i32 1
  %11 = bitcast %"class.std::__1::unique_ptr.4447"** %10 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector.4445"* %2 to i64*
  %14 = load i64, i64* %13, align 8
  %15 = icmp eq i64 %12, %14
  %16 = inttoptr i64 %14 to %"class.std::__1::unique_ptr.4447"*
  %17 = inttoptr i64 %12 to %"class.std::__1::unique_ptr.4447"*
  br i1 %15, label %18, label %45

18:                                               ; preds = %3
  %19 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 26, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %19, align 8
  %21 = icmp eq %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %20, null
  br i1 %21, label %34, label %22

22:                                               ; preds = %18
  %23 = tail call %"class.std::__1::vector.3613"* @_ZN5blink17InspectorCSSAgent38BuildArrayForComputedStyleUpdatedNodesEv(%"class.blink::InspectorCSSAgent"* %1)
  %24 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %20 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)***
  %25 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)*** %24, align 8
  %26 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)** %25, align 8
  tail call void %26(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* nonnull %20, %"class.std::__1::vector.3613"* %23) #16
  %27 = load %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %19, align 8
  store %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* null, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %19, align 8
  %28 = icmp eq %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %27, null
  br i1 %28, label %34, label %29

29:                                               ; preds = %22
  %30 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %27 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)***
  %31 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %31, i64 4
  %33 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %32, align 8
  tail call void %33(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* nonnull %27) #16
  br label %34

34:                                               ; preds = %18, %29, %22
  %35 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 27
  %36 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %35, i64 0, i32 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = icmp eq i32* %37, null
  br i1 %38, label %44, label %39

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 27, i32 0, i32 1
  %41 = bitcast i32* %37 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %41) #16
  %42 = bitcast %"class.WTF::HashSet.3219"* %35 to i64*
  store atomic i64 0, i64* %42 monotonic, align 8
  store i32 0, i32* %40, align 8
  %43 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 27, i32 0, i32 2
  store i32 0, i32* %43, align 4
  br label %44

44:                                               ; preds = %34, %39
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %237

45:                                               ; preds = %3
  %46 = icmp eq %"class.std::__1::unique_ptr.4447"* %16, %17
  br i1 %46, label %61, label %47

47:                                               ; preds = %45
  %48 = bitcast %"class.WTF::String"* %4 to i8*
  %49 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %50 = getelementptr inbounds %"class.WTF::HashMap.3317", %"class.WTF::HashMap.3317"* %8, i64 0, i32 0, i32 0
  %51 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 25, i32 0, i32 1
  %52 = bitcast %"class.WTF::String"* %5 to i8*
  %53 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %54 = bitcast %"class.WTF::HashSet.2527"* %6 to i8*
  %55 = getelementptr inbounds %"class.WTF::HashSet.2527", %"class.WTF::HashSet.2527"* %6, i64 0, i32 0, i32 0
  %56 = getelementptr inbounds %"class.WTF::HashSet.2527", %"class.WTF::HashSet.2527"* %6, i64 0, i32 0, i32 1
  %57 = bitcast %"class.WTF::String"* %7 to i8*
  %58 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %59 = getelementptr inbounds %"class.WTF::HashSet.2527", %"class.WTF::HashSet.2527"* %6, i64 0, i32 0
  %60 = bitcast %"class.WTF::HashSet.2527"* %6 to i8*
  br label %62

61:                                               ; preds = %234, %45
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  br label %237

62:                                               ; preds = %47, %234
  %63 = phi %"class.std::__1::unique_ptr.4447"* [ %16, %47 ], [ %235, %234 ]
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %49, align 8
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %63, i64 0, i32 0, i32 0, i32 0
  %65 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %64, align 8
  %66 = getelementptr inbounds %"class.blink::protocol::CSS::CSSComputedStyleProperty", %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %65, i64 0, i32 1, i32 0, i32 0
  %67 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %66, align 8
  %68 = icmp eq %"class.WTF::StringImpl"* %67, null
  br i1 %68, label %86, label %69

69:                                               ; preds = %62
  %70 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %71 = load atomic i32, i32* %70 monotonic, align 4
  %72 = and i32 %71, 2
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %86

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %67, i64 0, i32 0
  %76 = load i32, i32* %75, align 4
  %77 = zext i32 %76 to i33
  %78 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %77, i33 1) #16
  %79 = extractvalue { i33, i1 } %78, 1
  %80 = extractvalue { i33, i1 } %78, 0
  %81 = icmp slt i33 %80, 0
  %82 = or i1 %79, %81
  br i1 %82, label %83, label %84, !prof !3

83:                                               ; preds = %74
  call void @llvm.trap() #16
  unreachable

84:                                               ; preds = %74
  %85 = trunc i33 %80 to i32
  store i32 %85, i32* %75, align 4
  br label %86

86:                                               ; preds = %62, %69, %84
  store %"class.WTF::StringImpl"* %67, %"class.WTF::StringImpl"** %49, align 8
  %87 = call { %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E4findERKS1_(%"class.WTF::HashTable.3318"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %88 = extractvalue { %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"* } %87, 0
  %89 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %50, align 8
  %90 = load i32, i32* %51, align 8
  %91 = zext i32 %90 to i64
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %89, i64 %91
  %93 = icmp eq %"struct.WTF::KeyValuePair.3321"* %88, %92
  br i1 %93, label %135, label %94

94:                                               ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16
  %95 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %64, align 8
  %96 = getelementptr inbounds %"class.blink::protocol::CSS::CSSComputedStyleProperty", %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %95, i64 0, i32 2, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %94
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #16
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !3

113:                                              ; preds = %104
  call void @llvm.trap() #16
  unreachable

114:                                              ; preds = %104
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %105, align 4
  br label %116

116:                                              ; preds = %94, %99, %114
  store %"class.WTF::StringImpl"* %97, %"class.WTF::StringImpl"** %53, align 8
  %117 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %88, i64 0, i32 1, i32 0
  %118 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2528"* %117, %"class.WTF::String"* nonnull dereferenceable(8) %5, %"class.WTF::String"* nonnull dereferenceable(8) %5) #16
  %119 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %53, align 8
  %120 = icmp eq %"class.WTF::StringImpl"* %119, null
  br i1 %120, label %134, label %121

121:                                              ; preds = %116
  %122 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %123 = load atomic i32, i32* %122 monotonic, align 4
  %124 = and i32 %123, 2
  %125 = icmp eq i32 %124, 0
  %126 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %119, i64 0, i32 0
  %127 = load i32, i32* %126, align 4
  br i1 %125, label %128, label %130

128:                                              ; preds = %121
  %129 = add i32 %127, -1
  store i32 %129, i32* %126, align 4
  br label %130

130:                                              ; preds = %128, %121
  %131 = phi i32 [ %129, %128 ], [ %127, %121 ]
  %132 = icmp eq i32 %131, 0
  br i1 %132, label %133, label %134

133:                                              ; preds = %130
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %119) #16
  br label %134

134:                                              ; preds = %116, %130, %133
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16
  br label %218

135:                                              ; preds = %86
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %54) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %60, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %54, i8 0, i64 20, i1 false) #16
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %57) #16
  %136 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %64, align 8
  %137 = getelementptr inbounds %"class.blink::protocol::CSS::CSSComputedStyleProperty", %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %136, i64 0, i32 2, i32 0, i32 0
  %138 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %137, align 8
  %139 = icmp eq %"class.WTF::StringImpl"* %138, null
  br i1 %139, label %157, label %140

140:                                              ; preds = %135
  %141 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %142 = load atomic i32, i32* %141 monotonic, align 4
  %143 = and i32 %142, 2
  %144 = icmp eq i32 %143, 0
  br i1 %144, label %145, label %157

145:                                              ; preds = %140
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %138, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = zext i32 %147 to i33
  %149 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %148, i33 1) #16
  %150 = extractvalue { i33, i1 } %149, 1
  %151 = extractvalue { i33, i1 } %149, 0
  %152 = icmp slt i33 %151, 0
  %153 = or i1 %150, %152
  br i1 %153, label %154, label %155, !prof !3

154:                                              ; preds = %145
  call void @llvm.trap() #16
  unreachable

155:                                              ; preds = %145
  %156 = trunc i33 %151 to i32
  store i32 %156, i32* %146, align 4
  br label %157

157:                                              ; preds = %135, %140, %155
  store %"class.WTF::StringImpl"* %138, %"class.WTF::StringImpl"** %58, align 8
  %158 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2528"* nonnull %59, %"class.WTF::String"* nonnull dereferenceable(8) %7, %"class.WTF::String"* nonnull dereferenceable(8) %7) #16
  %159 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %160 = icmp eq %"class.WTF::StringImpl"* %159, null
  br i1 %160, label %174, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %163 = load atomic i32, i32* %162 monotonic, align 4
  %164 = and i32 %163, 2
  %165 = icmp eq i32 %164, 0
  %166 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %159, i64 0, i32 0
  %167 = load i32, i32* %166, align 4
  br i1 %165, label %168, label %170

168:                                              ; preds = %161
  %169 = add i32 %167, -1
  store i32 %169, i32* %166, align 4
  br label %170

170:                                              ; preds = %168, %161
  %171 = phi i32 [ %169, %168 ], [ %167, %161 ]
  %172 = icmp eq i32 %171, 0
  br i1 %172, label %173, label %174

173:                                              ; preds = %170
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %159) #16
  br label %174

174:                                              ; preds = %157, %170, %173
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %57) #16
  %175 = call { %"struct.WTF::KeyValuePair.3321"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6insertINS_17HashMapTranslatorISD_S4_S7_EERS1_RS8_EENS_18HashTableAddResultISE_S9_EEOT0_OT1_(%"class.WTF::HashTable.3318"* %9, %"class.WTF::String"* nonnull dereferenceable(8) %4, %"class.WTF::HashSet.2527"* nonnull dereferenceable(24) %6) #16
  %176 = extractvalue { %"struct.WTF::KeyValuePair.3321"*, i8 } %175, 1
  %177 = and i8 %176, 1
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %179, label %183

179:                                              ; preds = %174
  %180 = extractvalue { %"struct.WTF::KeyValuePair.3321"*, i8 } %175, 0
  %181 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %180, i64 0, i32 1, i32 0
  %182 = call dereferenceable(24) %"class.WTF::HashTable.2528"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::HashTable.2528"* %181, %"class.WTF::HashTable.2528"* nonnull dereferenceable(24) %59) #16
  br label %183

183:                                              ; preds = %174, %179
  %184 = load %"class.WTF::String"*, %"class.WTF::String"** %55, align 8
  %185 = icmp eq %"class.WTF::String"* %184, null
  br i1 %185, label %217, label %186, !prof !2

186:                                              ; preds = %183
  %187 = load i32, i32* %56, align 8
  %188 = icmp eq i32 %187, 0
  br i1 %188, label %215, label %189

189:                                              ; preds = %186
  %190 = zext i32 %187 to i64
  br label %191

191:                                              ; preds = %212, %189
  %192 = phi i64 [ 0, %189 ], [ %213, %212 ]
  %193 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %184, i64 %192
  %194 = bitcast %"class.WTF::String"* %193 to i8**
  %195 = load i8*, i8** %194, align 8
  %196 = bitcast i8* %195 to %"class.WTF::StringImpl"*
  %197 = ptrtoint i8* %195 to i64
  switch i64 %197, label %198 [
    i64 -1, label %212
    i64 0, label %212
  ]

198:                                              ; preds = %191
  %199 = getelementptr inbounds i8, i8* %195, i64 8
  %200 = bitcast i8* %199 to i32*
  %201 = load atomic i32, i32* %200 monotonic, align 4
  %202 = and i32 %201, 2
  %203 = icmp eq i32 %202, 0
  %204 = bitcast i8* %195 to i32*
  %205 = load i32, i32* %204, align 4
  br i1 %203, label %206, label %208

206:                                              ; preds = %198
  %207 = add i32 %205, -1
  store i32 %207, i32* %204, align 4
  br label %208

208:                                              ; preds = %206, %198
  %209 = phi i32 [ %207, %206 ], [ %205, %198 ]
  %210 = icmp eq i32 %209, 0
  br i1 %210, label %211, label %212

211:                                              ; preds = %208
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %196) #16
  br label %212

212:                                              ; preds = %211, %208, %191, %191
  %213 = add nuw nsw i64 %192, 1
  %214 = icmp eq i64 %213, %190
  br i1 %214, label %215, label %191

215:                                              ; preds = %212, %186
  %216 = bitcast %"class.WTF::String"* %184 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %216) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %55, align 8
  br label %217

217:                                              ; preds = %183, %215
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %54) #16
  br label %218

218:                                              ; preds = %217, %134
  %219 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %49, align 8
  %220 = icmp eq %"class.WTF::StringImpl"* %219, null
  br i1 %220, label %234, label %221

221:                                              ; preds = %218
  %222 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %223 = load atomic i32, i32* %222 monotonic, align 4
  %224 = and i32 %223, 2
  %225 = icmp eq i32 %224, 0
  %226 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %219, i64 0, i32 0
  %227 = load i32, i32* %226, align 4
  br i1 %225, label %228, label %230

228:                                              ; preds = %221
  %229 = add i32 %227, -1
  store i32 %229, i32* %226, align 4
  br label %230

230:                                              ; preds = %228, %221
  %231 = phi i32 [ %229, %228 ], [ %227, %221 ]
  %232 = icmp eq i32 %231, 0
  br i1 %232, label %233, label %234

233:                                              ; preds = %230
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %219) #16
  br label %234

234:                                              ; preds = %218, %230, %233
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  %235 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %63, i64 1
  %236 = icmp eq %"class.std::__1::unique_ptr.4447"* %235, %17
  br i1 %236, label %61, label %62

237:                                              ; preds = %61, %44
  %238 = icmp eq %"class.std::__1::vector.4445"* %2, null
  br i1 %238, label %267, label %239

239:                                              ; preds = %237
  %240 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %2, i64 0, i32 0, i32 0
  %241 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %240, align 8
  %242 = icmp eq %"class.std::__1::unique_ptr.4447"* %241, null
  br i1 %242, label %265, label %243

243:                                              ; preds = %239
  %244 = bitcast %"class.std::__1::unique_ptr.4447"* %241 to i8*
  %245 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %10, align 8
  %246 = icmp eq %"class.std::__1::unique_ptr.4447"* %245, %241
  br i1 %246, label %263, label %247

247:                                              ; preds = %243, %258
  %248 = phi %"class.std::__1::unique_ptr.4447"* [ %249, %258 ], [ %245, %243 ]
  %249 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %248, i64 -1
  %250 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %249, i64 0, i32 0, i32 0, i32 0
  %251 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %250, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %250, align 8
  %252 = icmp eq %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %251, null
  br i1 %252, label %258, label %253

253:                                              ; preds = %247
  %254 = bitcast %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %251 to void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)***
  %255 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)**, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*** %254, align 8
  %256 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %255, i64 2
  %257 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %256, align 8
  call void %257(%"class.blink::protocol::CSS::CSSComputedStyleProperty"* nonnull %251) #16
  br label %258

258:                                              ; preds = %253, %247
  %259 = icmp eq %"class.std::__1::unique_ptr.4447"* %249, %241
  br i1 %259, label %260, label %247

260:                                              ; preds = %258
  %261 = bitcast %"class.std::__1::vector.4445"* %2 to i8**
  %262 = load i8*, i8** %261, align 8
  br label %263

263:                                              ; preds = %260, %243
  %264 = phi i8* [ %262, %260 ], [ %244, %243 ]
  store %"class.std::__1::unique_ptr.4447"* %241, %"class.std::__1::unique_ptr.4447"** %10, align 8
  call void @_ZdlPv(i8* %264) #18
  br label %265

265:                                              ; preds = %263, %239
  %266 = bitcast %"class.std::__1::vector.4445"* %2 to i8*
  call void @_ZdlPv(i8* %266) #18
  br label %267

267:                                              ; preds = %237, %265
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.std::__1::vector.3613"* @_ZN5blink17InspectorCSSAgent38BuildArrayForComputedStyleUpdatedNodesEv(%"class.blink::InspectorCSSAgent"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = tail call i8* @_Znwm(i64 24) #18
  %3 = bitcast i8* %2 to %"class.std::__1::vector.3613"*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %2, i8 0, i64 24, i1 false) #16
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 2
  %5 = load i32, i32* %4, align 4
  %6 = icmp eq i32 %5, 0
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 0
  %8 = load i32*, i32** %7, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 1
  %10 = load i32, i32* %9, align 8
  %11 = zext i32 %10 to i64
  %12 = getelementptr inbounds i32, i32* %8, i64 %11
  br i1 %6, label %34, label %13

13:                                               ; preds = %1
  %14 = icmp eq i32 %10, 0
  br i1 %14, label %23, label %15

15:                                               ; preds = %13, %20
  %16 = phi i32* [ %21, %20 ], [ %8, %13 ]
  %17 = load i32, i32* %16, align 4
  %18 = add i32 %17, 1
  %19 = icmp ult i32 %18, 2
  br i1 %19, label %20, label %23

20:                                               ; preds = %15
  %21 = getelementptr inbounds i32, i32* %16, i64 1
  %22 = icmp eq i32* %21, %12
  br i1 %22, label %34, label %15

23:                                               ; preds = %15, %13
  %24 = phi i32* [ %8, %13 ], [ %16, %15 ]
  %25 = icmp eq i32* %24, %12
  br i1 %25, label %34, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds i8, i8* %2, i64 8
  %28 = bitcast i8* %27 to i32**
  %29 = getelementptr inbounds i8, i8* %2, i64 16
  %30 = bitcast i8* %29 to i32**
  %31 = bitcast i8* %27 to i64*
  %32 = bitcast i8* %2 to i64*
  %33 = bitcast i8* %29 to i64*
  br label %35

34:                                               ; preds = %20, %90, %101, %98, %1, %23
  ret %"class.std::__1::vector.3613"* %3

35:                                               ; preds = %103, %26
  %36 = phi i64 [ 0, %26 ], [ %106, %103 ]
  %37 = phi i32* [ null, %26 ], [ %105, %103 ]
  %38 = phi i32* [ null, %26 ], [ %104, %103 ]
  %39 = phi i32* [ %24, %26 ], [ %94, %103 ]
  %40 = load i32, i32* %39, align 4
  %41 = icmp eq i32* %38, %37
  br i1 %41, label %45, label %42

42:                                               ; preds = %35
  store i32 %40, i32* %38, align 4
  %43 = getelementptr inbounds i32, i32* %38, i64 1
  %44 = ptrtoint i32* %43 to i64
  store i64 %44, i64* %31, align 8
  br label %90

45:                                               ; preds = %35
  %46 = ptrtoint i32* %37 to i64
  %47 = load i64, i64* %32, align 8
  %48 = sub i64 %46, %47
  %49 = ashr exact i64 %48, 2
  %50 = add nsw i64 %49, 1
  %51 = icmp ugt i64 %50, 4611686018427387903
  br i1 %51, label %52, label %54

52:                                               ; preds = %45
  %53 = bitcast i8* %2 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* nonnull %53) #19
  unreachable

54:                                               ; preds = %45
  %55 = icmp ult i64 %49, 2305843009213693951
  br i1 %55, label %56, label %64

56:                                               ; preds = %54
  %57 = ashr exact i64 %48, 1
  %58 = icmp ult i64 %57, %50
  %59 = select i1 %58, i64 %50, i64 %57
  %60 = icmp eq i64 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %56
  %62 = icmp ugt i64 %59, 4611686018427387903
  br i1 %62, label %63, label %64

63:                                               ; preds = %61
  tail call void @abort() #19
  unreachable

64:                                               ; preds = %61, %54
  %65 = phi i64 [ %59, %61 ], [ 4611686018427387903, %54 ]
  %66 = shl i64 %65, 2
  %67 = tail call i8* @_Znwm(i64 %66) #18
  %68 = bitcast i8* %67 to i32*
  br label %69

69:                                               ; preds = %64, %56
  %70 = phi i64 [ %65, %64 ], [ 0, %56 ]
  %71 = phi i32* [ %68, %64 ], [ null, %56 ]
  %72 = getelementptr inbounds i32, i32* %71, i64 %49
  %73 = getelementptr inbounds i32, i32* %71, i64 %70
  %74 = ptrtoint i32* %73 to i64
  store i32 %40, i32* %72, align 4
  %75 = getelementptr inbounds i32, i32* %72, i64 1
  %76 = ptrtoint i32* %75 to i64
  %77 = sub i64 %36, %47
  %78 = ashr exact i64 %77, 2
  %79 = sub nsw i64 0, %78
  %80 = getelementptr inbounds i32, i32* %72, i64 %79
  %81 = ptrtoint i32* %80 to i64
  %82 = icmp sgt i64 %77, 0
  br i1 %82, label %83, label %86

83:                                               ; preds = %69
  %84 = bitcast i32* %80 to i8*
  %85 = inttoptr i64 %47 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %84, i8* align 4 %85, i64 %77, i1 false) #16
  br label %86

86:                                               ; preds = %83, %69
  store i64 %81, i64* %32, align 8
  store i64 %76, i64* %31, align 8
  store i64 %74, i64* %33, align 8
  %87 = icmp eq i64 %47, 0
  br i1 %87, label %90, label %88

88:                                               ; preds = %86
  %89 = inttoptr i64 %47 to i8*
  tail call void @_ZdlPv(i8* %89) #18
  br label %90

90:                                               ; preds = %42, %86, %88
  %91 = getelementptr inbounds i32, i32* %39, i64 1
  %92 = icmp eq i32* %91, %12
  br i1 %92, label %34, label %93

93:                                               ; preds = %90, %98
  %94 = phi i32* [ %99, %98 ], [ %91, %90 ]
  %95 = load i32, i32* %94, align 4
  %96 = add i32 %95, 1
  %97 = icmp ult i32 %96, 2
  br i1 %97, label %98, label %101

98:                                               ; preds = %93
  %99 = getelementptr inbounds i32, i32* %94, i64 1
  %100 = icmp eq i32* %99, %12
  br i1 %100, label %34, label %93

101:                                              ; preds = %93
  %102 = icmp eq i32* %94, %12
  br i1 %102, label %34, label %103

103:                                              ; preds = %101
  %104 = load i32*, i32** %28, align 8
  %105 = load i32*, i32** %30, align 8
  %106 = ptrtoint i32* %104 to i64
  br label %35
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent25trackComputedStyleUpdatesENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, %"class.std::__1::vector.4445"*) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %5 = bitcast i32* %4 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent25trackComputedStyleUpdatesENSt3__110unique_ptrINS1_6vectorINS2_INS_8protocol3CSS24CSSComputedStylePropertyENS1_14default_deleteIS6_EEEENS1_9allocatorIS9_EEEENS7_ISC_EEEE(%"class.crdtp::DispatchResponse"* sret %0, %"class.blink::InspectorCSSAgent"* %5, %"class.std::__1::vector.4445"* %2)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent24takeComputedStyleUpdatesENSt3__110unique_ptrINS_8protocol3CSS7Backend32TakeComputedStyleUpdatesCallbackENS1_14default_deleteIS6_EEEE(%"class.blink::InspectorCSSAgent"* nocapture, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*) unnamed_addr #0 align 2 {
  %3 = alloca %"class.crdtp::DispatchResponse", align 8
  %4 = alloca %"class.std::__1::basic_string", align 8
  %5 = alloca %"class.crdtp::DispatchResponse", align 8
  %6 = alloca %"class.std::__1::basic_string", align 8
  %7 = ptrtoint %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1 to i64
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 25, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %38

11:                                               ; preds = %2
  %12 = bitcast %"class.crdtp::DispatchResponse"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %12) #16
  %13 = tail call i8* @_Znwm(i64 48) #18
  %14 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %13, i8** %14, align 8
  %15 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast i64* %15 to <2 x i64>*
  store <2 x i64> <i64 47, i64 -9223372036854775760>, <2 x i64>* %16, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %13, i8* align 1 getelementptr inbounds ([48 x i8], [48 x i8]* @.str.26, i64 0, i64 0), i64 47, i1 false) #16
  %17 = getelementptr inbounds i8, i8* %13, i64 47
  store i8 0, i8* %17, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %3, %"class.std::__1::basic_string"* nonnull %4) #16
  %18 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)***
  %19 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)** %19, i64 1
  %21 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)** %20, align 8
  call void %21(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %3) #16
  %22 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %3, i64 0, i32 1
  %23 = bitcast %"class.std::__1::basic_string"* %22 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %24 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %23, i64 0, i32 1, i32 0
  %25 = load i8, i8* %24, align 1
  %26 = icmp slt i8 %25, 0
  br i1 %26, label %27, label %30

27:                                               ; preds = %11
  %28 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @_ZdlPv(i8* %29) #18
  br label %30

30:                                               ; preds = %11, %27
  %31 = bitcast %"class.std::__1::basic_string"* %4 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %35, label %37

35:                                               ; preds = %30
  %36 = load i8*, i8** %14, align 8
  call void @_ZdlPv(i8* %36) #18
  br label %37

37:                                               ; preds = %30, %35
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %12) #16
  br label %89

38:                                               ; preds = %2
  %39 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 26
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.3322", %"class.std::__1::unique_ptr.3322"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %40, align 8
  %42 = icmp eq %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %41, null
  br i1 %42, label %70, label %43

43:                                               ; preds = %38
  %44 = bitcast %"class.crdtp::DispatchResponse"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %44) #16
  %45 = tail call i8* @_Znwm(i64 48) #18
  %46 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8* %45, i8** %46, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = bitcast i64* %47 to <2 x i64>*
  store <2 x i64> <i64 45, i64 -9223372036854775760>, <2 x i64>* %48, align 8
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 1 %45, i8* align 1 getelementptr inbounds ([46 x i8], [46 x i8]* @.str.27, i64 0, i64 0), i64 45, i1 false) #16
  %49 = getelementptr inbounds i8, i8* %45, i64 45
  store i8 0, i8* %49, align 1
  call void @_ZN5crdtp16DispatchResponse11ServerErrorENSt3__112basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEE(%"class.crdtp::DispatchResponse"* nonnull sret %5, %"class.std::__1::basic_string"* nonnull %6) #16
  %50 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)***
  %51 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)*** %50, align 8
  %52 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)** %51, i64 1
  %53 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.crdtp::DispatchResponse"*)** %52, align 8
  call void %53(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1, %"class.crdtp::DispatchResponse"* nonnull dereferenceable(32) %5) #16
  %54 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %5, i64 0, i32 1
  %55 = bitcast %"class.std::__1::basic_string"* %54 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %56 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %55, i64 0, i32 1, i32 0
  %57 = load i8, i8* %56, align 1
  %58 = icmp slt i8 %57, 0
  br i1 %58, label %59, label %62

59:                                               ; preds = %43
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %54, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load i8*, i8** %60, align 8
  call void @_ZdlPv(i8* %61) #18
  br label %62

62:                                               ; preds = %43, %59
  %63 = bitcast %"class.std::__1::basic_string"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %64 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %63, i64 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1
  %66 = icmp slt i8 %65, 0
  br i1 %66, label %67, label %69

67:                                               ; preds = %62
  %68 = load i8*, i8** %46, align 8
  call void @_ZdlPv(i8* %68) #18
  br label %69

69:                                               ; preds = %62, %67
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %44) #16
  br label %89

70:                                               ; preds = %38
  %71 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27
  %72 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 2
  %73 = load i32, i32* %72, align 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %87, label %75

75:                                               ; preds = %70
  %76 = tail call %"class.std::__1::vector.3613"* @_ZN5blink17InspectorCSSAgent38BuildArrayForComputedStyleUpdatedNodesEv(%"class.blink::InspectorCSSAgent"* %0)
  %77 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)***
  %78 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)*** %77, align 8
  %79 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)** %78, align 8
  tail call void %79(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1, %"class.std::__1::vector.3613"* %76) #16
  %80 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %71, i64 0, i32 0, i32 0
  %81 = load i32*, i32** %80, align 8
  %82 = icmp eq i32* %81, null
  br i1 %82, label %89, label %83

83:                                               ; preds = %75
  %84 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 1
  %85 = bitcast i32* %81 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %85) #16
  %86 = bitcast %"class.WTF::HashSet.3219"* %71 to i64*
  store atomic i64 0, i64* %86 monotonic, align 8
  store i32 0, i32* %84, align 8
  store i32 0, i32* %72, align 4
  br label %89

87:                                               ; preds = %70
  %88 = bitcast %"class.std::__1::unique_ptr.3322"* %39 to i64*
  store i64 %7, i64* %88, align 8
  br label %96

89:                                               ; preds = %83, %75, %69, %37
  %90 = icmp eq %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1, null
  br i1 %90, label %96, label %91

91:                                               ; preds = %89
  %92 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)***
  %93 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*** %92, align 8
  %94 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %93, i64 4
  %95 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %94, align 8
  call void %95(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* nonnull %1) #16
  br label %96

96:                                               ; preds = %87, %89, %91
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent24takeComputedStyleUpdatesENSt3__110unique_ptrINS_8protocol3CSS7Backend32TakeComputedStyleUpdatesCallbackENS1_14default_deleteIS6_EEEE(%"class.blink::InspectorCSSAgent"* nocapture, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 27, i32 0, i32 3
  %4 = bitcast i32* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZN5blink17InspectorCSSAgent24takeComputedStyleUpdatesENSt3__110unique_ptrINS_8protocol3CSS7Backend32TakeComputedStyleUpdatesCallbackENS1_14default_deleteIS6_EEEE(%"class.blink::InspectorCSSAgent"* %4, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent22DidUpdateComputedStyleEPNS_7ElementEPKNS_13ComputedStyleES5_(%"class.blink::InspectorCSSAgent"*, %"class.blink::Element"*, %"class.blink::ComputedStyle"*, %"class.blink::ComputedStyle"*) local_unnamed_addr #0 align 2 {
  %5 = alloca i32, align 4
  %6 = alloca %"class.blink::CSSPropertyRef", align 8
  %7 = alloca %"class.WTF::String", align 8
  %8 = alloca %"class.WTF::String", align 8
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 25, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %338, label %12

12:                                               ; preds = %4
  %13 = icmp ne %"class.blink::ComputedStyle"* %2, null
  %14 = icmp ne %"class.blink::ComputedStyle"* %3, null
  %15 = or i1 %13, %14
  br i1 %15, label %16, label %338

16:                                               ; preds = %12
  %17 = bitcast i32* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3, i32 0, i32 0
  %19 = load %"class.blink::InspectorDOMAgent"*, %"class.blink::InspectorDOMAgent"** %18, align 8
  %20 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0
  %21 = tail call i32 @_ZN5blink17InspectorDOMAgent11BoundNodeIdEPNS_4NodeE(%"class.blink::InspectorDOMAgent"* %19, %"class.blink::Node"* %20) #16
  store i32 %21, i32* %5, align 4
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %337, label %23

23:                                               ; preds = %16
  %24 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27
  %25 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %24, i64 0, i32 0, i32 0
  %26 = load i32*, i32** %25, align 8
  %27 = icmp eq i32* %26, null
  br i1 %27, label %83, label %28

28:                                               ; preds = %23
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 1
  %30 = load i32, i32* %29, align 8
  %31 = add i32 %30, -1
  %32 = zext i32 %31 to i64
  %33 = shl i32 %21, 15
  %34 = xor i32 %33, -1
  %35 = add i32 %21, %34
  %36 = lshr i32 %35, 10
  %37 = xor i32 %36, %35
  %38 = mul i32 %37, 9
  %39 = lshr i32 %38, 6
  %40 = xor i32 %39, %38
  %41 = shl i32 %40, 11
  %42 = xor i32 %41, -1
  %43 = add i32 %40, %42
  %44 = lshr i32 %43, 16
  %45 = xor i32 %44, %43
  %46 = and i32 %31, %45
  %47 = zext i32 %46 to i64
  %48 = getelementptr inbounds i32, i32* %26, i64 %47
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, %21
  br i1 %50, label %80, label %51

51:                                               ; preds = %28
  %52 = xor i32 %45, -1
  %53 = lshr i32 %43, 23
  %54 = add i32 %53, %52
  %55 = shl i32 %54, 12
  %56 = xor i32 %55, %54
  %57 = lshr i32 %56, 7
  %58 = xor i32 %57, %56
  %59 = shl i32 %58, 2
  %60 = xor i32 %59, %58
  %61 = lshr i32 %60, 20
  %62 = xor i32 %61, %60
  %63 = or i32 %62, 1
  %64 = zext i32 %63 to i64
  br label %65

65:                                               ; preds = %70, %51
  %66 = phi i32 [ %49, %51 ], [ %76, %70 ]
  %67 = phi i64 [ %47, %51 ], [ %74, %70 ]
  %68 = phi i64 [ 0, %51 ], [ %72, %70 ]
  %69 = icmp eq i32 %66, 0
  br i1 %69, label %83, label %70

70:                                               ; preds = %65
  %71 = icmp eq i64 %68, 0
  %72 = select i1 %71, i64 %64, i64 %68
  %73 = add i64 %72, %67
  %74 = and i64 %73, %32
  %75 = getelementptr inbounds i32, i32* %26, i64 %74
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %76, %21
  br i1 %77, label %78, label %65

78:                                               ; preds = %70
  %79 = getelementptr inbounds i32, i32* %26, i64 %74
  br label %80

80:                                               ; preds = %78, %28
  %81 = phi i32* [ %48, %28 ], [ %79, %78 ]
  %82 = icmp eq i32* %81, null
  br i1 %82, label %83, label %337

83:                                               ; preds = %65, %80, %23
  %84 = load i32, i32* %9, align 4
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 25, i32 0, i32 0
  %87 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %86, align 8
  %88 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 25, i32 0, i32 1
  %89 = load i32, i32* %88, align 8
  %90 = zext i32 %89 to i64
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %87, i64 %90
  br i1 %85, label %337, label %92

92:                                               ; preds = %83
  %93 = icmp eq i32 %89, 0
  br i1 %93, label %101, label %94

94:                                               ; preds = %92, %98
  %95 = phi %"struct.WTF::KeyValuePair.3321"* [ %99, %98 ], [ %87, %92 ]
  %96 = bitcast %"struct.WTF::KeyValuePair.3321"* %95 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %101 [
    i64 -1, label %98
    i64 0, label %98
  ]

98:                                               ; preds = %94, %94
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %95, i64 1
  %100 = icmp eq %"struct.WTF::KeyValuePair.3321"* %99, %91
  br i1 %100, label %337, label %94

101:                                              ; preds = %94, %92
  %102 = phi %"struct.WTF::KeyValuePair.3321"* [ %87, %92 ], [ %95, %94 ]
  %103 = icmp eq %"struct.WTF::KeyValuePair.3321"* %102, %91
  br i1 %103, label %337, label %104

104:                                              ; preds = %101
  %105 = bitcast %"class.blink::CSSPropertyRef"* %6 to i8*
  %106 = getelementptr inbounds %"class.blink::Element", %"class.blink::Element"* %1, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %107 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 0
  %108 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 1
  %109 = bitcast %"class.blink::CustomProperty"* %108 to %"class.blink::CSSProperty"*
  %110 = bitcast %"class.WTF::String"* %7 to i8*
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %7, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %8 to i8*
  %113 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %8, i64 0, i32 0, i32 0
  %114 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %24, i64 0, i32 0
  %115 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = getelementptr inbounds %"class.blink::CSSPropertyRef", %"class.blink::CSSPropertyRef"* %6, i64 0, i32 1, i32 1, i32 0, i32 0, i32 0
  br label %117

117:                                              ; preds = %104, %335
  %118 = phi %"struct.WTF::KeyValuePair.3321"* [ %102, %104 ], [ %329, %335 ]
  call void @llvm.lifetime.start.p0i8(i64 48, i8* nonnull %105) #16
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %105, i8 -86, i64 48, i1 false)
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %118, i64 0, i32 0
  %120 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %106, align 8
  %121 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %120, i64 0, i32 2, i32 0, i32 0
  %122 = load %"class.blink::Document"*, %"class.blink::Document"** %121, align 8
  call void @_ZN5blink14CSSPropertyRefC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::CSSPropertyRef"* nonnull %6, %"class.WTF::String"* dereferenceable(8) %119, %"class.blink::Document"* dereferenceable(2848) %122) #16
  %123 = load i32, i32* %107, align 8
  switch i32 %123, label %124 [
    i32 0, label %307
    i32 1, label %127
  ]

124:                                              ; preds = %117
  %125 = and i32 %123, 1023
  %126 = call dereferenceable(24) %"class.blink::CSSProperty"* @_ZN5blink11CSSProperty3GetENS_13CSSPropertyIDE(i32 %125) #16
  br label %127

127:                                              ; preds = %117, %124
  %128 = phi %"class.blink::CSSProperty"* [ %126, %124 ], [ %109, %117 ]
  br i1 %13, label %129, label %131

129:                                              ; preds = %127
  %130 = call %"class.blink::CSSValue"* @_ZN5blink18ComputedStyleUtils21ComputedPropertyValueERKNS_11CSSPropertyERKNS_13ComputedStyleEPKNS_12LayoutObjectE(%"class.blink::CSSProperty"* dereferenceable(24) %128, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %2, %"class.blink::LayoutObject"* null) #16
  br label %131

131:                                              ; preds = %127, %129
  %132 = phi %"class.blink::CSSValue"* [ %130, %129 ], [ null, %127 ]
  br i1 %14, label %133, label %135

133:                                              ; preds = %131
  %134 = call %"class.blink::CSSValue"* @_ZN5blink18ComputedStyleUtils21ComputedPropertyValueERKNS_11CSSPropertyERKNS_13ComputedStyleEPKNS_12LayoutObjectE(%"class.blink::CSSProperty"* dereferenceable(24) %128, %"class.blink::ComputedStyle"* nonnull dereferenceable(104) %3, %"class.blink::LayoutObject"* null) #16
  br label %135

135:                                              ; preds = %131, %133
  %136 = phi %"class.blink::CSSValue"* [ %134, %133 ], [ null, %131 ]
  %137 = icmp eq %"class.blink::CSSValue"* %132, %136
  br i1 %137, label %307, label %138

138:                                              ; preds = %135
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %110) #16
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %111, align 8
  %139 = icmp eq %"class.blink::CSSValue"* %132, null
  br i1 %139, label %142, label %140

140:                                              ; preds = %138
  %141 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %132) #16
  store %"class.WTF::StringImpl"* %141, %"class.WTF::StringImpl"** %111, align 8
  br label %143

142:                                              ; preds = %138
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %7, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i64 0) #16
  br label %143

143:                                              ; preds = %142, %140
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %112) #16
  store %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*), %"class.WTF::StringImpl"** %113, align 8
  %144 = icmp eq %"class.blink::CSSValue"* %136, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %143
  %146 = call %"class.WTF::StringImpl"* @_ZNK5blink8CSSValue7CssTextEv(%"class.blink::CSSValue"* nonnull %136) #16
  store %"class.WTF::StringImpl"* %146, %"class.WTF::StringImpl"** %113, align 8
  br label %149

147:                                              ; preds = %143
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %8, i8* getelementptr inbounds ([1 x i8], [1 x i8]* @.str.12, i64 0, i64 0), i64 0) #16
  %148 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  br label %149

149:                                              ; preds = %147, %145
  %150 = phi %"class.WTF::StringImpl"* [ %148, %147 ], [ %146, %145 ]
  %151 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %152 = call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %151, %"class.WTF::StringImpl"* %150) #16
  br i1 %152, label %273, label %153

153:                                              ; preds = %149
  %154 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %118, i64 0, i32 1, i32 0, i32 0
  %155 = load %"class.WTF::String"*, %"class.WTF::String"** %154, align 8
  %156 = icmp eq %"class.WTF::String"* %155, null
  br i1 %156, label %273, label %157

157:                                              ; preds = %153
  %158 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %118, i64 0, i32 1, i32 0, i32 1
  %159 = load i32, i32* %158, align 8
  %160 = add i32 %159, -1
  %161 = zext i32 %160 to i64
  %162 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %163 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %162, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %164 = load atomic i32, i32* %163 monotonic, align 4
  %165 = lshr i32 %164, 8
  %166 = icmp eq i32 %165, 0
  br i1 %166, label %167, label %169

167:                                              ; preds = %157
  %168 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %162) #16
  br label %169

169:                                              ; preds = %167, %157
  %170 = phi i32 [ %168, %167 ], [ %165, %157 ]
  %171 = and i32 %170, %160
  %172 = zext i32 %171 to i64
  %173 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 %172
  %174 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %173, i64 0, i32 0, i32 0
  %175 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %174, align 8
  %176 = icmp eq %"class.WTF::StringImpl"* %175, null
  br i1 %176, label %213, label %177

177:                                              ; preds = %169
  %178 = xor i32 %170, -1
  %179 = lshr i32 %170, 23
  %180 = add i32 %179, %178
  %181 = shl i32 %180, 12
  %182 = xor i32 %181, %180
  %183 = lshr i32 %182, 7
  %184 = xor i32 %183, %182
  %185 = shl i32 %184, 2
  %186 = xor i32 %185, %184
  %187 = lshr i32 %186, 20
  %188 = xor i32 %187, %186
  %189 = or i32 %188, 1
  %190 = zext i32 %189 to i64
  br label %191

191:                                              ; preds = %202, %177
  %192 = phi %"class.WTF::StringImpl"* [ %175, %177 ], [ %209, %202 ]
  %193 = phi %"class.WTF::String"* [ %173, %177 ], [ %207, %202 ]
  %194 = phi i64 [ %172, %177 ], [ %206, %202 ]
  %195 = phi i64 [ 0, %177 ], [ %204, %202 ]
  %196 = bitcast %"class.WTF::String"* %193 to i8**
  %197 = load i8*, i8** %196, align 8
  %198 = icmp eq i8* %197, inttoptr (i64 -1 to i8*)
  br i1 %198, label %202, label %199

199:                                              ; preds = %191
  %200 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %201 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %192, %"class.WTF::StringImpl"* %200) #16
  br i1 %201, label %211, label %202

202:                                              ; preds = %199, %191
  %203 = icmp eq i64 %195, 0
  %204 = select i1 %203, i64 %190, i64 %195
  %205 = add i64 %204, %194
  %206 = and i64 %205, %161
  %207 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %155, i64 %206
  %208 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %207, i64 0, i32 0, i32 0
  %209 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %208, align 8
  %210 = icmp eq %"class.WTF::StringImpl"* %209, null
  br i1 %210, label %213, label %191

211:                                              ; preds = %199
  %212 = icmp eq %"class.WTF::String"* %193, null
  br i1 %212, label %213, label %271

213:                                              ; preds = %202, %211, %169
  %214 = load %"class.WTF::String"*, %"class.WTF::String"** %154, align 8
  %215 = icmp eq %"class.WTF::String"* %214, null
  br i1 %215, label %273, label %216

216:                                              ; preds = %213
  %217 = load i32, i32* %158, align 8
  %218 = add i32 %217, -1
  %219 = zext i32 %218 to i64
  %220 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %221 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %220, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %222 = load atomic i32, i32* %221 monotonic, align 4
  %223 = lshr i32 %222, 8
  %224 = icmp eq i32 %223, 0
  br i1 %224, label %225, label %227

225:                                              ; preds = %216
  %226 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %220) #16
  br label %227

227:                                              ; preds = %225, %216
  %228 = phi i32 [ %226, %225 ], [ %223, %216 ]
  %229 = and i32 %228, %218
  %230 = zext i32 %229 to i64
  %231 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %214, i64 %230
  %232 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %231, i64 0, i32 0, i32 0
  %233 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %232, align 8
  %234 = icmp eq %"class.WTF::StringImpl"* %233, null
  br i1 %234, label %273, label %235

235:                                              ; preds = %227
  %236 = xor i32 %228, -1
  %237 = lshr i32 %228, 23
  %238 = add i32 %237, %236
  %239 = shl i32 %238, 12
  %240 = xor i32 %239, %238
  %241 = lshr i32 %240, 7
  %242 = xor i32 %241, %240
  %243 = shl i32 %242, 2
  %244 = xor i32 %243, %242
  %245 = lshr i32 %244, 20
  %246 = xor i32 %245, %244
  %247 = or i32 %246, 1
  %248 = zext i32 %247 to i64
  br label %249

249:                                              ; preds = %260, %235
  %250 = phi %"class.WTF::StringImpl"* [ %233, %235 ], [ %267, %260 ]
  %251 = phi %"class.WTF::String"* [ %231, %235 ], [ %265, %260 ]
  %252 = phi i64 [ %230, %235 ], [ %264, %260 ]
  %253 = phi i64 [ 0, %235 ], [ %262, %260 ]
  %254 = bitcast %"class.WTF::String"* %251 to i8**
  %255 = load i8*, i8** %254, align 8
  %256 = icmp eq i8* %255, inttoptr (i64 -1 to i8*)
  br i1 %256, label %260, label %257

257:                                              ; preds = %249
  %258 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %259 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %250, %"class.WTF::StringImpl"* %258) #16
  br i1 %259, label %269, label %260

260:                                              ; preds = %257, %249
  %261 = icmp eq i64 %253, 0
  %262 = select i1 %261, i64 %248, i64 %253
  %263 = add i64 %262, %252
  %264 = and i64 %263, %219
  %265 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %214, i64 %264
  %266 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %265, i64 0, i32 0, i32 0
  %267 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %266, align 8
  %268 = icmp eq %"class.WTF::StringImpl"* %267, null
  br i1 %268, label %273, label %249

269:                                              ; preds = %257
  %270 = icmp eq %"class.WTF::String"* %251, null
  br i1 %270, label %273, label %271

271:                                              ; preds = %211, %269
  %272 = call { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable.3220"* %114, i32* nonnull dereferenceable(4) %5, i32* nonnull dereferenceable(4) %5) #16
  br label %273

273:                                              ; preds = %260, %269, %153, %227, %213, %149, %271
  %274 = phi i32 [ 1, %271 ], [ 3, %149 ], [ 0, %269 ], [ 0, %213 ], [ 0, %227 ], [ 0, %153 ], [ 0, %260 ]
  %275 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %113, align 8
  %276 = icmp eq %"class.WTF::StringImpl"* %275, null
  br i1 %276, label %290, label %277

277:                                              ; preds = %273
  %278 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %279 = load atomic i32, i32* %278 monotonic, align 4
  %280 = and i32 %279, 2
  %281 = icmp eq i32 %280, 0
  %282 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %275, i64 0, i32 0
  %283 = load i32, i32* %282, align 4
  br i1 %281, label %284, label %286

284:                                              ; preds = %277
  %285 = add i32 %283, -1
  store i32 %285, i32* %282, align 4
  br label %286

286:                                              ; preds = %284, %277
  %287 = phi i32 [ %285, %284 ], [ %283, %277 ]
  %288 = icmp eq i32 %287, 0
  br i1 %288, label %289, label %290

289:                                              ; preds = %286
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %275) #16
  br label %290

290:                                              ; preds = %273, %286, %289
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %112) #16
  %291 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %111, align 8
  %292 = icmp eq %"class.WTF::StringImpl"* %291, null
  br i1 %292, label %306, label %293

293:                                              ; preds = %290
  %294 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %295 = load atomic i32, i32* %294 monotonic, align 4
  %296 = and i32 %295, 2
  %297 = icmp eq i32 %296, 0
  %298 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %291, i64 0, i32 0
  %299 = load i32, i32* %298, align 4
  br i1 %297, label %300, label %302

300:                                              ; preds = %293
  %301 = add i32 %299, -1
  store i32 %301, i32* %298, align 4
  br label %302

302:                                              ; preds = %300, %293
  %303 = phi i32 [ %301, %300 ], [ %299, %293 ]
  %304 = icmp eq i32 %303, 0
  br i1 %304, label %305, label %306

305:                                              ; preds = %302
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %291) #16
  br label %306

306:                                              ; preds = %290, %302, %305
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %110) #16
  br label %307

307:                                              ; preds = %117, %306, %135
  %308 = phi i32 [ 3, %117 ], [ %274, %306 ], [ 3, %135 ]
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [25 x i8*] }, { [25 x i8*] }* @_ZTVN5blink14CustomPropertyE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %115, align 8
  %309 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %116, align 8
  %310 = icmp eq %"class.WTF::StringImpl"* %309, null
  br i1 %310, label %324, label %311

311:                                              ; preds = %307
  %312 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %313 = load atomic i32, i32* %312 monotonic, align 4
  %314 = and i32 %313, 2
  %315 = icmp eq i32 %314, 0
  %316 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %309, i64 0, i32 0
  %317 = load i32, i32* %316, align 4
  br i1 %315, label %318, label %320

318:                                              ; preds = %311
  %319 = add i32 %317, -1
  store i32 %319, i32* %316, align 4
  br label %320

320:                                              ; preds = %318, %311
  %321 = phi i32 [ %319, %318 ], [ %317, %311 ]
  %322 = icmp eq i32 %321, 0
  br i1 %322, label %323, label %324

323:                                              ; preds = %320
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %309) #16
  br label %324

324:                                              ; preds = %307, %320, %323
  call void @llvm.lifetime.end.p0i8(i64 48, i8* nonnull %105) #16
  switch i32 %308, label %337 [
    i32 0, label %325
    i32 3, label %325
  ]

325:                                              ; preds = %324, %324
  %326 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %118, i64 1
  %327 = icmp eq %"struct.WTF::KeyValuePair.3321"* %326, %91
  br i1 %327, label %337, label %328

328:                                              ; preds = %325, %332
  %329 = phi %"struct.WTF::KeyValuePair.3321"* [ %333, %332 ], [ %326, %325 ]
  %330 = bitcast %"struct.WTF::KeyValuePair.3321"* %329 to i64*
  %331 = load i64, i64* %330, align 8
  switch i64 %331, label %335 [
    i64 -1, label %332
    i64 0, label %332
  ]

332:                                              ; preds = %328, %328
  %333 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %329, i64 1
  %334 = icmp eq %"struct.WTF::KeyValuePair.3321"* %333, %91
  br i1 %334, label %337, label %328

335:                                              ; preds = %328
  %336 = icmp eq %"struct.WTF::KeyValuePair.3321"* %329, %91
  br i1 %336, label %337, label %117

337:                                              ; preds = %98, %325, %324, %335, %332, %83, %101, %80, %16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %17) #16
  br label %338

338:                                              ; preds = %12, %4, %337
  ret void
}

declare void @_ZN5blink14CSSPropertyRefC1ERKN3WTF6StringERKNS_8DocumentE(%"class.blink::CSSPropertyRef"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.blink::CSSValue"* @_ZN5blink18ComputedStyleUtils21ComputedPropertyValueERKNS_11CSSPropertyERKNS_13ComputedStyleEPKNS_12LayoutObjectE(%"class.blink::CSSProperty"* dereferenceable(24), %"class.blink::ComputedStyle"* dereferenceable(104), %"class.blink::LayoutObject"*) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent4WillERKNS_5probe16RecalculateStyleE(%"class.blink::InspectorCSSAgent"* nocapture, %"class.blink::probe::RecalculateStyle"* nocapture dereferenceable(32)) local_unnamed_addr #5 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent3DidERKNS_5probe16RecalculateStyleE(%"class.blink::InspectorCSSAgent"* nocapture, %"class.blink::probe::RecalculateStyle"* nocapture readnone dereferenceable(32)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 26, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %31, label %11

11:                                               ; preds = %6
  %12 = tail call %"class.std::__1::vector.3613"* @_ZN5blink17InspectorCSSAgent38BuildArrayForComputedStyleUpdatedNodesEv(%"class.blink::InspectorCSSAgent"* %0)
  %13 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %4 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)***
  %14 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)*** %13, align 8
  %15 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.std::__1::vector.3613"*)** %14, align 8
  tail call void %15(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* nonnull %4, %"class.std::__1::vector.3613"* %12) #16
  %16 = getelementptr inbounds %"class.WTF::HashSet.3219", %"class.WTF::HashSet.3219"* %7, i64 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  %18 = icmp eq i32* %17, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %11
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 27, i32 0, i32 1
  %21 = bitcast i32* %17 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %21) #16
  %22 = bitcast %"class.WTF::HashSet.3219"* %7 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  store i32 0, i32* %20, align 8
  store i32 0, i32* %8, align 4
  br label %23

23:                                               ; preds = %11, %19
  %24 = load %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %3, align 8
  store %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* null, %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"** %3, align 8
  %25 = icmp eq %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %24, null
  br i1 %25, label %31, label %26

26:                                               ; preds = %23
  %27 = bitcast %"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* %24 to void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)***
  %28 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)**, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*** %27, align 8
  %29 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %28, i64 4
  %30 = load void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)*, void (%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"*)** %29, align 8
  tail call void %30(%"class.blink::protocol::CSS::Backend::TakeComputedStyleUpdatesCallback"* nonnull %24) #16
  br label %31

31:                                               ; preds = %2, %26, %23, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 3
  %4 = bitcast %"class.blink::Member.3172"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 4
  %15 = bitcast %"class.blink::Member.2916"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 5
  %26 = bitcast %"class.blink::Member.3112"* %25 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %24
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %1, i8* nonnull %30, i8* nonnull %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv) #16
  br label %35

35:                                               ; preds = %24, %29
  %36 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 6
  %37 = bitcast %"class.blink::Member.2937"* %36 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %35
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %1, i8* nonnull %41, i8* nonnull %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv) #16
  br label %46

46:                                               ; preds = %35, %40
  %47 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 7
  %48 = bitcast %"class.blink::Member.3262"* %47 to i64*
  %49 = load atomic i64, i64* %48 monotonic, align 8
  %50 = icmp eq i64 %49, 0
  br i1 %50, label %57, label %51

51:                                               ; preds = %46
  %52 = inttoptr i64 %49 to i8*
  %53 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %54 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %53, align 8
  %55 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %54, i64 5
  %56 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %55, align 8
  tail call void %56(%"class.blink::Visitor"* %1, i8* nonnull %52, i8* nonnull %52, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_26InspectorResourceContainerEE5TraceEPNS_7VisitorEPKv) #16
  br label %57

57:                                               ; preds = %46, %51
  %58 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 8
  %59 = bitcast %"class.blink::HeapHashMap.3271"* %58 to i64*
  %60 = load atomic i64, i64* %59 monotonic, align 8
  %61 = bitcast %"class.blink::HeapHashMap.3271"* %58 to i8**
  %62 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8**)***
  %63 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %62, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %63, i64 11
  %65 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %1, i8** %61) #16
  %66 = icmp eq i64 %60, 0
  br i1 %66, label %73, label %67

67:                                               ; preds = %57
  %68 = inttoptr i64 %60 to i8*
  %69 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %69, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %1, i8* nonnull %68, i8* nonnull %68, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %73

73:                                               ; preds = %57, %67
  %74 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 9
  %75 = bitcast %"class.blink::HeapHashMap.3278"* %74 to i64*
  %76 = load atomic i64, i64* %75 monotonic, align 8
  %77 = bitcast %"class.blink::HeapHashMap.3278"* %74 to i8**
  %78 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %62, align 8
  %79 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %78, i64 11
  %80 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %79, align 8
  tail call void %80(%"class.blink::Visitor"* %1, i8** %77) #16
  %81 = icmp eq i64 %76, 0
  br i1 %81, label %88, label %82

82:                                               ; preds = %73
  %83 = inttoptr i64 %76 to i8*
  %84 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %85 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %84, align 8
  %86 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %85, i64 5
  %87 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %86, align 8
  tail call void %87(%"class.blink::Visitor"* %1, i8* nonnull %83, i8* nonnull %83, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %88

88:                                               ; preds = %73, %82
  %89 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 10
  %90 = bitcast %"class.blink::HeapHashMap.3285"* %89 to i64*
  %91 = load atomic i64, i64* %90 monotonic, align 8
  %92 = bitcast %"class.blink::HeapHashMap.3285"* %89 to i8**
  %93 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %62, align 8
  %94 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %93, i64 11
  %95 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %94, align 8
  tail call void %95(%"class.blink::Visitor"* %1, i8** %92) #16
  %96 = icmp eq i64 %91, 0
  br i1 %96, label %103, label %97

97:                                               ; preds = %88
  %98 = inttoptr i64 %91 to i8*
  %99 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %100 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %99, align 8
  %101 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %100, i64 5
  %102 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %101, align 8
  tail call void %102(%"class.blink::Visitor"* %1, i8* nonnull %98, i8* nonnull %98, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %103

103:                                              ; preds = %88, %97
  %104 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 11
  %105 = bitcast %"class.blink::HeapHashMap.3292"* %104 to i64*
  %106 = load atomic i64, i64* %105 monotonic, align 8
  %107 = bitcast %"class.blink::HeapHashMap.3292"* %104 to i8**
  %108 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %62, align 8
  %109 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %108, i64 11
  %110 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %109, align 8
  tail call void %110(%"class.blink::Visitor"* %1, i8** %107) #16
  %111 = icmp eq i64 %106, 0
  br i1 %111, label %118, label %112

112:                                              ; preds = %103
  %113 = inttoptr i64 %106 to i8*
  %114 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %115 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %114, align 8
  %116 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %115, i64 5
  %117 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %116, align 8
  tail call void %117(%"class.blink::Visitor"* %1, i8* nonnull %113, i8* nonnull %113, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %118

118:                                              ; preds = %103, %112
  %119 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 12
  %120 = bitcast %"class.blink::HeapHashSet.3299"* %119 to i64*
  %121 = load atomic i64, i64* %120 monotonic, align 8
  %122 = bitcast %"class.blink::HeapHashSet.3299"* %119 to i8**
  %123 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %62, align 8
  %124 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %123, i64 11
  %125 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %124, align 8
  tail call void %125(%"class.blink::Visitor"* %1, i8** %122) #16
  %126 = icmp eq i64 %121, 0
  br i1 %126, label %133, label %127

127:                                              ; preds = %118
  %128 = inttoptr i64 %121 to i8*
  %129 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %130 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %130, i64 5
  %132 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %131, align 8
  tail call void %132(%"class.blink::Visitor"* %1, i8* nonnull %128, i8* nonnull %128, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %133

133:                                              ; preds = %118, %127
  %134 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 13
  %135 = bitcast %"class.blink::HeapHashMap.3305"* %134 to i64*
  %136 = load atomic i64, i64* %135 monotonic, align 8
  %137 = bitcast %"class.blink::HeapHashMap.3305"* %134 to i8**
  %138 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %62, align 8
  %139 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %138, i64 11
  %140 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %139, align 8
  tail call void %140(%"class.blink::Visitor"* %1, i8** %137) #16
  %141 = icmp eq i64 %136, 0
  br i1 %141, label %148, label %142

142:                                              ; preds = %133
  %143 = inttoptr i64 %136 to i8*
  %144 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %145 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %144, align 8
  %146 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %145, i64 5
  %147 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %146, align 8
  tail call void %147(%"class.blink::Visitor"* %1, i8* nonnull %143, i8* nonnull %143, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %148

148:                                              ; preds = %133, %142
  %149 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 17
  %150 = bitcast %"class.blink::Member.389"* %149 to i64*
  %151 = load atomic i64, i64* %150 monotonic, align 8
  %152 = icmp eq i64 %151, 0
  br i1 %152, label %159, label %153

153:                                              ; preds = %148
  %154 = inttoptr i64 %151 to i8*
  %155 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %156 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %155, align 8
  %157 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %156, i64 5
  %158 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %157, align 8
  tail call void %158(%"class.blink::Visitor"* %1, i8* nonnull %154, i8* nonnull %154, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %159

159:                                              ; preds = %148, %153
  %160 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 16
  %161 = bitcast %"class.blink::Member.1313"* %160 to i64*
  %162 = load atomic i64, i64* %161 monotonic, align 8
  %163 = icmp eq i64 %162, 0
  br i1 %163, label %170, label %164

164:                                              ; preds = %159
  %165 = inttoptr i64 %162 to i8*
  %166 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %167 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %166, align 8
  %168 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %167, i64 5
  %169 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %168, align 8
  tail call void %169(%"class.blink::Visitor"* %1, i8* nonnull %165, i8* nonnull %165, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_21StyleRuleUsageTrackerEE5TraceEPNS_7VisitorEPKv) #16
  br label %170

170:                                              ; preds = %159, %164
  %171 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 0, i32 2
  %172 = bitcast %"class.blink::Member.2554"* %171 to i64*
  %173 = load atomic i64, i64* %172 monotonic, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %181, label %175

175:                                              ; preds = %170
  %176 = inttoptr i64 %173 to i8*
  %177 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %178 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %178, i64 5
  %180 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %179, align 8
  tail call void %180(%"class.blink::Visitor"* %1, i8* nonnull %176, i8* nonnull %176, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #16
  br label %181

181:                                              ; preds = %170, %175
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE5TraceEPNS_7VisitorE(%"class.blink::InspectorBaseAgent.3255"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 2
  %4 = bitcast %"class.blink::Member.2554"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn56_NK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 -1, i32 25
  %4 = bitcast %"class.WTF::HashMap.3317"* %3 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZNK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent"* %4, %"class.blink::Visitor"* %1)
  ret void
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent17LocalFontsEnabledEPb(%"class.blink::InspectorCSSAgent"* nocapture readonly, i8* nocapture) local_unnamed_addr #6 align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %0, i64 0, i32 24, i32 2
  %4 = load i8, i8* %3, align 1, !range !4
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  store i8 0, i8* %1, align 1
  br label %7

7:                                                ; preds = %2, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink17InspectorCSSAgent20setLocalFontsEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3688", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24
  %6 = zext i1 %2 to i8
  %7 = zext i1 %2 to i32
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 2
  %9 = load i8, i8* %8, align 1, !range !4
  %10 = zext i8 %9 to i32
  %11 = icmp eq i32 %7, %10
  br i1 %11, label %35, label %12

12:                                               ; preds = %3
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 1
  %14 = load i8, i8* %13, align 8, !range !4
  %15 = zext i8 %14 to i32
  %16 = icmp eq i32 %7, %15
  br i1 %16, label %17, label %22

17:                                               ; preds = %12
  %18 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %5 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %19 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %18, align 8
  %20 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %19, i64 2
  %21 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %20, align 8
  tail call void %21(%"class.blink::InspectorAgentState::SimpleField"* %5) #16
  br label %35

22:                                               ; preds = %12
  store i8 %6, i8* %8, align 1
  %23 = bitcast %"class.blink::WebVector.3688"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %23) #16
  %24 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %23, i8 0, i64 24, i1 false) #16
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3688"* nonnull %4) #16
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 0, i32 2
  %26 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %25, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 0, i32 24, i32 0, i32 1
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %26, %"class.WTF::String"* dereferenceable(8) %27, %"class.blink::WebVector.3688"* nonnull %4) #16
  %28 = load i8*, i8** %24, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %34, label %30

30:                                               ; preds = %22
  %31 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %4, i64 0, i32 0, i32 0, i32 1
  %32 = ptrtoint i8* %28 to i64
  %33 = bitcast i8** %31 to i64*
  store i64 %32, i64* %33, align 8
  call void @_ZdlPv(i8* nonnull %28) #18
  br label %34

34:                                               ; preds = %30, %22
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %23) #16
  br label %35

35:                                               ; preds = %3, %17, %34
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn8_N5blink17InspectorCSSAgent20setLocalFontsEnabledEb(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorCSSAgent"*, i1 zeroext) unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::WebVector.3688", align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %1, i64 -1, i32 27, i32 0, i32 3
  %6 = bitcast i32* %5 to %"class.blink::InspectorCSSAgent"*
  %7 = getelementptr inbounds i32, i32* %5, i64 100
  %8 = bitcast i32* %7 to %"class.blink::InspectorAgentState::SimpleField"*
  %9 = zext i1 %2 to i8
  %10 = zext i1 %2 to i32
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent", %"class.blink::InspectorCSSAgent"* %6, i64 0, i32 24, i32 2
  %12 = load i8, i8* %11, align 1, !range !4, !noalias !76
  %13 = zext i8 %12 to i32
  %14 = icmp eq i32 %10, %13
  br i1 %14, label %41, label %15

15:                                               ; preds = %3
  %16 = getelementptr inbounds i32, i32* %5, i64 106
  %17 = bitcast i32* %16 to i8*
  %18 = load i8, i8* %17, align 8, !range !4, !noalias !76
  %19 = zext i8 %18 to i32
  %20 = icmp eq i32 %10, %19
  br i1 %20, label %21, label %26

21:                                               ; preds = %15
  %22 = bitcast i32* %7 to void (%"class.blink::InspectorAgentState::SimpleField"*)***
  %23 = load void (%"class.blink::InspectorAgentState::SimpleField"*)**, void (%"class.blink::InspectorAgentState::SimpleField"*)*** %22, align 8, !noalias !76
  %24 = getelementptr inbounds void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %23, i64 2
  %25 = load void (%"class.blink::InspectorAgentState::SimpleField"*)*, void (%"class.blink::InspectorAgentState::SimpleField"*)** %24, align 8
  tail call void %25(%"class.blink::InspectorAgentState::SimpleField"* %8) #16
  br label %41

26:                                               ; preds = %15
  store i8 %9, i8* %11, align 1, !noalias !76
  %27 = bitcast %"class.blink::WebVector.3688"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16, !noalias !76
  %28 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 0, i64 24, i1 false) #16, !noalias !76
  call void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext %2, %"class.blink::WebVector.3688"* nonnull %4) #16
  %29 = getelementptr inbounds i32, i32* %5, i64 104
  %30 = bitcast i32* %29 to %"class.blink::InspectorSessionState"**
  %31 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %30, align 8, !noalias !76
  %32 = getelementptr inbounds i32, i32* %5, i64 102
  %33 = bitcast i32* %32 to %"class.WTF::String"*
  call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %31, %"class.WTF::String"* dereferenceable(8) %33, %"class.blink::WebVector.3688"* nonnull %4) #16
  %34 = load i8*, i8** %28, align 8, !noalias !76
  %35 = icmp eq i8* %34, null
  br i1 %35, label %40, label %36

36:                                               ; preds = %26
  %37 = getelementptr inbounds %"class.blink::WebVector.3688", %"class.blink::WebVector.3688"* %4, i64 0, i32 0, i32 0, i32 1
  %38 = ptrtoint i8* %34 to i64
  %39 = bitcast i8** %37 to i64*
  store i64 %38, i64* %39, align 8, !noalias !76
  call void @_ZdlPv(i8* nonnull %34) #18
  br label %40

40:                                               ; preds = %36, %26
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16, !noalias !76
  br label %41

41:                                               ; preds = %3, %21, %40
  call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE4InitEPNS_13CoreProbeSinkEPN5crdtp14UberDispatcherEPNS_21InspectorSessionStateE(%"class.blink::InspectorBaseAgent.3255"*, %"class.blink::CoreProbeSink"*, %"class.crdtp::UberDispatcher"*, %"class.blink::InspectorSessionState"*) unnamed_addr #0 comdat align 2 {
  %5 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 2
  %6 = ptrtoint %"class.blink::CoreProbeSink"* %1 to i64
  %7 = bitcast %"class.blink::Member.2554"* %5 to i64*
  store atomic i64 %6, i64* %7 monotonic, align 8
  %8 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %13, label %10

10:                                               ; preds = %4
  %11 = bitcast %"class.blink::CoreProbeSink"* %1 to i8*
  %12 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %11) #16
  br label %13

13:                                               ; preds = %4, %10
  %14 = tail call i8* @_Znwm(i64 8) #18
  %15 = getelementptr inbounds %"class.crdtp::UberDispatcher", %"class.crdtp::UberDispatcher"* %2, i64 0, i32 1
  %16 = bitcast %"class.crdtp::FrontendChannel"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = bitcast i8* %14 to i64*
  store i64 %17, i64* %18, align 8
  %19 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %20 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %19, align 8
  %21 = bitcast %"class.blink::protocol::CSS::Frontend"** %19 to i8**
  store i8* %14, i8** %21, align 8
  %22 = icmp eq %"class.blink::protocol::CSS::Frontend"* %20, null
  br i1 %22, label %25, label %23

23:                                               ; preds = %13
  %24 = bitcast %"class.blink::protocol::CSS::Frontend"* %20 to i8*
  tail call void @_ZdlPv(i8* %24) #18
  br label %25

25:                                               ; preds = %13, %23
  %26 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 1
  tail call void @_ZN5blink8protocol3CSS10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"* %2, %"class.blink::protocol::CSS::Backend"* %26) #16
  %27 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 3
  tail call void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"* %27, %"class.blink::InspectorSessionState"* %3) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7DisposeEv(%"class.blink::InspectorBaseAgent.3255"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.crdtp::DispatchResponse", align 8
  %3 = bitcast %"class.blink::InspectorBaseAgent.3255"* %0 to void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)***
  %4 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)**, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)** %4, i64 8
  %6 = load void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)*, void (%"class.crdtp::DispatchResponse"*, %"class.blink::InspectorBaseAgent.3255"*)** %5, align 8
  call void %6(%"class.crdtp::DispatchResponse"* nonnull sret %2, %"class.blink::InspectorBaseAgent.3255"* %0) #16
  %7 = getelementptr inbounds %"class.crdtp::DispatchResponse", %"class.crdtp::DispatchResponse"* %2, i64 0, i32 1
  %8 = bitcast %"class.std::__1::basic_string"* %7 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %9 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %8, i64 0, i32 1, i32 0
  %10 = load i8, i8* %9, align 1
  %11 = icmp slt i8 %10, 0
  br i1 %11, label %12, label %15

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @_ZdlPv(i8* %14) #18
  br label %15

15:                                               ; preds = %1, %12
  %16 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %17 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %16, align 8
  store %"class.blink::protocol::CSS::Frontend"* null, %"class.blink::protocol::CSS::Frontend"** %16, align 8
  %18 = icmp eq %"class.blink::protocol::CSS::Frontend"* %17, null
  br i1 %18, label %21, label %19

19:                                               ; preds = %15
  %20 = bitcast %"class.blink::protocol::CSS::Frontend"* %17 to i8*
  call void @_ZdlPv(i8* %20) #18
  br label %21

21:                                               ; preds = %15, %19
  %22 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 2
  %23 = bitcast %"class.blink::Member.2554"* %22 to i64*
  store atomic i64 0, i64* %23 monotonic, align 8
  ret void
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState5FieldD0Ev(%"class.blink::InspectorAgentState::Field"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED2Ev(%"class.blink::InspectorBaseAgent.3255"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.blink::InspectorBaseAgent.3255"* %0 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 4, i32 0, i32 0, i32 0
  %4 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %3, align 8
  store %"class.blink::protocol::CSS::Frontend"* null, %"class.blink::protocol::CSS::Frontend"** %3, align 8
  %5 = icmp eq %"class.blink::protocol::CSS::Frontend"* %4, null
  br i1 %5, label %8, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::protocol::CSS::Frontend"* %4 to i8*
  tail call void @_ZdlPv(i8* %7) #18
  br label %8

8:                                                ; preds = %1, %6
  %9 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 0
  %10 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  %11 = icmp eq %"class.blink::InspectorAgentState::Field"** %10, null
  %12 = bitcast %"class.blink::InspectorAgentState::Field"** %10 to i8*
  br i1 %11, label %19, label %13, !prof !2

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %15 = load i32, i32* %14, align 4
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %18, label %17, !prof !3

17:                                               ; preds = %13
  store i32 0, i32* %14, align 4
  br label %18

18:                                               ; preds = %17, %13
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %12) #16
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %9, align 8
  br label %19

19:                                               ; preds = %18, %8
  %20 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 0, i32 3, i32 0, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent.3255"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent7RestoreEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent26DidCommitLoadForLocalFrameEPNS_10LocalFrameE(%"class.blink::InspectorAgent"*, %"class.blink::LocalFrame"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14InspectorAgent33FlushPendingProtocolNotificationsEv(%"class.blink::InspectorAgent"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent.3255"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED1Ev(%"class.blink::InspectorBaseAgent.3255"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %0, i64 -1, i32 4
  %3 = bitcast %"class.std::__1::unique_ptr.3256"* %2 to %"class.blink::InspectorBaseAgent.3255"*
  %4 = bitcast %"class.std::__1::unique_ptr.3256"* %2 to <2 x i32 (...)**>*
  store <2 x i32 (...)**> <i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)** bitcast (i8** getelementptr inbounds ({ [11 x i8*], [29 x i8*] }, { [11 x i8*], [29 x i8*] }* @_ZTVN5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEEE, i64 0, inrange i32 1, i64 2) to i32 (...)**)>, <2 x i32 (...)**>* %4, align 8
  %5 = getelementptr inbounds %"class.std::__1::unique_ptr.3256", %"class.std::__1::unique_ptr.3256"* %2, i64 6, i32 0, i32 0, i32 0
  %6 = load %"class.blink::protocol::CSS::Frontend"*, %"class.blink::protocol::CSS::Frontend"** %5, align 8
  store %"class.blink::protocol::CSS::Frontend"* null, %"class.blink::protocol::CSS::Frontend"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CSS::Frontend"* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::protocol::CSS::Frontend"* %6 to i8*
  tail call void @_ZdlPv(i8* %9) #18
  br label %10

10:                                               ; preds = %8, %1
  %11 = getelementptr inbounds %"class.std::__1::unique_ptr.3256", %"class.std::__1::unique_ptr.3256"* %2, i64 4
  %12 = bitcast %"class.std::__1::unique_ptr.3256"* %11 to %"class.blink::InspectorAgentState::Field"***
  %13 = load %"class.blink::InspectorAgentState::Field"**, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  %14 = icmp eq %"class.blink::InspectorAgentState::Field"** %13, null
  %15 = bitcast %"class.blink::InspectorAgentState::Field"** %13 to i8*
  br i1 %14, label %22, label %16, !prof !2

16:                                               ; preds = %10
  %17 = getelementptr inbounds %"class.blink::InspectorBaseAgent.3255", %"class.blink::InspectorBaseAgent.3255"* %3, i64 0, i32 3, i32 1, i32 0, i32 0, i32 2
  %18 = load i32, i32* %17, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %21, label %20, !prof !3

20:                                               ; preds = %16
  store i32 0, i32* %17, align 4
  br label %21

21:                                               ; preds = %20, %16
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %15) #16
  store %"class.blink::InspectorAgentState::Field"** null, %"class.blink::InspectorAgentState::Field"*** %12, align 8
  br label %22

22:                                               ; preds = %21, %10
  %23 = getelementptr inbounds %"class.std::__1::unique_ptr.3256", %"class.std::__1::unique_ptr.3256"* %2, i64 3
  %24 = bitcast %"class.std::__1::unique_ptr.3256"* %23 to %"class.WTF::StringImpl"**
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %40, label %27

27:                                               ; preds = %22
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %29 = load atomic i32, i32* %28 monotonic, align 4
  %30 = and i32 %29, 2
  %31 = icmp eq i32 %30, 0
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 0
  %33 = load i32, i32* %32, align 4
  br i1 %31, label %34, label %36

34:                                               ; preds = %27
  %35 = add i32 %33, -1
  store i32 %35, i32* %32, align 4
  br label %36

36:                                               ; preds = %34, %27
  %37 = phi i32 [ %35, %34 ], [ %33, %27 ]
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %40

39:                                               ; preds = %36
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %25) #16
  br label %40

40:                                               ; preds = %22, %36, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEED0Ev(%"class.blink::InspectorBaseAgent.3255"*) unnamed_addr #0 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZThn8_N5blink18InspectorBaseAgentINS_8protocol3CSS8MetainfoEE7disableEv(%"class.crdtp::DispatchResponse"* noalias sret, %"class.blink::InspectorBaseAgent.3255"*) unnamed_addr #0 comdat align 2 {
  tail call void @_ZN5crdtp16DispatchResponse7SuccessEv(%"class.crdtp::DispatchResponse"* sret %0) #16
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #8

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.4124"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca i8, align 1
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = icmp eq i32 %1, 0
  br i1 %5, label %17, label %6

6:                                                ; preds = %2, %6
  %7 = phi i32 [ %10, %6 ], [ %1, %2 ]
  %8 = phi i32 [ %9, %6 ], [ %1, %2 ]
  %9 = or i32 %8, %7
  %10 = lshr i32 %7, 1
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %6

12:                                               ; preds = %6
  %13 = shl i32 %9, 1
  %14 = add i32 %13, 2
  %15 = icmp ugt i32 %14, 8
  %16 = select i1 %15, i32 %14, i32 8
  br label %17

17:                                               ; preds = %12, %2
  %18 = phi i32 [ 8, %2 ], [ %16, %12 ]
  %19 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = icmp ugt i32 %18, %20
  br i1 %21, label %22, label %40

22:                                               ; preds = %17
  %23 = icmp slt i32 %18, 0
  br i1 %23, label %24, label %28

24:                                               ; preds = %22
  %25 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0)) #16
  %26 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  %27 = load i32, i32* %19, align 8
  br label %28

28:                                               ; preds = %22, %24
  %29 = phi i32 [ %20, %22 ], [ %27, %24 ]
  %30 = icmp ult i32 %29, %18
  br i1 %30, label %31, label %35

31:                                               ; preds = %28
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %3) #16
  store i8 -86, i8* %3, align 1
  %32 = call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.4124"* %0, i32 %18, %"class.blink::Member.389"* null, i8* nonnull dereferenceable(1) %3) #16
  %33 = load i8, i8* %3, align 1, !range !4
  %34 = icmp eq i8 %33, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %3) #16
  br i1 %34, label %35, label %40

35:                                               ; preds = %31, %28
  %36 = zext i32 %18 to i64
  %37 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %36) #16
  %38 = bitcast %"class.blink::HeapHashTableBacking"* %37 to %"class.blink::Member.389"*
  %39 = call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* %38, i32 %18, %"class.blink::Member.389"* null) #16
  br label %40

40:                                               ; preds = %35, %31, %17
  ret void
}

declare void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* sret, i8*, i32, i8*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.4124"*, i32, %"class.blink::Member.389"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %31, align 8
  %33 = icmp eq %"class.blink::Member.389"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.389"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking"* %44 to %"class.blink::Member.389"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.389"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.389"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.389"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.389"* %61, %"class.blink::Member.389"* %55
  %63 = bitcast %"class.blink::Member.389"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.389"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.389"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.4124"* %0 to %"class.blink::HeapHashTableBacking"**
  store %"class.blink::HeapHashTableBacking"* %44, %"class.blink::HeapHashTableBacking"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking", %"class.blink::HeapHashTableBacking"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #16
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.389"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* %42, i32 %1, %"class.blink::Member.389"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.389"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.389"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.389"* %87, %"class.blink::Member.389"* %82
  %89 = bitcast %"class.blink::Member.389"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.389"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.389"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.389"* %99, %"class.blink::Member.389"* %88
  %101 = bitcast %"class.blink::Member.389"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.389"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.389"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.389"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4124"*, %"class.blink::Member.389"*, i32, %"class.blink::Member.389"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.389"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.389"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.389"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #16
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.4124"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.389"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #16
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.389"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.389"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #16
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.389"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.389"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.389"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.389"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.389"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %70, align 8
  %72 = icmp eq %"class.blink::CSSStyleSheet"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::CSSStyleSheet"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.389"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.389"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.389"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.389"* %93, null
  %95 = ptrtoint %"class.blink::Member.389"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::CSSStyleSheet"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::CSSStyleSheet"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::CSSStyleSheet"* %99, inttoptr (i64 -1 to %"class.blink::CSSStyleSheet"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.389"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %113, align 8
  %115 = icmp eq %"class.blink::CSSStyleSheet"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.389"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.389"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.389"* %118, %"class.blink::Member.389"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.389"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.389"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

declare zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking"* %22
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([361 x i8], [361 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_13CSSStyleSheetEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEj(i32) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #4 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #16
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #16
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.33, i64 0, i64 0), i8* %21, i8* %22) #16
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.34, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #16
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #16
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !3

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #16
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.389"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.389"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

declare void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8*) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.389"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKS4_SG_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4124"*, %"class.blink::Member.389"* dereferenceable(8), %"class.blink::Member.389"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %4, align 8
  %6 = icmp eq %"class.blink::Member.389"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* null)
  %9 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.389"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Member.389"* %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %40, align 8
  %42 = icmp eq %"class.blink::CSSStyleSheet"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CSSStyleSheet"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CSSStyleSheet"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.389"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.389"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CSSStyleSheet"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %59, inttoptr (i64 -1 to %"class.blink::CSSStyleSheet"*)
  %67 = select i1 %66, %"class.blink::Member.389"* %60, %"class.blink::Member.389"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %73, align 8
  %75 = icmp eq %"class.blink::CSSStyleSheet"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.389"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.389"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.389"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = bitcast %"class.blink::Member.389"* %2 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.blink::Member.389"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = inttoptr i64 %89 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #16
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.389"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #16
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.389"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.389"*, i8 } undef, %"class.blink::Member.389"* %117, 0
  %119 = insertvalue { %"class.blink::Member.389"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.389"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4124"*, %"class.blink::Member.389"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.4124"* %0, i32 %35, %"class.blink::Member.389"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking"* %42 to %"class.blink::Member.389"*
  %44 = call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* %43, i32 %40, %"class.blink::Member.389"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.389"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.389"* %46
}

declare void @_ZN3WTF13AtomicMemzeroEPvm(i8*, i64) local_unnamed_addr #1

declare %"class.blink::FontCache"* @_ZN5blink9FontCache12GetFontCacheENS_14CreateIfNeededE(i32) local_unnamed_addr #1

declare %"class.blink::ShapeResultView"* @_ZNK5blink14NGFragmentItem15TextShapeResultEv(%"class.blink::NGFragmentItem"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink16FontPlatformData14FontFamilyNameEv(%"class.blink::FontPlatformData"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4474"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EERKS4_iEENS_18HashTableAddResultISG_S6_EEOT0_OT1_(%"class.WTF::HashTable.4471"*, %"struct.std::__1::pair.4475"* dereferenceable(16), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.4474"*, %"struct.WTF::KeyValuePair.4474"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.4474"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.4474"* @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.4471"* %0, %"struct.WTF::KeyValuePair.4474"* null)
  %9 = load %"struct.WTF::KeyValuePair.4474"*, %"struct.WTF::KeyValuePair.4474"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.4474"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.std::__1::pair.4475", %"struct.std::__1::pair.4475"* %1, i64 0, i32 0
  %17 = load i32, i32* %16, align 8
  %18 = shl i32 %17, 15
  %19 = xor i32 %18, -1
  %20 = add i32 %17, %19
  %21 = lshr i32 %20, 10
  %22 = xor i32 %21, %20
  %23 = mul i32 %22, 9
  %24 = lshr i32 %23, 6
  %25 = xor i32 %24, %23
  %26 = shl i32 %25, 11
  %27 = xor i32 %26, -1
  %28 = add i32 %25, %27
  %29 = lshr i32 %28, 16
  %30 = xor i32 %29, %28
  %31 = getelementptr inbounds %"struct.std::__1::pair.4475", %"struct.std::__1::pair.4475"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = lshr i32 %34, 8
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %39

37:                                               ; preds = %10
  %38 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %32) #16
  br label %39

39:                                               ; preds = %10, %37
  %40 = phi i32 [ %38, %37 ], [ %35, %10 ]
  %41 = zext i32 %30 to i64
  %42 = mul i64 %41, 5146158508761418231
  %43 = zext i32 %40 to i64
  %44 = mul i64 %43, -682818954288075998
  %45 = add i64 %44, %42
  %46 = lshr i64 %45, 32
  %47 = trunc i64 %46 to i32
  %48 = and i32 %14, %47
  %49 = zext i32 %48 to i64
  %50 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %11, i64 %49
  %51 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %50, i64 0, i32 0, i32 0
  %52 = load i32, i32* %51, align 4
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %11, i64 %49, i32 0, i32 1, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  %56 = icmp eq %"class.WTF::StringImpl"* %55, null
  %57 = and i1 %53, %56
  br i1 %57, label %111, label %58

58:                                               ; preds = %39
  %59 = xor i32 %47, -1
  %60 = lshr i64 %45, 55
  %61 = trunc i64 %60 to i32
  %62 = add i32 %61, %59
  %63 = shl i32 %62, 12
  %64 = xor i32 %63, %62
  %65 = lshr i32 %64, 7
  %66 = xor i32 %65, %64
  %67 = shl i32 %66, 2
  %68 = xor i32 %67, %66
  %69 = lshr i32 %68, 20
  %70 = xor i32 %69, %68
  %71 = or i32 %70, 1
  %72 = zext i32 %71 to i64
  br label %73

73:                                               ; preds = %58, %87
  %74 = phi %"class.WTF::StringImpl"* [ %55, %58 ], [ %98, %87 ]
  %75 = phi i32 [ %52, %58 ], [ %95, %87 ]
  %76 = phi %"struct.WTF::KeyValuePair.4474"* [ %50, %58 ], [ %93, %87 ]
  %77 = phi %"struct.WTF::KeyValuePair.4474"* [ null, %58 ], [ %88, %87 ]
  %78 = phi i64 [ %49, %58 ], [ %92, %87 ]
  %79 = phi i64 [ 0, %58 ], [ %90, %87 ]
  %80 = icmp eq i32 %75, -1
  br i1 %80, label %87, label %81

81:                                               ; preds = %73
  %82 = load i32, i32* %16, align 8
  %83 = icmp eq i32 %75, %82
  br i1 %83, label %84, label %87

84:                                               ; preds = %81
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %86 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %74, %"class.WTF::StringImpl"* %85) #16
  br i1 %86, label %168, label %87

87:                                               ; preds = %73, %81, %84
  %88 = phi %"struct.WTF::KeyValuePair.4474"* [ %77, %84 ], [ %76, %73 ], [ %77, %81 ]
  %89 = icmp eq i64 %79, 0
  %90 = select i1 %89, i64 %72, i64 %79
  %91 = add i64 %90, %78
  %92 = and i64 %91, %15
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %11, i64 %92
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %93, i64 0, i32 0, i32 0
  %95 = load i32, i32* %94, align 4
  %96 = icmp eq i32 %95, 0
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %11, i64 %92, i32 0, i32 1, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  %100 = and i1 %96, %99
  br i1 %100, label %101, label %73

101:                                              ; preds = %87
  %102 = icmp eq %"struct.WTF::KeyValuePair.4474"* %88, null
  br i1 %102, label %111, label %103

103:                                              ; preds = %101
  %104 = bitcast %"struct.WTF::KeyValuePair.4474"* %88 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %104, i8 0, i64 24, i1 false) #16
  %105 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 3
  %106 = load i32, i32* %105, align 8
  %107 = add i32 %106, 2147483647
  %108 = and i32 %107, 2147483647
  %109 = and i32 %106, -2147483648
  %110 = or i32 %108, %109
  store i32 %110, i32* %105, align 8
  br label %111

111:                                              ; preds = %39, %101, %103
  %112 = phi %"struct.WTF::KeyValuePair.4474"* [ %88, %103 ], [ %93, %101 ], [ %50, %39 ]
  %113 = load i32, i32* %16, align 8
  %114 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %112, i64 0, i32 0, i32 0
  store i32 %113, i32* %114, align 8
  %115 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %112, i64 0, i32 0, i32 1
  %116 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %117 = icmp eq %"class.WTF::StringImpl"* %116, null
  br i1 %117, label %135, label %118

118:                                              ; preds = %111
  %119 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load atomic i32, i32* %119 monotonic, align 4
  %121 = and i32 %120, 2
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %135

123:                                              ; preds = %118
  %124 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %116, i64 0, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = zext i32 %125 to i33
  %127 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %126, i33 1) #16
  %128 = extractvalue { i33, i1 } %127, 1
  %129 = extractvalue { i33, i1 } %127, 0
  %130 = icmp slt i33 %129, 0
  %131 = or i1 %128, %130
  br i1 %131, label %132, label %133, !prof !3

132:                                              ; preds = %123
  tail call void @llvm.trap() #16
  unreachable

133:                                              ; preds = %123
  %134 = trunc i33 %129 to i32
  store i32 %134, i32* %124, align 4
  br label %135

135:                                              ; preds = %133, %118, %111
  %136 = ptrtoint %"class.WTF::StringImpl"* %116 to i64
  %137 = bitcast %"class.WTF::String"* %115 to i64*
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %115, i64 0, i32 0, i32 0
  %139 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %138, align 8
  store i64 %136, i64* %137, align 8
  %140 = icmp eq %"class.WTF::StringImpl"* %139, null
  br i1 %140, label %154, label %141

141:                                              ; preds = %135
  %142 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %143 = load atomic i32, i32* %142 monotonic, align 4
  %144 = and i32 %143, 2
  %145 = icmp eq i32 %144, 0
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %139, i64 0, i32 0
  %147 = load i32, i32* %146, align 4
  br i1 %145, label %148, label %150

148:                                              ; preds = %141
  %149 = add i32 %147, -1
  store i32 %149, i32* %146, align 4
  br label %150

150:                                              ; preds = %148, %141
  %151 = phi i32 [ %149, %148 ], [ %147, %141 ]
  %152 = icmp eq i32 %151, 0
  br i1 %152, label %153, label %154

153:                                              ; preds = %150
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %139) #16
  br label %154

154:                                              ; preds = %135, %150, %153
  %155 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %112, i64 0, i32 1
  %156 = load i32, i32* %2, align 4
  store i32 %156, i32* %155, align 4
  %157 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 2
  %158 = load i32, i32* %157, align 4
  %159 = add i32 %158, 1
  store i32 %159, i32* %157, align 4
  %160 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 3
  %161 = load i32, i32* %160, align 8
  %162 = add i32 %161, %159
  %163 = shl i32 %162, 1
  %164 = load i32, i32* %12, align 8
  %165 = icmp ult i32 %163, %164
  br i1 %165, label %168, label %166

166:                                              ; preds = %154
  %167 = tail call %"struct.WTF::KeyValuePair.4474"* @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.4471"* %0, %"struct.WTF::KeyValuePair.4474"* %112)
  br label %168

168:                                              ; preds = %84, %154, %166
  %169 = phi i8 [ 1, %154 ], [ 1, %166 ], [ 0, %84 ]
  %170 = phi %"struct.WTF::KeyValuePair.4474"* [ %112, %154 ], [ %167, %166 ], [ %76, %84 ]
  %171 = insertvalue { %"struct.WTF::KeyValuePair.4474"*, i8 } undef, %"struct.WTF::KeyValuePair.4474"* %170, 0
  %172 = insertvalue { %"struct.WTF::KeyValuePair.4474"*, i8 } %171, i8 %169, 1
  ret { %"struct.WTF::KeyValuePair.4474"*, i8 } %172
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4474"* @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE6ExpandEPS6_(%"class.WTF::HashTable.4471"*, %"struct.WTF::KeyValuePair.4474"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = mul nuw nsw i64 %33, 24
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINSt3__14pairIiNS_6StringEEEjEEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.4474"*
  %37 = call %"struct.WTF::KeyValuePair.4474"* @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.4471"* %0, %"struct.WTF::KeyValuePair.4474"* %36, i32 %32, %"struct.WTF::KeyValuePair.4474"* %1) #16
  ret %"struct.WTF::KeyValuePair.4474"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4474"* @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE8RehashToEPS6_jSH_(%"class.WTF::HashTable.4471"*, %"struct.WTF::KeyValuePair.4474"*, i32, %"struct.WTF::KeyValuePair.4474"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.4471", align 8
  %6 = bitcast %"class.WTF::HashTable.4471"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.4471"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.4474"* %1, %"struct.WTF::KeyValuePair.4474"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.4474"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.4471"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.4471"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.4474"*, %"struct.WTF::KeyValuePair.4474"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.4474"* %22 to i64
  br label %72

24:                                               ; preds = %127
  %25 = bitcast %"class.WTF::HashTable.4471"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.4471"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %128, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.4474"* [ null, %16 ], [ %131, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %129, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"struct.WTF::KeyValuePair.4474"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %68, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %66, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %63, %39
  %42 = phi i64 [ 0, %39 ], [ %64, %63 ]
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %35, i64 %42, i32 0, i32 0
  %44 = load i32, i32* %43, align 8
  %45 = icmp eq i32 %44, -1
  br i1 %45, label %63, label %46

46:                                               ; preds = %41
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %35, i64 %42, i32 0, i32 1, i32 0, i32 0
  %48 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %47, align 8
  %49 = icmp eq %"class.WTF::StringImpl"* %48, null
  br i1 %49, label %63, label %50

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load atomic i32, i32* %51 monotonic, align 4
  %53 = and i32 %52, 2
  %54 = icmp eq i32 %53, 0
  %55 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %48, i64 0, i32 0
  %56 = load i32, i32* %55, align 4
  br i1 %54, label %57, label %59

57:                                               ; preds = %50
  %58 = add i32 %56, -1
  store i32 %58, i32* %55, align 4
  br label %59

59:                                               ; preds = %57, %50
  %60 = phi i32 [ %58, %57 ], [ %56, %50 ]
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %62, label %63

62:                                               ; preds = %59
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %48) #16
  br label %63

63:                                               ; preds = %62, %59, %46, %41
  %64 = add nuw nsw i64 %42, 1
  %65 = icmp eq i64 %64, %40
  br i1 %65, label %66, label %41

66:                                               ; preds = %63, %37
  %67 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %67) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %68

68:                                               ; preds = %28, %66
  %69 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = and i32 %70, -2147483648
  store i32 %71, i32* %69, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.4474"* %33

72:                                               ; preds = %21, %127
  %73 = phi i64 [ %128, %127 ], [ %23, %21 ]
  %74 = phi i32 [ %129, %127 ], [ %13, %21 ]
  %75 = phi %"struct.WTF::KeyValuePair.4474"* [ %130, %127 ], [ %22, %21 ]
  %76 = phi %"struct.WTF::KeyValuePair.4474"* [ %131, %127 ], [ null, %21 ]
  %77 = phi i32 [ %132, %127 ], [ 0, %21 ]
  %78 = zext i32 %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %75, i64 %78
  %80 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %79, i64 0, i32 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %75, i64 %78, i32 0, i32 1, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  %86 = and i1 %82, %85
  %87 = icmp eq i32 %81, -1
  %88 = or i1 %87, %86
  br i1 %88, label %127, label %89

89:                                               ; preds = %72
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %79, i64 0, i32 0
  %91 = call { %"struct.WTF::KeyValuePair.4474"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES4_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.4471"* nonnull %5, %"struct.std::__1::pair.4475"* dereferenceable(16) %90) #16
  %92 = extractvalue { %"struct.WTF::KeyValuePair.4474"*, i8 } %91, 0
  %93 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %92, i64 0, i32 0, i32 1, i32 0, i32 0
  %94 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %93, align 8
  %95 = icmp eq %"class.WTF::StringImpl"* %94, null
  br i1 %95, label %109, label %96

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load atomic i32, i32* %97 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %94, i64 0, i32 0
  %102 = load i32, i32* %101, align 4
  br i1 %100, label %103, label %105

103:                                              ; preds = %96
  %104 = add i32 %102, -1
  store i32 %104, i32* %101, align 4
  br label %105

105:                                              ; preds = %103, %96
  %106 = phi i32 [ %104, %103 ], [ %102, %96 ]
  %107 = icmp eq i32 %106, 0
  br i1 %107, label %108, label %109

108:                                              ; preds = %105
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %94) #16
  br label %109

109:                                              ; preds = %89, %105, %108
  %110 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %92, i64 0, i32 0, i32 0
  %111 = load i32, i32* %80, align 8
  store i32 %111, i32* %110, align 8
  %112 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %92, i64 0, i32 0, i32 1
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %75, i64 %78, i32 0, i32 1
  %114 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %113, i64 0, i32 0, i32 0
  %115 = bitcast %"class.WTF::String"* %113 to i64*
  %116 = load i64, i64* %115, align 8
  %117 = bitcast %"class.WTF::String"* %112 to i64*
  store i64 %116, i64* %117, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %114, align 8
  %118 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %92, i64 0, i32 1
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %75, i64 %78, i32 1
  %120 = load i32, i32* %119, align 8
  store i32 %120, i32* %118, align 8
  %121 = load %"struct.WTF::KeyValuePair.4474"*, %"struct.WTF::KeyValuePair.4474"** %15, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %121, i64 %78
  %123 = icmp eq %"struct.WTF::KeyValuePair.4474"* %122, %3
  %124 = select i1 %123, %"struct.WTF::KeyValuePair.4474"* %92, %"struct.WTF::KeyValuePair.4474"* %76
  %125 = load i32, i32* %12, align 8
  %126 = ptrtoint %"struct.WTF::KeyValuePair.4474"* %121 to i64
  br label %127

127:                                              ; preds = %72, %109
  %128 = phi i64 [ %73, %72 ], [ %126, %109 ]
  %129 = phi i32 [ %74, %72 ], [ %125, %109 ]
  %130 = phi %"struct.WTF::KeyValuePair.4474"* [ %75, %72 ], [ %121, %109 ]
  %131 = phi %"struct.WTF::KeyValuePair.4474"* [ %76, %72 ], [ %124, %109 ]
  %132 = add i32 %77, 1
  %133 = icmp eq i32 %132, %129
  br i1 %133, label %24, label %72
}

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4474"*, i8 } @_ZN3WTF9HashTableINSt3__14pairIiNS_6StringEEENS_12KeyValuePairIS4_jEENS_24KeyValuePairKeyExtractorENS_8PairHashIiS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSB_IjEEEESC_NS_18PartitionAllocatorEE16LookupForWritingINS_22IdentityHashTranslatorIS9_SE_SF_EES4_EENS2_IPS6_bEERKT0_(%"class.WTF::HashTable.4471"*, %"struct.std::__1::pair.4475"* dereferenceable(16)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4474"*, %"struct.WTF::KeyValuePair.4474"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.4471", %"class.WTF::HashTable.4471"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"struct.std::__1::pair.4475", %"struct.std::__1::pair.4475"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = shl i32 %10, 15
  %12 = xor i32 %11, -1
  %13 = add i32 %10, %12
  %14 = lshr i32 %13, 10
  %15 = xor i32 %14, %13
  %16 = mul i32 %15, 9
  %17 = lshr i32 %16, 6
  %18 = xor i32 %17, %16
  %19 = shl i32 %18, 11
  %20 = xor i32 %19, -1
  %21 = add i32 %18, %20
  %22 = lshr i32 %21, 16
  %23 = xor i32 %22, %21
  %24 = getelementptr inbounds %"struct.std::__1::pair.4475", %"struct.std::__1::pair.4475"* %1, i64 0, i32 1, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %25, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load atomic i32, i32* %26 monotonic, align 4
  %28 = lshr i32 %27, 8
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %32

30:                                               ; preds = %2
  %31 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %25) #16
  br label %32

32:                                               ; preds = %2, %30
  %33 = phi i32 [ %31, %30 ], [ %28, %2 ]
  %34 = zext i32 %23 to i64
  %35 = mul i64 %34, 5146158508761418231
  %36 = zext i32 %33 to i64
  %37 = mul i64 %36, -682818954288075998
  %38 = add i64 %37, %35
  %39 = lshr i64 %38, 32
  %40 = trunc i64 %39 to i32
  %41 = and i32 %7, %40
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %4, i64 %42
  %44 = ptrtoint %"struct.WTF::KeyValuePair.4474"* %43 to i64
  %45 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %43, i64 0, i32 0, i32 0
  %46 = load i32, i32* %45, align 4
  %47 = icmp eq i32 %46, 0
  %48 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %4, i64 %42, i32 0, i32 1, i32 0, i32 0
  %49 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %48, align 8
  %50 = icmp eq %"class.WTF::StringImpl"* %49, null
  %51 = and i1 %47, %50
  br i1 %51, label %69, label %52

52:                                               ; preds = %32
  %53 = xor i32 %40, -1
  %54 = lshr i64 %38, 55
  %55 = trunc i64 %54 to i32
  %56 = add i32 %55, %53
  %57 = shl i32 %56, 12
  %58 = xor i32 %57, %56
  %59 = lshr i32 %58, 7
  %60 = xor i32 %59, %58
  %61 = shl i32 %60, 2
  %62 = xor i32 %61, %60
  %63 = lshr i32 %62, 20
  %64 = xor i32 %63, %62
  %65 = or i32 %64, 1
  %66 = zext i32 %65 to i64
  br label %75

67:                                               ; preds = %90
  %68 = ptrtoint %"struct.WTF::KeyValuePair.4474"* %96 to i64
  br label %69

69:                                               ; preds = %67, %32
  %70 = phi i64 [ %44, %32 ], [ %68, %67 ]
  %71 = phi %"struct.WTF::KeyValuePair.4474"* [ null, %32 ], [ %91, %67 ]
  %72 = icmp eq %"struct.WTF::KeyValuePair.4474"* %71, null
  %73 = ptrtoint %"struct.WTF::KeyValuePair.4474"* %71 to i64
  %74 = select i1 %72, i64 %70, i64 %73
  br label %105

75:                                               ; preds = %52, %90
  %76 = phi %"class.WTF::StringImpl"* [ %49, %52 ], [ %102, %90 ]
  %77 = phi %"struct.WTF::KeyValuePair.4474"* [ null, %52 ], [ %91, %90 ]
  %78 = phi i32 [ %46, %52 ], [ %99, %90 ]
  %79 = phi i64 [ %44, %52 ], [ %97, %90 ]
  %80 = phi %"struct.WTF::KeyValuePair.4474"* [ %43, %52 ], [ %96, %90 ]
  %81 = phi i64 [ %42, %52 ], [ %95, %90 ]
  %82 = phi i64 [ 0, %52 ], [ %93, %90 ]
  %83 = icmp eq i32 %78, -1
  br i1 %83, label %90, label %84

84:                                               ; preds = %75
  %85 = load i32, i32* %9, align 8
  %86 = icmp eq i32 %78, %85
  br i1 %86, label %87, label %90

87:                                               ; preds = %84
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %89 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %76, %"class.WTF::StringImpl"* %88) #16
  br i1 %89, label %105, label %90

90:                                               ; preds = %75, %84, %87
  %91 = phi %"struct.WTF::KeyValuePair.4474"* [ %77, %84 ], [ %77, %87 ], [ %80, %75 ]
  %92 = icmp eq i64 %82, 0
  %93 = select i1 %92, i64 %66, i64 %82
  %94 = add i64 %93, %81
  %95 = and i64 %94, %8
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %4, i64 %95
  %97 = ptrtoint %"struct.WTF::KeyValuePair.4474"* %96 to i64
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %96, i64 0, i32 0, i32 0
  %99 = load i32, i32* %98, align 4
  %100 = icmp eq i32 %99, 0
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.4474", %"struct.WTF::KeyValuePair.4474"* %4, i64 %95, i32 0, i32 1, i32 0, i32 0
  %102 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %101, align 8
  %103 = icmp eq %"class.WTF::StringImpl"* %102, null
  %104 = and i1 %100, %103
  br i1 %104, label %67, label %75

105:                                              ; preds = %87, %69
  %106 = phi i64 [ %74, %69 ], [ %79, %87 ]
  %107 = phi i8 [ 0, %69 ], [ 1, %87 ]
  %108 = inttoptr i64 %106 to %"struct.WTF::KeyValuePair.4474"*
  %109 = insertvalue { %"struct.WTF::KeyValuePair.4474"*, i8 } undef, %"struct.WTF::KeyValuePair.4474"* %108, 0
  %110 = insertvalue { %"struct.WTF::KeyValuePair.4474"*, i8 } %109, i8 %107, 1
  ret { %"struct.WTF::KeyValuePair.4474"*, i8 } %110
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare dereferenceable(16) %"class.blink::InlineTextBoxList"* @_ZN5blink17InlineTextBoxList5EmptyEv() local_unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZNK5blink12LayoutObject29FirstLineStyleWithoutFallbackEv(%"class.blink::LayoutObject"*) local_unnamed_addr #1

declare void @_ZN5blink9FontCache5PurgeENS_13PurgeSeverityE(%"class.blink::FontCache"*, i32) local_unnamed_addr #1

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #10

declare void @_ZN5blink14ExceptionState14ClearExceptionEv(%"class.blink::ExceptionState"*) unnamed_addr #1

declare zeroext i1 @_ZN2v87Isolate22IsExecutionTerminatingEv(%"class.v8::Isolate"*) local_unnamed_addr #1

declare %"class.v8::Value"* @_ZN2v87Isolate14ThrowExceptionENS_5LocalINS_5ValueEEE(%"class.v8::Isolate"*, %"class.v8::Value"*) local_unnamed_addr #1

declare i64* @_ZN2v811HandleScope12CreateHandleEPNS_8internal7IsolateEm(%"class.v8::internal::Isolate"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink23InspectorStyleSheetBase27LineNumberAndColumnToOffsetEjjPj(%"class.blink::InspectorStyleSheetBase"*, i32, i32, i32*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink17StyleRuleKeyframe7KeyTextEv(%"class.blink::StyleRuleKeyframe"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind
declare i32 @__cxa_guard_acquire(i64*) local_unnamed_addr #11

; Function Attrs: nofree nounwind
declare void @__cxa_guard_release(i64*) local_unnamed_addr #11

declare %"class.blink::ContainerNode"* @_ZN5blink17FlatTreeTraversal14TraverseParentERKNS_4NodeE(%"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #12

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13MediaQuerySet9MediaTextEv(%"class.blink::MediaQuerySet"*) local_unnamed_addr #1

declare void @_ZN5blink7Element32UpdatePresentationAttributeStyleEv(%"class.blink::Element"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"struct.std::__1::pair.4411"* @_ZN3WTF6VectorINSt3__14pairIN5blink6MemberINS3_7CSSRuleEEEiEELj0ENS3_13HeapAllocatorEE2atEj(%"class.WTF::Vector.4408"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4408", %"class.WTF::Vector.4408"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.4408", %"class.WTF::Vector.4408"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"struct.std::__1::pair.4411"*, %"struct.std::__1::pair.4411"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"struct.std::__1::pair.4411", %"struct.std::__1::pair.4411"* %24, i64 %25
  ret %"struct.std::__1::pair.4411"* %26
}

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

declare i32 @_ZN5blink13CssPropertyIDEPKNS_16ExecutionContextERKN3WTF6StringE(%"class.blink::ExecutionContext"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZNK3WTF10StringImpl8EndsWithEDs(%"class.WTF::StringImpl"*, i16 zeroext) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare %"class.blink::CSSParserContext"* @_ZN5blink22StrictCSSParserContextENS_17SecureContextModeE(i32) local_unnamed_addr #1

declare %"class.blink::ExecutionContext"* @_ZNK5blink8Document19GetExecutionContextEv(%"class.blink::Document"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EcvS3_Ev(%"class.WTF::StringAppend.4672"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %3 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca i8*, align 8
  %6 = alloca i16*, align 8
  %7 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %7, i8 -86, i64 16, i1 false) #16
  %9 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %13 = bitcast %"class.WTF::StringTypeAdapter.5127"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false) #16
  %15 = load i8*, i8** %14, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %3, i8* %15) #16
  %16 = bitcast %"class.WTF::StringTypeAdapter.5127"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %16, i8 -86, i64 16, i1 false) #16
  %18 = load i8*, i8** %17, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %2, i8* %18) #16
  %19 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %19, align 8
  %21 = icmp eq %"class.WTF::StringImpl"* %20, null
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E, align 8
  %23 = select i1 %21, %"class.WTF::StringImpl"* %22, %"class.WTF::StringImpl"* %20
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %23, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 1
  %27 = icmp eq i32 %26, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %13) #16
  br i1 %27, label %28, label %29

28:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  br label %72

29:                                               ; preds = %1
  %30 = icmp eq %"class.WTF::StringImpl"* %11, null
  %31 = select i1 %30, %"class.WTF::StringImpl"* %12, %"class.WTF::StringImpl"* %11
  %32 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %33 = load atomic i32, i32* %32 monotonic, align 4
  %34 = and i32 %33, 1
  %35 = icmp eq i32 %34, 0
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  br i1 %35, label %72, label %36

36:                                               ; preds = %29
  %37 = bitcast i8** %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %5, align 8
  %38 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.4672"* %0)
  %39 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32 %38, i8** nonnull dereferenceable(8) %5) #16
  %40 = load i8*, i8** %5, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.4672"* %0, i8* %40)
  %41 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %41, label %108, label %42

42:                                               ; preds = %36
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %59

49:                                               ; preds = %42
  %50 = zext i32 %48 to i33
  %51 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %50, i33 1) #16
  %52 = extractvalue { i33, i1 } %51, 1
  %53 = extractvalue { i33, i1 } %51, 0
  %54 = icmp slt i33 %53, 0
  %55 = or i1 %52, %54
  br i1 %55, label %56, label %57, !prof !3

56:                                               ; preds = %49
  call void @llvm.trap() #16
  unreachable

57:                                               ; preds = %49
  %58 = trunc i33 %53 to i32
  store i32 %58, i32* %47, align 4
  br label %59

59:                                               ; preds = %42, %57
  %60 = phi i32 [ %58, %57 ], [ %48, %42 ]
  %61 = ptrtoint %"class.WTF::StringImpl"* %39 to i64
  %62 = load atomic i32, i32* %43 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  br i1 %64, label %65, label %68

65:                                               ; preds = %59
  %66 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %67 = add i32 %60, -1
  store i32 %67, i32* %66, align 4
  br label %68

68:                                               ; preds = %65, %59
  %69 = phi i32 [ %67, %65 ], [ %60, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %108

71:                                               ; preds = %68
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #16
  br label %108

72:                                               ; preds = %29, %28
  %73 = bitcast i16** %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %73) #16
  store i16* inttoptr (i64 -6148914691236517206 to i16*), i16** %6, align 8
  %74 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.4672"* %0)
  %75 = call %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32 %74, i16** nonnull dereferenceable(8) %6) #16
  %76 = load i16*, i16** %6, align 8
  call void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.4672"* %0, i16* %76)
  %77 = icmp eq %"class.WTF::StringImpl"* %75, null
  br i1 %77, label %108, label %78

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %95

85:                                               ; preds = %78
  %86 = zext i32 %84 to i33
  %87 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %86, i33 1) #16
  %88 = extractvalue { i33, i1 } %87, 1
  %89 = extractvalue { i33, i1 } %87, 0
  %90 = icmp slt i33 %89, 0
  %91 = or i1 %88, %90
  br i1 %91, label %92, label %93, !prof !3

92:                                               ; preds = %85
  call void @llvm.trap() #16
  unreachable

93:                                               ; preds = %85
  %94 = trunc i33 %89 to i32
  store i32 %94, i32* %83, align 4
  br label %95

95:                                               ; preds = %78, %93
  %96 = phi i32 [ %94, %93 ], [ %84, %78 ]
  %97 = ptrtoint %"class.WTF::StringImpl"* %75 to i64
  %98 = load atomic i32, i32* %79 monotonic, align 4
  %99 = and i32 %98, 2
  %100 = icmp eq i32 %99, 0
  br i1 %100, label %101, label %104

101:                                              ; preds = %95
  %102 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %75, i64 0, i32 0
  %103 = add i32 %96, -1
  store i32 %103, i32* %102, align 4
  br label %104

104:                                              ; preds = %101, %95
  %105 = phi i32 [ %103, %101 ], [ %96, %95 ]
  %106 = icmp eq i32 %105, 0
  br i1 %106, label %107, label %108

107:                                              ; preds = %104
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %75) #16
  br label %108

108:                                              ; preds = %107, %104, %72, %71, %68, %36
  %109 = phi i8* [ %37, %36 ], [ %37, %68 ], [ %37, %71 ], [ %73, %72 ], [ %73, %104 ], [ %73, %107 ]
  %110 = phi i64 [ 0, %36 ], [ %61, %68 ], [ %61, %71 ], [ 0, %72 ], [ %97, %104 ], [ %97, %107 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %109) #16
  %111 = inttoptr i64 %110 to %"class.WTF::StringImpl"*
  ret %"class.WTF::StringImpl"* %111
}

declare i32 @_ZN5blink9CSSParser10ParseSheetEPKNS_16CSSParserContextEPNS_18StyleSheetContentsERKN3WTF6StringENS_23CSSDeferPropertyParsingEb(%"class.blink::CSSParserContext"*, %"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8), i32, i1 zeroext) local_unnamed_addr #1

declare void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::StyleRuleImport"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"*
  tail call void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleSheetContents"*
  tail call void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"*) unnamed_addr #3

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPh(i32, i8** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.4672"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.4673"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.4673"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPh(%"class.WTF::StringAppend.4672"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #16
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.4674"* %10, i8* %1) #16
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.4674"* %10) #16
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i8, i8* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"* nonnull %30, i8* %33) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.4673"* %5) #16
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i8, i8* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %36) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl19CreateUninitializedEjRPDs(i32, i16** dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E7WriteToEPDs(%"class.WTF::StringAppend.4672"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0
  %6 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 1
  %8 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %8, i8 -86, i64 16, i1 false)
  %9 = load i8*, i8** %7, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 2
  %14 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false) #16
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %17, label %19

17:                                               ; preds = %2
  %18 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %25

19:                                               ; preds = %2
  %20 = ptrtoint %"class.WTF::StringImpl"* %15 to i64
  %21 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %22 = load i32, i32* %21, align 4
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 1
  %24 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  br label %25

25:                                               ; preds = %17, %19
  %26 = phi i8* [ null, %17 ], [ %24, %19 ]
  %27 = phi i64 [ %18, %17 ], [ %20, %19 ]
  %28 = phi i32 [ 0, %17 ], [ %22, %19 ]
  %29 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i64*
  store i64 %27, i64* %29, align 8
  store i8* %26, i8** %12, align 8
  store i32 %28, i32* %13, align 8
  call void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.4674"* %10, i16* %1) #16
  %30 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0
  %31 = call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.4674"* %10) #16
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds i16, i16* %1, i64 %32
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"* nonnull %30, i16* %33) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %11) #16
  %34 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.4673"* %5) #16
  %35 = zext i32 %34 to i64
  %36 = getelementptr inbounds i16, i16* %1, i64 %35
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i16* %36) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %6) #16
  ret void
}

declare void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"*, i8*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_E6lengthEv(%"class.WTF::StringAppend.4673"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.4674"* %8) #16
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.4674"* %8) #16
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #16
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %26, i8* %27) #16
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #16
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E6lengthEv(%"class.WTF::StringAppend.4674"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.4675"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.4675"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.4675"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %9) #16
  %10 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  %11 = getelementptr inbounds %"class.WTF::StringAppend.4675", %"class.WTF::StringAppend.4675"* %0, i64 0, i32 0
  %12 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %12, i8 -86, i64 16, i1 false)
  %13 = load i8*, i8** %11, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %13) #16
  %14 = getelementptr inbounds %"class.WTF::StringAppend.4675", %"class.WTF::StringAppend.4675"* %0, i64 0, i32 1, i32 0, i32 0
  %15 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %14, align 8
  %16 = icmp eq %"class.WTF::StringImpl"* %15, null
  br i1 %16, label %20, label %17

17:                                               ; preds = %1
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %15, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  br label %20

20:                                               ; preds = %1, %17
  %21 = phi i32 [ %19, %17 ], [ 0, %1 ]
  %22 = load i32, i32* %10, align 8
  %23 = add i32 %22, %21
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %22
  br i1 %27, label %29, label %28

28:                                               ; preds = %20
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %20
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %22) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %30, i8* %31) #16
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %41)
  %42 = icmp ult i32 %23, %21
  br i1 %42, label %44, label %43

43:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* null, i8** %40, align 8
  br label %53

44:                                               ; preds = %38
  %45 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %45, i8* %46) #16
  %47 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %48 = load i8*, i8** %47, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %41)
  store i8* %48, i8** %40, align 8
  %49 = icmp eq i8* %48, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %44
  %51 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %51) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %52 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %51) #16
  br label %53

53:                                               ; preds = %43, %44, %50
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %9) #16
  ret i32 %23
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"*, i8*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPh(%"class.WTF::StringAppend.4674"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.5127"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.5127"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i8* %10) #16
  %11 = bitcast %"class.WTF::StringTypeAdapter.5127"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #16
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %3, i8* %14) #16
  %15 = bitcast %"class.WTF::StringTypeAdapter.5129"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #16
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.5129"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %3, i8* %1) #16
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i8, i8* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"* nonnull %34, i8* %37) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.4675"* %6) #16
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i8, i8* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i8* %40) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  ret void
}

declare void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"*, i16*) local_unnamed_addr #1

declare void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"*, i16*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_IPKcNS_6StringEEES2_E7WriteToEPDs(%"class.WTF::StringAppend.4674"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.5127"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 1
  %9 = bitcast %"class.WTF::StringTypeAdapter.5127"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %9, i8 -86, i64 16, i1 false)
  %10 = load i8*, i8** %8, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i8* %10) #16
  %11 = bitcast %"class.WTF::StringTypeAdapter.5127"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %11) #16
  %12 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %3, i64 0, i32 1
  %13 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 16, i1 false) #16
  %14 = load i8*, i8** %13, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %3, i8* %14) #16
  %15 = bitcast %"class.WTF::StringTypeAdapter.5129"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %15) #16
  %16 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0, i32 0, i32 1
  %17 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0, i32 0, i32 2
  %18 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 24, i1 false) #16
  %19 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %18, align 8
  %20 = icmp eq %"class.WTF::StringImpl"* %19, null
  br i1 %20, label %21, label %23

21:                                               ; preds = %2
  %22 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %29

23:                                               ; preds = %2
  %24 = ptrtoint %"class.WTF::StringImpl"* %19 to i64
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 0, i32 1
  %26 = load i32, i32* %25, align 4
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %19, i64 1
  %28 = bitcast %"class.WTF::StringImpl"* %27 to i8*
  br label %29

29:                                               ; preds = %21, %23
  %30 = phi i8* [ null, %21 ], [ %28, %23 ]
  %31 = phi i64 [ %22, %21 ], [ %24, %23 ]
  %32 = phi i32 [ 0, %21 ], [ %26, %23 ]
  %33 = bitcast %"class.WTF::StringTypeAdapter.5129"* %4 to i64*
  store i64 %31, i64* %33, align 8
  store i8* %30, i8** %16, align 8
  store i32 %32, i32* %17, align 8
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %3, i16* %1) #16
  %34 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %4, i64 0, i32 0
  %35 = load i32, i32* %12, align 8
  %36 = zext i32 %35 to i64
  %37 = getelementptr inbounds i16, i16* %1, i64 %36
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"* nonnull %34, i16* %37) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %11) #16
  %38 = call i32 @_ZNK3WTF12StringAppendIPKcNS_6StringEE6lengthEv(%"class.WTF::StringAppend.4675"* %6) #16
  %39 = zext i32 %38 to i64
  %40 = getelementptr inbounds i16, i16* %1, i64 %39
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %5, i16* %40) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %7) #16
  ret void
}

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #16
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #16
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #16
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #3

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #3

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #3

declare void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsEPNS_13CSSImportRuleE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::CSSImportRule"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #16
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare %"class.WTF::StringImpl"* @_ZN3WTF10StringImpl7ReplaceEjjRKNS_10StringViewE(%"class.WTF::StringImpl"*, i32, i32, %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12VectorBufferIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE22ReallyDeallocateBufferEPS2_(%"class.WTF::VectorBuffer.4668"*, %"class.blink::StylePropertyShorthand"*) local_unnamed_addr #13 comdat align 2 {
  %3 = bitcast %"class.blink::StylePropertyShorthand"* %1 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %3) #16
  ret void
}

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #14

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS_6StringES1_EC2ES1_S1_(%"class.WTF::StringAppend.4676"*, %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %0, i64 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %4, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %5, label %23, label %6

6:                                                ; preds = %3
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %23

11:                                               ; preds = %6
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  %14 = zext i32 %13 to i33
  %15 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %14, i33 1) #16
  %16 = extractvalue { i33, i1 } %15, 1
  %17 = extractvalue { i33, i1 } %15, 0
  %18 = icmp slt i33 %17, 0
  %19 = or i1 %16, %18
  br i1 %19, label %20, label %21, !prof !3

20:                                               ; preds = %11
  tail call void @llvm.trap() #16
  unreachable

21:                                               ; preds = %11
  %22 = trunc i33 %17 to i32
  store i32 %22, i32* %12, align 4
  br label %23

23:                                               ; preds = %3, %6, %21
  %24 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %24, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %25, label %55, label %26

26:                                               ; preds = %23
  %27 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load atomic i32, i32* %27 monotonic, align 4
  %29 = and i32 %28, 2
  %30 = icmp eq i32 %29, 0
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %32 = load i32, i32* %31, align 4
  br i1 %30, label %33, label %43

33:                                               ; preds = %26
  %34 = zext i32 %32 to i33
  %35 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %34, i33 1) #16
  %36 = extractvalue { i33, i1 } %35, 1
  %37 = extractvalue { i33, i1 } %35, 0
  %38 = icmp slt i33 %37, 0
  %39 = or i1 %36, %38
  br i1 %39, label %40, label %41, !prof !3

40:                                               ; preds = %33
  tail call void @llvm.trap() #16
  unreachable

41:                                               ; preds = %33
  %42 = trunc i33 %37 to i32
  store i32 %42, i32* %31, align 4
  br label %43

43:                                               ; preds = %26, %41
  %44 = phi i32 [ %42, %41 ], [ %32, %26 ]
  %45 = load atomic i32, i32* %27 monotonic, align 4
  %46 = and i32 %45, 2
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %51

48:                                               ; preds = %43
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %50 = add i32 %44, -1
  store i32 %50, i32* %49, align 4
  br label %51

51:                                               ; preds = %48, %43
  %52 = phi i32 [ %50, %48 ], [ %44, %43 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #16
  br label %55

55:                                               ; preds = %23, %51, %54
  br i1 %5, label %69, label %56

56:                                               ; preds = %55
  %57 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %58 = load atomic i32, i32* %57 monotonic, align 4
  %59 = and i32 %58, 2
  %60 = icmp eq i32 %59, 0
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  br i1 %60, label %63, label %65

63:                                               ; preds = %56
  %64 = add i32 %62, -1
  store i32 %64, i32* %61, align 4
  br label %65

65:                                               ; preds = %63, %56
  %66 = phi i32 [ %64, %63 ], [ %62, %56 ]
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %69

68:                                               ; preds = %65
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #16
  br label %69

69:                                               ; preds = %55, %65, %68
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_IPKcNS_6StringEEES2_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.4673"*, %"class.WTF::StringAppend.4674"* byval(%"class.WTF::StringAppend.4674") align 8, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.4674"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.4673"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #16
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #16
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %3, %11, %26
  %29 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %0, i64 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.4674", %"class.WTF::StringAppend.4674"* %1, i64 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %2, %"class.WTF::StringImpl"** %34, align 8
  %35 = icmp eq %"class.WTF::StringImpl"* %2, null
  br i1 %35, label %65, label %36

36:                                               ; preds = %28
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %53

43:                                               ; preds = %36
  %44 = zext i32 %42 to i33
  %45 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %44, i33 1) #16
  %46 = extractvalue { i33, i1 } %45, 1
  %47 = extractvalue { i33, i1 } %45, 0
  %48 = icmp slt i33 %47, 0
  %49 = or i1 %46, %48
  br i1 %49, label %50, label %51, !prof !3

50:                                               ; preds = %43
  tail call void @llvm.trap() #16
  unreachable

51:                                               ; preds = %43
  %52 = trunc i33 %47 to i32
  store i32 %52, i32* %41, align 4
  br label %53

53:                                               ; preds = %36, %51
  %54 = phi i32 [ %52, %51 ], [ %42, %36 ]
  %55 = load atomic i32, i32* %37 monotonic, align 4
  %56 = and i32 %55, 2
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %61

58:                                               ; preds = %53
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %2, i64 0, i32 0
  %60 = add i32 %54, -1
  store i32 %60, i32* %59, align 4
  br label %61

61:                                               ; preds = %58, %53
  %62 = phi i32 [ %60, %58 ], [ %54, %53 ]
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %64, label %65

64:                                               ; preds = %61
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %2) #16
  br label %65

65:                                               ; preds = %28, %61, %64
  br i1 %10, label %79, label %66

66:                                               ; preds = %65
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %68 = load atomic i32, i32* %67 monotonic, align 4
  %69 = and i32 %68, 2
  %70 = icmp eq i32 %69, 0
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %72 = load i32, i32* %71, align 4
  br i1 %70, label %73, label %75

73:                                               ; preds = %66
  %74 = add i32 %72, -1
  store i32 %74, i32* %71, align 4
  br label %75

75:                                               ; preds = %73, %66
  %76 = phi i32 [ %74, %73 ], [ %72, %66 ]
  %77 = icmp eq i32 %76, 0
  br i1 %77, label %78, label %79

78:                                               ; preds = %75
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #16
  br label %79

79:                                               ; preds = %65, %75, %78
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EC2ES6_S2_(%"class.WTF::StringAppend.4672"*, %"class.WTF::StringAppend.4673"* byval(%"class.WTF::StringAppend.4673") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.4673"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend.4672"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #16
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #16
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %1, i64 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.4673", %"class.WTF::StringAppend.4673"* %1, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %57

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #16
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #16
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %57

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 1
  store i8* %2, i8** %56, align 8
  br label %70

57:                                               ; preds = %38, %53
  %58 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  %59 = load atomic i32, i32* %39 monotonic, align 4
  %60 = and i32 %59, 2
  %61 = icmp eq i32 %60, 0
  %62 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %63 = load i32, i32* %62, align 4
  br i1 %61, label %64, label %66

64:                                               ; preds = %57
  %65 = add i32 %63, -1
  store i32 %65, i32* %62, align 4
  br label %66

66:                                               ; preds = %64, %57
  %67 = phi i32 [ %65, %64 ], [ %63, %57 ]
  %68 = icmp eq i32 %67, 0
  br i1 %68, label %69, label %70

69:                                               ; preds = %66
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #16
  br label %70

70:                                               ; preds = %55, %69, %66
  br i1 %10, label %84, label %71

71:                                               ; preds = %70
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load atomic i32, i32* %72 monotonic, align 4
  %74 = and i32 %73, 2
  %75 = icmp eq i32 %74, 0
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %77 = load i32, i32* %76, align 4
  br i1 %75, label %78, label %80

78:                                               ; preds = %71
  %79 = add i32 %77, -1
  store i32 %79, i32* %76, align 4
  br label %80

80:                                               ; preds = %78, %71
  %81 = phi i32 [ %79, %78 ], [ %77, %71 ]
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %83, label %84

83:                                               ; preds = %80
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #16
  br label %84

84:                                               ; preds = %70, %80, %83
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.644"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4628"*, %"class.blink::CSSRule"** dereferenceable(8), %"class.blink::CSSRule"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %4, align 8
  %6 = icmp eq %"class.blink::Member.644"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4628"* %0, %"class.blink::Member.644"* null)
  %9 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.644"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CSSRule"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %40, align 8
  %42 = icmp eq %"class.blink::CSSRule"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CSSRule"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CSSRule"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.644"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.644"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CSSRule"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CSSRule"* %59, inttoptr (i64 -1 to %"class.blink::CSSRule"*)
  %67 = select i1 %66, %"class.blink::Member.644"* %60, %"class.blink::Member.644"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %73, align 8
  %75 = icmp eq %"class.blink::CSSRule"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.644"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.644"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.644"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %2, align 8
  %89 = ptrtoint %"class.blink::CSSRule"* %88 to i64
  %90 = bitcast %"class.blink::Member.644"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::CSSRule"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #16
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.644"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #16
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4628"* %0, %"class.blink::Member.644"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.644"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.644"*, i8 } undef, %"class.blink::Member.644"* %117, 0
  %119 = insertvalue { %"class.blink::Member.644"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.644"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4628"*, %"class.blink::Member.644"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.4628"* %0, i32 %35, %"class.blink::Member.644"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5132"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5132"* %42 to %"class.blink::Member.644"*
  %44 = call %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4628"* %0, %"class.blink::Member.644"* %43, i32 %40, %"class.blink::Member.644"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.644"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.644"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.4628"*, i32, %"class.blink::Member.644"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %31, align 8
  %33 = icmp eq %"class.blink::Member.644"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.644"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5132"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5132"* %44 to %"class.blink::Member.644"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.644"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.644"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.644"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.644"* %61, %"class.blink::Member.644"* %55
  %63 = bitcast %"class.blink::Member.644"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.644"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.644"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.4628"* %0 to %"class.blink::HeapHashTableBacking.5132"**
  store %"class.blink::HeapHashTableBacking.5132"* %44, %"class.blink::HeapHashTableBacking.5132"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5132", %"class.blink::HeapHashTableBacking.5132"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #16
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.644"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4628"* %0, %"class.blink::Member.644"* %42, i32 %1, %"class.blink::Member.644"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.644"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.644"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.644"* %87, %"class.blink::Member.644"* %82
  %89 = bitcast %"class.blink::Member.644"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.644"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.644"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.644"* %99, %"class.blink::Member.644"* %88
  %101 = bitcast %"class.blink::Member.644"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.644"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.644"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.644"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.644"* @_ZN3WTF9HashTableIN5blink6MemberINS1_7CSSRuleEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4628"*, %"class.blink::Member.644"*, i32, %"class.blink::Member.644"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.644"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.644"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.644"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #16
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.4628"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.644"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #16
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.644"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.644"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #16
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.4628", %"class.WTF::HashTable.4628"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.644"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.644"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.644"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.644"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.644"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %70, align 8
  %72 = icmp eq %"class.blink::CSSRule"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::CSSRule"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.644"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.644"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.644"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.644"* %93, null
  %95 = ptrtoint %"class.blink::Member.644"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::CSSRule"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::CSSRule"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::CSSRule"* %99, inttoptr (i64 -1 to %"class.blink::CSSRule"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.644"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %113, align 8
  %115 = icmp eq %"class.blink::CSSRule"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.644"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.644"*, %"class.blink::Member.644"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.644"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.644"* %118, %"class.blink::Member.644"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.644"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.644"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5132"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5132"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5132"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES5_NS1_17IdentityExtractorENS1_10MemberHashIS4_EENS1_10HashTraitsIS5_EESA_NS_13HeapAllocatorEEEE14AllocateObjectISD_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([331 x i8], [331 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_7CSSRuleEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.644"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.644"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_7CSSRuleEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSRule"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSRule"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSRule"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.4620"*, %"class.blink::CSSStyleRule"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.4620"* %0, i32 %14) #16
  %15 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSStyleRule"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.4589"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.4620"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %8, align 8
  %10 = icmp eq %"class.blink::Member.4589"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12CSSStyleRuleEEEEEmm(i64 %11) #16
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #16
  %16 = ptrtoint %"class.blink::HeapVectorBacking"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.4620"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #16
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %8, align 8
  %26 = icmp eq %"class.blink::Member.4589"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.4589"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #16
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #16
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4620"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_12CSSStyleRuleEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4620"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.4620"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.4620"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #16
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #16
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12CSSStyleRuleEEEEEmm(i64 %14) #16
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #16
  %18 = ptrtoint %"class.blink::HeapVectorBacking"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.4589"*, %"class.blink::Member.4589"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking"* %17, null
  %23 = icmp ne %"class.blink::Member.4589"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.4589"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.4620"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #16
  %33 = bitcast %"class.WTF::Vector.4620"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #16
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #16
  %42 = bitcast %"class.WTF::Vector.4620"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.4620", %"class.WTF::Vector.4620"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking", %"class.blink::HeapVectorBacking"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #16
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_12CSSStyleRuleEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.60, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.61, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.62, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([165 x i8], [165 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_12CSSStyleRuleEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.4589"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.4589", %"class.blink::Member.4589"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.4589"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_12CSSStyleRuleEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleRule"*
  tail call void @_ZNK5blink12CSSStyleRule5TraceEPNS_7VisitorE(%"class.blink::CSSStyleRule"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink12CSSStyleRule5TraceEPNS_7VisitorE(%"class.blink::CSSStyleRule"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8*, i64) local_unnamed_addr #1

declare void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8*, i8*, i64) local_unnamed_addr #1

declare void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbED0Ev(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [6 x i8*] }, { [6 x i8*] }* @_ZTVN5blink19InspectorAgentState5FieldE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = bitcast %"class.blink::InspectorAgentState::SimpleField"* %0 to i8*
  tail call void @_ZdlPv(i8* %20) #18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE5ClearEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 1
  %3 = load i8, i8* %2, align 8, !range !4
  %4 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %5 = load i8, i8* %4, align 1, !range !4
  %6 = icmp eq i8 %3, %5
  br i1 %6, label %11, label %7

7:                                                ; preds = %1
  store i8 %3, i8* %4, align 1
  %8 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %9 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  tail call void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"* %9, %"class.WTF::String"* dereferenceable(8) %10, %"class.blink::WebVector.3688"* null) #16
  br label %11

11:                                               ; preds = %1, %7
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19InspectorAgentState11SimpleFieldIbE6DecodeEv(%"class.blink::InspectorAgentState::SimpleField"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 2
  %3 = load %"class.blink::InspectorSessionState"*, %"class.blink::InspectorSessionState"** %2, align 8
  %4 = tail call %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"* %3) #16
  %5 = icmp eq %"class.blink::mojom::blink::DevToolsSessionState"* %4, null
  br i1 %5, label %31, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 0, i32 1
  %8 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0
  %9 = tail call { %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.2891"* %8, %"class.WTF::String"* dereferenceable(8) %7) #16
  %10 = extractvalue { %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"* } %9, 0
  %11 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 0
  %12 = load %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::mojom::blink::DevToolsSessionState", %"class.blink::mojom::blink::DevToolsSessionState"* %4, i64 0, i32 0, i32 0, i32 1
  %14 = load i32, i32* %13, align 8
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %12, i64 %15
  %17 = icmp eq %"struct.WTF::KeyValuePair.2894"* %10, %16
  br i1 %17, label %31, label %18

18:                                               ; preds = %6
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load i8, i8* %19, align 8, !range !4
  %21 = icmp eq i8 %20, 0
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %18
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %18
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %25 = load i8*, i8** %24, align 8
  %26 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %10, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 2
  %27 = load i32, i32* %26, align 4
  %28 = zext i32 %27 to i64
  %29 = getelementptr inbounds %"class.blink::InspectorAgentState::SimpleField", %"class.blink::InspectorAgentState::SimpleField"* %0, i64 0, i32 2
  %30 = tail call zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8* %25, i64 %28, i8* %29) #16
  br label %31

31:                                               ; preds = %6, %23, %1
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink19InspectorAgentState13RegisterFieldEPNS0_5FieldE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorAgentState::Field"*) local_unnamed_addr #1

declare void @_ZN5blink21InspectorSessionState13EnqueueUpdateERKN3WTF6StringEPKNS_9WebVectorIhEE(%"class.blink::InspectorSessionState"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::WebVector.3688"*) local_unnamed_addr #1

declare %"class.blink::mojom::blink::DevToolsSessionState"* @_ZNK5blink21InspectorSessionState13ReattachStateEv(%"class.blink::InspectorSessionState"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink19InspectorAgentState11DeserializeEN5crdtp4spanIhEEPb(i8*, i64, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N4absl8optionalINS_6VectorIhLj0ENS_18PartitionAllocatorEEEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSD_IS8_EEEESE_S6_E4findERKS1_(%"class.WTF::HashTable.2891"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2891", %"class.WTF::HashTable.2891"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.2894"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.2891", %"class.WTF::HashTable.2891"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.2894"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.2894"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.2894"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.2891", %"class.WTF::HashTable.2891"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.2894", %"struct.WTF::KeyValuePair.2894"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.2894"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.2894"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"* } undef, %"struct.WTF::KeyValuePair.2894"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"* } %77, %"struct.WTF::KeyValuePair.2894"* %76, 1
  ret { %"struct.WTF::KeyValuePair.2894"*, %"struct.WTF::KeyValuePair.2894"* } %78
}

declare void @_ZN5blink19InspectorAgentStateC1ERKN3WTF6StringE(%"class.blink::InspectorAgentState"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState9SerializeEbPNS_9WebVectorIhEE(i1 zeroext, %"class.blink::WebVector.3688"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink19TraceMethodDelegateINS_14PersistentBaseINS_17InspectorCSSAgentELNS_31WeaknessPersistentConfigurationE0ELNS_38CrossThreadnessPersistentConfigurationE0EEEXadL_ZNKS5_15TracePersistentEPNS_7VisitorEEEE10TrampolineES7_PKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = alloca %"class.base::Location", align 8
  %4 = bitcast i8* %1 to %"class.blink::InspectorCSSAgent"**
  %5 = load %"class.blink::InspectorCSSAgent"*, %"class.blink::InspectorCSSAgent"** %4, align 8
  %6 = bitcast %"class.base::Location"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %6) #16
  call void @_ZN4base8LocationC1Ev(%"class.base::Location"* nonnull %3) #16
  %7 = icmp eq %"class.blink::InspectorCSSAgent"* %5, null
  br i1 %7, label %14, label %8

8:                                                ; preds = %2
  %9 = bitcast %"class.blink::InspectorCSSAgent"* %5 to i8*
  %10 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)***
  %11 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*** %10, align 8
  %12 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %11, i64 8
  %13 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*, %"class.base::Location"*)** %12, align 8
  call void %13(%"class.blink::Visitor"* %0, i8* nonnull %9, i8* nonnull %9, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorCSSAgentEE5TraceEPNS_7VisitorEPKv, %"class.base::Location"* nonnull dereferenceable(32) %3) #16
  br label %14

14:                                               ; preds = %2, %8
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %6) #16
  ret void
}

declare void @_ZN4base8LocationC1Ev(%"class.base::Location"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17InspectorCSSAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorCSSAgent"*
  tail call void @_ZNK5blink17InspectorCSSAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent"* %3, %"class.blink::Visitor"* %0)
  ret void
}

declare void @_ZN5blink20PersistentRegionBase15EnsureNodeSlotsEv(%"class.blink::PersistentRegionBase"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal7InvokerINS0_9BindStateIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS3_8protocol3CSS7Backend14EnableCallbackENS5_14default_deleteISA_EEEEEJNS3_10PersistentIS4_EESD_EEEFvvEE7RunOnceEPNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1
  %3 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 2
  %4 = bitcast %"class.base::internal::BindStateBase"* %2 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 1
  %7 = bitcast void ()** %6 to i64*
  %8 = load i64, i64* %7, align 8
  %9 = bitcast void (%"class.base::internal::BindStateBase"*)** %3 to i8**
  %10 = load i8*, i8** %9, align 8
  %11 = getelementptr inbounds i8, i8* %10, i64 %8
  %12 = bitcast i8* %11 to %"class.blink::InspectorCSSAgent"*
  %13 = and i64 %5, 1
  %14 = icmp eq i64 %13, 0
  br i1 %14, label %22, label %15

15:                                               ; preds = %1
  %16 = bitcast i8* %11 to i8**
  %17 = load i8*, i8** %16, align 8
  %18 = add i64 %5, -1
  %19 = getelementptr i8, i8* %17, i64 %18
  %20 = bitcast i8* %19 to void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)**
  %21 = load void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)** %20, align 8
  br label %24

22:                                               ; preds = %1
  %23 = inttoptr i64 %5 to void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)*
  br label %24

24:                                               ; preds = %15, %22
  %25 = phi void (%"class.blink::InspectorCSSAgent"*, %"class.blink::protocol::CSS::Backend::EnableCallback"*)* [ %21, %15 ], [ %23, %22 ]
  %26 = getelementptr inbounds void (%"class.base::internal::BindStateBase"*)*, void (%"class.base::internal::BindStateBase"*)** %3, i64 2
  %27 = bitcast void (%"class.base::internal::BindStateBase"*)** %26 to %"class.blink::protocol::CSS::Backend::EnableCallback"**
  %28 = load %"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.blink::protocol::CSS::Backend::EnableCallback"** %27, align 8
  store %"class.blink::protocol::CSS::Backend::EnableCallback"* null, %"class.blink::protocol::CSS::Backend::EnableCallback"** %27, align 8
  tail call void %25(%"class.blink::InspectorCSSAgent"* %12, %"class.blink::protocol::CSS::Backend::EnableCallback"* %28) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN4base8internal9BindStateIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS2_8protocol3CSS7Backend14EnableCallbackENS4_14default_deleteIS9_EEEEEJNS2_10PersistentIS3_EESC_EE7DestroyEPKNS0_13BindStateBaseE(%"class.base::internal::BindStateBase"*) #0 comdat align 2 {
  %2 = icmp eq %"class.base::internal::BindStateBase"* %0, null
  br i1 %2, label %39, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 2
  %5 = bitcast %"class.base::internal::BindStateBase"* %4 to %"class.blink::protocol::CSS::Backend::EnableCallback"**
  %6 = load %"class.blink::protocol::CSS::Backend::EnableCallback"*, %"class.blink::protocol::CSS::Backend::EnableCallback"** %5, align 8
  store %"class.blink::protocol::CSS::Backend::EnableCallback"* null, %"class.blink::protocol::CSS::Backend::EnableCallback"** %5, align 8
  %7 = icmp eq %"class.blink::protocol::CSS::Backend::EnableCallback"* %6, null
  br i1 %7, label %13, label %8

8:                                                ; preds = %3
  %9 = bitcast %"class.blink::protocol::CSS::Backend::EnableCallback"* %6 to void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)***
  %10 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)**, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)** %10, i64 4
  %12 = load void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)*, void (%"class.blink::protocol::CSS::Backend::EnableCallback"*)** %11, align 8
  tail call void %12(%"class.blink::protocol::CSS::Backend::EnableCallback"* nonnull %6) #16
  br label %13

13:                                               ; preds = %8, %3
  %14 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %0, i64 1, i32 3
  %15 = bitcast i1 (%"class.base::internal::BindStateBase"*, i32)** %14 to %"class.blink::PersistentNode"**
  %16 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %17 = icmp eq %"class.blink::PersistentNode"* %16, null
  br i1 %17, label %37, label %18

18:                                               ; preds = %13
  %19 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %20 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %19, i64 0, i32 1
  %21 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %20) #16
  %22 = icmp eq i8* %21, null
  br i1 %22, label %23, label %25, !prof !3

23:                                               ; preds = %18
  %24 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %20, i8* %24) #16
  br label %25

25:                                               ; preds = %23, %18
  %26 = phi i8* [ %24, %23 ], [ %21, %18 ]
  %27 = bitcast i8* %26 to %"class.blink::ThreadState"**
  %28 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %28, i64 0, i32 3, i32 0, i32 0, i32 0
  %30 = load %"class.blink::PersistentRegion"*, %"class.blink::PersistentRegion"** %29, align 8
  %31 = load %"class.blink::PersistentNode"*, %"class.blink::PersistentNode"** %15, align 8
  %32 = getelementptr inbounds %"class.blink::PersistentRegion", %"class.blink::PersistentRegion"* %30, i64 0, i32 0, i32 0
  %33 = bitcast %"class.blink::PersistentRegion"* %30 to i64*
  %34 = load i64, i64* %33, align 8
  %35 = bitcast %"class.blink::PersistentNode"* %31 to i64*
  store i64 %34, i64* %35, align 8
  %36 = getelementptr inbounds %"class.blink::PersistentNode", %"class.blink::PersistentNode"* %31, i64 0, i32 1
  store void (%"class.blink::Visitor"*, i8*)* null, void (%"class.blink::Visitor"*, i8*)** %36, align 8
  store %"class.blink::PersistentNode"* %31, %"class.blink::PersistentNode"** %32, align 8
  br label %37

37:                                               ; preds = %13, %25
  %38 = bitcast %"class.base::internal::BindStateBase"* %0 to i8*
  tail call void @_ZdlPv(i8* %38) #18
  br label %39

39:                                               ; preds = %37, %1
  ret void
}

declare void @_ZN4base8internal13BindStateBaseC2EPFvvEPFvPKS1_E(%"class.base::internal::BindStateBase"*, void ()*, void (%"class.base::internal::BindStateBase"*)*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.WTF::VectorBackedLinkedListNode"* @_ZNK3WTF6VectorINS_26VectorBackedLinkedListNodeIN5blink6MemberINS2_8FontFaceEEENS2_13HeapAllocatorEEELj0ES6_E2atEj(%"class.WTF::Vector.1450"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.1450", %"class.WTF::Vector.1450"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.1450", %"class.WTF::Vector.1450"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::VectorBackedLinkedListNode"*, %"class.WTF::VectorBackedLinkedListNode"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::VectorBackedLinkedListNode", %"class.WTF::VectorBackedLinkedListNode"* %24, i64 %25
  ret %"class.WTF::VectorBackedLinkedListNode"* %26
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS17FontVariationAxisENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE21__push_back_slow_pathIS8_EEvOT_(%"class.std::__1::vector.4080"*, %"class.std::__1::unique_ptr.4082"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4080", %"class.std::__1::vector.4080"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4082"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4080"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4080"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4080", %"class.std::__1::vector.4080"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4082"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4082"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4082"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4082"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4082"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4082"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4082"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4080", %"class.std::__1::vector.4080"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4082"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4082"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::FontVariationAxis"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4082"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4082"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4082"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4082"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !79

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4082"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4082"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4082"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4082"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4082"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4082"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4082"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4082"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4082"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4082"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4082"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4082"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4082"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4082"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4082"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4082"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4082"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4082"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4082"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4082"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4082"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4082"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4082"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4082"*, %"class.std::__1::unique_ptr.4082"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4082"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4082"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4082"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4082"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4082"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4082"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4082", %"class.std::__1::unique_ptr.4082"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::FontVariationAxis"*, %"class.blink::protocol::CSS::FontVariationAxis"** %142, align 8
  store %"class.blink::protocol::CSS::FontVariationAxis"* null, %"class.blink::protocol::CSS::FontVariationAxis"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::FontVariationAxis"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::FontVariationAxis"* %143 to void (%"class.blink::protocol::CSS::FontVariationAxis"*)***
  %147 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)**, void (%"class.blink::protocol::CSS::FontVariationAxis"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::FontVariationAxis"*)*, void (%"class.blink::protocol::CSS::FontVariationAxis"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::FontVariationAxis"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4082"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #15

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.3303"*, %"class.blink::Document"** dereferenceable(8), %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %4, align 8
  %6 = icmp eq %"class.blink::Member.326"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.3303"* %0, %"class.blink::Member.326"* null)
  %9 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.326"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Document"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = icmp eq %"class.blink::Document"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Document"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Document"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.326"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.326"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Document"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Document"* %59, inttoptr (i64 -1 to %"class.blink::Document"*)
  %67 = select i1 %66, %"class.blink::Member.326"* %60, %"class.blink::Member.326"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = icmp eq %"class.blink::Document"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.326"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.326"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.326"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Document"*, %"class.blink::Document"** %2, align 8
  %89 = ptrtoint %"class.blink::Document"* %88 to i64
  %90 = bitcast %"class.blink::Member.326"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::Document"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #16
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.326"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #16
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.3303"* %0, %"class.blink::Member.326"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.326"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.326"*, i8 } undef, %"class.blink::Member.326"* %117, 0
  %119 = insertvalue { %"class.blink::Member.326"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.326"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.3303"*, %"class.blink::Member.326"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.3303"* %0, i32 %35, %"class.blink::Member.326"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5185"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5185"* %42 to %"class.blink::Member.326"*
  %44 = call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.3303"* %0, %"class.blink::Member.326"* %43, i32 %40, %"class.blink::Member.326"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"class.blink::Member.326"* [ %44, %39 ], [ %36, %34 ]
  ret %"class.blink::Member.326"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE12ExpandBufferEjPS4_Rb(%"class.WTF::HashTable.3303"*, i32, %"class.blink::Member.326"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 0
  %32 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %31, align 8
  %33 = icmp eq %"class.blink::Member.326"* %32, null
  br i1 %33, label %103, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 3
  %37 = bitcast %"class.blink::Member.326"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %103

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5185"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5185"* %44 to %"class.blink::Member.326"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %69, label %47

47:                                               ; preds = %39
  %48 = and i64 %43, 1
  %49 = icmp eq i32 %41, 1
  br i1 %49, label %52, label %50

50:                                               ; preds = %47
  %51 = sub nsw i64 %43, %48
  br label %80

52:                                               ; preds = %106, %47
  %53 = phi %"class.blink::Member.326"* [ undef, %47 ], [ %100, %106 ]
  %54 = phi i64 [ 0, %47 ], [ %109, %106 ]
  %55 = phi %"class.blink::Member.326"* [ null, %47 ], [ %100, %106 ]
  %56 = icmp eq i64 %48, 0
  br i1 %56, label %69, label %57

57:                                               ; preds = %52
  %58 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %31, align 8
  %59 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %58, i64 %54
  %60 = icmp eq %"class.blink::Member.326"* %59, %2
  %61 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %45, i64 %54
  %62 = select i1 %60, %"class.blink::Member.326"* %61, %"class.blink::Member.326"* %55
  %63 = bitcast %"class.blink::Member.326"* %59 to i64*
  %64 = load i64, i64* %63, align 8
  switch i64 %64, label %65 [
    i64 -1, label %66
    i64 0, label %66
  ]

65:                                               ; preds = %57
  br label %66

66:                                               ; preds = %65, %57, %57
  %67 = phi i64 [ %64, %65 ], [ 0, %57 ], [ 0, %57 ]
  %68 = bitcast %"class.blink::Member.326"* %61 to i64*
  store i64 %67, i64* %68, align 8
  br label %69

69:                                               ; preds = %66, %52, %39
  %70 = phi %"class.blink::Member.326"* [ null, %39 ], [ %53, %52 ], [ %62, %66 ]
  %71 = bitcast %"class.WTF::HashTable.3303"* %0 to %"class.blink::HeapHashTableBacking.5185"**
  store %"class.blink::HeapHashTableBacking.5185"* %44, %"class.blink::HeapHashTableBacking.5185"** %71, align 8
  %72 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %77, label %74

74:                                               ; preds = %69
  %75 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5185", %"class.blink::HeapHashTableBacking.5185"* %44, i64 0, i32 0
  %76 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %75) #16
  br label %77

77:                                               ; preds = %69, %74
  %78 = bitcast %"class.blink::Member.326"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 %36, i1 false)
  %79 = call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.3303"* %0, %"class.blink::Member.326"* %42, i32 %1, %"class.blink::Member.326"* %70)
  br label %103

80:                                               ; preds = %106, %50
  %81 = phi i64 [ 0, %50 ], [ %109, %106 ]
  %82 = phi %"class.blink::Member.326"* [ null, %50 ], [ %100, %106 ]
  %83 = phi i64 [ %51, %50 ], [ %110, %106 ]
  %84 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %31, align 8
  %85 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %84, i64 %81
  %86 = icmp eq %"class.blink::Member.326"* %85, %2
  %87 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %45, i64 %81
  %88 = select i1 %86, %"class.blink::Member.326"* %87, %"class.blink::Member.326"* %82
  %89 = bitcast %"class.blink::Member.326"* %85 to i64*
  %90 = load i64, i64* %89, align 8
  switch i64 %90, label %91 [
    i64 -1, label %92
    i64 0, label %92
  ]

91:                                               ; preds = %80
  br label %92

92:                                               ; preds = %80, %80, %91
  %93 = phi i64 [ %90, %91 ], [ 0, %80 ], [ 0, %80 ]
  %94 = bitcast %"class.blink::Member.326"* %87 to i64*
  store i64 %93, i64* %94, align 8
  %95 = or i64 %81, 1
  %96 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %31, align 8
  %97 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %96, i64 %95
  %98 = icmp eq %"class.blink::Member.326"* %97, %2
  %99 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %45, i64 %95
  %100 = select i1 %98, %"class.blink::Member.326"* %99, %"class.blink::Member.326"* %88
  %101 = bitcast %"class.blink::Member.326"* %97 to i64*
  %102 = load i64, i64* %101, align 8
  switch i64 %102, label %105 [
    i64 -1, label %106
    i64 0, label %106
  ]

103:                                              ; preds = %34, %30, %77
  %104 = phi %"class.blink::Member.326"* [ %79, %77 ], [ null, %30 ], [ null, %34 ]
  ret %"class.blink::Member.326"* %104

105:                                              ; preds = %92
  br label %106

106:                                              ; preds = %105, %92, %92
  %107 = phi i64 [ %102, %105 ], [ 0, %92 ], [ 0, %92 ]
  %108 = bitcast %"class.blink::Member.326"* %99 to i64*
  store i64 %107, i64* %108, align 8
  %109 = add nuw nsw i64 %81, 2
  %110 = add i64 %83, -2
  %111 = icmp eq i64 %110, 0
  br i1 %111, label %52, label %80
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.3303"*, %"class.blink::Member.326"*, i32, %"class.blink::Member.326"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"class.blink::Member.326"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %14, label %9

9:                                                ; preds = %4
  %10 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 0
  %11 = add i32 %2, -1
  %12 = zext i32 %11 to i64
  %13 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %10, align 8
  br label %37

14:                                               ; preds = %125, %4
  %15 = phi %"class.blink::Member.326"* [ null, %4 ], [ %128, %125 ]
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %20, label %18

18:                                               ; preds = %14
  %19 = bitcast %"class.blink::Member.326"* %1 to i8*
  tail call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %19) #16
  br label %20

20:                                               ; preds = %14, %18
  %21 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 0
  %22 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %21, align 8
  %23 = bitcast %"class.WTF::HashTable.3303"* %0 to i64*
  store atomic i64 %5, i64* %23 monotonic, align 8
  %24 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %29, label %26

26:                                               ; preds = %20
  %27 = bitcast %"class.blink::Member.326"* %1 to i8*
  %28 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %27) #16
  br label %29

29:                                               ; preds = %20, %26
  store i32 %2, i32* %6, align 8
  %30 = icmp eq %"class.blink::Member.326"* %22, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = bitcast %"class.blink::Member.326"* %22 to i8*
  tail call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %32) #16
  br label %33

33:                                               ; preds = %29, %31
  %34 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 3
  %35 = load i32, i32* %34, align 8
  %36 = and i32 %35, -2147483648
  store i32 %36, i32* %34, align 8
  ret %"class.blink::Member.326"* %15

37:                                               ; preds = %9, %125
  %38 = phi i32 [ %7, %9 ], [ %126, %125 ]
  %39 = phi %"class.blink::Member.326"* [ %13, %9 ], [ %127, %125 ]
  %40 = phi %"class.blink::Member.326"* [ null, %9 ], [ %128, %125 ]
  %41 = phi i32 [ 0, %9 ], [ %129, %125 ]
  %42 = zext i32 %41 to i64
  %43 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %39, i64 %42
  %44 = bitcast %"class.blink::Member.326"* %43 to i64*
  %45 = load i64, i64* %44, align 8
  switch i64 %45, label %46 [
    i64 -1, label %125
    i64 0, label %125
  ]

46:                                               ; preds = %37
  %47 = shl i64 %45, 32
  %48 = xor i64 %47, -1
  %49 = add i64 %45, %48
  %50 = lshr i64 %49, 22
  %51 = xor i64 %50, %49
  %52 = shl i64 %51, 13
  %53 = xor i64 %52, -1
  %54 = add i64 %51, %53
  %55 = lshr i64 %54, 8
  %56 = xor i64 %55, %54
  %57 = mul i64 %56, 9
  %58 = lshr i64 %57, 15
  %59 = xor i64 %58, %57
  %60 = shl i64 %59, 27
  %61 = xor i64 %60, -1
  %62 = add i64 %59, %61
  %63 = lshr i64 %62, 31
  %64 = xor i64 %63, %62
  %65 = trunc i64 %64 to i32
  %66 = and i32 %11, %65
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %1, i64 %67
  %69 = ptrtoint %"class.blink::Member.326"* %68 to i64
  %70 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %68, i64 0, i32 0, i32 0
  %71 = load %"class.blink::Document"*, %"class.blink::Document"** %70, align 8
  %72 = icmp eq %"class.blink::Document"* %71, null
  %73 = inttoptr i64 %45 to %"class.blink::Document"*
  br i1 %72, label %91, label %74

74:                                               ; preds = %46
  %75 = xor i32 %65, -1
  %76 = lshr i32 %65, 23
  %77 = add i32 %76, %75
  %78 = shl i32 %77, 12
  %79 = xor i32 %78, %77
  %80 = lshr i32 %79, 7
  %81 = xor i32 %80, %79
  %82 = shl i32 %81, 2
  %83 = xor i32 %82, %81
  %84 = lshr i32 %83, 20
  %85 = xor i32 %84, %83
  %86 = or i32 %85, 1
  %87 = zext i32 %86 to i64
  br label %97

88:                                               ; preds = %104
  %89 = ptrtoint %"class.blink::Member.326"* %111 to i64
  %90 = inttoptr i64 %106 to %"class.blink::Member.326"*
  br label %91

91:                                               ; preds = %88, %46
  %92 = phi i64 [ %89, %88 ], [ %69, %46 ]
  %93 = phi %"class.blink::Member.326"* [ %90, %88 ], [ null, %46 ]
  %94 = icmp eq %"class.blink::Member.326"* %93, null
  %95 = ptrtoint %"class.blink::Member.326"* %93 to i64
  %96 = select i1 %94, i64 %92, i64 %95
  br label %116

97:                                               ; preds = %104, %74
  %98 = phi i64 [ 0, %74 ], [ %106, %104 ]
  %99 = phi %"class.blink::Document"* [ %71, %74 ], [ %114, %104 ]
  %100 = phi i64 [ %69, %74 ], [ %112, %104 ]
  %101 = phi i64 [ %67, %74 ], [ %110, %104 ]
  %102 = phi i64 [ 0, %74 ], [ %108, %104 ]
  %103 = icmp eq %"class.blink::Document"* %99, %73
  br i1 %103, label %116, label %104

104:                                              ; preds = %97
  %105 = icmp eq %"class.blink::Document"* %99, inttoptr (i64 -1 to %"class.blink::Document"*)
  %106 = select i1 %105, i64 %100, i64 %98
  %107 = icmp eq i64 %102, 0
  %108 = select i1 %107, i64 %87, i64 %102
  %109 = add i64 %108, %101
  %110 = and i64 %109, %12
  %111 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %1, i64 %110
  %112 = ptrtoint %"class.blink::Member.326"* %111 to i64
  %113 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %111, i64 0, i32 0, i32 0
  %114 = load %"class.blink::Document"*, %"class.blink::Document"** %113, align 8
  %115 = icmp eq %"class.blink::Document"* %114, null
  br i1 %115, label %88, label %97

116:                                              ; preds = %97, %91
  %117 = phi i64 [ %96, %91 ], [ %100, %97 ]
  %118 = inttoptr i64 %117 to %"class.blink::Member.326"*
  %119 = inttoptr i64 %117 to i64*
  store i64 %45, i64* %119, align 8
  %120 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %10, align 8
  %121 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %120, i64 %42
  %122 = icmp eq %"class.blink::Member.326"* %121, %3
  %123 = select i1 %122, %"class.blink::Member.326"* %118, %"class.blink::Member.326"* %40
  %124 = load i32, i32* %6, align 8
  br label %125

125:                                              ; preds = %37, %37, %116
  %126 = phi i32 [ %38, %37 ], [ %124, %116 ], [ %38, %37 ]
  %127 = phi %"class.blink::Member.326"* [ %39, %37 ], [ %120, %116 ], [ %39, %37 ]
  %128 = phi %"class.blink::Member.326"* [ %40, %37 ], [ %123, %116 ], [ %40, %37 ]
  %129 = add i32 %41, 1
  %130 = icmp eq i32 %129, %126
  br i1 %130, label %14, label %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5185"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %22 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %27

24:                                               ; preds = %19
  %25 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %26 = call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %25, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %27

27:                                               ; preds = %19, %24
  %28 = phi i32 [ %22, %19 ], [ %26, %24 ]
  %29 = call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %21, %"class.blink::ThreadState"* bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadState"*), i64 %20, i32 5, i32 %28, i8* getelementptr inbounds ([336 x i8], [336 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_8DocumentEEES6_NS_17IdentityExtractorENS_10MemberHashIS5_EENS_10HashTraitsIS6_EESB_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0)) #16
  %30 = bitcast i8* %29 to %"class.blink::HeapHashTableBacking.5185"*
  %31 = getelementptr inbounds i8, i8* %29, i64 -4
  %32 = bitcast i8* %31 to i16*
  %33 = load atomic i16, i16* %32 monotonic, align 2
  %34 = or i16 %33, 1
  store atomic i16 %34, i16* %32 release, align 2
  ret %"class.blink::HeapHashTableBacking.5185"* %30
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.326"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %3, i64 %33
  %35 = bitcast %"class.blink::Member.326"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Document"*
  %4 = bitcast i8* %1 to void (%"class.blink::Document"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)**, void (%"class.blink::Document"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Document"*, %"class.blink::Visitor"*)*, void (%"class.blink::Document"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Document"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS4_EENS6_10HashTraitsIS5_EEEEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([198 x i8], [198 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink11HeapHashSetINS1_6MemberINS1_13CSSStyleSheetEEENS_10MemberHashIS4_EENS_10HashTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to i64*
  %4 = load atomic i64, i64* %3 monotonic, align 8
  %5 = bitcast i8* %1 to i8**
  %6 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8**)***
  %7 = load void (%"class.blink::Visitor"*, i8**)**, void (%"class.blink::Visitor"*, i8**)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %7, i64 11
  %9 = load void (%"class.blink::Visitor"*, i8**)*, void (%"class.blink::Visitor"*, i8**)** %8, align 8
  tail call void %9(%"class.blink::Visitor"* %0, i8** %5) #16
  %10 = icmp eq i64 %4, 0
  br i1 %10, label %17, label %11

11:                                               ; preds = %2
  %12 = inttoptr i64 %4 to i8*
  %13 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %14 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %13, align 8
  %15 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %14, i64 5
  %16 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %15, align 8
  tail call void %16(%"class.blink::Visitor"* %0, i8* nonnull %12, i8* nonnull %12, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv) #16
  br label %17

17:                                               ; preds = %2, %11
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3298"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISL_SH_SM_EERPS3_RPSD_EENS_18HashTableAddResultISN_SF_EEOT0_OT1_(%"class.WTF::HashTable.3296"*, %"class.blink::Document"** dereferenceable(8), %"class.blink::HeapHashSet.4120"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3298"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable.3296"* %0, %"struct.WTF::KeyValuePair.3298"* null)
  %9 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3298"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Document"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = icmp eq %"class.blink::Document"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Document"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Document"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3298"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3298"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Document"* %59, %43
  br i1 %64, label %119, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Document"* %59, inttoptr (i64 -1 to %"class.blink::Document"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3298"* %60, %"struct.WTF::KeyValuePair.3298"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = icmp eq %"class.blink::Document"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3298"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3298"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::Document"*, %"class.blink::Document"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::Document"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3298"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::Document"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.3298"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::Document"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #16
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %89, i64 0, i32 1
  %99 = load %"class.blink::HeapHashSet.4120"*, %"class.blink::HeapHashSet.4120"** %2, align 8
  %100 = ptrtoint %"class.blink::HeapHashSet.4120"* %99 to i64
  %101 = bitcast %"class.blink::Member.4982"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::HeapHashSet.4120"* %99 to i8*
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #16
  br label %107

107:                                              ; preds = %97, %104
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_8DocumentEEENS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS8_EENS2_10HashTraitsIS9_EEEEEEEENS2_18HashMapValueTraitsINSC_IS6_EENSC_ISF_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3298"* %89) #16
  %108 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable.3296"* %0, %"struct.WTF::KeyValuePair.3298"* %89)
  br label %119

119:                                              ; preds = %58, %107, %117
  %120 = phi i8 [ 1, %107 ], [ 1, %117 ], [ 0, %58 ]
  %121 = phi %"struct.WTF::KeyValuePair.3298"* [ %89, %107 ], [ %118, %117 ], [ %60, %58 ]
  %122 = insertvalue { %"struct.WTF::KeyValuePair.3298"*, i8 } undef, %"struct.WTF::KeyValuePair.3298"* %121, 0
  %123 = insertvalue { %"struct.WTF::KeyValuePair.3298"*, i8 } %122, i8 %120, 1
  ret { %"struct.WTF::KeyValuePair.3298"*, i8 } %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE6ExpandEPSF_(%"class.WTF::HashTable.3296"*, %"struct.WTF::KeyValuePair.3298"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE12ExpandBufferEjPSF_Rb(%"class.WTF::HashTable.3296"* %0, i32 %35, %"struct.WTF::KeyValuePair.3298"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5196"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5196"* %42 to %"struct.WTF::KeyValuePair.3298"*
  %44 = call %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable.3296"* %0, %"struct.WTF::KeyValuePair.3298"* %43, i32 %40, %"struct.WTF::KeyValuePair.3298"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.3298"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3298"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE12ExpandBufferEjPSF_Rb(%"class.WTF::HashTable.3296"*, i32, %"struct.WTF::KeyValuePair.3298"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3298"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.3298"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5196"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5196"* %44 to %"struct.WTF::KeyValuePair.3298"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.3298"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.3296"* %0 to %"class.blink::HeapHashTableBacking.5196"**
  store %"class.blink::HeapHashTableBacking.5196"* %44, %"class.blink::HeapHashTableBacking.5196"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5196", %"class.blink::HeapHashTableBacking.5196"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.3298"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable.3296"* %0, %"struct.WTF::KeyValuePair.3298"* %42, i32 %1, %"struct.WTF::KeyValuePair.3298"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.3298"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.3298"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.3298"* %64, %"struct.WTF::KeyValuePair.3298"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.3298"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.3298"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.3298"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.4982"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.4982"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.3298"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3298"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable.3296"*, %"struct.WTF::KeyValuePair.3298"*, i32, %"struct.WTF::KeyValuePair.3298"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3296", align 8
  %6 = bitcast %"class.WTF::HashTable.3296"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3296"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3298"* %1, %"struct.WTF::KeyValuePair.3298"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3298"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3298"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.3296"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3298"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3296"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3296"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3296"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3298"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.3298"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.3298"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.3298"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.3298"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3296"* nonnull %5, %"class.blink::Member.326"* dereferenceable(8) %67) #16
  %69 = extractvalue { %"struct.WTF::KeyValuePair.3298"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.3298"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.4982"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.4982"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.3298"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.3298"* %69, %"struct.WTF::KeyValuePair.3298"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.3298"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.3298"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5196"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS1_12KeyValuePairIS5_NS3_INS_11HeapHashSetINS3_INS_13CSSStyleSheetEEENS1_10MemberHashIS8_EENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENSA_IS4_EENS1_18HashMapValueTraitsINSC_IS5_EENSC_ISF_EEEESK_NS_13HeapAllocatorEEEE14AllocateObjectISP_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5196"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5196"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS1_12KeyValuePairIS5_NS3_INS_11HeapHashSetINS3_INS_13CSSStyleSheetEEENS1_10MemberHashIS8_EENS1_10HashTraitsIS9_EEEEEEEENS1_24KeyValuePairKeyExtractorENSA_IS4_EENS1_18HashMapValueTraitsINSC_IS5_EENSC_ISF_EEEESK_NS_13HeapAllocatorEEEE14AllocateObjectISP_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([743 x i8], [743 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_8DocumentEEENS_12KeyValuePairIS6_NS4_INS1_11HeapHashSetINS4_INS1_13CSSStyleSheetEEENS_10MemberHashIS9_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENSB_IS5_EENS_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_8DocumentEEENS_12KeyValuePairIS6_NS4_INS3_11HeapHashSetINS4_INS3_13CSSStyleSheetEEENS_10MemberHashIS9_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENSB_IS5_EENS_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_8DocumentEEENS_12KeyValuePairIS6_NS4_INS3_11HeapHashSetINS4_INS3_13CSSStyleSheetEEENS_10MemberHashIS9_EENS_10HashTraitsISA_EEEEEEEENS_24KeyValuePairKeyExtractorENSB_IS5_EENS_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3298"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %73, %20
  ret void

33:                                               ; preds = %73, %30
  %34 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.3298"* %35 to i64*
  br i1 %28, label %37, label %53

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %73
    i64 0, label %73
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.4982"* %40 to i64*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #16
  %46 = load atomic i64, i64* %41 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %73, label %48

48:                                               ; preds = %39
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #16
  br label %73

53:                                               ; preds = %33
  %54 = load i64, i64* %36, align 8
  switch i64 %54, label %55 [
    i64 -1, label %73
    i64 0, label %73
  ]

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %3, i64 %34, i32 1
  %57 = load atomic i64, i64* %36 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = inttoptr i64 %57 to i8*
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %0, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #16
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.blink::Member.4982"* %56 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #16
  br label %73

73:                                               ; preds = %53, %53, %37, %37, %68, %64, %39, %48
  %74 = add nuw nsw i64 %34, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3298"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3296"*, %"class.blink::Member.326"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.326"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3298"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = icmp eq %"class.blink::Document"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Document"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3298"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.3298"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3298"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3298"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3298"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Document"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = icmp eq %"class.blink::Document"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Document"* %63, inttoptr (i64 -1 to %"class.blink::Document"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.3298"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Document"*, %"class.blink::Document"** %79, align 8
  %81 = icmp eq %"class.blink::Document"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.3298"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.3298"*, i8 } undef, %"struct.WTF::KeyValuePair.3298"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.3298"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.3298"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_8DocumentEEENS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS8_EENS2_10HashTraitsIS9_EEEEEEEENS2_18HashMapValueTraitsINSC_IS6_EENSC_ISF_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3298"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair.3298"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_8DocumentEE5TraceEPNS_7VisitorEPKv) #16
  br label %35

35:                                               ; preds = %18, %29
  %36 = bitcast %"class.blink::Member.4982"* %25 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* nonnull %40, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_11HeapHashSetINS_6MemberINS_13CSSStyleSheetEEEN3WTF10MemberHashIS3_EENS5_10HashTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv) #16
  br label %45

45:                                               ; preds = %35, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.389"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_RSF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.4124"*, %"class.blink::CSSStyleSheet"** dereferenceable(8), %"class.blink::CSSStyleSheet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %4, align 8
  %6 = icmp eq %"class.blink::Member.389"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* null)
  %9 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.389"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CSSStyleSheet"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %40, align 8
  %42 = icmp eq %"class.blink::CSSStyleSheet"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CSSStyleSheet"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CSSStyleSheet"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.389"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.389"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CSSStyleSheet"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %59, inttoptr (i64 -1 to %"class.blink::CSSStyleSheet"*)
  %67 = select i1 %66, %"class.blink::Member.389"* %60, %"class.blink::Member.389"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %73, align 8
  %75 = icmp eq %"class.blink::CSSStyleSheet"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.389"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.389"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.389"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %2, align 8
  %89 = ptrtoint %"class.blink::CSSStyleSheet"* %88 to i64
  %90 = bitcast %"class.blink::Member.389"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::CSSStyleSheet"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #16
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.389"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #16
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.389"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.389"*, i8 } undef, %"class.blink::Member.389"* %117, 0
  %119 = insertvalue { %"class.blink::Member.389"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.389"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.4124"*, %"class.blink::Member.389"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.389"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.4124", %"class.WTF::HashTable.4124"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #16
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !3

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #16
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #16
  %46 = bitcast %"class.blink::HeapHashTableBacking"* %45 to %"class.blink::Member.389"*
  %47 = tail call %"class.blink::Member.389"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.4124"* %0, %"class.blink::Member.389"* %46, i32 %43, %"class.blink::Member.389"* null) #16
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPS3_EEvOT_(%"class.WTF::Vector.386"*, %"class.blink::CSSStyleSheet"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.386"* %0, i32 %14) #16
  %15 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSStyleSheet"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.389"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.386"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %8, align 8
  %10 = icmp eq %"class.blink::Member.389"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %11) #16
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.5210"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #16
  %16 = ptrtoint %"class.blink::HeapVectorBacking.5210"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.386"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.5210", %"class.blink::HeapVectorBacking.5210"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #16
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %8, align 8
  %26 = icmp eq %"class.blink::Member.389"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.389"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #16
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #16
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.386"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_13CSSStyleSheetEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.386"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.386"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.386"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #16
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #16
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64 %14) #16
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.5210"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #16
  %18 = ptrtoint %"class.blink::HeapVectorBacking.5210"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.389"*, %"class.blink::Member.389"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.5210"* %17, null
  %23 = icmp ne %"class.blink::Member.389"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.389"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.386"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.5210", %"class.blink::HeapVectorBacking.5210"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #16
  %33 = bitcast %"class.WTF::Vector.386"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #16
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #16
  %42 = bitcast %"class.WTF::Vector.386"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.386", %"class.WTF::Vector.386"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.5210", %"class.blink::HeapVectorBacking.5210"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #16
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_13CSSStyleSheetEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.60, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.61, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.5210"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.62, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.5210"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.5210"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([167 x i8], [167 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_13CSSStyleSheetEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.389"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.389", %"class.blink::Member.389"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.389"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_13CSSStyleSheetEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8ContainsINS_22IdentityHashTranslatorIS9_SE_SF_EES1_EEbRKT0_(%"class.WTF::HashTable.3275"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3277"* %4, null
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %61, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.3277"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.3277"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %61, label %41

61:                                               ; preds = %48, %52, %2, %19
  %62 = phi %"struct.WTF::KeyValuePair.3277"* [ null, %2 ], [ null, %19 ], [ %42, %48 ], [ null, %52 ]
  %63 = icmp ne %"struct.WTF::KeyValuePair.3277"* %62, null
  ret i1 %63
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE5eraseEPKSF_(%"class.WTF::HashTable.3296"*, %"struct.WTF::KeyValuePair.3298"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair.3298"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.4982"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #16
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #16
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.5196"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEENS2_12KeyValuePairIS6_NS4_INS_11HeapHashSetINS4_INS_13CSSStyleSheetEEENS2_10MemberHashIS9_EENS2_10HashTraitsISA_EEEEEEEENS2_24KeyValuePairKeyExtractorENSB_IS5_EENS2_18HashMapValueTraitsINSD_IS6_EENSD_ISG_EEEESL_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #16
  %48 = bitcast %"class.blink::HeapHashTableBacking.5196"* %47 to %"struct.WTF::KeyValuePair.3298"*
  %49 = tail call %"struct.WTF::KeyValuePair.3298"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE8RehashToEPSF_jSO_(%"class.WTF::HashTable.3296"* %0, %"struct.WTF::KeyValuePair.3298"* %48, i32 %45, %"struct.WTF::KeyValuePair.3298"* null) #16
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEENS_12KeyValuePairIS4_NS2_INS1_11HeapHashSetINS2_INS1_13CSSStyleSheetEEENS_10MemberHashIS7_EENS_10HashTraitsIS8_EEEEEEEENS_24KeyValuePairKeyExtractorENS9_IS3_EENS_18HashMapValueTraitsINSB_IS4_EENSB_ISE_EEEESJ_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3296"*, %"class.blink::Document"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Document"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3298"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.3296", %"class.WTF::HashTable.3296"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Document"*, %"class.blink::Document"** %34, align 8
  %36 = icmp eq %"class.blink::Document"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Document"*, %"class.blink::Document"** %54, align 8
  %56 = icmp eq %"class.blink::Document"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Document"*, %"class.blink::Document"** %63, align 8
  %65 = icmp eq %"class.blink::Document"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.3298"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.3298"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3298", %"struct.WTF::KeyValuePair.3298"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.3298"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.3298"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"* } undef, %"struct.WTF::KeyValuePair.3298"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"* } %78, %"struct.WTF::KeyValuePair.3298"* %77, 1
  ret { %"struct.WTF::KeyValuePair.3298"*, %"struct.WTF::KeyValuePair.3298"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE5eraseEPKS4_(%"class.WTF::HashTable.3303"*, %"class.blink::Member.326"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"class.blink::Member.326"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 3
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, 1
  %7 = and i32 %6, 2147483647
  %8 = and i32 %5, -2147483648
  %9 = or i32 %7, %8
  store i32 %9, i32* %4, align 8
  %10 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = add i32 %11, -1
  store i32 %12, i32* %10, align 4
  %13 = mul i32 %12, 6
  %14 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 1
  %15 = load i32, i32* %14, align 8
  %16 = icmp ult i32 %13, %15
  %17 = icmp ugt i32 %15, 8
  %18 = and i1 %16, %17
  br i1 %18, label %19, label %48

19:                                               ; preds = %2
  %20 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %21 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %20, i64 0, i32 1
  %22 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %21) #16
  %23 = icmp eq i8* %22, null
  br i1 %23, label %24, label %26, !prof !3

24:                                               ; preds = %19
  %25 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %21, i8* %25) #16
  br label %26

26:                                               ; preds = %24, %19
  %27 = phi i8* [ %25, %24 ], [ %22, %19 ]
  %28 = bitcast i8* %27 to %"class.blink::ThreadState"**
  %29 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 6
  %31 = load i8, i8* %30, align 8, !range !4
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %37, label %33

33:                                               ; preds = %26
  %34 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 16
  %35 = load i32, i32* %34, align 4
  %36 = icmp eq i32 %35, 1
  br i1 %36, label %48, label %37

37:                                               ; preds = %26, %33
  %38 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %29, i64 0, i32 13
  %39 = load i64, i64* %38, align 8
  %40 = icmp eq i64 %39, 0
  br i1 %40, label %41, label %48

41:                                               ; preds = %37
  %42 = load i32, i32* %14, align 8
  %43 = lshr i32 %42, 1
  %44 = zext i32 %43 to i64
  %45 = tail call %"class.blink::HeapHashTableBacking.5185"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_8DocumentEEES6_NS2_17IdentityExtractorENS2_10MemberHashIS5_EENS2_10HashTraitsIS6_EESB_NS_13HeapAllocatorEEEEEE4CallEm(i64 %44) #16
  %46 = bitcast %"class.blink::HeapHashTableBacking.5185"* %45 to %"class.blink::Member.326"*
  %47 = tail call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE8RehashToEPS4_jSC_(%"class.WTF::HashTable.3303"* %0, %"class.blink::Member.326"* %46, i32 %43, %"class.blink::Member.326"* null) #16
  br label %48

48:                                               ; preds = %33, %2, %41, %37
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS20PseudoElementMatchesENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4306"*, %"class.std::__1::unique_ptr.4308"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4306", %"class.std::__1::vector.4306"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4308"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4306"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4306"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4306", %"class.std::__1::vector.4306"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4308"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4308"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4308"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4308"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4308"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4308"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4308"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4306", %"class.std::__1::vector.4306"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4308"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4308"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::PseudoElementMatches"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4308"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4308"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4308"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4308"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !81

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4308"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4308"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4308"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4308"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4308"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4308"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4308"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4308"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4308"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4308"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4308"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4308"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4308"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4308"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4308"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4308"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4308"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4308"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4308"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4308"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4308"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4308"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4308"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4308"*, %"class.std::__1::unique_ptr.4308"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4308"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4308"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4308"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4308"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4308"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4308"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4308", %"class.std::__1::unique_ptr.4308"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::PseudoElementMatches"*, %"class.blink::protocol::CSS::PseudoElementMatches"** %142, align 8
  store %"class.blink::protocol::CSS::PseudoElementMatches"* null, %"class.blink::protocol::CSS::PseudoElementMatches"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::PseudoElementMatches"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::PseudoElementMatches"* %143 to void (%"class.blink::protocol::CSS::PseudoElementMatches"*)***
  %147 = load void (%"class.blink::protocol::CSS::PseudoElementMatches"*)**, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::PseudoElementMatches"*)*, void (%"class.blink::protocol::CSS::PseudoElementMatches"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::PseudoElementMatches"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4308"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS19InheritedStyleEntryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4329"*, %"class.std::__1::unique_ptr.4331"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4329", %"class.std::__1::vector.4329"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4331"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4329"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4329"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4329", %"class.std::__1::vector.4329"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4331"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4331"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4331"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4331"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4331"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4331"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4331"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4329", %"class.std::__1::vector.4329"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4331"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4331"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::InheritedStyleEntry"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4331"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4331"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4331"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4331"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !82

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4331"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4331"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4331"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4331"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4331"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4331"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4331"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4331"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4331"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4331"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4331"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4331"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4331"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4331"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4331"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4331"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4331"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4331"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4331"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4331"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4331"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4331"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4331"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4331"*, %"class.std::__1::unique_ptr.4331"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4331"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4331"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4331"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4331"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4331"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4331"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4331", %"class.std::__1::unique_ptr.4331"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::InheritedStyleEntry"*, %"class.blink::protocol::CSS::InheritedStyleEntry"** %142, align 8
  store %"class.blink::protocol::CSS::InheritedStyleEntry"* null, %"class.blink::protocol::CSS::InheritedStyleEntry"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::InheritedStyleEntry"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::InheritedStyleEntry"* %143 to void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)***
  %147 = load void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)**, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)*, void (%"class.blink::protocol::CSS::InheritedStyleEntry"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::InheritedStyleEntry"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4331"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK3WTF6VectorINS_12AtomicStringELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.284"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1176, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.284", %"class.WTF::Vector.284"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %24, i64 %25
  ret %"class.WTF::AtomicString"* %26
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %"class.blink::CSSKeyframesRule"* @_ZN5blinkL17FindKeyframesRuleINS_11CSSRuleListEEEPNS_16CSSKeyframesRuleEPT_PNS_18StyleRuleKeyframesE(%"class.blink::CSSRuleList"*, %"class.blink::StyleRuleKeyframes"*) unnamed_addr #0 {
  %3 = icmp eq %"class.blink::CSSRuleList"* %0, null
  br i1 %3, label %12, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.blink::CSSRuleList"* %0 to i32 (%"class.blink::CSSRuleList"*)***
  %6 = bitcast %"class.blink::CSSRuleList"* %0 to %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)***
  %7 = load i32 (%"class.blink::CSSRuleList"*)**, i32 (%"class.blink::CSSRuleList"*)*** %5, align 8
  %8 = getelementptr inbounds i32 (%"class.blink::CSSRuleList"*)*, i32 (%"class.blink::CSSRuleList"*)** %7, i64 9
  %9 = load i32 (%"class.blink::CSSRuleList"*)*, i32 (%"class.blink::CSSRuleList"*)** %8, align 8
  %10 = tail call i32 %9(%"class.blink::CSSRuleList"* nonnull %0) #16
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %14

12:                                               ; preds = %52, %4, %2
  %13 = phi %"class.blink::CSSKeyframesRule"* [ null, %2 ], [ null, %4 ], [ %53, %52 ]
  ret %"class.blink::CSSKeyframesRule"* %13

14:                                               ; preds = %4, %52
  %15 = phi i32 [ %54, %52 ], [ 0, %4 ]
  %16 = load %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)**, %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)*** %6, align 8
  %17 = getelementptr inbounds %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)*, %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)** %16, i64 10
  %18 = load %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)*, %"class.blink::CSSRule"* (%"class.blink::CSSRuleList"*, i32)** %17, align 8
  %19 = tail call %"class.blink::CSSRule"* %18(%"class.blink::CSSRuleList"* nonnull %0, i32 %15) #16
  %20 = icmp eq %"class.blink::CSSRule"* %19, null
  br i1 %20, label %45, label %21

21:                                               ; preds = %14
  %22 = bitcast %"class.blink::CSSRule"* %19 to i32 (%"class.blink::CSSRule"*)***
  %23 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %22, align 8
  %24 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %23, i64 9
  %25 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %24, align 8
  %26 = tail call i32 %25(%"class.blink::CSSRule"* nonnull %19) #16
  %27 = icmp eq i32 %26, 7
  br i1 %27, label %28, label %35

28:                                               ; preds = %21
  %29 = bitcast %"class.blink::CSSRule"* %19 to %"class.blink::CSSKeyframesRule"*
  %30 = getelementptr inbounds %"class.blink::CSSRule", %"class.blink::CSSRule"* %19, i64 1
  %31 = bitcast %"class.blink::CSSRule"* %30 to %"class.blink::StyleRuleKeyframes"**
  %32 = load %"class.blink::StyleRuleKeyframes"*, %"class.blink::StyleRuleKeyframes"** %31, align 8
  %33 = icmp eq %"class.blink::StyleRuleKeyframes"* %32, %1
  %34 = select i1 %33, %"class.blink::CSSKeyframesRule"* %29, %"class.blink::CSSKeyframesRule"* null
  br label %52

35:                                               ; preds = %21
  %36 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %22, align 8
  %37 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %36, i64 9
  %38 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %37, align 8
  %39 = tail call i32 %38(%"class.blink::CSSRule"* nonnull %19) #16
  %40 = icmp eq i32 %39, 3
  br i1 %40, label %41, label %45

41:                                               ; preds = %35
  %42 = bitcast %"class.blink::CSSRule"* %19 to %"class.blink::CSSImportRule"*
  %43 = tail call %"class.blink::CSSStyleSheet"* @_ZNK5blink13CSSImportRule10styleSheetEv(%"class.blink::CSSImportRule"* nonnull %42) #16
  %44 = tail call fastcc %"class.blink::CSSKeyframesRule"* @_ZN5blinkL17FindKeyframesRuleINS_13CSSStyleSheetEEEPNS_16CSSKeyframesRuleEPT_PNS_18StyleRuleKeyframesE(%"class.blink::CSSStyleSheet"* %43, %"class.blink::StyleRuleKeyframes"* %1)
  br label %52

45:                                               ; preds = %35, %14
  %46 = bitcast %"class.blink::CSSRule"* %19 to %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)***
  %47 = load %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)**, %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)*** %46, align 8
  %48 = getelementptr inbounds %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)*, %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)** %47, i64 12
  %49 = load %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)*, %"class.blink::CSSRuleList"* (%"class.blink::CSSRule"*)** %48, align 8
  %50 = tail call %"class.blink::CSSRuleList"* %49(%"class.blink::CSSRule"* %19) #16
  %51 = tail call fastcc %"class.blink::CSSKeyframesRule"* @_ZN5blinkL17FindKeyframesRuleINS_11CSSRuleListEEEPNS_16CSSKeyframesRuleEPT_PNS_18StyleRuleKeyframesE(%"class.blink::CSSRuleList"* %50, %"class.blink::StyleRuleKeyframes"* %1)
  br label %52

52:                                               ; preds = %28, %41, %45
  %53 = phi %"class.blink::CSSKeyframesRule"* [ %34, %28 ], [ %44, %41 ], [ %51, %45 ]
  %54 = add nuw i32 %15, 1
  %55 = load i32 (%"class.blink::CSSRuleList"*)**, i32 (%"class.blink::CSSRuleList"*)*** %5, align 8
  %56 = getelementptr inbounds i32 (%"class.blink::CSSRuleList"*)*, i32 (%"class.blink::CSSRuleList"*)** %55, i64 9
  %57 = load i32 (%"class.blink::CSSRuleList"*)*, i32 (%"class.blink::CSSRuleList"*)** %56, align 8
  %58 = tail call i32 %57(%"class.blink::CSSRuleList"* nonnull %0) #16
  %59 = icmp ult i32 %54, %58
  %60 = icmp eq %"class.blink::CSSKeyframesRule"* %53, null
  %61 = and i1 %60, %59
  br i1 %61, label %14, label %12
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS15CSSKeyframeRuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4372"*, %"class.std::__1::unique_ptr.4374"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4372", %"class.std::__1::vector.4372"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4374"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4372"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4372"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4372", %"class.std::__1::vector.4372"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4374"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4374"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4374"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4374"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4374"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4374"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4374"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4372", %"class.std::__1::vector.4372"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4374"*, %"class.std::__1::unique_ptr.4374"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4374"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4374"*, %"class.std::__1::unique_ptr.4374"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4374"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::CSSKeyframeRule"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4374"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4374"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4374"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4374"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !83

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4374"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4374"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4374"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4374"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4374"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4374"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4374"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4374"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4374"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4374"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4374"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4374"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4374"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4374"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4374"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4374"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4374"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4374"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4374"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4374"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4374"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4374"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4374"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4374"*, %"class.std::__1::unique_ptr.4374"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4374"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4374"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4374"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4374"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4374"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4374"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4374", %"class.std::__1::unique_ptr.4374"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::CSSKeyframeRule"*, %"class.blink::protocol::CSS::CSSKeyframeRule"** %142, align 8
  store %"class.blink::protocol::CSS::CSSKeyframeRule"* null, %"class.blink::protocol::CSS::CSSKeyframeRule"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::CSSKeyframeRule"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::CSSKeyframeRule"* %143 to void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)***
  %147 = load void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)**, void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframeRule"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::CSSKeyframeRule"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4374"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS16CSSKeyframesRuleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4352"*, %"class.std::__1::unique_ptr.4354"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4352", %"class.std::__1::vector.4352"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4354"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4352"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4352"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4352", %"class.std::__1::vector.4352"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4354"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4354"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4354"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4354"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4354"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4354"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4354"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4352", %"class.std::__1::vector.4352"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4354"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4354"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::CSSKeyframesRule"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4354"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4354"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4354"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4354"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !84

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4354"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4354"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4354"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4354"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4354"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4354"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4354"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4354"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4354"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4354"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4354"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4354"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4354"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4354"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4354"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4354"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4354"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4354"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4354"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4354"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4354"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4354"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4354"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4354"*, %"class.std::__1::unique_ptr.4354"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4354"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4354"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4354"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4354"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4354"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4354"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4354", %"class.std::__1::unique_ptr.4354"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::CSSKeyframesRule"*, %"class.blink::protocol::CSS::CSSKeyframesRule"** %142, align 8
  store %"class.blink::protocol::CSS::CSSKeyframesRule"* null, %"class.blink::protocol::CSS::CSSKeyframesRule"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::CSSKeyframesRule"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::CSSKeyframesRule"* %143 to void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)***
  %147 = load void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)**, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)*, void (%"class.blink::protocol::CSS::CSSKeyframesRule"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::CSSKeyframesRule"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4354"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN5blink27CSSComputedStyleDeclarationC1EPNS_4NodeEbRKN3WTF6StringE(%"class.blink::CSSComputedStyleDeclaration"*, %"class.blink::Node"*, i1 zeroext, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS24CSSComputedStylePropertyENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4445"*, %"class.std::__1::unique_ptr.4447"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4447"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4445"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4445"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4447"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4447"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4447"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4447"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4447"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4447"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4447"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4445", %"class.std::__1::vector.4445"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4447"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4447"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4447"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4447"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4447"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4447"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !85

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4447"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4447"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4447"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4447"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4447"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4447"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4447"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4447"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4447"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4447"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4447"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4447"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4447"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4447"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4447"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4447"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4447"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4447"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4447"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4447"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4447"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4447"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4447"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4447"*, %"class.std::__1::unique_ptr.4447"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4447"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4447"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4447"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4447"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4447"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4447"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4447", %"class.std::__1::unique_ptr.4447"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::CSSComputedStyleProperty"*, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %142, align 8
  store %"class.blink::protocol::CSS::CSSComputedStyleProperty"* null, %"class.blink::protocol::CSS::CSSComputedStyleProperty"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::CSSComputedStyleProperty"* %143 to void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)***
  %147 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)**, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)*, void (%"class.blink::protocol::CSS::CSSComputedStyleProperty"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::CSSComputedStyleProperty"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4447"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS17PlatformFontUsageENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4502"*, %"class.std::__1::unique_ptr.4504"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4502", %"class.std::__1::vector.4502"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4504"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4502"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4502"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4502", %"class.std::__1::vector.4502"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4504"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4504"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4504"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4504"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4504"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4504"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4504"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4502", %"class.std::__1::vector.4502"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4504"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4504"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::PlatformFontUsage"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4504"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4504"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4504"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4504"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !86

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4504"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4504"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4504"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4504"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4504"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4504"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4504"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4504"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4504"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4504"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4504"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4504"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4504"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4504"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4504"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4504"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4504"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4504"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4504"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4504"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4504"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4504"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4504"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4504"*, %"class.std::__1::unique_ptr.4504"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4504"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4504"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4504"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4504"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4504"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4504"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4504", %"class.std::__1::unique_ptr.4504"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::PlatformFontUsage"*, %"class.blink::protocol::CSS::PlatformFontUsage"** %142, align 8
  store %"class.blink::protocol::CSS::PlatformFontUsage"* null, %"class.blink::protocol::CSS::PlatformFontUsage"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::PlatformFontUsage"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::PlatformFontUsage"* %143 to void (%"class.blink::protocol::CSS::PlatformFontUsage"*)***
  %147 = load void (%"class.blink::protocol::CSS::PlatformFontUsage"*)**, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::PlatformFontUsage"*)*, void (%"class.blink::protocol::CSS::PlatformFontUsage"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::PlatformFontUsage"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4504"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionC2EPNS_23InspectorStyleSheetBaseERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.63, i64 0, i64 0), i64 17) #16
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16InspectorHistory6ActionC2ERKN3WTF6StringE(%"class.blink::InspectorHistory::Action"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent16StyleSheetActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #16
  br label %24

24:                                               ; preds = %3, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent23SetStyleSheetTextActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectorStyleSheetBase"* %1, %"class.blink::InspectorStyleSheetBase"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #16
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %24, %30, %45
  %48 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16InspectorHistory6ActionEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16InspectorHistory6ActionEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([79 x i8], [79 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16InspectorHistory6ActionEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16InspectorHistory6ActionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorHistory::Action"*
  %4 = bitcast i8* %1 to void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)**, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InspectorHistory::Action"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16InspectorHistory6ActionEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::InspectorHistory::Action"*
  %3 = bitcast i8* %0 to void (%"class.blink::InspectorHistory::Action"*)***
  %4 = load void (%"class.blink::InspectorHistory::Action"*)**, void (%"class.blink::InspectorHistory::Action"*)*** %3, align 8
  %5 = load void (%"class.blink::InspectorHistory::Action"*)*, void (%"class.blink::InspectorHistory::Action"*)** %4, align 8
  tail call void %5(%"class.blink::InspectorHistory::Action"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16InspectorHistory6ActionEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionD2Ev(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent23SetStyleSheetTextActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextActionD0Ev(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent23SetStyleSheetTextActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InspectorCSSAgent23SetStyleSheetTextAction5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.3972"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory::Action"* %14, %"class.blink::Visitor"* %1) #16
  ret void
}

declare %"class.WTF::StringImpl"* @_ZN5blink16InspectorHistory6Action8ToStringEv(%"class.blink::InspectorHistory::Action"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction7MergeIdEv(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheetBase", %"class.blink::InspectorStyleSheetBase"* %7, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #16
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #16
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %1, %11, %26
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* nonnull %3, i32 0) #16
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.64, i64 0, i64 0), i8* %36) #16
  %38 = load i8, i8* %31, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %28, %40
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #16
  br label %58

58:                                               ; preds = %42, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret %"class.WTF::StringImpl"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction5MergeEPNS_16InspectorHistory6ActionE(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::InspectorHistory::Action"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %1, i64 1, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %24, %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction7PerformERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::InspectorStyleSheetBase"* %4 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)***
  %7 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %7, i64 4
  %9 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InspectorStyleSheetBase"* %4, %"class.WTF::String"* %5) #16
  br i1 %10, label %11, label %19

11:                                               ; preds = %2
  %12 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %3, align 8
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 2
  %14 = bitcast %"class.blink::InspectorStyleSheetBase"* %12 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %15 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %14, align 8
  %16 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %15, i64 3
  %17 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %16, align 8
  %18 = tail call zeroext i1 %17(%"class.blink::InspectorStyleSheetBase"* %12, %"class.WTF::String"* dereferenceable(8) %13, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  br label %19

19:                                               ; preds = %2, %11
  %20 = phi i1 [ %18, %11 ], [ false, %2 ]
  ret i1 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction4UndoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 3
  %6 = bitcast %"class.blink::InspectorStyleSheetBase"* %4 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %7 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %7, i64 3
  %9 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InspectorStyleSheetBase"* %4, %"class.WTF::String"* dereferenceable(8) %5, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent23SetStyleSheetTextAction4RedoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::InspectorStyleSheetBase"*, %"class.blink::InspectorStyleSheetBase"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction", %"class.blink::InspectorCSSAgent::SetStyleSheetTextAction"* %0, i64 0, i32 2
  %6 = bitcast %"class.blink::InspectorStyleSheetBase"* %4 to i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)***
  %7 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)**, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*** %6, align 8
  %8 = getelementptr inbounds i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %7, i64 3
  %9 = load i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)*, i1 (%"class.blink::InspectorStyleSheetBase"*, %"class.WTF::String"*, %"class.blink::ExceptionState"*)** %8, align 8
  %10 = tail call zeroext i1 %9(%"class.blink::InspectorStyleSheetBase"* %4, %"class.WTF::String"* dereferenceable(8) %5, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  ret i1 %10
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink16InspectorHistory6Action6IsNoopEv(%"class.blink::InspectorHistory::Action"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink16InspectorHistory6Action19IsUndoableStateMarkEv(%"class.blink::InspectorHistory::Action"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink17InspectorCSSAgent16StyleSheetAction19TakeSerializedStyleEv(%"class.blink::InspectorCSSAgent::StyleSheetAction"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::protocol::CSS::CSSStyle"* null
}

declare void @_ZN5blink16InspectorHistory6ActionC2ERKN3WTF6StringE(%"class.blink::InspectorHistory::Action"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent16StyleSheetActionD0Ev(%"class.blink::InspectorCSSAgent::StyleSheetAction"*) unnamed_addr #4 comdat align 2 {
  tail call void @llvm.trap() #19
  unreachable
}

declare void @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN5blink16InspectorHistory6Action7MergeIdEv(%"class.blink::InspectorHistory::Action"*) unnamed_addr #1

declare void @_ZN5blink16InspectorHistory6Action5MergeEPS1_(%"class.blink::InspectorHistory::Action"*, %"class.blink::InspectorHistory::Action"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_23InspectorStyleSheetBaseEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorStyleSheetBase"*
  %4 = bitcast i8* %1 to void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)**, void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorStyleSheetBase"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InspectorStyleSheetBase"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionC2ENS1_4TypeEPNS_19InspectorStyleSheetERKNS_11SourceRangeERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, i32, %"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %6 = alloca %"class.WTF::String", align 8
  %7 = bitcast %"class.WTF::String"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %6, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.65, i64 0, i64 0), i64 16) #16
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16InspectorHistory6ActionC2ERKN3WTF6StringE(%"class.blink::InspectorHistory::Action"* %8, %"class.WTF::String"* nonnull dereferenceable(8) %6) #16
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent16StyleSheetActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %6, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %26, label %13

13:                                               ; preds = %5
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %20, label %22

20:                                               ; preds = %13
  %21 = add i32 %19, -1
  store i32 %21, i32* %18, align 4
  br label %22

22:                                               ; preds = %20, %13
  %23 = phi i32 [ %21, %20 ], [ %19, %13 ]
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %25, label %26

25:                                               ; preds = %22
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %11) #16
  br label %26

26:                                               ; preds = %5, %22, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent16ModifyRuleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %9, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectorStyleSheet"* %2, %"class.blink::InspectorStyleSheet"** %27, align 8
  %28 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 2
  store i32 %1, i32* %28, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %29, align 8
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* %31, %"class.WTF::StringImpl"** %32, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %33, label %51, label %34

34:                                               ; preds = %26
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load atomic i32, i32* %35 monotonic, align 4
  %37 = and i32 %36, 2
  %38 = icmp eq i32 %37, 0
  br i1 %38, label %39, label %51

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  %42 = zext i32 %41 to i33
  %43 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %42, i33 1) #16
  %44 = extractvalue { i33, i1 } %43, 1
  %45 = extractvalue { i33, i1 } %43, 0
  %46 = icmp slt i33 %45, 0
  %47 = or i1 %44, %46
  br i1 %47, label %48, label %49, !prof !3

48:                                               ; preds = %39
  call void @llvm.trap() #16
  unreachable

49:                                               ; preds = %39
  %50 = trunc i33 %45 to i32
  store i32 %50, i32* %40, align 4
  br label %51

51:                                               ; preds = %26, %34, %49
  %52 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 5
  %53 = bitcast %"class.blink::SourceRange"* %3 to i64*
  %54 = bitcast %"class.blink::SourceRange"* %52 to i64*
  %55 = load i64, i64* %53, align 4
  store i64 %55, i64* %54, align 8
  %56 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* %56) #16
  %57 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7, i32 0, i32 0
  store %"class.blink::CSSRule"* null, %"class.blink::CSSRule"** %57, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionD2Ev(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent16ModifyRuleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent16ModifyRuleActionD0Ev(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent16ModifyRuleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InspectorCSSAgent16ModifyRuleAction5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.3916"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7
  %15 = bitcast %"class.blink::Member.644"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_7CSSRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory::Action"* %25, %"class.blink::Visitor"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction7MergeIdEv(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 2
  %5 = load i32, i32* %4, align 8
  %6 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %9 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %8, align 8
  %10 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %9, i64 0, i32 0, i32 1, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  br i1 %12, label %30, label %13

13:                                               ; preds = %1
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load atomic i32, i32* %14 monotonic, align 4
  %16 = and i32 %15, 2
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %30

18:                                               ; preds = %13
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %11, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = zext i32 %20 to i33
  %22 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %21, i33 1) #16
  %23 = extractvalue { i33, i1 } %22, 1
  %24 = extractvalue { i33, i1 } %22, 0
  %25 = icmp slt i33 %24, 0
  %26 = or i1 %23, %25
  br i1 %26, label %27, label %28, !prof !3

27:                                               ; preds = %18
  tail call void @llvm.trap() #16
  unreachable

28:                                               ; preds = %18
  %29 = trunc i33 %24 to i32
  store i32 %29, i32* %19, align 4
  br label %30

30:                                               ; preds = %1, %13, %28
  %31 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %11, %"class.WTF::StringImpl"** %31, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* nonnull %3, i32 0) #16
  %32 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load i8*, i8** %36, align 8
  %38 = select i1 %35, i8* %37, i8* %6
  %39 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 5, i32 0
  %40 = load i32, i32* %39, align 8
  %41 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.66, i64 0, i64 0), i32 %5, i8* %38, i32 %40) #16
  %42 = load i8, i8* %33, align 1
  %43 = icmp slt i8 %42, 0
  br i1 %43, label %44, label %46

44:                                               ; preds = %30
  %45 = load i8*, i8** %36, align 8
  call void @_ZdlPv(i8* %45) #18
  br label %46

46:                                               ; preds = %30, %44
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #16
  br label %62

62:                                               ; preds = %46, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"class.WTF::StringImpl"* %41
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent16ModifyRuleAction5MergeEPNS_16InspectorHistory6ActionE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::InspectorHistory::Action"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4
  %4 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %1, i64 2, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %24, %39, %42
  %44 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %1, i64 3, i32 1
  %45 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %46 = bitcast %"class.WTF::String"* %44 to i64*
  %47 = bitcast %"class.blink::SourceRange"* %45 to i64*
  %48 = load i64, i64* %46, align 4
  store i64 %48, i64* %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent16ModifyRuleAction7PerformERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = tail call zeroext i1 @_ZN5blink17InspectorCSSAgent16ModifyRuleAction4RedoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, %"class.blink::ExceptionState"* dereferenceable(72) %1)
  ret i1 %3
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent16ModifyRuleAction4UndoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %33 [
    i32 0, label %5
    i32 1, label %12
    i32 2, label %19
    i32 3, label %26
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %10 = tail call %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet15SetRuleSelectorERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %7, %"class.blink::SourceRange"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %9, %"class.blink::SourceRange"* null, %"class.WTF::String"* null, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %11 = icmp ne %"class.blink::CSSStyleRule"* %10, null
  br label %33

12:                                               ; preds = %2
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %14 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %16 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %17 = tail call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet12SetStyleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %14, %"class.blink::SourceRange"* dereferenceable(8) %15, %"class.WTF::String"* dereferenceable(8) %16, %"class.blink::SourceRange"* null, %"class.WTF::String"* null, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %18 = icmp ne %"class.blink::CSSRule"* %17, null
  br label %33

19:                                               ; preds = %2
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %23 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %24 = tail call %"class.blink::CSSMediaRule"* @_ZN5blink19InspectorStyleSheet16SetMediaRuleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %21, %"class.blink::SourceRange"* dereferenceable(8) %22, %"class.WTF::String"* dereferenceable(8) %23, %"class.blink::SourceRange"* null, %"class.WTF::String"* null, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %25 = icmp ne %"class.blink::CSSMediaRule"* %24, null
  br label %33

26:                                               ; preds = %2
  %27 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %28 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %27, align 8
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %30 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %31 = tail call %"class.blink::CSSKeyframeRule"* @_ZN5blink19InspectorStyleSheet14SetKeyframeKeyERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %28, %"class.blink::SourceRange"* dereferenceable(8) %29, %"class.WTF::String"* dereferenceable(8) %30, %"class.blink::SourceRange"* null, %"class.WTF::String"* null, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %32 = icmp ne %"class.blink::CSSKeyframeRule"* %31, null
  br label %33

33:                                               ; preds = %2, %26, %19, %12, %5
  %34 = phi i1 [ %32, %26 ], [ %25, %19 ], [ %18, %12 ], [ %11, %5 ], [ false, %2 ]
  ret i1 %34
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent16ModifyRuleAction4RedoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 2
  %4 = load i32, i32* %3, align 8
  switch i32 %4, label %69 [
    i32 0, label %5
    i32 1, label %21
    i32 2, label %37
    i32 3, label %53
  ]

5:                                                ; preds = %2
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 5
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4
  %10 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %12 = tail call %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet15SetRuleSelectorERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %7, %"class.blink::SourceRange"* dereferenceable(8) %8, %"class.WTF::String"* dereferenceable(8) %9, %"class.blink::SourceRange"* %10, %"class.WTF::String"* %11, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7
  %14 = ptrtoint %"class.blink::CSSStyleRule"* %12 to i64
  %15 = bitcast %"class.blink::Member.644"* %13 to i64*
  store atomic i64 %14, i64* %15 monotonic, align 8
  %16 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %69, label %18

18:                                               ; preds = %5
  %19 = bitcast %"class.blink::CSSStyleRule"* %12 to i8*
  %20 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %19) #16
  br label %69

21:                                               ; preds = %2
  %22 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %23 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 5
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4
  %26 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %27 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %28 = tail call %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet12SetStyleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %23, %"class.blink::SourceRange"* dereferenceable(8) %24, %"class.WTF::String"* dereferenceable(8) %25, %"class.blink::SourceRange"* %26, %"class.WTF::String"* %27, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %29 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7
  %30 = ptrtoint %"class.blink::CSSRule"* %28 to i64
  %31 = bitcast %"class.blink::Member.644"* %29 to i64*
  store atomic i64 %30, i64* %31 monotonic, align 8
  %32 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %33 = icmp eq i32 %32, 0
  br i1 %33, label %69, label %34

34:                                               ; preds = %21
  %35 = bitcast %"class.blink::CSSRule"* %28 to i8*
  %36 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %35) #16
  br label %69

37:                                               ; preds = %2
  %38 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %39 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %38, align 8
  %40 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 5
  %41 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4
  %42 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %43 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %44 = tail call %"class.blink::CSSMediaRule"* @_ZN5blink19InspectorStyleSheet16SetMediaRuleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %39, %"class.blink::SourceRange"* dereferenceable(8) %40, %"class.WTF::String"* dereferenceable(8) %41, %"class.blink::SourceRange"* %42, %"class.WTF::String"* %43, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %45 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7
  %46 = ptrtoint %"class.blink::CSSMediaRule"* %44 to i64
  %47 = bitcast %"class.blink::Member.644"* %45 to i64*
  store atomic i64 %46, i64* %47 monotonic, align 8
  %48 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %49 = icmp eq i32 %48, 0
  br i1 %49, label %69, label %50

50:                                               ; preds = %37
  %51 = bitcast %"class.blink::CSSMediaRule"* %44 to i8*
  %52 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %51) #16
  br label %69

53:                                               ; preds = %2
  %54 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %55 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %54, align 8
  %56 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 5
  %57 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4
  %58 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 6
  %59 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3
  %60 = tail call %"class.blink::CSSKeyframeRule"* @_ZN5blink19InspectorStyleSheet14SetKeyframeKeyERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %55, %"class.blink::SourceRange"* dereferenceable(8) %56, %"class.WTF::String"* dereferenceable(8) %57, %"class.blink::SourceRange"* %58, %"class.WTF::String"* %59, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %61 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7
  %62 = ptrtoint %"class.blink::CSSKeyframeRule"* %60 to i64
  %63 = bitcast %"class.blink::Member.644"* %61 to i64*
  store atomic i64 %62, i64* %63 monotonic, align 8
  %64 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %69, label %66

66:                                               ; preds = %53
  %67 = bitcast %"class.blink::CSSKeyframeRule"* %60 to i8*
  %68 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %67) #16
  br label %69

69:                                               ; preds = %66, %53, %50, %37, %34, %21, %18, %5, %2
  %70 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7, i32 0, i32 0
  %71 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %70, align 8
  %72 = icmp ne %"class.blink::CSSRule"* %71, null
  ret i1 %72
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent16ModifyRuleAction6IsNoopEv(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 3, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 4, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = tail call zeroext i1 @_ZN3WTF5EqualEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"* %5) #16
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink17InspectorCSSAgent16ModifyRuleAction19TakeSerializedStyleEv(%"class.blink::InspectorCSSAgent::ModifyRuleAction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 2
  %3 = load i32, i32* %2, align 8
  %4 = icmp eq i32 %3, 1
  br i1 %4, label %5, label %40

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 7
  %7 = getelementptr inbounds %"class.blink::Member.644", %"class.blink::Member.644"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.blink::CSSRule"*, %"class.blink::CSSRule"** %7, align 8
  %9 = bitcast %"class.blink::Member.644"* %6 to i64*
  store atomic i64 0, i64* %9 monotonic, align 8
  %10 = icmp eq %"class.blink::CSSRule"* %8, null
  br i1 %10, label %40, label %11

11:                                               ; preds = %5
  %12 = bitcast %"class.blink::CSSRule"* %8 to i32 (%"class.blink::CSSRule"*)***
  %13 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %12, align 8
  %14 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %13, i64 9
  %15 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %14, align 8
  %16 = tail call i32 %15(%"class.blink::CSSRule"* nonnull %8) #16
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %18, label %26

18:                                               ; preds = %11
  %19 = bitcast %"class.blink::CSSRule"* %8 to %"class.blink::CSSStyleRule"*
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %21 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %21, i64 0, i32 0
  %23 = tail call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink12CSSStyleRule5styleEv(%"class.blink::CSSStyleRule"* nonnull %19) #16
  %24 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"* %22, %"class.blink::CSSStyleDeclaration"* %23) #16
  %25 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %24 to i64
  br label %40

26:                                               ; preds = %11
  %27 = load i32 (%"class.blink::CSSRule"*)**, i32 (%"class.blink::CSSRule"*)*** %12, align 8
  %28 = getelementptr inbounds i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %27, i64 9
  %29 = load i32 (%"class.blink::CSSRule"*)*, i32 (%"class.blink::CSSRule"*)** %28, align 8
  %30 = tail call i32 %29(%"class.blink::CSSRule"* nonnull %8) #16
  %31 = icmp eq i32 %30, 8
  br i1 %31, label %32, label %40

32:                                               ; preds = %26
  %33 = bitcast %"class.blink::CSSRule"* %8 to %"class.blink::CSSKeyframeRule"*
  %34 = getelementptr inbounds %"class.blink::InspectorCSSAgent::ModifyRuleAction", %"class.blink::InspectorCSSAgent::ModifyRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %35 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %34, align 8
  %36 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %35, i64 0, i32 0
  %37 = tail call %"class.blink::CSSStyleDeclaration"* @_ZNK5blink15CSSKeyframeRule5styleEv(%"class.blink::CSSKeyframeRule"* nonnull %33) #16
  %38 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"* %36, %"class.blink::CSSStyleDeclaration"* %37) #16
  %39 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"* %38 to i64
  br label %40

40:                                               ; preds = %26, %5, %1, %18, %32
  %41 = phi i64 [ %39, %32 ], [ %25, %18 ], [ 0, %1 ], [ 0, %26 ], [ 0, %5 ]
  %42 = inttoptr i64 %41 to %"class.blink::protocol::CSS::CSSStyle"*
  ret %"class.blink::protocol::CSS::CSSStyle"* %42
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorStyleSheet"*
  %4 = bitcast i8* %1 to void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)**, void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorStyleSheet"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InspectorStyleSheet"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet15SetRuleSelectorERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::CSSRule"* @_ZN5blink19InspectorStyleSheet12SetStyleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::CSSMediaRule"* @_ZN5blink19InspectorStyleSheet16SetMediaRuleTextERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

declare %"class.blink::CSSKeyframeRule"* @_ZN5blink19InspectorStyleSheet14SetKeyframeKeyERKNS_11SourceRangeERKN3WTF6StringEPS1_PS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.WTF::String"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent21SetElementStyleActionC2EPNS_33InspectorStyleSheetForInlineStyleERKN3WTF6StringE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.WTF::String", align 8
  %5 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %4, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.67, i64 0, i64 0), i64 21) #16
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16InspectorHistory6ActionC2ERKN3WTF6StringE(%"class.blink::InspectorHistory::Action"* %6, %"class.WTF::String"* nonnull dereferenceable(8) %4) #16
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent16StyleSheetActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %24, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %17 = load i32, i32* %16, align 4
  br i1 %15, label %18, label %20

18:                                               ; preds = %11
  %19 = add i32 %17, -1
  store i32 %19, i32* %16, align 4
  br label %20

20:                                               ; preds = %18, %11
  %21 = phi i32 [ %19, %18 ], [ %17, %11 ]
  %22 = icmp eq i32 %21, 0
  br i1 %22, label %23, label %24

23:                                               ; preds = %20
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %9) #16
  br label %24

24:                                               ; preds = %3, %20, %23
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent21SetElementStyleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectorStyleSheetForInlineStyle"* %1, %"class.blink::InspectorStyleSheetForInlineStyle"** %25, align 8
  %26 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %27 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %26, align 8
  %28 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %27, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %27, null
  br i1 %29, label %47, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %47

35:                                               ; preds = %30
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %27, i64 0, i32 0
  %37 = load i32, i32* %36, align 4
  %38 = zext i32 %37 to i33
  %39 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #16
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %35
  call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %35
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %36, align 4
  br label %47

47:                                               ; preds = %24, %30, %45
  %48 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %48, align 8
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent21SetElementStyleActionD2Ev(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent21SetElementStyleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent21SetElementStyleActionD0Ev(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent21SetElementStyleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 3, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 2, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InspectorCSSAgent21SetElementStyleAction5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.3963"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory::Action"* %14, %"class.blink::Visitor"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction7MergeIdEv(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.std::__1::basic_string", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = bitcast %"class.std::__1::basic_string"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %7, i64 0, i32 0, i32 1, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #16
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #16
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %1, %11, %26
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %9, %"class.WTF::StringImpl"** %29, align 8
  call void @_ZNK3WTF6String4Utf8ENS_18UTF8ConversionModeE(%"class.std::__1::basic_string"* nonnull sret %2, %"class.WTF::String"* nonnull %3, i32 0) #16
  %30 = bitcast %"class.std::__1::basic_string"* %2 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %31 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %30, i64 0, i32 1, i32 0
  %32 = load i8, i8* %31, align 1
  %33 = icmp slt i8 %32, 0
  %34 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %2, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = select i1 %33, i8* %35, i8* %4
  %37 = call %"class.WTF::StringImpl"* (i8*, ...) @_ZN3WTF6String6FormatEPKcz(i8* getelementptr inbounds ([25 x i8], [25 x i8]* @.str.68, i64 0, i64 0), i8* %36) #16
  %38 = load i8, i8* %31, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %39, label %40, label %42

40:                                               ; preds = %28
  %41 = load i8*, i8** %34, align 8
  call void @_ZdlPv(i8* %41) #18
  br label %42

42:                                               ; preds = %28, %40
  %43 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %44 = icmp eq %"class.WTF::StringImpl"* %43, null
  br i1 %44, label %58, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load atomic i32, i32* %46 monotonic, align 4
  %48 = and i32 %47, 2
  %49 = icmp eq i32 %48, 0
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %43, i64 0, i32 0
  %51 = load i32, i32* %50, align 4
  br i1 %49, label %52, label %54

52:                                               ; preds = %45
  %53 = add i32 %51, -1
  store i32 %53, i32* %50, align 4
  br label %54

54:                                               ; preds = %52, %45
  %55 = phi i32 [ %53, %52 ], [ %51, %45 ]
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %58

57:                                               ; preds = %54
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %43) #16
  br label %58

58:                                               ; preds = %42, %54, %57
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret %"class.WTF::StringImpl"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent21SetElementStyleAction5MergeEPNS_16InspectorHistory6ActionE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::InspectorHistory::Action"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 2
  %4 = getelementptr inbounds %"class.blink::InspectorHistory::Action", %"class.blink::InspectorHistory::Action"* %1, i64 1, i32 1, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %24, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %12, label %24

12:                                               ; preds = %7
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %14 = load i32, i32* %13, align 4
  %15 = zext i32 %14 to i33
  %16 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %15, i33 1) #16
  %17 = extractvalue { i33, i1 } %16, 1
  %18 = extractvalue { i33, i1 } %16, 0
  %19 = icmp slt i33 %18, 0
  %20 = or i1 %17, %19
  br i1 %20, label %21, label %22, !prof !3

21:                                               ; preds = %12
  tail call void @llvm.trap() #16
  unreachable

22:                                               ; preds = %12
  %23 = trunc i33 %18 to i32
  store i32 %23, i32* %13, align 4
  br label %24

24:                                               ; preds = %22, %7, %2
  %25 = ptrtoint %"class.WTF::StringImpl"* %5 to i64
  %26 = bitcast %"class.WTF::String"* %3 to i64*
  %27 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  store i64 %25, i64* %26, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %28, null
  br i1 %29, label %43, label %30

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %24, %39, %42
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent21SetElementStyleAction7PerformERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 3
  %6 = tail call zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7GetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheetForInlineStyle"* %4, %"class.WTF::String"* %5) #16
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 2
  %10 = tail call zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7SetTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheetForInlineStyle"* %8, %"class.WTF::String"* dereferenceable(8) %9, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i1 [ %10, %7 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent21SetElementStyleAction4UndoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 3
  %6 = tail call zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7SetTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheetForInlineStyle"* %4, %"class.WTF::String"* dereferenceable(8) %5, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  ret i1 %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent21SetElementStyleAction4RedoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %3, align 8
  %5 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 3
  %6 = tail call zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7GetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheetForInlineStyle"* %4, %"class.WTF::String"* %5) #16
  br i1 %6, label %7, label %11

7:                                                ; preds = %2
  %8 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %3, align 8
  %9 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 2
  %10 = tail call zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7SetTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheetForInlineStyle"* %8, %"class.WTF::String"* dereferenceable(8) %9, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  br label %11

11:                                               ; preds = %2, %7
  %12 = phi i1 [ %10, %7 ], [ false, %2 ]
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink17InspectorCSSAgent21SetElementStyleAction19TakeSerializedStyleEv(%"class.blink::InspectorCSSAgent::SetElementStyleAction"*) unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::SetElementStyleAction", %"class.blink::InspectorCSSAgent::SetElementStyleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %3 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %2, align 8
  %4 = getelementptr inbounds %"class.blink::InspectorStyleSheetForInlineStyle", %"class.blink::InspectorStyleSheetForInlineStyle"* %3, i64 0, i32 0
  %5 = tail call %"class.blink::CSSStyleDeclaration"* @_ZN5blink33InspectorStyleSheetForInlineStyle11InlineStyleEv(%"class.blink::InspectorStyleSheetForInlineStyle"* %3) #16
  %6 = tail call %"class.blink::protocol::CSS::CSSStyle"* @_ZN5blink23InspectorStyleSheetBase19BuildObjectForStyleEPNS_19CSSStyleDeclarationE(%"class.blink::InspectorStyleSheetBase"* %4, %"class.blink::CSSStyleDeclaration"* %5) #16
  ret %"class.blink::protocol::CSS::CSSStyle"* %6
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorStyleSheetForInlineStyle"*
  tail call void @_ZNK5blink33InspectorStyleSheetForInlineStyle5TraceEPNS_7VisitorE(%"class.blink::InspectorStyleSheetForInlineStyle"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink33InspectorStyleSheetForInlineStyle5TraceEPNS_7VisitorE(%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::Visitor"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7SetTextERKN3WTF6StringERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

declare zeroext i1 @_ZN5blink33InspectorStyleSheetForInlineStyle7GetTextEPN3WTF6StringE(%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.WTF::String"*) unnamed_addr #1

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS3_21SetElementStyleActionEEEvOT_(%"class.WTF::Vector.4570"*, %"class.blink::InspectorCSSAgent::SetElementStyleAction"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.4570"* %0, i32 %14) #16
  %15 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %16, i64 %18
  %20 = bitcast %"class.blink::InspectorCSSAgent::SetElementStyleAction"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.4573"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.4570"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %8, align 8
  %10 = icmp eq %"class.blink::Member.4573"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEEEmm(i64 %11) #16
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.5256"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %14) #16
  %16 = ptrtoint %"class.blink::HeapVectorBacking.5256"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.4570"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.5256", %"class.blink::HeapVectorBacking.5256"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #16
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %8, align 8
  %26 = icmp eq %"class.blink::Member.4573"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.4573"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #16
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #16
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4570"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4570"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.4570"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.4570"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #16
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #16
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEEEmm(i64 %14) #16
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.5256"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64 %16) #16
  %18 = ptrtoint %"class.blink::HeapVectorBacking.5256"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.5256"* %17, null
  %23 = icmp ne %"class.blink::Member.4573"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.4573"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.4570"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.5256", %"class.blink::HeapVectorBacking.5256"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #16
  %33 = bitcast %"class.WTF::Vector.4570"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #16
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #16
  %42 = bitcast %"class.WTF::Vector.4570"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.5256", %"class.blink::HeapVectorBacking.5256"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #16
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.60, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.61, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.5256"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.62, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.5256"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.5256"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS4_EEE14AllocateObjectIS8_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([211 x i8], [211 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEENS_12VectorTraitsIS6_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.4573"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.4573"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_17InspectorCSSAgent16StyleSheetActionEE5TraceEPNS_7VisitorEPKv) #16
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_17InspectorCSSAgent16StyleSheetActionEEEN3WTF12VectorTraitsIS5_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17InspectorCSSAgent16StyleSheetActionEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorHistory::Action"*
  %4 = bitcast i8* %1 to void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)**, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)** %5, i64 2
  %7 = load void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)*, void (%"class.blink::InspectorHistory::Action"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::InspectorHistory::Action"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIRPNS3_16ModifyRuleActionEEEvOT_(%"class.WTF::Vector.4570"*, %"class.blink::InspectorCSSAgent::ModifyRuleAction"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_17InspectorCSSAgent16StyleSheetActionEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.4570"* %0, i32 %14) #16
  %15 = getelementptr inbounds %"class.WTF::Vector.4570", %"class.WTF::Vector.4570"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.4573"*, %"class.blink::Member.4573"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.4573", %"class.blink::Member.4573"* %16, i64 %18
  %20 = bitcast %"class.blink::InspectorCSSAgent::ModifyRuleAction"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.4573"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE6appendEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS8CSSStyleENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4579"*, %"class.std::__1::unique_ptr.4224"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4579", %"class.std::__1::vector.4579"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4224"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4579"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4579"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4579", %"class.std::__1::vector.4579"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4224"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4224"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4224"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4224"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4224"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4224"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4224"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4579", %"class.std::__1::vector.4579"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4224"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4224"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::CSSStyle"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4224"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4224"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4224"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4224"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !87

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4224"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4224"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4224"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4224"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4224"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4224"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4224"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4224"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4224"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4224"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4224"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4224"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4224"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4224"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4224"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4224"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4224"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4224"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4224"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4224"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4224"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4224"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4224"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4224"*, %"class.std::__1::unique_ptr.4224"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4224"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4224"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4224"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4224"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4224"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4224"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4224", %"class.std::__1::unique_ptr.4224"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::CSSStyle"*, %"class.blink::protocol::CSS::CSSStyle"** %142, align 8
  store %"class.blink::protocol::CSS::CSSStyle"* null, %"class.blink::protocol::CSS::CSSStyle"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::CSSStyle"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::CSSStyle"* %143 to void (%"class.blink::protocol::CSS::CSSStyle"*)***
  %147 = load void (%"class.blink::protocol::CSS::CSSStyle"*)**, void (%"class.blink::protocol::CSS::CSSStyle"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::CSSStyle"*)*, void (%"class.blink::protocol::CSS::CSSStyle"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::CSSStyle"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4224"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent13AddRuleActionC2EPNS_19InspectorStyleSheetERKN3WTF6StringERKNS_11SourceRangeE(%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::InspectorStyleSheet"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"* dereferenceable(8)) unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::String", align 8
  %6 = bitcast %"class.WTF::String"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %5, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.69, i64 0, i64 0), i64 7) #16
  %7 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink16InspectorHistory6ActionC2ERKN3WTF6StringE(%"class.blink::InspectorHistory::Action"* %7, %"class.WTF::String"* nonnull dereferenceable(8) %5) #16
  %8 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent16StyleSheetActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %5, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %25, label %12

12:                                               ; preds = %4
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = and i32 %14, 2
  %16 = icmp eq i32 %15, 0
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  br i1 %16, label %19, label %21

19:                                               ; preds = %12
  %20 = add i32 %18, -1
  store i32 %20, i32* %17, align 4
  br label %21

21:                                               ; preds = %19, %12
  %22 = phi i32 [ %20, %19 ], [ %18, %12 ]
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %25

24:                                               ; preds = %21
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %10) #16
  br label %25

25:                                               ; preds = %4, %21, %24
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent13AddRuleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %26 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.blink::InspectorStyleSheet"* %1, %"class.blink::InspectorStyleSheet"** %26, align 8
  %27 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.blink::CSSStyleRule"* null, %"class.blink::CSSStyleRule"** %27, align 8
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %29 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %29, %"class.WTF::StringImpl"** %30, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %29, null
  br i1 %31, label %49, label %32

32:                                               ; preds = %25
  %33 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %34 = load atomic i32, i32* %33 monotonic, align 4
  %35 = and i32 %34, 2
  %36 = icmp eq i32 %35, 0
  br i1 %36, label %37, label %49

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %29, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  %40 = zext i32 %39 to i33
  %41 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %40, i33 1) #16
  %42 = extractvalue { i33, i1 } %41, 1
  %43 = extractvalue { i33, i1 } %41, 0
  %44 = icmp slt i33 %43, 0
  %45 = or i1 %42, %44
  br i1 %45, label %46, label %47, !prof !3

46:                                               ; preds = %37
  call void @llvm.trap() #16
  unreachable

47:                                               ; preds = %37
  %48 = trunc i33 %43 to i32
  store i32 %48, i32* %38, align 4
  br label %49

49:                                               ; preds = %25, %32, %47
  %50 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 4, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %50, align 8
  %51 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 5
  %52 = bitcast %"class.blink::SourceRange"* %3 to i64*
  %53 = bitcast %"class.blink::SourceRange"* %51 to i64*
  %54 = load i64, i64* %52, align 4
  store i64 %54, i64* %53, align 8
  %55 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 6
  call void @_ZN5blink11SourceRangeC1Ev(%"class.blink::SourceRange"* %55) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent13AddRuleActionD2Ev(%"class.blink::InspectorCSSAgent::AddRuleAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent13AddRuleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %1, %15, %18
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink17InspectorCSSAgent13AddRuleActionD0Ev(%"class.blink::InspectorCSSAgent::AddRuleAction"*) unnamed_addr #4 comdat align 2 {
  %2 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [14 x i8*] }, { [14 x i8*] }* @_ZTVN5blink17InspectorCSSAgent13AddRuleActionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 4, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 3, i32 0, i32 0
  %21 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %20, align 8
  %22 = icmp eq %"class.WTF::StringImpl"* %21, null
  br i1 %22, label %36, label %23

23:                                               ; preds = %19
  %24 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %25 = load atomic i32, i32* %24 monotonic, align 4
  %26 = and i32 %25, 2
  %27 = icmp eq i32 %26, 0
  %28 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %21, i64 0, i32 0
  %29 = load i32, i32* %28, align 4
  br i1 %27, label %30, label %32

30:                                               ; preds = %23
  %31 = add i32 %29, -1
  store i32 %31, i32* %28, align 4
  br label %32

32:                                               ; preds = %30, %23
  %33 = phi i32 [ %31, %30 ], [ %29, %23 ]
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %35, label %36

35:                                               ; preds = %32
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %21) #16
  br label %36

36:                                               ; preds = %19, %32, %35
  %37 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink16InspectorHistory6ActionD2Ev(%"class.blink::InspectorHistory::Action"* %37) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK5blink17InspectorCSSAgent13AddRuleAction5TraceEPNS_7VisitorE(%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::Visitor"*) unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 1
  %4 = bitcast %"class.blink::Member.3916"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 2
  %15 = bitcast %"class.blink::Member.4589"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %24, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %21 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %20, align 8
  %22 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %21, i64 5
  %23 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %22, align 8
  tail call void %23(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* nonnull %19, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %24

24:                                               ; preds = %13, %18
  %25 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink16InspectorHistory6Action5TraceEPNS_7VisitorE(%"class.blink::InspectorHistory::Action"* %25, %"class.blink::Visitor"* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent13AddRuleAction7PerformERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet::InspectorMutationScope", align 8
  %4 = bitcast %"class.blink::CSSStyleSheet::InspectorMutationScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet::InspectorMutationScope", %"class.blink::CSSStyleSheet::InspectorMutationScope"* %3, i64 0, i32 0
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  call void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeC1EPS0_(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nonnull %3, %"class.blink::CSSStyleSheet"* %9) #16
  %10 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 6
  %14 = call %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet7AddRuleERKN3WTF6StringERKNS_11SourceRangeEPS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %10, %"class.WTF::String"* dereferenceable(8) %11, %"class.blink::SourceRange"* dereferenceable(8) %12, %"class.blink::SourceRange"* %13, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %15 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 2
  %16 = ptrtoint %"class.blink::CSSStyleRule"* %14 to i64
  %17 = bitcast %"class.blink::Member.4589"* %15 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::CSSStyleRule"* %14 to i8*
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #16
  br label %23

23:                                               ; preds = %2, %20
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  call void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeD1Ev(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret i1 %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent13AddRuleAction4UndoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet::InspectorMutationScope", align 8
  %4 = bitcast %"class.blink::CSSStyleSheet::InspectorMutationScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet::InspectorMutationScope", %"class.blink::CSSStyleSheet::InspectorMutationScope"* %3, i64 0, i32 0
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  call void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeC1EPS0_(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nonnull %3, %"class.blink::CSSStyleSheet"* %9) #16
  %10 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 6
  %12 = call zeroext i1 @_ZN5blink19InspectorStyleSheet10DeleteRuleERKNS_11SourceRangeERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %10, %"class.blink::SourceRange"* dereferenceable(8) %11, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  call void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeD1Ev(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret i1 %12
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink17InspectorCSSAgent13AddRuleAction4RedoERNS_14ExceptionStateE(%"class.blink::InspectorCSSAgent::AddRuleAction"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.blink::CSSStyleSheet::InspectorMutationScope", align 8
  %4 = bitcast %"class.blink::CSSStyleSheet::InspectorMutationScope"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.blink::CSSStyleSheet::InspectorMutationScope", %"class.blink::CSSStyleSheet::InspectorMutationScope"* %3, i64 0, i32 0
  store %"class.blink::CSSStyleSheet"* inttoptr (i64 -6148914691236517206 to %"class.blink::CSSStyleSheet"*), %"class.blink::CSSStyleSheet"** %5, align 8
  %6 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 1, i32 0, i32 0
  %7 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %8 = getelementptr inbounds %"class.blink::InspectorStyleSheet", %"class.blink::InspectorStyleSheet"* %7, i64 0, i32 3, i32 0, i32 0
  %9 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %8, align 8
  call void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeC1EPS0_(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nonnull %3, %"class.blink::CSSStyleSheet"* %9) #16
  %10 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %6, align 8
  %11 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 3
  %12 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 5
  %13 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 6
  %14 = call %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet7AddRuleERKN3WTF6StringERKNS_11SourceRangeEPS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"* %10, %"class.WTF::String"* dereferenceable(8) %11, %"class.blink::SourceRange"* dereferenceable(8) %12, %"class.blink::SourceRange"* %13, %"class.blink::ExceptionState"* dereferenceable(72) %1) #16
  %15 = getelementptr inbounds %"class.blink::InspectorCSSAgent::AddRuleAction", %"class.blink::InspectorCSSAgent::AddRuleAction"* %0, i64 0, i32 2
  %16 = ptrtoint %"class.blink::CSSStyleRule"* %14 to i64
  %17 = bitcast %"class.blink::Member.4589"* %15 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %19 = icmp eq i32 %18, 0
  br i1 %19, label %23, label %20

20:                                               ; preds = %2
  %21 = bitcast %"class.blink::CSSStyleRule"* %14 to i8*
  %22 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %21) #16
  br label %23

23:                                               ; preds = %2, %20
  %24 = getelementptr inbounds %"class.blink::ExceptionState", %"class.blink::ExceptionState"* %1, i64 0, i32 4
  %25 = load i32, i32* %24, align 8
  %26 = icmp eq i32 %25, 0
  call void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeD1Ev(%"class.blink::CSSStyleSheet::InspectorMutationScope"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %4) #16
  ret i1 %26
}

declare void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeC1EPS0_(%"class.blink::CSSStyleSheet::InspectorMutationScope"*, %"class.blink::CSSStyleSheet"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink19InspectorStyleSheet10DeleteRuleERKNS_11SourceRangeERNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.blink::SourceRange"* dereferenceable(8), %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink13CSSStyleSheet22InspectorMutationScopeD1Ev(%"class.blink::CSSStyleSheet::InspectorMutationScope"*) unnamed_addr #3

declare %"class.blink::CSSStyleRule"* @_ZN5blink19InspectorStyleSheet7AddRuleERKN3WTF6StringERKNS_11SourceRangeEPS5_RNS_14ExceptionStateE(%"class.blink::InspectorStyleSheet"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::SourceRange"* dereferenceable(8), %"class.blink::SourceRange"*, %"class.blink::ExceptionState"* dereferenceable(72)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3316"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERiRjEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.3313"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3316"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3313"* %0, %"struct.WTF::KeyValuePair.3316"* null)
  %9 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3316"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.3316"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.3316"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.3316"* %52, %"struct.WTF::KeyValuePair.3316"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.3316"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.3316"* %59 to i64*
  store i64 0, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.3316"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3313"* %0, %"struct.WTF::KeyValuePair.3316"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair.3316"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } undef, %"struct.WTF::KeyValuePair.3316"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.3316"*, i8 } %100
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3313"*, %"struct.WTF::KeyValuePair.3316"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([84 x i8], [84 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairIijEEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3316"*
  %37 = call %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_(%"class.WTF::HashTable.3313"* %0, %"struct.WTF::KeyValuePair.3316"* %36, i32 %32, %"struct.WTF::KeyValuePair.3316"* %1) #16
  ret %"struct.WTF::KeyValuePair.3316"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE8RehashToEPS2_jSD_(%"class.WTF::HashTable.3313"*, %"struct.WTF::KeyValuePair.3316"*, i32, %"struct.WTF::KeyValuePair.3316"*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint %"struct.WTF::KeyValuePair.3316"* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.3313"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %9, align 8
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3316"* %16 to i64
  br label %31

18:                                               ; preds = %118
  %19 = bitcast %"class.WTF::HashTable.3313"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %119, %18 ]
  %23 = phi %"struct.WTF::KeyValuePair.3316"* [ null, %10 ], [ %122, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #16
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret %"struct.WTF::KeyValuePair.3316"* %23

31:                                               ; preds = %13, %118
  %32 = phi i64 [ %17, %13 ], [ %119, %118 ]
  %33 = phi i32 [ %7, %13 ], [ %120, %118 ]
  %34 = phi %"struct.WTF::KeyValuePair.3316"* [ %16, %13 ], [ %121, %118 ]
  %35 = phi %"struct.WTF::KeyValuePair.3316"* [ null, %13 ], [ %122, %118 ]
  %36 = phi i32 [ 0, %13 ], [ %123, %118 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %34, i64 %37
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %38, i64 0, i32 0
  %40 = load i32, i32* %39, align 4
  %41 = add i32 %40, 1
  %42 = icmp ult i32 %41, 2
  br i1 %42, label %118, label %43

43:                                               ; preds = %31
  %44 = shl i32 %40, 15
  %45 = xor i32 %44, -1
  %46 = add i32 %40, %45
  %47 = lshr i32 %46, 10
  %48 = xor i32 %47, %46
  %49 = mul i32 %48, 9
  %50 = lshr i32 %49, 6
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 11
  %53 = xor i32 %52, -1
  %54 = add i32 %51, %53
  %55 = lshr i32 %54, 16
  %56 = xor i32 %55, %54
  %57 = and i32 %56, %14
  %58 = zext i32 %57 to i64
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %1, i64 %58
  %60 = ptrtoint %"struct.WTF::KeyValuePair.3316"* %59 to i64
  %61 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %59, i64 0, i32 0
  %62 = load i32, i32* %61, align 4
  %63 = icmp eq i32 %62, 0
  br i1 %63, label %81, label %64

64:                                               ; preds = %43
  %65 = xor i32 %56, -1
  %66 = lshr i32 %54, 23
  %67 = add i32 %66, %65
  %68 = shl i32 %67, 12
  %69 = xor i32 %68, %67
  %70 = lshr i32 %69, 7
  %71 = xor i32 %70, %69
  %72 = shl i32 %71, 2
  %73 = xor i32 %72, %71
  %74 = lshr i32 %73, 20
  %75 = xor i32 %74, %73
  %76 = or i32 %75, 1
  %77 = zext i32 %76 to i64
  br label %87

78:                                               ; preds = %94
  %79 = ptrtoint %"struct.WTF::KeyValuePair.3316"* %101 to i64
  %80 = inttoptr i64 %96 to %"struct.WTF::KeyValuePair.3316"*
  br label %81

81:                                               ; preds = %78, %43
  %82 = phi i64 [ %79, %78 ], [ %60, %43 ]
  %83 = phi %"struct.WTF::KeyValuePair.3316"* [ %80, %78 ], [ null, %43 ]
  %84 = icmp eq %"struct.WTF::KeyValuePair.3316"* %83, null
  %85 = ptrtoint %"struct.WTF::KeyValuePair.3316"* %83 to i64
  %86 = select i1 %84, i64 %82, i64 %85
  br label %106

87:                                               ; preds = %94, %64
  %88 = phi i64 [ 0, %64 ], [ %96, %94 ]
  %89 = phi i32 [ %62, %64 ], [ %104, %94 ]
  %90 = phi i64 [ %60, %64 ], [ %102, %94 ]
  %91 = phi i64 [ %58, %64 ], [ %100, %94 ]
  %92 = phi i64 [ 0, %64 ], [ %98, %94 ]
  %93 = icmp eq i32 %89, %40
  br i1 %93, label %106, label %94

94:                                               ; preds = %87
  %95 = icmp eq i32 %89, -1
  %96 = select i1 %95, i64 %90, i64 %88
  %97 = icmp eq i64 %92, 0
  %98 = select i1 %97, i64 %77, i64 %92
  %99 = add i64 %98, %91
  %100 = and i64 %99, %15
  %101 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %1, i64 %100
  %102 = ptrtoint %"struct.WTF::KeyValuePair.3316"* %101 to i64
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %101, i64 0, i32 0
  %104 = load i32, i32* %103, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %78, label %87

106:                                              ; preds = %87, %81
  %107 = phi i64 [ %86, %81 ], [ %90, %87 ]
  %108 = inttoptr i64 %107 to %"struct.WTF::KeyValuePair.3316"*
  %109 = bitcast %"struct.WTF::KeyValuePair.3316"* %38 to i64*
  %110 = inttoptr i64 %107 to i64*
  %111 = load i64, i64* %109, align 4
  store i64 %111, i64* %110, align 4
  %112 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %9, align 8
  %113 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %112, i64 %37
  %114 = icmp eq %"struct.WTF::KeyValuePair.3316"* %113, %3
  %115 = select i1 %114, %"struct.WTF::KeyValuePair.3316"* %108, %"struct.WTF::KeyValuePair.3316"* %35
  %116 = load i32, i32* %6, align 8
  %117 = ptrtoint %"struct.WTF::KeyValuePair.3316"* %112 to i64
  br label %118

118:                                              ; preds = %31, %106
  %119 = phi i64 [ %32, %31 ], [ %117, %106 ]
  %120 = phi i32 [ %33, %31 ], [ %116, %106 ]
  %121 = phi %"struct.WTF::KeyValuePair.3316"* [ %34, %31 ], [ %112, %106 ]
  %122 = phi %"struct.WTF::KeyValuePair.3316"* [ %35, %31 ], [ %115, %106 ]
  %123 = add i32 %36, 1
  %124 = icmp eq i32 %123, %120
  br i1 %124, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3316"*, i8 } @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6insertINS_17HashMapTranslatorISA_S5_SB_EERijEENS_18HashTableAddResultISC_S2_EEOT0_OT1_(%"class.WTF::HashTable.3313"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3316"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3313"* %0, %"struct.WTF::KeyValuePair.3316"* null)
  %9 = load %"struct.WTF::KeyValuePair.3316"*, %"struct.WTF::KeyValuePair.3316"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3316"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %11, i64 %31
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %32, i64 0, i32 0
  %34 = load i32, i32* %33, align 4
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %79, label %36

36:                                               ; preds = %10
  %37 = xor i32 %29, -1
  %38 = lshr i32 %27, 23
  %39 = add i32 %38, %37
  %40 = shl i32 %39, 12
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 7
  %43 = xor i32 %42, %41
  %44 = shl i32 %43, 2
  %45 = xor i32 %44, %43
  %46 = lshr i32 %45, 20
  %47 = xor i32 %46, %45
  %48 = or i32 %47, 1
  %49 = zext i32 %48 to i64
  br label %50

50:                                               ; preds = %36, %57
  %51 = phi i32 [ %34, %36 ], [ %66, %57 ]
  %52 = phi %"struct.WTF::KeyValuePair.3316"* [ %32, %36 ], [ %64, %57 ]
  %53 = phi %"struct.WTF::KeyValuePair.3316"* [ null, %36 ], [ %59, %57 ]
  %54 = phi i64 [ %31, %36 ], [ %63, %57 ]
  %55 = phi i64 [ 0, %36 ], [ %61, %57 ]
  %56 = icmp eq i32 %51, %16
  br i1 %56, label %96, label %57

57:                                               ; preds = %50
  %58 = icmp eq i32 %51, -1
  %59 = select i1 %58, %"struct.WTF::KeyValuePair.3316"* %52, %"struct.WTF::KeyValuePair.3316"* %53
  %60 = icmp eq i64 %55, 0
  %61 = select i1 %60, i64 %49, i64 %55
  %62 = add i64 %61, %54
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %64, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  %67 = icmp eq i32 %66, 0
  br i1 %67, label %68, label %50

68:                                               ; preds = %57
  %69 = icmp eq %"struct.WTF::KeyValuePair.3316"* %59, null
  br i1 %69, label %79, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.3316"* %59 to i64*
  store i64 0, i64* %71, align 4
  %72 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  %78 = load i32, i32* %1, align 4
  br label %79

79:                                               ; preds = %10, %68, %70
  %80 = phi i32 [ %78, %70 ], [ %16, %68 ], [ %16, %10 ]
  %81 = phi %"struct.WTF::KeyValuePair.3316"* [ %59, %70 ], [ %64, %68 ], [ %32, %10 ]
  %82 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %81, i64 0, i32 0
  store i32 %80, i32* %82, align 4
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3316", %"struct.WTF::KeyValuePair.3316"* %81, i64 0, i32 1
  %84 = load i32, i32* %2, align 4
  store i32 %84, i32* %83, align 4
  %85 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 2
  %86 = load i32, i32* %85, align 4
  %87 = add i32 %86, 1
  store i32 %87, i32* %85, align 4
  %88 = getelementptr inbounds %"class.WTF::HashTable.3313", %"class.WTF::HashTable.3313"* %0, i64 0, i32 3
  %89 = load i32, i32* %88, align 8
  %90 = add i32 %89, %87
  %91 = shl i32 %90, 1
  %92 = load i32, i32* %12, align 8
  %93 = icmp ult i32 %91, %92
  br i1 %93, label %96, label %94

94:                                               ; preds = %79
  %95 = tail call %"struct.WTF::KeyValuePair.3316"* @_ZN3WTF9HashTableIiNS_12KeyValuePairIijEENS_24KeyValuePairKeyExtractorENS_7IntHashIiEENS_18HashMapValueTraitsINS_10HashTraitsIiEENS7_IjEEEES8_NS_18PartitionAllocatorEE6ExpandEPS2_(%"class.WTF::HashTable.3313"* %0, %"struct.WTF::KeyValuePair.3316"* %81)
  br label %96

96:                                               ; preds = %50, %79, %94
  %97 = phi i8 [ 1, %79 ], [ 1, %94 ], [ 0, %50 ]
  %98 = phi %"struct.WTF::KeyValuePair.3316"* [ %81, %79 ], [ %95, %94 ], [ %52, %50 ]
  %99 = insertvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } undef, %"struct.WTF::KeyValuePair.3316"* %98, 0
  %100 = insertvalue { %"struct.WTF::KeyValuePair.3316"*, i8 } %99, i8 %97, 1
  ret { %"struct.WTF::KeyValuePair.3316"*, i8 } %100
}

declare void @_ZN5blink19MediaQueryEvaluatorC1EPNS_10LocalFrameE(%"class.blink::MediaQueryEvaluator"*, %"class.blink::LocalFrame"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_19MediaQueryEvaluatorEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_19MediaQueryEvaluatorEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_19MediaQueryEvaluatorEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_19MediaQueryEvaluatorEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink19MediaQueryEvaluatorEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19MediaQueryEvaluatorEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::MediaQueryEvaluator"*
  tail call void @_ZNK5blink19MediaQueryEvaluator5TraceEPNS_7VisitorE(%"class.blink::MediaQueryEvaluator"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_19MediaQueryEvaluatorEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::MediaQueryEvaluator"*
  tail call void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_19MediaQueryEvaluatorEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink19MediaQueryEvaluator5TraceEPNS_7VisitorE(%"class.blink::MediaQueryEvaluator"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink19MediaQueryEvaluatorD1Ev(%"class.blink::MediaQueryEvaluator"*) unnamed_addr #3

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS20MediaQueryExpressionENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4178"*, %"class.std::__1::unique_ptr.4180"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4178", %"class.std::__1::vector.4178"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4180"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4178"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4178"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4178", %"class.std::__1::vector.4178"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4180"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4180"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4180"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4180"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4180"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4180"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4180"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4178", %"class.std::__1::vector.4178"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4180"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4180"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::MediaQueryExpression"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4180"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4180"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4180"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4180"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !88

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4180"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4180"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4180"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4180"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4180"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4180"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4180"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4180"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4180"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4180"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4180"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4180"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4180"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4180"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4180"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4180"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4180"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4180"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4180"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4180"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4180"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4180"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4180"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4180"*, %"class.std::__1::unique_ptr.4180"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4180"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4180"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4180"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4180"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4180"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4180"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4180", %"class.std::__1::unique_ptr.4180"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::MediaQueryExpression"*, %"class.blink::protocol::CSS::MediaQueryExpression"** %142, align 8
  store %"class.blink::protocol::CSS::MediaQueryExpression"* null, %"class.blink::protocol::CSS::MediaQueryExpression"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::MediaQueryExpression"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::MediaQueryExpression"* %143 to void (%"class.blink::protocol::CSS::MediaQueryExpression"*)***
  %147 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)**, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::MediaQueryExpression"*)*, void (%"class.blink::protocol::CSS::MediaQueryExpression"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::MediaQueryExpression"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4180"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS10MediaQueryENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4167"*, %"class.std::__1::unique_ptr.4169"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4167", %"class.std::__1::vector.4167"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4169"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4167"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4167"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4167", %"class.std::__1::vector.4167"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4169"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4169"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4169"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4169"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4169"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4169"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4169"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4167", %"class.std::__1::vector.4167"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4169"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4169"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::MediaQuery"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4169"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4169"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4169"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4169"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !89

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4169"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4169"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4169"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4169"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4169"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4169"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4169"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4169"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4169"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4169"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4169"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4169"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4169"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4169"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4169"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4169"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4169"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4169"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4169"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4169"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4169"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4169"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4169"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4169"*, %"class.std::__1::unique_ptr.4169"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4169"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4169"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4169"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4169"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4169"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4169"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4169", %"class.std::__1::unique_ptr.4169"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::MediaQuery"*, %"class.blink::protocol::CSS::MediaQuery"** %142, align 8
  store %"class.blink::protocol::CSS::MediaQuery"* null, %"class.blink::protocol::CSS::MediaQuery"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::MediaQuery"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::MediaQuery"* %143 to void (%"class.blink::protocol::CSS::MediaQuery"*)***
  %147 = load void (%"class.blink::protocol::CSS::MediaQuery"*)**, void (%"class.blink::protocol::CSS::MediaQuery"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::MediaQuery"*)*, void (%"class.blink::protocol::CSS::MediaQuery"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::MediaQuery"*)*, void (%"class.blink::protocol::CSS::MediaQuery"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::MediaQuery"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4169"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS8CSSMediaENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4145"*, %"class.std::__1::unique_ptr.4147"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4147"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4145"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4145"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4147"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4147"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4147"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4147"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4147"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4147"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4147"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4145", %"class.std::__1::vector.4145"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4147"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4147"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::CSSMedia"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4147"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4147"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4147"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4147"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !90

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4147"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4147"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4147"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4147"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4147"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4147"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4147"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4147"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4147"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4147"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4147"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4147"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4147"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4147"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4147"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4147"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4147"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4147"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4147"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4147"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4147"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4147"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4147"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4147"*, %"class.std::__1::unique_ptr.4147"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4147"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4147"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4147"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4147"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4147"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4147"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4147", %"class.std::__1::unique_ptr.4147"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::CSSMedia"*, %"class.blink::protocol::CSS::CSSMedia"** %142, align 8
  store %"class.blink::protocol::CSS::CSSMedia"* null, %"class.blink::protocol::CSS::CSSMedia"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::CSSMedia"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::CSSMedia"* %143 to void (%"class.blink::protocol::CSS::CSSMedia"*)***
  %147 = load void (%"class.blink::protocol::CSS::CSSMedia"*)**, void (%"class.blink::protocol::CSS::CSSMedia"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::CSSMedia"*)*, void (%"class.blink::protocol::CSS::CSSMedia"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::CSSMedia"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4147"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3309"*, %"class.blink::Node"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::Node"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3311"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::Node"*, %"class.blink::Node"** %54, align 8
  %56 = icmp eq %"class.blink::Node"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::Node"*, %"class.blink::Node"** %63, align 8
  %65 = icmp eq %"class.blink::Node"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.3311"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.3311"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.3311"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.3311"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } undef, %"struct.WTF::KeyValuePair.3311"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } %78, %"struct.WTF::KeyValuePair.3311"* %77, 1
  ret { %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"* } %79
}

declare void @_ZN5blink33InspectorStyleSheetForInlineStyleC1EPNS_7ElementEPNS_23InspectorStyleSheetBase8ListenerE(%"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::Element"*, %"class.blink::InspectorStyleSheetBase::Listener"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_23InspectorStyleSheetBaseEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_23InspectorStyleSheetBaseEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_23InspectorStyleSheetBaseEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_23InspectorStyleSheetBaseEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink23InspectorStyleSheetBaseEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_23InspectorStyleSheetBaseEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::InspectorStyleSheetBase"*
  %3 = bitcast i8* %0 to void (%"class.blink::InspectorStyleSheetBase"*)***
  %4 = load void (%"class.blink::InspectorStyleSheetBase"*)**, void (%"class.blink::InspectorStyleSheetBase"*)*** %3, align 8
  %5 = load void (%"class.blink::InspectorStyleSheetBase"*)*, void (%"class.blink::InspectorStyleSheetBase"*)** %4, align 8
  tail call void %5(%"class.blink::InspectorStyleSheetBase"* %2) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_23InspectorStyleSheetBaseEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3284"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.3282"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectorStyleSheetForInlineStyle"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3284"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.3282"* %0, %"struct.WTF::KeyValuePair.3284"* null)
  %9 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3284"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.3284"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.3284"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.3284"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %157, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.3284"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.3284"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.3284"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #16
  %72 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.3284"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.3284"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #16
  br label %99

99:                                               ; preds = %98, %95, %78
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %79, i64 0, i32 1
  %101 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %2, align 8
  %102 = ptrtoint %"class.blink::InspectorStyleSheetForInlineStyle"* %101 to i64
  %103 = bitcast %"class.blink::Member.3963"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::InspectorStyleSheetForInlineStyle"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #16
  br label %109

109:                                              ; preds = %99, %106
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %145, label %112

112:                                              ; preds = %109
  %113 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %114 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %113, i64 0, i32 1
  %115 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %114) #16
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119, !prof !3

117:                                              ; preds = %112
  %118 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %114, i8* %118) #16
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i8* [ %118, %117 ], [ %115, %112 ]
  %121 = bitcast i8* %120 to %"class.blink::ThreadState"**
  %122 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 9
  %124 = load i8, i8* %123, align 1, !range !4
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %145, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 13
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %130, align 8
  %132 = load atomic i64, i64* %103 monotonic, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %131, i64 0, i32 0, i32 0
  %136 = inttoptr i64 %132 to i8*
  %137 = bitcast %"class.blink::MarkingVisitor"* %131 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %138 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %138, i64 5
  %140 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %139, align 8
  tail call void %140(%"class.blink::Visitor"* %135, i8* nonnull %136, i8* %136, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv) #16
  %141 = load i64, i64* %127, align 8
  br label %142

142:                                              ; preds = %134, %126
  %143 = phi i64 [ %129, %126 ], [ %141, %134 ]
  %144 = add i64 %143, -1
  store i64 %144, i64* %127, align 8
  br label %145

145:                                              ; preds = %109, %119, %142
  %146 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = add i32 %150, %148
  %152 = shl i32 %151, 1
  %153 = load i32, i32* %12, align 8
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %145
  %156 = tail call %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.3282"* %0, %"struct.WTF::KeyValuePair.3284"* %79)
  br label %157

157:                                              ; preds = %54, %145, %155
  %158 = phi i8 [ 1, %145 ], [ 1, %155 ], [ 0, %54 ]
  %159 = phi %"struct.WTF::KeyValuePair.3284"* [ %79, %145 ], [ %156, %155 ], [ %47, %54 ]
  %160 = insertvalue { %"struct.WTF::KeyValuePair.3284"*, i8 } undef, %"struct.WTF::KeyValuePair.3284"* %159, 0
  %161 = insertvalue { %"struct.WTF::KeyValuePair.3284"*, i8 } %160, i8 %158, 1
  ret { %"struct.WTF::KeyValuePair.3284"*, i8 } %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.3282"*, %"struct.WTF::KeyValuePair.3284"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.3282"* %0, i32 %35, %"struct.WTF::KeyValuePair.3284"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5278"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5278"* %42 to %"struct.WTF::KeyValuePair.3284"*
  %44 = call %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3282"* %0, %"struct.WTF::KeyValuePair.3284"* %43, i32 %40, %"struct.WTF::KeyValuePair.3284"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.3284"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3284"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.3282"*, i32, %"struct.WTF::KeyValuePair.3284"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3284"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.3284"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5278"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5278"* %44 to %"struct.WTF::KeyValuePair.3284"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.3284"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.3282"* %0 to %"class.blink::HeapHashTableBacking.5278"**
  store %"class.blink::HeapHashTableBacking.5278"* %44, %"class.blink::HeapHashTableBacking.5278"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5278", %"class.blink::HeapHashTableBacking.5278"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.3284"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3282"* %0, %"struct.WTF::KeyValuePair.3284"* %42, i32 %1, %"struct.WTF::KeyValuePair.3284"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.3284"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.3284"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.3284"* %64, %"struct.WTF::KeyValuePair.3284"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.3284"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.3284"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #16
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.3284"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.3963"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.3963"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #16
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.3284"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3284"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3282"*, %"struct.WTF::KeyValuePair.3284"*, i32, %"struct.WTF::KeyValuePair.3284"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3282", align 8
  %6 = bitcast %"class.WTF::HashTable.3282"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3282"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3284"* %1, %"struct.WTF::KeyValuePair.3284"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3284"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3284"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.3282"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3284"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3282"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3282"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3282"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.3284"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #16
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.3284"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.3963"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3284"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.3284"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.3284"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.3284"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.3284"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.3282"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #16
  %101 = extractvalue { %"struct.WTF::KeyValuePair.3284"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #16
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.3284"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.3963"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.3963"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.3284"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.3284"* %101, %"struct.WTF::KeyValuePair.3284"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.3284"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.3284"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5278"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5278"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5278"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([426 x i8], [426 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #16
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.3284"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3284"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.3284"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.3963"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv) #16
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.3963"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv) #16
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3284"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.3282"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #16
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.3284"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.3284"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.3284"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.3284"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.3284"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.3284"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.3284"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.3284"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #16
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.3284"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.3284"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.3284"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.3284"*, i8 } undef, %"struct.WTF::KeyValuePair.3284"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.3284"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.3284"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3311"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPNS1_7ElementERPS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3309"*, %"class.blink::Element"** dereferenceable(8), %"class.blink::InspectorStyleSheetForInlineStyle"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3311"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3309"* %0, %"struct.WTF::KeyValuePair.3311"* null)
  %9 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3311"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Element"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::Node"*, %"class.blink::Node"** %40, align 8
  %42 = icmp eq %"class.blink::Node"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Node"*
  %44 = inttoptr i64 %17 to %"class.blink::Element"*
  br i1 %42, label %88, label %45

45:                                               ; preds = %10
  %46 = xor i32 %36, -1
  %47 = lshr i32 %36, 23
  %48 = add i32 %47, %46
  %49 = shl i32 %48, 12
  %50 = xor i32 %49, %48
  %51 = lshr i32 %50, 7
  %52 = xor i32 %51, %50
  %53 = shl i32 %52, 2
  %54 = xor i32 %53, %52
  %55 = lshr i32 %54, 20
  %56 = xor i32 %55, %54
  %57 = or i32 %56, 1
  %58 = zext i32 %57 to i64
  br label %59

59:                                               ; preds = %45, %66
  %60 = phi %"class.blink::Node"* [ %41, %45 ], [ %75, %66 ]
  %61 = phi %"struct.WTF::KeyValuePair.3311"* [ %39, %45 ], [ %73, %66 ]
  %62 = phi %"struct.WTF::KeyValuePair.3311"* [ null, %45 ], [ %68, %66 ]
  %63 = phi i64 [ %38, %45 ], [ %72, %66 ]
  %64 = phi i64 [ 0, %45 ], [ %70, %66 ]
  %65 = icmp eq %"class.blink::Node"* %60, %43
  br i1 %65, label %120, label %66

66:                                               ; preds = %59
  %67 = icmp eq %"class.blink::Node"* %60, inttoptr (i64 -1 to %"class.blink::Node"*)
  %68 = select i1 %67, %"struct.WTF::KeyValuePair.3311"* %61, %"struct.WTF::KeyValuePair.3311"* %62
  %69 = icmp eq i64 %64, 0
  %70 = select i1 %69, i64 %58, i64 %64
  %71 = add i64 %70, %63
  %72 = and i64 %71, %15
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %11, i64 %72
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %73, i64 0, i32 0, i32 0, i32 0
  %75 = load %"class.blink::Node"*, %"class.blink::Node"** %74, align 8
  %76 = icmp eq %"class.blink::Node"* %75, null
  br i1 %76, label %77, label %59

77:                                               ; preds = %66
  %78 = icmp eq %"struct.WTF::KeyValuePair.3311"* %68, null
  br i1 %78, label %88, label %79

79:                                               ; preds = %77
  %80 = bitcast %"struct.WTF::KeyValuePair.3311"* %68 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %80, i64 16) #16
  %81 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, 2147483647
  %84 = and i32 %83, 2147483647
  %85 = and i32 %82, -2147483648
  %86 = or i32 %84, %85
  store i32 %86, i32* %81, align 8
  %87 = load %"class.blink::Element"*, %"class.blink::Element"** %1, align 8
  br label %88

88:                                               ; preds = %10, %77, %79
  %89 = phi %"class.blink::Element"* [ %87, %79 ], [ %44, %77 ], [ %44, %10 ]
  %90 = phi %"struct.WTF::KeyValuePair.3311"* [ %68, %79 ], [ %73, %77 ], [ %39, %10 ]
  %91 = ptrtoint %"class.blink::Element"* %89 to i64
  %92 = bitcast %"struct.WTF::KeyValuePair.3311"* %90 to i64*
  store atomic i64 %91, i64* %92 monotonic, align 8
  %93 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %94 = icmp eq i32 %93, 0
  br i1 %94, label %98, label %95

95:                                               ; preds = %88
  %96 = bitcast %"class.blink::Element"* %89 to i8*
  %97 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %96) #16
  br label %98

98:                                               ; preds = %95, %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %90, i64 0, i32 1
  %100 = load %"class.blink::InspectorStyleSheetForInlineStyle"*, %"class.blink::InspectorStyleSheetForInlineStyle"** %2, align 8
  %101 = ptrtoint %"class.blink::InspectorStyleSheetForInlineStyle"* %100 to i64
  %102 = bitcast %"class.blink::Member.3963"* %99 to i64*
  store atomic i64 %101, i64* %102 monotonic, align 8
  %103 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %108, label %105

105:                                              ; preds = %98
  %106 = bitcast %"class.blink::InspectorStyleSheetForInlineStyle"* %100 to i8*
  %107 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %106) #16
  br label %108

108:                                              ; preds = %98, %105
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_4NodeEEENS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSB_IS8_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3311"* %90) #16
  %109 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 2
  %110 = load i32, i32* %109, align 4
  %111 = add i32 %110, 1
  store i32 %111, i32* %109, align 4
  %112 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 3
  %113 = load i32, i32* %112, align 8
  %114 = add i32 %113, %111
  %115 = shl i32 %114, 1
  %116 = load i32, i32* %12, align 8
  %117 = icmp ult i32 %115, %116
  br i1 %117, label %120, label %118

118:                                              ; preds = %108
  %119 = tail call %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3309"* %0, %"struct.WTF::KeyValuePair.3311"* %90)
  br label %120

120:                                              ; preds = %59, %108, %118
  %121 = phi i8 [ 1, %108 ], [ 1, %118 ], [ 0, %59 ]
  %122 = phi %"struct.WTF::KeyValuePair.3311"* [ %90, %108 ], [ %119, %118 ], [ %61, %59 ]
  %123 = insertvalue { %"struct.WTF::KeyValuePair.3311"*, i8 } undef, %"struct.WTF::KeyValuePair.3311"* %122, 0
  %124 = insertvalue { %"struct.WTF::KeyValuePair.3311"*, i8 } %123, i8 %121, 1
  ret { %"struct.WTF::KeyValuePair.3311"*, i8 } %124
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3309"*, %"struct.WTF::KeyValuePair.3311"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.3309"* %0, i32 %35, %"struct.WTF::KeyValuePair.3311"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5288"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5288"* %42 to %"struct.WTF::KeyValuePair.3311"*
  %44 = call %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3309"* %0, %"struct.WTF::KeyValuePair.3311"* %43, i32 %40, %"struct.WTF::KeyValuePair.3311"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.3311"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3311"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.3309"*, i32, %"struct.WTF::KeyValuePair.3311"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3311"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.3311"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5288"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5288"* %44 to %"struct.WTF::KeyValuePair.3311"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.3311"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.3309"* %0 to %"class.blink::HeapHashTableBacking.5288"**
  store %"class.blink::HeapHashTableBacking.5288"* %44, %"class.blink::HeapHashTableBacking.5288"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5288", %"class.blink::HeapHashTableBacking.5288"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.3311"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3309"* %0, %"struct.WTF::KeyValuePair.3311"* %42, i32 %1, %"struct.WTF::KeyValuePair.3311"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.3311"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.3311"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.3311"* %64, %"struct.WTF::KeyValuePair.3311"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.3311"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.3311"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.3311"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.3963"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.3963"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.3311"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3311"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3309"*, %"struct.WTF::KeyValuePair.3311"*, i32, %"struct.WTF::KeyValuePair.3311"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3309", align 8
  %6 = bitcast %"class.WTF::HashTable.3309"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3309"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3311"* %1, %"struct.WTF::KeyValuePair.3311"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3311"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3311"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.3309"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3311"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3309"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3309"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3309"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3311"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.3311"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.3311"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.3311"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.3311"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3309"* nonnull %5, %"class.blink::Member.318"* dereferenceable(8) %67) #16
  %69 = extractvalue { %"struct.WTF::KeyValuePair.3311"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.3311"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.3963"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.3963"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.3311"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.3311"* %69, %"struct.WTF::KeyValuePair.3311"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.3311"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.3311"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5288"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_NS3_INS_33InspectorStyleSheetForInlineStyleEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5288"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5288"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS1_12KeyValuePairIS5_NS3_INS_33InspectorStyleSheetForInlineStyleEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([501 x i8], [501 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_4NodeEEENS_12KeyValuePairIS6_NS4_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_4NodeEEENS_12KeyValuePairIS6_NS4_INS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_4NodeEEENS_12KeyValuePairIS6_NS4_INS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3311"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %73, %20
  ret void

33:                                               ; preds = %73, %30
  %34 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.3311"* %35 to i64*
  br i1 %28, label %37, label %53

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %73
    i64 0, label %73
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.3963"* %40 to i64*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #16
  %46 = load atomic i64, i64* %41 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %73, label %48

48:                                               ; preds = %39
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv) #16
  br label %73

53:                                               ; preds = %33
  %54 = load i64, i64* %36, align 8
  switch i64 %54, label %55 [
    i64 -1, label %73
    i64 0, label %73
  ]

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %3, i64 %34, i32 1
  %57 = load atomic i64, i64* %36 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = inttoptr i64 %57 to i8*
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %0, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #16
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.blink::Member.3963"* %56 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv) #16
  br label %73

73:                                               ; preds = %53, %53, %37, %37, %68, %64, %39, %48
  %74 = add nuw nsw i64 %34, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Node"*
  %4 = bitcast i8* %1 to void (%"class.blink::Node"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)**, void (%"class.blink::Node"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::Node"*, %"class.blink::Visitor"*)*, void (%"class.blink::Node"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::Node"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3311"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3309"*, %"class.blink::Member.318"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3311"*, %"struct.WTF::KeyValuePair.3311"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.318"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3311"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::Node"*, %"class.blink::Node"** %34, align 8
  %36 = icmp eq %"class.blink::Node"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::Node"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3311"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.3311"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3311"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3311"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3311"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::Node"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::Node"*, %"class.blink::Node"** %67, align 8
  %69 = icmp eq %"class.blink::Node"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::Node"* %63, inttoptr (i64 -1 to %"class.blink::Node"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.3311"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::Node"*, %"class.blink::Node"** %79, align 8
  %81 = icmp eq %"class.blink::Node"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.3311"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.3311"*, i8 } undef, %"struct.WTF::KeyValuePair.3311"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.3311"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.3311"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_4NodeEEENS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSB_IS8_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3311"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair.3311"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_4NodeEE5TraceEPNS_7VisitorEPKv) #16
  br label %35

35:                                               ; preds = %18, %29
  %36 = bitcast %"class.blink::Member.3963"* %25 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* nonnull %40, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_33InspectorStyleSheetForInlineStyleEE5TraceEPNS_7VisitorEPKv) #16
  br label %45

45:                                               ; preds = %35, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

declare void @_ZN5blink19InspectorStyleSheetC1EPNS_21InspectorNetworkAgentEPNS_13CSSStyleSheetERKN3WTF6StringES8_PNS_23InspectorStyleSheetBase8ListenerEPNS_26InspectorResourceContainerE(%"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorNetworkAgent"*, %"class.blink::CSSStyleSheet"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectorStyleSheetBase::Listener"*, %"class.blink::InspectorResourceContainer"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3277"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6insertINS_17HashMapTranslatorISE_S9_SF_EES1_RPS5_EENS_18HashTableAddResultISG_S7_EEOT0_OT1_(%"class.WTF::HashTable.3275"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::InspectorStyleSheet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3277"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.3275"* %0, %"struct.WTF::KeyValuePair.3277"* null)
  %9 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3277"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.3277"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.3277"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.3277"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %157, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.3277"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.3277"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"struct.WTF::KeyValuePair.3277"* %59 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %71, i64 16) #16
  %72 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"struct.WTF::KeyValuePair.3277"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = bitcast %"class.WTF::String"* %1 to i64*
  %81 = load i64, i64* %80, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %16, align 8
  %82 = bitcast %"struct.WTF::KeyValuePair.3277"* %79 to i64*
  %83 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %79, i64 0, i32 0, i32 0, i32 0
  %84 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %83, align 8
  store i64 %81, i64* %82, align 8
  %85 = icmp eq %"class.WTF::StringImpl"* %84, null
  br i1 %85, label %99, label %86

86:                                               ; preds = %78
  %87 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load atomic i32, i32* %87 monotonic, align 4
  %89 = and i32 %88, 2
  %90 = icmp eq i32 %89, 0
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %84, i64 0, i32 0
  %92 = load i32, i32* %91, align 4
  br i1 %90, label %93, label %95

93:                                               ; preds = %86
  %94 = add i32 %92, -1
  store i32 %94, i32* %91, align 4
  br label %95

95:                                               ; preds = %93, %86
  %96 = phi i32 [ %94, %93 ], [ %92, %86 ]
  %97 = icmp eq i32 %96, 0
  br i1 %97, label %98, label %99

98:                                               ; preds = %95
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %84) #16
  br label %99

99:                                               ; preds = %98, %95, %78
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %79, i64 0, i32 1
  %101 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %2, align 8
  %102 = ptrtoint %"class.blink::InspectorStyleSheet"* %101 to i64
  %103 = bitcast %"class.blink::Member.3916"* %100 to i64*
  store atomic i64 %102, i64* %103 monotonic, align 8
  %104 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %105 = icmp eq i32 %104, 0
  br i1 %105, label %109, label %106

106:                                              ; preds = %99
  %107 = bitcast %"class.blink::InspectorStyleSheet"* %101 to i8*
  %108 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %107) #16
  br label %109

109:                                              ; preds = %99, %106
  %110 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %145, label %112

112:                                              ; preds = %109
  %113 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %114 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %113, i64 0, i32 1
  %115 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %114) #16
  %116 = icmp eq i8* %115, null
  br i1 %116, label %117, label %119, !prof !3

117:                                              ; preds = %112
  %118 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %114, i8* %118) #16
  br label %119

119:                                              ; preds = %117, %112
  %120 = phi i8* [ %118, %117 ], [ %115, %112 ]
  %121 = bitcast i8* %120 to %"class.blink::ThreadState"**
  %122 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %121, align 8
  %123 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 9
  %124 = load i8, i8* %123, align 1, !range !4
  %125 = icmp eq i8 %124, 0
  br i1 %125, label %145, label %126

126:                                              ; preds = %119
  %127 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 13
  %128 = load i64, i64* %127, align 8
  %129 = add i64 %128, 1
  store i64 %129, i64* %127, align 8
  %130 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %122, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %131 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %130, align 8
  %132 = load atomic i64, i64* %103 monotonic, align 8
  %133 = icmp eq i64 %132, 0
  br i1 %133, label %142, label %134

134:                                              ; preds = %126
  %135 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %131, i64 0, i32 0, i32 0
  %136 = inttoptr i64 %132 to i8*
  %137 = bitcast %"class.blink::MarkingVisitor"* %131 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %138 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %137, align 8
  %139 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %138, i64 5
  %140 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %139, align 8
  tail call void %140(%"class.blink::Visitor"* %135, i8* nonnull %136, i8* %136, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  %141 = load i64, i64* %127, align 8
  br label %142

142:                                              ; preds = %134, %126
  %143 = phi i64 [ %129, %126 ], [ %141, %134 ]
  %144 = add i64 %143, -1
  store i64 %144, i64* %127, align 8
  br label %145

145:                                              ; preds = %109, %119, %142
  %146 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 2
  %147 = load i32, i32* %146, align 4
  %148 = add i32 %147, 1
  store i32 %148, i32* %146, align 4
  %149 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 3
  %150 = load i32, i32* %149, align 8
  %151 = add i32 %150, %148
  %152 = shl i32 %151, 1
  %153 = load i32, i32* %12, align 8
  %154 = icmp ult i32 %152, %153
  br i1 %154, label %157, label %155

155:                                              ; preds = %145
  %156 = tail call %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.3275"* %0, %"struct.WTF::KeyValuePair.3277"* %79)
  br label %157

157:                                              ; preds = %54, %145, %155
  %158 = phi i8 [ 1, %145 ], [ 1, %155 ], [ 0, %54 ]
  %159 = phi %"struct.WTF::KeyValuePair.3277"* [ %79, %145 ], [ %156, %155 ], [ %47, %54 ]
  %160 = insertvalue { %"struct.WTF::KeyValuePair.3277"*, i8 } undef, %"struct.WTF::KeyValuePair.3277"* %159, 0
  %161 = insertvalue { %"struct.WTF::KeyValuePair.3277"*, i8 } %160, i8 %158, 1
  ret { %"struct.WTF::KeyValuePair.3277"*, i8 } %161
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE6ExpandEPS7_(%"class.WTF::HashTable.3275"*, %"struct.WTF::KeyValuePair.3277"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.3275"* %0, i32 %35, %"struct.WTF::KeyValuePair.3277"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5301"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5301"* %42 to %"struct.WTF::KeyValuePair.3277"*
  %44 = call %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3275"* %0, %"struct.WTF::KeyValuePair.3277"* %43, i32 %40, %"struct.WTF::KeyValuePair.3277"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.3277"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3277"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE12ExpandBufferEjPS7_Rb(%"class.WTF::HashTable.3275"*, i32, %"struct.WTF::KeyValuePair.3277"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3277"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.3277"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5301"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5301"* %44 to %"struct.WTF::KeyValuePair.3277"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.3277"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.3275"* %0 to %"class.blink::HeapHashTableBacking.5301"**
  store %"class.blink::HeapHashTableBacking.5301"* %44, %"class.blink::HeapHashTableBacking.5301"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5301", %"class.blink::HeapHashTableBacking.5301"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.3277"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3275"* %0, %"struct.WTF::KeyValuePair.3277"* %42, i32 %1, %"struct.WTF::KeyValuePair.3277"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.3277"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.3277"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.3277"* %64, %"struct.WTF::KeyValuePair.3277"* %60
  %66 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %62, i64 0, i32 0, i32 0, i32 0
  %67 = bitcast %"struct.WTF::KeyValuePair.3277"* %62 to i64*
  %68 = load i64, i64* %67, align 8
  switch i64 %68, label %71 [
    i64 -1, label %69
    i64 0, label %69
  ]

69:                                               ; preds = %58, %58
  %70 = bitcast %"struct.WTF::KeyValuePair.3277"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %70, i8 0, i64 16, i1 false)
  br label %113

71:                                               ; preds = %58
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %64, i64 0, i32 0, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #16
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = load i64, i64* %67, align 8
  %90 = bitcast %"struct.WTF::KeyValuePair.3277"* %64 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %66, align 8
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %45, i64 %59, i32 1
  %92 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %61, i64 %59, i32 1
  %93 = bitcast %"class.blink::Member.3916"* %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = bitcast %"class.blink::Member.3916"* %91 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %96, i64 %59, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %97, align 8
  %99 = icmp eq %"class.WTF::StringImpl"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %88
  %101 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %102 = load atomic i32, i32* %101 monotonic, align 4
  %103 = and i32 %102, 2
  %104 = icmp eq i32 %103, 0
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %98, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  br i1 %104, label %107, label %109

107:                                              ; preds = %100
  %108 = add i32 %106, -1
  store i32 %108, i32* %105, align 4
  br label %109

109:                                              ; preds = %107, %100
  %110 = phi i32 [ %108, %107 ], [ %106, %100 ]
  %111 = icmp eq i32 %110, 0
  br i1 %111, label %112, label %113

112:                                              ; preds = %109
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %98) #16
  br label %113

113:                                              ; preds = %112, %109, %88, %69
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.3277"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3277"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3275"*, %"struct.WTF::KeyValuePair.3277"*, i32, %"struct.WTF::KeyValuePair.3277"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3275", align 8
  %6 = bitcast %"class.WTF::HashTable.3275"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3275"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3277"* %1, %"struct.WTF::KeyValuePair.3277"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3277"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3277"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %19, align 8
  br label %88

21:                                               ; preds = %131
  %22 = bitcast %"class.WTF::HashTable.3275"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %132, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3277"* [ null, %15 ], [ %134, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3275"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3275"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3275"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.3277"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %84, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %82, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %79, %54
  %57 = phi i64 [ 0, %54 ], [ %80, %79 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %50, i64 %57
  %59 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %58, i64 0, i32 0, i32 0, i32 0
  %60 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %59, align 8
  %61 = ptrtoint %"class.WTF::StringImpl"* %60 to i64
  switch i64 %61, label %62 [
    i64 -1, label %79
    i64 0, label %79
  ]

62:                                               ; preds = %56
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load atomic i32, i32* %63 monotonic, align 4
  %65 = and i32 %64, 2
  %66 = icmp eq i32 %65, 0
  %67 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %60, i64 0, i32 0
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %71

69:                                               ; preds = %62
  %70 = add i32 %68, -1
  store i32 %70, i32* %67, align 4
  br label %71

71:                                               ; preds = %69, %62
  %72 = phi i32 [ %70, %69 ], [ %68, %62 ]
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %74, label %75

74:                                               ; preds = %71
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %60) #16
  br label %75

75:                                               ; preds = %74, %71
  %76 = bitcast %"struct.WTF::KeyValuePair.3277"* %58 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %76, align 8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %50, i64 %57, i32 1
  %78 = bitcast %"class.blink::Member.3916"* %77 to i64*
  store atomic i64 0, i64* %78 monotonic, align 8
  br label %79

79:                                               ; preds = %75, %56, %56
  %80 = add nuw nsw i64 %57, 1
  %81 = icmp eq i64 %80, %55
  br i1 %81, label %82, label %56

82:                                               ; preds = %79, %52
  %83 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %83) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %84

84:                                               ; preds = %49, %82
  %85 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 3
  %86 = load i32, i32* %85, align 8
  %87 = and i32 %86, -2147483648
  store i32 %87, i32* %85, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3277"* %29

88:                                               ; preds = %18, %131
  %89 = phi i32 [ %13, %18 ], [ %132, %131 ]
  %90 = phi %"struct.WTF::KeyValuePair.3277"* [ %20, %18 ], [ %133, %131 ]
  %91 = phi %"struct.WTF::KeyValuePair.3277"* [ null, %18 ], [ %134, %131 ]
  %92 = phi i32 [ 0, %18 ], [ %135, %131 ]
  %93 = zext i32 %92 to i64
  %94 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %90, i64 %93
  %95 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %94, i64 0, i32 0, i32 0, i32 0
  %96 = bitcast %"struct.WTF::KeyValuePair.3277"* %94 to i64*
  %97 = load i64, i64* %96, align 8
  switch i64 %97, label %98 [
    i64 -1, label %131
    i64 0, label %131
  ]

98:                                               ; preds = %88
  %99 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %94, i64 0, i32 0
  %100 = call { %"struct.WTF::KeyValuePair.3277"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.3275"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %99) #16
  %101 = extractvalue { %"struct.WTF::KeyValuePair.3277"*, i8 } %100, 0
  %102 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %101, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %102, align 8
  %104 = icmp eq %"class.WTF::StringImpl"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %98
  %106 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %107 = load atomic i32, i32* %106 monotonic, align 4
  %108 = and i32 %107, 2
  %109 = icmp eq i32 %108, 0
  %110 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %103, i64 0, i32 0
  %111 = load i32, i32* %110, align 4
  br i1 %109, label %112, label %114

112:                                              ; preds = %105
  %113 = add i32 %111, -1
  store i32 %113, i32* %110, align 4
  br label %114

114:                                              ; preds = %112, %105
  %115 = phi i32 [ %113, %112 ], [ %111, %105 ]
  %116 = icmp eq i32 %115, 0
  br i1 %116, label %117, label %118

117:                                              ; preds = %114
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %103) #16
  br label %118

118:                                              ; preds = %98, %114, %117
  %119 = load i64, i64* %96, align 8
  %120 = bitcast %"struct.WTF::KeyValuePair.3277"* %101 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %95, align 8
  %121 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %101, i64 0, i32 1
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %90, i64 %93, i32 1
  %123 = bitcast %"class.blink::Member.3916"* %122 to i64*
  %124 = load i64, i64* %123, align 8
  %125 = bitcast %"class.blink::Member.3916"* %121 to i64*
  store i64 %124, i64* %125, align 8
  %126 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %19, align 8
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %126, i64 %93
  %128 = icmp eq %"struct.WTF::KeyValuePair.3277"* %127, %3
  %129 = select i1 %128, %"struct.WTF::KeyValuePair.3277"* %101, %"struct.WTF::KeyValuePair.3277"* %91
  %130 = load i32, i32* %12, align 8
  br label %131

131:                                              ; preds = %88, %88, %118
  %132 = phi i32 [ %89, %88 ], [ %130, %118 ], [ %89, %88 ]
  %133 = phi %"struct.WTF::KeyValuePair.3277"* [ %90, %88 ], [ %126, %118 ], [ %90, %88 ]
  %134 = phi %"struct.WTF::KeyValuePair.3277"* [ %91, %88 ], [ %129, %118 ], [ %91, %88 ]
  %135 = add i32 %92, 1
  %136 = icmp eq i32 %135, %132
  br i1 %136, label %21, label %88
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5301"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_19InspectorStyleSheetEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5301"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5301"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS1_6StringENS1_12KeyValuePairIS3_NS_6MemberINS_19InspectorStyleSheetEEEEENS1_24KeyValuePairKeyExtractorENS1_10StringHashENS1_18HashMapValueTraitsINS1_10HashTraitsIS3_EENSC_IS7_EEEESD_NS_13HeapAllocatorEEEE14AllocateObjectISI_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([398 x i8], [398 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS_6StringENS_12KeyValuePairIS4_NS1_6MemberINS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS8_EEEESE_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = icmp eq i8* %1, null
  br i1 %3, label %29, label %4

4:                                                ; preds = %2
  %5 = getelementptr inbounds i8, i8* %1, i64 -2
  %6 = bitcast i8* %5 to i16*
  %7 = load atomic i16, i16* %6 monotonic, align 2
  %8 = icmp ult i16 %7, 4
  br i1 %8, label %9, label %17

9:                                                ; preds = %4
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %22

17:                                               ; preds = %4
  %18 = load atomic i16, i16* %6 monotonic, align 2
  %19 = lshr i16 %18, 2
  %20 = zext i16 %19 to i64
  %21 = shl nuw nsw i64 %20, 3
  br label %22

22:                                               ; preds = %9, %17
  %23 = phi i64 [ %16, %9 ], [ %21, %17 ]
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)***
  %25 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)**, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %25, i64 4
  %27 = load i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)*, i1 (%"class.blink::Visitor"*, i8*, void (%"class.blink::Visitor"*, i8*)*, i64)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0, i8* nonnull %1, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv, i64 %23) #16
  br i1 %28, label %30, label %29

29:                                               ; preds = %2, %22
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  br label %30

30:                                               ; preds = %22, %29
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS3_6StringENS3_12KeyValuePairIS5_NS_6MemberINS_19InspectorStyleSheetEEEEENS3_24KeyValuePairKeyExtractorENS3_10StringHashENS3_18HashMapValueTraitsINS3_10HashTraitsIS5_EENSE_IS9_EEEESF_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.3277"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %47, label %24

24:                                               ; preds = %18, %43
  %25 = phi i64 [ %45, %43 ], [ 0, %18 ]
  %26 = phi i32 [ %44, %43 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %22, i64 %25, i32 0, i32 0, i32 0
  %28 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %27, align 8
  %29 = ptrtoint %"class.WTF::StringImpl"* %28 to i64
  switch i64 %29, label %30 [
    i64 -1, label %43
    i64 0, label %43
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %28, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %39

37:                                               ; preds = %30
  %38 = add i32 %36, -1
  store i32 %38, i32* %35, align 4
  br label %39

39:                                               ; preds = %37, %30
  %40 = phi i32 [ %38, %37 ], [ %36, %30 ]
  %41 = icmp eq i32 %40, 0
  br i1 %41, label %42, label %43

42:                                               ; preds = %39
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %28) #16
  br label %43

43:                                               ; preds = %42, %39, %24, %24
  %44 = add i32 %26, 1
  %45 = zext i32 %44 to i64
  %46 = icmp ugt i64 %21, %45
  br i1 %46, label %24, label %47

47:                                               ; preds = %43, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableINS_6StringENS_12KeyValuePairIS3_N5blink6MemberINS5_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS3_EENSD_IS8_EEEESE_NS5_13HeapAllocatorEEEE5TraceEPNS5_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3277"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %61, %20
  ret void

33:                                               ; preds = %61, %30
  %34 = phi i64 [ 0, %30 ], [ %62, %61 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.3277"* %35 to i64*
  br i1 %28, label %37, label %49

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %61
    i64 0, label %61
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.3916"* %40 to i64*
  %42 = load atomic i64, i64* %41 monotonic, align 8
  %43 = icmp eq i64 %42, 0
  br i1 %43, label %61, label %44

44:                                               ; preds = %39
  %45 = inttoptr i64 %42 to i8*
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %47 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %46, i64 5
  %48 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %47, align 8
  tail call void %48(%"class.blink::Visitor"* %0, i8* nonnull %45, i8* nonnull %45, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %61

49:                                               ; preds = %33
  %50 = load i64, i64* %36, align 8
  switch i64 %50, label %51 [
    i64 -1, label %61
    i64 0, label %61
  ]

51:                                               ; preds = %49
  %52 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %3, i64 %34, i32 1
  %53 = bitcast %"class.blink::Member.3916"* %52 to i64*
  %54 = load atomic i64, i64* %53 monotonic, align 8
  %55 = icmp eq i64 %54, 0
  br i1 %55, label %61, label %56

56:                                               ; preds = %51
  %57 = inttoptr i64 %54 to i8*
  %58 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %59 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %58, i64 5
  %60 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %59, align 8
  tail call void %60(%"class.blink::Visitor"* %0, i8* nonnull %57, i8* nonnull %57, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %61

61:                                               ; preds = %49, %49, %37, %37, %56, %51, %39, %44
  %62 = add nuw nsw i64 %34, 1
  %63 = icmp eq i64 %62, %23
  br i1 %63, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3277"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.3275"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #16
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.3277"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.3277"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.3277"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.3277"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.3277"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.3277"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.3277"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.3277"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #16
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.3277"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.3277"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.3277"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.3277"*, i8 } undef, %"struct.WTF::KeyValuePair.3277"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.3277"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.3277"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3291"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISG_SB_SH_EERPS3_RPS6_EENS_18HashTableAddResultISI_S8_EEOT0_OT1_(%"class.WTF::HashTable.3289"*, %"class.blink::CSSStyleSheet"** dereferenceable(8), %"class.blink::InspectorStyleSheet"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3291"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3289"* %0, %"struct.WTF::KeyValuePair.3291"* null)
  %9 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3291"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CSSStyleSheet"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %40, align 8
  %42 = icmp eq %"class.blink::CSSStyleSheet"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CSSStyleSheet"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CSSStyleSheet"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.3291"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.3291"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CSSStyleSheet"* %59, %43
  br i1 %64, label %119, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CSSStyleSheet"* %59, inttoptr (i64 -1 to %"class.blink::CSSStyleSheet"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.3291"* %60, %"struct.WTF::KeyValuePair.3291"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %73, align 8
  %75 = icmp eq %"class.blink::CSSStyleSheet"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.3291"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.3291"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::CSSStyleSheet"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.3291"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::CSSStyleSheet"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.3291"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::CSSStyleSheet"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #16
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %89, i64 0, i32 1
  %99 = load %"class.blink::InspectorStyleSheet"*, %"class.blink::InspectorStyleSheet"** %2, align 8
  %100 = ptrtoint %"class.blink::InspectorStyleSheet"* %99 to i64
  %101 = bitcast %"class.blink::Member.3916"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::InspectorStyleSheet"* %99 to i8*
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #16
  br label %107

107:                                              ; preds = %97, %104
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_13CSSStyleSheetEEENS4_INS_19InspectorStyleSheetEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSB_IS8_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3291"* %89) #16
  %108 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3289"* %0, %"struct.WTF::KeyValuePair.3291"* %89)
  br label %119

119:                                              ; preds = %58, %107, %117
  %120 = phi i8 [ 1, %107 ], [ 1, %117 ], [ 0, %58 ]
  %121 = phi %"struct.WTF::KeyValuePair.3291"* [ %89, %107 ], [ %118, %117 ], [ %60, %58 ]
  %122 = insertvalue { %"struct.WTF::KeyValuePair.3291"*, i8 } undef, %"struct.WTF::KeyValuePair.3291"* %121, 0
  %123 = insertvalue { %"struct.WTF::KeyValuePair.3291"*, i8 } %122, i8 %120, 1
  ret { %"struct.WTF::KeyValuePair.3291"*, i8 } %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE6ExpandEPS8_(%"class.WTF::HashTable.3289"*, %"struct.WTF::KeyValuePair.3291"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.3289"* %0, i32 %35, %"struct.WTF::KeyValuePair.3291"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5311"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5311"* %42 to %"struct.WTF::KeyValuePair.3291"*
  %44 = call %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3289"* %0, %"struct.WTF::KeyValuePair.3291"* %43, i32 %40, %"struct.WTF::KeyValuePair.3291"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.3291"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.3291"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE12ExpandBufferEjPS8_Rb(%"class.WTF::HashTable.3289"*, i32, %"struct.WTF::KeyValuePair.3291"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.3291"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.3291"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5311"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5311"* %44 to %"struct.WTF::KeyValuePair.3291"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.3291"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.3289"* %0 to %"class.blink::HeapHashTableBacking.5311"**
  store %"class.blink::HeapHashTableBacking.5311"* %44, %"class.blink::HeapHashTableBacking.5311"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5311", %"class.blink::HeapHashTableBacking.5311"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.3291"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3289"* %0, %"struct.WTF::KeyValuePair.3291"* %42, i32 %1, %"struct.WTF::KeyValuePair.3291"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.3291"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.3291"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.3291"* %64, %"struct.WTF::KeyValuePair.3291"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.3291"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.3291"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.3291"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.3916"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.3916"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.3291"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.3291"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3289"*, %"struct.WTF::KeyValuePair.3291"*, i32, %"struct.WTF::KeyValuePair.3291"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3289", align 8
  %6 = bitcast %"class.WTF::HashTable.3289"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3289"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3291"* %1, %"struct.WTF::KeyValuePair.3291"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.3291"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.3291"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.3289"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.3291"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.3289"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.3289"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.3289"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3291"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.3291"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.3291"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.3291"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.3291"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3289"* nonnull %5, %"class.blink::Member.389"* dereferenceable(8) %67) #16
  %69 = extractvalue { %"struct.WTF::KeyValuePair.3291"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.3291"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.3916"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.3916"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.3291"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.3291"* %69, %"struct.WTF::KeyValuePair.3291"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.3291"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.3291"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5311"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS1_12KeyValuePairIS5_NS3_INS_19InspectorStyleSheetEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5311"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5311"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS1_12KeyValuePairIS5_NS3_INS_19InspectorStyleSheetEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSE_IS8_EEEESF_NS_13HeapAllocatorEEEE14AllocateObjectISK_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([518 x i8], [518 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS6_NS4_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_13CSSStyleSheetEEENS_12KeyValuePairIS6_NS4_INS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberINS3_13CSSStyleSheetEEENS_12KeyValuePairIS6_NS4_INS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSF_IS9_EEEESG_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.3291"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %73, %20
  ret void

33:                                               ; preds = %73, %30
  %34 = phi i64 [ 0, %30 ], [ %74, %73 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.3291"* %35 to i64*
  br i1 %28, label %37, label %53

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %73
    i64 0, label %73
  ]

39:                                               ; preds = %37
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %3, i64 %34, i32 1
  %41 = bitcast %"class.blink::Member.3916"* %40 to i64*
  %42 = inttoptr i64 %38 to i8*
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %0, i8* nonnull %42, i8* nonnull %42, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  %46 = load atomic i64, i64* %41 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %73, label %48

48:                                               ; preds = %39
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %73

53:                                               ; preds = %33
  %54 = load i64, i64* %36, align 8
  switch i64 %54, label %55 [
    i64 -1, label %73
    i64 0, label %73
  ]

55:                                               ; preds = %53
  %56 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %3, i64 %34, i32 1
  %57 = load atomic i64, i64* %36 monotonic, align 8
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %64, label %59

59:                                               ; preds = %55
  %60 = inttoptr i64 %57 to i8*
  %61 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %62 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %61, i64 5
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %62, align 8
  tail call void %63(%"class.blink::Visitor"* %0, i8* nonnull %60, i8* nonnull %60, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %64

64:                                               ; preds = %59, %55
  %65 = bitcast %"class.blink::Member.3916"* %56 to i64*
  %66 = load atomic i64, i64* %65 monotonic, align 8
  %67 = icmp eq i64 %66, 0
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = inttoptr i64 %66 to i8*
  %70 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %71 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %70, i64 5
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %71, align 8
  tail call void %72(%"class.blink::Visitor"* %0, i8* nonnull %69, i8* nonnull %69, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %73

73:                                               ; preds = %53, %53, %37, %37, %68, %64, %39, %48
  %74 = add nuw nsw i64 %34, 1
  %75 = icmp eq i64 %74, %23
  br i1 %75, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3291"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.3289"*, %"class.blink::Member.389"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.389"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.3291"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %34, align 8
  %36 = icmp eq %"class.blink::CSSStyleSheet"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::CSSStyleSheet"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.3291"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.3291"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.3291"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.3291"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.3291"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::CSSStyleSheet"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %67, align 8
  %69 = icmp eq %"class.blink::CSSStyleSheet"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::CSSStyleSheet"* %63, inttoptr (i64 -1 to %"class.blink::CSSStyleSheet"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.3291"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %79, align 8
  %81 = icmp eq %"class.blink::CSSStyleSheet"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.3291"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.3291"*, i8 } undef, %"struct.WTF::KeyValuePair.3291"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.3291"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.3291"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberINS_13CSSStyleSheetEEENS4_INS_19InspectorStyleSheetEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSB_IS8_EEEEEEvPT_(%"struct.WTF::KeyValuePair.3291"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %48, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %48, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair.3291"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %35, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to i8*
  %31 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %32 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %33 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %32, i64 5
  %34 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, align 8
  tail call void %34(%"class.blink::Visitor"* %24, i8* nonnull %30, i8* %30, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %35

35:                                               ; preds = %18, %29
  %36 = bitcast %"class.blink::Member.3916"* %25 to i64*
  %37 = load atomic i64, i64* %36 monotonic, align 8
  %38 = icmp eq i64 %37, 0
  br i1 %38, label %45, label %39

39:                                               ; preds = %35
  %40 = inttoptr i64 %37 to i8*
  %41 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %41, align 8
  %43 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %42, i64 5
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, align 8
  tail call void %44(%"class.blink::Visitor"* %24, i8* nonnull %40, i8* %40, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19InspectorStyleSheetEE5TraceEPNS_7VisitorEPKv) #16
  br label %45

45:                                               ; preds = %35, %39
  %46 = load i64, i64* %19, align 8
  %47 = add i64 %46, -1
  store i64 %47, i64* %19, align 8
  br label %48

48:                                               ; preds = %1, %11, %45
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.3275"*, %"struct.WTF::KeyValuePair.3277"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.3277"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.3916"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #16
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !3

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #16
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking.5301"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #16
  %65 = bitcast %"class.blink::HeapHashTableBacking.5301"* %64 to %"struct.WTF::KeyValuePair.3277"*
  %66 = tail call %"struct.WTF::KeyValuePair.3277"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3275"* %0, %"struct.WTF::KeyValuePair.3277"* %65, i32 %62, %"struct.WTF::KeyValuePair.3277"* null) #16
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable.3289"*, %"struct.WTF::KeyValuePair.3291"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair.3291"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.3916"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #16
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #16
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.5311"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_13CSSStyleSheetEEENS2_12KeyValuePairIS6_NS4_INS_19InspectorStyleSheetEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #16
  %48 = bitcast %"class.blink::HeapHashTableBacking.5311"* %47 to %"struct.WTF::KeyValuePair.3291"*
  %49 = tail call %"struct.WTF::KeyValuePair.3291"* @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3289"* %0, %"struct.WTF::KeyValuePair.3291"* %48, i32 %45, %"struct.WTF::KeyValuePair.3291"* null) #16
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"* } @_ZN3WTF9HashTableIN5blink6MemberINS1_13CSSStyleSheetEEENS_12KeyValuePairIS4_NS2_INS1_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE4findEPS3_(%"class.WTF::HashTable.3289"*, %"class.blink::CSSStyleSheet"*) local_unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::CSSStyleSheet"* %1 to i64
  %4 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3291"* %5, null
  %7 = getelementptr inbounds %"class.WTF::HashTable.3289", %"class.WTF::HashTable.3289"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  br i1 %6, label %69, label %9

9:                                                ; preds = %2
  %10 = add i32 %8, -1
  %11 = zext i32 %10 to i64
  %12 = shl i64 %3, 32
  %13 = xor i64 %12, -1
  %14 = add i64 %13, %3
  %15 = lshr i64 %14, 22
  %16 = xor i64 %15, %14
  %17 = shl i64 %16, 13
  %18 = xor i64 %17, -1
  %19 = add i64 %16, %18
  %20 = lshr i64 %19, 8
  %21 = xor i64 %20, %19
  %22 = mul i64 %21, 9
  %23 = lshr i64 %22, 15
  %24 = xor i64 %23, %22
  %25 = shl i64 %24, 27
  %26 = xor i64 %25, -1
  %27 = add i64 %24, %26
  %28 = lshr i64 %27, 31
  %29 = xor i64 %28, %27
  %30 = trunc i64 %29 to i32
  %31 = and i32 %10, %30
  %32 = zext i32 %31 to i64
  %33 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %5, i64 %32
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %33, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %34, align 8
  %36 = icmp eq %"class.blink::CSSStyleSheet"* %35, %1
  br i1 %36, label %66, label %37

37:                                               ; preds = %9
  %38 = xor i32 %30, -1
  %39 = lshr i32 %30, 23
  %40 = add i32 %39, %38
  %41 = shl i32 %40, 12
  %42 = xor i32 %41, %40
  %43 = lshr i32 %42, 7
  %44 = xor i32 %43, %42
  %45 = shl i32 %44, 2
  %46 = xor i32 %45, %44
  %47 = lshr i32 %46, 20
  %48 = xor i32 %47, %46
  %49 = or i32 %48, 1
  %50 = zext i32 %49 to i64
  br label %51

51:                                               ; preds = %57, %37
  %52 = phi i64 [ %32, %37 ], [ %61, %57 ]
  %53 = phi i64 [ 0, %37 ], [ %59, %57 ]
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %5, i64 %52, i32 0, i32 0, i32 0
  %55 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %54, align 8
  %56 = icmp eq %"class.blink::CSSStyleSheet"* %55, null
  br i1 %56, label %69, label %57

57:                                               ; preds = %51
  %58 = icmp eq i64 %53, 0
  %59 = select i1 %58, i64 %50, i64 %53
  %60 = add i64 %59, %52
  %61 = and i64 %60, %11
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %5, i64 %61
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %62, i64 0, i32 0, i32 0, i32 0
  %64 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %63, align 8
  %65 = icmp eq %"class.blink::CSSStyleSheet"* %64, %1
  br i1 %65, label %66, label %51

66:                                               ; preds = %57, %9
  %67 = phi %"struct.WTF::KeyValuePair.3291"* [ %33, %9 ], [ %62, %57 ]
  %68 = icmp eq %"struct.WTF::KeyValuePair.3291"* %67, null
  br i1 %68, label %69, label %72

69:                                               ; preds = %51, %66, %2
  %70 = zext i32 %8 to i64
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %5, i64 %70
  br label %75

72:                                               ; preds = %66
  %73 = zext i32 %8 to i64
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3291", %"struct.WTF::KeyValuePair.3291"* %5, i64 %73
  br label %75

75:                                               ; preds = %69, %72
  %76 = phi %"struct.WTF::KeyValuePair.3291"* [ %67, %72 ], [ %71, %69 ]
  %77 = phi %"struct.WTF::KeyValuePair.3291"* [ %74, %72 ], [ %71, %69 ]
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"* } undef, %"struct.WTF::KeyValuePair.3291"* %76, 0
  %79 = insertvalue { %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"* } %78, %"struct.WTF::KeyValuePair.3291"* %77, 1
  ret { %"struct.WTF::KeyValuePair.3291"*, %"struct.WTF::KeyValuePair.3291"* } %79
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_19InspectorStyleSheetEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.3275"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3277"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.3277"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.3277"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.3277"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.3275", %"class.WTF::HashTable.3275"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3277", %"struct.WTF::KeyValuePair.3277"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.3277"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.3277"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } undef, %"struct.WTF::KeyValuePair.3277"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } %77, %"struct.WTF::KeyValuePair.3277"* %76, 1
  ret { %"struct.WTF::KeyValuePair.3277"*, %"struct.WTF::KeyValuePair.3277"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE4findERKS1_(%"class.WTF::HashTable.3282"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3284"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.3284"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.3284"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.3284"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.3284"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.3284"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } undef, %"struct.WTF::KeyValuePair.3284"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } %77, %"struct.WTF::KeyValuePair.3284"* %76, 1
  ret { %"struct.WTF::KeyValuePair.3284"*, %"struct.WTF::KeyValuePair.3284"* } %78
}

declare i8* @_ZN3WTF10Partitions10FastMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF10Partitions8FastFreeEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4636"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISM_SH_SN_EERPS3_SD_EENS_18HashTableAddResultISO_SE_EEOT0_OT1_(%"class.WTF::HashTable.4634"*, %"class.blink::CSSStyleRule"** dereferenceable(8), %"class.std::__1::unique_ptr.3920"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.4636"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.4634"* %0, %"struct.WTF::KeyValuePair.4636"* null)
  %9 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.4636"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::CSSStyleRule"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %40, align 8
  %42 = icmp eq %"class.blink::CSSStyleRule"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::CSSStyleRule"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::CSSStyleRule"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.4636"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.4636"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::CSSStyleRule"* %59, %43
  br i1 %64, label %167, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::CSSStyleRule"* %59, inttoptr (i64 -1 to %"class.blink::CSSStyleRule"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.4636"* %60, %"struct.WTF::KeyValuePair.4636"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %73, align 8
  %75 = icmp eq %"class.blink::CSSStyleRule"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.4636"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.4636"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::CSSStyleRule"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.4636"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::CSSStyleRule"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.4636"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = bitcast %"class.blink::CSSStyleRule"* %88 to i8*
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #16
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %89, i64 0, i32 1
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.3920", %"class.std::__1::unique_ptr.3920"* %2, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.3920"* %2 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %99, align 8
  %102 = getelementptr inbounds %"class.std::__1::unique_ptr.3920", %"class.std::__1::unique_ptr.3920"* %98, i64 0, i32 0, i32 0, i32 0
  %103 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %102, align 8
  %104 = bitcast %"class.std::__1::unique_ptr.3920"* %98 to i64*
  store i64 %101, i64* %104, align 8
  %105 = icmp eq %"class.WTF::Vector.3923"* %103, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %97
  %107 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %103, i64 0, i32 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = icmp eq i32* %108, null
  %110 = bitcast i32* %108 to i8*
  br i1 %109, label %117, label %111, !prof !2

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %103, i64 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115, !prof !3

115:                                              ; preds = %111
  store i32 0, i32* %112, align 4
  br label %116

116:                                              ; preds = %115, %111
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %110) #16
  store i32* null, i32** %107, align 8
  br label %117

117:                                              ; preds = %116, %106
  %118 = bitcast %"class.WTF::Vector.3923"* %103 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %118) #16
  br label %119

119:                                              ; preds = %97, %117
  %120 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %155, label %122

122:                                              ; preds = %119
  %123 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %124 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %123, i64 0, i32 1
  %125 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %124) #16
  %126 = icmp eq i8* %125, null
  br i1 %126, label %127, label %129, !prof !3

127:                                              ; preds = %122
  %128 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %124, i8* %128) #16
  br label %129

129:                                              ; preds = %127, %122
  %130 = phi i8* [ %128, %127 ], [ %125, %122 ]
  %131 = bitcast i8* %130 to %"class.blink::ThreadState"**
  %132 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %131, align 8
  %133 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %132, i64 0, i32 9
  %134 = load i8, i8* %133, align 1, !range !4
  %135 = icmp eq i8 %134, 0
  br i1 %135, label %155, label %136

136:                                              ; preds = %129
  %137 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %132, i64 0, i32 13
  %138 = load i64, i64* %137, align 8
  %139 = add i64 %138, 1
  store i64 %139, i64* %137, align 8
  %140 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %132, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %141 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %140, align 8
  %142 = load atomic i64, i64* %91 monotonic, align 8
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %152, label %144

144:                                              ; preds = %136
  %145 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %141, i64 0, i32 0, i32 0
  %146 = inttoptr i64 %142 to i8*
  %147 = bitcast %"class.blink::MarkingVisitor"* %141 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %148 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %147, align 8
  %149 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %148, i64 5
  %150 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %149, align 8
  tail call void %150(%"class.blink::Visitor"* %145, i8* nonnull %146, i8* %146, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  %151 = load i64, i64* %137, align 8
  br label %152

152:                                              ; preds = %144, %136
  %153 = phi i64 [ %139, %136 ], [ %151, %144 ]
  %154 = add i64 %153, -1
  store i64 %154, i64* %137, align 8
  br label %155

155:                                              ; preds = %119, %129, %152
  %156 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 2
  %157 = load i32, i32* %156, align 4
  %158 = add i32 %157, 1
  store i32 %158, i32* %156, align 4
  %159 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 3
  %160 = load i32, i32* %159, align 8
  %161 = add i32 %160, %158
  %162 = shl i32 %161, 1
  %163 = load i32, i32* %12, align 8
  %164 = icmp ult i32 %162, %163
  br i1 %164, label %167, label %165

165:                                              ; preds = %155
  %166 = tail call %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.4634"* %0, %"struct.WTF::KeyValuePair.4636"* %89)
  br label %167

167:                                              ; preds = %58, %155, %165
  %168 = phi i8 [ 1, %155 ], [ 1, %165 ], [ 0, %58 ]
  %169 = phi %"struct.WTF::KeyValuePair.4636"* [ %89, %155 ], [ %166, %165 ], [ %60, %58 ]
  %170 = insertvalue { %"struct.WTF::KeyValuePair.4636"*, i8 } undef, %"struct.WTF::KeyValuePair.4636"* %169, 0
  %171 = insertvalue { %"struct.WTF::KeyValuePair.4636"*, i8 } %170, i8 %168, 1
  ret { %"struct.WTF::KeyValuePair.4636"*, i8 } %171
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE6ExpandEPSE_(%"class.WTF::HashTable.4634"*, %"struct.WTF::KeyValuePair.4636"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE12ExpandBufferEjPSE_Rb(%"class.WTF::HashTable.4634"* %0, i32 %35, %"struct.WTF::KeyValuePair.4636"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5320"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5320"* %42 to %"struct.WTF::KeyValuePair.4636"*
  %44 = call %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable.4634"* %0, %"struct.WTF::KeyValuePair.4636"* %43, i32 %40, %"struct.WTF::KeyValuePair.4636"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.4636"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.4636"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE12ExpandBufferEjPSE_Rb(%"class.WTF::HashTable.4634"*, i32, %"struct.WTF::KeyValuePair.4636"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.4636"* %32, null
  br i1 %33, label %116, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.4636"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %116

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5320"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5320"* %44 to %"struct.WTF::KeyValuePair.4636"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %113, %39
  %48 = phi %"struct.WTF::KeyValuePair.4636"* [ null, %39 ], [ %65, %113 ]
  %49 = bitcast %"class.WTF::HashTable.4634"* %0 to %"class.blink::HeapHashTableBacking.5320"**
  store %"class.blink::HeapHashTableBacking.5320"* %44, %"class.blink::HeapHashTableBacking.5320"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5320", %"class.blink::HeapHashTableBacking.5320"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.4636"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable.4634"* %0, %"struct.WTF::KeyValuePair.4636"* %42, i32 %1, %"struct.WTF::KeyValuePair.4636"* %48)
  br label %116

58:                                               ; preds = %39, %113
  %59 = phi i64 [ %114, %113 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.4636"* [ %65, %113 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.4636"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.4636"* %64, %"struct.WTF::KeyValuePair.4636"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.4636"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.4636"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %113

70:                                               ; preds = %58
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %45, i64 %59, i32 1, i32 0, i32 0, i32 0
  %72 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %71, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %71, align 8
  %73 = icmp eq %"class.WTF::Vector.3923"* %72, null
  br i1 %73, label %87, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %72, i64 0, i32 0, i32 0, i32 0
  %76 = load i32*, i32** %75, align 8
  %77 = icmp eq i32* %76, null
  %78 = bitcast i32* %76 to i8*
  br i1 %77, label %85, label %79, !prof !2

79:                                               ; preds = %74
  %80 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %72, i64 0, i32 0, i32 0, i32 2
  %81 = load i32, i32* %80, align 4
  %82 = icmp eq i32 %81, 0
  br i1 %82, label %84, label %83, !prof !3

83:                                               ; preds = %79
  store i32 0, i32* %80, align 4
  br label %84

84:                                               ; preds = %83, %79
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %78) #16
  store i32* null, i32** %75, align 8
  br label %85

85:                                               ; preds = %84, %74
  %86 = bitcast %"class.WTF::Vector.3923"* %72 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %86) #16
  br label %87

87:                                               ; preds = %70, %85
  %88 = load i64, i64* %66, align 8
  %89 = bitcast %"struct.WTF::KeyValuePair.4636"* %64 to i64*
  store i64 %88, i64* %89, align 8
  %90 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %45, i64 %59, i32 1
  %91 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %61, i64 %59, i32 1
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.3920", %"class.std::__1::unique_ptr.3920"* %91, i64 0, i32 0, i32 0, i32 0
  %93 = bitcast %"class.std::__1::unique_ptr.3920"* %91 to i64*
  %94 = load i64, i64* %93, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %92, align 8
  %95 = bitcast %"class.std::__1::unique_ptr.3920"* %90 to i64*
  store i64 %94, i64* %95, align 8
  %96 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %31, align 8
  %97 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %96, i64 %59, i32 1, i32 0, i32 0, i32 0
  %98 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %97, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %97, align 8
  %99 = icmp eq %"class.WTF::Vector.3923"* %98, null
  br i1 %99, label %113, label %100

100:                                              ; preds = %87
  %101 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %98, i64 0, i32 0, i32 0, i32 0
  %102 = load i32*, i32** %101, align 8
  %103 = icmp eq i32* %102, null
  %104 = bitcast i32* %102 to i8*
  br i1 %103, label %111, label %105, !prof !2

105:                                              ; preds = %100
  %106 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %98, i64 0, i32 0, i32 0, i32 2
  %107 = load i32, i32* %106, align 4
  %108 = icmp eq i32 %107, 0
  br i1 %108, label %110, label %109, !prof !3

109:                                              ; preds = %105
  store i32 0, i32* %106, align 4
  br label %110

110:                                              ; preds = %109, %105
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %104) #16
  store i32* null, i32** %101, align 8
  br label %111

111:                                              ; preds = %110, %100
  %112 = bitcast %"class.WTF::Vector.3923"* %98 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %112) #16
  br label %113

113:                                              ; preds = %111, %87, %68
  %114 = add nuw nsw i64 %59, 1
  %115 = icmp eq i64 %114, %43
  br i1 %115, label %47, label %58

116:                                              ; preds = %34, %30, %55
  %117 = phi %"struct.WTF::KeyValuePair.4636"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.4636"* %117
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4636"* @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE8RehashToEPSE_jSP_(%"class.WTF::HashTable.4634"*, %"struct.WTF::KeyValuePair.4636"*, i32, %"struct.WTF::KeyValuePair.4636"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.4634", align 8
  %6 = bitcast %"class.WTF::HashTable.4634"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.4634"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.4636"* %1, %"struct.WTF::KeyValuePair.4636"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.4636"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.4636"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %19, align 8
  br label %90

21:                                               ; preds = %133
  %22 = bitcast %"class.WTF::HashTable.4634"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %134, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.4636"* [ null, %15 ], [ %136, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.4634"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.4634"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.4634"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = inttoptr i64 %43 to %"struct.WTF::KeyValuePair.4636"*
  %51 = icmp eq i64 %43, 0
  br i1 %51, label %86, label %52

52:                                               ; preds = %49
  %53 = icmp eq i32 %41, 0
  br i1 %53, label %84, label %54

54:                                               ; preds = %52
  %55 = zext i32 %41 to i64
  br label %56

56:                                               ; preds = %81, %54
  %57 = phi i64 [ 0, %54 ], [ %82, %81 ]
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %50, i64 %57
  %59 = bitcast %"struct.WTF::KeyValuePair.4636"* %58 to i64*
  %60 = load i64, i64* %59, align 8
  switch i64 %60, label %61 [
    i64 -1, label %81
    i64 0, label %81
  ]

61:                                               ; preds = %56
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %50, i64 %57, i32 1, i32 0, i32 0, i32 0
  %63 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %62, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %62, align 8
  %64 = icmp eq %"class.WTF::Vector.3923"* %63, null
  br i1 %64, label %78, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %63, i64 0, i32 0, i32 0, i32 0
  %67 = load i32*, i32** %66, align 8
  %68 = icmp eq i32* %67, null
  %69 = bitcast i32* %67 to i8*
  br i1 %68, label %76, label %70, !prof !2

70:                                               ; preds = %65
  %71 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %63, i64 0, i32 0, i32 0, i32 2
  %72 = load i32, i32* %71, align 4
  %73 = icmp eq i32 %72, 0
  br i1 %73, label %75, label %74, !prof !3

74:                                               ; preds = %70
  store i32 0, i32* %71, align 4
  br label %75

75:                                               ; preds = %74, %70
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %69) #16
  store i32* null, i32** %66, align 8
  br label %76

76:                                               ; preds = %75, %65
  %77 = bitcast %"class.WTF::Vector.3923"* %63 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %77) #16
  br label %78

78:                                               ; preds = %76, %61
  store atomic i64 -1, i64* %59 monotonic, align 8
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %50, i64 %57, i32 1
  %80 = bitcast %"class.std::__1::unique_ptr.3920"* %79 to i64*
  store i64 0, i64* %80, align 1
  br label %81

81:                                               ; preds = %78, %56, %56
  %82 = add nuw nsw i64 %57, 1
  %83 = icmp eq i64 %82, %55
  br i1 %83, label %84, label %56

84:                                               ; preds = %81, %52
  %85 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* %85) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %86

86:                                               ; preds = %49, %84
  %87 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 3
  %88 = load i32, i32* %87, align 8
  %89 = and i32 %88, -2147483648
  store i32 %89, i32* %87, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.4636"* %29

90:                                               ; preds = %18, %133
  %91 = phi i32 [ %13, %18 ], [ %134, %133 ]
  %92 = phi %"struct.WTF::KeyValuePair.4636"* [ %20, %18 ], [ %135, %133 ]
  %93 = phi %"struct.WTF::KeyValuePair.4636"* [ null, %18 ], [ %136, %133 ]
  %94 = phi i32 [ 0, %18 ], [ %137, %133 ]
  %95 = zext i32 %94 to i64
  %96 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %92, i64 %95
  %97 = bitcast %"struct.WTF::KeyValuePair.4636"* %96 to i64*
  %98 = load i64, i64* %97, align 8
  switch i64 %98, label %99 [
    i64 -1, label %133
    i64 0, label %133
  ]

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %96, i64 0, i32 0
  %101 = call { %"struct.WTF::KeyValuePair.4636"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.4634"* nonnull %5, %"class.blink::Member.4589"* dereferenceable(8) %100) #16
  %102 = extractvalue { %"struct.WTF::KeyValuePair.4636"*, i8 } %101, 0
  %103 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %102, i64 0, i32 1, i32 0, i32 0, i32 0
  %104 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %103, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %103, align 8
  %105 = icmp eq %"class.WTF::Vector.3923"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %99
  %107 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %104, i64 0, i32 0, i32 0, i32 0
  %108 = load i32*, i32** %107, align 8
  %109 = icmp eq i32* %108, null
  %110 = bitcast i32* %108 to i8*
  br i1 %109, label %117, label %111, !prof !2

111:                                              ; preds = %106
  %112 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %104, i64 0, i32 0, i32 0, i32 2
  %113 = load i32, i32* %112, align 4
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %116, label %115, !prof !3

115:                                              ; preds = %111
  store i32 0, i32* %112, align 4
  br label %116

116:                                              ; preds = %115, %111
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %110) #16
  store i32* null, i32** %107, align 8
  br label %117

117:                                              ; preds = %116, %106
  %118 = bitcast %"class.WTF::Vector.3923"* %104 to i8*
  call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %118) #16
  br label %119

119:                                              ; preds = %99, %117
  %120 = load i64, i64* %97, align 8
  %121 = bitcast %"struct.WTF::KeyValuePair.4636"* %102 to i64*
  store i64 %120, i64* %121, align 8
  %122 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %102, i64 0, i32 1
  %123 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %92, i64 %95, i32 1
  %124 = getelementptr inbounds %"class.std::__1::unique_ptr.3920", %"class.std::__1::unique_ptr.3920"* %123, i64 0, i32 0, i32 0, i32 0
  %125 = bitcast %"class.std::__1::unique_ptr.3920"* %123 to i64*
  %126 = load i64, i64* %125, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %124, align 8
  %127 = bitcast %"class.std::__1::unique_ptr.3920"* %122 to i64*
  store i64 %126, i64* %127, align 8
  %128 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %19, align 8
  %129 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %128, i64 %95
  %130 = icmp eq %"struct.WTF::KeyValuePair.4636"* %129, %3
  %131 = select i1 %130, %"struct.WTF::KeyValuePair.4636"* %102, %"struct.WTF::KeyValuePair.4636"* %93
  %132 = load i32, i32* %12, align 8
  br label %133

133:                                              ; preds = %90, %90, %119
  %134 = phi i32 [ %91, %90 ], [ %132, %119 ], [ %91, %90 ]
  %135 = phi %"struct.WTF::KeyValuePair.4636"* [ %92, %90 ], [ %128, %119 ], [ %92, %90 ]
  %136 = phi %"struct.WTF::KeyValuePair.4636"* [ %93, %90 ], [ %131, %119 ], [ %93, %90 ]
  %137 = add i32 %94, 1
  %138 = icmp eq i32 %137, %134
  br i1 %138, label %21, label %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5320"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS1_12KeyValuePairIS5_NSt3__110unique_ptrINS1_6VectorIjLj0ENS1_18PartitionAllocatorEEENS7_14default_deleteISB_EEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSK_ISE_EEEESL_NS_13HeapAllocatorEEEE14AllocateObjectISQ_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5320"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5320"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS1_12KeyValuePairIS5_NSt3__110unique_ptrINS1_6VectorIjLj0ENS1_18PartitionAllocatorEEENS7_14default_deleteISB_EEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS4_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS5_EENSK_ISE_EEEESL_NS_13HeapAllocatorEEEE14AllocateObjectISQ_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([747 x i8], [747 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS6_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS5_EENS_18HashMapValueTraitsINS_10HashTraitsIS6_EENSL_ISF_EEEESM_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.4636"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %56, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %32

32:                                               ; preds = %53, %30
  %33 = phi i64 [ 0, %30 ], [ %54, %53 ]
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %3, i64 %33
  %35 = bitcast %"struct.WTF::KeyValuePair.4636"* %34 to i64*
  br i1 %28, label %36, label %43

36:                                               ; preds = %32
  %37 = load atomic i64, i64* %35 monotonic, align 8
  switch i64 %37, label %38 [
    i64 -1, label %53
    i64 0, label %53
  ]

38:                                               ; preds = %36
  %39 = inttoptr i64 %37 to i8*
  %40 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %41 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %40, i64 5
  %42 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %41, align 8
  tail call void %42(%"class.blink::Visitor"* %0, i8* nonnull %39, i8* nonnull %39, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

43:                                               ; preds = %32
  %44 = load i64, i64* %35, align 8
  switch i64 %44, label %45 [
    i64 -1, label %53
    i64 0, label %53
  ]

45:                                               ; preds = %43
  %46 = load atomic i64, i64* %35 monotonic, align 8
  %47 = icmp eq i64 %46, 0
  br i1 %47, label %53, label %48

48:                                               ; preds = %45
  %49 = inttoptr i64 %46 to i8*
  %50 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %51 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %50, i64 5
  %52 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, align 8
  tail call void %52(%"class.blink::Visitor"* %0, i8* nonnull %49, i8* nonnull %49, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %53

53:                                               ; preds = %48, %45, %43, %43, %38, %36, %36
  %54 = add nuw nsw i64 %33, 1
  %55 = icmp eq i64 %54, %23
  br i1 %55, label %56, label %32

56:                                               ; preds = %53, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS3_12KeyValuePairIS7_NSt3__110unique_ptrINS3_6VectorIjLj0ENS3_18PartitionAllocatorEEENS9_14default_deleteISD_EEEEEENS3_24KeyValuePairKeyExtractorENS3_10MemberHashIS6_EENS3_18HashMapValueTraitsINS3_10HashTraitsIS7_EENSM_ISG_EEEESN_NS_13HeapAllocatorEEEEEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 -2
  %3 = bitcast i8* %2 to i16*
  %4 = load i16, i16* %3, align 2
  %5 = lshr i16 %4, 2
  %6 = icmp eq i16 %5, 0
  br i1 %6, label %7, label %15, !prof !3

7:                                                ; preds = %1
  %8 = getelementptr inbounds i8, i8* %0, i64 -8
  %9 = ptrtoint i8* %8 to i64
  %10 = and i64 %9, -131072
  %11 = inttoptr i64 %10 to i8*
  %12 = getelementptr inbounds i8, i8* %11, i64 4144
  %13 = bitcast i8* %12 to i64*
  %14 = load i64, i64* %13, align 16
  br label %18

15:                                               ; preds = %1
  %16 = zext i16 %5 to i64
  %17 = shl nuw nsw i64 %16, 3
  br label %18

18:                                               ; preds = %15, %7
  %19 = phi i64 [ %14, %7 ], [ %17, %15 ]
  %20 = add i64 %19, -8
  %21 = lshr i64 %20, 4
  %22 = bitcast i8* %0 to %"struct.WTF::KeyValuePair.4636"*
  %23 = icmp eq i64 %21, 0
  br i1 %23, label %51, label %24

24:                                               ; preds = %18, %47
  %25 = phi i64 [ %49, %47 ], [ 0, %18 ]
  %26 = phi i32 [ %48, %47 ], [ 0, %18 ]
  %27 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %22, i64 %25
  %28 = bitcast %"struct.WTF::KeyValuePair.4636"* %27 to i64*
  %29 = load i64, i64* %28, align 8
  switch i64 %29, label %30 [
    i64 -1, label %47
    i64 0, label %47
  ]

30:                                               ; preds = %24
  %31 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %22, i64 %25, i32 1, i32 0, i32 0, i32 0
  %32 = load %"class.WTF::Vector.3923"*, %"class.WTF::Vector.3923"** %31, align 8
  store %"class.WTF::Vector.3923"* null, %"class.WTF::Vector.3923"** %31, align 8
  %33 = icmp eq %"class.WTF::Vector.3923"* %32, null
  br i1 %33, label %47, label %34

34:                                               ; preds = %30
  %35 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %32, i64 0, i32 0, i32 0, i32 0
  %36 = load i32*, i32** %35, align 8
  %37 = icmp eq i32* %36, null
  %38 = bitcast i32* %36 to i8*
  br i1 %37, label %45, label %39, !prof !2

39:                                               ; preds = %34
  %40 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %32, i64 0, i32 0, i32 0, i32 2
  %41 = load i32, i32* %40, align 4
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %44, label %43, !prof !3

43:                                               ; preds = %39
  store i32 0, i32* %40, align 4
  br label %44

44:                                               ; preds = %43, %39
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %38) #16
  store i32* null, i32** %35, align 8
  br label %45

45:                                               ; preds = %44, %34
  %46 = bitcast %"class.WTF::Vector.3923"* %32 to i8*
  tail call void @_ZN3WTF10Partitions8FastFreeEPv(i8* nonnull %46) #16
  br label %47

47:                                               ; preds = %45, %30, %24, %24
  %48 = add i32 %26, 1
  %49 = zext i32 %48 to i64
  %50 = icmp ugt i64 %21, %49
  br i1 %50, label %24, label %51

51:                                               ; preds = %47, %18
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_12CSSStyleRuleEEENS2_12KeyValuePairIS6_NSt3__110unique_ptrINS2_6VectorIjLj0ENS2_18PartitionAllocatorEEENS8_14default_deleteISC_EEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSL_ISF_EEEESM_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4636"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_12CSSStyleRuleEEENS_12KeyValuePairIS4_NSt3__110unique_ptrINS_6VectorIjLj0ENS_18PartitionAllocatorEEENS6_14default_deleteISA_EEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSJ_ISD_EEEESK_NS1_13HeapAllocatorEE16LookupForWritingERKS4_(%"class.WTF::HashTable.4634"*, %"class.blink::Member.4589"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4636"*, %"struct.WTF::KeyValuePair.4636"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.4634", %"class.WTF::HashTable.4634"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.4589"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.4636"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %34, align 8
  %36 = icmp eq %"class.blink::CSSStyleRule"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::CSSStyleRule"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.4636"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.4636"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.4636"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.4636"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.4636"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::CSSStyleRule"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %67, align 8
  %69 = icmp eq %"class.blink::CSSStyleRule"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::CSSStyleRule"* %63, inttoptr (i64 -1 to %"class.blink::CSSStyleRule"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.4636"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.4636", %"struct.WTF::KeyValuePair.4636"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %79, align 8
  %81 = icmp eq %"class.blink::CSSStyleRule"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.4636"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.4636"*, i8 } undef, %"struct.WTF::KeyValuePair.4636"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.4636"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.4636"*, i8 } %87
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIjLj0ENS_18PartitionAllocatorEE14AppendSlowCaseIRiEEvOT_(%"class.WTF::Vector.3923"*, i32* dereferenceable(4)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  %15 = icmp ult i32 %7, %14
  %16 = getelementptr inbounds %"class.WTF::Vector.3923", %"class.WTF::Vector.3923"* %0, i64 0, i32 0, i32 0, i32 0
  %17 = load i32*, i32** %16, align 8
  br i1 %15, label %18, label %45, !prof !2

18:                                               ; preds = %2
  %19 = icmp eq i32* %17, null
  %20 = zext i32 %14 to i64
  %21 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64 %20) #16
  %22 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %21, i8* getelementptr inbounds ([60 x i8], [60 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIjEEPKcv, i64 0, i64 0)) #16
  %23 = ptrtoint i8* %22 to i64
  br i1 %19, label %24, label %26

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::Vector.3923"* %0 to i64*
  store atomic i64 %23, i64* %25 monotonic, align 8
  br label %41

26:                                               ; preds = %18
  %27 = load i32*, i32** %16, align 8
  %28 = icmp ne i8* %22, null
  %29 = icmp ne i32* %27, null
  %30 = and i1 %28, %29
  %31 = bitcast i32* %27 to i8*
  br i1 %30, label %32, label %38, !prof !2

32:                                               ; preds = %26
  %33 = load i32, i32* %3, align 4
  %34 = zext i32 %33 to i64
  %35 = shl nuw nsw i64 %34, 2
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %22, i8* nonnull align 4 %31, i64 %35, i1 false) #16
  %36 = bitcast %"class.WTF::Vector.3923"* %0 to i8**
  %37 = load i8*, i8** %36, align 8
  br label %38

38:                                               ; preds = %32, %26
  %39 = phi i8* [ %37, %32 ], [ %31, %26 ]
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %39) #16
  %40 = bitcast %"class.WTF::Vector.3923"* %0 to i64*
  store atomic i64 %23, i64* %40 monotonic, align 8
  br label %41

41:                                               ; preds = %38, %24
  %42 = lshr i64 %21, 2
  %43 = trunc i64 %42 to i32
  store i32 %43, i32* %6, align 8
  %44 = bitcast i8* %22 to i32*
  br label %45

45:                                               ; preds = %41, %2
  %46 = phi i32* [ %17, %2 ], [ %44, %41 ]
  %47 = load i32, i32* %3, align 4
  %48 = zext i32 %47 to i64
  %49 = getelementptr inbounds i32, i32* %46, i64 %48
  %50 = load i32, i32* %1, align 4
  store i32 %50, i32* %49, align 4
  %51 = load i32, i32* %3, align 4
  %52 = add i32 %51, 1
  store i32 %52, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeIjEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 536346624
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 536346624) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.60, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.70, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 2
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #16
  ret i64 %21
}

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare void @_ZNSt3__16__sortIRNS_6__lessIjjEEPjEEvT0_S5_T_(i32*, i32*, %"struct.std::__1::__less"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS9RuleMatchENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4251"*, %"class.std::__1::unique_ptr.4253"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4253"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4251"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4251"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4253"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4253"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4253"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4253"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4253"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4253"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4253"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4251", %"class.std::__1::vector.4251"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4253"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4253"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::RuleMatch"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4253"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4253"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4253"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4253"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !91

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4253"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4253"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4253"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4253"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4253"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4253"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4253"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4253"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4253"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4253"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4253"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4253"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4253"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4253"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4253"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4253"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4253"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4253"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4253"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4253"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4253"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4253"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4253"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4253"*, %"class.std::__1::unique_ptr.4253"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4253"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4253"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4253"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4253"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4253"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4253"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4253", %"class.std::__1::unique_ptr.4253"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::RuleMatch"*, %"class.blink::protocol::CSS::RuleMatch"** %142, align 8
  store %"class.blink::protocol::CSS::RuleMatch"* null, %"class.blink::protocol::CSS::RuleMatch"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::RuleMatch"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::RuleMatch"* %143 to void (%"class.blink::protocol::CSS::RuleMatch"*)***
  %147 = load void (%"class.blink::protocol::CSS::RuleMatch"*)**, void (%"class.blink::protocol::CSS::RuleMatch"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::RuleMatch"*)*, void (%"class.blink::protocol::CSS::RuleMatch"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::RuleMatch"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4253"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

declare void @_ZN5blink14InspectorStyleC1EPNS_19CSSStyleDeclarationEPNS_17CSSRuleSourceDataEPNS_23InspectorStyleSheetBaseE(%"class.blink::InspectorStyle"*, %"class.blink::CSSStyleDeclaration"*, %"class.blink::CSSRuleSourceData"*, %"class.blink::InspectorStyleSheetBase"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_14InspectorStyleEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_14InspectorStyleEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([69 x i8], [69 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink14InspectorStyleEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_14InspectorStyleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorStyle"*
  tail call void @_ZNK5blink14InspectorStyle5TraceEPNS_7VisitorE(%"class.blink::InspectorStyle"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_14InspectorStyleEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink14InspectorStyle5TraceEPNS_7VisitorE(%"class.blink::InspectorStyle"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable.3220"*, i32*, i32, i32*) local_unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i32* %1 to i64
  %6 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  %9 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 0
  br i1 %8, label %10, label %13

10:                                               ; preds = %4
  %11 = bitcast %"class.WTF::HashTable.3220"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  br label %20

13:                                               ; preds = %4
  %14 = add i32 %2, -1
  %15 = zext i32 %14 to i64
  %16 = load i32*, i32** %9, align 8
  %17 = ptrtoint i32* %16 to i64
  br label %31

18:                                               ; preds = %112
  %19 = bitcast %"class.WTF::HashTable.3220"* %0 to i64*
  br label %20

20:                                               ; preds = %10, %18
  %21 = phi i64* [ %11, %10 ], [ %19, %18 ]
  %22 = phi i64 [ %12, %10 ], [ %113, %18 ]
  %23 = phi i32* [ null, %10 ], [ %116, %18 ]
  store atomic i64 %5, i64* %21 monotonic, align 8
  store i32 %2, i32* %6, align 8
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %27, label %25

25:                                               ; preds = %20
  %26 = inttoptr i64 %22 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %26) #16
  br label %27

27:                                               ; preds = %20, %25
  %28 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 3
  %29 = load i32, i32* %28, align 8
  %30 = and i32 %29, -2147483648
  store i32 %30, i32* %28, align 8
  ret i32* %23

31:                                               ; preds = %13, %112
  %32 = phi i64 [ %17, %13 ], [ %113, %112 ]
  %33 = phi i32 [ %7, %13 ], [ %114, %112 ]
  %34 = phi i32* [ %16, %13 ], [ %115, %112 ]
  %35 = phi i32* [ null, %13 ], [ %116, %112 ]
  %36 = phi i32 [ 0, %13 ], [ %117, %112 ]
  %37 = zext i32 %36 to i64
  %38 = getelementptr inbounds i32, i32* %34, i64 %37
  %39 = load i32, i32* %38, align 4
  %40 = add i32 %39, 1
  %41 = icmp ult i32 %40, 2
  br i1 %41, label %112, label %42

42:                                               ; preds = %31
  %43 = shl i32 %39, 15
  %44 = xor i32 %43, -1
  %45 = add i32 %39, %44
  %46 = lshr i32 %45, 10
  %47 = xor i32 %46, %45
  %48 = mul i32 %47, 9
  %49 = lshr i32 %48, 6
  %50 = xor i32 %49, %48
  %51 = shl i32 %50, 11
  %52 = xor i32 %51, -1
  %53 = add i32 %50, %52
  %54 = lshr i32 %53, 16
  %55 = xor i32 %54, %53
  %56 = and i32 %55, %14
  %57 = zext i32 %56 to i64
  %58 = getelementptr inbounds i32, i32* %1, i64 %57
  %59 = ptrtoint i32* %58 to i64
  %60 = load i32, i32* %58, align 4
  %61 = icmp eq i32 %60, 0
  br i1 %61, label %79, label %62

62:                                               ; preds = %42
  %63 = xor i32 %55, -1
  %64 = lshr i32 %53, 23
  %65 = add i32 %64, %63
  %66 = shl i32 %65, 12
  %67 = xor i32 %66, %65
  %68 = lshr i32 %67, 7
  %69 = xor i32 %68, %67
  %70 = shl i32 %69, 2
  %71 = xor i32 %70, %69
  %72 = lshr i32 %71, 20
  %73 = xor i32 %72, %71
  %74 = or i32 %73, 1
  %75 = zext i32 %74 to i64
  br label %85

76:                                               ; preds = %92
  %77 = ptrtoint i32* %99 to i64
  %78 = inttoptr i64 %94 to i32*
  br label %79

79:                                               ; preds = %76, %42
  %80 = phi i64 [ %77, %76 ], [ %59, %42 ]
  %81 = phi i32* [ %78, %76 ], [ null, %42 ]
  %82 = icmp eq i32* %81, null
  %83 = ptrtoint i32* %81 to i64
  %84 = select i1 %82, i64 %80, i64 %83
  br label %103

85:                                               ; preds = %92, %62
  %86 = phi i64 [ 0, %62 ], [ %94, %92 ]
  %87 = phi i32 [ %60, %62 ], [ %101, %92 ]
  %88 = phi i64 [ %59, %62 ], [ %100, %92 ]
  %89 = phi i64 [ %57, %62 ], [ %98, %92 ]
  %90 = phi i64 [ 0, %62 ], [ %96, %92 ]
  %91 = icmp eq i32 %87, %39
  br i1 %91, label %103, label %92

92:                                               ; preds = %85
  %93 = icmp eq i32 %87, -1
  %94 = select i1 %93, i64 %88, i64 %86
  %95 = icmp eq i64 %90, 0
  %96 = select i1 %95, i64 %75, i64 %90
  %97 = add i64 %96, %89
  %98 = and i64 %97, %15
  %99 = getelementptr inbounds i32, i32* %1, i64 %98
  %100 = ptrtoint i32* %99 to i64
  %101 = load i32, i32* %99, align 4
  %102 = icmp eq i32 %101, 0
  br i1 %102, label %76, label %85

103:                                              ; preds = %85, %79
  %104 = phi i64 [ %84, %79 ], [ %88, %85 ]
  %105 = inttoptr i64 %104 to i32*
  store i32 %39, i32* %105, align 4
  %106 = load i32*, i32** %9, align 8
  %107 = getelementptr inbounds i32, i32* %106, i64 %37
  %108 = icmp eq i32* %107, %3
  %109 = select i1 %108, i32* %105, i32* %35
  %110 = load i32, i32* %6, align 8
  %111 = ptrtoint i32* %106 to i64
  br label %112

112:                                              ; preds = %31, %103
  %113 = phi i64 [ %32, %31 ], [ %111, %103 ]
  %114 = phi i32 [ %33, %31 ], [ %110, %103 ]
  %115 = phi i32* [ %34, %31 ], [ %106, %103 ]
  %116 = phi i32* [ %35, %31 ], [ %109, %103 ]
  %117 = add i32 %36, 1
  %118 = icmp eq i32 %117, %114
  br i1 %118, label %18, label %31
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE5eraseEPKS7_(%"class.WTF::HashTable.3282"*, %"struct.WTF::KeyValuePair.3284"*) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #16
  br label %19

19:                                               ; preds = %2, %15, %18
  %20 = bitcast %"struct.WTF::KeyValuePair.3284"* %1 to i8**
  store i8* inttoptr (i64 -1 to i8*), i8** %20, align 8
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.3284", %"struct.WTF::KeyValuePair.3284"* %1, i64 0, i32 1
  %22 = bitcast %"class.blink::Member.3963"* %21 to i64*
  store atomic i64 0, i64* %22 monotonic, align 8
  %23 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 3
  %24 = load i32, i32* %23, align 8
  %25 = add i32 %24, 1
  %26 = and i32 %25, 2147483647
  %27 = and i32 %24, -2147483648
  %28 = or i32 %26, %27
  store i32 %28, i32* %23, align 8
  %29 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 2
  %30 = load i32, i32* %29, align 4
  %31 = add i32 %30, -1
  store i32 %31, i32* %29, align 4
  %32 = mul i32 %31, 6
  %33 = getelementptr inbounds %"class.WTF::HashTable.3282", %"class.WTF::HashTable.3282"* %0, i64 0, i32 1
  %34 = load i32, i32* %33, align 8
  %35 = icmp ult i32 %32, %34
  %36 = icmp ugt i32 %34, 8
  %37 = and i1 %35, %36
  br i1 %37, label %38, label %67

38:                                               ; preds = %19
  %39 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %40 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %39, i64 0, i32 1
  %41 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %40) #16
  %42 = icmp eq i8* %41, null
  br i1 %42, label %43, label %45, !prof !3

43:                                               ; preds = %38
  %44 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %40, i8* %44) #16
  br label %45

45:                                               ; preds = %43, %38
  %46 = phi i8* [ %44, %43 ], [ %41, %38 ]
  %47 = bitcast i8* %46 to %"class.blink::ThreadState"**
  %48 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %47, align 8
  %49 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 6
  %50 = load i8, i8* %49, align 8, !range !4
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %56, label %52

52:                                               ; preds = %45
  %53 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 16
  %54 = load i32, i32* %53, align 4
  %55 = icmp eq i32 %54, 1
  br i1 %55, label %67, label %56

56:                                               ; preds = %45, %52
  %57 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %48, i64 0, i32 13
  %58 = load i64, i64* %57, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %60, label %67

60:                                               ; preds = %56
  %61 = load i32, i32* %33, align 8
  %62 = lshr i32 %61, 1
  %63 = zext i32 %62 to i64
  %64 = tail call %"class.blink::HeapHashTableBacking.5278"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS2_6StringENS2_12KeyValuePairIS4_NS_6MemberINS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10StringHashENS2_18HashMapValueTraitsINS2_10HashTraitsIS4_EENSD_IS8_EEEESE_NS_13HeapAllocatorEEEEEE4CallEm(i64 %63) #16
  %65 = bitcast %"class.blink::HeapHashTableBacking.5278"* %64 to %"struct.WTF::KeyValuePair.3284"*
  %66 = tail call %"struct.WTF::KeyValuePair.3284"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_N5blink6MemberINS3_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EENSB_IS6_EEEESC_NS3_13HeapAllocatorEE8RehashToEPS7_jSH_(%"class.WTF::HashTable.3282"* %0, %"struct.WTF::KeyValuePair.3284"* %65, i32 %62, %"struct.WTF::KeyValuePair.3284"* null) #16
  br label %67

67:                                               ; preds = %52, %19, %60, %56
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE5eraseEPKS8_(%"class.WTF::HashTable.3309"*, %"struct.WTF::KeyValuePair.3311"*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast %"struct.WTF::KeyValuePair.3311"* %1 to i64*
  store atomic i64 -1, i64* %3 monotonic, align 8
  %4 = getelementptr inbounds %"struct.WTF::KeyValuePair.3311", %"struct.WTF::KeyValuePair.3311"* %1, i64 0, i32 1
  %5 = bitcast %"class.blink::Member.3963"* %4 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 3
  %7 = load i32, i32* %6, align 8
  %8 = add i32 %7, 1
  %9 = and i32 %8, 2147483647
  %10 = and i32 %7, -2147483648
  %11 = or i32 %9, %10
  store i32 %11, i32* %6, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 2
  %13 = load i32, i32* %12, align 4
  %14 = add i32 %13, -1
  store i32 %14, i32* %12, align 4
  %15 = mul i32 %14, 6
  %16 = getelementptr inbounds %"class.WTF::HashTable.3309", %"class.WTF::HashTable.3309"* %0, i64 0, i32 1
  %17 = load i32, i32* %16, align 8
  %18 = icmp ult i32 %15, %17
  %19 = icmp ugt i32 %17, 8
  %20 = and i1 %18, %19
  br i1 %20, label %21, label %50

21:                                               ; preds = %2
  %22 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %23 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %22, i64 0, i32 1
  %24 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %23) #16
  %25 = icmp eq i8* %24, null
  br i1 %25, label %26, label %28, !prof !3

26:                                               ; preds = %21
  %27 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %23, i8* %27) #16
  br label %28

28:                                               ; preds = %26, %21
  %29 = phi i8* [ %27, %26 ], [ %24, %21 ]
  %30 = bitcast i8* %29 to %"class.blink::ThreadState"**
  %31 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 6
  %33 = load i8, i8* %32, align 8, !range !4
  %34 = icmp eq i8 %33, 0
  br i1 %34, label %39, label %35

35:                                               ; preds = %28
  %36 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 16
  %37 = load i32, i32* %36, align 4
  %38 = icmp eq i32 %37, 1
  br i1 %38, label %50, label %39

39:                                               ; preds = %28, %35
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %31, i64 0, i32 13
  %41 = load i64, i64* %40, align 8
  %42 = icmp eq i64 %41, 0
  br i1 %42, label %43, label %50

43:                                               ; preds = %39
  %44 = load i32, i32* %16, align 8
  %45 = lshr i32 %44, 1
  %46 = zext i32 %45 to i64
  %47 = tail call %"class.blink::HeapHashTableBacking.5288"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberINS_4NodeEEENS2_12KeyValuePairIS6_NS4_INS_33InspectorStyleSheetForInlineStyleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS5_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEEEE4CallEm(i64 %46) #16
  %48 = bitcast %"class.blink::HeapHashTableBacking.5288"* %47 to %"struct.WTF::KeyValuePair.3311"*
  %49 = tail call %"struct.WTF::KeyValuePair.3311"* @_ZN3WTF9HashTableIN5blink6MemberINS1_4NodeEEENS_12KeyValuePairIS4_NS2_INS1_33InspectorStyleSheetForInlineStyleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS3_EENS_18HashMapValueTraitsINS_10HashTraitsIS4_EENSD_IS7_EEEESE_NS1_13HeapAllocatorEE8RehashToEPS8_jSJ_(%"class.WTF::HashTable.3309"* %0, %"struct.WTF::KeyValuePair.3311"* %48, i32 %45, %"struct.WTF::KeyValuePair.3311"* null) #16
  br label %50

50:                                               ; preds = %35, %2, %43, %39
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.blink::Member.326"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6insertINS_22IdentityHashTranslatorIS7_S9_SA_EERKPS3_SF_EENS_18HashTableAddResultISB_S4_EEOT0_OT1_(%"class.WTF::HashTable.3303"*, %"class.blink::Document"** dereferenceable(8), %"class.blink::Document"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 0
  %5 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %4, align 8
  %6 = icmp eq %"class.blink::Member.326"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.3303"* %0, %"class.blink::Member.326"* null)
  %9 = load %"class.blink::Member.326"*, %"class.blink::Member.326"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.blink::Member.326"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::Document"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %11, i64 %38
  %40 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %39, i64 0, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = icmp eq %"class.blink::Document"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::Document"*
  br i1 %42, label %86, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::Document"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"class.blink::Member.326"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"class.blink::Member.326"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::Document"* %59, %43
  br i1 %64, label %115, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::Document"* %59, inttoptr (i64 -1 to %"class.blink::Document"*)
  %67 = select i1 %66, %"class.blink::Member.326"* %60, %"class.blink::Member.326"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %11, i64 %71
  %73 = getelementptr inbounds %"class.blink::Member.326", %"class.blink::Member.326"* %72, i64 0, i32 0, i32 0
  %74 = load %"class.blink::Document"*, %"class.blink::Document"** %73, align 8
  %75 = icmp eq %"class.blink::Document"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"class.blink::Member.326"* %67, null
  br i1 %77, label %86, label %78

78:                                               ; preds = %76
  %79 = bitcast %"class.blink::Member.326"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 8) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  br label %86

86:                                               ; preds = %10, %76, %78
  %87 = phi %"class.blink::Member.326"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %88 = load %"class.blink::Document"*, %"class.blink::Document"** %2, align 8
  %89 = ptrtoint %"class.blink::Document"* %88 to i64
  %90 = bitcast %"class.blink::Member.326"* %87 to i64*
  store atomic i64 %89, i64* %90 monotonic, align 8
  %91 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %96, label %93

93:                                               ; preds = %86
  %94 = bitcast %"class.blink::Document"* %88 to i8*
  %95 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %94) #16
  br label %96

96:                                               ; preds = %86, %93
  %97 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %103, label %99

99:                                               ; preds = %96
  %100 = bitcast %"class.blink::Member.326"* %87 to i8**
  %101 = load i8*, i8** %100, align 8
  %102 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %101) #16
  br label %103

103:                                              ; preds = %96, %99
  %104 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.3303", %"class.WTF::HashTable.3303"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.blink::Member.326"* @_ZN3WTF9HashTableIN5blink6MemberINS1_8DocumentEEES4_NS_17IdentityExtractorENS_10MemberHashIS3_EENS_10HashTraitsIS4_EES9_NS1_13HeapAllocatorEE6ExpandEPS4_(%"class.WTF::HashTable.3303"* %0, %"class.blink::Member.326"* %87)
  br label %115

115:                                              ; preds = %58, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %58 ]
  %117 = phi %"class.blink::Member.326"* [ %87, %103 ], [ %114, %113 ], [ %60, %58 ]
  %118 = insertvalue { %"class.blink::Member.326"*, i8 } undef, %"class.blink::Member.326"* %117, 0
  %119 = insertvalue { %"class.blink::Member.326"*, i8 } %118, i8 %116, 1
  ret { %"class.blink::Member.326"*, i8 } %119
}

; Function Attrs: noinline nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE14AppendSlowCaseIPS3_EEvOT_(%"class.WTF::Vector.4658"*, %"class.blink::CSSStyleDeclaration"** dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 2
  %4 = load i32, i32* %3, align 4
  %5 = add i32 %4, 1
  %6 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = lshr i32 %7, 2
  %9 = add i32 %7, 1
  %10 = add i32 %9, %8
  %11 = icmp ugt i32 %10, 4
  %12 = select i1 %11, i32 %10, i32 4
  %13 = icmp ugt i32 %12, %5
  %14 = select i1 %13, i32 %12, i32 %5
  tail call void @_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.4658"* %0, i32 %14) #16
  %15 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.blink::Member.3969"*, %"class.blink::Member.3969"** %15, align 8
  %17 = load i32, i32* %3, align 4
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %"class.blink::Member.3969", %"class.blink::Member.3969"* %16, i64 %18
  %20 = bitcast %"class.blink::CSSStyleDeclaration"** %1 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.blink::Member.3969"* %19 to i64*
  store atomic i64 %21, i64* %22 monotonic, align 8
  %23 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %24 = icmp eq i32 %23, 0
  br i1 %24, label %28, label %25

25:                                               ; preds = %2
  %26 = inttoptr i64 %21 to i8*
  %27 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %26) #16
  br label %28

28:                                               ; preds = %2, %25
  %29 = load i32, i32* %3, align 4
  %30 = add i32 %29, 1
  store i32 %30, i32* %3, align 4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE15ReserveCapacityEj(%"class.WTF::Vector.4658"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = icmp ult i32 %5, %1
  br i1 %6, label %7, label %59, !prof !2

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.blink::Member.3969"*, %"class.blink::Member.3969"** %8, align 8
  %10 = icmp eq %"class.blink::Member.3969"* %9, null
  %11 = zext i32 %1 to i64
  %12 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19CSSStyleDeclarationEEEEEmm(i64 %11) #16
  br i1 %10, label %13, label %24

13:                                               ; preds = %7
  %14 = lshr i64 %12, 3
  %15 = tail call %"class.blink::HeapVectorBacking.5359"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %14) #16
  %16 = ptrtoint %"class.blink::HeapVectorBacking.5359"* %15 to i64
  %17 = bitcast %"class.WTF::Vector.4658"* %0 to i64*
  store atomic i64 %16, i64* %17 monotonic, align 8
  %18 = trunc i64 %14 to i32
  store i32 %18, i32* %4, align 8
  %19 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %20 = icmp eq i32 %19, 0
  br i1 %20, label %59, label %21

21:                                               ; preds = %13
  %22 = getelementptr inbounds %"class.blink::HeapVectorBacking.5359", %"class.blink::HeapVectorBacking.5359"* %15, i64 0, i32 0
  %23 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %22) #16
  br label %59

24:                                               ; preds = %7
  %25 = load %"class.blink::Member.3969"*, %"class.blink::Member.3969"** %8, align 8
  %26 = icmp eq %"class.blink::Member.3969"* %25, null
  br i1 %26, label %33, label %27

27:                                               ; preds = %24
  %28 = bitcast %"class.blink::Member.3969"* %25 to i8*
  %29 = tail call zeroext i1 @_ZN5blink13HeapAllocator19ExpandVectorBackingEPvm(i8* nonnull %28, i64 %12) #16
  br i1 %29, label %30, label %33

30:                                               ; preds = %27
  %31 = lshr i64 %12, 3
  %32 = trunc i64 %31 to i32
  store i32 %32, i32* %4, align 8
  br label %59

33:                                               ; preds = %24, %27
  %34 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %35 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %34, i64 0, i32 1
  %36 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %35) #16
  %37 = icmp eq i8* %36, null
  br i1 %37, label %38, label %40, !prof !3

38:                                               ; preds = %33
  %39 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %35, i8* %39) #16
  br label %40

40:                                               ; preds = %38, %33
  %41 = phi i8* [ %39, %38 ], [ %36, %33 ]
  %42 = bitcast i8* %41 to %"class.blink::ThreadState"**
  %43 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 6
  %45 = load i8, i8* %44, align 8, !range !4
  %46 = icmp eq i8 %45, 0
  br i1 %46, label %51, label %47

47:                                               ; preds = %40
  %48 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 16
  %49 = load i32, i32* %48, align 4
  %50 = icmp eq i32 %49, 1
  br i1 %50, label %55, label %51

51:                                               ; preds = %40, %47
  %52 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %43, i64 0, i32 13
  %53 = load i64, i64* %52, align 8
  %54 = icmp eq i64 %53, 0
  br i1 %54, label %58, label %55

55:                                               ; preds = %47, %51
  %56 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1810, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %57 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  br label %58

58:                                               ; preds = %51, %55
  call void @_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4658"* %0, i32 %1)
  br label %59

59:                                               ; preds = %30, %21, %13, %2, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF6VectorIN5blink6MemberINS1_19CSSStyleDeclarationEEELj0ENS1_13HeapAllocatorEE16ReallocateBufferEj(%"class.WTF::Vector.4658"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %4, label %13

4:                                                ; preds = %2
  %5 = bitcast %"class.WTF::Vector.4658"* %0 to i8**
  %6 = load i8*, i8** %5, align 8
  %7 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 2
  %8 = load i32, i32* %7, align 4
  %9 = zext i32 %8 to i64
  %10 = bitcast %"class.WTF::Vector.4658"* %0 to i64*
  store atomic i64 0, i64* %10 monotonic, align 8
  %11 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 0, i32* %11, align 8
  %12 = shl nuw nsw i64 %9, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %6, i64 %12) #16
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %6) #16
  br label %50

13:                                               ; preds = %2
  %14 = zext i32 %1 to i64
  %15 = tail call i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19CSSStyleDeclarationEEEEEmm(i64 %14) #16
  %16 = lshr i64 %15, 3
  %17 = tail call %"class.blink::HeapVectorBacking.5359"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64 %16) #16
  %18 = ptrtoint %"class.blink::HeapVectorBacking.5359"* %17 to i64
  %19 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 0
  %20 = load %"class.blink::Member.3969"*, %"class.blink::Member.3969"** %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 2
  %22 = icmp ne %"class.blink::HeapVectorBacking.5359"* %17, null
  %23 = icmp ne %"class.blink::Member.3969"* %20, null
  %24 = and i1 %22, %23
  %25 = bitcast %"class.blink::Member.3969"* %20 to i8*
  br i1 %24, label %28, label %26, !prof !2

26:                                               ; preds = %13
  %27 = bitcast %"class.WTF::Vector.4658"* %0 to i8**
  br label %35

28:                                               ; preds = %13
  %29 = load i32, i32* %21, align 4
  %30 = zext i32 %29 to i64
  %31 = shl nuw nsw i64 %30, 3
  %32 = getelementptr inbounds %"class.blink::HeapVectorBacking.5359", %"class.blink::HeapVectorBacking.5359"* %17, i64 0, i32 0
  tail call void @_ZN3WTF17AtomicWriteMemcpyEPvPKvm(i8* nonnull %32, i8* nonnull %25, i64 %31) #16
  %33 = bitcast %"class.WTF::Vector.4658"* %0 to i8**
  %34 = load i8*, i8** %33, align 8
  br label %35

35:                                               ; preds = %26, %28
  %36 = phi i8** [ %27, %26 ], [ %33, %28 ]
  %37 = phi i8* [ %25, %26 ], [ %34, %28 ]
  %38 = load i32, i32* %21, align 4
  %39 = zext i32 %38 to i64
  %40 = shl nuw nsw i64 %39, 3
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* %37, i64 %40) #16
  %41 = load i8*, i8** %36, align 8
  tail call void @_ZN5blink13HeapAllocator17FreeVectorBackingEPv(i8* %41) #16
  %42 = bitcast %"class.WTF::Vector.4658"* %0 to i64*
  store atomic i64 %18, i64* %42 monotonic, align 8
  %43 = trunc i64 %16 to i32
  %44 = getelementptr inbounds %"class.WTF::Vector.4658", %"class.WTF::Vector.4658"* %0, i64 0, i32 0, i32 0, i32 1
  store i32 %43, i32* %44, align 8
  %45 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %50, label %47

47:                                               ; preds = %35
  %48 = getelementptr inbounds %"class.blink::HeapVectorBacking.5359", %"class.blink::HeapVectorBacking.5359"* %17, i64 0, i32 0
  %49 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %48) #16
  br label %50

50:                                               ; preds = %47, %35, %4
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN5blink13HeapAllocator13QuantizedSizeINS_6MemberINS_19CSSStyleDeclarationEEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 16777216
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 16777216) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.60, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([74 x i8], [74 x i8]* @.str.61, i64 0, i64 0), i32 39, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  ret i64 %20
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapVectorBacking.5359"* @_ZN5blink25MakeGarbageCollectedTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([93 x i8], [93 x i8]* @.str.62, i64 0, i64 0), i32 86, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 3
  %21 = call i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapVectorBacking.5359"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapVectorBacking.5359"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS3_EEE14AllocateObjectIS7_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 4, i32 %20, i8* getelementptr inbounds ([179 x i8], [179 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink17HeapVectorBackingINS1_6MemberINS1_19CSSStyleDeclarationEEENS_12VectorTraitsIS5_EEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::Member.3969"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %17, %9
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 3
  %24 = icmp eq i64 %23, 0
  br i1 %24, label %41, label %25

25:                                               ; preds = %20
  %26 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %27

27:                                               ; preds = %38, %25
  %28 = phi i64 [ 0, %25 ], [ %39, %38 ]
  %29 = getelementptr inbounds %"class.blink::Member.3969", %"class.blink::Member.3969"* %3, i64 %28
  %30 = bitcast %"class.blink::Member.3969"* %29 to i64*
  %31 = load atomic i64, i64* %30 monotonic, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %38, label %33

33:                                               ; preds = %27
  %34 = inttoptr i64 %31 to i8*
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %26, align 8
  %36 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %35, i64 5
  %37 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %36, align 8
  tail call void %37(%"class.blink::Visitor"* %0, i8* nonnull %34, i8* nonnull %34, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_19CSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv) #16
  br label %38

38:                                               ; preds = %33, %27
  %39 = add nuw nsw i64 %28, 1
  %40 = icmp eq i64 %39, %23
  br i1 %40, label %41, label %27

41:                                               ; preds = %38, %20
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_17HeapVectorBackingINS_6MemberINS_19CSSStyleDeclarationEEEN3WTF12VectorTraitsIS4_EEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_19CSSStyleDeclarationEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleDeclaration"*
  %4 = bitcast i8* %1 to void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)**, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)*, void (%"class.blink::CSSStyleDeclaration"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::CSSStyleDeclaration"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(16) %"class.blink::StylePropertyShorthand"* @_ZN3WTF6VectorIN5blink22StylePropertyShorthandELj4ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.4667"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.4667", %"class.WTF::Vector.4667"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::StylePropertyShorthand"*, %"class.blink::StylePropertyShorthand"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::StylePropertyShorthand", %"class.blink::StylePropertyShorthand"* %24, i64 %25
  ret %"class.blink::StylePropertyShorthand"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.blink::CSSPropertySourceData"* @_ZN3WTF6VectorIN5blink21CSSPropertySourceDataELj0ENS_18PartitionAllocatorEE2atEj(%"class.WTF::Vector.3953"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %7, align 8
  %8 = getelementptr inbounds %"class.WTF::Vector.3953", %"class.WTF::Vector.3953"* %0, i64 0, i32 0, i32 0, i32 2
  %9 = load i32, i32* %8, align 4
  %10 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %10)
  %11 = icmp ugt i32 %9, %1
  br i1 %11, label %12, label %13

12:                                               ; preds = %2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* null, i8** %7, align 8
  br label %22

13:                                               ; preds = %2
  %14 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %1) #16
  %15 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %9) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([11 x i8], [11 x i8]* @.str.52, i64 0, i64 0), i8* %14, i8* %15) #16
  %16 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %17 = load i8*, i8** %16, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %10)
  store i8* %17, i8** %7, align 8
  %18 = icmp eq i8* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %13
  %20 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([55 x i8], [55 x i8]* @.str.53, i64 0, i64 0), i32 1172, %"class.logging::CheckOpResult"* nonnull %4) #16
  %21 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  br label %22

22:                                               ; preds = %12, %13, %19
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %23 = getelementptr inbounds %"class.WTF::Vector.3953", %"class.WTF::Vector.3953"* %0, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.blink::CSSPropertySourceData"*, %"class.blink::CSSPropertySourceData"** %23, align 8
  %25 = zext i32 %1 to i64
  %26 = getelementptr inbounds %"class.blink::CSSPropertySourceData", %"class.blink::CSSPropertySourceData"* %24, i64 %25
  ret %"class.blink::CSSPropertySourceData"* %26
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_EC2ES7_S2_(%"class.WTF::StringAppend"*, %"class.WTF::StringAppend.4672"* byval(%"class.WTF::StringAppend.4672") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = bitcast %"class.WTF::StringAppend.4672"* %1 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.WTF::StringAppend"* %0 to i64*
  store i64 %5, i64* %6, align 8
  %7 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %8 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %7, align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %8, %"class.WTF::StringImpl"** %9, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %8, null
  br i1 %10, label %28, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load atomic i32, i32* %12 monotonic, align 4
  %14 = and i32 %13, 2
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %28

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %18 = load i32, i32* %17, align 4
  %19 = zext i32 %18 to i33
  %20 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %19, i33 1) #16
  %21 = extractvalue { i33, i1 } %20, 1
  %22 = extractvalue { i33, i1 } %20, 0
  %23 = icmp slt i33 %22, 0
  %24 = or i1 %21, %23
  br i1 %24, label %25, label %26, !prof !3

25:                                               ; preds = %16
  tail call void @llvm.trap() #16
  unreachable

26:                                               ; preds = %16
  %27 = trunc i33 %22 to i32
  store i32 %27, i32* %17, align 4
  br label %28

28:                                               ; preds = %26, %11, %3
  %29 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %30 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %1, i64 0, i32 0, i32 0, i32 1
  %31 = bitcast i8** %30 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast i8** %29 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %35 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %34, align 8
  %36 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %35, %"class.WTF::StringImpl"** %36, align 8
  %37 = icmp eq %"class.WTF::StringImpl"* %35, null
  br i1 %37, label %55, label %38

38:                                               ; preds = %28
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load atomic i32, i32* %39 monotonic, align 4
  %41 = and i32 %40, 2
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %43, label %62

43:                                               ; preds = %38
  %44 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %45 = load i32, i32* %44, align 4
  %46 = zext i32 %45 to i33
  %47 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %46, i33 1) #16
  %48 = extractvalue { i33, i1 } %47, 1
  %49 = extractvalue { i33, i1 } %47, 0
  %50 = icmp slt i33 %49, 0
  %51 = or i1 %48, %50
  br i1 %51, label %52, label %53, !prof !3

52:                                               ; preds = %43
  tail call void @llvm.trap() #16
  unreachable

53:                                               ; preds = %43
  %54 = trunc i33 %49 to i32
  store i32 %54, i32* %44, align 4
  br label %62

55:                                               ; preds = %28
  %56 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %57 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %1, i64 0, i32 1
  %58 = bitcast i8** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast i8** %56 to i64*
  store i64 %59, i64* %60, align 8
  %61 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %61, align 8
  br label %80

62:                                               ; preds = %38, %53
  %63 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0, i32 1
  %64 = getelementptr inbounds %"class.WTF::StringAppend.4672", %"class.WTF::StringAppend.4672"* %1, i64 0, i32 1
  %65 = bitcast i8** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = bitcast i8** %63 to i64*
  store i64 %66, i64* %67, align 8
  %68 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  store i8* %2, i8** %68, align 8
  %69 = load atomic i32, i32* %39 monotonic, align 4
  %70 = and i32 %69, 2
  %71 = icmp eq i32 %70, 0
  %72 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %35, i64 0, i32 0
  %73 = load i32, i32* %72, align 4
  br i1 %71, label %74, label %76

74:                                               ; preds = %62
  %75 = add i32 %73, -1
  store i32 %75, i32* %72, align 4
  br label %76

76:                                               ; preds = %74, %62
  %77 = phi i32 [ %75, %74 ], [ %73, %62 ]
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %80

79:                                               ; preds = %76
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %35) #16
  br label %80

80:                                               ; preds = %55, %79, %76
  br i1 %10, label %94, label %81

81:                                               ; preds = %80
  %82 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load atomic i32, i32* %82 monotonic, align 4
  %84 = and i32 %83, 2
  %85 = icmp eq i32 %84, 0
  %86 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %8, i64 0, i32 0
  %87 = load i32, i32* %86, align 4
  br i1 %85, label %88, label %90

88:                                               ; preds = %81
  %89 = add i32 %87, -1
  store i32 %89, i32* %86, align 4
  br label %90

90:                                               ; preds = %88, %81
  %91 = phi i32 [ %89, %88 ], [ %87, %81 ]
  %92 = icmp eq i32 %91, 0
  br i1 %92, label %93, label %94

93:                                               ; preds = %90
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %8) #16
  br label %94

94:                                               ; preds = %80, %90, %93
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_EES2_E6lengthEv(%"class.WTF::StringAppend"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend", %"class.WTF::StringAppend"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.4672"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_IPKcNS_6StringEEES2_EES3_EES2_E6lengthEv(%"class.WTF::StringAppend.4672"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringES1_E6lengthEv(%"class.WTF::StringAppend.4676"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %8, align 8
  %10 = icmp eq %"class.WTF::StringImpl"* %9, null
  br i1 %10, label %14, label %11

11:                                               ; preds = %1
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %9, i64 0, i32 1
  %13 = load i32, i32* %12, align 4
  br label %14

14:                                               ; preds = %1, %11
  %15 = phi i32 [ %13, %11 ], [ 0, %1 ]
  %16 = getelementptr inbounds %"class.WTF::StringAppend.4676", %"class.WTF::StringAppend.4676"* %0, i64 0, i32 1, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %17, null
  br i1 %18, label %22, label %19

19:                                               ; preds = %14
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 1
  %21 = load i32, i32* %20, align 4
  br label %22

22:                                               ; preds = %14, %19
  %23 = phi i32 [ %21, %19 ], [ 0, %14 ]
  %24 = add i32 %23, %15
  %25 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %26, align 8
  %27 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27)
  %28 = icmp ult i32 %24, %15
  br i1 %28, label %30, label %29

29:                                               ; preds = %22
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* null, i8** %26, align 8
  br label %39

30:                                               ; preds = %22
  %31 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #16
  %32 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %15) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %31, i8* %32) #16
  %33 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %34 = load i8*, i8** %33, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27)
  store i8* %34, i8** %26, align 8
  %35 = icmp eq i8* %34, null
  br i1 %35, label %39, label %36

36:                                               ; preds = %30
  %37 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #16
  %38 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br label %39

39:                                               ; preds = %29, %30, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  %40 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  %41 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %41, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %24, %23
  br i1 %43, label %45, label %44

44:                                               ; preds = %39
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %41, align 8
  br label %54

45:                                               ; preds = %39
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %24) #16
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %46, i8* %47) #16
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %41, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #16
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  ret i32 %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS_6StringEPKcEES1_EC2ES4_S1_(%"class.WTF::StringAppend.4679"*, %"class.WTF::StringImpl"*, i8*, %"class.WTF::StringImpl"*) unnamed_addr #0 comdat align 2 {
  %5 = ptrtoint i8* %2 to i64
  %6 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %1, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %1, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %4
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #16
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %4, %8, %23
  %26 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0, i32 1
  %27 = bitcast i8** %26 to i64*
  store i64 %5, i64* %27, align 8
  %28 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %3, %"class.WTF::StringImpl"** %28, align 8
  %29 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %29, label %59, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load atomic i32, i32* %31 monotonic, align 4
  %33 = and i32 %32, 2
  %34 = icmp eq i32 %33, 0
  %35 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %36 = load i32, i32* %35, align 4
  br i1 %34, label %37, label %47

37:                                               ; preds = %30
  %38 = zext i32 %36 to i33
  %39 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %38, i33 1) #16
  %40 = extractvalue { i33, i1 } %39, 1
  %41 = extractvalue { i33, i1 } %39, 0
  %42 = icmp slt i33 %41, 0
  %43 = or i1 %40, %42
  br i1 %43, label %44, label %45, !prof !3

44:                                               ; preds = %37
  tail call void @llvm.trap() #16
  unreachable

45:                                               ; preds = %37
  %46 = trunc i33 %41 to i32
  store i32 %46, i32* %35, align 4
  br label %47

47:                                               ; preds = %30, %45
  %48 = phi i32 [ %46, %45 ], [ %36, %30 ]
  %49 = load atomic i32, i32* %31 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %55

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %54 = add i32 %48, -1
  store i32 %54, i32* %53, align 4
  br label %55

55:                                               ; preds = %52, %47
  %56 = phi i32 [ %54, %52 ], [ %48, %47 ]
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %59

58:                                               ; preds = %55
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %3) #16
  br label %59

59:                                               ; preds = %25, %55, %58
  br i1 %7, label %73, label %60

60:                                               ; preds = %59
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %1, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %1) #16
  br label %73

73:                                               ; preds = %59, %69, %72
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_EC2ES5_S3_(%"class.WTF::StringAppend.4678"*, %"class.WTF::StringAppend.4679"* byval(%"class.WTF::StringAppend.4679") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #16
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %0, i64 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %1, i64 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %1, i64 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %54

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #16
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #16
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %54

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %0, i64 0, i32 1
  store i8* %2, i8** %53, align 8
  br label %67

54:                                               ; preds = %35, %50
  %55 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %0, i64 0, i32 1
  store i8* %2, i8** %55, align 8
  %56 = load atomic i32, i32* %36 monotonic, align 4
  %57 = and i32 %56, 2
  %58 = icmp eq i32 %57, 0
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  br i1 %58, label %61, label %63

61:                                               ; preds = %54
  %62 = add i32 %60, -1
  store i32 %62, i32* %59, align 4
  br label %63

63:                                               ; preds = %61, %54
  %64 = phi i32 [ %62, %61 ], [ %60, %54 ]
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %67

66:                                               ; preds = %63
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #16
  br label %67

67:                                               ; preds = %52, %66, %63
  br i1 %7, label %81, label %68

68:                                               ; preds = %67
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %70 = load atomic i32, i32* %69 monotonic, align 4
  %71 = and i32 %70, 2
  %72 = icmp eq i32 %71, 0
  %73 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %74 = load i32, i32* %73, align 4
  br i1 %72, label %75, label %77

75:                                               ; preds = %68
  %76 = add i32 %74, -1
  store i32 %76, i32* %73, align 4
  br label %77

77:                                               ; preds = %75, %68
  %78 = phi i32 [ %76, %75 ], [ %74, %68 ]
  %79 = icmp eq i32 %78, 0
  br i1 %79, label %80, label %81

80:                                               ; preds = %77
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #16
  br label %81

81:                                               ; preds = %67, %77, %80
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_EC2ES6_S3_(%"class.WTF::StringAppend.4677"*, %"class.WTF::StringAppend.4678"* byval(%"class.WTF::StringAppend.4678") align 8, i8*) unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %5, %"class.WTF::StringImpl"** %6, align 8
  %7 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %7, label %25, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load atomic i32, i32* %9 monotonic, align 4
  %11 = and i32 %10, 2
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %25

13:                                               ; preds = %8
  %14 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %15 = load i32, i32* %14, align 4
  %16 = zext i32 %15 to i33
  %17 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %16, i33 1) #16
  %18 = extractvalue { i33, i1 } %17, 1
  %19 = extractvalue { i33, i1 } %17, 0
  %20 = icmp slt i33 %19, 0
  %21 = or i1 %18, %20
  br i1 %21, label %22, label %23, !prof !3

22:                                               ; preds = %13
  tail call void @llvm.trap() #16
  unreachable

23:                                               ; preds = %13
  %24 = trunc i33 %19 to i32
  store i32 %24, i32* %14, align 4
  br label %25

25:                                               ; preds = %23, %8, %3
  %26 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %27 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %1, i64 0, i32 0, i32 0, i32 1
  %28 = bitcast i8** %27 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = bitcast i8** %26 to i64*
  store i64 %29, i64* %30, align 8
  %31 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %1, i64 0, i32 0, i32 1, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %33, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %34, label %52, label %35

35:                                               ; preds = %25
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  br i1 %39, label %40, label %59

40:                                               ; preds = %35
  %41 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %42 = load i32, i32* %41, align 4
  %43 = zext i32 %42 to i33
  %44 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %43, i33 1) #16
  %45 = extractvalue { i33, i1 } %44, 1
  %46 = extractvalue { i33, i1 } %44, 0
  %47 = icmp slt i33 %46, 0
  %48 = or i1 %45, %47
  br i1 %48, label %49, label %50, !prof !3

49:                                               ; preds = %40
  tail call void @llvm.trap() #16
  unreachable

50:                                               ; preds = %40
  %51 = trunc i33 %46 to i32
  store i32 %51, i32* %41, align 4
  br label %59

52:                                               ; preds = %25
  %53 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 1
  %54 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %1, i64 0, i32 1
  %55 = bitcast i8** %54 to i64*
  %56 = load i64, i64* %55, align 8
  %57 = bitcast i8** %53 to i64*
  store i64 %56, i64* %57, align 8
  %58 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 1
  store i8* %2, i8** %58, align 8
  br label %77

59:                                               ; preds = %35, %50
  %60 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0, i32 1
  %61 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %1, i64 0, i32 1
  %62 = bitcast i8** %61 to i64*
  %63 = load i64, i64* %62, align 8
  %64 = bitcast i8** %60 to i64*
  store i64 %63, i64* %64, align 8
  %65 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 1
  store i8* %2, i8** %65, align 8
  %66 = load atomic i32, i32* %36 monotonic, align 4
  %67 = and i32 %66, 2
  %68 = icmp eq i32 %67, 0
  %69 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 0
  %70 = load i32, i32* %69, align 4
  br i1 %68, label %71, label %73

71:                                               ; preds = %59
  %72 = add i32 %70, -1
  store i32 %72, i32* %69, align 4
  br label %73

73:                                               ; preds = %71, %59
  %74 = phi i32 [ %72, %71 ], [ %70, %59 ]
  %75 = icmp eq i32 %74, 0
  br i1 %75, label %76, label %77

76:                                               ; preds = %73
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %32) #16
  br label %77

77:                                               ; preds = %52, %76, %73
  br i1 %7, label %91, label %78

78:                                               ; preds = %77
  %79 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %80 = load atomic i32, i32* %79 monotonic, align 4
  %81 = and i32 %80, 2
  %82 = icmp eq i32 %81, 0
  %83 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %84 = load i32, i32* %83, align 4
  br i1 %82, label %85, label %87

85:                                               ; preds = %78
  %86 = add i32 %84, -1
  store i32 %86, i32* %83, align 4
  br label %87

87:                                               ; preds = %85, %78
  %88 = phi i32 [ %86, %85 ], [ %84, %78 ]
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %91

90:                                               ; preds = %87
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #16
  br label %91

91:                                               ; preds = %77, %87, %90
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS0_INS_6StringEPKcEES1_EES3_EES3_E6lengthEv(%"class.WTF::StringAppend.4677"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.4677", %"class.WTF::StringAppend.4677"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.4678"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.4678"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS0_INS_6StringEPKcEES1_EES3_E6lengthEv(%"class.WTF::StringAppend.4678"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %0, i64 0, i32 0
  %10 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %10) #16
  %11 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  %12 = getelementptr inbounds %"class.WTF::StringAppend.4678", %"class.WTF::StringAppend.4678"* %0, i64 0, i32 1
  %13 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %13, i8 -86, i64 16, i1 false)
  %14 = load i8*, i8** %12, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %14) #16
  %15 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.4679"* %9) #16
  %16 = load i32, i32* %11, align 8
  %17 = add i32 %16, %15
  %18 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %19, align 8
  %20 = call i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.4679"* %9) #16
  %21 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21)
  %22 = icmp ult i32 %17, %20
  br i1 %22, label %24, label %23

23:                                               ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* null, i8** %19, align 8
  br label %33

24:                                               ; preds = %1
  %25 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %26 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %20) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %25, i8* %26) #16
  %27 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %28 = load i8*, i8** %27, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21)
  store i8* %28, i8** %19, align 8
  %29 = icmp eq i8* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %24
  %31 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %32 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br label %33

33:                                               ; preds = %23, %24, %30
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %34 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %34) #16
  %35 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %35, align 8
  %36 = load i32, i32* %11, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %17, %36
  br i1 %38, label %40, label %39

39:                                               ; preds = %33
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %35, align 8
  br label %49

40:                                               ; preds = %33
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %17) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %36) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %35, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %34) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %10) #16
  ret i32 %17
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E6lengthEv(%"class.WTF::StringAppend.4679"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = alloca %"class.logging::CheckOpResult", align 8
  %7 = alloca %"class.logging::CheckError", align 8
  %8 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 1, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.4680"* %8) #16
  %18 = add i32 %17, %16
  %19 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19) #16
  %20 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %20, align 8
  %21 = tail call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.4680"* %8) #16
  %22 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22)
  %23 = icmp ult i32 %18, %21
  br i1 %23, label %25, label %24

24:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* null, i8** %20, align 8
  br label %34

25:                                               ; preds = %15
  %26 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #16
  %27 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %21) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %26, i8* %27) #16
  %28 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %29 = load i8*, i8** %28, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22)
  store i8* %29, i8** %20, align 8
  %30 = icmp eq i8* %29, null
  br i1 %30, label %34, label %31

31:                                               ; preds = %25
  %32 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %32) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %4) #16
  %33 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %32) #16
  br label %34

34:                                               ; preds = %24, %25, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19) #16
  %35 = bitcast %"class.logging::CheckOpResult"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #16
  %36 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %6, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %36, align 8
  %37 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37)
  %38 = icmp ult i32 %18, %16
  br i1 %38, label %40, label %39

39:                                               ; preds = %34
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* null, i8** %36, align 8
  br label %49

40:                                               ; preds = %34
  %41 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %18) #16
  %42 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %41, i8* %42) #16
  %43 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %44 = load i8*, i8** %43, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37)
  store i8* %44, i8** %36, align 8
  %45 = icmp eq i8* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %40
  %47 = bitcast %"class.logging::CheckError"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %47) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %7, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %6) #16
  %48 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %7) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %47) #16
  br label %49

49:                                               ; preds = %39, %40, %46
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #16
  ret i32 %18
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.4680"*) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckError", align 8
  %9 = getelementptr inbounds %"class.WTF::StringAppend.4680", %"class.WTF::StringAppend.4680"* %0, i64 0, i32 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = icmp eq %"class.WTF::StringImpl"* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %1
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 1
  %14 = load i32, i32* %13, align 4
  br label %15

15:                                               ; preds = %1, %12
  %16 = phi i32 [ %14, %12 ], [ 0, %1 ]
  %17 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5127", %"class.WTF::StringTypeAdapter.5127"* %4, i64 0, i32 1
  %19 = getelementptr inbounds %"class.WTF::StringAppend.4680", %"class.WTF::StringAppend.4680"* %0, i64 0, i32 1
  %20 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %20, i8 -86, i64 16, i1 false)
  %21 = load i8*, i8** %19, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %21) #16
  %22 = load i32, i32* %18, align 8
  %23 = add i32 %22, %16
  %24 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %25, align 8
  %26 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = icmp ult i32 %23, %16
  br i1 %27, label %29, label %28

28:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* null, i8** %25, align 8
  br label %38

29:                                               ; preds = %15
  %30 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %31 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %16) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.56, i64 0, i64 0), i8* %30, i8* %31) #16
  %32 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %33 = load i8*, i8** %32, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  store i8* %33, i8** %25, align 8
  %34 = icmp eq i8* %33, null
  br i1 %34, label %38, label %35

35:                                               ; preds = %29
  %36 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %36) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 108, %"class.logging::CheckOpResult"* nonnull %5) #16
  %37 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %36) #16
  br label %38

38:                                               ; preds = %28, %29, %35
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  %39 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %39) #16
  %40 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %40, align 8
  %41 = load i32, i32* %18, align 8
  %42 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42)
  %43 = icmp ult i32 %23, %41
  br i1 %43, label %45, label %44

44:                                               ; preds = %38
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* null, i8** %40, align 8
  br label %54

45:                                               ; preds = %38
  %46 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %23) #16
  %47 = call i8* @_ZN7logging15CheckOpValueStrEj(i32 %41) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([27 x i8], [27 x i8]* @.str.58, i64 0, i64 0), i8* %46, i8* %47) #16
  %48 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %49 = load i8*, i8** %48, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42)
  store i8* %49, i8** %40, align 8
  %50 = icmp eq i8* %49, null
  br i1 %50, label %54, label %51

51:                                               ; preds = %45
  %52 = bitcast %"class.logging::CheckError"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %8, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @.str.57, i64 0, i64 0), i32 109, %"class.logging::CheckOpResult"* nonnull %7) #16
  %53 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %8) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16
  br label %54

54:                                               ; preds = %44, %45, %51
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %39) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %17) #16
  ret i32 %23
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPh(%"class.WTF::StringAppend.4679"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #16
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #16
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %48) #16
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"* nonnull %49, i8* %1) #16
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i8, i8* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPh(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.4680"* %6) #16
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i8, i8* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPh(%"class.WTF::StringTypeAdapter.5130"* nonnull %53, i8* %56) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNK3WTF12StringAppendINS0_INS_6StringEPKcEES1_E7WriteToEPDs(%"class.WTF::StringAppend.4679"*, i16*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %4 = alloca %"class.WTF::StringTypeAdapter.5127", align 8
  %5 = alloca %"class.WTF::StringTypeAdapter.5129", align 8
  %6 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0
  %7 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %7) #16
  %8 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0, i32 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 1, i32 0, i32 0
  %11 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %14, label %16

14:                                               ; preds = %2
  %15 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %22

16:                                               ; preds = %2
  %17 = ptrtoint %"class.WTF::StringImpl"* %12 to i64
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %19 = load i32, i32* %18, align 4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  %21 = bitcast %"class.WTF::StringImpl"* %20 to i8*
  br label %22

22:                                               ; preds = %14, %16
  %23 = phi i8* [ null, %14 ], [ %21, %16 ]
  %24 = phi i64 [ %15, %14 ], [ %17, %16 ]
  %25 = phi i32 [ 0, %14 ], [ %19, %16 ]
  %26 = bitcast %"class.WTF::StringTypeAdapter.5129"* %5 to i64*
  store i64 %24, i64* %26, align 8
  store i8* %23, i8** %8, align 8
  store i32 %25, i32* %9, align 8
  %27 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %27) #16
  %28 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 1
  %29 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0, i32 0, i32 2
  %30 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false) #16
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %30, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %33, label %35

33:                                               ; preds = %22
  %34 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %41

35:                                               ; preds = %22
  %36 = ptrtoint %"class.WTF::StringImpl"* %31 to i64
  %37 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 1
  %38 = load i32, i32* %37, align 4
  %39 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 1
  %40 = bitcast %"class.WTF::StringImpl"* %39 to i8*
  br label %41

41:                                               ; preds = %33, %35
  %42 = phi i8* [ null, %33 ], [ %40, %35 ]
  %43 = phi i64 [ %34, %33 ], [ %36, %35 ]
  %44 = phi i32 [ 0, %33 ], [ %38, %35 ]
  %45 = bitcast %"class.WTF::StringTypeAdapter.5129"* %3 to i64*
  store i64 %43, i64* %45, align 8
  store i8* %42, i8** %28, align 8
  store i32 %44, i32* %29, align 8
  %46 = bitcast %"class.WTF::StringTypeAdapter.5127"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %46) #16
  %47 = getelementptr inbounds %"class.WTF::StringAppend.4679", %"class.WTF::StringAppend.4679"* %0, i64 0, i32 0, i32 1
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %46, i8 -86, i64 16, i1 false) #16
  %48 = load i8*, i8** %47, align 8
  call void @_ZN3WTF17StringTypeAdapterIPKcEC1ES2_(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i8* %48) #16
  %49 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %3, i64 0, i32 0
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"* nonnull %49, i16* %1) #16
  %50 = load i32, i32* %29, align 8
  %51 = zext i32 %50 to i64
  %52 = getelementptr inbounds i16, i16* %1, i64 %51
  call void @_ZNK3WTF17StringTypeAdapterIPKcE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5127"* nonnull %4, i16* %52) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %46) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %27) #16
  %53 = getelementptr inbounds %"class.WTF::StringTypeAdapter.5129", %"class.WTF::StringTypeAdapter.5129"* %5, i64 0, i32 0
  %54 = call i32 @_ZNK3WTF12StringAppendINS_6StringEPKcE6lengthEv(%"class.WTF::StringAppend.4680"* %6) #16
  %55 = zext i32 %54 to i64
  %56 = getelementptr inbounds i16, i16* %1, i64 %55
  call void @_ZNK3WTF17StringTypeAdapterINS_10StringViewEE7WriteToEPDs(%"class.WTF::StringTypeAdapter.5130"* nonnull %53, i16* %56) #16
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %7) #16
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3WTF6StringENS_9allocatorIS2_EEE24__emplace_back_slow_pathIJS2_EEEvDpOT_(%"class.std::__1::vector.4530"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.WTF::String"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4530"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4530"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.WTF::String"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.WTF::String"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.WTF::String"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %36, i64 %35
  %39 = ptrtoint %"class.WTF::String"* %38 to i64
  %40 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %41 = bitcast %"class.WTF::String"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  %43 = bitcast %"class.WTF::String"* %37 to i64*
  store i64 %42, i64* %43, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %40, align 8
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 1
  %45 = ptrtoint %"class.WTF::String"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4530", %"class.std::__1::vector.4530"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.WTF::String"*, %"class.WTF::String"** %46, align 8
  %48 = ptrtoint %"class.WTF::String"* %47 to i64
  %49 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %50 = icmp eq %"class.WTF::String"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.WTF::String", %"class.WTF::String"* %49, i64 -1, i32 0, i32 0
  %53 = ptrtoint %"class.WTF::StringImpl"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.WTF::String"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.WTF::String"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %60, i64 -1
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %61, i64 -1
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = bitcast %"class.WTF::String"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  %68 = bitcast %"class.WTF::String"* %63 to i64*
  store i64 %67, i64* %68, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %65, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !92

71:                                               ; preds = %59, %51
  %72 = phi %"class.WTF::String"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.WTF::String"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.WTF::String"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.WTF::String"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.WTF::String"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -1
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -1
  %81 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %80, i64 0, i32 0, i32 0
  %82 = bitcast %"class.WTF::String"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = bitcast %"class.WTF::String"* %79 to i64*
  store i64 %83, i64* %84, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %81, align 8
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -2
  %86 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -2
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %86, i64 0, i32 0, i32 0
  %88 = bitcast %"class.WTF::String"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = bitcast %"class.WTF::String"* %85 to i64*
  store i64 %89, i64* %90, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %87, align 8
  %91 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -3
  %92 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -3
  %93 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %92, i64 0, i32 0, i32 0
  %94 = bitcast %"class.WTF::String"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  %96 = bitcast %"class.WTF::String"* %91 to i64*
  store i64 %95, i64* %96, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %93, align 8
  %97 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -4
  %98 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -4
  %99 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %98, i64 0, i32 0, i32 0
  %100 = bitcast %"class.WTF::String"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  %102 = bitcast %"class.WTF::String"* %97 to i64*
  store i64 %101, i64* %102, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %99, align 8
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -5
  %104 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -5
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 0, i32 0, i32 0
  %106 = bitcast %"class.WTF::String"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  %108 = bitcast %"class.WTF::String"* %103 to i64*
  store i64 %107, i64* %108, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %105, align 8
  %109 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -6
  %110 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -6
  %111 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %110, i64 0, i32 0, i32 0
  %112 = bitcast %"class.WTF::String"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  %114 = bitcast %"class.WTF::String"* %109 to i64*
  store i64 %113, i64* %114, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %111, align 8
  %115 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -7
  %116 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -7
  %117 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %116, i64 0, i32 0, i32 0
  %118 = bitcast %"class.WTF::String"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  %120 = bitcast %"class.WTF::String"* %115 to i64*
  store i64 %119, i64* %120, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %117, align 8
  %121 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %77, i64 -8
  %122 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 -8
  %123 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %122, i64 0, i32 0, i32 0
  %124 = bitcast %"class.WTF::String"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  %126 = bitcast %"class.WTF::String"* %121 to i64*
  store i64 %125, i64* %126, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %123, align 8
  %127 = icmp eq %"class.WTF::String"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.WTF::String"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.WTF::String"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.WTF::String"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.WTF::String"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.WTF::String"*
  %138 = icmp eq %"class.WTF::String"* %133, %137
  br i1 %138, label %160, label %139

139:                                              ; preds = %132, %158
  %140 = phi %"class.WTF::String"* [ %141, %158 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %140, i64 -1
  %142 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %141, i64 0, i32 0, i32 0
  %143 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %142, align 8
  %144 = icmp eq %"class.WTF::StringImpl"* %143, null
  br i1 %144, label %158, label %145

145:                                              ; preds = %139
  %146 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %147 = load atomic i32, i32* %146 monotonic, align 4
  %148 = and i32 %147, 2
  %149 = icmp eq i32 %148, 0
  %150 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %143, i64 0, i32 0
  %151 = load i32, i32* %150, align 4
  br i1 %149, label %152, label %154

152:                                              ; preds = %145
  %153 = add i32 %151, -1
  store i32 %153, i32* %150, align 4
  br label %154

154:                                              ; preds = %152, %145
  %155 = phi i32 [ %153, %152 ], [ %151, %145 ]
  %156 = icmp eq i32 %155, 0
  br i1 %156, label %157, label %158

157:                                              ; preds = %154
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %143) #16
  br label %158

158:                                              ; preds = %157, %154, %139
  %159 = icmp eq %"class.WTF::String"* %141, %137
  br i1 %159, label %160, label %139

160:                                              ; preds = %158, %132
  %161 = icmp eq i64 %135, 0
  br i1 %161, label %164, label %162

162:                                              ; preds = %160
  %163 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %163) #18
  br label %164

164:                                              ; preds = %160, %162
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_21StyleRuleUsageTrackerEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_21StyleRuleUsageTrackerEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_21StyleRuleUsageTrackerEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_21StyleRuleUsageTrackerEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([76 x i8], [76 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink21StyleRuleUsageTrackerEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21StyleRuleUsageTrackerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleUsageTracker"*
  tail call void @_ZNK5blink21StyleRuleUsageTracker5TraceEPNS_7VisitorE(%"class.blink::StyleRuleUsageTracker"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_21StyleRuleUsageTrackerEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink21StyleRuleUsageTracker5TraceEPNS_7VisitorE(%"class.blink::StyleRuleUsageTracker"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4729"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6insertINS_17HashMapTranslatorISH_SC_SI_EEPS3_RPS7_EENS_18HashTableAddResultISJ_S9_EEOT0_OT1_(%"class.WTF::HashTable.4727"*, %"class.blink::StyleRule"** dereferenceable(8), %"class.blink::CSSStyleRule"** dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.4729"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.4727"* %0, %"struct.WTF::KeyValuePair.4729"* null)
  %9 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.4729"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = bitcast %"class.blink::StyleRule"** %1 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = shl i64 %17, 32
  %19 = xor i64 %18, -1
  %20 = add i64 %17, %19
  %21 = lshr i64 %20, 22
  %22 = xor i64 %21, %20
  %23 = shl i64 %22, 13
  %24 = xor i64 %23, -1
  %25 = add i64 %22, %24
  %26 = lshr i64 %25, 8
  %27 = xor i64 %26, %25
  %28 = mul i64 %27, 9
  %29 = lshr i64 %28, 15
  %30 = xor i64 %29, %28
  %31 = shl i64 %30, 27
  %32 = xor i64 %31, -1
  %33 = add i64 %30, %32
  %34 = lshr i64 %33, 31
  %35 = xor i64 %34, %33
  %36 = trunc i64 %35 to i32
  %37 = and i32 %14, %36
  %38 = zext i32 %37 to i64
  %39 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %11, i64 %38
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %40, align 8
  %42 = icmp eq %"class.blink::StyleRule"* %41, null
  %43 = inttoptr i64 %17 to %"class.blink::StyleRule"*
  br i1 %42, label %87, label %44

44:                                               ; preds = %10
  %45 = xor i32 %36, -1
  %46 = lshr i32 %36, 23
  %47 = add i32 %46, %45
  %48 = shl i32 %47, 12
  %49 = xor i32 %48, %47
  %50 = lshr i32 %49, 7
  %51 = xor i32 %50, %49
  %52 = shl i32 %51, 2
  %53 = xor i32 %52, %51
  %54 = lshr i32 %53, 20
  %55 = xor i32 %54, %53
  %56 = or i32 %55, 1
  %57 = zext i32 %56 to i64
  br label %58

58:                                               ; preds = %44, %65
  %59 = phi %"class.blink::StyleRule"* [ %41, %44 ], [ %74, %65 ]
  %60 = phi %"struct.WTF::KeyValuePair.4729"* [ %39, %44 ], [ %72, %65 ]
  %61 = phi %"struct.WTF::KeyValuePair.4729"* [ null, %44 ], [ %67, %65 ]
  %62 = phi i64 [ %38, %44 ], [ %71, %65 ]
  %63 = phi i64 [ 0, %44 ], [ %69, %65 ]
  %64 = icmp eq %"class.blink::StyleRule"* %59, %43
  br i1 %64, label %119, label %65

65:                                               ; preds = %58
  %66 = icmp eq %"class.blink::StyleRule"* %59, inttoptr (i64 -1 to %"class.blink::StyleRule"*)
  %67 = select i1 %66, %"struct.WTF::KeyValuePair.4729"* %60, %"struct.WTF::KeyValuePair.4729"* %61
  %68 = icmp eq i64 %63, 0
  %69 = select i1 %68, i64 %57, i64 %63
  %70 = add i64 %69, %62
  %71 = and i64 %70, %15
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %11, i64 %71
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %72, i64 0, i32 0, i32 0, i32 0
  %74 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %73, align 8
  %75 = icmp eq %"class.blink::StyleRule"* %74, null
  br i1 %75, label %76, label %58

76:                                               ; preds = %65
  %77 = icmp eq %"struct.WTF::KeyValuePair.4729"* %67, null
  br i1 %77, label %87, label %78

78:                                               ; preds = %76
  %79 = bitcast %"struct.WTF::KeyValuePair.4729"* %67 to i8*
  tail call void @_ZN3WTF13AtomicMemzeroEPvm(i8* nonnull %79, i64 16) #16
  %80 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 3
  %81 = load i32, i32* %80, align 8
  %82 = add i32 %81, 2147483647
  %83 = and i32 %82, 2147483647
  %84 = and i32 %81, -2147483648
  %85 = or i32 %83, %84
  store i32 %85, i32* %80, align 8
  %86 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %1, align 8
  br label %87

87:                                               ; preds = %10, %76, %78
  %88 = phi %"class.blink::StyleRule"* [ %86, %78 ], [ %43, %76 ], [ %43, %10 ]
  %89 = phi %"struct.WTF::KeyValuePair.4729"* [ %67, %78 ], [ %72, %76 ], [ %39, %10 ]
  %90 = ptrtoint %"class.blink::StyleRule"* %88 to i64
  %91 = bitcast %"struct.WTF::KeyValuePair.4729"* %89 to i64*
  store atomic i64 %90, i64* %91 monotonic, align 8
  %92 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %97, label %94

94:                                               ; preds = %87
  %95 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %88, i64 0, i32 0, i32 0
  %96 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %95) #16
  br label %97

97:                                               ; preds = %94, %87
  %98 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %89, i64 0, i32 1
  %99 = load %"class.blink::CSSStyleRule"*, %"class.blink::CSSStyleRule"** %2, align 8
  %100 = ptrtoint %"class.blink::CSSStyleRule"* %99 to i64
  %101 = bitcast %"class.blink::Member.4589"* %98 to i64*
  store atomic i64 %100, i64* %101 monotonic, align 8
  %102 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %107, label %104

104:                                              ; preds = %97
  %105 = bitcast %"class.blink::CSSStyleRule"* %99 to i8*
  %106 = tail call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %105) #16
  br label %107

107:                                              ; preds = %97, %104
  tail call void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberIKNS_9StyleRuleEEENS4_INS_12CSSStyleRuleEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair.4729"* %89) #16
  %108 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 2
  %109 = load i32, i32* %108, align 4
  %110 = add i32 %109, 1
  store i32 %110, i32* %108, align 4
  %111 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 3
  %112 = load i32, i32* %111, align 8
  %113 = add i32 %112, %110
  %114 = shl i32 %113, 1
  %115 = load i32, i32* %12, align 8
  %116 = icmp ult i32 %114, %115
  br i1 %116, label %119, label %117

117:                                              ; preds = %107
  %118 = tail call %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.4727"* %0, %"struct.WTF::KeyValuePair.4729"* %89)
  br label %119

119:                                              ; preds = %58, %107, %117
  %120 = phi i8 [ 1, %107 ], [ 1, %117 ], [ 0, %58 ]
  %121 = phi %"struct.WTF::KeyValuePair.4729"* [ %89, %107 ], [ %118, %117 ], [ %60, %58 ]
  %122 = insertvalue { %"struct.WTF::KeyValuePair.4729"*, i8 } undef, %"struct.WTF::KeyValuePair.4729"* %121, 0
  %123 = insertvalue { %"struct.WTF::KeyValuePair.4729"*, i8 } %122, i8 %120, 1
  ret { %"struct.WTF::KeyValuePair.4729"*, i8 } %123
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE6ExpandEPS9_(%"class.WTF::HashTable.4727"*, %"struct.WTF::KeyValuePair.4729"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca i8, align 1
  %5 = alloca %"class.logging::CheckOpResult", align 8
  %6 = alloca %"class.logging::CheckError", align 8
  %7 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %34, label %10

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 2
  %12 = load i32, i32* %11, align 4
  %13 = mul i32 %12, 6
  %14 = shl i32 %8, 1
  %15 = icmp ult i32 %13, %14
  br i1 %15, label %39, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckOpResult"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  %18 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %5, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %18, align 8
  %19 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %19)
  %20 = icmp ugt i32 %14, %8
  br i1 %20, label %21, label %22

21:                                               ; preds = %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* null, i8** %18, align 8
  br label %31

22:                                               ; preds = %16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %14) #16
  %24 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %8) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %23, i8* %24) #16
  %25 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %26 = load i8*, i8** %25, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %19)
  store i8* %26, i8** %18, align 8
  %27 = icmp eq i8* %26, null
  br i1 %27, label %31, label %28

28:                                               ; preds = %22
  %29 = bitcast %"class.logging::CheckError"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %6, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %5) #16
  %30 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %6) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #16
  br label %31

31:                                               ; preds = %28, %22, %21
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  %32 = load i32, i32* %7, align 8
  %33 = icmp ult i32 %32, %14
  br i1 %33, label %34, label %39

34:                                               ; preds = %2, %31
  %35 = phi i32 [ %14, %31 ], [ 8, %2 ]
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %4) #16
  store i8 -86, i8* %4, align 1
  %36 = call %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable.4727"* %0, i32 %35, %"struct.WTF::KeyValuePair.4729"* %1, i8* nonnull dereferenceable(1) %4) #16
  %37 = load i8, i8* %4, align 1, !range !4
  %38 = icmp eq i8 %37, 0
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %4) #16
  br i1 %38, label %39, label %45

39:                                               ; preds = %10, %34, %31
  %40 = phi i32 [ %35, %34 ], [ %14, %31 ], [ %8, %10 ]
  %41 = zext i32 %40 to i64
  %42 = call %"class.blink::HeapHashTableBacking.5382"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %41) #16
  %43 = bitcast %"class.blink::HeapHashTableBacking.5382"* %42 to %"struct.WTF::KeyValuePair.4729"*
  %44 = call %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.4727"* %0, %"struct.WTF::KeyValuePair.4729"* %43, i32 %40, %"struct.WTF::KeyValuePair.4729"* %1) #16
  br label %45

45:                                               ; preds = %34, %39
  %46 = phi %"struct.WTF::KeyValuePair.4729"* [ %44, %39 ], [ %36, %34 ]
  ret %"struct.WTF::KeyValuePair.4729"* %46
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE12ExpandBufferEjPS9_Rb(%"class.WTF::HashTable.4727"*, i32, %"struct.WTF::KeyValuePair.4729"*, i8* dereferenceable(1)) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.logging::CheckError", align 8
  store i8 0, i8* %3, align 1
  %6 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %7 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %6, i64 0, i32 1
  %8 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %7) #16
  %9 = icmp eq i8* %8, null
  br i1 %9, label %10, label %12, !prof !3

10:                                               ; preds = %4
  %11 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %7, i8* %11) #16
  br label %12

12:                                               ; preds = %10, %4
  %13 = phi i8* [ %11, %10 ], [ %8, %4 ]
  %14 = bitcast i8* %13 to %"class.blink::ThreadState"**
  %15 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %14, align 8
  %16 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 6
  %17 = load i8, i8* %16, align 8, !range !4
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %23, label %19

19:                                               ; preds = %12
  %20 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 16
  %21 = load i32, i32* %20, align 4
  %22 = icmp eq i32 %21, 1
  br i1 %22, label %27, label %23

23:                                               ; preds = %12, %19
  %24 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %15, i64 0, i32 13
  %25 = load i64, i64* %24, align 8
  %26 = icmp eq i64 %25, 0
  br i1 %26, label %30, label %27

27:                                               ; preds = %19, %23
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1801, i8* getelementptr inbounds ([33 x i8], [33 x i8]* @.str.30, i64 0, i64 0)) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %23, %27
  %31 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 0
  %32 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %31, align 8
  %33 = icmp eq %"struct.WTF::KeyValuePair.4729"* %32, null
  br i1 %33, label %80, label %34

34:                                               ; preds = %30
  %35 = zext i32 %1 to i64
  %36 = shl nuw nsw i64 %35, 4
  %37 = bitcast %"struct.WTF::KeyValuePair.4729"* %32 to i8*
  %38 = call zeroext i1 @_ZN5blink13HeapAllocator13BackingExpandEPvm(i8* nonnull %37, i64 %36) #16
  br i1 %38, label %39, label %80

39:                                               ; preds = %34
  store i8 1, i8* %3, align 1
  %40 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %31, align 8
  %43 = zext i32 %41 to i64
  %44 = call %"class.blink::HeapHashTableBacking.5382"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64 %43) #16
  %45 = bitcast %"class.blink::HeapHashTableBacking.5382"* %44 to %"struct.WTF::KeyValuePair.4729"*
  %46 = icmp eq i32 %41, 0
  br i1 %46, label %47, label %58

47:                                               ; preds = %77, %39
  %48 = phi %"struct.WTF::KeyValuePair.4729"* [ null, %39 ], [ %65, %77 ]
  %49 = bitcast %"class.WTF::HashTable.4727"* %0 to %"class.blink::HeapHashTableBacking.5382"**
  store %"class.blink::HeapHashTableBacking.5382"* %44, %"class.blink::HeapHashTableBacking.5382"** %49, align 8
  %50 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %55, label %52

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.blink::HeapHashTableBacking.5382", %"class.blink::HeapHashTableBacking.5382"* %44, i64 0, i32 0
  %54 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %53) #16
  br label %55

55:                                               ; preds = %47, %52
  %56 = bitcast %"struct.WTF::KeyValuePair.4729"* %42 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 %36, i1 false)
  %57 = call %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.4727"* %0, %"struct.WTF::KeyValuePair.4729"* %42, i32 %1, %"struct.WTF::KeyValuePair.4729"* %48)
  br label %80

58:                                               ; preds = %39, %77
  %59 = phi i64 [ %78, %77 ], [ 0, %39 ]
  %60 = phi %"struct.WTF::KeyValuePair.4729"* [ %65, %77 ], [ null, %39 ]
  %61 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %31, align 8
  %62 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %61, i64 %59
  %63 = icmp eq %"struct.WTF::KeyValuePair.4729"* %62, %2
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %45, i64 %59
  %65 = select i1 %63, %"struct.WTF::KeyValuePair.4729"* %64, %"struct.WTF::KeyValuePair.4729"* %60
  %66 = bitcast %"struct.WTF::KeyValuePair.4729"* %62 to i64*
  %67 = load i64, i64* %66, align 8
  switch i64 %67, label %70 [
    i64 -1, label %68
    i64 0, label %68
  ]

68:                                               ; preds = %58, %58
  %69 = bitcast %"struct.WTF::KeyValuePair.4729"* %64 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 16, i1 false)
  br label %77

70:                                               ; preds = %58
  %71 = bitcast %"struct.WTF::KeyValuePair.4729"* %64 to i64*
  store i64 %67, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %45, i64 %59, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %61, i64 %59, i32 1
  %74 = bitcast %"class.blink::Member.4589"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.4589"* %72 to i64*
  store i64 %75, i64* %76, align 8
  br label %77

77:                                               ; preds = %68, %70
  %78 = add nuw nsw i64 %59, 1
  %79 = icmp eq i64 %78, %43
  br i1 %79, label %47, label %58

80:                                               ; preds = %34, %30, %55
  %81 = phi %"struct.WTF::KeyValuePair.4729"* [ %57, %55 ], [ null, %30 ], [ null, %34 ]
  ret %"struct.WTF::KeyValuePair.4729"* %81
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.4729"* @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE8RehashToEPS9_jSK_(%"class.WTF::HashTable.4727"*, %"struct.WTF::KeyValuePair.4729"*, i32, %"struct.WTF::KeyValuePair.4729"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.4727", align 8
  %6 = bitcast %"class.WTF::HashTable.4727"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.4727"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.4729"* %1, %"struct.WTF::KeyValuePair.4729"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %18

15:                                               ; preds = %4
  %16 = ptrtoint %"struct.WTF::KeyValuePair.4729"* %1 to i64
  %17 = bitcast %"struct.WTF::KeyValuePair.4729"* %1 to i8*
  br label %25

18:                                               ; preds = %4
  %19 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 0
  %20 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %19, align 8
  br label %57

21:                                               ; preds = %82
  %22 = bitcast %"class.WTF::HashTable.4727"* %5 to i8**
  %23 = load i8*, i8** %22, align 8
  %24 = ptrtoint i8* %23 to i64
  br label %25

25:                                               ; preds = %15, %21
  %26 = phi i64 [ %16, %15 ], [ %24, %21 ]
  %27 = phi i32 [ 0, %15 ], [ %83, %21 ]
  %28 = phi i8* [ %17, %15 ], [ %23, %21 ]
  %29 = phi %"struct.WTF::KeyValuePair.4729"* [ null, %15 ], [ %85, %21 ]
  %30 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %31 = icmp eq i32 %30, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %25
  %33 = bitcast %"class.WTF::HashTable.4727"* %5 to i64*
  br label %38

34:                                               ; preds = %25
  call void @_ZN5blink14MarkingVisitor17RetraceObjectSlowEPKv(i8* %28) #16
  %35 = load i32, i32* %12, align 8
  %36 = bitcast %"class.WTF::HashTable.4727"* %5 to i64*
  %37 = load i64, i64* %36, align 8
  br label %38

38:                                               ; preds = %32, %34
  %39 = phi i64* [ %33, %32 ], [ %36, %34 ]
  %40 = phi i64 [ %26, %32 ], [ %37, %34 ]
  %41 = phi i32 [ %27, %32 ], [ %35, %34 ]
  %42 = bitcast %"class.WTF::HashTable.4727"* %0 to i64*
  %43 = load i64, i64* %42, align 8
  store atomic i64 %40, i64* %42 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %49, label %46

46:                                               ; preds = %38
  %47 = inttoptr i64 %40 to i8*
  %48 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %47) #16
  br label %49

49:                                               ; preds = %38, %46
  store i32 %2, i32* %12, align 8
  store i64 %43, i64* %39, align 8
  store i32 %41, i32* %8, align 8
  %50 = icmp eq i64 %43, 0
  br i1 %50, label %53, label %51

51:                                               ; preds = %49
  %52 = inttoptr i64 %43 to i8*
  call void @_ZN5blink13HeapAllocator11BackingFreeEPv(i8* nonnull %52) #16
  store atomic i64 0, i64* %39 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %53

53:                                               ; preds = %49, %51
  %54 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 3
  %55 = load i32, i32* %54, align 8
  %56 = and i32 %55, -2147483648
  store i32 %56, i32* %54, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.4729"* %29

57:                                               ; preds = %18, %82
  %58 = phi i32 [ %13, %18 ], [ %83, %82 ]
  %59 = phi %"struct.WTF::KeyValuePair.4729"* [ %20, %18 ], [ %84, %82 ]
  %60 = phi %"struct.WTF::KeyValuePair.4729"* [ null, %18 ], [ %85, %82 ]
  %61 = phi i32 [ 0, %18 ], [ %86, %82 ]
  %62 = zext i32 %61 to i64
  %63 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %59, i64 %62
  %64 = bitcast %"struct.WTF::KeyValuePair.4729"* %63 to i64*
  %65 = load i64, i64* %64, align 8
  switch i64 %65, label %66 [
    i64 -1, label %82
    i64 0, label %82
  ]

66:                                               ; preds = %57
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %63, i64 0, i32 0
  %68 = call { %"struct.WTF::KeyValuePair.4729"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.4727"* nonnull %5, %"class.blink::Member.3984"* dereferenceable(8) %67) #16
  %69 = extractvalue { %"struct.WTF::KeyValuePair.4729"*, i8 } %68, 0
  %70 = load i64, i64* %64, align 8
  %71 = bitcast %"struct.WTF::KeyValuePair.4729"* %69 to i64*
  store i64 %70, i64* %71, align 8
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %69, i64 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %59, i64 %62, i32 1
  %74 = bitcast %"class.blink::Member.4589"* %73 to i64*
  %75 = load i64, i64* %74, align 8
  %76 = bitcast %"class.blink::Member.4589"* %72 to i64*
  store i64 %75, i64* %76, align 8
  %77 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %19, align 8
  %78 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %77, i64 %62
  %79 = icmp eq %"struct.WTF::KeyValuePair.4729"* %78, %3
  %80 = select i1 %79, %"struct.WTF::KeyValuePair.4729"* %69, %"struct.WTF::KeyValuePair.4729"* %60
  %81 = load i32, i32* %12, align 8
  br label %82

82:                                               ; preds = %57, %57, %66
  %83 = phi i32 [ %58, %57 ], [ %81, %66 ], [ %58, %57 ]
  %84 = phi %"struct.WTF::KeyValuePair.4729"* [ %59, %57 ], [ %77, %66 ], [ %59, %57 ]
  %85 = phi %"struct.WTF::KeyValuePair.4729"* [ %60, %57 ], [ %80, %66 ], [ %60, %57 ]
  %86 = add i32 %61, 1
  %87 = icmp eq i32 %86, %83
  br i1 %87, label %21, label %57
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::HeapHashTableBacking.5382"* @_ZN5blink25MakeGarbageCollectedTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE4CallEm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp eq i64 %0, 0
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 0) #16
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 0) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([18 x i8], [18 x i8]* @.str.31, i64 0, i64 0), i8* %11, i8* %12) #16
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([97 x i8], [97 x i8]* @.str.32, i64 0, i64 0), i32 77, %"class.logging::CheckOpResult"* nonnull %3) #16
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #16
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  %20 = shl i64 %0, 4
  %21 = call i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS1_12KeyValuePairIS6_NS3_INS_12CSSStyleRuleEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64 %20)
  %22 = bitcast i8* %21 to %"class.blink::HeapHashTableBacking.5382"*
  %23 = getelementptr inbounds i8, i8* %21, i64 -4
  %24 = bitcast i8* %23 to i16*
  %25 = load atomic i16, i16* %24 monotonic, align 2
  %26 = or i16 %25, 1
  store atomic i16 %26, i16* %24 release, align 2
  ret %"class.blink::HeapHashTableBacking.5382"* %22
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS1_12KeyValuePairIS6_NS3_INS_12CSSStyleRuleEEEEENS1_24KeyValuePairKeyExtractorENS1_10MemberHashIS5_EENS1_18HashMapValueTraitsINS1_10HashTraitsIS6_EENSF_IS9_EEEESG_NS_13HeapAllocatorEEEE14AllocateObjectISL_EEPvm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #16
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !3

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #16
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %15 = icmp eq i32 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %8
  %17 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %18 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %17, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #16
  br label %19

19:                                               ; preds = %8, %16
  %20 = phi i32 [ %14, %8 ], [ %18, %16 ]
  %21 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 5, i32 %20, i8* getelementptr inbounds ([514 x i8], [514 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink20HeapHashTableBackingINS_9HashTableINS1_6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS7_NS4_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS1_13HeapAllocatorEEEEEEEPKcv, i64 0, i64 0))
  ret i8* %21
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE5TraceILNS2_16WeakHandlingFlagE0EEEvPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  tail call void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberIKNS3_9StyleRuleEEENS_12KeyValuePairIS7_NS4_INS3_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"* %0, i8* %1) #16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_20HeapHashTableBackingIN3WTF9HashTableINS_6MemberIKNS_9StyleRuleEEENS2_12KeyValuePairIS7_NS4_INS_12CSSStyleRuleEEEEENS2_24KeyValuePairKeyExtractorENS2_10MemberHashIS6_EENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSG_ISA_EEEESH_NS_13HeapAllocatorEEEEEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.35, i64 0, i64 0), i8 1 }
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF38TraceHashTableBackingInCollectionTraitILNS_16WeakHandlingFlagE0ENS_9HashTableIN5blink6MemberIKNS3_9StyleRuleEEENS_12KeyValuePairIS7_NS4_INS3_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS6_EENS_18HashMapValueTraitsINS_10HashTraitsIS7_EENSG_ISA_EEEESH_NS3_13HeapAllocatorEEEE5TraceEPNS3_7VisitorEPKv(%"class.blink::Visitor"*, i8*) local_unnamed_addr #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"struct.WTF::KeyValuePair.4729"*
  %4 = getelementptr inbounds i8, i8* %1, i64 -2
  %5 = bitcast i8* %4 to i16*
  %6 = load i16, i16* %5, align 2
  %7 = lshr i16 %6, 2
  %8 = icmp eq i16 %7, 0
  br i1 %8, label %9, label %17, !prof !3

9:                                                ; preds = %2
  %10 = getelementptr inbounds i8, i8* %1, i64 -8
  %11 = ptrtoint i8* %10 to i64
  %12 = and i64 %11, -131072
  %13 = inttoptr i64 %12 to i8*
  %14 = getelementptr inbounds i8, i8* %13, i64 4144
  %15 = bitcast i8* %14 to i64*
  %16 = load i64, i64* %15, align 16
  br label %20

17:                                               ; preds = %2
  %18 = zext i16 %7 to i64
  %19 = shl nuw nsw i64 %18, 3
  br label %20

20:                                               ; preds = %9, %17
  %21 = phi i64 [ %16, %9 ], [ %19, %17 ]
  %22 = add i64 %21, -8
  %23 = lshr i64 %22, 4
  %24 = bitcast %"class.blink::Visitor"* %0 to i1 (%"class.blink::Visitor"*)***
  %25 = load i1 (%"class.blink::Visitor"*)**, i1 (%"class.blink::Visitor"*)*** %24, align 8
  %26 = getelementptr inbounds i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %25, i64 3
  %27 = load i1 (%"class.blink::Visitor"*)*, i1 (%"class.blink::Visitor"*)** %26, align 8
  %28 = tail call zeroext i1 %27(%"class.blink::Visitor"* %0) #16
  %29 = icmp eq i64 %23, 0
  br i1 %29, label %32, label %30

30:                                               ; preds = %20
  %31 = bitcast %"class.blink::Visitor"* %0 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  br label %33

32:                                               ; preds = %75, %20
  ret void

33:                                               ; preds = %75, %30
  %34 = phi i64 [ 0, %30 ], [ %76, %75 ]
  %35 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %3, i64 %34
  %36 = bitcast %"struct.WTF::KeyValuePair.4729"* %35 to i64*
  br i1 %28, label %37, label %54

37:                                               ; preds = %33
  %38 = load atomic i64, i64* %36 monotonic, align 8
  switch i64 %38, label %39 [
    i64 -1, label %75
    i64 0, label %75
  ]

39:                                               ; preds = %37
  %40 = inttoptr i64 %38 to %"class.blink::StyleRule"*
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %3, i64 %34, i32 1
  %42 = bitcast %"class.blink::Member.4589"* %41 to i64*
  %43 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %40, i64 0, i32 0, i32 0
  %44 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %45 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, i64 5
  %46 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %45, align 8
  tail call void %46(%"class.blink::Visitor"* %0, i8* %43, i8* %43, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  %47 = load atomic i64, i64* %42 monotonic, align 8
  %48 = icmp eq i64 %47, 0
  br i1 %48, label %75, label %49

49:                                               ; preds = %39
  %50 = inttoptr i64 %47 to i8*
  %51 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %52 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %51, i64 5
  %53 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %52, align 8
  tail call void %53(%"class.blink::Visitor"* %0, i8* nonnull %50, i8* nonnull %50, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %75

54:                                               ; preds = %33
  %55 = load i64, i64* %36, align 8
  switch i64 %55, label %56 [
    i64 -1, label %75
    i64 0, label %75
  ]

56:                                               ; preds = %54
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %3, i64 %34, i32 1
  %58 = load atomic i64, i64* %36 monotonic, align 8
  %59 = icmp eq i64 %58, 0
  br i1 %59, label %66, label %60

60:                                               ; preds = %56
  %61 = inttoptr i64 %58 to %"class.blink::StyleRule"*
  %62 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %61, i64 0, i32 0, i32 0
  %63 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %64 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %63, i64 5
  %65 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %64, align 8
  tail call void %65(%"class.blink::Visitor"* %0, i8* %62, i8* %62, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %66

66:                                               ; preds = %60, %56
  %67 = bitcast %"class.blink::Member.4589"* %57 to i64*
  %68 = load atomic i64, i64* %67 monotonic, align 8
  %69 = icmp eq i64 %68, 0
  br i1 %69, label %75, label %70

70:                                               ; preds = %66
  %71 = inttoptr i64 %68 to i8*
  %72 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %31, align 8
  %73 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %72, i64 5
  %74 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %73, align 8
  tail call void %74(%"class.blink::Visitor"* %0, i8* nonnull %71, i8* nonnull %71, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %75

75:                                               ; preds = %54, %54, %37, %37, %70, %66, %39, %49
  %76 = add nuw nsw i64 %34, 1
  %77 = icmp eq i64 %76, %23
  br i1 %77, label %32, label %33
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleRuleBase"*
  tail call void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink13StyleRuleBase5TraceEPNS_7VisitorE(%"class.blink::StyleRuleBase"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.4729"*, i8 } @_ZN3WTF9HashTableIN5blink6MemberIKNS1_9StyleRuleEEENS_12KeyValuePairIS5_NS2_INS1_12CSSStyleRuleEEEEENS_24KeyValuePairKeyExtractorENS_10MemberHashIS4_EENS_18HashMapValueTraitsINS_10HashTraitsIS5_EENSE_IS8_EEEESF_NS1_13HeapAllocatorEE16LookupForWritingERKS5_(%"class.WTF::HashTable.4727"*, %"class.blink::Member.3984"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.4729"*, %"struct.WTF::KeyValuePair.4729"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.4727", %"class.WTF::HashTable.4727"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = bitcast %"class.blink::Member.3984"* %1 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = shl i64 %10, 32
  %12 = xor i64 %11, -1
  %13 = add i64 %10, %12
  %14 = lshr i64 %13, 22
  %15 = xor i64 %14, %13
  %16 = shl i64 %15, 13
  %17 = xor i64 %16, -1
  %18 = add i64 %15, %17
  %19 = lshr i64 %18, 8
  %20 = xor i64 %19, %18
  %21 = mul i64 %20, 9
  %22 = lshr i64 %21, 15
  %23 = xor i64 %22, %21
  %24 = shl i64 %23, 27
  %25 = xor i64 %24, -1
  %26 = add i64 %23, %25
  %27 = lshr i64 %26, 31
  %28 = xor i64 %27, %26
  %29 = trunc i64 %28 to i32
  %30 = and i32 %7, %29
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %4, i64 %31
  %33 = ptrtoint %"struct.WTF::KeyValuePair.4729"* %32 to i64
  %34 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %32, i64 0, i32 0, i32 0, i32 0
  %35 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %34, align 8
  %36 = icmp eq %"class.blink::StyleRule"* %35, null
  %37 = inttoptr i64 %10 to %"class.blink::StyleRule"*
  br i1 %36, label %55, label %38

38:                                               ; preds = %2
  %39 = xor i32 %29, -1
  %40 = lshr i32 %29, 23
  %41 = add i32 %40, %39
  %42 = shl i32 %41, 12
  %43 = xor i32 %42, %41
  %44 = lshr i32 %43, 7
  %45 = xor i32 %44, %43
  %46 = shl i32 %45, 2
  %47 = xor i32 %46, %45
  %48 = lshr i32 %47, 20
  %49 = xor i32 %48, %47
  %50 = or i32 %49, 1
  %51 = zext i32 %50 to i64
  br label %61

52:                                               ; preds = %70
  %53 = ptrtoint %"struct.WTF::KeyValuePair.4729"* %77 to i64
  %54 = inttoptr i64 %72 to %"struct.WTF::KeyValuePair.4729"*
  br label %55

55:                                               ; preds = %52, %2
  %56 = phi i64 [ %53, %52 ], [ %33, %2 ]
  %57 = phi %"struct.WTF::KeyValuePair.4729"* [ %54, %52 ], [ null, %2 ]
  %58 = icmp eq %"struct.WTF::KeyValuePair.4729"* %57, null
  %59 = ptrtoint %"struct.WTF::KeyValuePair.4729"* %57 to i64
  %60 = select i1 %58, i64 %56, i64 %59
  br label %82

61:                                               ; preds = %70, %38
  %62 = phi i64 [ 0, %38 ], [ %72, %70 ]
  %63 = phi %"class.blink::StyleRule"* [ %35, %38 ], [ %80, %70 ]
  %64 = phi i64 [ %33, %38 ], [ %78, %70 ]
  %65 = phi i64 [ %31, %38 ], [ %76, %70 ]
  %66 = phi i64 [ 0, %38 ], [ %74, %70 ]
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %4, i64 %65, i32 0, i32 0, i32 0
  %68 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %67, align 8
  %69 = icmp eq %"class.blink::StyleRule"* %68, %37
  br i1 %69, label %82, label %70

70:                                               ; preds = %61
  %71 = icmp eq %"class.blink::StyleRule"* %63, inttoptr (i64 -1 to %"class.blink::StyleRule"*)
  %72 = select i1 %71, i64 %64, i64 %62
  %73 = icmp eq i64 %66, 0
  %74 = select i1 %73, i64 %51, i64 %66
  %75 = add i64 %74, %65
  %76 = and i64 %75, %8
  %77 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %4, i64 %76
  %78 = ptrtoint %"struct.WTF::KeyValuePair.4729"* %77 to i64
  %79 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %77, i64 0, i32 0, i32 0, i32 0
  %80 = load %"class.blink::StyleRule"*, %"class.blink::StyleRule"** %79, align 8
  %81 = icmp eq %"class.blink::StyleRule"* %80, null
  br i1 %81, label %52, label %61

82:                                               ; preds = %61, %55
  %83 = phi i64 [ %60, %55 ], [ %64, %61 ]
  %84 = phi i8 [ 0, %55 ], [ 1, %61 ]
  %85 = inttoptr i64 %83 to %"struct.WTF::KeyValuePair.4729"*
  %86 = insertvalue { %"struct.WTF::KeyValuePair.4729"*, i8 } undef, %"struct.WTF::KeyValuePair.4729"* %85, 0
  %87 = insertvalue { %"struct.WTF::KeyValuePair.4729"*, i8 } %86, i8 %84, 1
  ret { %"struct.WTF::KeyValuePair.4729"*, i8 } %87
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink13HeapAllocator15NotifyNewObjectIN3WTF12KeyValuePairINS_6MemberIKNS_9StyleRuleEEENS4_INS_12CSSStyleRuleEEEEENS2_18HashMapValueTraitsINS2_10HashTraitsIS7_EENSC_IS9_EEEEEEvPT_(%"struct.WTF::KeyValuePair.4729"*) local_unnamed_addr #0 comdat align 2 {
  %2 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %3 = icmp eq i32 %2, 0
  br i1 %3, label %49, label %4

4:                                                ; preds = %1
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #16
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !3

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #16
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #16
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 9
  %16 = load i8, i8* %15, align 1, !range !4
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %49, label %18

18:                                               ; preds = %11
  %19 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 13
  %20 = load i64, i64* %19, align 8
  %21 = add i64 %20, 1
  store i64 %21, i64* %19, align 8
  %22 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %14, i64 0, i32 24, i32 4, i32 0, i32 0, i32 0
  %23 = load %"class.blink::MarkingVisitor"*, %"class.blink::MarkingVisitor"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::MarkingVisitor", %"class.blink::MarkingVisitor"* %23, i64 0, i32 0, i32 0
  %25 = getelementptr inbounds %"struct.WTF::KeyValuePair.4729", %"struct.WTF::KeyValuePair.4729"* %0, i64 0, i32 1
  %26 = bitcast %"struct.WTF::KeyValuePair.4729"* %0 to i64*
  %27 = load atomic i64, i64* %26 monotonic, align 8
  %28 = icmp eq i64 %27, 0
  br i1 %28, label %36, label %29

29:                                               ; preds = %18
  %30 = inttoptr i64 %27 to %"class.blink::StyleRule"*
  %31 = getelementptr inbounds %"class.blink::StyleRule", %"class.blink::StyleRule"* %30, i64 0, i32 0, i32 0
  %32 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %33 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %32, align 8
  %34 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %33, i64 5
  %35 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %34, align 8
  tail call void %35(%"class.blink::Visitor"* %24, i8* %31, i8* %31, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_9StyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %36

36:                                               ; preds = %18, %29
  %37 = bitcast %"class.blink::Member.4589"* %25 to i64*
  %38 = load atomic i64, i64* %37 monotonic, align 8
  %39 = icmp eq i64 %38, 0
  br i1 %39, label %46, label %40

40:                                               ; preds = %36
  %41 = inttoptr i64 %38 to i8*
  %42 = bitcast %"class.blink::MarkingVisitor"* %23 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %43 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %43, i64 5
  %45 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %44, align 8
  tail call void %45(%"class.blink::Visitor"* %24, i8* nonnull %41, i8* %41, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_12CSSStyleRuleEE5TraceEPNS_7VisitorEPKv) #16
  br label %46

46:                                               ; preds = %36, %40
  %47 = load i64, i64* %19, align 8
  %48 = add i64 %47, -1
  store i64 %48, i64* %19, align 8
  br label %49

49:                                               ; preds = %1, %11, %46
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrIN5blink8protocol3CSS9RuleUsageENS_14default_deleteIS5_EEEENS_9allocatorIS8_EEE24__emplace_back_slow_pathIJS8_EEEvDpOT_(%"class.std::__1::vector.4704"*, %"class.std::__1::unique_ptr.4706"* dereferenceable(8)) local_unnamed_addr #4 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.4704", %"class.std::__1::vector.4704"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.4706"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.4704"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.4704"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #19
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.4704", %"class.std::__1::vector.4704"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.4706"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #19
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #18
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.4706"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.4706"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.4706"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.4706"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.4706"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.4706"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.4704", %"class.std::__1::vector.4704"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.4706"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.4706"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %"class.blink::protocol::CSS::RuleUsage"** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.4706"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.4706"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.4706"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.4706"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !93

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.4706"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.4706"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.4706"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.4706"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.4706"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.4706"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.4706"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.4706"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.4706"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.4706"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.4706"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.4706"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.4706"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.4706"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.4706"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.4706"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.4706"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.4706"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.4706"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.4706"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.4706"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.4706"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.4706"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.4706"*, %"class.std::__1::unique_ptr.4706"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.4706"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.4706"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.4706"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.4706"*
  %138 = icmp eq %"class.std::__1::unique_ptr.4706"* %133, %137
  br i1 %138, label %152, label %139

139:                                              ; preds = %132, %150
  %140 = phi %"class.std::__1::unique_ptr.4706"* [ %141, %150 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.4706", %"class.std::__1::unique_ptr.4706"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %"class.blink::protocol::CSS::RuleUsage"*, %"class.blink::protocol::CSS::RuleUsage"** %142, align 8
  store %"class.blink::protocol::CSS::RuleUsage"* null, %"class.blink::protocol::CSS::RuleUsage"** %142, align 8
  %144 = icmp eq %"class.blink::protocol::CSS::RuleUsage"* %143, null
  br i1 %144, label %150, label %145

145:                                              ; preds = %139
  %146 = bitcast %"class.blink::protocol::CSS::RuleUsage"* %143 to void (%"class.blink::protocol::CSS::RuleUsage"*)***
  %147 = load void (%"class.blink::protocol::CSS::RuleUsage"*)**, void (%"class.blink::protocol::CSS::RuleUsage"*)*** %146, align 8
  %148 = getelementptr inbounds void (%"class.blink::protocol::CSS::RuleUsage"*)*, void (%"class.blink::protocol::CSS::RuleUsage"*)** %147, i64 2
  %149 = load void (%"class.blink::protocol::CSS::RuleUsage"*)*, void (%"class.blink::protocol::CSS::RuleUsage"*)** %148, align 8
  tail call void %149(%"class.blink::protocol::CSS::RuleUsage"* nonnull %143) #16
  br label %150

150:                                              ; preds = %145, %139
  %151 = icmp eq %"class.std::__1::unique_ptr.4706"* %141, %137
  br i1 %151, label %152, label %139

152:                                              ; preds = %150, %132
  %153 = icmp eq i64 %135, 0
  br i1 %153, label %156, label %154

154:                                              ; preds = %152
  %155 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %155) #18
  br label %156

156:                                              ; preds = %152, %154
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E5clearEv(%"class.WTF::HashTable.3318"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 0
  %3 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %2, align 8
  %4 = icmp eq %"struct.WTF::KeyValuePair.3321"* %3, null
  br i1 %4, label %79, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %75, label %9

9:                                                ; preds = %5
  %10 = zext i32 %7 to i64
  br label %11

11:                                               ; preds = %72, %9
  %12 = phi i64 [ 0, %9 ], [ %73, %72 ]
  %13 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %3, i64 %12
  %14 = bitcast %"struct.WTF::KeyValuePair.3321"* %13 to i8**
  %15 = load i8*, i8** %14, align 8
  %16 = icmp eq i8* %15, inttoptr (i64 -1 to i8*)
  br i1 %16, label %72, label %17

17:                                               ; preds = %11
  %18 = bitcast i8* %15 to %"class.WTF::StringImpl"*
  %19 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %3, i64 %12, i32 1, i32 0, i32 0
  %20 = load %"class.WTF::String"*, %"class.WTF::String"** %19, align 8
  %21 = icmp eq %"class.WTF::String"* %20, null
  br i1 %21, label %56, label %22, !prof !2

22:                                               ; preds = %17
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %3, i64 %12, i32 1, i32 0, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = icmp eq i32 %24, 0
  br i1 %25, label %52, label %26

26:                                               ; preds = %22
  %27 = zext i32 %24 to i64
  br label %28

28:                                               ; preds = %49, %26
  %29 = phi i64 [ 0, %26 ], [ %50, %49 ]
  %30 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %20, i64 %29
  %31 = bitcast %"class.WTF::String"* %30 to i8**
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast i8* %32 to %"class.WTF::StringImpl"*
  %34 = ptrtoint i8* %32 to i64
  switch i64 %34, label %35 [
    i64 -1, label %49
    i64 0, label %49
  ]

35:                                               ; preds = %28
  %36 = getelementptr inbounds i8, i8* %32, i64 8
  %37 = bitcast i8* %36 to i32*
  %38 = load atomic i32, i32* %37 monotonic, align 4
  %39 = and i32 %38, 2
  %40 = icmp eq i32 %39, 0
  %41 = bitcast i8* %32 to i32*
  %42 = load i32, i32* %41, align 4
  br i1 %40, label %43, label %45

43:                                               ; preds = %35
  %44 = add i32 %42, -1
  store i32 %44, i32* %41, align 4
  br label %45

45:                                               ; preds = %43, %35
  %46 = phi i32 [ %44, %43 ], [ %42, %35 ]
  %47 = icmp eq i32 %46, 0
  br i1 %47, label %48, label %49

48:                                               ; preds = %45
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #16
  br label %49

49:                                               ; preds = %48, %45, %28, %28
  %50 = add nuw nsw i64 %29, 1
  %51 = icmp eq i64 %50, %27
  br i1 %51, label %52, label %28

52:                                               ; preds = %49, %22
  %53 = bitcast %"class.WTF::String"* %20 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %53) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %19, align 8
  %54 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %13, i64 0, i32 0, i32 0, i32 0
  %55 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %54, align 8
  br label %56

56:                                               ; preds = %52, %17
  %57 = phi %"class.WTF::StringImpl"* [ %55, %52 ], [ %18, %17 ]
  %58 = icmp eq %"class.WTF::StringImpl"* %57, null
  br i1 %58, label %72, label %59

59:                                               ; preds = %56
  %60 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %61 = load atomic i32, i32* %60 monotonic, align 4
  %62 = and i32 %61, 2
  %63 = icmp eq i32 %62, 0
  %64 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %57, i64 0, i32 0
  %65 = load i32, i32* %64, align 4
  br i1 %63, label %66, label %68

66:                                               ; preds = %59
  %67 = add i32 %65, -1
  store i32 %67, i32* %64, align 4
  br label %68

68:                                               ; preds = %66, %59
  %69 = phi i32 [ %67, %66 ], [ %65, %59 ]
  %70 = icmp eq i32 %69, 0
  br i1 %70, label %71, label %72

71:                                               ; preds = %68
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %57) #16
  br label %72

72:                                               ; preds = %71, %68, %56, %11
  %73 = add nuw nsw i64 %12, 1
  %74 = icmp eq i64 %73, %10
  br i1 %74, label %75, label %11

75:                                               ; preds = %72, %5
  %76 = bitcast %"struct.WTF::KeyValuePair.3321"* %3 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %76) #16
  %77 = bitcast %"class.WTF::HashTable.3318"* %0 to i64*
  store atomic i64 0, i64* %77 monotonic, align 8
  store i32 0, i32* %6, align 8
  %78 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 2
  store i32 0, i32* %78, align 4
  br label %79

79:                                               ; preds = %1, %75
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"* } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E4findERKS1_(%"class.WTF::HashTable.3318"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.3321"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #16
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.3321"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.3321"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #16
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.3321"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.3321"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.3321"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"* } undef, %"struct.WTF::KeyValuePair.3321"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"* } %77, %"struct.WTF::KeyValuePair.3321"* %76, 1
  ret { %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"* } %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_S1_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2528"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2528"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %70, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %115, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %70, label %73

70:                                               ; preds = %24, %68
  %71 = phi %"class.WTF::String"* [ %64, %68 ], [ %28, %24 ]
  %72 = bitcast %"class.WTF::String"* %71 to i64*
  br label %81

73:                                               ; preds = %68
  %74 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %74, align 8
  %75 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 3
  %76 = load i32, i32* %75, align 8
  %77 = add i32 %76, 2147483647
  %78 = and i32 %77, 2147483647
  %79 = and i32 %76, -2147483648
  %80 = or i32 %78, %79
  store i32 %80, i32* %75, align 8
  br label %81

81:                                               ; preds = %70, %73
  %82 = phi i64* [ %72, %70 ], [ %74, %73 ]
  %83 = phi %"class.WTF::String"* [ %71, %70 ], [ %59, %73 ]
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %85 = bitcast %"class.WTF::String"* %2 to i64*
  %86 = load i64, i64* %85, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %84, align 8
  %87 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %83, i64 0, i32 0, i32 0
  %88 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %87, align 8
  store i64 %86, i64* %82, align 8
  %89 = icmp eq %"class.WTF::StringImpl"* %88, null
  br i1 %89, label %103, label %90

90:                                               ; preds = %81
  %91 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load atomic i32, i32* %91 monotonic, align 4
  %93 = and i32 %92, 2
  %94 = icmp eq i32 %93, 0
  %95 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %88, i64 0, i32 0
  %96 = load i32, i32* %95, align 4
  br i1 %94, label %97, label %99

97:                                               ; preds = %90
  %98 = add i32 %96, -1
  store i32 %98, i32* %95, align 4
  br label %99

99:                                               ; preds = %97, %90
  %100 = phi i32 [ %98, %97 ], [ %96, %90 ]
  %101 = icmp eq i32 %100, 0
  br i1 %101, label %102, label %103

102:                                              ; preds = %99
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %88) #16
  br label %103

103:                                              ; preds = %81, %99, %102
  %104 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 2
  %105 = load i32, i32* %104, align 4
  %106 = add i32 %105, 1
  store i32 %106, i32* %104, align 4
  %107 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 3
  %108 = load i32, i32* %107, align 8
  %109 = add i32 %108, %106
  %110 = shl i32 %109, 1
  %111 = load i32, i32* %12, align 8
  %112 = icmp ult i32 %110, %111
  br i1 %112, label %115, label %113

113:                                              ; preds = %103
  %114 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2528"* %0, %"class.WTF::String"* %83)
  br label %115

115:                                              ; preds = %55, %103, %113
  %116 = phi i8 [ 1, %103 ], [ 1, %113 ], [ 0, %55 ]
  %117 = phi %"class.WTF::String"* [ %83, %103 ], [ %114, %113 ], [ %48, %55 ]
  %118 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %117, 0
  %119 = insertvalue { %"class.WTF::String"*, i8 } %118, i8 %116, 1
  ret { %"class.WTF::String"*, i8 } %119
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2528"*, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 3
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to %"class.WTF::String"*
  %37 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2528"* %0, %"class.WTF::String"* %36, i32 %32, %"class.WTF::String"* %1) #16
  ret %"class.WTF::String"* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2528"*, %"class.WTF::String"*, i32, %"class.WTF::String"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.2528", align 8
  %6 = bitcast %"class.WTF::HashTable.2528"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.2528"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"class.WTF::String"* %1, %"class.WTF::String"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"class.WTF::String"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.2528"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.2528"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %23 = ptrtoint %"class.WTF::String"* %22 to i64
  br label %71

24:                                               ; preds = %110
  %25 = bitcast %"class.WTF::HashTable.2528"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.2528"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %111, %24 ]
  %33 = phi %"class.WTF::String"* [ null, %16 ], [ %114, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %112, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  %35 = inttoptr i64 %32 to %"class.WTF::String"*
  %36 = icmp eq i64 %32, 0
  br i1 %36, label %67, label %37

37:                                               ; preds = %28
  %38 = icmp eq i32 %34, 0
  br i1 %38, label %65, label %39

39:                                               ; preds = %37
  %40 = zext i32 %34 to i64
  br label %41

41:                                               ; preds = %62, %39
  %42 = phi i64 [ 0, %39 ], [ %63, %62 ]
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 %42
  %44 = bitcast %"class.WTF::String"* %43 to i8**
  %45 = load i8*, i8** %44, align 8
  %46 = bitcast i8* %45 to %"class.WTF::StringImpl"*
  %47 = ptrtoint i8* %45 to i64
  switch i64 %47, label %48 [
    i64 -1, label %62
    i64 0, label %62
  ]

48:                                               ; preds = %41
  %49 = getelementptr inbounds i8, i8* %45, i64 8
  %50 = bitcast i8* %49 to i32*
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = bitcast i8* %45 to i32*
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %48
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %48
  %59 = phi i32 [ %57, %56 ], [ %55, %48 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %46) #16
  br label %62

62:                                               ; preds = %61, %58, %41, %41
  %63 = add nuw nsw i64 %42, 1
  %64 = icmp eq i64 %63, %40
  br i1 %64, label %65, label %41

65:                                               ; preds = %62, %37
  %66 = inttoptr i64 %32 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %66) #16
  store atomic i64 0, i64* %29 monotonic, align 8
  store i32 0, i32* %8, align 8
  store i32 0, i32* %9, align 4
  br label %67

67:                                               ; preds = %28, %65
  %68 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 3
  %69 = load i32, i32* %68, align 8
  %70 = and i32 %69, -2147483648
  store i32 %70, i32* %68, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"class.WTF::String"* %33

71:                                               ; preds = %21, %110
  %72 = phi i64 [ %111, %110 ], [ %23, %21 ]
  %73 = phi i32 [ %112, %110 ], [ %13, %21 ]
  %74 = phi %"class.WTF::String"* [ %113, %110 ], [ %22, %21 ]
  %75 = phi %"class.WTF::String"* [ %114, %110 ], [ null, %21 ]
  %76 = phi i32 [ %115, %110 ], [ 0, %21 ]
  %77 = zext i32 %76 to i64
  %78 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %74, i64 %77
  %79 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %78, i64 0, i32 0, i32 0
  %80 = bitcast %"class.WTF::String"* %78 to i64*
  %81 = load i64, i64* %80, align 8
  switch i64 %81, label %82 [
    i64 -1, label %110
    i64 0, label %110
  ]

82:                                               ; preds = %71
  %83 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2528"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %78) #16
  %84 = extractvalue { %"class.WTF::String"*, i8 } %83, 0
  %85 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %84, i64 0, i32 0, i32 0
  %86 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %85, align 8
  %87 = icmp eq %"class.WTF::StringImpl"* %86, null
  br i1 %87, label %101, label %88

88:                                               ; preds = %82
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %90 = load atomic i32, i32* %89 monotonic, align 4
  %91 = and i32 %90, 2
  %92 = icmp eq i32 %91, 0
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %86, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  br i1 %92, label %95, label %97

95:                                               ; preds = %88
  %96 = add i32 %94, -1
  store i32 %96, i32* %93, align 4
  br label %97

97:                                               ; preds = %95, %88
  %98 = phi i32 [ %96, %95 ], [ %94, %88 ]
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %101

100:                                              ; preds = %97
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %86) #16
  br label %101

101:                                              ; preds = %82, %97, %100
  %102 = load i64, i64* %80, align 8
  %103 = bitcast %"class.WTF::String"* %84 to i64*
  store i64 %102, i64* %103, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %79, align 8
  %104 = load %"class.WTF::String"*, %"class.WTF::String"** %15, align 8
  %105 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %104, i64 %77
  %106 = icmp eq %"class.WTF::String"* %105, %3
  %107 = select i1 %106, %"class.WTF::String"* %84, %"class.WTF::String"* %75
  %108 = load i32, i32* %12, align 8
  %109 = ptrtoint %"class.WTF::String"* %104 to i64
  br label %110

110:                                              ; preds = %71, %71, %101
  %111 = phi i64 [ %72, %71 ], [ %109, %101 ], [ %72, %71 ]
  %112 = phi i32 [ %73, %71 ], [ %108, %101 ], [ %73, %71 ]
  %113 = phi %"class.WTF::String"* [ %74, %71 ], [ %104, %101 ], [ %74, %71 ]
  %114 = phi %"class.WTF::String"* [ %75, %71 ], [ %107, %101 ], [ %75, %71 ]
  %115 = add i32 %76, 1
  %116 = icmp eq i32 %115, %112
  br i1 %116, label %24, label %71
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE16LookupForWritingERKS1_(%"class.WTF::HashTable.2528"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 0
  %4 = load %"class.WTF::String"*, %"class.WTF::String"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #16
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %20
  %22 = ptrtoint %"class.WTF::String"* %21 to i64
  %23 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %21, i64 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"class.WTF::String"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"class.WTF::String"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"class.WTF::String"* %44, null
  %46 = ptrtoint %"class.WTF::String"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"class.WTF::String"* [ null, %26 ], [ %62, %61 ]
  %50 = phi %"class.WTF::StringImpl"* [ %24, %26 ], [ %70, %61 ]
  %51 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %52 = phi %"class.WTF::String"* [ %21, %26 ], [ %67, %61 ]
  %53 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %54 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %55 = bitcast %"class.WTF::String"* %52 to i8**
  %56 = load i8*, i8** %55, align 8
  %57 = icmp eq i8* %56, inttoptr (i64 -1 to i8*)
  br i1 %57, label %61, label %58

58:                                               ; preds = %48
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %50, %"class.WTF::StringImpl"* %59) #16
  br i1 %60, label %72, label %61

61:                                               ; preds = %58, %48
  %62 = phi %"class.WTF::String"* [ %49, %58 ], [ %52, %48 ]
  %63 = icmp eq i64 %54, 0
  %64 = select i1 %63, i64 %39, i64 %54
  %65 = add i64 %64, %53
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 %66
  %68 = ptrtoint %"class.WTF::String"* %67 to i64
  %69 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %67, i64 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %58, %42
  %73 = phi i64 [ %47, %42 ], [ %51, %58 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %58 ]
  %75 = inttoptr i64 %73 to %"class.WTF::String"*
  %76 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %75, 0
  %77 = insertvalue { %"class.WTF::String"*, i8 } %76, i8 %74, 1
  ret { %"class.WTF::String"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3321"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6insertINS_17HashMapTranslatorISD_S4_S7_EERS1_RS8_EENS_18HashTableAddResultISE_S9_EEOT0_OT1_(%"class.WTF::HashTable.3318"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::HashSet.2527"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 0
  %5 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %4, align 8
  %6 = icmp eq %"struct.WTF::KeyValuePair.3321"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"struct.WTF::KeyValuePair.3321"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_(%"class.WTF::HashTable.3318"* %0, %"struct.WTF::KeyValuePair.3321"* null)
  %9 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"struct.WTF::KeyValuePair.3321"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %11, i64 %27
  %29 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %28, i64 0, i32 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %83, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"struct.WTF::KeyValuePair.3321"* [ %28, %32 ], [ %64, %58 ]
  %48 = phi %"struct.WTF::KeyValuePair.3321"* [ null, %32 ], [ %59, %58 ]
  %49 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %50 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %51 = bitcast %"struct.WTF::KeyValuePair.3321"* %47 to i8**
  %52 = load i8*, i8** %51, align 8
  %53 = icmp eq i8* %52, inttoptr (i64 -1 to i8*)
  br i1 %53, label %58, label %54

54:                                               ; preds = %46
  %55 = bitcast i8* %52 to %"class.WTF::StringImpl"*
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %55, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %138, label %58

58:                                               ; preds = %46, %54
  %59 = phi %"struct.WTF::KeyValuePair.3321"* [ %48, %54 ], [ %47, %46 ]
  %60 = icmp eq i64 %50, 0
  %61 = select i1 %60, i64 %45, i64 %50
  %62 = add i64 %61, %49
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %11, i64 %63
  %65 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"struct.WTF::KeyValuePair.3321"* %59, null
  br i1 %69, label %83, label %70

70:                                               ; preds = %68
  %71 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %59, i64 0, i32 1
  %72 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %59, i64 0, i32 1, i32 0, i32 1
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %59, i64 0, i32 1, i32 0, i32 2
  %74 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %59, i64 0, i32 1, i32 0, i32 3
  %75 = bitcast %"class.WTF::HashSet.2527"* %71 to i64*
  %76 = bitcast %"struct.WTF::KeyValuePair.3321"* %59 to i64*
  store i64 0, i64* %76, align 8
  store atomic i64 0, i64* %75 monotonic, align 8
  store i32 0, i32* %72, align 4
  store i32 0, i32* %73, align 4
  store i32 0, i32* %74, align 8
  %77 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 3
  %78 = load i32, i32* %77, align 8
  %79 = add i32 %78, 2147483647
  %80 = and i32 %79, 2147483647
  %81 = and i32 %78, -2147483648
  %82 = or i32 %80, %81
  store i32 %82, i32* %77, align 8
  br label %83

83:                                               ; preds = %24, %68, %70
  %84 = phi %"struct.WTF::KeyValuePair.3321"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %104, label %87

87:                                               ; preds = %83
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  br i1 %91, label %92, label %104

92:                                               ; preds = %87
  %93 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %94 = load i32, i32* %93, align 4
  %95 = zext i32 %94 to i33
  %96 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %95, i33 1) #16
  %97 = extractvalue { i33, i1 } %96, 1
  %98 = extractvalue { i33, i1 } %96, 0
  %99 = icmp slt i33 %98, 0
  %100 = or i1 %97, %99
  br i1 %100, label %101, label %102, !prof !3

101:                                              ; preds = %92
  tail call void @llvm.trap() #16
  unreachable

102:                                              ; preds = %92
  %103 = trunc i33 %98 to i32
  store i32 %103, i32* %93, align 4
  br label %104

104:                                              ; preds = %102, %87, %83
  %105 = ptrtoint %"class.WTF::StringImpl"* %85 to i64
  %106 = bitcast %"struct.WTF::KeyValuePair.3321"* %84 to i64*
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %84, i64 0, i32 0, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  store i64 %105, i64* %106, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %123, label %110

110:                                              ; preds = %104
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  %115 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %116 = load i32, i32* %115, align 4
  br i1 %114, label %117, label %119

117:                                              ; preds = %110
  %118 = add i32 %116, -1
  store i32 %118, i32* %115, align 4
  br label %119

119:                                              ; preds = %117, %110
  %120 = phi i32 [ %118, %117 ], [ %116, %110 ]
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %123

122:                                              ; preds = %119
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %108) #16
  br label %123

123:                                              ; preds = %104, %119, %122
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %84, i64 0, i32 1, i32 0
  %125 = getelementptr inbounds %"class.WTF::HashSet.2527", %"class.WTF::HashSet.2527"* %2, i64 0, i32 0
  %126 = tail call dereferenceable(24) %"class.WTF::HashTable.2528"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::HashTable.2528"* %124, %"class.WTF::HashTable.2528"* dereferenceable(24) %125) #16
  %127 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 2
  %128 = load i32, i32* %127, align 4
  %129 = add i32 %128, 1
  store i32 %129, i32* %127, align 4
  %130 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 3
  %131 = load i32, i32* %130, align 8
  %132 = add i32 %131, %129
  %133 = shl i32 %132, 1
  %134 = load i32, i32* %12, align 8
  %135 = icmp ult i32 %133, %134
  br i1 %135, label %138, label %136

136:                                              ; preds = %123
  %137 = tail call %"struct.WTF::KeyValuePair.3321"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_(%"class.WTF::HashTable.3318"* %0, %"struct.WTF::KeyValuePair.3321"* %84)
  br label %138

138:                                              ; preds = %54, %123, %136
  %139 = phi i8 [ 1, %123 ], [ 1, %136 ], [ 0, %54 ]
  %140 = phi %"struct.WTF::KeyValuePair.3321"* [ %84, %123 ], [ %137, %136 ], [ %47, %54 ]
  %141 = insertvalue { %"struct.WTF::KeyValuePair.3321"*, i8 } undef, %"struct.WTF::KeyValuePair.3321"* %140, 0
  %142 = insertvalue { %"struct.WTF::KeyValuePair.3321"*, i8 } %141, i8 %139, 1
  ret { %"struct.WTF::KeyValuePair.3321"*, i8 } %142
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3321"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E6ExpandEPS9_(%"class.WTF::HashTable.3318"*, %"struct.WTF::KeyValuePair.3321"*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 5
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([178 x i8], [178 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_12KeyValuePairINS_6StringENS_7HashSetIS2_NS_10StringHashENS_10HashTraitsIS2_EENS_18PartitionAllocatorEEEEEEEPKcv, i64 0, i64 0)) #16
  %36 = bitcast i8* %35 to %"struct.WTF::KeyValuePair.3321"*
  %37 = icmp eq i32 %32, 0
  br i1 %37, label %49, label %38

38:                                               ; preds = %31, %38
  %39 = phi i64 [ %47, %38 ], [ 0, %31 ]
  %40 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %36, i64 %39
  %41 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %36, i64 %39, i32 1
  %42 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %36, i64 %39, i32 1, i32 0, i32 1
  %43 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %36, i64 %39, i32 1, i32 0, i32 2
  %44 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %36, i64 %39, i32 1, i32 0, i32 3
  %45 = bitcast %"class.WTF::HashSet.2527"* %41 to i64*
  %46 = bitcast %"struct.WTF::KeyValuePair.3321"* %40 to i64*
  store i64 0, i64* %46, align 8
  store atomic i64 0, i64* %45 monotonic, align 8
  store i32 0, i32* %42, align 4
  store i32 0, i32* %43, align 4
  store i32 0, i32* %44, align 8
  %47 = add nuw nsw i64 %39, 1
  %48 = icmp eq i64 %47, %33
  br i1 %48, label %49, label %38

49:                                               ; preds = %38, %31
  %50 = call %"struct.WTF::KeyValuePair.3321"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E8RehashToEPS9_jSF_(%"class.WTF::HashTable.3318"* %0, %"struct.WTF::KeyValuePair.3321"* %36, i32 %32, %"struct.WTF::KeyValuePair.3321"* %1) #16
  ret %"struct.WTF::KeyValuePair.3321"* %50
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.WTF::KeyValuePair.3321"* @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E8RehashToEPS9_jSF_(%"class.WTF::HashTable.3318"*, %"struct.WTF::KeyValuePair.3321"*, i32, %"struct.WTF::KeyValuePair.3321"*) local_unnamed_addr #0 comdat align 2 {
  %5 = alloca %"class.WTF::HashTable.3318", align 8
  %6 = bitcast %"class.WTF::HashTable.3318"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %6) #16
  %7 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %5, i64 0, i32 0
  %8 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %5, i64 0, i32 1
  %9 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %5, i64 0, i32 2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %5, i64 0, i32 3
  %11 = bitcast %"class.WTF::HashTable.3318"* %5 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %11, i8 -86, i64 24, i1 false)
  store %"struct.WTF::KeyValuePair.3321"* %1, %"struct.WTF::KeyValuePair.3321"** %7, align 8
  store i32 %2, i32* %8, align 8
  store i32 0, i32* %9, align 4
  store i32 0, i32* %10, align 8
  %12 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = icmp eq i32 %13, 0
  %15 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 0
  br i1 %14, label %16, label %21

16:                                               ; preds = %4
  %17 = ptrtoint %"struct.WTF::KeyValuePair.3321"* %1 to i64
  %18 = bitcast %"class.WTF::HashTable.3318"* %0 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.WTF::HashTable.3318"* %5 to i64*
  br label %28

21:                                               ; preds = %4
  %22 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %15, align 8
  %23 = ptrtoint %"struct.WTF::KeyValuePair.3321"* %22 to i64
  br label %112

24:                                               ; preds = %213
  %25 = bitcast %"class.WTF::HashTable.3318"* %5 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.WTF::HashTable.3318"* %0 to i64*
  br label %28

28:                                               ; preds = %16, %24
  %29 = phi i64* [ %20, %16 ], [ %25, %24 ]
  %30 = phi i64* [ %18, %16 ], [ %27, %24 ]
  %31 = phi i64 [ %17, %16 ], [ %26, %24 ]
  %32 = phi i64 [ %19, %16 ], [ %214, %24 ]
  %33 = phi %"struct.WTF::KeyValuePair.3321"* [ null, %16 ], [ %217, %24 ]
  %34 = phi i32 [ 0, %16 ], [ %215, %24 ]
  store atomic i64 %31, i64* %30 monotonic, align 8
  store i32 %2, i32* %12, align 8
  store i64 %32, i64* %29, align 8
  store i32 %34, i32* %8, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E5clearEv(%"class.WTF::HashTable.3318"* nonnull %5)
  %35 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 3
  %36 = load i32, i32* %35, align 8
  %37 = and i32 %36, -2147483648
  store i32 %37, i32* %35, align 8
  %38 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %7, align 8
  %39 = icmp eq %"struct.WTF::KeyValuePair.3321"* %38, null
  br i1 %39, label %111, label %40, !prof !2

40:                                               ; preds = %28
  %41 = load i32, i32* %8, align 8
  %42 = icmp eq i32 %41, 0
  br i1 %42, label %109, label %43

43:                                               ; preds = %40
  %44 = zext i32 %41 to i64
  br label %45

45:                                               ; preds = %106, %43
  %46 = phi i64 [ 0, %43 ], [ %107, %106 ]
  %47 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %38, i64 %46
  %48 = bitcast %"struct.WTF::KeyValuePair.3321"* %47 to i8**
  %49 = load i8*, i8** %48, align 8
  %50 = icmp eq i8* %49, inttoptr (i64 -1 to i8*)
  br i1 %50, label %106, label %51

51:                                               ; preds = %45
  %52 = bitcast i8* %49 to %"class.WTF::StringImpl"*
  %53 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %38, i64 %46, i32 1, i32 0, i32 0
  %54 = load %"class.WTF::String"*, %"class.WTF::String"** %53, align 8
  %55 = icmp eq %"class.WTF::String"* %54, null
  br i1 %55, label %90, label %56, !prof !2

56:                                               ; preds = %51
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %38, i64 %46, i32 1, i32 0, i32 1
  %58 = load i32, i32* %57, align 8
  %59 = icmp eq i32 %58, 0
  br i1 %59, label %86, label %60

60:                                               ; preds = %56
  %61 = zext i32 %58 to i64
  br label %62

62:                                               ; preds = %83, %60
  %63 = phi i64 [ 0, %60 ], [ %84, %83 ]
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %54, i64 %63
  %65 = bitcast %"class.WTF::String"* %64 to i8**
  %66 = load i8*, i8** %65, align 8
  %67 = bitcast i8* %66 to %"class.WTF::StringImpl"*
  %68 = ptrtoint i8* %66 to i64
  switch i64 %68, label %69 [
    i64 -1, label %83
    i64 0, label %83
  ]

69:                                               ; preds = %62
  %70 = getelementptr inbounds i8, i8* %66, i64 8
  %71 = bitcast i8* %70 to i32*
  %72 = load atomic i32, i32* %71 monotonic, align 4
  %73 = and i32 %72, 2
  %74 = icmp eq i32 %73, 0
  %75 = bitcast i8* %66 to i32*
  %76 = load i32, i32* %75, align 4
  br i1 %74, label %77, label %79

77:                                               ; preds = %69
  %78 = add i32 %76, -1
  store i32 %78, i32* %75, align 4
  br label %79

79:                                               ; preds = %77, %69
  %80 = phi i32 [ %78, %77 ], [ %76, %69 ]
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %83

82:                                               ; preds = %79
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %67) #16
  br label %83

83:                                               ; preds = %82, %79, %62, %62
  %84 = add nuw nsw i64 %63, 1
  %85 = icmp eq i64 %84, %61
  br i1 %85, label %86, label %62

86:                                               ; preds = %83, %56
  %87 = bitcast %"class.WTF::String"* %54 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %87) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %53, align 8
  %88 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %47, i64 0, i32 0, i32 0, i32 0
  %89 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %88, align 8
  br label %90

90:                                               ; preds = %86, %51
  %91 = phi %"class.WTF::StringImpl"* [ %89, %86 ], [ %52, %51 ]
  %92 = icmp eq %"class.WTF::StringImpl"* %91, null
  br i1 %92, label %106, label %93

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load atomic i32, i32* %94 monotonic, align 4
  %96 = and i32 %95, 2
  %97 = icmp eq i32 %96, 0
  %98 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %91, i64 0, i32 0
  %99 = load i32, i32* %98, align 4
  br i1 %97, label %100, label %102

100:                                              ; preds = %93
  %101 = add i32 %99, -1
  store i32 %101, i32* %98, align 4
  br label %102

102:                                              ; preds = %100, %93
  %103 = phi i32 [ %101, %100 ], [ %99, %93 ]
  %104 = icmp eq i32 %103, 0
  br i1 %104, label %105, label %106

105:                                              ; preds = %102
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %91) #16
  br label %106

106:                                              ; preds = %105, %102, %90, %45
  %107 = add nuw nsw i64 %46, 1
  %108 = icmp eq i64 %107, %44
  br i1 %108, label %109, label %45

109:                                              ; preds = %106, %40
  %110 = bitcast %"struct.WTF::KeyValuePair.3321"* %38 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %110) #16
  store %"struct.WTF::KeyValuePair.3321"* null, %"struct.WTF::KeyValuePair.3321"** %7, align 8
  br label %111

111:                                              ; preds = %28, %109
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %6) #16
  ret %"struct.WTF::KeyValuePair.3321"* %33

112:                                              ; preds = %21, %213
  %113 = phi i64 [ %214, %213 ], [ %23, %21 ]
  %114 = phi i32 [ %215, %213 ], [ %13, %21 ]
  %115 = phi %"struct.WTF::KeyValuePair.3321"* [ %216, %213 ], [ %22, %21 ]
  %116 = phi %"struct.WTF::KeyValuePair.3321"* [ %217, %213 ], [ null, %21 ]
  %117 = phi i32 [ %218, %213 ], [ 0, %21 ]
  %118 = zext i32 %117 to i64
  %119 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %115, i64 %118
  %120 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %119, i64 0, i32 0, i32 0, i32 0
  %121 = bitcast %"struct.WTF::KeyValuePair.3321"* %119 to i64*
  %122 = load i64, i64* %121, align 8
  switch i64 %122, label %123 [
    i64 -1, label %213
    i64 0, label %213
  ]

123:                                              ; preds = %112
  %124 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %119, i64 0, i32 0
  %125 = call { %"struct.WTF::KeyValuePair.3321"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E16LookupForWritingERKS1_(%"class.WTF::HashTable.3318"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %124) #16
  %126 = extractvalue { %"struct.WTF::KeyValuePair.3321"*, i8 } %125, 0
  %127 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %126, i64 0, i32 1, i32 0, i32 0
  %128 = load %"class.WTF::String"*, %"class.WTF::String"** %127, align 8
  %129 = icmp eq %"class.WTF::String"* %128, null
  br i1 %129, label %162, label %130, !prof !2

130:                                              ; preds = %123
  %131 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %126, i64 0, i32 1, i32 0, i32 1
  %132 = load i32, i32* %131, align 8
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %160, label %134

134:                                              ; preds = %130
  %135 = zext i32 %132 to i64
  br label %136

136:                                              ; preds = %157, %134
  %137 = phi i64 [ 0, %134 ], [ %158, %157 ]
  %138 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %128, i64 %137
  %139 = bitcast %"class.WTF::String"* %138 to i8**
  %140 = load i8*, i8** %139, align 8
  %141 = bitcast i8* %140 to %"class.WTF::StringImpl"*
  %142 = ptrtoint i8* %140 to i64
  switch i64 %142, label %143 [
    i64 -1, label %157
    i64 0, label %157
  ]

143:                                              ; preds = %136
  %144 = getelementptr inbounds i8, i8* %140, i64 8
  %145 = bitcast i8* %144 to i32*
  %146 = load atomic i32, i32* %145 monotonic, align 4
  %147 = and i32 %146, 2
  %148 = icmp eq i32 %147, 0
  %149 = bitcast i8* %140 to i32*
  %150 = load i32, i32* %149, align 4
  br i1 %148, label %151, label %153

151:                                              ; preds = %143
  %152 = add i32 %150, -1
  store i32 %152, i32* %149, align 4
  br label %153

153:                                              ; preds = %151, %143
  %154 = phi i32 [ %152, %151 ], [ %150, %143 ]
  %155 = icmp eq i32 %154, 0
  br i1 %155, label %156, label %157

156:                                              ; preds = %153
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %141) #16
  br label %157

157:                                              ; preds = %156, %153, %136, %136
  %158 = add nuw nsw i64 %137, 1
  %159 = icmp eq i64 %158, %135
  br i1 %159, label %160, label %136

160:                                              ; preds = %157, %130
  %161 = bitcast %"class.WTF::String"* %128 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %161) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %127, align 8
  br label %162

162:                                              ; preds = %160, %123
  %163 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %126, i64 0, i32 0, i32 0, i32 0
  %164 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %163, align 8
  %165 = icmp eq %"class.WTF::StringImpl"* %164, null
  br i1 %165, label %179, label %166

166:                                              ; preds = %162
  %167 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %168 = load atomic i32, i32* %167 monotonic, align 4
  %169 = and i32 %168, 2
  %170 = icmp eq i32 %169, 0
  %171 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %164, i64 0, i32 0
  %172 = load i32, i32* %171, align 4
  br i1 %170, label %173, label %175

173:                                              ; preds = %166
  %174 = add i32 %172, -1
  store i32 %174, i32* %171, align 4
  br label %175

175:                                              ; preds = %173, %166
  %176 = phi i32 [ %174, %173 ], [ %172, %166 ]
  %177 = icmp eq i32 %176, 0
  br i1 %177, label %178, label %179

178:                                              ; preds = %175
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %164) #16
  br label %179

179:                                              ; preds = %162, %175, %178
  %180 = load i64, i64* %121, align 8
  %181 = bitcast %"struct.WTF::KeyValuePair.3321"* %126 to i64*
  store i64 %180, i64* %181, align 8
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %120, align 8
  %182 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %126, i64 0, i32 1
  %183 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %115, i64 %118, i32 1
  %184 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %126, i64 0, i32 1, i32 0, i32 1
  %185 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %126, i64 0, i32 1, i32 0, i32 2
  %186 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %126, i64 0, i32 1, i32 0, i32 3
  %187 = bitcast %"class.WTF::HashSet.2527"* %183 to i64*
  %188 = bitcast %"class.WTF::HashSet.2527"* %182 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %188, i8 0, i64 20, i1 false) #16
  %189 = load i64, i64* %187, align 8
  %190 = bitcast %"class.WTF::HashSet.2527"* %182 to i64*
  store atomic i64 0, i64* %187 monotonic, align 8
  store atomic i64 %189, i64* %190 monotonic, align 8
  %191 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %115, i64 %118, i32 1, i32 0, i32 1
  %192 = load i32, i32* %184, align 4
  %193 = load i32, i32* %191, align 4
  store i32 %193, i32* %184, align 4
  store i32 %192, i32* %191, align 4
  %194 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %115, i64 %118, i32 1, i32 0, i32 2
  %195 = load i32, i32* %185, align 4
  %196 = load i32, i32* %194, align 4
  store i32 %196, i32* %185, align 4
  store i32 %195, i32* %194, align 4
  %197 = load i32, i32* %186, align 8
  %198 = and i32 %197, 2147483647
  %199 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %115, i64 %118, i32 1, i32 0, i32 3
  %200 = load i32, i32* %199, align 8
  %201 = and i32 %200, 2147483647
  %202 = and i32 %197, -2147483648
  %203 = or i32 %201, %202
  store i32 %203, i32* %186, align 8
  %204 = load i32, i32* %199, align 8
  %205 = and i32 %204, -2147483648
  %206 = or i32 %205, %198
  store i32 %206, i32* %199, align 8
  %207 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %15, align 8
  %208 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %207, i64 %118
  %209 = icmp eq %"struct.WTF::KeyValuePair.3321"* %208, %3
  %210 = select i1 %209, %"struct.WTF::KeyValuePair.3321"* %126, %"struct.WTF::KeyValuePair.3321"* %116
  %211 = load i32, i32* %12, align 8
  %212 = ptrtoint %"struct.WTF::KeyValuePair.3321"* %207 to i64
  br label %213

213:                                              ; preds = %112, %112, %179
  %214 = phi i64 [ %113, %112 ], [ %212, %179 ], [ %113, %112 ]
  %215 = phi i32 [ %114, %112 ], [ %211, %179 ], [ %114, %112 ]
  %216 = phi %"struct.WTF::KeyValuePair.3321"* [ %115, %112 ], [ %207, %179 ], [ %115, %112 ]
  %217 = phi %"struct.WTF::KeyValuePair.3321"* [ %116, %112 ], [ %210, %179 ], [ %116, %112 ]
  %218 = add i32 %117, 1
  %219 = icmp eq i32 %218, %215
  br i1 %219, label %24, label %112
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.3321"*, i8 } @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_NS_7HashSetIS1_NS_10StringHashENS_10HashTraitsIS1_EENS_18PartitionAllocatorEEEEENS_24KeyValuePairKeyExtractorES4_NS_18HashMapValueTraitsIS6_NS5_IS8_EEEES6_S7_E16LookupForWritingERKS1_(%"class.WTF::HashTable.3318"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.3321"*, %"struct.WTF::KeyValuePair.3321"** %3, align 8
  %5 = getelementptr inbounds %"class.WTF::HashTable.3318", %"class.WTF::HashTable.3318"* %0, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = add i32 %6, -1
  %8 = zext i32 %7 to i64
  %9 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %10 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %10, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %12 = load atomic i32, i32* %11 monotonic, align 4
  %13 = lshr i32 %12, 8
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %15, label %17

15:                                               ; preds = %2
  %16 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %10) #16
  br label %17

17:                                               ; preds = %15, %2
  %18 = phi i32 [ %16, %15 ], [ %13, %2 ]
  %19 = and i32 %18, %7
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %4, i64 %20
  %22 = ptrtoint %"struct.WTF::KeyValuePair.3321"* %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %21, i64 0, i32 0, i32 0, i32 0
  %24 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %23, align 8
  %25 = icmp eq %"class.WTF::StringImpl"* %24, null
  br i1 %25, label %42, label %26

26:                                               ; preds = %17
  %27 = xor i32 %18, -1
  %28 = lshr i32 %18, 23
  %29 = add i32 %28, %27
  %30 = shl i32 %29, 12
  %31 = xor i32 %30, %29
  %32 = lshr i32 %31, 7
  %33 = xor i32 %32, %31
  %34 = shl i32 %33, 2
  %35 = xor i32 %34, %33
  %36 = lshr i32 %35, 20
  %37 = xor i32 %36, %35
  %38 = or i32 %37, 1
  %39 = zext i32 %38 to i64
  br label %48

40:                                               ; preds = %61
  %41 = ptrtoint %"struct.WTF::KeyValuePair.3321"* %67 to i64
  br label %42

42:                                               ; preds = %40, %17
  %43 = phi i64 [ %22, %17 ], [ %41, %40 ]
  %44 = phi %"struct.WTF::KeyValuePair.3321"* [ null, %17 ], [ %62, %40 ]
  %45 = icmp eq %"struct.WTF::KeyValuePair.3321"* %44, null
  %46 = ptrtoint %"struct.WTF::KeyValuePair.3321"* %44 to i64
  %47 = select i1 %45, i64 %43, i64 %46
  br label %72

48:                                               ; preds = %61, %26
  %49 = phi %"struct.WTF::KeyValuePair.3321"* [ null, %26 ], [ %62, %61 ]
  %50 = phi i64 [ %22, %26 ], [ %68, %61 ]
  %51 = phi %"struct.WTF::KeyValuePair.3321"* [ %21, %26 ], [ %67, %61 ]
  %52 = phi i64 [ %20, %26 ], [ %66, %61 ]
  %53 = phi i64 [ 0, %26 ], [ %64, %61 ]
  %54 = bitcast %"struct.WTF::KeyValuePair.3321"* %51 to i8**
  %55 = load i8*, i8** %54, align 8
  %56 = icmp eq i8* %55, inttoptr (i64 -1 to i8*)
  br i1 %56, label %61, label %57

57:                                               ; preds = %48
  %58 = bitcast i8* %55 to %"class.WTF::StringImpl"*
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %9, align 8
  %60 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %58, %"class.WTF::StringImpl"* %59) #16
  br i1 %60, label %72, label %61

61:                                               ; preds = %57, %48
  %62 = phi %"struct.WTF::KeyValuePair.3321"* [ %49, %57 ], [ %51, %48 ]
  %63 = icmp eq i64 %53, 0
  %64 = select i1 %63, i64 %39, i64 %53
  %65 = add i64 %64, %52
  %66 = and i64 %65, %8
  %67 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %4, i64 %66
  %68 = ptrtoint %"struct.WTF::KeyValuePair.3321"* %67 to i64
  %69 = getelementptr inbounds %"struct.WTF::KeyValuePair.3321", %"struct.WTF::KeyValuePair.3321"* %67, i64 0, i32 0, i32 0, i32 0
  %70 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %69, align 8
  %71 = icmp eq %"class.WTF::StringImpl"* %70, null
  br i1 %71, label %40, label %48

72:                                               ; preds = %57, %42
  %73 = phi i64 [ %47, %42 ], [ %50, %57 ]
  %74 = phi i8 [ 0, %42 ], [ 1, %57 ]
  %75 = inttoptr i64 %73 to %"struct.WTF::KeyValuePair.3321"*
  %76 = insertvalue { %"struct.WTF::KeyValuePair.3321"*, i8 } undef, %"struct.WTF::KeyValuePair.3321"* %75, 0
  %77 = insertvalue { %"struct.WTF::KeyValuePair.3321"*, i8 } %76, i8 %74, 1
  ret { %"struct.WTF::KeyValuePair.3321"*, i8 } %77
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.WTF::HashTable.2528"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEEaSERKS7_(%"class.WTF::HashTable.2528"*, %"class.WTF::HashTable.2528"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.WTF::HashTable.2528", align 8
  %4 = bitcast %"class.WTF::HashTable.2528"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %4) #16
  %5 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %3, i64 0, i32 0
  %6 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %3, i64 0, i32 1
  %7 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %3, i64 0, i32 2
  %8 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %3, i64 0, i32 3
  %9 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %1, i64 0, i32 2
  %10 = bitcast %"class.WTF::HashTable.2528"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %10, i8 -86, i64 24, i1 false)
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %4, i8 0, i64 20, i1 false) #16
  %11 = load i32, i32* %9, align 4
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %48, label %13

13:                                               ; preds = %2
  call void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2528"* nonnull %3, i32 %11) #16
  %14 = load i32, i32* %9, align 4
  %15 = icmp eq i32 %14, 0
  %16 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %1, i64 0, i32 0
  %17 = load %"class.WTF::String"*, %"class.WTF::String"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %1, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = zext i32 %19 to i64
  %21 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %17, i64 %20
  br i1 %15, label %48, label %22

22:                                               ; preds = %13
  %23 = icmp eq i32 %19, 0
  br i1 %23, label %31, label %24

24:                                               ; preds = %22, %28
  %25 = phi %"class.WTF::String"* [ %29, %28 ], [ %17, %22 ]
  %26 = bitcast %"class.WTF::String"* %25 to i64*
  %27 = load i64, i64* %26, align 8
  switch i64 %27, label %31 [
    i64 -1, label %28
    i64 0, label %28
  ]

28:                                               ; preds = %24, %24
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 1
  %30 = icmp eq %"class.WTF::String"* %29, %21
  br i1 %30, label %48, label %24

31:                                               ; preds = %24, %22
  %32 = phi %"class.WTF::String"* [ %17, %22 ], [ %25, %24 ]
  %33 = icmp eq %"class.WTF::String"* %32, %21
  br i1 %33, label %48, label %34

34:                                               ; preds = %31, %46
  %35 = phi %"class.WTF::String"* [ %40, %46 ], [ %32, %31 ]
  %36 = call { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2528"* nonnull %3, %"class.WTF::String"* dereferenceable(8) %35, %"class.WTF::String"* dereferenceable(8) %35) #16
  %37 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %35, i64 1
  %38 = icmp eq %"class.WTF::String"* %37, %21
  br i1 %38, label %48, label %39

39:                                               ; preds = %34, %43
  %40 = phi %"class.WTF::String"* [ %44, %43 ], [ %37, %34 ]
  %41 = bitcast %"class.WTF::String"* %40 to i64*
  %42 = load i64, i64* %41, align 8
  switch i64 %42, label %46 [
    i64 -1, label %43
    i64 0, label %43
  ]

43:                                               ; preds = %39, %39
  %44 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %40, i64 1
  %45 = icmp eq %"class.WTF::String"* %44, %21
  br i1 %45, label %48, label %39

46:                                               ; preds = %39
  %47 = icmp eq %"class.WTF::String"* %40, %21
  br i1 %47, label %48, label %34

48:                                               ; preds = %28, %34, %46, %43, %2, %13, %31
  %49 = bitcast %"class.WTF::HashTable.2528"* %3 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = bitcast %"class.WTF::HashTable.2528"* %0 to i64*
  %52 = load i64, i64* %51, align 8
  store atomic i64 %52, i64* %49 monotonic, align 8
  store atomic i64 %50, i64* %51 monotonic, align 8
  %53 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 1
  %54 = load i32, i32* %53, align 4
  %55 = load i32, i32* %6, align 8
  store i32 %55, i32* %53, align 4
  store i32 %54, i32* %6, align 8
  %56 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 2
  %57 = load i32, i32* %56, align 4
  %58 = load i32, i32* %7, align 4
  store i32 %58, i32* %56, align 4
  store i32 %57, i32* %7, align 4
  %59 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 3
  %60 = load i32, i32* %59, align 8
  %61 = and i32 %60, 2147483647
  %62 = load i32, i32* %8, align 8
  %63 = and i32 %62, 2147483647
  %64 = and i32 %60, -2147483648
  %65 = or i32 %63, %64
  store i32 %65, i32* %59, align 8
  %66 = and i32 %62, -2147483648
  %67 = or i32 %66, %61
  store i32 %67, i32* %8, align 8
  %68 = inttoptr i64 %52 to %"class.WTF::String"*
  %69 = icmp eq i64 %52, 0
  br i1 %69, label %100, label %70, !prof !2

70:                                               ; preds = %48
  %71 = icmp eq i32 %54, 0
  br i1 %71, label %98, label %72

72:                                               ; preds = %70
  %73 = zext i32 %54 to i64
  br label %74

74:                                               ; preds = %95, %72
  %75 = phi i64 [ 0, %72 ], [ %96, %95 ]
  %76 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %68, i64 %75
  %77 = bitcast %"class.WTF::String"* %76 to i8**
  %78 = load i8*, i8** %77, align 8
  %79 = bitcast i8* %78 to %"class.WTF::StringImpl"*
  %80 = ptrtoint i8* %78 to i64
  switch i64 %80, label %81 [
    i64 -1, label %95
    i64 0, label %95
  ]

81:                                               ; preds = %74
  %82 = getelementptr inbounds i8, i8* %78, i64 8
  %83 = bitcast i8* %82 to i32*
  %84 = load atomic i32, i32* %83 monotonic, align 4
  %85 = and i32 %84, 2
  %86 = icmp eq i32 %85, 0
  %87 = bitcast i8* %78 to i32*
  %88 = load i32, i32* %87, align 4
  br i1 %86, label %89, label %91

89:                                               ; preds = %81
  %90 = add i32 %88, -1
  store i32 %90, i32* %87, align 4
  br label %91

91:                                               ; preds = %89, %81
  %92 = phi i32 [ %90, %89 ], [ %88, %81 ]
  %93 = icmp eq i32 %92, 0
  br i1 %93, label %94, label %95

94:                                               ; preds = %91
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %79) #16
  br label %95

95:                                               ; preds = %94, %91, %74, %74
  %96 = add nuw nsw i64 %75, 1
  %97 = icmp eq i64 %96, %73
  br i1 %97, label %98, label %74

98:                                               ; preds = %95, %70
  %99 = inttoptr i64 %52 to i8*
  call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* nonnull %99) #16
  store %"class.WTF::String"* null, %"class.WTF::String"** %5, align 8
  br label %100

100:                                              ; preds = %48, %98
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %4) #16
  ret %"class.WTF::HashTable.2528"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE22ReserveCapacityForSizeEj(%"class.WTF::HashTable.2528"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckError", align 8
  %4 = icmp eq i32 %1, 0
  br i1 %4, label %16, label %5

5:                                                ; preds = %2, %5
  %6 = phi i32 [ %9, %5 ], [ %1, %2 ]
  %7 = phi i32 [ %8, %5 ], [ %1, %2 ]
  %8 = or i32 %7, %6
  %9 = lshr i32 %6, 1
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %11, label %5

11:                                               ; preds = %5
  %12 = shl i32 %8, 1
  %13 = add i32 %12, 2
  %14 = icmp ugt i32 %13, 8
  %15 = select i1 %14, i32 %13, i32 8
  br label %16

16:                                               ; preds = %11, %2
  %17 = phi i32 [ 8, %2 ], [ %15, %11 ]
  %18 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 1
  %19 = load i32, i32* %18, align 8
  %20 = icmp ugt i32 %17, %19
  br i1 %20, label %21, label %32

21:                                               ; preds = %16
  %22 = icmp slt i32 %17, 0
  br i1 %22, label %23, label %26

23:                                               ; preds = %21
  %24 = bitcast %"class.logging::CheckError"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %24) #16
  call void @_ZN7logging10CheckError5CheckEPKciS2_(%"class.logging::CheckError"* nonnull sret %3, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1094, i8* getelementptr inbounds ([39 x i8], [39 x i8]* @.str.29, i64 0, i64 0)) #16
  %25 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %3) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %24) #16
  br label %26

26:                                               ; preds = %21, %23
  %27 = zext i32 %17 to i64
  %28 = shl nuw nsw i64 %27, 3
  %29 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %28, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINS_6StringEEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %29, i8 0, i64 %28, i1 false) #16
  %30 = bitcast i8* %29 to %"class.WTF::String"*
  %31 = call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE8RehashToEPS1_jS8_(%"class.WTF::HashTable.2528"* %0, %"class.WTF::String"* %30, i32 %17, %"class.WTF::String"* null) #16
  br label %32

32:                                               ; preds = %26, %16
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"class.WTF::String"*, i8 } @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKS1_SC_EENS_18HashTableAddResultIS7_S1_EEOT0_OT1_(%"class.WTF::HashTable.2528"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 0
  %5 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  %6 = icmp eq %"class.WTF::String"* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2528"* %0, %"class.WTF::String"* null)
  %9 = load %"class.WTF::String"*, %"class.WTF::String"** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi %"class.WTF::String"* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %17 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %18 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %17, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load atomic i32, i32* %18 monotonic, align 4
  %20 = lshr i32 %19, 8
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %24

22:                                               ; preds = %10
  %23 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %17) #16
  br label %24

24:                                               ; preds = %10, %22
  %25 = phi i32 [ %23, %22 ], [ %20, %10 ]
  %26 = and i32 %25, %14
  %27 = zext i32 %26 to i64
  %28 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %27
  %29 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %30 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %29, align 8
  %31 = icmp eq %"class.WTF::StringImpl"* %30, null
  br i1 %31, label %78, label %32

32:                                               ; preds = %24
  %33 = xor i32 %25, -1
  %34 = lshr i32 %25, 23
  %35 = add i32 %34, %33
  %36 = shl i32 %35, 12
  %37 = xor i32 %36, %35
  %38 = lshr i32 %37, 7
  %39 = xor i32 %38, %37
  %40 = shl i32 %39, 2
  %41 = xor i32 %40, %39
  %42 = lshr i32 %41, 20
  %43 = xor i32 %42, %41
  %44 = or i32 %43, 1
  %45 = zext i32 %44 to i64
  br label %46

46:                                               ; preds = %32, %58
  %47 = phi %"class.WTF::StringImpl"* [ %30, %32 ], [ %66, %58 ]
  %48 = phi %"class.WTF::String"* [ %28, %32 ], [ %64, %58 ]
  %49 = phi %"class.WTF::String"* [ null, %32 ], [ %59, %58 ]
  %50 = phi i64 [ %27, %32 ], [ %63, %58 ]
  %51 = phi i64 [ 0, %32 ], [ %61, %58 ]
  %52 = bitcast %"class.WTF::String"* %48 to i8**
  %53 = load i8*, i8** %52, align 8
  %54 = icmp eq i8* %53, inttoptr (i64 -1 to i8*)
  br i1 %54, label %58, label %55

55:                                               ; preds = %46
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %16, align 8
  %57 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* nonnull %47, %"class.WTF::StringImpl"* %56) #16
  br i1 %57, label %131, label %58

58:                                               ; preds = %46, %55
  %59 = phi %"class.WTF::String"* [ %49, %55 ], [ %48, %46 ]
  %60 = icmp eq i64 %51, 0
  %61 = select i1 %60, i64 %45, i64 %51
  %62 = add i64 %61, %50
  %63 = and i64 %62, %15
  %64 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %11, i64 %63
  %65 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %64, i64 0, i32 0, i32 0
  %66 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %65, align 8
  %67 = icmp eq %"class.WTF::StringImpl"* %66, null
  br i1 %67, label %68, label %46

68:                                               ; preds = %58
  %69 = icmp eq %"class.WTF::String"* %59, null
  br i1 %69, label %78, label %70

70:                                               ; preds = %68
  %71 = bitcast %"class.WTF::String"* %59 to i64*
  store i64 0, i64* %71, align 8
  %72 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 3
  %73 = load i32, i32* %72, align 8
  %74 = add i32 %73, 2147483647
  %75 = and i32 %74, 2147483647
  %76 = and i32 %73, -2147483648
  %77 = or i32 %75, %76
  store i32 %77, i32* %72, align 8
  br label %78

78:                                               ; preds = %24, %68, %70
  %79 = phi %"class.WTF::String"* [ %59, %70 ], [ %64, %68 ], [ %28, %24 ]
  %80 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %81 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %80, align 8
  %82 = icmp eq %"class.WTF::StringImpl"* %81, null
  br i1 %82, label %100, label %83

83:                                               ; preds = %78
  %84 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %85 = load atomic i32, i32* %84 monotonic, align 4
  %86 = and i32 %85, 2
  %87 = icmp eq i32 %86, 0
  br i1 %87, label %88, label %100

88:                                               ; preds = %83
  %89 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %81, i64 0, i32 0
  %90 = load i32, i32* %89, align 4
  %91 = zext i32 %90 to i33
  %92 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %91, i33 1) #16
  %93 = extractvalue { i33, i1 } %92, 1
  %94 = extractvalue { i33, i1 } %92, 0
  %95 = icmp slt i33 %94, 0
  %96 = or i1 %93, %95
  br i1 %96, label %97, label %98, !prof !3

97:                                               ; preds = %88
  tail call void @llvm.trap() #16
  unreachable

98:                                               ; preds = %88
  %99 = trunc i33 %94 to i32
  store i32 %99, i32* %89, align 4
  br label %100

100:                                              ; preds = %98, %83, %78
  %101 = ptrtoint %"class.WTF::StringImpl"* %81 to i64
  %102 = bitcast %"class.WTF::String"* %79 to i64*
  %103 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %79, i64 0, i32 0, i32 0
  %104 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %103, align 8
  store i64 %101, i64* %102, align 8
  %105 = icmp eq %"class.WTF::StringImpl"* %104, null
  br i1 %105, label %119, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %108 = load atomic i32, i32* %107 monotonic, align 4
  %109 = and i32 %108, 2
  %110 = icmp eq i32 %109, 0
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %104, i64 0, i32 0
  %112 = load i32, i32* %111, align 4
  br i1 %110, label %113, label %115

113:                                              ; preds = %106
  %114 = add i32 %112, -1
  store i32 %114, i32* %111, align 4
  br label %115

115:                                              ; preds = %113, %106
  %116 = phi i32 [ %114, %113 ], [ %112, %106 ]
  %117 = icmp eq i32 %116, 0
  br i1 %117, label %118, label %119

118:                                              ; preds = %115
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %104) #16
  br label %119

119:                                              ; preds = %100, %115, %118
  %120 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 2
  %121 = load i32, i32* %120, align 4
  %122 = add i32 %121, 1
  store i32 %122, i32* %120, align 4
  %123 = getelementptr inbounds %"class.WTF::HashTable.2528", %"class.WTF::HashTable.2528"* %0, i64 0, i32 3
  %124 = load i32, i32* %123, align 8
  %125 = add i32 %124, %122
  %126 = shl i32 %125, 1
  %127 = load i32, i32* %12, align 8
  %128 = icmp ult i32 %126, %127
  br i1 %128, label %131, label %129

129:                                              ; preds = %119
  %130 = tail call %"class.WTF::String"* @_ZN3WTF9HashTableINS_6StringES1_NS_17IdentityExtractorENS_10StringHashENS_10HashTraitsIS1_EES5_NS_18PartitionAllocatorEE6ExpandEPS1_(%"class.WTF::HashTable.2528"* %0, %"class.WTF::String"* %79)
  br label %131

131:                                              ; preds = %55, %119, %129
  %132 = phi i8 [ 1, %119 ], [ 1, %129 ], [ 0, %55 ]
  %133 = phi %"class.WTF::String"* [ %79, %119 ], [ %130, %129 ], [ %48, %55 ]
  %134 = insertvalue { %"class.WTF::String"*, i8 } undef, %"class.WTF::String"* %133, 0
  %135 = insertvalue { %"class.WTF::String"*, i8 } %134, i8 %132, 1
  ret { %"class.WTF::String"*, i8 } %135
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i32*, i8 } @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6insertINS_22IdentityHashTranslatorIS3_S5_S6_EERKiRiEENS_18HashTableAddResultIS7_iEEOT0_OT1_(%"class.WTF::HashTable.3220"*, i32* dereferenceable(4), i32* dereferenceable(4)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 0
  %5 = load i32*, i32** %4, align 8
  %6 = icmp eq i32* %5, null
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable.3220"* %0, i32* null)
  %9 = load i32*, i32** %4, align 8
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32* [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 1
  %13 = load i32, i32* %12, align 8
  %14 = add i32 %13, -1
  %15 = zext i32 %14 to i64
  %16 = load i32, i32* %1, align 4
  %17 = shl i32 %16, 15
  %18 = xor i32 %17, -1
  %19 = add i32 %16, %18
  %20 = lshr i32 %19, 10
  %21 = xor i32 %20, %19
  %22 = mul i32 %21, 9
  %23 = lshr i32 %22, 6
  %24 = xor i32 %23, %22
  %25 = shl i32 %24, 11
  %26 = xor i32 %25, -1
  %27 = add i32 %24, %26
  %28 = lshr i32 %27, 16
  %29 = xor i32 %28, %27
  %30 = and i32 %29, %14
  %31 = zext i32 %30 to i64
  %32 = getelementptr inbounds i32, i32* %11, i64 %31
  %33 = load i32, i32* %32, align 4
  %34 = icmp eq i32 %33, 0
  br i1 %34, label %75, label %35

35:                                               ; preds = %10
  %36 = xor i32 %29, -1
  %37 = lshr i32 %27, 23
  %38 = add i32 %37, %36
  %39 = shl i32 %38, 12
  %40 = xor i32 %39, %38
  %41 = lshr i32 %40, 7
  %42 = xor i32 %41, %40
  %43 = shl i32 %42, 2
  %44 = xor i32 %43, %42
  %45 = lshr i32 %44, 20
  %46 = xor i32 %45, %44
  %47 = or i32 %46, 1
  %48 = zext i32 %47 to i64
  br label %49

49:                                               ; preds = %35, %56
  %50 = phi i32 [ %33, %35 ], [ %64, %56 ]
  %51 = phi i32* [ %32, %35 ], [ %63, %56 ]
  %52 = phi i32* [ null, %35 ], [ %58, %56 ]
  %53 = phi i64 [ %31, %35 ], [ %62, %56 ]
  %54 = phi i64 [ 0, %35 ], [ %60, %56 ]
  %55 = icmp eq i32 %50, %16
  br i1 %55, label %89, label %56

56:                                               ; preds = %49
  %57 = icmp eq i32 %50, -1
  %58 = select i1 %57, i32* %51, i32* %52
  %59 = icmp eq i64 %54, 0
  %60 = select i1 %59, i64 %48, i64 %54
  %61 = add i64 %60, %53
  %62 = and i64 %61, %15
  %63 = getelementptr inbounds i32, i32* %11, i64 %62
  %64 = load i32, i32* %63, align 4
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %49

66:                                               ; preds = %56
  %67 = icmp eq i32* %58, null
  br i1 %67, label %75, label %68

68:                                               ; preds = %66
  store i32 0, i32* %58, align 4
  %69 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 3
  %70 = load i32, i32* %69, align 8
  %71 = add i32 %70, 2147483647
  %72 = and i32 %71, 2147483647
  %73 = and i32 %70, -2147483648
  %74 = or i32 %72, %73
  store i32 %74, i32* %69, align 8
  br label %75

75:                                               ; preds = %10, %66, %68
  %76 = phi i32* [ %58, %68 ], [ %63, %66 ], [ %32, %10 ]
  %77 = load i32, i32* %2, align 4
  store i32 %77, i32* %76, align 4
  %78 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 2
  %79 = load i32, i32* %78, align 4
  %80 = add i32 %79, 1
  store i32 %80, i32* %78, align 4
  %81 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 3
  %82 = load i32, i32* %81, align 8
  %83 = add i32 %82, %80
  %84 = shl i32 %83, 1
  %85 = load i32, i32* %12, align 8
  %86 = icmp ult i32 %84, %85
  br i1 %86, label %89, label %87

87:                                               ; preds = %75
  %88 = tail call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable.3220"* %0, i32* %76)
  br label %89

89:                                               ; preds = %49, %75, %87
  %90 = phi i8 [ 1, %75 ], [ 1, %87 ], [ 0, %49 ]
  %91 = phi i32* [ %76, %75 ], [ %88, %87 ], [ %51, %49 ]
  %92 = insertvalue { i32*, i8 } undef, i32* %91, 0
  %93 = insertvalue { i32*, i8 } %92, i8 %90, 1
  ret { i32*, i8 } %93
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE6ExpandEPi(%"class.WTF::HashTable.3220"*, i32*) local_unnamed_addr #0 comdat align 2 {
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckOpResult", align 8
  %5 = alloca %"class.logging::CheckError", align 8
  %6 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %31, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %"class.WTF::HashTable.3220", %"class.WTF::HashTable.3220"* %0, i64 0, i32 2
  %11 = load i32, i32* %10, align 4
  %12 = mul i32 %11, 6
  %13 = shl i32 %7, 1
  %14 = icmp ult i32 %12, %13
  br i1 %14, label %31, label %15

15:                                               ; preds = %9
  %16 = bitcast %"class.logging::CheckOpResult"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #16
  %17 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %4, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %17, align 8
  %18 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18)
  %19 = icmp ugt i32 %13, %7
  br i1 %19, label %20, label %21

20:                                               ; preds = %15
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* null, i8** %17, align 8
  br label %30

21:                                               ; preds = %15
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %13) #16
  %23 = tail call i8* @_ZN7logging15CheckOpValueStrEj(i32 %7) #16
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %3, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.36, i64 0, i64 0), i8* %22, i8* %23) #16
  %24 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  %25 = load i8*, i8** %24, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18)
  store i8* %25, i8** %17, align 8
  %26 = icmp eq i8* %25, null
  br i1 %26, label %30, label %27

27:                                               ; preds = %21
  %28 = bitcast %"class.logging::CheckError"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %5, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.28, i64 0, i64 0), i32 1783, %"class.logging::CheckOpResult"* nonnull %4) #16
  %29 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %5) #16
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  br label %30

30:                                               ; preds = %20, %21, %27
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #16
  br label %31

31:                                               ; preds = %9, %2, %30
  %32 = phi i32 [ %13, %30 ], [ 8, %2 ], [ %7, %9 ]
  %33 = zext i32 %32 to i64
  %34 = shl nuw nsw i64 %33, 2
  %35 = call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %34, i8* getelementptr inbounds ([51 x i8], [51 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIiEEPKcv, i64 0, i64 0)) #16
  call void @llvm.memset.p0i8.i64(i8* align 1 %35, i8 0, i64 %34, i1 false) #16
  %36 = bitcast i8* %35 to i32*
  %37 = call i32* @_ZN3WTF9HashTableIiiNS_17IdentityExtractorENS_7IntHashIiEENS_10HashTraitsIiEES5_NS_18PartitionAllocatorEE8RehashToEPijS8_(%"class.WTF::HashTable.3220"* %0, i32* %36, i32 %32, i32* %1) #16
  ret i32* %37
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_17InspectorDOMAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorDOMAgent"*
  tail call void @_ZNK5blink17InspectorDOMAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMAgent"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink17InspectorDOMAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorDOMAgent"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15InspectedFramesEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectedFrames"*
  tail call void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink15InspectedFrames5TraceEPNS_7VisitorE(%"class.blink::InspectedFrames"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_21InspectorNetworkAgentEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorNetworkAgent"*
  tail call void @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorNetworkAgent"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink21InspectorNetworkAgent5TraceEPNS_7VisitorE(%"class.blink::InspectorNetworkAgent"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_30InspectorResourceContentLoaderEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorResourceContentLoader"*
  tail call void @_ZNK5blink30InspectorResourceContentLoader5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContentLoader"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink30InspectorResourceContentLoader5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContentLoader"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_26InspectorResourceContainerEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::InspectorResourceContainer"*
  tail call void @_ZNK5blink26InspectorResourceContainer5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContainer"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink26InspectorResourceContainer5TraceEPNS_7VisitorE(%"class.blink::InspectorResourceContainer"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CSSStyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSStyleSheet"*
  tail call void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink13CSSStyleSheet5TraceEPNS_7VisitorE(%"class.blink::CSSStyleSheet"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_13CoreProbeSinkEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CoreProbeSink"*
  tail call void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"* %3, %"class.blink::Visitor"* %0) #16
  ret void
}

declare void @_ZNK5blink13CoreProbeSink5TraceEPNS_7VisitorE(%"class.blink::CoreProbeSink"*, %"class.blink::Visitor"*) local_unnamed_addr #1

declare void @_ZN5blink8protocol3CSS10Dispatcher4wireEPN5crdtp14UberDispatcherEPNS1_7BackendE(%"class.crdtp::UberDispatcher"*, %"class.blink::protocol::CSS::Backend"*) local_unnamed_addr #1

declare void @_ZN5blink19InspectorAgentState8InitFromEPNS_21InspectorSessionStateE(%"class.blink::InspectorAgentState"*, %"class.blink::InspectorSessionState"*) local_unnamed_addr #1

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nounwind readnone speculatable }
attributes #11 = { nofree nounwind }
attributes #12 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { noinline nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { nounwind readonly }
attributes #18 = { builtin nounwind }
attributes #19 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 2000, i32 1}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = !{i8 0, i8 2}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZN5blink22WrapPersistentInternalINS_17InspectorCSSAgentEEENS_10PersistentIT_EEPS3_: argument 0"}
!7 = distinct !{!7, !"_ZN5blink22WrapPersistentInternalINS_17InspectorCSSAgentEEENS_10PersistentIT_EEPS3_"}
!8 = !{!9, !11, !13}
!9 = distinct !{!9, !10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS3_8protocol3CSS7Backend14EnableCallbackENS5_14default_deleteISA_EEEEEJNS3_10PersistentIS4_EESD_EEEDcOT0_DpOT1_: argument 0"}
!10 = distinct !{!10, !"_ZN4base8internal8BindImplINS_12OnceCallbackEMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS3_8protocol3CSS7Backend14EnableCallbackENS5_14default_deleteISA_EEEEEJNS3_10PersistentIS4_EESD_EEEDcOT0_DpOT1_"}
!11 = distinct !{!11, !12, !"_ZN4base8BindOnceIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS1_8protocol3CSS7Backend14EnableCallbackENS3_14default_deleteIS8_EEEEEJNS1_10PersistentIS2_EESB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_: argument 0"}
!12 = distinct !{!12, !"_ZN4base8BindOnceIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS1_8protocol3CSS7Backend14EnableCallbackENS3_14default_deleteIS8_EEEEEJNS1_10PersistentIS2_EESB_EEENS_12OnceCallbackINS_8internal14BindTypeHelperIT_JDpT0_EE14UnboundRunTypeEEEOSJ_DpOSK_"}
!13 = distinct !{!13, !14, !"_ZN3WTF4BindIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS1_8protocol3CSS7Backend14EnableCallbackENS3_14default_deleteIS8_EEEEEJNS1_10PersistentIS2_EESB_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_: argument 0"}
!14 = distinct !{!14, !"_ZN3WTF4BindIMN5blink17InspectorCSSAgentEFvNSt3__110unique_ptrINS1_8protocol3CSS7Backend14EnableCallbackENS3_14default_deleteIS8_EEEEEJNS1_10PersistentIS2_EESB_EFvvEEEN4base12OnceCallbackIT1_EEOT_DpOT0_"}
!15 = !{!16}
!16 = distinct !{!16, !17, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv: argument 0"}
!17 = distinct !{!17, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE5beginEv"}
!18 = !{!19}
!19 = distinct !{!19, !20, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv: argument 0"}
!20 = distinct !{!20, !"_ZNK3WTF13LinkedHashSetIN5blink6MemberINS1_8FontFaceEEENS_10HashTraitsIS4_EENS1_13HeapAllocatorEE3endEv"}
!21 = !{!22}
!22 = distinct !{!22, !23, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv: argument 0"}
!23 = distinct !{!23, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv"}
!24 = !{!25}
!25 = distinct !{!25, !26, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv: argument 0"}
!26 = distinct !{!26, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv"}
!27 = !{!28}
!28 = distinct !{!28, !29, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv: argument 0"}
!29 = distinct !{!29, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv"}
!30 = !{!31}
!31 = distinct !{!31, !32, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv: argument 0"}
!32 = distinct !{!32, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv"}
!33 = !{!34}
!34 = distinct !{!34, !35, !"_ZN5blink17InspectorCSSAgent17getStyleSheetTextERKN3WTF6StringEPS2_: argument 0"}
!35 = distinct !{!35, !"_ZN5blink17InspectorCSSAgent17getStyleSheetTextERKN3WTF6StringEPS2_"}
!36 = !{!37}
!37 = distinct !{!37, !38, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv: argument 0"}
!38 = distinct !{!38, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv"}
!39 = !{!40}
!40 = distinct !{!40, !41, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_: argument 0"}
!41 = distinct !{!41, !"_ZNSt3__1plIcNS_11char_traitsIcEENS_9allocatorIcEEEENS_12basic_stringIT_T0_T1_EEOS9_RKS9_"}
!42 = !{!43}
!43 = distinct !{!43, !44, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv: argument 0"}
!44 = distinct !{!44, !"_ZN5blink17InspectorCSSAgent13AssertEnabledEv"}
!45 = !{!"branch_weights", i32 1, i32 1048575}
!46 = !{!47}
!47 = distinct !{!47, !48, !"_ZN5blink12_GLOBAL__N_120FilterDuplicateRulesEPNS_10HeapVectorINSt3__14pairINS_6MemberINS_7CSSRuleEEEiEELj0EEE: argument 0"}
!48 = distinct !{!48, !"_ZN5blink12_GLOBAL__N_120FilterDuplicateRulesEPNS_10HeapVectorINSt3__14pairINS_6MemberINS_7CSSRuleEEEiEELj0EEE"}
!49 = !{!50}
!50 = distinct !{!50, !51, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!51 = distinct !{!51, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!52 = !{!53}
!53 = distinct !{!53, !54, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!54 = distinct !{!54, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!55 = !{!56}
!56 = distinct !{!56, !57, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_: argument 0"}
!57 = distinct !{!57, !"_ZN3WTFplINS_12StringAppendINS1_INS1_IPKcNS_6StringEEES3_EES4_EES3_S3_EENS1_INS1_IT_T0_EET1_EERKSA_SB_"}
!58 = !{!59}
!59 = distinct !{!59, !60, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_: argument 0"}
!60 = distinct !{!60, !"_ZN3WTFplIPKcNS_6StringES2_EENS_12StringAppendINS4_IT_T0_EET1_EERKS7_S8_"}
!61 = !{!62}
!62 = distinct !{!62, !63, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!63 = distinct !{!63, !"_ZN3WTFplINS_12StringAppendINS1_IPKcNS_6StringEEES3_EES4_S3_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!64 = !{!65}
!65 = distinct !{!65, !66, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_: argument 0"}
!66 = distinct !{!66, !"_ZN3WTFplINS_12StringAppendINS_6StringEPKcEES2_S4_EENS1_INS1_IT_T0_EET1_EERKS8_S9_"}
!67 = !{!68}
!68 = distinct !{!68, !69, !"_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S4_EENS1_INS1_IT_T0_EET1_EERKS9_SA_: argument 0"}
!69 = distinct !{!69, !"_ZN3WTFplINS_12StringAppendINS1_INS_6StringEPKcEES2_EES4_S4_EENS1_INS1_IT_T0_EET1_EERKS9_SA_"}
!70 = !{!71}
!71 = distinct !{!71, !72, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!72 = distinct !{!72, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
!73 = !{!74}
!74 = distinct !{!74, !75, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_: argument 0"}
!75 = distinct !{!75, !"_ZN4absl13make_optionalIN5blink15CSSPropertyNameEEENS_8optionalINSt3__15decayIT_E4typeEEEOS6_"}
!76 = !{!77}
!77 = distinct !{!77, !78, !"_ZN5blink17InspectorCSSAgent20setLocalFontsEnabledEb: argument 0"}
!78 = distinct !{!78, !"_ZN5blink17InspectorCSSAgent20setLocalFontsEnabledEb"}
!79 = distinct !{!79, !80}
!80 = !{!"llvm.loop.unroll.disable"}
!81 = distinct !{!81, !80}
!82 = distinct !{!82, !80}
!83 = distinct !{!83, !80}
!84 = distinct !{!84, !80}
!85 = distinct !{!85, !80}
!86 = distinct !{!86, !80}
!87 = distinct !{!87, !80}
!88 = distinct !{!88, !80}
!89 = distinct !{!89, !80}
!90 = distinct !{!90, !80}
!91 = distinct !{!91, !80}
!92 = distinct !{!92, !80}
!93 = distinct !{!93, !80}
