; ModuleID = '../../net/spdy/spdy_session_key.cc'
source_filename = "../../net/spdy/spdy_session_key.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.base::Feature" = type { i8*, i32 }
%"class.net::SpdySessionKey" = type <{ %"struct.std::__1::pair", i32, i32, %"class.net::SocketTag", [7 x i8], %"class.net::NetworkIsolationKey", i32, [4 x i8] }>
%"struct.std::__1::pair" = type { %"class.net::HostPortPair", %"class.net::ProxyServer" }
%"class.net::HostPortPair" = type <{ %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.net::ProxyServer" = type { i32, [4 x i8], %"class.net::HostPortPair" }
%"class.net::SocketTag" = type { i8 }
%"class.net::NetworkIsolationKey" = type { i8, %"class.absl::optional", %"class.absl::optional" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.1 }
%union.anon.1 = type { %"class.net::SchemefulSite" }
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.2" }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.absl::optional.2" = type { %"class.absl::optional_internal::optional_data.3" }
%"class.absl::optional_internal::optional_data.3" = type { %"class.absl::optional_internal::optional_data_base.4" }
%"class.absl::optional_internal::optional_data_base.4" = type { %"class.absl::optional_internal::optional_data_dtor_base.5" }
%"class.absl::optional_internal::optional_data_dtor_base.5" = type { i8, %union.anon.6 }
%union.anon.6 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.std::__1::__tuple_less.13" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf", %"class.std::__1::__tuple_leaf.7", %"class.std::__1::__tuple_leaf.8", %"class.std::__1::__tuple_leaf.9", %"class.std::__1::__tuple_leaf.10", %"class.std::__1::__tuple_leaf.11", %"class.std::__1::__tuple_leaf.12" }
%"class.std::__1::__tuple_leaf" = type { i32* }
%"class.std::__1::__tuple_leaf.7" = type { %"class.net::HostPortPair"* }
%"class.std::__1::__tuple_leaf.8" = type { %"class.net::ProxyServer"* }
%"class.std::__1::__tuple_leaf.9" = type { i32* }
%"class.std::__1::__tuple_leaf.10" = type { %"class.net::NetworkIsolationKey"* }
%"class.std::__1::__tuple_leaf.11" = type { i32* }
%"class.std::__1::__tuple_leaf.12" = type { %"class.net::SocketTag"* }
%"struct.std::__1::__tuple_less.14" = type { i8 }
%"struct.std::__1::__tuple_less.29" = type { i8 }
%"class.std::__1::tuple.30" = type { %"struct.std::__1::__tuple_impl.31" }
%"struct.std::__1::__tuple_impl.31" = type { %"class.std::__1::__tuple_leaf.32", %"class.std::__1::__tuple_leaf.33", %"class.std::__1::__tuple_leaf.34" }
%"class.std::__1::__tuple_leaf.32" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.33" = type { %"class.absl::optional"* }
%"class.std::__1::__tuple_leaf.34" = type { i8* }

$_ZNSt3__112__tuple_lessILm6EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_ = comdat any

$_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_ = comdat any

@_ZN3net8features42kPartitionConnectionsByNetworkIsolationKeyE = external global %"struct.base::Feature", align 8

@_ZN3net14SpdySessionKeyC1Ev = hidden unnamed_addr alias void (%"class.net::SpdySessionKey"*), void (%"class.net::SpdySessionKey"*)* @_ZN3net14SpdySessionKeyC2Ev
@_ZN3net14SpdySessionKeyC1ERKNS_12HostPortPairERKNS_11ProxyServerENS_11PrivacyModeENS0_14IsProxySessionERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE = hidden unnamed_addr alias void (%"class.net::SpdySessionKey"*, %"class.net::HostPortPair"*, %"class.net::ProxyServer"*, i32, i32, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32), void (%"class.net::SpdySessionKey"*, %"class.net::HostPortPair"*, %"class.net::ProxyServer"*, i32, i32, %"class.net::SocketTag"*, %"class.net::NetworkIsolationKey"*, i32)* @_ZN3net14SpdySessionKeyC2ERKNS_12HostPortPairERKNS_11ProxyServerENS_11PrivacyModeENS0_14IsProxySessionERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE
@_ZN3net14SpdySessionKeyC1ERKS0_ = hidden unnamed_addr alias void (%"class.net::SpdySessionKey"*, %"class.net::SpdySessionKey"*), void (%"class.net::SpdySessionKey"*, %"class.net::SpdySessionKey"*)* @_ZN3net14SpdySessionKeyC2ERKS0_
@_ZN3net14SpdySessionKeyD1Ev = hidden unnamed_addr alias void (%"class.net::SpdySessionKey"*), void (%"class.net::SpdySessionKey"*)* @_ZN3net14SpdySessionKeyD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14SpdySessionKeyC2Ev(%"class.net::SpdySessionKey"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %2) #8
  %3 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 0
  store i32 1, i32* %3, align 8
  %4 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2
  tail call void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"* %4) #8
  %5 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 1
  store i32 0, i32* %5, align 8
  %6 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %6) #8
  ret void
}

declare void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14SpdySessionKeyC2ERKNS_12HostPortPairERKNS_11ProxyServerENS_11PrivacyModeENS0_14IsProxySessionERKNS_9SocketTagERKNS_19NetworkIsolationKeyENS_15SecureDnsPolicyE(%"class.net::SpdySessionKey"*, %"class.net::HostPortPair"* nocapture readonly dereferenceable(32), %"class.net::ProxyServer"* nocapture readonly dereferenceable(40), i32, i32, %"class.net::SocketTag"* nocapture readnone dereferenceable(1), %"class.net::NetworkIsolationKey"* dereferenceable(184), i32) unnamed_addr #0 align 2 {
  %9 = bitcast %"class.net::HostPortPair"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  br i1 %12, label %16, label %13

13:                                               ; preds = %8
  %14 = bitcast %"class.net::SpdySessionKey"* %0 to i8*
  %15 = bitcast %"class.net::HostPortPair"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 24, i1 false) #8
  br label %22

16:                                               ; preds = %8
  %17 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 0
  %18 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %19 = load i8*, i8** %18, align 8
  %20 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %21 = load i64, i64* %20, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %17, i8* %19, i64 %21) #8
  br label %22

22:                                               ; preds = %16, %13
  %23 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 1
  %24 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %1, i64 0, i32 1
  %25 = load i16, i16* %24, align 8
  store i16 %25, i16* %23, align 8
  %26 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 0
  %27 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 0
  %28 = load i32, i32* %27, align 8
  store i32 %28, i32* %26, align 8
  %29 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2
  %30 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2
  %31 = bitcast %"class.net::HostPortPair"* %30 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %32 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %31, i64 0, i32 1, i32 0
  %33 = load i8, i8* %32, align 1
  %34 = icmp slt i8 %33, 0
  br i1 %34, label %38, label %35

35:                                               ; preds = %22
  %36 = bitcast %"class.net::HostPortPair"* %29 to i8*
  %37 = bitcast %"class.net::HostPortPair"* %30 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %36, i8* align 8 %37, i64 24, i1 false) #8
  br label %44

38:                                               ; preds = %22
  %39 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %29, i64 0, i32 0
  %40 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %30, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %41 = load i8*, i8** %40, align 8
  %42 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %43 = load i64, i64* %42, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %39, i8* %41, i64 %43) #8
  br label %44

44:                                               ; preds = %35, %38
  %45 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2, i32 1
  %46 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %2, i64 0, i32 2, i32 1
  %47 = load i16, i16* %46, align 8
  store i16 %47, i16* %45, align 8
  %48 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 1
  store i32 %3, i32* %48, align 8
  %49 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 2
  store i32 %4, i32* %49, align 4
  %50 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5
  %51 = tail call zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* nonnull dereferenceable(16) @_ZN3net8features42kPartitionConnectionsByNetworkIsolationKeyE) #8
  br i1 %51, label %52, label %53

52:                                               ; preds = %44
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %50, %"class.net::NetworkIsolationKey"* dereferenceable(184) %6) #8
  br label %54

53:                                               ; preds = %44
  tail call void @_ZN3net19NetworkIsolationKeyC1Ev(%"class.net::NetworkIsolationKey"* %50) #8
  br label %54

54:                                               ; preds = %53, %52
  %55 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 6
  store i32 %7, i32* %55, align 8
  ret void
}

declare zeroext i1 @_ZN4base11FeatureList9IsEnabledERKNS_7FeatureE(%"struct.base::Feature"* dereferenceable(16)) local_unnamed_addr #1

declare void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"* dereferenceable(184)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14SpdySessionKeyC2ERKS0_(%"class.net::SpdySessionKey"*, %"class.net::SpdySessionKey"* dereferenceable(280)) unnamed_addr #0 align 2 {
  %3 = bitcast %"class.net::SpdySessionKey"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %4 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %3, i64 0, i32 1, i32 0
  %5 = load i8, i8* %4, align 1
  %6 = icmp slt i8 %5, 0
  br i1 %6, label %10, label %7

7:                                                ; preds = %2
  %8 = bitcast %"class.net::SpdySessionKey"* %0 to i8*
  %9 = bitcast %"class.net::SpdySessionKey"* %1 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %8, i8* align 8 %9, i64 24, i1 false) #8
  br label %16

10:                                               ; preds = %2
  %11 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 0
  %12 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %15 = load i64, i64* %14, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %11, i8* %13, i64 %15) #8
  br label %16

16:                                               ; preds = %10, %7
  %17 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 0, i32 1
  %19 = load i16, i16* %18, align 8
  store i16 %19, i16* %17, align 8
  %20 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 0
  %21 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 0
  %22 = load i32, i32* %21, align 8
  store i32 %22, i32* %20, align 8
  %23 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2
  %24 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2
  %25 = bitcast %"class.net::HostPortPair"* %24 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  br i1 %28, label %32, label %29

29:                                               ; preds = %16
  %30 = bitcast %"class.net::HostPortPair"* %23 to i8*
  %31 = bitcast %"class.net::HostPortPair"* %24 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %30, i8* align 8 %31, i64 24, i1 false) #8
  br label %38

32:                                               ; preds = %16
  %33 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %23, i64 0, i32 0
  %34 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %24, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load i8*, i8** %34, align 8
  %36 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %37 = load i64, i64* %36, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %33, i8* %35, i64 %37) #8
  br label %38

38:                                               ; preds = %29, %32
  %39 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2, i32 1
  %40 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2, i32 1
  %41 = load i16, i16* %40, align 8
  store i16 %41, i16* %39, align 8
  %42 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 1
  %43 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 1
  %44 = bitcast i32* %43 to i64*
  %45 = bitcast i32* %42 to i64*
  %46 = load i64, i64* %44, align 8
  store i64 %46, i64* %45, align 8
  %47 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5
  %48 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5
  tail call void @_ZN3net19NetworkIsolationKeyC1ERKS0_(%"class.net::NetworkIsolationKey"* %47, %"class.net::NetworkIsolationKey"* dereferenceable(184) %48) #8
  %49 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 6
  %50 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 6
  %51 = load i32, i32* %50, align 8
  store i32 %51, i32* %49, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net14SpdySessionKeyD2Ev(%"class.net::SpdySessionKey"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5
  tail call void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"* %2) #8
  %3 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2
  %4 = bitcast %"class.net::HostPortPair"* %3 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %5 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %4, i64 0, i32 1, i32 0
  %6 = load i8, i8* %5, align 1
  %7 = icmp slt i8 %6, 0
  br i1 %7, label %8, label %11

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %3, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %10 = load i8*, i8** %9, align 8
  tail call void @_ZdlPv(i8* %10) #9
  br label %11

11:                                               ; preds = %8, %1
  %12 = bitcast %"class.net::SpdySessionKey"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %13 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %12, i64 0, i32 1, i32 0
  %14 = load i8, i8* %13, align 1
  %15 = icmp slt i8 %14, 0
  br i1 %15, label %16, label %19

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %18 = load i8*, i8** %17, align 8
  tail call void @_ZdlPv(i8* %18) #9
  br label %19

19:                                               ; preds = %11, %16
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net19NetworkIsolationKeyD1Ev(%"class.net::NetworkIsolationKey"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14SpdySessionKeyltERKS0_(%"class.net::SpdySessionKey"*, %"class.net::SpdySessionKey"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %3 = alloca %"struct.std::__1::__tuple_less.13", align 1
  %4 = alloca %"class.std::__1::tuple", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = bitcast %"class.std::__1::tuple"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %6) #8
  %7 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 1
  %8 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1
  %10 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 2
  %11 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5
  %12 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 6
  %13 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 3
  %14 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 0, i32 0
  store i32* %7, i32** %14, align 8, !alias.scope !2
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 1, i32 0
  store %"class.net::HostPortPair"* %8, %"class.net::HostPortPair"** %15, align 8, !alias.scope !2
  %16 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 2, i32 0
  store %"class.net::ProxyServer"* %9, %"class.net::ProxyServer"** %16, align 8, !alias.scope !2
  %17 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 3, i32 0
  store i32* %10, i32** %17, align 8, !alias.scope !2
  %18 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 4, i32 0
  store %"class.net::NetworkIsolationKey"* %11, %"class.net::NetworkIsolationKey"** %18, align 8, !alias.scope !2
  %19 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 5, i32 0
  store i32* %12, i32** %19, align 8, !alias.scope !2
  %20 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %4, i64 0, i32 0, i32 6, i32 0
  store %"class.net::SocketTag"* %13, %"class.net::SocketTag"** %20, align 8, !alias.scope !2
  %21 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 56, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 1
  %23 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 0
  %24 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1
  %25 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 2
  %26 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5
  %27 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 6
  %28 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 3
  %29 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store i32* %22, i32** %29, align 8, !alias.scope !5
  %30 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.net::HostPortPair"* %23, %"class.net::HostPortPair"** %30, align 8, !alias.scope !5
  %31 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 2, i32 0
  store %"class.net::ProxyServer"* %24, %"class.net::ProxyServer"** %31, align 8, !alias.scope !5
  %32 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 3, i32 0
  store i32* %25, i32** %32, align 8, !alias.scope !5
  %33 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 4, i32 0
  store %"class.net::NetworkIsolationKey"* %26, %"class.net::NetworkIsolationKey"** %33, align 8, !alias.scope !5
  %34 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 5, i32 0
  store i32* %27, i32** %34, align 8, !alias.scope !5
  %35 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 6, i32 0
  store %"class.net::SocketTag"* %28, %"class.net::SocketTag"** %35, align 8, !alias.scope !5
  %36 = load i32, i32* %7, align 4
  %37 = load i32, i32* %22, align 4
  %38 = icmp slt i32 %36, %37
  br i1 %38, label %44, label %39

39:                                               ; preds = %2
  %40 = icmp slt i32 %37, %36
  br i1 %40, label %44, label %41

41:                                               ; preds = %39
  %42 = getelementptr inbounds %"struct.std::__1::__tuple_less.13", %"struct.std::__1::__tuple_less.13"* %3, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %42) #8
  %43 = call zeroext i1 @_ZNSt3__112__tuple_lessILm6EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.13"* nonnull %3, %"class.std::__1::tuple"* nonnull dereferenceable(56) %4, %"class.std::__1::tuple"* nonnull dereferenceable(56) %5) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %42) #8
  br label %44

44:                                               ; preds = %2, %39, %41
  %45 = phi i1 [ %43, %41 ], [ true, %2 ], [ false, %39 ]
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 56, i8* nonnull %6) #8
  ret i1 %45
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14SpdySessionKeyeqERKS0_(%"class.net::SpdySessionKey"*, %"class.net::SpdySessionKey"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %186

8:                                                ; preds = %2
  %9 = bitcast %"class.net::SpdySessionKey"* %0 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %10 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %9, i64 0, i32 1, i32 0
  %11 = load i8, i8* %10, align 1
  %12 = icmp slt i8 %11, 0
  %13 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %14 = load i64, i64* %13, align 8
  %15 = zext i8 %11 to i64
  %16 = select i1 %12, i64 %14, i64 %15
  %17 = bitcast %"class.net::SpdySessionKey"* %1 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = icmp eq i64 %16, %24
  br i1 %25, label %26, label %186

26:                                               ; preds = %8
  %27 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %28 = load i8*, i8** %27, align 8
  %29 = bitcast %"class.net::SpdySessionKey"* %0 to i8*
  %30 = select i1 %12, i8* %28, i8* %29
  %31 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %32 = load i8*, i8** %31, align 8
  %33 = bitcast %"class.net::SpdySessionKey"* %1 to i8*
  %34 = select i1 %20, i8* %32, i8* %33
  %35 = icmp eq i64 %16, 0
  br i1 %12, label %42, label %36

36:                                               ; preds = %26
  br i1 %35, label %58, label %37

37:                                               ; preds = %36
  %38 = ptrtoint i8* %28 to i64
  %39 = trunc i64 %38 to i8
  %40 = load i8, i8* %34, align 1
  %41 = icmp eq i8 %40, %39
  br i1 %41, label %43, label %186

42:                                               ; preds = %26
  br i1 %35, label %58, label %55

43:                                               ; preds = %37, %50
  %44 = phi i64 [ %47, %50 ], [ %15, %37 ]
  %45 = phi i8* [ %48, %50 ], [ %29, %37 ]
  %46 = phi i8* [ %51, %50 ], [ %34, %37 ]
  %47 = add i64 %44, -1
  %48 = getelementptr inbounds i8, i8* %45, i64 1
  %49 = icmp eq i64 %47, 0
  br i1 %49, label %58, label %50

50:                                               ; preds = %43
  %51 = getelementptr inbounds i8, i8* %46, i64 1
  %52 = load i8, i8* %48, align 1
  %53 = load i8, i8* %51, align 1
  %54 = icmp eq i8 %52, %53
  br i1 %54, label %43, label %186

55:                                               ; preds = %42
  %56 = tail call i32 @bcmp(i8* %30, i8* %34, i64 %16) #8
  %57 = icmp eq i32 %56, 0
  br i1 %57, label %58, label %186

58:                                               ; preds = %43, %36, %42, %55
  %59 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0, i32 1
  %60 = load i16, i16* %59, align 8
  %61 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 0, i32 1
  %62 = load i16, i16* %61, align 8
  %63 = icmp eq i16 %60, %62
  br i1 %63, label %64, label %186

64:                                               ; preds = %58
  %65 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 0
  %66 = load i32, i32* %65, align 8
  %67 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 0
  %68 = load i32, i32* %67, align 8
  %69 = icmp eq i32 %66, %68
  br i1 %69, label %70, label %186

70:                                               ; preds = %64
  %71 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2
  %72 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2
  %73 = bitcast %"class.net::HostPortPair"* %71 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %74 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %73, i64 0, i32 1, i32 0
  %75 = load i8, i8* %74, align 1
  %76 = icmp slt i8 %75, 0
  %77 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %78 = load i64, i64* %77, align 8
  %79 = zext i8 %75 to i64
  %80 = select i1 %76, i64 %78, i64 %79
  %81 = bitcast %"class.net::HostPortPair"* %72 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %82 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %81, i64 0, i32 1, i32 0
  %83 = load i8, i8* %82, align 1
  %84 = icmp slt i8 %83, 0
  %85 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %86 = load i64, i64* %85, align 8
  %87 = zext i8 %83 to i64
  %88 = select i1 %84, i64 %86, i64 %87
  %89 = icmp eq i64 %80, %88
  br i1 %89, label %90, label %186

90:                                               ; preds = %70
  %91 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %71, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %92 = load i8*, i8** %91, align 8
  %93 = bitcast %"class.net::HostPortPair"* %71 to i8*
  %94 = select i1 %76, i8* %92, i8* %93
  %95 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8*, i8** %95, align 8
  %97 = bitcast %"class.net::HostPortPair"* %72 to i8*
  %98 = select i1 %84, i8* %96, i8* %97
  %99 = icmp eq i64 %80, 0
  br i1 %76, label %106, label %100

100:                                              ; preds = %90
  br i1 %99, label %122, label %101

101:                                              ; preds = %100
  %102 = ptrtoint i8* %92 to i64
  %103 = trunc i64 %102 to i8
  %104 = load i8, i8* %98, align 1
  %105 = icmp eq i8 %104, %103
  br i1 %105, label %107, label %186

106:                                              ; preds = %90
  br i1 %99, label %122, label %119

107:                                              ; preds = %101, %114
  %108 = phi i64 [ %111, %114 ], [ %79, %101 ]
  %109 = phi i8* [ %112, %114 ], [ %93, %101 ]
  %110 = phi i8* [ %115, %114 ], [ %98, %101 ]
  %111 = add i64 %108, -1
  %112 = getelementptr inbounds i8, i8* %109, i64 1
  %113 = icmp eq i64 %111, 0
  br i1 %113, label %122, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds i8, i8* %110, i64 1
  %116 = load i8, i8* %112, align 1
  %117 = load i8, i8* %115, align 1
  %118 = icmp eq i8 %116, %117
  br i1 %118, label %107, label %186

119:                                              ; preds = %106
  %120 = tail call i32 @bcmp(i8* %94, i8* %98, i64 %80) #8
  %121 = icmp eq i32 %120, 0
  br i1 %121, label %122, label %186

122:                                              ; preds = %107, %100, %106, %119
  %123 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2, i32 1
  %124 = load i16, i16* %123, align 8
  %125 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2, i32 1
  %126 = load i16, i16* %125, align 8
  %127 = icmp eq i16 %124, %126
  br i1 %127, label %128, label %186

128:                                              ; preds = %122
  %129 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 2
  %130 = load i32, i32* %129, align 4
  %131 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 2
  %132 = load i32, i32* %131, align 4
  %133 = icmp eq i32 %130, %132
  br i1 %133, label %134, label %186

134:                                              ; preds = %128
  %135 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 0
  %136 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 0
  %137 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0
  %138 = load i8, i8* %137, align 8, !range !8
  %139 = icmp ne i8 %138, 0
  %140 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0
  %141 = load i8, i8* %140, align 8, !range !8
  %142 = icmp ne i8 %141, 0
  %143 = xor i1 %139, %142
  %144 = xor i1 %139, true
  %145 = or i1 %143, %144
  br i1 %145, label %153, label %146

146:                                              ; preds = %134
  %147 = icmp eq i8 %141, 0
  br i1 %147, label %148, label %149, !prof !9

148:                                              ; preds = %146
  tail call void @llvm.trap() #8
  unreachable

149:                                              ; preds = %146
  %150 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %151 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %152 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %150, %"class.net::SchemefulSite"* dereferenceable(80) %151) #8
  br i1 %152, label %154, label %186

153:                                              ; preds = %134
  br i1 %143, label %186, label %154

154:                                              ; preds = %153, %149
  %155 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0
  %156 = load i8, i8* %155, align 8, !range !8
  %157 = icmp ne i8 %156, 0
  %158 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !8
  %160 = icmp ne i8 %159, 0
  %161 = xor i1 %157, %160
  %162 = xor i1 %157, true
  %163 = or i1 %161, %162
  br i1 %163, label %171, label %164

164:                                              ; preds = %154
  %165 = icmp eq i8 %159, 0
  br i1 %165, label %166, label %167, !prof !9

166:                                              ; preds = %164
  tail call void @llvm.trap() #8
  unreachable

167:                                              ; preds = %164
  %168 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %169 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %170 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %168, %"class.net::SchemefulSite"* dereferenceable(80) %169) #8
  br i1 %170, label %172, label %186

171:                                              ; preds = %154
  br i1 %161, label %186, label %172

172:                                              ; preds = %167, %171
  %173 = load i8, i8* %135, align 1, !range !8
  %174 = load i8, i8* %136, align 1, !range !8
  %175 = icmp eq i8 %173, %174
  br i1 %175, label %176, label %186

176:                                              ; preds = %172
  %177 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 6
  %178 = load i32, i32* %177, align 8
  %179 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 6
  %180 = load i32, i32* %179, align 8
  %181 = icmp eq i32 %178, %180
  br i1 %181, label %182, label %186

182:                                              ; preds = %176
  %183 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 3
  %184 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 3
  %185 = tail call zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"* %183, %"class.net::SocketTag"* dereferenceable(1) %184) #8
  br label %186

186:                                              ; preds = %50, %114, %37, %149, %153, %167, %171, %101, %70, %119, %64, %8, %55, %182, %176, %172, %128, %122, %58, %2
  %187 = phi i1 [ false, %176 ], [ false, %172 ], [ false, %128 ], [ false, %122 ], [ false, %58 ], [ false, %2 ], [ %185, %182 ], [ false, %55 ], [ false, %8 ], [ false, %64 ], [ false, %119 ], [ false, %70 ], [ false, %101 ], [ false, %171 ], [ false, %167 ], [ false, %153 ], [ false, %149 ], [ false, %37 ], [ false, %114 ], [ false, %50 ]
  ret i1 %187
}

declare zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net14SpdySessionKeyneERKS0_(%"class.net::SpdySessionKey"*, %"class.net::SpdySessionKey"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3net14SpdySessionKeyeqERKS0_(%"class.net::SpdySessionKey"* %0, %"class.net::SpdySessionKey"* dereferenceable(280) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden i16 @_ZNK3net14SpdySessionKey18CompareForAliasingERKS0_(%"class.net::SpdySessionKey"*, %"class.net::SpdySessionKey"* dereferenceable(280)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 1
  %4 = load i32, i32* %3, align 8
  %5 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 1
  %6 = load i32, i32* %5, align 8
  %7 = icmp eq i32 %4, %6
  br i1 %7, label %8, label %127

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = icmp eq i32 %10, %12
  br i1 %13, label %14, label %127

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2
  %16 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2
  %17 = bitcast %"class.net::HostPortPair"* %15 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.net::HostPortPair"* %16 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp eq i64 %24, %32
  br i1 %33, label %34, label %127

34:                                               ; preds = %14
  %35 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %15, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %36 = load i8*, i8** %35, align 8
  %37 = bitcast %"class.net::HostPortPair"* %15 to i8*
  %38 = select i1 %20, i8* %36, i8* %37
  %39 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %40 = load i8*, i8** %39, align 8
  %41 = bitcast %"class.net::HostPortPair"* %16 to i8*
  %42 = select i1 %28, i8* %40, i8* %41
  %43 = icmp eq i64 %24, 0
  br i1 %20, label %50, label %44

44:                                               ; preds = %34
  br i1 %43, label %66, label %45

45:                                               ; preds = %44
  %46 = ptrtoint i8* %36 to i64
  %47 = trunc i64 %46 to i8
  %48 = load i8, i8* %42, align 1
  %49 = icmp eq i8 %48, %47
  br i1 %49, label %51, label %127

50:                                               ; preds = %34
  br i1 %43, label %66, label %63

51:                                               ; preds = %45, %58
  %52 = phi i64 [ %55, %58 ], [ %23, %45 ]
  %53 = phi i8* [ %56, %58 ], [ %37, %45 ]
  %54 = phi i8* [ %59, %58 ], [ %42, %45 ]
  %55 = add i64 %52, -1
  %56 = getelementptr inbounds i8, i8* %53, i64 1
  %57 = icmp eq i64 %55, 0
  br i1 %57, label %66, label %58

58:                                               ; preds = %51
  %59 = getelementptr inbounds i8, i8* %54, i64 1
  %60 = load i8, i8* %56, align 1
  %61 = load i8, i8* %59, align 1
  %62 = icmp eq i8 %60, %61
  br i1 %62, label %51, label %127

63:                                               ; preds = %50
  %64 = tail call i32 @bcmp(i8* %38, i8* %42, i64 %24) #8
  %65 = icmp eq i32 %64, 0
  br i1 %65, label %66, label %127

66:                                               ; preds = %51, %44, %50, %63
  %67 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1, i32 2, i32 1
  %68 = load i16, i16* %67, align 8
  %69 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 0, i32 1, i32 2, i32 1
  %70 = load i16, i16* %69, align 8
  %71 = icmp eq i16 %68, %70
  br i1 %71, label %72, label %127

72:                                               ; preds = %66
  %73 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 2
  %74 = load i32, i32* %73, align 4
  %75 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 2
  %76 = load i32, i32* %75, align 4
  %77 = icmp eq i32 %74, %76
  br i1 %77, label %78, label %127

78:                                               ; preds = %72
  %79 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 0
  %80 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 0
  %81 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0
  %82 = load i8, i8* %81, align 8, !range !8
  %83 = icmp ne i8 %82, 0
  %84 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 0
  %85 = load i8, i8* %84, align 8, !range !8
  %86 = icmp ne i8 %85, 0
  %87 = xor i1 %83, %86
  %88 = xor i1 %83, true
  %89 = or i1 %87, %88
  br i1 %89, label %97, label %90

90:                                               ; preds = %78
  %91 = icmp eq i8 %85, 0
  br i1 %91, label %92, label %93, !prof !9

92:                                               ; preds = %90
  tail call void @llvm.trap() #8
  unreachable

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %95 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %96 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %94, %"class.net::SchemefulSite"* dereferenceable(80) %95) #8
  br i1 %96, label %98, label %127

97:                                               ; preds = %78
  br i1 %87, label %127, label %98

98:                                               ; preds = %97, %93
  %99 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0
  %100 = load i8, i8* %99, align 8, !range !8
  %101 = icmp ne i8 %100, 0
  %102 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 0
  %103 = load i8, i8* %102, align 8, !range !8
  %104 = icmp ne i8 %103, 0
  %105 = xor i1 %101, %104
  %106 = xor i1 %101, true
  %107 = or i1 %105, %106
  br i1 %107, label %115, label %108

108:                                              ; preds = %98
  %109 = icmp eq i8 %103, 0
  br i1 %109, label %110, label %111, !prof !9

110:                                              ; preds = %108
  tail call void @llvm.trap() #8
  unreachable

111:                                              ; preds = %108
  %112 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %113 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 5, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %114 = tail call zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"* %112, %"class.net::SchemefulSite"* dereferenceable(80) %113) #8
  br i1 %114, label %116, label %127

115:                                              ; preds = %98
  br i1 %105, label %127, label %116

116:                                              ; preds = %111, %115
  %117 = load i8, i8* %79, align 1, !range !8
  %118 = load i8, i8* %80, align 1, !range !8
  %119 = icmp eq i8 %117, %118
  br i1 %119, label %120, label %127

120:                                              ; preds = %116
  %121 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 6
  %122 = load i32, i32* %121, align 8
  %123 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 6
  %124 = load i32, i32* %123, align 8
  %125 = icmp eq i32 %122, %124
  %126 = zext i1 %125 to i16
  br label %127

127:                                              ; preds = %58, %93, %97, %111, %115, %45, %14, %63, %8, %120, %116, %72, %66, %2
  %128 = phi i16 [ 0, %116 ], [ 0, %72 ], [ 0, %66 ], [ 0, %2 ], [ %126, %120 ], [ 0, %8 ], [ 0, %63 ], [ 0, %14 ], [ 0, %45 ], [ 0, %115 ], [ 0, %111 ], [ 0, %97 ], [ 0, %93 ], [ 0, %58 ]
  %129 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 3
  %130 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %1, i64 0, i32 3
  %131 = tail call zeroext i1 @_ZNK3net9SocketTageqERKS0_(%"class.net::SocketTag"* %129, %"class.net::SocketTag"* dereferenceable(1) %130) #8
  %132 = zext i1 %131 to i16
  %133 = shl nuw nsw i16 %132, 8
  %134 = or i16 %133, %128
  ret i16 %134
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @_ZNK3net14SpdySessionKey19EstimateMemoryUsageEv(%"class.net::SpdySessionKey"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 0
  %3 = tail call i64 @_ZNK3net12HostPortPair19EstimateMemoryUsageEv(%"class.net::HostPortPair"* %2) #8
  %4 = getelementptr inbounds %"class.net::SpdySessionKey", %"class.net::SpdySessionKey"* %0, i64 0, i32 0, i32 1
  %5 = tail call i64 @_ZNK3net11ProxyServer19EstimateMemoryUsageEv(%"class.net::ProxyServer"* %4) #8
  %6 = add i64 %5, %3
  ret i64 %6
}

declare void @_ZN3net12HostPortPairC1Ev(%"class.net::HostPortPair"*) unnamed_addr #1

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #1

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm6EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.13"*, %"class.std::__1::tuple"* dereferenceable(56), %"class.std::__1::tuple"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.14", align 1
  %5 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 1, i32 0
  %6 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 1, i32 0
  %8 = load %"class.net::HostPortPair"*, %"class.net::HostPortPair"** %7, align 8
  %9 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 1
  %10 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 1
  %11 = load i16, i16* %9, align 2
  %12 = load i16, i16* %10, align 2
  %13 = icmp ult i16 %11, %12
  br i1 %13, label %89, label %14

14:                                               ; preds = %3
  %15 = icmp ult i16 %12, %11
  br i1 %15, label %89, label %16

16:                                               ; preds = %14
  %17 = bitcast %"class.net::HostPortPair"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %18 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %17, i64 0, i32 1, i32 0
  %19 = load i8, i8* %18, align 1
  %20 = icmp slt i8 %19, 0
  %21 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %22 = load i64, i64* %21, align 8
  %23 = zext i8 %19 to i64
  %24 = select i1 %20, i64 %22, i64 %23
  %25 = bitcast %"class.net::HostPortPair"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %26 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %25, i64 0, i32 1, i32 0
  %27 = load i8, i8* %26, align 1
  %28 = icmp slt i8 %27, 0
  %29 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = zext i8 %27 to i64
  %32 = select i1 %28, i64 %30, i64 %31
  %33 = icmp ult i64 %24, %32
  %34 = select i1 %33, i64 %24, i64 %32
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %47, label %36

36:                                               ; preds = %16
  %37 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %38 = load i8*, i8** %37, align 8
  %39 = bitcast %"class.net::HostPortPair"* %6 to i8*
  %40 = select i1 %28, i8* %38, i8* %39
  %41 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8*, i8** %41, align 8
  %43 = bitcast %"class.net::HostPortPair"* %8 to i8*
  %44 = select i1 %20, i8* %42, i8* %43
  %45 = tail call i32 @memcmp(i8* %40, i8* %44, i64 %34) #8
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %49

47:                                               ; preds = %36, %16
  %48 = icmp ult i64 %32, %24
  br i1 %48, label %89, label %51

49:                                               ; preds = %36
  %50 = icmp slt i32 %45, 0
  br i1 %50, label %89, label %51

51:                                               ; preds = %47, %49
  %52 = bitcast %"class.net::HostPortPair"* %6 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %53 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %52, i64 0, i32 1, i32 0
  %54 = load i8, i8* %53, align 1
  %55 = icmp slt i8 %54, 0
  %56 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %57 = load i64, i64* %56, align 8
  %58 = zext i8 %54 to i64
  %59 = select i1 %55, i64 %57, i64 %58
  %60 = bitcast %"class.net::HostPortPair"* %8 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %61 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %60, i64 0, i32 1, i32 0
  %62 = load i8, i8* %61, align 1
  %63 = icmp slt i8 %62, 0
  %64 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %65 = load i64, i64* %64, align 8
  %66 = zext i8 %62 to i64
  %67 = select i1 %63, i64 %65, i64 %66
  %68 = icmp ult i64 %59, %67
  %69 = select i1 %68, i64 %59, i64 %67
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %82, label %71

71:                                               ; preds = %51
  %72 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %8, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %73 = load i8*, i8** %72, align 8
  %74 = bitcast %"class.net::HostPortPair"* %8 to i8*
  %75 = select i1 %63, i8* %73, i8* %74
  %76 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load i8*, i8** %76, align 8
  %78 = bitcast %"class.net::HostPortPair"* %6 to i8*
  %79 = select i1 %55, i8* %77, i8* %78
  %80 = tail call i32 @memcmp(i8* %75, i8* %79, i64 %69) #8
  %81 = icmp eq i32 %80, 0
  br i1 %81, label %82, label %84

82:                                               ; preds = %71, %51
  %83 = icmp ult i64 %67, %59
  br i1 %83, label %89, label %86

84:                                               ; preds = %71
  %85 = icmp slt i32 %80, 0
  br i1 %85, label %89, label %86

86:                                               ; preds = %82, %84
  %87 = getelementptr inbounds %"struct.std::__1::__tuple_less.14", %"struct.std::__1::__tuple_less.14"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %87) #8
  %88 = call zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.14"* nonnull %4, %"class.std::__1::tuple"* dereferenceable(56) %1, %"class.std::__1::tuple"* dereferenceable(56) %2)
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %87) #8
  br label %89

89:                                               ; preds = %14, %3, %82, %47, %84, %49, %86
  %90 = phi i1 [ %88, %86 ], [ true, %49 ], [ false, %84 ], [ true, %47 ], [ false, %82 ], [ true, %3 ], [ false, %14 ]
  ret i1 %90
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm5EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.14"*, %"class.std::__1::tuple"* dereferenceable(56), %"class.std::__1::tuple"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.29", align 1
  %5 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 2, i32 0
  %6 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %5, align 8
  %7 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 2, i32 0
  %8 = load %"class.net::ProxyServer"*, %"class.net::ProxyServer"** %7, align 8
  %9 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 0
  %10 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2
  %11 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 0
  %12 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 2
  %13 = load i32, i32* %9, align 4
  %14 = load i32, i32* %11, align 4
  %15 = icmp slt i32 %13, %14
  br i1 %15, label %117, label %16

16:                                               ; preds = %3
  %17 = icmp slt i32 %14, %13
  br i1 %17, label %117, label %18

18:                                               ; preds = %16
  %19 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2, i32 1
  %20 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 2, i32 1
  %21 = load i16, i16* %19, align 2
  %22 = load i16, i16* %20, align 2
  %23 = icmp ult i16 %21, %22
  br i1 %23, label %117, label %24

24:                                               ; preds = %18
  %25 = icmp ult i16 %22, %21
  br i1 %25, label %61, label %26

26:                                               ; preds = %24
  %27 = bitcast %"class.net::HostPortPair"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %28 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %27, i64 0, i32 1, i32 0
  %29 = load i8, i8* %28, align 1
  %30 = icmp slt i8 %29, 0
  %31 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %32 = load i64, i64* %31, align 8
  %33 = zext i8 %29 to i64
  %34 = select i1 %30, i64 %32, i64 %33
  %35 = bitcast %"class.net::HostPortPair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %36 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %35, i64 0, i32 1, i32 0
  %37 = load i8, i8* %36, align 1
  %38 = icmp slt i8 %37, 0
  %39 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %40 = load i64, i64* %39, align 8
  %41 = zext i8 %37 to i64
  %42 = select i1 %38, i64 %40, i64 %41
  %43 = icmp ult i64 %34, %42
  %44 = select i1 %43, i64 %34, i64 %42
  %45 = icmp eq i64 %44, 0
  br i1 %45, label %57, label %46

46:                                               ; preds = %26
  %47 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %48 = load i8*, i8** %47, align 8
  %49 = bitcast %"class.net::HostPortPair"* %10 to i8*
  %50 = select i1 %38, i8* %48, i8* %49
  %51 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = bitcast %"class.net::HostPortPair"* %12 to i8*
  %54 = select i1 %30, i8* %52, i8* %53
  %55 = tail call i32 @memcmp(i8* %50, i8* %54, i64 %44) #8
  %56 = icmp eq i32 %55, 0
  br i1 %56, label %57, label %59

57:                                               ; preds = %46, %26
  %58 = icmp ult i64 %42, %34
  br i1 %58, label %117, label %61

59:                                               ; preds = %46
  %60 = icmp slt i32 %55, 0
  br i1 %60, label %117, label %61

61:                                               ; preds = %24, %57, %59
  %62 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 2, i32 1
  %63 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2, i32 1
  %64 = load i16, i16* %62, align 2
  %65 = load i16, i16* %63, align 2
  %66 = icmp ult i16 %64, %65
  br i1 %66, label %117, label %67

67:                                               ; preds = %61
  %68 = icmp ult i16 %65, %64
  br i1 %68, label %104, label %69

69:                                               ; preds = %67
  %70 = bitcast %"class.net::HostPortPair"* %10 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %71 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %70, i64 0, i32 1, i32 0
  %72 = load i8, i8* %71, align 1
  %73 = icmp slt i8 %72, 0
  %74 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %6, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %75 = load i64, i64* %74, align 8
  %76 = zext i8 %72 to i64
  %77 = select i1 %73, i64 %75, i64 %76
  %78 = bitcast %"class.net::HostPortPair"* %12 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  %82 = getelementptr inbounds %"class.net::ProxyServer", %"class.net::ProxyServer"* %8, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %83 = load i64, i64* %82, align 8
  %84 = zext i8 %80 to i64
  %85 = select i1 %81, i64 %83, i64 %84
  %86 = icmp ult i64 %77, %85
  %87 = select i1 %86, i64 %77, i64 %85
  %88 = icmp eq i64 %87, 0
  br i1 %88, label %100, label %89

89:                                               ; preds = %69
  %90 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %12, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %91 = load i8*, i8** %90, align 8
  %92 = bitcast %"class.net::HostPortPair"* %12 to i8*
  %93 = select i1 %81, i8* %91, i8* %92
  %94 = getelementptr inbounds %"class.net::HostPortPair", %"class.net::HostPortPair"* %10, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = bitcast %"class.net::HostPortPair"* %10 to i8*
  %97 = select i1 %73, i8* %95, i8* %96
  %98 = tail call i32 @memcmp(i8* %93, i8* %97, i64 %87) #8
  %99 = icmp eq i32 %98, 0
  br i1 %99, label %100, label %102

100:                                              ; preds = %89, %69
  %101 = icmp ult i64 %85, %77
  br i1 %101, label %117, label %104

102:                                              ; preds = %89
  %103 = icmp slt i32 %98, 0
  br i1 %103, label %117, label %104

104:                                              ; preds = %67, %100, %102
  %105 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 3, i32 0
  %106 = load i32*, i32** %105, align 8
  %107 = load i32, i32* %106, align 4
  %108 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 3, i32 0
  %109 = load i32*, i32** %108, align 8
  %110 = load i32, i32* %109, align 4
  %111 = icmp slt i32 %107, %110
  br i1 %111, label %117, label %112

112:                                              ; preds = %104
  %113 = icmp slt i32 %110, %107
  br i1 %113, label %117, label %114

114:                                              ; preds = %112
  %115 = getelementptr inbounds %"struct.std::__1::__tuple_less.29", %"struct.std::__1::__tuple_less.29"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %115) #8
  %116 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.29"* nonnull %4, %"class.std::__1::tuple"* dereferenceable(56) %1, %"class.std::__1::tuple"* dereferenceable(56) %2) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %115) #8
  br label %117

117:                                              ; preds = %16, %61, %18, %3, %114, %112, %104, %100, %57, %102, %59
  %118 = phi i1 [ true, %59 ], [ false, %102 ], [ true, %57 ], [ false, %100 ], [ %116, %114 ], [ true, %104 ], [ false, %112 ], [ true, %3 ], [ true, %18 ], [ false, %61 ], [ false, %16 ]
  ret i1 %118
}

; Function Attrs: nofree nounwind readonly
declare i32 @memcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN3net11PrivacyModeERKNS4_12HostPortPairERKNS4_11ProxyServerERKNS4_14SpdySessionKey14IsProxySessionERKNS4_19NetworkIsolationKeyERKNS4_15SecureDnsPolicyERKNS4_9SocketTagEEEESR_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.29"*, %"class.std::__1::tuple"* dereferenceable(56), %"class.std::__1::tuple"* dereferenceable(56)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"struct.std::__1::__tuple_less.29", align 1
  %5 = alloca %"class.std::__1::tuple.30", align 8
  %6 = alloca %"class.std::__1::tuple.30", align 8
  %7 = alloca %"struct.std::__1::__tuple_less.29", align 1
  %8 = alloca %"class.std::__1::tuple.30", align 8
  %9 = alloca %"class.std::__1::tuple.30", align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 4, i32 0
  %11 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %10, align 8
  %12 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 4, i32 0
  %13 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %12, align 8
  %14 = bitcast %"class.std::__1::tuple.30"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #8
  %15 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 1
  %16 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 2
  %17 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %11, i64 0, i32 0
  %18 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %8, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %15, %"class.absl::optional"** %18, align 8, !alias.scope !10
  %19 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %8, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %16, %"class.absl::optional"** %19, align 8, !alias.scope !10
  %20 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %8, i64 0, i32 0, i32 2, i32 0
  store i8* %17, i8** %20, align 8, !alias.scope !10
  %21 = bitcast %"class.std::__1::tuple.30"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %21) #8
  %22 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 1
  %23 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 2
  %24 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %13, i64 0, i32 0
  %25 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %9, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %22, %"class.absl::optional"** %25, align 8, !alias.scope !13
  %26 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %9, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %23, %"class.absl::optional"** %26, align 8, !alias.scope !13
  %27 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %9, i64 0, i32 0, i32 2, i32 0
  store i8* %24, i8** %27, align 8, !alias.scope !13
  %28 = getelementptr inbounds %"struct.std::__1::__tuple_less.29", %"struct.std::__1::__tuple_less.29"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %28) #8
  %29 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.29"* nonnull %7, %"class.std::__1::tuple.30"* nonnull dereferenceable(24) %8, %"class.std::__1::tuple.30"* nonnull dereferenceable(24) %9) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %28) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %21) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #8
  br i1 %29, label %69, label %30

30:                                               ; preds = %3
  %31 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %12, align 8
  %32 = load %"class.net::NetworkIsolationKey"*, %"class.net::NetworkIsolationKey"** %10, align 8
  %33 = bitcast %"class.std::__1::tuple.30"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %33) #8
  %34 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 1
  %35 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 2
  %36 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %31, i64 0, i32 0
  %37 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %34, %"class.absl::optional"** %37, align 8, !alias.scope !16
  %38 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %5, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %35, %"class.absl::optional"** %38, align 8, !alias.scope !16
  %39 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %5, i64 0, i32 0, i32 2, i32 0
  store i8* %36, i8** %39, align 8, !alias.scope !16
  %40 = bitcast %"class.std::__1::tuple.30"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %40) #8
  %41 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 1
  %42 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 2
  %43 = getelementptr inbounds %"class.net::NetworkIsolationKey", %"class.net::NetworkIsolationKey"* %32, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %6, i64 0, i32 0, i32 0, i32 0
  store %"class.absl::optional"* %41, %"class.absl::optional"** %44, align 8, !alias.scope !19
  %45 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %6, i64 0, i32 0, i32 1, i32 0
  store %"class.absl::optional"* %42, %"class.absl::optional"** %45, align 8, !alias.scope !19
  %46 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %6, i64 0, i32 0, i32 2, i32 0
  store i8* %43, i8** %46, align 8, !alias.scope !19
  %47 = getelementptr inbounds %"struct.std::__1::__tuple_less.29", %"struct.std::__1::__tuple_less.29"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %47) #8
  %48 = call zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.29"* nonnull %4, %"class.std::__1::tuple.30"* nonnull dereferenceable(24) %5, %"class.std::__1::tuple.30"* nonnull dereferenceable(24) %6) #8
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %47) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %40) #8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %33) #8
  br i1 %48, label %69, label %49

49:                                               ; preds = %30
  %50 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 5, i32 0
  %51 = load i32*, i32** %50, align 8
  %52 = load i32, i32* %51, align 4
  %53 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 5, i32 0
  %54 = load i32*, i32** %53, align 8
  %55 = load i32, i32* %54, align 4
  %56 = icmp slt i32 %52, %55
  br i1 %56, label %69, label %57

57:                                               ; preds = %49
  %58 = icmp slt i32 %55, %52
  br i1 %58, label %69, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %1, i64 0, i32 0, i32 6, i32 0
  %61 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %60, align 8
  %62 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %2, i64 0, i32 0, i32 6, i32 0
  %63 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %62, align 8
  %64 = call zeroext i1 @_ZNK3net9SocketTagltERKS0_(%"class.net::SocketTag"* %61, %"class.net::SocketTag"* dereferenceable(1) %63) #8
  br i1 %64, label %69, label %65

65:                                               ; preds = %59
  %66 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %62, align 8
  %67 = load %"class.net::SocketTag"*, %"class.net::SocketTag"** %60, align 8
  %68 = call zeroext i1 @_ZNK3net9SocketTagltERKS0_(%"class.net::SocketTag"* %66, %"class.net::SocketTag"* dereferenceable(1) %67) #8
  br label %69

69:                                               ; preds = %65, %59, %57, %49, %30, %3
  %70 = phi i1 [ true, %3 ], [ false, %30 ], [ true, %49 ], [ false, %57 ], [ true, %59 ], [ false, %65 ]
  ret i1 %70
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNSt3__112__tuple_lessILm3EEclINS_5tupleIJRKN4absl8optionalIN3net13SchemefulSiteEEESA_RKbEEESD_EEbRKT_RKT0_(%"struct.std::__1::__tuple_less.29"*, %"class.std::__1::tuple.30"* dereferenceable(24), %"class.std::__1::tuple.30"* dereferenceable(24)) local_unnamed_addr #0 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %1, i64 0, i32 0, i32 0, i32 0
  %5 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  %6 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %2, i64 0, i32 0, i32 0, i32 0
  %7 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %8 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !8
  %10 = icmp eq i8 %9, 0
  br i1 %10, label %22, label %11

11:                                               ; preds = %3
  %12 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load i8, i8* %12, align 8, !range !8
  %14 = icmp eq i8 %13, 0
  br i1 %14, label %77, label %15

15:                                               ; preds = %11
  %16 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %5, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %7, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %16, %"class.net::SchemefulSite"* dereferenceable(80) %17) #8
  br i1 %18, label %77, label %19

19:                                               ; preds = %15
  %20 = load %"class.absl::optional"*, %"class.absl::optional"** %6, align 8
  %21 = load %"class.absl::optional"*, %"class.absl::optional"** %4, align 8
  br label %22

22:                                               ; preds = %19, %3
  %23 = phi %"class.absl::optional"* [ %21, %19 ], [ %5, %3 ]
  %24 = phi %"class.absl::optional"* [ %20, %19 ], [ %7, %3 ]
  %25 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 8, !range !8
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %36, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 8, !range !8
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %77, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %24, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %34 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %23, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %35 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %33, %"class.net::SchemefulSite"* dereferenceable(80) %34) #8
  br i1 %35, label %77, label %36

36:                                               ; preds = %22, %32
  %37 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %1, i64 0, i32 0, i32 1, i32 0
  %38 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %2, i64 0, i32 0, i32 1, i32 0
  %40 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %41 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !8
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %55, label %44

44:                                               ; preds = %36
  %45 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 8, !range !8
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %77, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %38, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %50 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %40, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %51 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %49, %"class.net::SchemefulSite"* dereferenceable(80) %50) #8
  br i1 %51, label %77, label %52

52:                                               ; preds = %48
  %53 = load %"class.absl::optional"*, %"class.absl::optional"** %39, align 8
  %54 = load %"class.absl::optional"*, %"class.absl::optional"** %37, align 8
  br label %55

55:                                               ; preds = %52, %36
  %56 = phi %"class.absl::optional"* [ %54, %52 ], [ %38, %36 ]
  %57 = phi %"class.absl::optional"* [ %53, %52 ], [ %40, %36 ]
  %58 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8, i8* %58, align 8, !range !8
  %60 = icmp eq i8 %59, 0
  br i1 %60, label %69, label %61

61:                                               ; preds = %55
  %62 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !8
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %77, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %57, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = getelementptr inbounds %"class.absl::optional", %"class.absl::optional"* %56, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %68 = tail call zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"* %66, %"class.net::SchemefulSite"* dereferenceable(80) %67) #8
  br i1 %68, label %77, label %69

69:                                               ; preds = %65, %55
  %70 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %1, i64 0, i32 0, i32 2, i32 0
  %71 = load i8*, i8** %70, align 8
  %72 = load i8, i8* %71, align 1, !range !8
  %73 = getelementptr inbounds %"class.std::__1::tuple.30", %"class.std::__1::tuple.30"* %2, i64 0, i32 0, i32 2, i32 0
  %74 = load i8*, i8** %73, align 8
  %75 = load i8, i8* %74, align 1, !range !8
  %76 = icmp ult i8 %72, %75
  br label %77

77:                                               ; preds = %28, %11, %69, %65, %61, %48, %44, %32, %15
  %78 = phi i1 [ true, %15 ], [ false, %32 ], [ %76, %69 ], [ true, %48 ], [ false, %65 ], [ true, %44 ], [ false, %61 ], [ true, %11 ], [ false, %28 ]
  ret i1 %78
}

declare zeroext i1 @_ZNK3net13SchemefulSiteltERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #6

declare zeroext i1 @_ZNK3net9SocketTagltERKS0_(%"class.net::SocketTag"*, %"class.net::SocketTag"* dereferenceable(1)) local_unnamed_addr #1

declare zeroext i1 @_ZNK3net13SchemefulSiteeqERKS0_(%"class.net::SchemefulSite"*, %"class.net::SchemefulSite"* dereferenceable(80)) local_unnamed_addr #1

declare i64 @_ZNK3net12HostPortPair19EstimateMemoryUsageEv(%"class.net::HostPortPair"*) local_unnamed_addr #1

declare i64 @_ZNK3net11ProxyServer19EstimateMemoryUsageEv(%"class.net::ProxyServer"*) local_unnamed_addr #1

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #7

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { cold noreturn nounwind }
attributes #7 = { nofree nounwind readonly }
attributes #8 = { nounwind }
attributes #9 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!3}
!3 = distinct !{!3, !4, !"_ZNSt3__13tieIJKN3net11PrivacyModeEKNS1_12HostPortPairEKNS1_11ProxyServerEKNS1_14SpdySessionKey14IsProxySessionEKNS1_19NetworkIsolationKeyEKNS1_15SecureDnsPolicyEKNS1_9SocketTagEEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!4 = distinct !{!4, !"_ZNSt3__13tieIJKN3net11PrivacyModeEKNS1_12HostPortPairEKNS1_11ProxyServerEKNS1_14SpdySessionKey14IsProxySessionEKNS1_19NetworkIsolationKeyEKNS1_15SecureDnsPolicyEKNS1_9SocketTagEEEENS_5tupleIJDpRT_EEESK_"}
!5 = !{!6}
!6 = distinct !{!6, !7, !"_ZNSt3__13tieIJKN3net11PrivacyModeEKNS1_12HostPortPairEKNS1_11ProxyServerEKNS1_14SpdySessionKey14IsProxySessionEKNS1_19NetworkIsolationKeyEKNS1_15SecureDnsPolicyEKNS1_9SocketTagEEEENS_5tupleIJDpRT_EEESK_: argument 0"}
!7 = distinct !{!7, !"_ZNSt3__13tieIJKN3net11PrivacyModeEKNS1_12HostPortPairEKNS1_11ProxyServerEKNS1_14SpdySessionKey14IsProxySessionEKNS1_19NetworkIsolationKeyEKNS1_15SecureDnsPolicyEKNS1_9SocketTagEEEENS_5tupleIJDpRT_EEESK_"}
!8 = !{i8 0, i8 2}
!9 = !{!"branch_weights", i32 1, i32 2000}
!10 = !{!11}
!11 = distinct !{!11, !12, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!12 = distinct !{!12, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!15 = distinct !{!15, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!18 = distinct !{!18, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_: argument 0"}
!21 = distinct !{!21, !"_ZNSt3__13tieIJKN4absl8optionalIN3net13SchemefulSiteEEES6_KbEEENS_5tupleIJDpRT_EEESB_"}
