; ModuleID = '../../third_party/tflite/src/tensorflow/lite/kernels/transpose.cc'
source_filename = "../../third_party/tflite/src/tensorflow/lite/kernels/transpose.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.TfLiteRegistration = type { i8* (%struct.TfLiteContext*, i8*, i64)*, void (%struct.TfLiteContext*, i8*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)*, i32, i8*, i32 }
%struct.TfLiteContext = type { i64, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray**)*, %struct.TfLiteTensor*, i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, void (%struct.TfLiteContext*, i8*, ...)*, i32 (%struct.TfLiteContext*, i32, i32*)*, i32 (%struct.TfLiteContext*, i32, %struct.TfLiteNode**, %struct.TfLiteRegistration**)*, i32 (%struct.TfLiteContext*, %struct.TfLiteRegistration*, %struct.TfLiteIntArray*, %struct.TfLiteDelegate*)*, i32, %struct.TfLiteExternalContext* (%struct.TfLiteContext*, i32)*, void (%struct.TfLiteContext*, i32, %struct.TfLiteExternalContext*)*, i8, i8*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i8**)*, i32 (%struct.TfLiteContext*, i64, i32*)*, i8* (%struct.TfLiteContext*, i32)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, i32, i32*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteIntArray*, %struct.TfLiteDelegateParams**, i32*)* }
%struct.TfLiteIntArray = type { i32, [0 x i32] }
%struct.TfLiteTensor = type { i32, %union.TfLitePtrUnion, %struct.TfLiteIntArray*, %struct.TfLiteQuantizationParams, i32, i64, i8*, i8*, %struct.TfLiteDelegate*, i32, i8, i8, %struct.TfLiteQuantization, %struct.TfLiteSparsity*, %struct.TfLiteIntArray* }
%union.TfLitePtrUnion = type { i32* }
%struct.TfLiteQuantizationParams = type { float, i32 }
%struct.TfLiteDelegate = type { i8*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32, %struct.TfLiteTensor*)*, void (%struct.TfLiteContext*, %struct.TfLiteDelegate*, i32*)*, i64 }
%struct.TfLiteQuantization = type { i32, i8* }
%struct.TfLiteSparsity = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteDimensionMetadata*, i32 }
%struct.TfLiteDimensionMetadata = type { i32, i32, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%struct.TfLiteNode = type { %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, i8*, i8*, i8*, i32, %struct.TfLiteDelegate* }
%struct.TfLiteExternalContext = type { i32, i32 (%struct.TfLiteContext*)* }
%struct.TfLiteDelegateParams = type { %struct.TfLiteDelegate*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray*, %struct.TfLiteIntArray* }
%"struct.tflite::ops::builtin::transpose::TransposeContext" = type { %struct.TfLiteTensor*, %struct.TfLiteTensor*, %struct.TfLiteTensor* }
%"struct.tflite::TransposeParams" = type { i8, [5 x i32] }
%"class.tflite::RuntimeShape" = type { i32, %union.anon }
%union.anon = type { i32*, [16 x i8] }
%"struct.tflite::NdArrayDesc" = type { [5 x i32], [5 x i32] }

$_ZN6tflite3ops7builtin9transpose4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite3ops7builtin9transpose4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode = comdat any

$_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13reference_ops13TransposeImplIlLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops9TransposeIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_ = comdat any

$_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_ = comdat any

@.str = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%d != %d)\00", align 1
@.str.3 = private unnamed_addr constant [66 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/transpose.cc\00", align 1
@.str.4 = private unnamed_addr constant [32 x i8] c"NumDimensions(op_context->perm)\00", align 1
@.str.5 = private unnamed_addr constant [2 x i8] c"1\00", align 1
@.str.6 = private unnamed_addr constant [32 x i8] c"op_context->perm->dims->data[0]\00", align 1
@.str.7 = private unnamed_addr constant [5 x i8] c"dims\00", align 1
@.str.8 = private unnamed_addr constant [116 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/transpose.cc Transpose op permutations array is out of bounds.\00", align 1
@.str.9 = private unnamed_addr constant [16 x i8] c"NumInputs(node)\00", align 1
@.str.10 = private unnamed_addr constant [2 x i8] c"2\00", align 1
@.str.11 = private unnamed_addr constant [17 x i8] c"NumOutputs(node)\00", align 1
@.str.12 = private unnamed_addr constant [113 x i8] c"../../third_party/tflite/src/tensorflow/lite/kernels/transpose.cc Transpose op only supports 1D-5D input arrays.\00", align 1
@.str.13 = private unnamed_addr constant [26 x i8] c"%s:%d %s != %s (%s != %s)\00", align 1
@.str.14 = private unnamed_addr constant [23 x i8] c"op_context.input->type\00", align 1
@.str.15 = private unnamed_addr constant [24 x i8] c"op_context.output->type\00", align 1
@_ZZN6tflite3ops7builtin22Register_TRANSPOSE_REFEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9transpose7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9transpose4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@_ZZN6tflite3ops7builtin36Register_TRANSPOSE_GENERIC_OPTIMIZEDEvE1r = internal global %struct.TfLiteRegistration { i8* (%struct.TfLiteContext*, i8*, i64)* null, void (%struct.TfLiteContext*, i8*)* null, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9transpose7PrepareEP13TfLiteContextP10TfLiteNode, i32 (%struct.TfLiteContext*, %struct.TfLiteNode*)* @_ZN6tflite3ops7builtin9transpose4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode, i8* (%struct.TfLiteContext*, %struct.TfLiteNode*)* null, i32 0, i8* null, i32 0 }, align 8
@.str.17 = private unnamed_addr constant [49 x i8] c"Type %s is currently not supported by Transpose.\00", align 1
@llvm.global_ctors = appending global [0 x { i32, void ()*, i8* }] zeroinitializer

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin9transpose18ResizeOutputTensorEP13TfLiteContextPNS2_16TransposeContextE(%struct.TfLiteContext*, %"struct.tflite::ops::builtin::transpose::TransposeContext"* nocapture readonly) local_unnamed_addr #0 {
  %3 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %1, i64 0, i32 0
  %4 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %3, align 8
  %5 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %4, i64 0, i32 2
  %6 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %5, align 8
  %7 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 0
  %8 = load i32, i32* %7, align 4
  %9 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %1, i64 0, i32 1
  %10 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %9, align 8
  %11 = icmp eq %struct.TfLiteTensor* %10, null
  br i1 %11, label %15, label %12

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 0, i32 1, i32 0
  %14 = load i32*, i32** %13, align 8
  br label %15

15:                                               ; preds = %2, %12
  %16 = phi i32* [ %14, %12 ], [ null, %2 ]
  %17 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %10, i64 0, i32 2
  %18 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %17, align 8
  %19 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %18, i64 0, i32 0
  %20 = load i32, i32* %19, align 4
  %21 = icmp eq i32 %20, 1
  br i1 %21, label %25, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %24 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %23, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %24(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 54, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.4, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %20, i32 1) #9
  br label %115

25:                                               ; preds = %15
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %18, i64 0, i32 1, i64 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, %8
  br i1 %28, label %29, label %35

29:                                               ; preds = %25
  %30 = icmp sgt i32 %8, 0
  br i1 %30, label %33, label %31

31:                                               ; preds = %29
  %32 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %6) #9
  br label %75

33:                                               ; preds = %29
  %34 = zext i32 %8 to i64
  br label %40

35:                                               ; preds = %25
  %36 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %37 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %36, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %37(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 55, i8* getelementptr inbounds ([32 x i8], [32 x i8]* @.str.6, i64 0, i64 0), i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.7, i64 0, i64 0), i32 %27, i32 %8) #9
  br label %115

38:                                               ; preds = %40
  %39 = icmp eq i64 %47, %34
  br i1 %39, label %51, label %40

40:                                               ; preds = %38, %33
  %41 = phi i64 [ 0, %33 ], [ %47, %38 ]
  %42 = getelementptr inbounds i32, i32* %16, i64 %41
  %43 = load i32, i32* %42, align 4
  %44 = icmp sgt i32 %43, -1
  %45 = icmp slt i32 %43, %8
  %46 = and i1 %44, %45
  %47 = add nuw nsw i64 %41, 1
  br i1 %46, label %38, label %48

48:                                               ; preds = %40
  %49 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %50 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %49, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %50(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([116 x i8], [116 x i8]* @.str.8, i64 0, i64 0)) #9
  br label %115

51:                                               ; preds = %38
  %52 = tail call %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray* %6) #9
  br i1 %30, label %53, label %75

53:                                               ; preds = %51
  %54 = zext i32 %8 to i64
  %55 = add nsw i64 %54, -1
  %56 = and i64 %54, 3
  %57 = icmp ult i64 %55, 3
  br i1 %57, label %60, label %58

58:                                               ; preds = %53
  %59 = sub nsw i64 %54, %56
  br label %82

60:                                               ; preds = %82, %53
  %61 = phi i64 [ 0, %53 ], [ %112, %82 ]
  %62 = icmp eq i64 %56, 0
  br i1 %62, label %75, label %63

63:                                               ; preds = %60, %63
  %64 = phi i64 [ %72, %63 ], [ %61, %60 ]
  %65 = phi i64 [ %73, %63 ], [ %56, %60 ]
  %66 = getelementptr inbounds i32, i32* %16, i64 %64
  %67 = load i32, i32* %66, align 4
  %68 = sext i32 %67 to i64
  %69 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %68
  %70 = load i32, i32* %69, align 4
  %71 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 %64
  store i32 %70, i32* %71, align 4
  %72 = add nuw nsw i64 %64, 1
  %73 = add i64 %65, -1
  %74 = icmp eq i64 %73, 0
  br i1 %74, label %75, label %63, !llvm.loop !2

75:                                               ; preds = %60, %63, %31, %51
  %76 = phi %struct.TfLiteIntArray* [ %32, %31 ], [ %52, %51 ], [ %52, %63 ], [ %52, %60 ]
  %77 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 4
  %78 = load i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)*, i32 (%struct.TfLiteContext*, %struct.TfLiteTensor*, %struct.TfLiteIntArray*)** %77, align 8
  %79 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %1, i64 0, i32 2
  %80 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %79, align 8
  %81 = tail call i32 %78(%struct.TfLiteContext* %0, %struct.TfLiteTensor* %80, %struct.TfLiteIntArray* %76) #9
  br label %115

82:                                               ; preds = %82, %58
  %83 = phi i64 [ 0, %58 ], [ %112, %82 ]
  %84 = phi i64 [ %59, %58 ], [ %113, %82 ]
  %85 = getelementptr inbounds i32, i32* %16, i64 %83
  %86 = load i32, i32* %85, align 4
  %87 = sext i32 %86 to i64
  %88 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %87
  %89 = load i32, i32* %88, align 4
  %90 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 %83
  store i32 %89, i32* %90, align 4
  %91 = or i64 %83, 1
  %92 = getelementptr inbounds i32, i32* %16, i64 %91
  %93 = load i32, i32* %92, align 4
  %94 = sext i32 %93 to i64
  %95 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %94
  %96 = load i32, i32* %95, align 4
  %97 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 %91
  store i32 %96, i32* %97, align 4
  %98 = or i64 %83, 2
  %99 = getelementptr inbounds i32, i32* %16, i64 %98
  %100 = load i32, i32* %99, align 4
  %101 = sext i32 %100 to i64
  %102 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %101
  %103 = load i32, i32* %102, align 4
  %104 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 %98
  store i32 %103, i32* %104, align 4
  %105 = or i64 %83, 3
  %106 = getelementptr inbounds i32, i32* %16, i64 %105
  %107 = load i32, i32* %106, align 4
  %108 = sext i32 %107 to i64
  %109 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %6, i64 0, i32 1, i64 %108
  %110 = load i32, i32* %109, align 4
  %111 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %52, i64 0, i32 1, i64 %105
  store i32 %110, i32* %111, align 4
  %112 = add nuw nsw i64 %83, 4
  %113 = add i64 %84, -4
  %114 = icmp eq i64 %113, 0
  br i1 %114, label %60, label %82

115:                                              ; preds = %48, %75, %35, %22
  %116 = phi i32 [ 1, %22 ], [ 1, %35 ], [ %81, %75 ], [ 1, %48 ]
  ret i32 %116
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

declare %struct.TfLiteIntArray* @TfLiteIntArrayCopy(%struct.TfLiteIntArray*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN6tflite3ops7builtin9transpose7PrepareEP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode* nocapture readonly) #0 {
  %3 = alloca %"struct.tflite::ops::builtin::transpose::TransposeContext", align 8
  %4 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %5 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %4, align 8
  %6 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 0
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 2
  br i1 %8, label %12, label %9

9:                                                ; preds = %2
  %10 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %11 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %10, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %11(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 72, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.9, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.10, i64 0, i64 0), i32 %7, i32 2) #9
  br label %92

12:                                               ; preds = %2
  %13 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %14 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %13, align 8
  %15 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 0
  %16 = load i32, i32* %15, align 4
  %17 = icmp eq i32 %16, 1
  br i1 %17, label %21, label %18

18:                                               ; preds = %12
  %19 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %20 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %19, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %20(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 73, i8* getelementptr inbounds ([17 x i8], [17 x i8]* @.str.11, i64 0, i64 0), i8* getelementptr inbounds ([2 x i8], [2 x i8]* @.str.5, i64 0, i64 0), i32 %16, i32 1) #9
  br label %92

21:                                               ; preds = %12
  %22 = bitcast %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %22) #9
  %23 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 0
  %24 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 1
  %25 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 2
  %26 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 0
  %27 = bitcast %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %27, i8 -86, i64 24, i1 false)
  %28 = load i32, i32* %26, align 4
  %29 = icmp slt i32 %28, 0
  br i1 %29, label %35, label %30

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %32 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %31, align 8
  %33 = sext i32 %28 to i64
  %34 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %32, i64 %33
  br label %35

35:                                               ; preds = %30, %21
  %36 = phi %struct.TfLiteTensor* [ %34, %30 ], [ null, %21 ]
  store %struct.TfLiteTensor* %36, %struct.TfLiteTensor** %23, align 8
  %37 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %5, i64 0, i32 1, i64 1
  %38 = load i32, i32* %37, align 4
  %39 = icmp slt i32 %38, 0
  br i1 %39, label %45, label %40

40:                                               ; preds = %35
  %41 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %42 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %41, align 8
  %43 = sext i32 %38 to i64
  %44 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %42, i64 %43
  br label %45

45:                                               ; preds = %40, %35
  %46 = phi %struct.TfLiteTensor* [ %44, %40 ], [ null, %35 ]
  store %struct.TfLiteTensor* %46, %struct.TfLiteTensor** %24, align 8
  %47 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %14, i64 0, i32 1, i64 0
  %48 = load i32, i32* %47, align 4
  %49 = icmp slt i32 %48, 0
  br i1 %49, label %55, label %50

50:                                               ; preds = %45
  %51 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %52 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %51, align 8
  %53 = sext i32 %48 to i64
  %54 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 %53
  br label %55

55:                                               ; preds = %45, %50
  %56 = phi %struct.TfLiteTensor* [ %54, %50 ], [ null, %45 ]
  store %struct.TfLiteTensor* %56, %struct.TfLiteTensor** %25, align 8
  %57 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 2
  %58 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %57, align 8
  %59 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %58, i64 0, i32 0
  %60 = load i32, i32* %59, align 4
  %61 = icmp slt i32 %60, 6
  br i1 %61, label %65, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %64 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %63, align 8
  tail call void (%struct.TfLiteContext*, i8*, ...) %64(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([113 x i8], [113 x i8]* @.str.12, i64 0, i64 0)) #9
  br label %90

65:                                               ; preds = %55
  %66 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 0, i32 0
  %67 = load i32, i32* %66, align 8
  %68 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 0
  %69 = load i32, i32* %68, align 8
  %70 = icmp eq i32 %67, %69
  br i1 %70, label %77, label %71

71:                                               ; preds = %65
  %72 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %73 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %72, align 8
  %74 = tail call i8* @TfLiteTypeGetName(i32 %67) #9
  %75 = load i32, i32* %68, align 8
  %76 = tail call i8* @TfLiteTypeGetName(i32 %75) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %73(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([26 x i8], [26 x i8]* @.str.13, i64 0, i64 0), i8* getelementptr inbounds ([66 x i8], [66 x i8]* @.str.3, i64 0, i64 0), i32 81, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.14, i64 0, i64 0), i8* getelementptr inbounds ([24 x i8], [24 x i8]* @.str.15, i64 0, i64 0), i8* %74, i8* %76) #9
  br label %90

77:                                               ; preds = %65
  %78 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %46, i64 0, i32 4
  %79 = load i32, i32* %78, align 8
  %80 = icmp eq i32 %79, 1
  br i1 %80, label %88, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 4
  %83 = load i32, i32* %82, align 8
  %84 = icmp eq i32 %83, 4
  br i1 %84, label %90, label %85

85:                                               ; preds = %81
  store i32 4, i32* %82, align 8
  %86 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %56, i64 0, i32 1
  %87 = bitcast %union.TfLitePtrUnion* %86 to i8**
  store i8* null, i8** %87, align 8
  br label %90

88:                                               ; preds = %77
  %89 = call i32 @_ZN6tflite3ops7builtin9transpose18ResizeOutputTensorEP13TfLiteContextPNS2_16TransposeContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::transpose::TransposeContext"* nonnull %3)
  br label %90

90:                                               ; preds = %85, %81, %88, %71, %62
  %91 = phi i32 [ 1, %71 ], [ %89, %88 ], [ 1, %62 ], [ 0, %81 ], [ 0, %85 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %22) #9
  br label %92

92:                                               ; preds = %90, %18, %9
  %93 = phi i32 [ 1, %9 ], [ 1, %18 ], [ %91, %90 ]
  ret i32 %93
}

declare i8* @TfLiteTypeGetName(i32) local_unnamed_addr #2

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin22Register_TRANSPOSE_REFEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin22Register_TRANSPOSE_REFEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9transpose4EvalILNS2_10KernelTypeE0EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::transpose::TransposeContext", align 8
  %4 = alloca %"struct.tflite::TransposeParams", align 4
  %5 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 0
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = bitcast %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 2
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %19 = bitcast %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %24, %2
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %2 ]
  store %struct.TfLiteTensor* %30, %struct.TfLiteTensor** %15, align 8
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %34, %29
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  store %struct.TfLiteTensor* %40, %struct.TfLiteTensor** %16, align 8
  %41 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %42 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %48 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %49 = sext i32 %44 to i64
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 %49
  br label %51

51:                                               ; preds = %39, %46
  %52 = phi %struct.TfLiteTensor* [ %50, %46 ], [ null, %39 ]
  store %struct.TfLiteTensor* %52, %struct.TfLiteTensor** %17, align 8
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 4
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = call i32 @_ZN6tflite3ops7builtin9transpose18ResizeOutputTensorEP13TfLiteContextPNS2_16TransposeContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::transpose::TransposeContext"* nonnull %3)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %566

59:                                               ; preds = %56, %51
  %60 = icmp eq %struct.TfLiteTensor* %40, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = bitcast i32* %63 to i8*
  br label %65

65:                                               ; preds = %59, %61
  %66 = phi i8* [ %64, %61 ], [ null, %59 ]
  %67 = phi i32* [ %63, %61 ], [ null, %59 ]
  %68 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %69 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %68, align 8
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %72, i8 -86, i64 24, i1 false)
  %73 = trunc i32 %71 to i8
  store i8 %73, i8* %72, align 4
  %74 = icmp sgt i32 %71, 0
  br i1 %74, label %75, label %184

75:                                               ; preds = %65
  %76 = zext i32 %71 to i64
  %77 = icmp ult i32 %71, 8
  br i1 %77, label %78, label %96

78:                                               ; preds = %182, %96, %75
  %79 = phi i64 [ 0, %96 ], [ 0, %75 ], [ %106, %182 ]
  %80 = xor i64 %79, -1
  %81 = add nsw i64 %80, %76
  %82 = and i64 %76, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %93, label %84

84:                                               ; preds = %78, %84
  %85 = phi i64 [ %90, %84 ], [ %79, %78 ]
  %86 = phi i64 [ %91, %84 ], [ %82, %78 ]
  %87 = getelementptr inbounds i32, i32* %67, i64 %85
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %85
  store i32 %88, i32* %89, align 4
  %90 = add nuw nsw i64 %85, 1
  %91 = add i64 %86, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %84, !llvm.loop !4

93:                                               ; preds = %84, %78
  %94 = phi i64 [ %79, %78 ], [ %90, %84 ]
  %95 = icmp ult i64 %81, 3
  br i1 %95, label %184, label %187

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 0
  %98 = shl nuw nsw i64 %76, 2
  %99 = add nuw nsw i64 %98, 4
  %100 = getelementptr i8, i8* %5, i64 %99
  %101 = getelementptr i32, i32* %67, i64 %76
  %102 = icmp ult i32* %97, %101
  %103 = icmp ult i8* %66, %100
  %104 = and i1 %102, %103
  br i1 %104, label %78, label %105

105:                                              ; preds = %96
  %106 = and i64 %76, 4294967288
  %107 = add nsw i64 %106, -8
  %108 = lshr exact i64 %107, 3
  %109 = add nuw nsw i64 %108, 1
  %110 = and i64 %109, 3
  %111 = icmp ult i64 %107, 24
  br i1 %111, label %163, label %112

112:                                              ; preds = %105
  %113 = sub nsw i64 %109, %110
  br label %114

114:                                              ; preds = %114, %112
  %115 = phi i64 [ 0, %112 ], [ %160, %114 ]
  %116 = phi i64 [ %113, %112 ], [ %161, %114 ]
  %117 = getelementptr inbounds i32, i32* %67, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !5
  %120 = getelementptr inbounds i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !5
  %123 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %115
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %124, align 4, !alias.scope !8, !noalias !5
  %125 = getelementptr inbounds i32, i32* %123, i64 4
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %126, align 4, !alias.scope !8, !noalias !5
  %127 = or i64 %115, 8
  %128 = getelementptr inbounds i32, i32* %67, i64 %127
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !5
  %131 = getelementptr inbounds i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !5
  %134 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %127
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %135, align 4, !alias.scope !8, !noalias !5
  %136 = getelementptr inbounds i32, i32* %134, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %137, align 4, !alias.scope !8, !noalias !5
  %138 = or i64 %115, 16
  %139 = getelementptr inbounds i32, i32* %67, i64 %138
  %140 = bitcast i32* %139 to <4 x i32>*
  %141 = load <4 x i32>, <4 x i32>* %140, align 4, !alias.scope !5
  %142 = getelementptr inbounds i32, i32* %139, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  %144 = load <4 x i32>, <4 x i32>* %143, align 4, !alias.scope !5
  %145 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %138
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %141, <4 x i32>* %146, align 4, !alias.scope !8, !noalias !5
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %144, <4 x i32>* %148, align 4, !alias.scope !8, !noalias !5
  %149 = or i64 %115, 24
  %150 = getelementptr inbounds i32, i32* %67, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !5
  %153 = getelementptr inbounds i32, i32* %150, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !alias.scope !5
  %156 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %149
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %157, align 4, !alias.scope !8, !noalias !5
  %158 = getelementptr inbounds i32, i32* %156, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %159, align 4, !alias.scope !8, !noalias !5
  %160 = add i64 %115, 32
  %161 = add i64 %116, -4
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %114, !llvm.loop !10

163:                                              ; preds = %114, %105
  %164 = phi i64 [ 0, %105 ], [ %160, %114 ]
  %165 = icmp eq i64 %110, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %163, %166
  %167 = phi i64 [ %179, %166 ], [ %164, %163 ]
  %168 = phi i64 [ %180, %166 ], [ %110, %163 ]
  %169 = getelementptr inbounds i32, i32* %67, i64 %167
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4, !alias.scope !5
  %172 = getelementptr inbounds i32, i32* %169, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !alias.scope !5
  %175 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %167
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %171, <4 x i32>* %176, align 4, !alias.scope !8, !noalias !5
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %178, align 4, !alias.scope !8, !noalias !5
  %179 = add i64 %167, 8
  %180 = add i64 %168, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %166, !llvm.loop !12

182:                                              ; preds = %166, %163
  %183 = icmp eq i64 %106, %76
  br i1 %183, label %184, label %78

184:                                              ; preds = %93, %187, %182, %65
  %185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %186 = load i32, i32* %185, align 8
  switch i32 %186, label %560 [
    i32 1, label %206
    i32 2, label %206
    i32 3, label %293
    i32 9, label %293
    i32 4, label %382
    i32 6, label %471
  ]

187:                                              ; preds = %93, %187
  %188 = phi i64 [ %204, %187 ], [ %94, %93 ]
  %189 = getelementptr inbounds i32, i32* %67, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %188
  store i32 %190, i32* %191, align 4
  %192 = add nuw nsw i64 %188, 1
  %193 = getelementptr inbounds i32, i32* %67, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %192
  store i32 %194, i32* %195, align 4
  %196 = add nuw nsw i64 %188, 2
  %197 = getelementptr inbounds i32, i32* %67, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %196
  store i32 %198, i32* %199, align 4
  %200 = add nuw nsw i64 %188, 3
  %201 = getelementptr inbounds i32, i32* %67, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %200
  store i32 %202, i32* %203, align 4
  %204 = add nuw nsw i64 %188, 4
  %205 = icmp eq i64 %204, %76
  br i1 %205, label %184, label %187, !llvm.loop !13

206:                                              ; preds = %184, %184
  %207 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %207) #9
  %208 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %210, align 8, !alias.scope !14
  br label %238

211:                                              ; preds = %206
  %212 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %213 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %212, align 8, !noalias !14
  %214 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %213, i64 0, i32 0
  %215 = load i32, i32* %214, align 4, !noalias !14
  %216 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %213, i64 0, i32 1, i64 0
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %215, i32* %217, align 8, !alias.scope !14
  %218 = icmp sgt i32 %215, 5
  br i1 %218, label %219, label %226

219:                                              ; preds = %211
  %220 = sext i32 %215 to i64
  %221 = shl nsw i64 %220, 2
  %222 = tail call i8* @_Znam(i64 %221) #10, !noalias !14
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %224 = bitcast i32** %223 to i8**
  store i8* %222, i8** %224, align 8, !alias.scope !14
  %225 = bitcast i8* %222 to i32*
  br label %231

226:                                              ; preds = %211
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %228 = bitcast %union.anon* %227 to i32*
  %229 = sext i32 %215 to i64
  %230 = shl nsw i64 %229, 2
  br label %231

231:                                              ; preds = %226, %219
  %232 = phi i64 [ %221, %219 ], [ %230, %226 ]
  %233 = phi i32* [ %225, %219 ], [ %228, %226 ]
  %234 = bitcast i32* %233 to i8*
  %235 = bitcast i32* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %234, i8* align 4 %235, i64 %232, i1 false) #9
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  br label %238

238:                                              ; preds = %209, %231
  %239 = phi i32* [ %237, %231 ], [ null, %209 ]
  %240 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %240) #9
  %241 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %243, align 8, !alias.scope !17
  br label %271

244:                                              ; preds = %238
  %245 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %246 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %245, align 8, !noalias !17
  %247 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %246, i64 0, i32 0
  %248 = load i32, i32* %247, align 4, !noalias !17
  %249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %246, i64 0, i32 1, i64 0
  %250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %248, i32* %250, align 8, !alias.scope !17
  %251 = icmp sgt i32 %248, 5
  br i1 %251, label %252, label %259

252:                                              ; preds = %244
  %253 = sext i32 %248 to i64
  %254 = shl nsw i64 %253, 2
  %255 = tail call i8* @_Znam(i64 %254) #10, !noalias !17
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %257 = bitcast i32** %256 to i8**
  store i8* %255, i8** %257, align 8, !alias.scope !17
  %258 = bitcast i8* %255 to i32*
  br label %264

259:                                              ; preds = %244
  %260 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %261 = bitcast %union.anon* %260 to i32*
  %262 = sext i32 %248 to i64
  %263 = shl nsw i64 %262, 2
  br label %264

264:                                              ; preds = %259, %252
  %265 = phi i64 [ %254, %252 ], [ %263, %259 ]
  %266 = phi i32* [ %258, %252 ], [ %261, %259 ]
  %267 = bitcast i32* %266 to i8*
  %268 = bitcast i32* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %267, i8* align 4 %268, i64 %265, i1 false) #9
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1, i32 0
  %270 = load i32*, i32** %269, align 8
  br label %271

271:                                              ; preds = %242, %264
  %272 = phi i32* [ %270, %264 ], [ null, %242 ]
  call void @_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i32* %239, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i32* %272) #9
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %274 = load i32, i32* %273, align 8
  %275 = icmp sgt i32 %274, 5
  br i1 %275, label %276, label %282

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %278 = load i32*, i32** %277, align 8
  %279 = icmp eq i32* %278, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %276
  %281 = bitcast i32* %278 to i8*
  call void @_ZdaPv(i8* %281) #10
  br label %282

282:                                              ; preds = %271, %276, %280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %240) #9
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = icmp sgt i32 %284, 5
  br i1 %285, label %286, label %292

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %286
  %291 = bitcast i32* %288 to i8*
  call void @_ZdaPv(i8* %291) #10
  br label %292

292:                                              ; preds = %282, %286, %290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %207) #9
  br label %564

293:                                              ; preds = %184, %184
  %294 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %294) #9
  %295 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %297, align 8, !alias.scope !20
  br label %326

298:                                              ; preds = %293
  %299 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %300 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %299, align 8, !noalias !20
  %301 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %300, i64 0, i32 0
  %302 = load i32, i32* %301, align 4, !noalias !20
  %303 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %300, i64 0, i32 1, i64 0
  %304 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %302, i32* %304, align 8, !alias.scope !20
  %305 = icmp sgt i32 %302, 5
  br i1 %305, label %306, label %313

306:                                              ; preds = %298
  %307 = sext i32 %302 to i64
  %308 = shl nsw i64 %307, 2
  %309 = tail call i8* @_Znam(i64 %308) #10, !noalias !20
  %310 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %311 = bitcast i32** %310 to i8**
  store i8* %309, i8** %311, align 8, !alias.scope !20
  %312 = bitcast i8* %309 to i32*
  br label %318

313:                                              ; preds = %298
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %315 = bitcast %union.anon* %314 to i32*
  %316 = sext i32 %302 to i64
  %317 = shl nsw i64 %316, 2
  br label %318

318:                                              ; preds = %313, %306
  %319 = phi i64 [ %308, %306 ], [ %317, %313 ]
  %320 = phi i32* [ %312, %306 ], [ %315, %313 ]
  %321 = bitcast i32* %320 to i8*
  %322 = bitcast i32* %303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %321, i8* align 4 %322, i64 %319, i1 false) #9
  %323 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %324 = bitcast %union.TfLitePtrUnion* %323 to i8**
  %325 = load i8*, i8** %324, align 8
  br label %326

326:                                              ; preds = %296, %318
  %327 = phi i8* [ %325, %318 ], [ null, %296 ]
  %328 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %328) #9
  %329 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %329, label %330, label %332

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %331, align 8, !alias.scope !23
  br label %360

332:                                              ; preds = %326
  %333 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %334 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %333, align 8, !noalias !23
  %335 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %334, i64 0, i32 0
  %336 = load i32, i32* %335, align 4, !noalias !23
  %337 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %334, i64 0, i32 1, i64 0
  %338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %336, i32* %338, align 8, !alias.scope !23
  %339 = icmp sgt i32 %336, 5
  br i1 %339, label %340, label %347

340:                                              ; preds = %332
  %341 = sext i32 %336 to i64
  %342 = shl nsw i64 %341, 2
  %343 = tail call i8* @_Znam(i64 %342) #10, !noalias !23
  %344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %345 = bitcast i32** %344 to i8**
  store i8* %343, i8** %345, align 8, !alias.scope !23
  %346 = bitcast i8* %343 to i32*
  br label %352

347:                                              ; preds = %332
  %348 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %349 = bitcast %union.anon* %348 to i32*
  %350 = sext i32 %336 to i64
  %351 = shl nsw i64 %350, 2
  br label %352

352:                                              ; preds = %347, %340
  %353 = phi i64 [ %342, %340 ], [ %351, %347 ]
  %354 = phi i32* [ %346, %340 ], [ %349, %347 ]
  %355 = bitcast i32* %354 to i8*
  %356 = bitcast i32* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %355, i8* align 4 %356, i64 %353, i1 false) #9
  %357 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1
  %358 = bitcast %union.TfLitePtrUnion* %357 to i8**
  %359 = load i8*, i8** %358, align 8
  br label %360

360:                                              ; preds = %330, %352
  %361 = phi i8* [ %359, %352 ], [ null, %330 ]
  call void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %327, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %361) #9
  %362 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 5
  br i1 %364, label %365, label %371

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = bitcast i32* %367 to i8*
  call void @_ZdaPv(i8* %370) #10
  br label %371

371:                                              ; preds = %360, %365, %369
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %328) #9
  %372 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %373 = load i32, i32* %372, align 8
  %374 = icmp sgt i32 %373, 5
  br i1 %374, label %375, label %381

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %377 = load i32*, i32** %376, align 8
  %378 = icmp eq i32* %377, null
  br i1 %378, label %381, label %379

379:                                              ; preds = %375
  %380 = bitcast i32* %377 to i8*
  call void @_ZdaPv(i8* %380) #10
  br label %381

381:                                              ; preds = %371, %375, %379
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %294) #9
  br label %564

382:                                              ; preds = %184
  %383 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %383) #9
  %384 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  %386 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %386, align 8, !alias.scope !26
  br label %415

387:                                              ; preds = %382
  %388 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %389 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %388, align 8, !noalias !26
  %390 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %389, i64 0, i32 0
  %391 = load i32, i32* %390, align 4, !noalias !26
  %392 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %389, i64 0, i32 1, i64 0
  %393 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %391, i32* %393, align 8, !alias.scope !26
  %394 = icmp sgt i32 %391, 5
  br i1 %394, label %395, label %402

395:                                              ; preds = %387
  %396 = sext i32 %391 to i64
  %397 = shl nsw i64 %396, 2
  %398 = tail call i8* @_Znam(i64 %397) #10, !noalias !26
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %400 = bitcast i32** %399 to i8**
  store i8* %398, i8** %400, align 8, !alias.scope !26
  %401 = bitcast i8* %398 to i32*
  br label %407

402:                                              ; preds = %387
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to i32*
  %405 = sext i32 %391 to i64
  %406 = shl nsw i64 %405, 2
  br label %407

407:                                              ; preds = %402, %395
  %408 = phi i64 [ %397, %395 ], [ %406, %402 ]
  %409 = phi i32* [ %401, %395 ], [ %404, %402 ]
  %410 = bitcast i32* %409 to i8*
  %411 = bitcast i32* %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %410, i8* align 4 %411, i64 %408, i1 false) #9
  %412 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %413 = bitcast %union.TfLitePtrUnion* %412 to i64**
  %414 = load i64*, i64** %413, align 8
  br label %415

415:                                              ; preds = %385, %407
  %416 = phi i64* [ %414, %407 ], [ null, %385 ]
  %417 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %417) #9
  %418 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %418, label %419, label %421

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %420, align 8, !alias.scope !29
  br label %449

421:                                              ; preds = %415
  %422 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %423 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %422, align 8, !noalias !29
  %424 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %423, i64 0, i32 0
  %425 = load i32, i32* %424, align 4, !noalias !29
  %426 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %423, i64 0, i32 1, i64 0
  %427 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %425, i32* %427, align 8, !alias.scope !29
  %428 = icmp sgt i32 %425, 5
  br i1 %428, label %429, label %436

429:                                              ; preds = %421
  %430 = sext i32 %425 to i64
  %431 = shl nsw i64 %430, 2
  %432 = tail call i8* @_Znam(i64 %431) #10, !noalias !29
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %434 = bitcast i32** %433 to i8**
  store i8* %432, i8** %434, align 8, !alias.scope !29
  %435 = bitcast i8* %432 to i32*
  br label %441

436:                                              ; preds = %421
  %437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %438 = bitcast %union.anon* %437 to i32*
  %439 = sext i32 %425 to i64
  %440 = shl nsw i64 %439, 2
  br label %441

441:                                              ; preds = %436, %429
  %442 = phi i64 [ %431, %429 ], [ %440, %436 ]
  %443 = phi i32* [ %435, %429 ], [ %438, %436 ]
  %444 = bitcast i32* %443 to i8*
  %445 = bitcast i32* %426 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %444, i8* align 4 %445, i64 %442, i1 false) #9
  %446 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1
  %447 = bitcast %union.TfLitePtrUnion* %446 to i64**
  %448 = load i64*, i64** %447, align 8
  br label %449

449:                                              ; preds = %419, %441
  %450 = phi i64* [ %448, %441 ], [ null, %419 ]
  call void @_ZN6tflite13reference_ops13TransposeImplIlLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i64* %416, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i64* %450) #9
  %451 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %452 = load i32, i32* %451, align 8
  %453 = icmp sgt i32 %452, 5
  br i1 %453, label %454, label %460

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %456 = load i32*, i32** %455, align 8
  %457 = icmp eq i32* %456, null
  br i1 %457, label %460, label %458

458:                                              ; preds = %454
  %459 = bitcast i32* %456 to i8*
  call void @_ZdaPv(i8* %459) #10
  br label %460

460:                                              ; preds = %449, %454, %458
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %417) #9
  %461 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %462 = load i32, i32* %461, align 8
  %463 = icmp sgt i32 %462, 5
  br i1 %463, label %464, label %470

464:                                              ; preds = %460
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %466 = load i32*, i32** %465, align 8
  %467 = icmp eq i32* %466, null
  br i1 %467, label %470, label %468

468:                                              ; preds = %464
  %469 = bitcast i32* %466 to i8*
  call void @_ZdaPv(i8* %469) #10
  br label %470

470:                                              ; preds = %460, %464, %468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %383) #9
  br label %564

471:                                              ; preds = %184
  %472 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %472) #9
  %473 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %473, label %474, label %476

474:                                              ; preds = %471
  %475 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %475, align 8, !alias.scope !32
  br label %504

476:                                              ; preds = %471
  %477 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %478 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %477, align 8, !noalias !32
  %479 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %478, i64 0, i32 0
  %480 = load i32, i32* %479, align 4, !noalias !32
  %481 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %478, i64 0, i32 1, i64 0
  %482 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %480, i32* %482, align 8, !alias.scope !32
  %483 = icmp sgt i32 %480, 5
  br i1 %483, label %484, label %491

484:                                              ; preds = %476
  %485 = sext i32 %480 to i64
  %486 = shl nsw i64 %485, 2
  %487 = tail call i8* @_Znam(i64 %486) #10, !noalias !32
  %488 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %489 = bitcast i32** %488 to i8**
  store i8* %487, i8** %489, align 8, !alias.scope !32
  %490 = bitcast i8* %487 to i32*
  br label %496

491:                                              ; preds = %476
  %492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %493 = bitcast %union.anon* %492 to i32*
  %494 = sext i32 %480 to i64
  %495 = shl nsw i64 %494, 2
  br label %496

496:                                              ; preds = %491, %484
  %497 = phi i64 [ %486, %484 ], [ %495, %491 ]
  %498 = phi i32* [ %490, %484 ], [ %493, %491 ]
  %499 = bitcast i32* %498 to i8*
  %500 = bitcast i32* %481 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %499, i8* align 4 %500, i64 %497, i1 false) #9
  %501 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %502 = bitcast %union.TfLitePtrUnion* %501 to i8**
  %503 = load i8*, i8** %502, align 8
  br label %504

504:                                              ; preds = %474, %496
  %505 = phi i8* [ %503, %496 ], [ null, %474 ]
  %506 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %506) #9
  %507 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %507, label %508, label %510

508:                                              ; preds = %504
  %509 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %509, align 8, !alias.scope !35
  br label %538

510:                                              ; preds = %504
  %511 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %512 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %511, align 8, !noalias !35
  %513 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %512, i64 0, i32 0
  %514 = load i32, i32* %513, align 4, !noalias !35
  %515 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %512, i64 0, i32 1, i64 0
  %516 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %514, i32* %516, align 8, !alias.scope !35
  %517 = icmp sgt i32 %514, 5
  br i1 %517, label %518, label %525

518:                                              ; preds = %510
  %519 = sext i32 %514 to i64
  %520 = shl nsw i64 %519, 2
  %521 = tail call i8* @_Znam(i64 %520) #10, !noalias !35
  %522 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %523 = bitcast i32** %522 to i8**
  store i8* %521, i8** %523, align 8, !alias.scope !35
  %524 = bitcast i8* %521 to i32*
  br label %530

525:                                              ; preds = %510
  %526 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %527 = bitcast %union.anon* %526 to i32*
  %528 = sext i32 %514 to i64
  %529 = shl nsw i64 %528, 2
  br label %530

530:                                              ; preds = %525, %518
  %531 = phi i64 [ %520, %518 ], [ %529, %525 ]
  %532 = phi i32* [ %524, %518 ], [ %527, %525 ]
  %533 = bitcast i32* %532 to i8*
  %534 = bitcast i32* %515 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %533, i8* align 4 %534, i64 %531, i1 false) #9
  %535 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1
  %536 = bitcast %union.TfLitePtrUnion* %535 to i8**
  %537 = load i8*, i8** %536, align 8
  br label %538

538:                                              ; preds = %508, %530
  %539 = phi i8* [ %537, %530 ], [ null, %508 ]
  call void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %505, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %539) #9
  %540 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %541 = load i32, i32* %540, align 8
  %542 = icmp sgt i32 %541, 5
  br i1 %542, label %543, label %549

543:                                              ; preds = %538
  %544 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %545 = load i32*, i32** %544, align 8
  %546 = icmp eq i32* %545, null
  br i1 %546, label %549, label %547

547:                                              ; preds = %543
  %548 = bitcast i32* %545 to i8*
  call void @_ZdaPv(i8* %548) #10
  br label %549

549:                                              ; preds = %538, %543, %547
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %506) #9
  %550 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %551 = load i32, i32* %550, align 8
  %552 = icmp sgt i32 %551, 5
  br i1 %552, label %553, label %559

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %555 = load i32*, i32** %554, align 8
  %556 = icmp eq i32* %555, null
  br i1 %556, label %559, label %557

557:                                              ; preds = %553
  %558 = bitcast i32* %555 to i8*
  call void @_ZdaPv(i8* %558) #10
  br label %559

559:                                              ; preds = %549, %553, %557
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %472) #9
  br label %564

560:                                              ; preds = %184
  %561 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %562 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %561, align 8
  %563 = tail call i8* @TfLiteTypeGetName(i32 %186) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %562(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17, i64 0, i64 0), i8* %563) #9
  br label %564

564:                                              ; preds = %292, %381, %470, %559, %560
  %565 = phi i32 [ 1, %560 ], [ 0, %559 ], [ 0, %470 ], [ 0, %381 ], [ 0, %292 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #9
  br label %566

566:                                              ; preds = %56, %564
  %567 = phi i32 [ %565, %564 ], [ %57, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret i32 %567
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin36Register_TRANSPOSE_GENERIC_OPTIMIZEDEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin36Register_TRANSPOSE_GENERIC_OPTIMIZEDEvE1r
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i32 @_ZN6tflite3ops7builtin9transpose4EvalILNS2_10KernelTypeE1EEE12TfLiteStatusP13TfLiteContextP10TfLiteNode(%struct.TfLiteContext*, %struct.TfLiteNode*) #0 comdat {
  %3 = alloca %"struct.tflite::ops::builtin::transpose::TransposeContext", align 8
  %4 = alloca %"struct.tflite::TransposeParams", align 4
  %5 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 0
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"class.tflite::RuntimeShape", align 8
  %12 = alloca %"class.tflite::RuntimeShape", align 8
  %13 = alloca %"class.tflite::RuntimeShape", align 8
  %14 = bitcast %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 0
  %16 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 1
  %17 = getelementptr inbounds %"struct.tflite::ops::builtin::transpose::TransposeContext", %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3, i64 0, i32 2
  %18 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 0
  %19 = bitcast %"struct.tflite::ops::builtin::transpose::TransposeContext"* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %19, i8 -86, i64 24, i1 false)
  %20 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %18, align 8
  %21 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 0
  %22 = load i32, i32* %21, align 4
  %23 = icmp slt i32 %22, 0
  br i1 %23, label %29, label %24

24:                                               ; preds = %2
  %25 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %26 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %25, align 8
  %27 = sext i32 %22 to i64
  %28 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %26, i64 %27
  br label %29

29:                                               ; preds = %24, %2
  %30 = phi %struct.TfLiteTensor* [ %28, %24 ], [ null, %2 ]
  store %struct.TfLiteTensor* %30, %struct.TfLiteTensor** %15, align 8
  %31 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %20, i64 0, i32 1, i64 1
  %32 = load i32, i32* %31, align 4
  %33 = icmp slt i32 %32, 0
  br i1 %33, label %39, label %34

34:                                               ; preds = %29
  %35 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %36 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %35, align 8
  %37 = sext i32 %32 to i64
  %38 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %36, i64 %37
  br label %39

39:                                               ; preds = %34, %29
  %40 = phi %struct.TfLiteTensor* [ %38, %34 ], [ null, %29 ]
  store %struct.TfLiteTensor* %40, %struct.TfLiteTensor** %16, align 8
  %41 = getelementptr inbounds %struct.TfLiteNode, %struct.TfLiteNode* %1, i64 0, i32 1
  %42 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %41, align 8
  %43 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %42, i64 0, i32 1, i64 0
  %44 = load i32, i32* %43, align 4
  %45 = icmp slt i32 %44, 0
  br i1 %45, label %51, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 2
  %48 = load %struct.TfLiteTensor*, %struct.TfLiteTensor** %47, align 8
  %49 = sext i32 %44 to i64
  %50 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %48, i64 %49
  br label %51

51:                                               ; preds = %39, %46
  %52 = phi %struct.TfLiteTensor* [ %50, %46 ], [ null, %39 ]
  store %struct.TfLiteTensor* %52, %struct.TfLiteTensor** %17, align 8
  %53 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 4
  %54 = load i32, i32* %53, align 8
  %55 = icmp eq i32 %54, 4
  br i1 %55, label %56, label %59

56:                                               ; preds = %51
  %57 = call i32 @_ZN6tflite3ops7builtin9transpose18ResizeOutputTensorEP13TfLiteContextPNS2_16TransposeContextE(%struct.TfLiteContext* %0, %"struct.tflite::ops::builtin::transpose::TransposeContext"* nonnull %3)
  %58 = icmp eq i32 %57, 0
  br i1 %58, label %59, label %566

59:                                               ; preds = %56, %51
  %60 = icmp eq %struct.TfLiteTensor* %40, null
  br i1 %60, label %65, label %61

61:                                               ; preds = %59
  %62 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 1, i32 0
  %63 = load i32*, i32** %62, align 8
  %64 = bitcast i32* %63 to i8*
  br label %65

65:                                               ; preds = %59, %61
  %66 = phi i8* [ %64, %61 ], [ null, %59 ]
  %67 = phi i32* [ %63, %61 ], [ null, %59 ]
  %68 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %40, i64 0, i32 2
  %69 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %68, align 8
  %70 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %69, i64 0, i32 1, i64 0
  %71 = load i32, i32* %70, align 4
  %72 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %72, i8 -86, i64 24, i1 false)
  %73 = trunc i32 %71 to i8
  store i8 %73, i8* %72, align 4
  %74 = icmp sgt i32 %71, 0
  br i1 %74, label %75, label %184

75:                                               ; preds = %65
  %76 = zext i32 %71 to i64
  %77 = icmp ult i32 %71, 8
  br i1 %77, label %78, label %96

78:                                               ; preds = %182, %96, %75
  %79 = phi i64 [ 0, %96 ], [ 0, %75 ], [ %106, %182 ]
  %80 = xor i64 %79, -1
  %81 = add nsw i64 %80, %76
  %82 = and i64 %76, 3
  %83 = icmp eq i64 %82, 0
  br i1 %83, label %93, label %84

84:                                               ; preds = %78, %84
  %85 = phi i64 [ %90, %84 ], [ %79, %78 ]
  %86 = phi i64 [ %91, %84 ], [ %82, %78 ]
  %87 = getelementptr inbounds i32, i32* %67, i64 %85
  %88 = load i32, i32* %87, align 4
  %89 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %85
  store i32 %88, i32* %89, align 4
  %90 = add nuw nsw i64 %85, 1
  %91 = add i64 %86, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %84, !llvm.loop !38

93:                                               ; preds = %84, %78
  %94 = phi i64 [ %79, %78 ], [ %90, %84 ]
  %95 = icmp ult i64 %81, 3
  br i1 %95, label %184, label %187

96:                                               ; preds = %75
  %97 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 0
  %98 = shl nuw nsw i64 %76, 2
  %99 = add nuw nsw i64 %98, 4
  %100 = getelementptr i8, i8* %5, i64 %99
  %101 = getelementptr i32, i32* %67, i64 %76
  %102 = icmp ult i32* %97, %101
  %103 = icmp ult i8* %66, %100
  %104 = and i1 %102, %103
  br i1 %104, label %78, label %105

105:                                              ; preds = %96
  %106 = and i64 %76, 4294967288
  %107 = add nsw i64 %106, -8
  %108 = lshr exact i64 %107, 3
  %109 = add nuw nsw i64 %108, 1
  %110 = and i64 %109, 3
  %111 = icmp ult i64 %107, 24
  br i1 %111, label %163, label %112

112:                                              ; preds = %105
  %113 = sub nsw i64 %109, %110
  br label %114

114:                                              ; preds = %114, %112
  %115 = phi i64 [ 0, %112 ], [ %160, %114 ]
  %116 = phi i64 [ %113, %112 ], [ %161, %114 ]
  %117 = getelementptr inbounds i32, i32* %67, i64 %115
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4, !alias.scope !39
  %120 = getelementptr inbounds i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4, !alias.scope !39
  %123 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %115
  %124 = bitcast i32* %123 to <4 x i32>*
  store <4 x i32> %119, <4 x i32>* %124, align 4, !alias.scope !42, !noalias !39
  %125 = getelementptr inbounds i32, i32* %123, i64 4
  %126 = bitcast i32* %125 to <4 x i32>*
  store <4 x i32> %122, <4 x i32>* %126, align 4, !alias.scope !42, !noalias !39
  %127 = or i64 %115, 8
  %128 = getelementptr inbounds i32, i32* %67, i64 %127
  %129 = bitcast i32* %128 to <4 x i32>*
  %130 = load <4 x i32>, <4 x i32>* %129, align 4, !alias.scope !39
  %131 = getelementptr inbounds i32, i32* %128, i64 4
  %132 = bitcast i32* %131 to <4 x i32>*
  %133 = load <4 x i32>, <4 x i32>* %132, align 4, !alias.scope !39
  %134 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %127
  %135 = bitcast i32* %134 to <4 x i32>*
  store <4 x i32> %130, <4 x i32>* %135, align 4, !alias.scope !42, !noalias !39
  %136 = getelementptr inbounds i32, i32* %134, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  store <4 x i32> %133, <4 x i32>* %137, align 4, !alias.scope !42, !noalias !39
  %138 = or i64 %115, 16
  %139 = getelementptr inbounds i32, i32* %67, i64 %138
  %140 = bitcast i32* %139 to <4 x i32>*
  %141 = load <4 x i32>, <4 x i32>* %140, align 4, !alias.scope !39
  %142 = getelementptr inbounds i32, i32* %139, i64 4
  %143 = bitcast i32* %142 to <4 x i32>*
  %144 = load <4 x i32>, <4 x i32>* %143, align 4, !alias.scope !39
  %145 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %138
  %146 = bitcast i32* %145 to <4 x i32>*
  store <4 x i32> %141, <4 x i32>* %146, align 4, !alias.scope !42, !noalias !39
  %147 = getelementptr inbounds i32, i32* %145, i64 4
  %148 = bitcast i32* %147 to <4 x i32>*
  store <4 x i32> %144, <4 x i32>* %148, align 4, !alias.scope !42, !noalias !39
  %149 = or i64 %115, 24
  %150 = getelementptr inbounds i32, i32* %67, i64 %149
  %151 = bitcast i32* %150 to <4 x i32>*
  %152 = load <4 x i32>, <4 x i32>* %151, align 4, !alias.scope !39
  %153 = getelementptr inbounds i32, i32* %150, i64 4
  %154 = bitcast i32* %153 to <4 x i32>*
  %155 = load <4 x i32>, <4 x i32>* %154, align 4, !alias.scope !39
  %156 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %149
  %157 = bitcast i32* %156 to <4 x i32>*
  store <4 x i32> %152, <4 x i32>* %157, align 4, !alias.scope !42, !noalias !39
  %158 = getelementptr inbounds i32, i32* %156, i64 4
  %159 = bitcast i32* %158 to <4 x i32>*
  store <4 x i32> %155, <4 x i32>* %159, align 4, !alias.scope !42, !noalias !39
  %160 = add i64 %115, 32
  %161 = add i64 %116, -4
  %162 = icmp eq i64 %161, 0
  br i1 %162, label %163, label %114, !llvm.loop !44

163:                                              ; preds = %114, %105
  %164 = phi i64 [ 0, %105 ], [ %160, %114 ]
  %165 = icmp eq i64 %110, 0
  br i1 %165, label %182, label %166

166:                                              ; preds = %163, %166
  %167 = phi i64 [ %179, %166 ], [ %164, %163 ]
  %168 = phi i64 [ %180, %166 ], [ %110, %163 ]
  %169 = getelementptr inbounds i32, i32* %67, i64 %167
  %170 = bitcast i32* %169 to <4 x i32>*
  %171 = load <4 x i32>, <4 x i32>* %170, align 4, !alias.scope !39
  %172 = getelementptr inbounds i32, i32* %169, i64 4
  %173 = bitcast i32* %172 to <4 x i32>*
  %174 = load <4 x i32>, <4 x i32>* %173, align 4, !alias.scope !39
  %175 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %167
  %176 = bitcast i32* %175 to <4 x i32>*
  store <4 x i32> %171, <4 x i32>* %176, align 4, !alias.scope !42, !noalias !39
  %177 = getelementptr inbounds i32, i32* %175, i64 4
  %178 = bitcast i32* %177 to <4 x i32>*
  store <4 x i32> %174, <4 x i32>* %178, align 4, !alias.scope !42, !noalias !39
  %179 = add i64 %167, 8
  %180 = add i64 %168, -1
  %181 = icmp eq i64 %180, 0
  br i1 %181, label %182, label %166, !llvm.loop !45

182:                                              ; preds = %166, %163
  %183 = icmp eq i64 %106, %76
  br i1 %183, label %184, label %78

184:                                              ; preds = %93, %187, %182, %65
  %185 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 0
  %186 = load i32, i32* %185, align 8
  switch i32 %186, label %560 [
    i32 1, label %206
    i32 2, label %206
    i32 3, label %293
    i32 9, label %293
    i32 4, label %382
    i32 6, label %471
  ]

187:                                              ; preds = %93, %187
  %188 = phi i64 [ %204, %187 ], [ %94, %93 ]
  %189 = getelementptr inbounds i32, i32* %67, i64 %188
  %190 = load i32, i32* %189, align 4
  %191 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %188
  store i32 %190, i32* %191, align 4
  %192 = add nuw nsw i64 %188, 1
  %193 = getelementptr inbounds i32, i32* %67, i64 %192
  %194 = load i32, i32* %193, align 4
  %195 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %192
  store i32 %194, i32* %195, align 4
  %196 = add nuw nsw i64 %188, 2
  %197 = getelementptr inbounds i32, i32* %67, i64 %196
  %198 = load i32, i32* %197, align 4
  %199 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %196
  store i32 %198, i32* %199, align 4
  %200 = add nuw nsw i64 %188, 3
  %201 = getelementptr inbounds i32, i32* %67, i64 %200
  %202 = load i32, i32* %201, align 4
  %203 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %4, i64 0, i32 1, i64 %200
  store i32 %202, i32* %203, align 4
  %204 = add nuw nsw i64 %188, 4
  %205 = icmp eq i64 %204, %76
  br i1 %205, label %184, label %187, !llvm.loop !46

206:                                              ; preds = %184, %184
  %207 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %207) #9
  %208 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %208, label %209, label %211

209:                                              ; preds = %206
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 0, i32* %210, align 8, !alias.scope !47
  br label %238

211:                                              ; preds = %206
  %212 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %213 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %212, align 8, !noalias !47
  %214 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %213, i64 0, i32 0
  %215 = load i32, i32* %214, align 4, !noalias !47
  %216 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %213, i64 0, i32 1, i64 0
  %217 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  store i32 %215, i32* %217, align 8, !alias.scope !47
  %218 = icmp sgt i32 %215, 5
  br i1 %218, label %219, label %226

219:                                              ; preds = %211
  %220 = sext i32 %215 to i64
  %221 = shl nsw i64 %220, 2
  %222 = tail call i8* @_Znam(i64 %221) #10, !noalias !47
  %223 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %224 = bitcast i32** %223 to i8**
  store i8* %222, i8** %224, align 8, !alias.scope !47
  %225 = bitcast i8* %222 to i32*
  br label %231

226:                                              ; preds = %211
  %227 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %228 = bitcast %union.anon* %227 to i32*
  %229 = sext i32 %215 to i64
  %230 = shl nsw i64 %229, 2
  br label %231

231:                                              ; preds = %226, %219
  %232 = phi i64 [ %221, %219 ], [ %230, %226 ]
  %233 = phi i32* [ %225, %219 ], [ %228, %226 ]
  %234 = bitcast i32* %233 to i8*
  %235 = bitcast i32* %216 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %234, i8* align 4 %235, i64 %232, i1 false) #9
  %236 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1, i32 0
  %237 = load i32*, i32** %236, align 8
  br label %238

238:                                              ; preds = %209, %231
  %239 = phi i32* [ %237, %231 ], [ null, %209 ]
  %240 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %240) #9
  %241 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %241, label %242, label %244

242:                                              ; preds = %238
  %243 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %243, align 8, !alias.scope !50
  br label %271

244:                                              ; preds = %238
  %245 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %246 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %245, align 8, !noalias !50
  %247 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %246, i64 0, i32 0
  %248 = load i32, i32* %247, align 4, !noalias !50
  %249 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %246, i64 0, i32 1, i64 0
  %250 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %248, i32* %250, align 8, !alias.scope !50
  %251 = icmp sgt i32 %248, 5
  br i1 %251, label %252, label %259

252:                                              ; preds = %244
  %253 = sext i32 %248 to i64
  %254 = shl nsw i64 %253, 2
  %255 = tail call i8* @_Znam(i64 %254) #10, !noalias !50
  %256 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %257 = bitcast i32** %256 to i8**
  store i8* %255, i8** %257, align 8, !alias.scope !50
  %258 = bitcast i8* %255 to i32*
  br label %264

259:                                              ; preds = %244
  %260 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %261 = bitcast %union.anon* %260 to i32*
  %262 = sext i32 %248 to i64
  %263 = shl nsw i64 %262, 2
  br label %264

264:                                              ; preds = %259, %252
  %265 = phi i64 [ %254, %252 ], [ %263, %259 ]
  %266 = phi i32* [ %258, %252 ], [ %261, %259 ]
  %267 = bitcast i32* %266 to i8*
  %268 = bitcast i32* %249 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %267, i8* align 4 %268, i64 %265, i1 false) #9
  %269 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1, i32 0
  %270 = load i32*, i32** %269, align 8
  br label %271

271:                                              ; preds = %242, %264
  %272 = phi i32* [ %270, %264 ], [ null, %242 ]
  call void @_ZN6tflite13optimized_ops9TransposeIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i32* %239, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i32* %272)
  %273 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  %274 = load i32, i32* %273, align 8
  %275 = icmp sgt i32 %274, 5
  br i1 %275, label %276, label %282

276:                                              ; preds = %271
  %277 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %278 = load i32*, i32** %277, align 8
  %279 = icmp eq i32* %278, null
  br i1 %279, label %282, label %280

280:                                              ; preds = %276
  %281 = bitcast i32* %278 to i8*
  call void @_ZdaPv(i8* %281) #10
  br label %282

282:                                              ; preds = %271, %276, %280
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %240) #9
  %283 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %284 = load i32, i32* %283, align 8
  %285 = icmp sgt i32 %284, 5
  br i1 %285, label %286, label %292

286:                                              ; preds = %282
  %287 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %288 = load i32*, i32** %287, align 8
  %289 = icmp eq i32* %288, null
  br i1 %289, label %292, label %290

290:                                              ; preds = %286
  %291 = bitcast i32* %288 to i8*
  call void @_ZdaPv(i8* %291) #10
  br label %292

292:                                              ; preds = %282, %286, %290
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %207) #9
  br label %564

293:                                              ; preds = %184, %184
  %294 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %294) #9
  %295 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %295, label %296, label %298

296:                                              ; preds = %293
  %297 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %297, align 8, !alias.scope !53
  br label %326

298:                                              ; preds = %293
  %299 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %300 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %299, align 8, !noalias !53
  %301 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %300, i64 0, i32 0
  %302 = load i32, i32* %301, align 4, !noalias !53
  %303 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %300, i64 0, i32 1, i64 0
  %304 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 %302, i32* %304, align 8, !alias.scope !53
  %305 = icmp sgt i32 %302, 5
  br i1 %305, label %306, label %313

306:                                              ; preds = %298
  %307 = sext i32 %302 to i64
  %308 = shl nsw i64 %307, 2
  %309 = tail call i8* @_Znam(i64 %308) #10, !noalias !53
  %310 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %311 = bitcast i32** %310 to i8**
  store i8* %309, i8** %311, align 8, !alias.scope !53
  %312 = bitcast i8* %309 to i32*
  br label %318

313:                                              ; preds = %298
  %314 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %315 = bitcast %union.anon* %314 to i32*
  %316 = sext i32 %302 to i64
  %317 = shl nsw i64 %316, 2
  br label %318

318:                                              ; preds = %313, %306
  %319 = phi i64 [ %308, %306 ], [ %317, %313 ]
  %320 = phi i32* [ %312, %306 ], [ %315, %313 ]
  %321 = bitcast i32* %320 to i8*
  %322 = bitcast i32* %303 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %321, i8* align 4 %322, i64 %319, i1 false) #9
  %323 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %324 = bitcast %union.TfLitePtrUnion* %323 to i8**
  %325 = load i8*, i8** %324, align 8
  br label %326

326:                                              ; preds = %296, %318
  %327 = phi i8* [ %325, %318 ], [ null, %296 ]
  %328 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %328) #9
  %329 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %329, label %330, label %332

330:                                              ; preds = %326
  %331 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %331, align 8, !alias.scope !56
  br label %360

332:                                              ; preds = %326
  %333 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %334 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %333, align 8, !noalias !56
  %335 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %334, i64 0, i32 0
  %336 = load i32, i32* %335, align 4, !noalias !56
  %337 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %334, i64 0, i32 1, i64 0
  %338 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 %336, i32* %338, align 8, !alias.scope !56
  %339 = icmp sgt i32 %336, 5
  br i1 %339, label %340, label %347

340:                                              ; preds = %332
  %341 = sext i32 %336 to i64
  %342 = shl nsw i64 %341, 2
  %343 = tail call i8* @_Znam(i64 %342) #10, !noalias !56
  %344 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %345 = bitcast i32** %344 to i8**
  store i8* %343, i8** %345, align 8, !alias.scope !56
  %346 = bitcast i8* %343 to i32*
  br label %352

347:                                              ; preds = %332
  %348 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %349 = bitcast %union.anon* %348 to i32*
  %350 = sext i32 %336 to i64
  %351 = shl nsw i64 %350, 2
  br label %352

352:                                              ; preds = %347, %340
  %353 = phi i64 [ %342, %340 ], [ %351, %347 ]
  %354 = phi i32* [ %346, %340 ], [ %349, %347 ]
  %355 = bitcast i32* %354 to i8*
  %356 = bitcast i32* %337 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %355, i8* align 4 %356, i64 %353, i1 false) #9
  %357 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1
  %358 = bitcast %union.TfLitePtrUnion* %357 to i8**
  %359 = load i8*, i8** %358, align 8
  br label %360

360:                                              ; preds = %330, %352
  %361 = phi i8* [ %359, %352 ], [ null, %330 ]
  call void @_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %327, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %361)
  %362 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  %363 = load i32, i32* %362, align 8
  %364 = icmp sgt i32 %363, 5
  br i1 %364, label %365, label %371

365:                                              ; preds = %360
  %366 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %367 = load i32*, i32** %366, align 8
  %368 = icmp eq i32* %367, null
  br i1 %368, label %371, label %369

369:                                              ; preds = %365
  %370 = bitcast i32* %367 to i8*
  call void @_ZdaPv(i8* %370) #10
  br label %371

371:                                              ; preds = %360, %365, %369
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %328) #9
  %372 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  %373 = load i32, i32* %372, align 8
  %374 = icmp sgt i32 %373, 5
  br i1 %374, label %375, label %381

375:                                              ; preds = %371
  %376 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %377 = load i32*, i32** %376, align 8
  %378 = icmp eq i32* %377, null
  br i1 %378, label %381, label %379

379:                                              ; preds = %375
  %380 = bitcast i32* %377 to i8*
  call void @_ZdaPv(i8* %380) #10
  br label %381

381:                                              ; preds = %371, %375, %379
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %294) #9
  br label %564

382:                                              ; preds = %184
  %383 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %383) #9
  %384 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %384, label %385, label %387

385:                                              ; preds = %382
  %386 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %386, align 8, !alias.scope !59
  br label %415

387:                                              ; preds = %382
  %388 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %389 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %388, align 8, !noalias !59
  %390 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %389, i64 0, i32 0
  %391 = load i32, i32* %390, align 4, !noalias !59
  %392 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %389, i64 0, i32 1, i64 0
  %393 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 %391, i32* %393, align 8, !alias.scope !59
  %394 = icmp sgt i32 %391, 5
  br i1 %394, label %395, label %402

395:                                              ; preds = %387
  %396 = sext i32 %391 to i64
  %397 = shl nsw i64 %396, 2
  %398 = tail call i8* @_Znam(i64 %397) #10, !noalias !59
  %399 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %400 = bitcast i32** %399 to i8**
  store i8* %398, i8** %400, align 8, !alias.scope !59
  %401 = bitcast i8* %398 to i32*
  br label %407

402:                                              ; preds = %387
  %403 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1
  %404 = bitcast %union.anon* %403 to i32*
  %405 = sext i32 %391 to i64
  %406 = shl nsw i64 %405, 2
  br label %407

407:                                              ; preds = %402, %395
  %408 = phi i64 [ %397, %395 ], [ %406, %402 ]
  %409 = phi i32* [ %401, %395 ], [ %404, %402 ]
  %410 = bitcast i32* %409 to i8*
  %411 = bitcast i32* %392 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %410, i8* align 4 %411, i64 %408, i1 false) #9
  %412 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %413 = bitcast %union.TfLitePtrUnion* %412 to i64**
  %414 = load i64*, i64** %413, align 8
  br label %415

415:                                              ; preds = %385, %407
  %416 = phi i64* [ %414, %407 ], [ null, %385 ]
  %417 = bitcast %"class.tflite::RuntimeShape"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %417) #9
  %418 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %418, label %419, label %421

419:                                              ; preds = %415
  %420 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 0, i32* %420, align 8, !alias.scope !62
  br label %449

421:                                              ; preds = %415
  %422 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %423 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %422, align 8, !noalias !62
  %424 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %423, i64 0, i32 0
  %425 = load i32, i32* %424, align 4, !noalias !62
  %426 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %423, i64 0, i32 1, i64 0
  %427 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  store i32 %425, i32* %427, align 8, !alias.scope !62
  %428 = icmp sgt i32 %425, 5
  br i1 %428, label %429, label %436

429:                                              ; preds = %421
  %430 = sext i32 %425 to i64
  %431 = shl nsw i64 %430, 2
  %432 = tail call i8* @_Znam(i64 %431) #10, !noalias !62
  %433 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %434 = bitcast i32** %433 to i8**
  store i8* %432, i8** %434, align 8, !alias.scope !62
  %435 = bitcast i8* %432 to i32*
  br label %441

436:                                              ; preds = %421
  %437 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1
  %438 = bitcast %union.anon* %437 to i32*
  %439 = sext i32 %425 to i64
  %440 = shl nsw i64 %439, 2
  br label %441

441:                                              ; preds = %436, %429
  %442 = phi i64 [ %431, %429 ], [ %440, %436 ]
  %443 = phi i32* [ %435, %429 ], [ %438, %436 ]
  %444 = bitcast i32* %443 to i8*
  %445 = bitcast i32* %426 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %444, i8* align 4 %445, i64 %442, i1 false) #9
  %446 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1
  %447 = bitcast %union.TfLitePtrUnion* %446 to i64**
  %448 = load i64*, i64** %447, align 8
  br label %449

449:                                              ; preds = %419, %441
  %450 = phi i64* [ %448, %441 ], [ null, %419 ]
  call void @_ZN6tflite13reference_ops13TransposeImplIlLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i64* %416, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %11, i64* %450) #9
  %451 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 0
  %452 = load i32, i32* %451, align 8
  %453 = icmp sgt i32 %452, 5
  br i1 %453, label %454, label %460

454:                                              ; preds = %449
  %455 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %11, i64 0, i32 1, i32 0
  %456 = load i32*, i32** %455, align 8
  %457 = icmp eq i32* %456, null
  br i1 %457, label %460, label %458

458:                                              ; preds = %454
  %459 = bitcast i32* %456 to i8*
  call void @_ZdaPv(i8* %459) #10
  br label %460

460:                                              ; preds = %449, %454, %458
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %417) #9
  %461 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  %462 = load i32, i32* %461, align 8
  %463 = icmp sgt i32 %462, 5
  br i1 %463, label %464, label %470

464:                                              ; preds = %460
  %465 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %466 = load i32*, i32** %465, align 8
  %467 = icmp eq i32* %466, null
  br i1 %467, label %470, label %468

468:                                              ; preds = %464
  %469 = bitcast i32* %466 to i8*
  call void @_ZdaPv(i8* %469) #10
  br label %470

470:                                              ; preds = %460, %464, %468
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %383) #9
  br label %564

471:                                              ; preds = %184
  %472 = bitcast %"class.tflite::RuntimeShape"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %472) #9
  %473 = icmp eq %struct.TfLiteTensor* %30, null
  br i1 %473, label %474, label %476

474:                                              ; preds = %471
  %475 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 0, i32* %475, align 8, !alias.scope !65
  br label %504

476:                                              ; preds = %471
  %477 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 2
  %478 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %477, align 8, !noalias !65
  %479 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %478, i64 0, i32 0
  %480 = load i32, i32* %479, align 4, !noalias !65
  %481 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %478, i64 0, i32 1, i64 0
  %482 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  store i32 %480, i32* %482, align 8, !alias.scope !65
  %483 = icmp sgt i32 %480, 5
  br i1 %483, label %484, label %491

484:                                              ; preds = %476
  %485 = sext i32 %480 to i64
  %486 = shl nsw i64 %485, 2
  %487 = tail call i8* @_Znam(i64 %486) #10, !noalias !65
  %488 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %489 = bitcast i32** %488 to i8**
  store i8* %487, i8** %489, align 8, !alias.scope !65
  %490 = bitcast i8* %487 to i32*
  br label %496

491:                                              ; preds = %476
  %492 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1
  %493 = bitcast %union.anon* %492 to i32*
  %494 = sext i32 %480 to i64
  %495 = shl nsw i64 %494, 2
  br label %496

496:                                              ; preds = %491, %484
  %497 = phi i64 [ %486, %484 ], [ %495, %491 ]
  %498 = phi i32* [ %490, %484 ], [ %493, %491 ]
  %499 = bitcast i32* %498 to i8*
  %500 = bitcast i32* %481 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %499, i8* align 4 %500, i64 %497, i1 false) #9
  %501 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %30, i64 0, i32 1
  %502 = bitcast %union.TfLitePtrUnion* %501 to i8**
  %503 = load i8*, i8** %502, align 8
  br label %504

504:                                              ; preds = %474, %496
  %505 = phi i8* [ %503, %496 ], [ null, %474 ]
  %506 = bitcast %"class.tflite::RuntimeShape"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %506) #9
  %507 = icmp eq %struct.TfLiteTensor* %52, null
  br i1 %507, label %508, label %510

508:                                              ; preds = %504
  %509 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 0, i32* %509, align 8, !alias.scope !68
  br label %538

510:                                              ; preds = %504
  %511 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 2
  %512 = load %struct.TfLiteIntArray*, %struct.TfLiteIntArray** %511, align 8, !noalias !68
  %513 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %512, i64 0, i32 0
  %514 = load i32, i32* %513, align 4, !noalias !68
  %515 = getelementptr inbounds %struct.TfLiteIntArray, %struct.TfLiteIntArray* %512, i64 0, i32 1, i64 0
  %516 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  store i32 %514, i32* %516, align 8, !alias.scope !68
  %517 = icmp sgt i32 %514, 5
  br i1 %517, label %518, label %525

518:                                              ; preds = %510
  %519 = sext i32 %514 to i64
  %520 = shl nsw i64 %519, 2
  %521 = tail call i8* @_Znam(i64 %520) #10, !noalias !68
  %522 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %523 = bitcast i32** %522 to i8**
  store i8* %521, i8** %523, align 8, !alias.scope !68
  %524 = bitcast i8* %521 to i32*
  br label %530

525:                                              ; preds = %510
  %526 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1
  %527 = bitcast %union.anon* %526 to i32*
  %528 = sext i32 %514 to i64
  %529 = shl nsw i64 %528, 2
  br label %530

530:                                              ; preds = %525, %518
  %531 = phi i64 [ %520, %518 ], [ %529, %525 ]
  %532 = phi i32* [ %524, %518 ], [ %527, %525 ]
  %533 = bitcast i32* %532 to i8*
  %534 = bitcast i32* %515 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %533, i8* align 4 %534, i64 %531, i1 false) #9
  %535 = getelementptr inbounds %struct.TfLiteTensor, %struct.TfLiteTensor* %52, i64 0, i32 1
  %536 = bitcast %union.TfLitePtrUnion* %535 to i8**
  %537 = load i8*, i8** %536, align 8
  br label %538

538:                                              ; preds = %508, %530
  %539 = phi i8* [ %537, %530 ], [ null, %508 ]
  call void @_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %4, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %12, i8* %505, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %13, i8* %539)
  %540 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 0
  %541 = load i32, i32* %540, align 8
  %542 = icmp sgt i32 %541, 5
  br i1 %542, label %543, label %549

543:                                              ; preds = %538
  %544 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %13, i64 0, i32 1, i32 0
  %545 = load i32*, i32** %544, align 8
  %546 = icmp eq i32* %545, null
  br i1 %546, label %549, label %547

547:                                              ; preds = %543
  %548 = bitcast i32* %545 to i8*
  call void @_ZdaPv(i8* %548) #10
  br label %549

549:                                              ; preds = %538, %543, %547
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %506) #9
  %550 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 0
  %551 = load i32, i32* %550, align 8
  %552 = icmp sgt i32 %551, 5
  br i1 %552, label %553, label %559

553:                                              ; preds = %549
  %554 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %12, i64 0, i32 1, i32 0
  %555 = load i32*, i32** %554, align 8
  %556 = icmp eq i32* %555, null
  br i1 %556, label %559, label %557

557:                                              ; preds = %553
  %558 = bitcast i32* %555 to i8*
  call void @_ZdaPv(i8* %558) #10
  br label %559

559:                                              ; preds = %549, %553, %557
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %472) #9
  br label %564

560:                                              ; preds = %184
  %561 = getelementptr inbounds %struct.TfLiteContext, %struct.TfLiteContext* %0, i64 0, i32 5
  %562 = load void (%struct.TfLiteContext*, i8*, ...)*, void (%struct.TfLiteContext*, i8*, ...)** %561, align 8
  %563 = tail call i8* @TfLiteTypeGetName(i32 %186) #9
  tail call void (%struct.TfLiteContext*, i8*, ...) %562(%struct.TfLiteContext* %0, i8* getelementptr inbounds ([49 x i8], [49 x i8]* @.str.17, i64 0, i64 0), i8* %563) #9
  br label %564

564:                                              ; preds = %292, %381, %470, %559, %560
  %565 = phi i32 [ 1, %560 ], [ 0, %559 ], [ 0, %470 ], [ 0, %381 ], [ 0, %292 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #9
  br label %566

566:                                              ; preds = %56, %564
  %567 = phi i32 [ %565, %564 ], [ %57, %56 ]
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %14) #9
  ret i32 %567
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden nonnull %struct.TfLiteRegistration* @_ZN6tflite3ops7builtin18Register_TRANSPOSEEv() local_unnamed_addr #3 {
  ret %struct.TfLiteRegistration* @_ZZN6tflite3ops7builtin36Register_TRANSPOSE_GENERIC_OPTIMIZEDEvE1r
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.tflite::NdArrayDesc", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 5, %10
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 40, i1 false)
  %15 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !71
  %17 = icmp sgt i32 %10, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  tail call void @abort() #11, !noalias !71
  unreachable

19:                                               ; preds = %5
  store i32 5, i32* %16, align 8, !alias.scope !71
  %20 = icmp sgt i32 %13, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to [5 x i32]*
  br i1 %20, label %23, label %102

23:                                               ; preds = %19
  %24 = zext i32 %13 to i64
  %25 = icmp ult i32 %13, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %23
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !71
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !71
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !71
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !71
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !71
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !71
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !71
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !71
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !71
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !71
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !71
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !71
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !71
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !71
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !71
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !71
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !74

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !71
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !71
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !75

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %23
  %96 = phi i64 [ 0, %23 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !71
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !76

102:                                              ; preds = %97, %93, %19
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %109 = bitcast %union.anon* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %111, i1 false) #9
  %112 = load i32, i32* %16, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = load i32*, i32** %103, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = select i1 %113, i32* %115, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 4
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 4
  store i32 1, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 3
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = select i1 %113, i32* %122, i32* %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 3
  store i32 %119, i32* %128, align 4
  %129 = mul nsw i32 %126, %119
  %130 = getelementptr inbounds i32, i32* %114, i64 2
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = select i1 %113, i32* %130, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 2
  store i32 %129, i32* %136, align 4
  %137 = mul nsw i32 %134, %129
  %138 = getelementptr inbounds i32, i32* %114, i64 1
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 1
  %140 = select i1 %113, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 1
  store i32 %137, i32* %143, align 4
  %144 = mul nsw i32 %141, %137
  %145 = select i1 %113, i32* %114, i32* %104
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 0
  store i32 %144, i32* %148, align 4
  %149 = xor i1 %113, true
  %150 = icmp eq i32* %114, null
  %151 = or i1 %150, %149
  br i1 %151, label %155, label %152

152:                                              ; preds = %102
  %153 = bitcast i32* %114 to i8*
  tail call void @_ZdaPv(i8* %153) #10
  %154 = load i32, i32* %11, align 8, !noalias !78
  br label %155

155:                                              ; preds = %102, %152
  %156 = phi i32 [ %12, %102 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  %157 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #9
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !78
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  tail call void @abort() #11, !noalias !78
  unreachable

161:                                              ; preds = %155
  store i32 5, i32* %158, align 8, !alias.scope !78
  %162 = sub i32 5, %156
  %163 = icmp sgt i32 %162, 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to [5 x i32]*
  br i1 %163, label %166, label %245

166:                                              ; preds = %161
  %167 = zext i32 %162 to i64
  %168 = icmp ult i32 %162, 8
  br i1 %168, label %238, label %169

169:                                              ; preds = %166
  %170 = and i64 %167, 4294967288
  %171 = add nsw i64 %170, -8
  %172 = lshr exact i64 %171, 3
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 7
  %175 = icmp ult i64 %171, 56
  br i1 %175, label %223, label %176

176:                                              ; preds = %169
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %220, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %221, %178 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !78
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !78
  %185 = or i64 %179, 8
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %185
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !78
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !78
  %190 = or i64 %179, 16
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %190
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !78
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !78
  %195 = or i64 %179, 24
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %197, align 8, !alias.scope !78
  %198 = getelementptr inbounds i32, i32* %196, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %199, align 8, !alias.scope !78
  %200 = or i64 %179, 32
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %200
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %202, align 8, !alias.scope !78
  %203 = getelementptr inbounds i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %204, align 8, !alias.scope !78
  %205 = or i64 %179, 40
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %205
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %207, align 8, !alias.scope !78
  %208 = getelementptr inbounds i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %209, align 8, !alias.scope !78
  %210 = or i64 %179, 48
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %210
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %212, align 8, !alias.scope !78
  %213 = getelementptr inbounds i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %214, align 8, !alias.scope !78
  %215 = or i64 %179, 56
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %215
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %217, align 8, !alias.scope !78
  %218 = getelementptr inbounds i32, i32* %216, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %219, align 8, !alias.scope !78
  %220 = add i64 %179, 64
  %221 = add i64 %180, -8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %178, !llvm.loop !81

223:                                              ; preds = %178, %169
  %224 = phi i64 [ 0, %169 ], [ %220, %178 ]
  %225 = icmp eq i64 %174, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %233, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %234, %226 ], [ %174, %223 ]
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %227
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %230, align 8, !alias.scope !78
  %231 = getelementptr inbounds i32, i32* %229, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %232, align 8, !alias.scope !78
  %233 = add i64 %227, 8
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %226, !llvm.loop !82

236:                                              ; preds = %226, %223
  %237 = icmp eq i64 %170, %167
  br i1 %237, label %245, label %238

238:                                              ; preds = %236, %166
  %239 = phi i64 [ 0, %166 ], [ %170, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi i64 [ %243, %240 ], [ %239, %238 ]
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %241
  store i32 1, i32* %242, align 4, !alias.scope !78
  %243 = add nuw nsw i64 %241, 1
  %244 = icmp eq i64 %243, %167
  br i1 %244, label %245, label %240, !llvm.loop !83

245:                                              ; preds = %240, %236, %161
  %246 = getelementptr inbounds %union.anon, %union.anon* %164, i64 0, i32 0
  %247 = bitcast %union.anon* %164 to i32*
  %248 = sext i32 %162 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast i32* %249 to i8*
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = sext i32 %156 to i64
  %254 = shl nsw i64 %253, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %252, i64 %254, i1 false) #9
  %255 = load i32, i32* %158, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = load i32*, i32** %246, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %260 = bitcast i8* %259 to i32*
  %261 = select i1 %256, i32* %258, i32* %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %257, i64 3
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %265 = bitcast i8* %264 to i32*
  %266 = select i1 %256, i32* %263, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = getelementptr inbounds i32, i32* %257, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %256, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %257, i64 1
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 1
  %276 = select i1 %256, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = select i1 %256, i32* %257, i32* %247
  %279 = load i32, i32* %278, align 4
  %280 = xor i1 %256, true
  %281 = icmp eq i32* %257, null
  %282 = or i1 %281, %280
  br i1 %282, label %285, label %283

283:                                              ; preds = %245
  %284 = bitcast i32* %257 to i8*
  tail call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %245, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #9
  %286 = icmp slt i32 %12, 5
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = add nsw i32 %12, -5
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, %13
  %293 = sext i32 %292 to i64
  br label %536

294:                                              ; preds = %285
  %295 = icmp eq i32 %12, 4
  br i1 %295, label %536, label %544

296:                                              ; preds = %583
  %297 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %584
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %587
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %585
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %586
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %277, 0
  %306 = icmp sgt i32 %273, 0
  %307 = icmp sgt i32 %267, 0
  %308 = icmp sgt i32 %262, 0
  %309 = sext i32 %298 to i64
  %310 = sext i32 %300 to i64
  %311 = sext i32 %302 to i64
  %312 = sext i32 %304 to i64
  %313 = zext i32 %279 to i64
  %314 = zext i32 %277 to i64
  %315 = zext i32 %273 to i64
  %316 = zext i32 %267 to i64
  %317 = zext i32 %262 to i64
  %318 = add nsw i64 %317, -1
  %319 = mul i32 %277, %273
  %320 = mul i32 %319, %267
  %321 = mul i32 %320, %262
  %322 = zext i32 %321 to i64
  %323 = mul i32 %267, %262
  %324 = mul i32 %323, %273
  %325 = zext i32 %324 to i64
  %326 = zext i32 %323 to i64
  %327 = mul i32 %277, %273
  %328 = mul i32 %327, %267
  %329 = mul i32 %328, %262
  %330 = zext i32 %329 to i64
  %331 = mul i32 %267, %262
  %332 = mul i32 %331, %273
  %333 = zext i32 %332 to i64
  %334 = zext i32 %331 to i64
  %335 = getelementptr i32, i32* %4, i64 %317
  %336 = and i64 %317, 4294967288
  %337 = add nsw i64 %336, -8
  %338 = lshr exact i64 %337, 3
  %339 = add nuw nsw i64 %338, 1
  %340 = icmp ult i32 %262, 8
  %341 = icmp ne i64 %588, 1
  %342 = trunc i64 %318 to i32
  %343 = icmp ugt i64 %318, 4294967295
  %344 = and i64 %317, 4294967288
  %345 = and i64 %339, 1
  %346 = icmp eq i64 %337, 0
  %347 = sub nuw nsw i64 %339, %345
  %348 = icmp eq i64 %345, 0
  %349 = icmp eq i64 %344, %317
  %350 = and i64 %317, 1
  %351 = icmp eq i64 %350, 0
  %352 = sub nsw i64 0, %317
  br label %353

353:                                              ; preds = %532, %296
  %354 = phi i64 [ 0, %296 ], [ %533, %532 ]
  %355 = mul i64 %354, %312
  %356 = add i64 %355, %317
  %357 = mul i64 %354, %330
  %358 = mul i64 %354, %322
  br i1 %305, label %359, label %532

359:                                              ; preds = %353
  %360 = mul nsw i64 %354, %312
  %361 = trunc i64 %354 to i32
  %362 = mul i32 %277, %361
  br label %363

363:                                              ; preds = %529, %359
  %364 = phi i64 [ 0, %359 ], [ %530, %529 ]
  %365 = mul i64 %364, %311
  %366 = add i64 %355, %365
  %367 = add i64 %356, %365
  %368 = mul i64 %364, %333
  %369 = add i64 %357, %368
  %370 = mul i64 %364, %325
  %371 = add i64 %358, %370
  br i1 %306, label %372, label %529

372:                                              ; preds = %363
  %373 = mul nsw i64 %364, %311
  %374 = add nsw i64 %373, %360
  %375 = trunc i64 %364 to i32
  %376 = add i32 %362, %375
  %377 = mul i32 %376, %273
  br label %378

378:                                              ; preds = %526, %372
  %379 = phi i64 [ 0, %372 ], [ %527, %526 ]
  %380 = mul i64 %379, %310
  %381 = add i64 %366, %380
  %382 = add i64 %367, %380
  %383 = mul i64 %379, %334
  %384 = add i64 %369, %383
  %385 = mul i64 %379, %326
  %386 = add i64 %371, %385
  br i1 %307, label %387, label %526

387:                                              ; preds = %378
  %388 = mul nsw i64 %379, %310
  %389 = add nsw i64 %374, %388
  %390 = trunc i64 %379 to i32
  %391 = add i32 %377, %390
  %392 = mul i32 %268, %391
  br label %393

393:                                              ; preds = %523, %387
  %394 = phi i64 [ 0, %387 ], [ %524, %523 ]
  %395 = mul i64 %394, %309
  %396 = add i64 %381, %395
  %397 = getelementptr i32, i32* %2, i64 %396
  %398 = add i64 %382, %395
  %399 = getelementptr i32, i32* %2, i64 %398
  %400 = mul i64 %394, %317
  %401 = add i64 %384, %400
  %402 = shl i64 %401, 32
  %403 = ashr exact i64 %402, 32
  %404 = getelementptr i32, i32* %4, i64 %403
  %405 = getelementptr i32, i32* %335, i64 %403
  %406 = mul i64 %394, %317
  %407 = add i64 %386, %406
  %408 = trunc i64 %407 to i32
  br i1 %308, label %409, label %523

409:                                              ; preds = %393
  %410 = mul nsw i64 %394, %309
  %411 = add nsw i64 %389, %410
  %412 = trunc i64 %394 to i32
  %413 = mul i32 %262, %412
  br i1 %340, label %483, label %414

414:                                              ; preds = %409
  %415 = add i32 %408, %342
  %416 = icmp slt i32 %415, %408
  %417 = or i1 %416, %343
  %418 = or i1 %341, %417
  br i1 %418, label %483, label %419

419:                                              ; preds = %414
  %420 = icmp ult i32* %397, %405
  %421 = icmp ult i32* %404, %399
  %422 = and i1 %420, %421
  br i1 %422, label %483, label %423

423:                                              ; preds = %419
  br i1 %346, label %463, label %424

424:                                              ; preds = %423, %424
  %425 = phi i64 [ %460, %424 ], [ 0, %423 ]
  %426 = phi i64 [ %461, %424 ], [ %347, %423 ]
  %427 = mul nsw i64 %588, %425
  %428 = add nsw i64 %411, %427
  %429 = getelementptr inbounds i32, i32* %2, i64 %428
  %430 = bitcast i32* %429 to <4 x i32>*
  %431 = load <4 x i32>, <4 x i32>* %430, align 4, !alias.scope !84, !noalias !87
  %432 = getelementptr inbounds i32, i32* %429, i64 4
  %433 = bitcast i32* %432 to <4 x i32>*
  %434 = load <4 x i32>, <4 x i32>* %433, align 4, !alias.scope !84, !noalias !87
  %435 = trunc i64 %425 to i32
  %436 = add i32 %413, %435
  %437 = add i32 %436, %392
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i32, i32* %4, i64 %438
  %440 = bitcast i32* %439 to <4 x i32>*
  store <4 x i32> %431, <4 x i32>* %440, align 4, !alias.scope !87
  %441 = getelementptr inbounds i32, i32* %439, i64 4
  %442 = bitcast i32* %441 to <4 x i32>*
  store <4 x i32> %434, <4 x i32>* %442, align 4, !alias.scope !87
  %443 = or i64 %425, 8
  %444 = mul nsw i64 %588, %443
  %445 = add nsw i64 %411, %444
  %446 = getelementptr inbounds i32, i32* %2, i64 %445
  %447 = bitcast i32* %446 to <4 x i32>*
  %448 = load <4 x i32>, <4 x i32>* %447, align 4, !alias.scope !84, !noalias !87
  %449 = getelementptr inbounds i32, i32* %446, i64 4
  %450 = bitcast i32* %449 to <4 x i32>*
  %451 = load <4 x i32>, <4 x i32>* %450, align 4, !alias.scope !84, !noalias !87
  %452 = trunc i64 %443 to i32
  %453 = add i32 %413, %452
  %454 = add i32 %453, %392
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i32, i32* %4, i64 %455
  %457 = bitcast i32* %456 to <4 x i32>*
  store <4 x i32> %448, <4 x i32>* %457, align 4, !alias.scope !87
  %458 = getelementptr inbounds i32, i32* %456, i64 4
  %459 = bitcast i32* %458 to <4 x i32>*
  store <4 x i32> %451, <4 x i32>* %459, align 4, !alias.scope !87
  %460 = add i64 %425, 16
  %461 = add i64 %426, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %424, !llvm.loop !89

463:                                              ; preds = %424, %423
  %464 = phi i64 [ 0, %423 ], [ %460, %424 ]
  br i1 %348, label %482, label %465

465:                                              ; preds = %463
  %466 = mul nsw i64 %588, %464
  %467 = add nsw i64 %411, %466
  %468 = getelementptr inbounds i32, i32* %2, i64 %467
  %469 = bitcast i32* %468 to <4 x i32>*
  %470 = load <4 x i32>, <4 x i32>* %469, align 4, !alias.scope !84, !noalias !87
  %471 = getelementptr inbounds i32, i32* %468, i64 4
  %472 = bitcast i32* %471 to <4 x i32>*
  %473 = load <4 x i32>, <4 x i32>* %472, align 4, !alias.scope !84, !noalias !87
  %474 = trunc i64 %464 to i32
  %475 = add i32 %413, %474
  %476 = add i32 %475, %392
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i32, i32* %4, i64 %477
  %479 = bitcast i32* %478 to <4 x i32>*
  store <4 x i32> %470, <4 x i32>* %479, align 4, !alias.scope !87
  %480 = getelementptr inbounds i32, i32* %478, i64 4
  %481 = bitcast i32* %480 to <4 x i32>*
  store <4 x i32> %473, <4 x i32>* %481, align 4, !alias.scope !87
  br label %482

482:                                              ; preds = %463, %465
  br i1 %349, label %523, label %483

483:                                              ; preds = %482, %419, %414, %409
  %484 = phi i64 [ 0, %419 ], [ 0, %414 ], [ 0, %409 ], [ %344, %482 ]
  %485 = xor i64 %484, -1
  br i1 %351, label %497, label %486

486:                                              ; preds = %483
  %487 = mul nsw i64 %588, %484
  %488 = add nsw i64 %411, %487
  %489 = getelementptr inbounds i32, i32* %2, i64 %488
  %490 = load i32, i32* %489, align 4
  %491 = trunc i64 %484 to i32
  %492 = add i32 %413, %491
  %493 = add i32 %492, %392
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i32, i32* %4, i64 %494
  store i32 %490, i32* %495, align 4
  %496 = or i64 %484, 1
  br label %497

497:                                              ; preds = %486, %483
  %498 = phi i64 [ %496, %486 ], [ %484, %483 ]
  %499 = icmp eq i64 %485, %352
  br i1 %499, label %523, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %521, %500 ], [ %498, %497 ]
  %502 = mul nsw i64 %588, %501
  %503 = add nsw i64 %411, %502
  %504 = getelementptr inbounds i32, i32* %2, i64 %503
  %505 = load i32, i32* %504, align 4
  %506 = trunc i64 %501 to i32
  %507 = add i32 %413, %506
  %508 = add i32 %507, %392
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i32, i32* %4, i64 %509
  store i32 %505, i32* %510, align 4
  %511 = add nuw nsw i64 %501, 1
  %512 = mul nsw i64 %588, %511
  %513 = add nsw i64 %411, %512
  %514 = getelementptr inbounds i32, i32* %2, i64 %513
  %515 = load i32, i32* %514, align 4
  %516 = trunc i64 %511 to i32
  %517 = add i32 %413, %516
  %518 = add i32 %517, %392
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i32, i32* %4, i64 %519
  store i32 %515, i32* %520, align 4
  %521 = add nuw nsw i64 %501, 2
  %522 = icmp eq i64 %521, %317
  br i1 %522, label %523, label %500, !llvm.loop !90

523:                                              ; preds = %497, %500, %482, %393
  %524 = add nuw nsw i64 %394, 1
  %525 = icmp eq i64 %524, %316
  br i1 %525, label %526, label %393

526:                                              ; preds = %523, %378
  %527 = add nuw nsw i64 %379, 1
  %528 = icmp eq i64 %527, %315
  br i1 %528, label %529, label %378

529:                                              ; preds = %526, %363
  %530 = add nuw nsw i64 %364, 1
  %531 = icmp eq i64 %530, %314
  br i1 %531, label %532, label %363

532:                                              ; preds = %529, %353
  %533 = add nuw nsw i64 %354, 1
  %534 = icmp eq i64 %533, %313
  br i1 %534, label %535, label %353

535:                                              ; preds = %532, %583
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  ret void

536:                                              ; preds = %294, %287
  %537 = phi i64 [ %293, %287 ], [ 0, %294 ]
  %538 = add nsw i32 %12, -4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add nsw i32 %541, %13
  %543 = sext i32 %542 to i64
  br label %546

544:                                              ; preds = %294
  %545 = icmp slt i32 %12, 3
  br i1 %545, label %555, label %546

546:                                              ; preds = %544, %536
  %547 = phi i64 [ %543, %536 ], [ 1, %544 ]
  %548 = phi i64 [ %537, %536 ], [ 0, %544 ]
  %549 = add nsw i32 %12, -3
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = add nsw i32 %552, %13
  %554 = sext i32 %553 to i64
  br label %557

555:                                              ; preds = %544
  %556 = icmp eq i32 %12, 2
  br i1 %556, label %557, label %567

557:                                              ; preds = %555, %546
  %558 = phi i64 [ %554, %546 ], [ 2, %555 ]
  %559 = phi i64 [ %548, %546 ], [ 0, %555 ]
  %560 = phi i64 [ %547, %546 ], [ 1, %555 ]
  %561 = add nsw i32 %12, -2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = add nsw i32 %564, %13
  %566 = sext i32 %565 to i64
  br label %569

567:                                              ; preds = %555
  %568 = icmp slt i32 %12, 1
  br i1 %568, label %583, label %569

569:                                              ; preds = %557, %567
  %570 = phi i64 [ %566, %557 ], [ 3, %567 ]
  %571 = phi i64 [ %560, %557 ], [ 1, %567 ]
  %572 = phi i64 [ %559, %557 ], [ 0, %567 ]
  %573 = phi i64 [ %558, %557 ], [ 2, %567 ]
  %574 = add nsw i32 %12, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, %13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  br label %583

583:                                              ; preds = %567, %569
  %584 = phi i64 [ %570, %569 ], [ 3, %567 ]
  %585 = phi i64 [ %571, %569 ], [ 1, %567 ]
  %586 = phi i64 [ %572, %569 ], [ 0, %567 ]
  %587 = phi i64 [ %573, %569 ], [ 2, %567 ]
  %588 = phi i64 [ %582, %569 ], [ 1, %567 ]
  %589 = icmp sgt i32 %279, 0
  br i1 %589, label %296, label %535
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #4

; Function Attrs: nobuiltin nounwind
declare void @_ZdaPv(i8*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znam(i64) local_unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.tflite::NdArrayDesc", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 5, %10
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 40, i1 false)
  %15 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !91
  %17 = icmp sgt i32 %10, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  tail call void @abort() #11, !noalias !91
  unreachable

19:                                               ; preds = %5
  store i32 5, i32* %16, align 8, !alias.scope !91
  %20 = icmp sgt i32 %13, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to [5 x i32]*
  br i1 %20, label %23, label %102

23:                                               ; preds = %19
  %24 = zext i32 %13 to i64
  %25 = icmp ult i32 %13, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %23
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !91
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !91
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !91
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !91
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !91
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !91
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !91
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !91
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !91
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !91
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !91
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !91
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !91
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !91
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !91
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !91
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !94

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !91
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !91
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !95

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %23
  %96 = phi i64 [ 0, %23 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !91
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !96

102:                                              ; preds = %97, %93, %19
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %109 = bitcast %union.anon* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %111, i1 false) #9
  %112 = load i32, i32* %16, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = load i32*, i32** %103, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = select i1 %113, i32* %115, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 4
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 4
  store i32 1, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 3
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = select i1 %113, i32* %122, i32* %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 3
  store i32 %119, i32* %128, align 4
  %129 = mul nsw i32 %126, %119
  %130 = getelementptr inbounds i32, i32* %114, i64 2
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = select i1 %113, i32* %130, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 2
  store i32 %129, i32* %136, align 4
  %137 = mul nsw i32 %134, %129
  %138 = getelementptr inbounds i32, i32* %114, i64 1
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 1
  %140 = select i1 %113, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 1
  store i32 %137, i32* %143, align 4
  %144 = mul nsw i32 %141, %137
  %145 = select i1 %113, i32* %114, i32* %104
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 0
  store i32 %144, i32* %148, align 4
  %149 = xor i1 %113, true
  %150 = icmp eq i32* %114, null
  %151 = or i1 %150, %149
  br i1 %151, label %155, label %152

152:                                              ; preds = %102
  %153 = bitcast i32* %114 to i8*
  tail call void @_ZdaPv(i8* %153) #10
  %154 = load i32, i32* %11, align 8, !noalias !97
  br label %155

155:                                              ; preds = %102, %152
  %156 = phi i32 [ %12, %102 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  %157 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #9
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !97
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  tail call void @abort() #11, !noalias !97
  unreachable

161:                                              ; preds = %155
  store i32 5, i32* %158, align 8, !alias.scope !97
  %162 = sub i32 5, %156
  %163 = icmp sgt i32 %162, 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to [5 x i32]*
  br i1 %163, label %166, label %245

166:                                              ; preds = %161
  %167 = zext i32 %162 to i64
  %168 = icmp ult i32 %162, 8
  br i1 %168, label %238, label %169

169:                                              ; preds = %166
  %170 = and i64 %167, 4294967288
  %171 = add nsw i64 %170, -8
  %172 = lshr exact i64 %171, 3
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 7
  %175 = icmp ult i64 %171, 56
  br i1 %175, label %223, label %176

176:                                              ; preds = %169
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %220, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %221, %178 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !97
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !97
  %185 = or i64 %179, 8
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %185
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !97
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !97
  %190 = or i64 %179, 16
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %190
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !97
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !97
  %195 = or i64 %179, 24
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %197, align 8, !alias.scope !97
  %198 = getelementptr inbounds i32, i32* %196, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %199, align 8, !alias.scope !97
  %200 = or i64 %179, 32
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %200
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %202, align 8, !alias.scope !97
  %203 = getelementptr inbounds i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %204, align 8, !alias.scope !97
  %205 = or i64 %179, 40
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %205
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %207, align 8, !alias.scope !97
  %208 = getelementptr inbounds i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %209, align 8, !alias.scope !97
  %210 = or i64 %179, 48
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %210
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %212, align 8, !alias.scope !97
  %213 = getelementptr inbounds i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %214, align 8, !alias.scope !97
  %215 = or i64 %179, 56
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %215
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %217, align 8, !alias.scope !97
  %218 = getelementptr inbounds i32, i32* %216, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %219, align 8, !alias.scope !97
  %220 = add i64 %179, 64
  %221 = add i64 %180, -8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %178, !llvm.loop !100

223:                                              ; preds = %178, %169
  %224 = phi i64 [ 0, %169 ], [ %220, %178 ]
  %225 = icmp eq i64 %174, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %233, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %234, %226 ], [ %174, %223 ]
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %227
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %230, align 8, !alias.scope !97
  %231 = getelementptr inbounds i32, i32* %229, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %232, align 8, !alias.scope !97
  %233 = add i64 %227, 8
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %226, !llvm.loop !101

236:                                              ; preds = %226, %223
  %237 = icmp eq i64 %170, %167
  br i1 %237, label %245, label %238

238:                                              ; preds = %236, %166
  %239 = phi i64 [ 0, %166 ], [ %170, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi i64 [ %243, %240 ], [ %239, %238 ]
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %241
  store i32 1, i32* %242, align 4, !alias.scope !97
  %243 = add nuw nsw i64 %241, 1
  %244 = icmp eq i64 %243, %167
  br i1 %244, label %245, label %240, !llvm.loop !102

245:                                              ; preds = %240, %236, %161
  %246 = getelementptr inbounds %union.anon, %union.anon* %164, i64 0, i32 0
  %247 = bitcast %union.anon* %164 to i32*
  %248 = sext i32 %162 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast i32* %249 to i8*
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = sext i32 %156 to i64
  %254 = shl nsw i64 %253, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %252, i64 %254, i1 false) #9
  %255 = load i32, i32* %158, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = load i32*, i32** %246, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %260 = bitcast i8* %259 to i32*
  %261 = select i1 %256, i32* %258, i32* %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %257, i64 3
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %265 = bitcast i8* %264 to i32*
  %266 = select i1 %256, i32* %263, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = getelementptr inbounds i32, i32* %257, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %256, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %257, i64 1
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 1
  %276 = select i1 %256, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = select i1 %256, i32* %257, i32* %247
  %279 = load i32, i32* %278, align 4
  %280 = xor i1 %256, true
  %281 = icmp eq i32* %257, null
  %282 = or i1 %281, %280
  br i1 %282, label %285, label %283

283:                                              ; preds = %245
  %284 = bitcast i32* %257 to i8*
  tail call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %245, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #9
  %286 = icmp slt i32 %12, 5
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = add nsw i32 %12, -5
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, %13
  %293 = sext i32 %292 to i64
  br label %536

294:                                              ; preds = %285
  %295 = icmp eq i32 %12, 4
  br i1 %295, label %536, label %544

296:                                              ; preds = %583
  %297 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %584
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %587
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %585
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %586
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %277, 0
  %306 = icmp sgt i32 %273, 0
  %307 = icmp sgt i32 %267, 0
  %308 = icmp sgt i32 %262, 0
  %309 = sext i32 %298 to i64
  %310 = sext i32 %300 to i64
  %311 = sext i32 %302 to i64
  %312 = sext i32 %304 to i64
  %313 = zext i32 %279 to i64
  %314 = zext i32 %277 to i64
  %315 = zext i32 %273 to i64
  %316 = zext i32 %267 to i64
  %317 = zext i32 %262 to i64
  %318 = add nsw i64 %317, -1
  %319 = mul i32 %277, %273
  %320 = mul i32 %319, %267
  %321 = mul i32 %320, %262
  %322 = zext i32 %321 to i64
  %323 = mul i32 %267, %262
  %324 = mul i32 %323, %273
  %325 = zext i32 %324 to i64
  %326 = zext i32 %323 to i64
  %327 = mul i32 %277, %273
  %328 = mul i32 %327, %267
  %329 = mul i32 %328, %262
  %330 = zext i32 %329 to i64
  %331 = mul i32 %267, %262
  %332 = mul i32 %331, %273
  %333 = zext i32 %332 to i64
  %334 = zext i32 %331 to i64
  %335 = getelementptr i8, i8* %4, i64 %317
  %336 = and i64 %317, 4294967264
  %337 = add nsw i64 %336, -32
  %338 = lshr exact i64 %337, 5
  %339 = add nuw nsw i64 %338, 1
  %340 = icmp ult i32 %262, 32
  %341 = icmp ne i64 %588, 1
  %342 = trunc i64 %318 to i32
  %343 = icmp ugt i64 %318, 4294967295
  %344 = and i64 %317, 4294967264
  %345 = and i64 %339, 1
  %346 = icmp eq i64 %337, 0
  %347 = sub nuw nsw i64 %339, %345
  %348 = icmp eq i64 %345, 0
  %349 = icmp eq i64 %344, %317
  %350 = and i64 %317, 1
  %351 = icmp eq i64 %350, 0
  %352 = sub nsw i64 0, %317
  br label %353

353:                                              ; preds = %532, %296
  %354 = phi i64 [ 0, %296 ], [ %533, %532 ]
  %355 = mul i64 %354, %312
  %356 = add i64 %355, %317
  %357 = mul i64 %354, %330
  %358 = mul i64 %354, %322
  br i1 %305, label %359, label %532

359:                                              ; preds = %353
  %360 = mul nsw i64 %354, %312
  %361 = trunc i64 %354 to i32
  %362 = mul i32 %277, %361
  br label %363

363:                                              ; preds = %529, %359
  %364 = phi i64 [ 0, %359 ], [ %530, %529 ]
  %365 = mul i64 %364, %311
  %366 = add i64 %355, %365
  %367 = add i64 %356, %365
  %368 = mul i64 %364, %333
  %369 = add i64 %357, %368
  %370 = mul i64 %364, %325
  %371 = add i64 %358, %370
  br i1 %306, label %372, label %529

372:                                              ; preds = %363
  %373 = mul nsw i64 %364, %311
  %374 = add nsw i64 %373, %360
  %375 = trunc i64 %364 to i32
  %376 = add i32 %362, %375
  %377 = mul i32 %376, %273
  br label %378

378:                                              ; preds = %526, %372
  %379 = phi i64 [ 0, %372 ], [ %527, %526 ]
  %380 = mul i64 %379, %310
  %381 = add i64 %366, %380
  %382 = add i64 %367, %380
  %383 = mul i64 %379, %334
  %384 = add i64 %369, %383
  %385 = mul i64 %379, %326
  %386 = add i64 %371, %385
  br i1 %307, label %387, label %526

387:                                              ; preds = %378
  %388 = mul nsw i64 %379, %310
  %389 = add nsw i64 %374, %388
  %390 = trunc i64 %379 to i32
  %391 = add i32 %377, %390
  %392 = mul i32 %268, %391
  br label %393

393:                                              ; preds = %523, %387
  %394 = phi i64 [ 0, %387 ], [ %524, %523 ]
  %395 = mul i64 %394, %309
  %396 = add i64 %381, %395
  %397 = getelementptr i8, i8* %2, i64 %396
  %398 = add i64 %382, %395
  %399 = getelementptr i8, i8* %2, i64 %398
  %400 = mul i64 %394, %317
  %401 = add i64 %384, %400
  %402 = shl i64 %401, 32
  %403 = ashr exact i64 %402, 32
  %404 = getelementptr i8, i8* %4, i64 %403
  %405 = getelementptr i8, i8* %335, i64 %403
  %406 = mul i64 %394, %317
  %407 = add i64 %386, %406
  %408 = trunc i64 %407 to i32
  br i1 %308, label %409, label %523

409:                                              ; preds = %393
  %410 = mul nsw i64 %394, %309
  %411 = add nsw i64 %389, %410
  %412 = trunc i64 %394 to i32
  %413 = mul i32 %262, %412
  br i1 %340, label %483, label %414

414:                                              ; preds = %409
  %415 = add i32 %408, %342
  %416 = icmp slt i32 %415, %408
  %417 = or i1 %416, %343
  %418 = or i1 %341, %417
  br i1 %418, label %483, label %419

419:                                              ; preds = %414
  %420 = icmp ult i8* %397, %405
  %421 = icmp ult i8* %404, %399
  %422 = and i1 %420, %421
  br i1 %422, label %483, label %423

423:                                              ; preds = %419
  br i1 %346, label %463, label %424

424:                                              ; preds = %423, %424
  %425 = phi i64 [ %460, %424 ], [ 0, %423 ]
  %426 = phi i64 [ %461, %424 ], [ %347, %423 ]
  %427 = mul nsw i64 %588, %425
  %428 = add nsw i64 %411, %427
  %429 = getelementptr inbounds i8, i8* %2, i64 %428
  %430 = bitcast i8* %429 to <16 x i8>*
  %431 = load <16 x i8>, <16 x i8>* %430, align 1, !alias.scope !103, !noalias !106
  %432 = getelementptr inbounds i8, i8* %429, i64 16
  %433 = bitcast i8* %432 to <16 x i8>*
  %434 = load <16 x i8>, <16 x i8>* %433, align 1, !alias.scope !103, !noalias !106
  %435 = trunc i64 %425 to i32
  %436 = add i32 %413, %435
  %437 = add i32 %436, %392
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i8, i8* %4, i64 %438
  %440 = bitcast i8* %439 to <16 x i8>*
  store <16 x i8> %431, <16 x i8>* %440, align 1, !alias.scope !106
  %441 = getelementptr inbounds i8, i8* %439, i64 16
  %442 = bitcast i8* %441 to <16 x i8>*
  store <16 x i8> %434, <16 x i8>* %442, align 1, !alias.scope !106
  %443 = or i64 %425, 32
  %444 = mul nsw i64 %588, %443
  %445 = add nsw i64 %411, %444
  %446 = getelementptr inbounds i8, i8* %2, i64 %445
  %447 = bitcast i8* %446 to <16 x i8>*
  %448 = load <16 x i8>, <16 x i8>* %447, align 1, !alias.scope !103, !noalias !106
  %449 = getelementptr inbounds i8, i8* %446, i64 16
  %450 = bitcast i8* %449 to <16 x i8>*
  %451 = load <16 x i8>, <16 x i8>* %450, align 1, !alias.scope !103, !noalias !106
  %452 = trunc i64 %443 to i32
  %453 = add i32 %413, %452
  %454 = add i32 %453, %392
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i8, i8* %4, i64 %455
  %457 = bitcast i8* %456 to <16 x i8>*
  store <16 x i8> %448, <16 x i8>* %457, align 1, !alias.scope !106
  %458 = getelementptr inbounds i8, i8* %456, i64 16
  %459 = bitcast i8* %458 to <16 x i8>*
  store <16 x i8> %451, <16 x i8>* %459, align 1, !alias.scope !106
  %460 = add i64 %425, 64
  %461 = add i64 %426, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %424, !llvm.loop !108

463:                                              ; preds = %424, %423
  %464 = phi i64 [ 0, %423 ], [ %460, %424 ]
  br i1 %348, label %482, label %465

465:                                              ; preds = %463
  %466 = mul nsw i64 %588, %464
  %467 = add nsw i64 %411, %466
  %468 = getelementptr inbounds i8, i8* %2, i64 %467
  %469 = bitcast i8* %468 to <16 x i8>*
  %470 = load <16 x i8>, <16 x i8>* %469, align 1, !alias.scope !103, !noalias !106
  %471 = getelementptr inbounds i8, i8* %468, i64 16
  %472 = bitcast i8* %471 to <16 x i8>*
  %473 = load <16 x i8>, <16 x i8>* %472, align 1, !alias.scope !103, !noalias !106
  %474 = trunc i64 %464 to i32
  %475 = add i32 %413, %474
  %476 = add i32 %475, %392
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i8, i8* %4, i64 %477
  %479 = bitcast i8* %478 to <16 x i8>*
  store <16 x i8> %470, <16 x i8>* %479, align 1, !alias.scope !106
  %480 = getelementptr inbounds i8, i8* %478, i64 16
  %481 = bitcast i8* %480 to <16 x i8>*
  store <16 x i8> %473, <16 x i8>* %481, align 1, !alias.scope !106
  br label %482

482:                                              ; preds = %463, %465
  br i1 %349, label %523, label %483

483:                                              ; preds = %482, %419, %414, %409
  %484 = phi i64 [ 0, %419 ], [ 0, %414 ], [ 0, %409 ], [ %344, %482 ]
  %485 = xor i64 %484, -1
  br i1 %351, label %497, label %486

486:                                              ; preds = %483
  %487 = mul nsw i64 %588, %484
  %488 = add nsw i64 %411, %487
  %489 = getelementptr inbounds i8, i8* %2, i64 %488
  %490 = load i8, i8* %489, align 1
  %491 = trunc i64 %484 to i32
  %492 = add i32 %413, %491
  %493 = add i32 %492, %392
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i8, i8* %4, i64 %494
  store i8 %490, i8* %495, align 1
  %496 = or i64 %484, 1
  br label %497

497:                                              ; preds = %486, %483
  %498 = phi i64 [ %496, %486 ], [ %484, %483 ]
  %499 = icmp eq i64 %485, %352
  br i1 %499, label %523, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %521, %500 ], [ %498, %497 ]
  %502 = mul nsw i64 %588, %501
  %503 = add nsw i64 %411, %502
  %504 = getelementptr inbounds i8, i8* %2, i64 %503
  %505 = load i8, i8* %504, align 1
  %506 = trunc i64 %501 to i32
  %507 = add i32 %413, %506
  %508 = add i32 %507, %392
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i8, i8* %4, i64 %509
  store i8 %505, i8* %510, align 1
  %511 = add nuw nsw i64 %501, 1
  %512 = mul nsw i64 %588, %511
  %513 = add nsw i64 %411, %512
  %514 = getelementptr inbounds i8, i8* %2, i64 %513
  %515 = load i8, i8* %514, align 1
  %516 = trunc i64 %511 to i32
  %517 = add i32 %413, %516
  %518 = add i32 %517, %392
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i8, i8* %4, i64 %519
  store i8 %515, i8* %520, align 1
  %521 = add nuw nsw i64 %501, 2
  %522 = icmp eq i64 %521, %317
  br i1 %522, label %523, label %500, !llvm.loop !109

523:                                              ; preds = %497, %500, %482, %393
  %524 = add nuw nsw i64 %394, 1
  %525 = icmp eq i64 %524, %316
  br i1 %525, label %526, label %393

526:                                              ; preds = %523, %378
  %527 = add nuw nsw i64 %379, 1
  %528 = icmp eq i64 %527, %315
  br i1 %528, label %529, label %378

529:                                              ; preds = %526, %363
  %530 = add nuw nsw i64 %364, 1
  %531 = icmp eq i64 %530, %314
  br i1 %531, label %532, label %363

532:                                              ; preds = %529, %353
  %533 = add nuw nsw i64 %354, 1
  %534 = icmp eq i64 %533, %313
  br i1 %534, label %535, label %353

535:                                              ; preds = %532, %583
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  ret void

536:                                              ; preds = %294, %287
  %537 = phi i64 [ %293, %287 ], [ 0, %294 ]
  %538 = add nsw i32 %12, -4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add nsw i32 %541, %13
  %543 = sext i32 %542 to i64
  br label %546

544:                                              ; preds = %294
  %545 = icmp slt i32 %12, 3
  br i1 %545, label %555, label %546

546:                                              ; preds = %544, %536
  %547 = phi i64 [ %543, %536 ], [ 1, %544 ]
  %548 = phi i64 [ %537, %536 ], [ 0, %544 ]
  %549 = add nsw i32 %12, -3
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = add nsw i32 %552, %13
  %554 = sext i32 %553 to i64
  br label %557

555:                                              ; preds = %544
  %556 = icmp eq i32 %12, 2
  br i1 %556, label %557, label %567

557:                                              ; preds = %555, %546
  %558 = phi i64 [ %554, %546 ], [ 2, %555 ]
  %559 = phi i64 [ %548, %546 ], [ 0, %555 ]
  %560 = phi i64 [ %547, %546 ], [ 1, %555 ]
  %561 = add nsw i32 %12, -2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = add nsw i32 %564, %13
  %566 = sext i32 %565 to i64
  br label %569

567:                                              ; preds = %555
  %568 = icmp slt i32 %12, 1
  br i1 %568, label %583, label %569

569:                                              ; preds = %557, %567
  %570 = phi i64 [ %566, %557 ], [ 3, %567 ]
  %571 = phi i64 [ %560, %557 ], [ 1, %567 ]
  %572 = phi i64 [ %559, %557 ], [ 0, %567 ]
  %573 = phi i64 [ %558, %557 ], [ 2, %567 ]
  %574 = add nsw i32 %12, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, %13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  br label %583

583:                                              ; preds = %567, %569
  %584 = phi i64 [ %570, %569 ], [ 3, %567 ]
  %585 = phi i64 [ %571, %569 ], [ 1, %567 ]
  %586 = phi i64 [ %572, %569 ], [ 0, %567 ]
  %587 = phi i64 [ %573, %569 ], [ 2, %567 ]
  %588 = phi i64 [ %582, %569 ], [ 1, %567 ]
  %589 = icmp sgt i32 %279, 0
  br i1 %589, label %296, label %535
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13reference_ops13TransposeImplIlLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i64*, %"class.tflite::RuntimeShape"* dereferenceable(32), i64*) local_unnamed_addr #0 comdat {
  %6 = alloca %"struct.tflite::NdArrayDesc", align 4
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %10 = load i32, i32* %9, align 8
  %11 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 8
  %13 = sub i32 5, %10
  %14 = bitcast %"struct.tflite::NdArrayDesc"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 40, i8* nonnull %14) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %14, i8 -86, i64 40, i1 false)
  %15 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 0, i32* %16, align 8, !alias.scope !110
  %17 = icmp sgt i32 %10, 5
  br i1 %17, label %18, label %19

18:                                               ; preds = %5
  tail call void @abort() #11, !noalias !110
  unreachable

19:                                               ; preds = %5
  store i32 5, i32* %16, align 8, !alias.scope !110
  %20 = icmp sgt i32 %13, 0
  %21 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %22 = bitcast %union.anon* %21 to [5 x i32]*
  br i1 %20, label %23, label %102

23:                                               ; preds = %19
  %24 = zext i32 %13 to i64
  %25 = icmp ult i32 %13, 8
  br i1 %25, label %95, label %26

26:                                               ; preds = %23
  %27 = and i64 %24, 4294967288
  %28 = add nsw i64 %27, -8
  %29 = lshr exact i64 %28, 3
  %30 = add nuw nsw i64 %29, 1
  %31 = and i64 %30, 7
  %32 = icmp ult i64 %28, 56
  br i1 %32, label %80, label %33

33:                                               ; preds = %26
  %34 = sub nsw i64 %30, %31
  br label %35

35:                                               ; preds = %35, %33
  %36 = phi i64 [ 0, %33 ], [ %77, %35 ]
  %37 = phi i64 [ %34, %33 ], [ %78, %35 ]
  %38 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %36
  %39 = bitcast i32* %38 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %39, align 8, !alias.scope !110
  %40 = getelementptr inbounds i32, i32* %38, i64 4
  %41 = bitcast i32* %40 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %41, align 8, !alias.scope !110
  %42 = or i64 %36, 8
  %43 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %42
  %44 = bitcast i32* %43 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %44, align 8, !alias.scope !110
  %45 = getelementptr inbounds i32, i32* %43, i64 4
  %46 = bitcast i32* %45 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %46, align 8, !alias.scope !110
  %47 = or i64 %36, 16
  %48 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %47
  %49 = bitcast i32* %48 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %49, align 8, !alias.scope !110
  %50 = getelementptr inbounds i32, i32* %48, i64 4
  %51 = bitcast i32* %50 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %51, align 8, !alias.scope !110
  %52 = or i64 %36, 24
  %53 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %52
  %54 = bitcast i32* %53 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %54, align 8, !alias.scope !110
  %55 = getelementptr inbounds i32, i32* %53, i64 4
  %56 = bitcast i32* %55 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %56, align 8, !alias.scope !110
  %57 = or i64 %36, 32
  %58 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %57
  %59 = bitcast i32* %58 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %59, align 8, !alias.scope !110
  %60 = getelementptr inbounds i32, i32* %58, i64 4
  %61 = bitcast i32* %60 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %61, align 8, !alias.scope !110
  %62 = or i64 %36, 40
  %63 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %62
  %64 = bitcast i32* %63 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %64, align 8, !alias.scope !110
  %65 = getelementptr inbounds i32, i32* %63, i64 4
  %66 = bitcast i32* %65 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %66, align 8, !alias.scope !110
  %67 = or i64 %36, 48
  %68 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %67
  %69 = bitcast i32* %68 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %69, align 8, !alias.scope !110
  %70 = getelementptr inbounds i32, i32* %68, i64 4
  %71 = bitcast i32* %70 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %71, align 8, !alias.scope !110
  %72 = or i64 %36, 56
  %73 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %72
  %74 = bitcast i32* %73 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %74, align 8, !alias.scope !110
  %75 = getelementptr inbounds i32, i32* %73, i64 4
  %76 = bitcast i32* %75 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %76, align 8, !alias.scope !110
  %77 = add i64 %36, 64
  %78 = add i64 %37, -8
  %79 = icmp eq i64 %78, 0
  br i1 %79, label %80, label %35, !llvm.loop !113

80:                                               ; preds = %35, %26
  %81 = phi i64 [ 0, %26 ], [ %77, %35 ]
  %82 = icmp eq i64 %31, 0
  br i1 %82, label %93, label %83

83:                                               ; preds = %80, %83
  %84 = phi i64 [ %90, %83 ], [ %81, %80 ]
  %85 = phi i64 [ %91, %83 ], [ %31, %80 ]
  %86 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %84
  %87 = bitcast i32* %86 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %87, align 8, !alias.scope !110
  %88 = getelementptr inbounds i32, i32* %86, i64 4
  %89 = bitcast i32* %88 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %89, align 8, !alias.scope !110
  %90 = add i64 %84, 8
  %91 = add i64 %85, -1
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %83, !llvm.loop !114

93:                                               ; preds = %83, %80
  %94 = icmp eq i64 %27, %24
  br i1 %94, label %102, label %95

95:                                               ; preds = %93, %23
  %96 = phi i64 [ 0, %23 ], [ %27, %93 ]
  br label %97

97:                                               ; preds = %95, %97
  %98 = phi i64 [ %100, %97 ], [ %96, %95 ]
  %99 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 %98
  store i32 1, i32* %99, align 4, !alias.scope !110
  %100 = add nuw nsw i64 %98, 1
  %101 = icmp eq i64 %100, %24
  br i1 %101, label %102, label %97, !llvm.loop !115

102:                                              ; preds = %97, %93, %19
  %103 = getelementptr inbounds %union.anon, %union.anon* %21, i64 0, i32 0
  %104 = bitcast %union.anon* %21 to i32*
  %105 = sext i32 %13 to i64
  %106 = getelementptr inbounds i32, i32* %104, i64 %105
  %107 = bitcast i32* %106 to i8*
  %108 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %109 = bitcast %union.anon* %108 to i8*
  %110 = sext i32 %10 to i64
  %111 = shl nsw i64 %110, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %107, i8* align 4 %109, i64 %111, i1 false) #9
  %112 = load i32, i32* %16, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = load i32*, i32** %103, align 8
  %115 = getelementptr inbounds i32, i32* %114, i64 4
  %116 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 8
  %117 = bitcast i8* %116 to i32*
  %118 = select i1 %113, i32* %115, i32* %117
  %119 = load i32, i32* %118, align 4
  %120 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 4
  store i32 %119, i32* %120, align 4
  %121 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 4
  store i32 1, i32* %121, align 4
  %122 = getelementptr inbounds i32, i32* %114, i64 3
  %123 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1, i64 4
  %124 = bitcast i8* %123 to i32*
  %125 = select i1 %113, i32* %122, i32* %124
  %126 = load i32, i32* %125, align 4
  %127 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 3
  store i32 %126, i32* %127, align 4
  %128 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 3
  store i32 %119, i32* %128, align 4
  %129 = mul nsw i32 %126, %119
  %130 = getelementptr inbounds i32, i32* %114, i64 2
  %131 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 1
  %132 = bitcast [16 x i8]* %131 to i32*
  %133 = select i1 %113, i32* %130, i32* %132
  %134 = load i32, i32* %133, align 4
  %135 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 2
  store i32 %134, i32* %135, align 4
  %136 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 2
  store i32 %129, i32* %136, align 4
  %137 = mul nsw i32 %134, %129
  %138 = getelementptr inbounds i32, i32* %114, i64 1
  %139 = getelementptr inbounds [5 x i32], [5 x i32]* %22, i64 0, i64 1
  %140 = select i1 %113, i32* %138, i32* %139
  %141 = load i32, i32* %140, align 4
  %142 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 1
  store i32 %141, i32* %142, align 4
  %143 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 1
  store i32 %137, i32* %143, align 4
  %144 = mul nsw i32 %141, %137
  %145 = select i1 %113, i32* %114, i32* %104
  %146 = load i32, i32* %145, align 4
  %147 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 0, i64 0
  store i32 %146, i32* %147, align 4
  %148 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 0
  store i32 %144, i32* %148, align 4
  %149 = xor i1 %113, true
  %150 = icmp eq i32* %114, null
  %151 = or i1 %150, %149
  br i1 %151, label %155, label %152

152:                                              ; preds = %102
  %153 = bitcast i32* %114 to i8*
  tail call void @_ZdaPv(i8* %153) #10
  %154 = load i32, i32* %11, align 8, !noalias !116
  br label %155

155:                                              ; preds = %102, %152
  %156 = phi i32 [ %12, %102 ], [ %154, %152 ]
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  %157 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %157) #9
  %158 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 0, i32* %158, align 8, !alias.scope !116
  %159 = icmp sgt i32 %156, 5
  br i1 %159, label %160, label %161

160:                                              ; preds = %155
  tail call void @abort() #11, !noalias !116
  unreachable

161:                                              ; preds = %155
  store i32 5, i32* %158, align 8, !alias.scope !116
  %162 = sub i32 5, %156
  %163 = icmp sgt i32 %162, 0
  %164 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %165 = bitcast %union.anon* %164 to [5 x i32]*
  br i1 %163, label %166, label %245

166:                                              ; preds = %161
  %167 = zext i32 %162 to i64
  %168 = icmp ult i32 %162, 8
  br i1 %168, label %238, label %169

169:                                              ; preds = %166
  %170 = and i64 %167, 4294967288
  %171 = add nsw i64 %170, -8
  %172 = lshr exact i64 %171, 3
  %173 = add nuw nsw i64 %172, 1
  %174 = and i64 %173, 7
  %175 = icmp ult i64 %171, 56
  br i1 %175, label %223, label %176

176:                                              ; preds = %169
  %177 = sub nsw i64 %173, %174
  br label %178

178:                                              ; preds = %178, %176
  %179 = phi i64 [ 0, %176 ], [ %220, %178 ]
  %180 = phi i64 [ %177, %176 ], [ %221, %178 ]
  %181 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %179
  %182 = bitcast i32* %181 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %182, align 8, !alias.scope !116
  %183 = getelementptr inbounds i32, i32* %181, i64 4
  %184 = bitcast i32* %183 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %184, align 8, !alias.scope !116
  %185 = or i64 %179, 8
  %186 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %185
  %187 = bitcast i32* %186 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %187, align 8, !alias.scope !116
  %188 = getelementptr inbounds i32, i32* %186, i64 4
  %189 = bitcast i32* %188 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %189, align 8, !alias.scope !116
  %190 = or i64 %179, 16
  %191 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %190
  %192 = bitcast i32* %191 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %192, align 8, !alias.scope !116
  %193 = getelementptr inbounds i32, i32* %191, i64 4
  %194 = bitcast i32* %193 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %194, align 8, !alias.scope !116
  %195 = or i64 %179, 24
  %196 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %195
  %197 = bitcast i32* %196 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %197, align 8, !alias.scope !116
  %198 = getelementptr inbounds i32, i32* %196, i64 4
  %199 = bitcast i32* %198 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %199, align 8, !alias.scope !116
  %200 = or i64 %179, 32
  %201 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %200
  %202 = bitcast i32* %201 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %202, align 8, !alias.scope !116
  %203 = getelementptr inbounds i32, i32* %201, i64 4
  %204 = bitcast i32* %203 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %204, align 8, !alias.scope !116
  %205 = or i64 %179, 40
  %206 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %205
  %207 = bitcast i32* %206 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %207, align 8, !alias.scope !116
  %208 = getelementptr inbounds i32, i32* %206, i64 4
  %209 = bitcast i32* %208 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %209, align 8, !alias.scope !116
  %210 = or i64 %179, 48
  %211 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %210
  %212 = bitcast i32* %211 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %212, align 8, !alias.scope !116
  %213 = getelementptr inbounds i32, i32* %211, i64 4
  %214 = bitcast i32* %213 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %214, align 8, !alias.scope !116
  %215 = or i64 %179, 56
  %216 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %215
  %217 = bitcast i32* %216 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %217, align 8, !alias.scope !116
  %218 = getelementptr inbounds i32, i32* %216, i64 4
  %219 = bitcast i32* %218 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %219, align 8, !alias.scope !116
  %220 = add i64 %179, 64
  %221 = add i64 %180, -8
  %222 = icmp eq i64 %221, 0
  br i1 %222, label %223, label %178, !llvm.loop !119

223:                                              ; preds = %178, %169
  %224 = phi i64 [ 0, %169 ], [ %220, %178 ]
  %225 = icmp eq i64 %174, 0
  br i1 %225, label %236, label %226

226:                                              ; preds = %223, %226
  %227 = phi i64 [ %233, %226 ], [ %224, %223 ]
  %228 = phi i64 [ %234, %226 ], [ %174, %223 ]
  %229 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %227
  %230 = bitcast i32* %229 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %230, align 8, !alias.scope !116
  %231 = getelementptr inbounds i32, i32* %229, i64 4
  %232 = bitcast i32* %231 to <4 x i32>*
  store <4 x i32> <i32 1, i32 1, i32 1, i32 1>, <4 x i32>* %232, align 8, !alias.scope !116
  %233 = add i64 %227, 8
  %234 = add i64 %228, -1
  %235 = icmp eq i64 %234, 0
  br i1 %235, label %236, label %226, !llvm.loop !120

236:                                              ; preds = %226, %223
  %237 = icmp eq i64 %170, %167
  br i1 %237, label %245, label %238

238:                                              ; preds = %236, %166
  %239 = phi i64 [ 0, %166 ], [ %170, %236 ]
  br label %240

240:                                              ; preds = %238, %240
  %241 = phi i64 [ %243, %240 ], [ %239, %238 ]
  %242 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 %241
  store i32 1, i32* %242, align 4, !alias.scope !116
  %243 = add nuw nsw i64 %241, 1
  %244 = icmp eq i64 %243, %167
  br i1 %244, label %245, label %240, !llvm.loop !121

245:                                              ; preds = %240, %236, %161
  %246 = getelementptr inbounds %union.anon, %union.anon* %164, i64 0, i32 0
  %247 = bitcast %union.anon* %164 to i32*
  %248 = sext i32 %162 to i64
  %249 = getelementptr inbounds i32, i32* %247, i64 %248
  %250 = bitcast i32* %249 to i8*
  %251 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %252 = bitcast %union.anon* %251 to i8*
  %253 = sext i32 %156 to i64
  %254 = shl nsw i64 %253, 2
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %250, i8* align 4 %252, i64 %254, i1 false) #9
  %255 = load i32, i32* %158, align 8
  %256 = icmp sgt i32 %255, 5
  %257 = load i32*, i32** %246, align 8
  %258 = getelementptr inbounds i32, i32* %257, i64 4
  %259 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 8
  %260 = bitcast i8* %259 to i32*
  %261 = select i1 %256, i32* %258, i32* %260
  %262 = load i32, i32* %261, align 4
  %263 = getelementptr inbounds i32, i32* %257, i64 3
  %264 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1, i64 4
  %265 = bitcast i8* %264 to i32*
  %266 = select i1 %256, i32* %263, i32* %265
  %267 = load i32, i32* %266, align 4
  %268 = mul nsw i32 %267, %262
  %269 = getelementptr inbounds i32, i32* %257, i64 2
  %270 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 1
  %271 = bitcast [16 x i8]* %270 to i32*
  %272 = select i1 %256, i32* %269, i32* %271
  %273 = load i32, i32* %272, align 4
  %274 = getelementptr inbounds i32, i32* %257, i64 1
  %275 = getelementptr inbounds [5 x i32], [5 x i32]* %165, i64 0, i64 1
  %276 = select i1 %256, i32* %274, i32* %275
  %277 = load i32, i32* %276, align 4
  %278 = select i1 %256, i32* %257, i32* %247
  %279 = load i32, i32* %278, align 4
  %280 = xor i1 %256, true
  %281 = icmp eq i32* %257, null
  %282 = or i1 %281, %280
  br i1 %282, label %285, label %283

283:                                              ; preds = %245
  %284 = bitcast i32* %257 to i8*
  tail call void @_ZdaPv(i8* %284) #10
  br label %285

285:                                              ; preds = %245, %283
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %157) #9
  %286 = icmp slt i32 %12, 5
  br i1 %286, label %294, label %287

287:                                              ; preds = %285
  %288 = add nsw i32 %12, -5
  %289 = sext i32 %288 to i64
  %290 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %289
  %291 = load i32, i32* %290, align 4
  %292 = add nsw i32 %291, %13
  %293 = sext i32 %292 to i64
  br label %536

294:                                              ; preds = %285
  %295 = icmp eq i32 %12, 4
  br i1 %295, label %536, label %544

296:                                              ; preds = %583
  %297 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %584
  %298 = load i32, i32* %297, align 4
  %299 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %587
  %300 = load i32, i32* %299, align 4
  %301 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %585
  %302 = load i32, i32* %301, align 4
  %303 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %586
  %304 = load i32, i32* %303, align 4
  %305 = icmp sgt i32 %277, 0
  %306 = icmp sgt i32 %273, 0
  %307 = icmp sgt i32 %267, 0
  %308 = icmp sgt i32 %262, 0
  %309 = sext i32 %298 to i64
  %310 = sext i32 %300 to i64
  %311 = sext i32 %302 to i64
  %312 = sext i32 %304 to i64
  %313 = zext i32 %279 to i64
  %314 = zext i32 %277 to i64
  %315 = zext i32 %273 to i64
  %316 = zext i32 %267 to i64
  %317 = zext i32 %262 to i64
  %318 = add nsw i64 %317, -1
  %319 = mul i32 %277, %273
  %320 = mul i32 %319, %267
  %321 = mul i32 %320, %262
  %322 = zext i32 %321 to i64
  %323 = mul i32 %267, %262
  %324 = mul i32 %323, %273
  %325 = zext i32 %324 to i64
  %326 = zext i32 %323 to i64
  %327 = mul i32 %277, %273
  %328 = mul i32 %327, %267
  %329 = mul i32 %328, %262
  %330 = zext i32 %329 to i64
  %331 = mul i32 %267, %262
  %332 = mul i32 %331, %273
  %333 = zext i32 %332 to i64
  %334 = zext i32 %331 to i64
  %335 = getelementptr i64, i64* %4, i64 %317
  %336 = and i64 %317, 4294967292
  %337 = add nsw i64 %336, -4
  %338 = lshr exact i64 %337, 2
  %339 = add nuw nsw i64 %338, 1
  %340 = icmp ult i32 %262, 4
  %341 = icmp ne i64 %588, 1
  %342 = trunc i64 %318 to i32
  %343 = icmp ugt i64 %318, 4294967295
  %344 = and i64 %317, 4294967292
  %345 = and i64 %339, 1
  %346 = icmp eq i64 %337, 0
  %347 = sub nuw nsw i64 %339, %345
  %348 = icmp eq i64 %345, 0
  %349 = icmp eq i64 %344, %317
  %350 = and i64 %317, 1
  %351 = icmp eq i64 %350, 0
  %352 = sub nsw i64 0, %317
  br label %353

353:                                              ; preds = %532, %296
  %354 = phi i64 [ 0, %296 ], [ %533, %532 ]
  %355 = mul i64 %354, %312
  %356 = add i64 %355, %317
  %357 = mul i64 %354, %330
  %358 = mul i64 %354, %322
  br i1 %305, label %359, label %532

359:                                              ; preds = %353
  %360 = mul nsw i64 %354, %312
  %361 = trunc i64 %354 to i32
  %362 = mul i32 %277, %361
  br label %363

363:                                              ; preds = %529, %359
  %364 = phi i64 [ 0, %359 ], [ %530, %529 ]
  %365 = mul i64 %364, %311
  %366 = add i64 %355, %365
  %367 = add i64 %356, %365
  %368 = mul i64 %364, %333
  %369 = add i64 %357, %368
  %370 = mul i64 %364, %325
  %371 = add i64 %358, %370
  br i1 %306, label %372, label %529

372:                                              ; preds = %363
  %373 = mul nsw i64 %364, %311
  %374 = add nsw i64 %373, %360
  %375 = trunc i64 %364 to i32
  %376 = add i32 %362, %375
  %377 = mul i32 %376, %273
  br label %378

378:                                              ; preds = %526, %372
  %379 = phi i64 [ 0, %372 ], [ %527, %526 ]
  %380 = mul i64 %379, %310
  %381 = add i64 %366, %380
  %382 = add i64 %367, %380
  %383 = mul i64 %379, %334
  %384 = add i64 %369, %383
  %385 = mul i64 %379, %326
  %386 = add i64 %371, %385
  br i1 %307, label %387, label %526

387:                                              ; preds = %378
  %388 = mul nsw i64 %379, %310
  %389 = add nsw i64 %374, %388
  %390 = trunc i64 %379 to i32
  %391 = add i32 %377, %390
  %392 = mul i32 %268, %391
  br label %393

393:                                              ; preds = %523, %387
  %394 = phi i64 [ 0, %387 ], [ %524, %523 ]
  %395 = mul i64 %394, %309
  %396 = add i64 %381, %395
  %397 = getelementptr i64, i64* %2, i64 %396
  %398 = add i64 %382, %395
  %399 = getelementptr i64, i64* %2, i64 %398
  %400 = mul i64 %394, %317
  %401 = add i64 %384, %400
  %402 = shl i64 %401, 32
  %403 = ashr exact i64 %402, 32
  %404 = getelementptr i64, i64* %4, i64 %403
  %405 = getelementptr i64, i64* %335, i64 %403
  %406 = mul i64 %394, %317
  %407 = add i64 %386, %406
  %408 = trunc i64 %407 to i32
  br i1 %308, label %409, label %523

409:                                              ; preds = %393
  %410 = mul nsw i64 %394, %309
  %411 = add nsw i64 %389, %410
  %412 = trunc i64 %394 to i32
  %413 = mul i32 %262, %412
  br i1 %340, label %483, label %414

414:                                              ; preds = %409
  %415 = add i32 %408, %342
  %416 = icmp slt i32 %415, %408
  %417 = or i1 %416, %343
  %418 = or i1 %341, %417
  br i1 %418, label %483, label %419

419:                                              ; preds = %414
  %420 = icmp ult i64* %397, %405
  %421 = icmp ult i64* %404, %399
  %422 = and i1 %420, %421
  br i1 %422, label %483, label %423

423:                                              ; preds = %419
  br i1 %346, label %463, label %424

424:                                              ; preds = %423, %424
  %425 = phi i64 [ %460, %424 ], [ 0, %423 ]
  %426 = phi i64 [ %461, %424 ], [ %347, %423 ]
  %427 = mul nsw i64 %588, %425
  %428 = add nsw i64 %411, %427
  %429 = getelementptr inbounds i64, i64* %2, i64 %428
  %430 = bitcast i64* %429 to <2 x i64>*
  %431 = load <2 x i64>, <2 x i64>* %430, align 8, !alias.scope !122, !noalias !125
  %432 = getelementptr inbounds i64, i64* %429, i64 2
  %433 = bitcast i64* %432 to <2 x i64>*
  %434 = load <2 x i64>, <2 x i64>* %433, align 8, !alias.scope !122, !noalias !125
  %435 = trunc i64 %425 to i32
  %436 = add i32 %413, %435
  %437 = add i32 %436, %392
  %438 = sext i32 %437 to i64
  %439 = getelementptr inbounds i64, i64* %4, i64 %438
  %440 = bitcast i64* %439 to <2 x i64>*
  store <2 x i64> %431, <2 x i64>* %440, align 8, !alias.scope !125
  %441 = getelementptr inbounds i64, i64* %439, i64 2
  %442 = bitcast i64* %441 to <2 x i64>*
  store <2 x i64> %434, <2 x i64>* %442, align 8, !alias.scope !125
  %443 = or i64 %425, 4
  %444 = mul nsw i64 %588, %443
  %445 = add nsw i64 %411, %444
  %446 = getelementptr inbounds i64, i64* %2, i64 %445
  %447 = bitcast i64* %446 to <2 x i64>*
  %448 = load <2 x i64>, <2 x i64>* %447, align 8, !alias.scope !122, !noalias !125
  %449 = getelementptr inbounds i64, i64* %446, i64 2
  %450 = bitcast i64* %449 to <2 x i64>*
  %451 = load <2 x i64>, <2 x i64>* %450, align 8, !alias.scope !122, !noalias !125
  %452 = trunc i64 %443 to i32
  %453 = add i32 %413, %452
  %454 = add i32 %453, %392
  %455 = sext i32 %454 to i64
  %456 = getelementptr inbounds i64, i64* %4, i64 %455
  %457 = bitcast i64* %456 to <2 x i64>*
  store <2 x i64> %448, <2 x i64>* %457, align 8, !alias.scope !125
  %458 = getelementptr inbounds i64, i64* %456, i64 2
  %459 = bitcast i64* %458 to <2 x i64>*
  store <2 x i64> %451, <2 x i64>* %459, align 8, !alias.scope !125
  %460 = add i64 %425, 8
  %461 = add i64 %426, -2
  %462 = icmp eq i64 %461, 0
  br i1 %462, label %463, label %424, !llvm.loop !127

463:                                              ; preds = %424, %423
  %464 = phi i64 [ 0, %423 ], [ %460, %424 ]
  br i1 %348, label %482, label %465

465:                                              ; preds = %463
  %466 = mul nsw i64 %588, %464
  %467 = add nsw i64 %411, %466
  %468 = getelementptr inbounds i64, i64* %2, i64 %467
  %469 = bitcast i64* %468 to <2 x i64>*
  %470 = load <2 x i64>, <2 x i64>* %469, align 8, !alias.scope !122, !noalias !125
  %471 = getelementptr inbounds i64, i64* %468, i64 2
  %472 = bitcast i64* %471 to <2 x i64>*
  %473 = load <2 x i64>, <2 x i64>* %472, align 8, !alias.scope !122, !noalias !125
  %474 = trunc i64 %464 to i32
  %475 = add i32 %413, %474
  %476 = add i32 %475, %392
  %477 = sext i32 %476 to i64
  %478 = getelementptr inbounds i64, i64* %4, i64 %477
  %479 = bitcast i64* %478 to <2 x i64>*
  store <2 x i64> %470, <2 x i64>* %479, align 8, !alias.scope !125
  %480 = getelementptr inbounds i64, i64* %478, i64 2
  %481 = bitcast i64* %480 to <2 x i64>*
  store <2 x i64> %473, <2 x i64>* %481, align 8, !alias.scope !125
  br label %482

482:                                              ; preds = %463, %465
  br i1 %349, label %523, label %483

483:                                              ; preds = %482, %419, %414, %409
  %484 = phi i64 [ 0, %419 ], [ 0, %414 ], [ 0, %409 ], [ %344, %482 ]
  %485 = xor i64 %484, -1
  br i1 %351, label %497, label %486

486:                                              ; preds = %483
  %487 = mul nsw i64 %588, %484
  %488 = add nsw i64 %411, %487
  %489 = getelementptr inbounds i64, i64* %2, i64 %488
  %490 = load i64, i64* %489, align 8
  %491 = trunc i64 %484 to i32
  %492 = add i32 %413, %491
  %493 = add i32 %492, %392
  %494 = sext i32 %493 to i64
  %495 = getelementptr inbounds i64, i64* %4, i64 %494
  store i64 %490, i64* %495, align 8
  %496 = or i64 %484, 1
  br label %497

497:                                              ; preds = %486, %483
  %498 = phi i64 [ %496, %486 ], [ %484, %483 ]
  %499 = icmp eq i64 %485, %352
  br i1 %499, label %523, label %500

500:                                              ; preds = %497, %500
  %501 = phi i64 [ %521, %500 ], [ %498, %497 ]
  %502 = mul nsw i64 %588, %501
  %503 = add nsw i64 %411, %502
  %504 = getelementptr inbounds i64, i64* %2, i64 %503
  %505 = load i64, i64* %504, align 8
  %506 = trunc i64 %501 to i32
  %507 = add i32 %413, %506
  %508 = add i32 %507, %392
  %509 = sext i32 %508 to i64
  %510 = getelementptr inbounds i64, i64* %4, i64 %509
  store i64 %505, i64* %510, align 8
  %511 = add nuw nsw i64 %501, 1
  %512 = mul nsw i64 %588, %511
  %513 = add nsw i64 %411, %512
  %514 = getelementptr inbounds i64, i64* %2, i64 %513
  %515 = load i64, i64* %514, align 8
  %516 = trunc i64 %511 to i32
  %517 = add i32 %413, %516
  %518 = add i32 %517, %392
  %519 = sext i32 %518 to i64
  %520 = getelementptr inbounds i64, i64* %4, i64 %519
  store i64 %515, i64* %520, align 8
  %521 = add nuw nsw i64 %501, 2
  %522 = icmp eq i64 %521, %317
  br i1 %522, label %523, label %500, !llvm.loop !128

523:                                              ; preds = %497, %500, %482, %393
  %524 = add nuw nsw i64 %394, 1
  %525 = icmp eq i64 %524, %316
  br i1 %525, label %526, label %393

526:                                              ; preds = %523, %378
  %527 = add nuw nsw i64 %379, 1
  %528 = icmp eq i64 %527, %315
  br i1 %528, label %529, label %378

529:                                              ; preds = %526, %363
  %530 = add nuw nsw i64 %364, 1
  %531 = icmp eq i64 %530, %314
  br i1 %531, label %532, label %363

532:                                              ; preds = %529, %353
  %533 = add nuw nsw i64 %354, 1
  %534 = icmp eq i64 %533, %313
  br i1 %534, label %535, label %353

535:                                              ; preds = %532, %583
  call void @llvm.lifetime.end.p0i8(i64 40, i8* nonnull %14) #9
  ret void

536:                                              ; preds = %294, %287
  %537 = phi i64 [ %293, %287 ], [ 0, %294 ]
  %538 = add nsw i32 %12, -4
  %539 = sext i32 %538 to i64
  %540 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %539
  %541 = load i32, i32* %540, align 4
  %542 = add nsw i32 %541, %13
  %543 = sext i32 %542 to i64
  br label %546

544:                                              ; preds = %294
  %545 = icmp slt i32 %12, 3
  br i1 %545, label %555, label %546

546:                                              ; preds = %544, %536
  %547 = phi i64 [ %543, %536 ], [ 1, %544 ]
  %548 = phi i64 [ %537, %536 ], [ 0, %544 ]
  %549 = add nsw i32 %12, -3
  %550 = sext i32 %549 to i64
  %551 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %550
  %552 = load i32, i32* %551, align 4
  %553 = add nsw i32 %552, %13
  %554 = sext i32 %553 to i64
  br label %557

555:                                              ; preds = %544
  %556 = icmp eq i32 %12, 2
  br i1 %556, label %557, label %567

557:                                              ; preds = %555, %546
  %558 = phi i64 [ %554, %546 ], [ 2, %555 ]
  %559 = phi i64 [ %548, %546 ], [ 0, %555 ]
  %560 = phi i64 [ %547, %546 ], [ 1, %555 ]
  %561 = add nsw i32 %12, -2
  %562 = sext i32 %561 to i64
  %563 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %562
  %564 = load i32, i32* %563, align 4
  %565 = add nsw i32 %564, %13
  %566 = sext i32 %565 to i64
  br label %569

567:                                              ; preds = %555
  %568 = icmp slt i32 %12, 1
  br i1 %568, label %583, label %569

569:                                              ; preds = %557, %567
  %570 = phi i64 [ %566, %557 ], [ 3, %567 ]
  %571 = phi i64 [ %560, %557 ], [ 1, %567 ]
  %572 = phi i64 [ %559, %557 ], [ 0, %567 ]
  %573 = phi i64 [ %558, %557 ], [ 2, %567 ]
  %574 = add nsw i32 %12, -1
  %575 = sext i32 %574 to i64
  %576 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 %575
  %577 = load i32, i32* %576, align 4
  %578 = add nsw i32 %577, %13
  %579 = sext i32 %578 to i64
  %580 = getelementptr inbounds %"struct.tflite::NdArrayDesc", %"struct.tflite::NdArrayDesc"* %6, i64 0, i32 1, i64 %579
  %581 = load i32, i32* %580, align 4
  %582 = sext i32 %581 to i64
  br label %583

583:                                              ; preds = %567, %569
  %584 = phi i64 [ %570, %569 ], [ 3, %567 ]
  %585 = phi i64 [ %571, %569 ], [ 1, %567 ]
  %586 = phi i64 [ %572, %569 ], [ 0, %567 ]
  %587 = phi i64 [ %573, %569 ], [ 2, %567 ]
  %588 = phi i64 [ %582, %569 ], [ 1, %567 ]
  %589 = icmp sgt i32 %279, 0
  br i1 %589, label %296, label %535
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops9TransposeIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::TransposeParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::TransposeParams", align 4
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %17 = load i32, i32* %14, align 8
  store i32 %17, i32* %16, align 8
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %5
  %20 = sext i32 %17 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #10
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %17 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %35 to i32*
  %39 = select i1 %18, i32* %37, i32* %38
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %40, i64 %32, i1 false) #9
  %41 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %13, i32* %42, align 8
  %43 = icmp sgt i32 %13, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %31
  %45 = sext i32 %13 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %13 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %union.anon, %union.anon* %60, i64 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %union.anon* %60 to i32*
  %64 = select i1 %43, i32* %62, i32* %63
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %65, i64 %57, i1 false) #9
  %66 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #9
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false)
  call void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nonnull %6, %"class.tflite::RuntimeShape"* nonnull %7, %"struct.tflite::TransposeParams"* nonnull %8) #9
  %68 = load i8, i8* %66, align 4
  %69 = icmp sgt i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %56
  %71 = sext i8 %68 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp slt i64 %80, %71
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %72
  %75 = phi i64 [ 0, %70 ], [ %80, %72 ]
  %76 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = add nuw nsw i64 %75, 1
  br i1 %79, label %72, label %196

81:                                               ; preds = %72, %56
  %82 = bitcast i32* %4 to i8*
  %83 = bitcast i32* %2 to i8*
  %84 = load i32, i32* %14, align 8
  %85 = icmp sgt i32 %84, 5
  br i1 %85, label %86, label %88

86:                                               ; preds = %81
  %87 = load i32*, i32** %36, align 8
  br label %90

88:                                               ; preds = %81
  %89 = icmp sgt i32 %84, 0
  br i1 %89, label %90, label %194

90:                                               ; preds = %88, %86
  %91 = phi i32* [ %87, %86 ], [ %38, %88 ]
  %92 = zext i32 %84 to i64
  %93 = icmp ult i32 %84, 8
  br i1 %93, label %179, label %94

94:                                               ; preds = %90
  %95 = and i64 %92, 4294967288
  %96 = add nsw i64 %95, -8
  %97 = lshr exact i64 %96, 3
  %98 = add nuw nsw i64 %97, 1
  %99 = and i64 %98, 3
  %100 = icmp ult i64 %96, 24
  br i1 %100, label %146, label %101

101:                                              ; preds = %94
  %102 = sub nsw i64 %98, %99
  br label %103

103:                                              ; preds = %103, %101
  %104 = phi i64 [ 0, %101 ], [ %143, %103 ]
  %105 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %101 ], [ %141, %103 ]
  %106 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %101 ], [ %142, %103 ]
  %107 = phi i64 [ %102, %101 ], [ %144, %103 ]
  %108 = getelementptr inbounds i32, i32* %91, i64 %104
  %109 = bitcast i32* %108 to <4 x i32>*
  %110 = load <4 x i32>, <4 x i32>* %109, align 4
  %111 = getelementptr inbounds i32, i32* %108, i64 4
  %112 = bitcast i32* %111 to <4 x i32>*
  %113 = load <4 x i32>, <4 x i32>* %112, align 4
  %114 = mul nsw <4 x i32> %110, %105
  %115 = mul nsw <4 x i32> %113, %106
  %116 = or i64 %104, 8
  %117 = getelementptr inbounds i32, i32* %91, i64 %116
  %118 = bitcast i32* %117 to <4 x i32>*
  %119 = load <4 x i32>, <4 x i32>* %118, align 4
  %120 = getelementptr inbounds i32, i32* %117, i64 4
  %121 = bitcast i32* %120 to <4 x i32>*
  %122 = load <4 x i32>, <4 x i32>* %121, align 4
  %123 = mul nsw <4 x i32> %119, %114
  %124 = mul nsw <4 x i32> %122, %115
  %125 = or i64 %104, 16
  %126 = getelementptr inbounds i32, i32* %91, i64 %125
  %127 = bitcast i32* %126 to <4 x i32>*
  %128 = load <4 x i32>, <4 x i32>* %127, align 4
  %129 = getelementptr inbounds i32, i32* %126, i64 4
  %130 = bitcast i32* %129 to <4 x i32>*
  %131 = load <4 x i32>, <4 x i32>* %130, align 4
  %132 = mul nsw <4 x i32> %128, %123
  %133 = mul nsw <4 x i32> %131, %124
  %134 = or i64 %104, 24
  %135 = getelementptr inbounds i32, i32* %91, i64 %134
  %136 = bitcast i32* %135 to <4 x i32>*
  %137 = load <4 x i32>, <4 x i32>* %136, align 4
  %138 = getelementptr inbounds i32, i32* %135, i64 4
  %139 = bitcast i32* %138 to <4 x i32>*
  %140 = load <4 x i32>, <4 x i32>* %139, align 4
  %141 = mul nsw <4 x i32> %137, %132
  %142 = mul nsw <4 x i32> %140, %133
  %143 = add i64 %104, 32
  %144 = add i64 %107, -4
  %145 = icmp eq i64 %144, 0
  br i1 %145, label %146, label %103, !llvm.loop !129

146:                                              ; preds = %103, %94
  %147 = phi <4 x i32> [ undef, %94 ], [ %141, %103 ]
  %148 = phi <4 x i32> [ undef, %94 ], [ %142, %103 ]
  %149 = phi i64 [ 0, %94 ], [ %143, %103 ]
  %150 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %141, %103 ]
  %151 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %94 ], [ %142, %103 ]
  %152 = icmp eq i64 %99, 0
  br i1 %152, label %169, label %153

153:                                              ; preds = %146, %153
  %154 = phi i64 [ %166, %153 ], [ %149, %146 ]
  %155 = phi <4 x i32> [ %164, %153 ], [ %150, %146 ]
  %156 = phi <4 x i32> [ %165, %153 ], [ %151, %146 ]
  %157 = phi i64 [ %167, %153 ], [ %99, %146 ]
  %158 = getelementptr inbounds i32, i32* %91, i64 %154
  %159 = bitcast i32* %158 to <4 x i32>*
  %160 = load <4 x i32>, <4 x i32>* %159, align 4
  %161 = getelementptr inbounds i32, i32* %158, i64 4
  %162 = bitcast i32* %161 to <4 x i32>*
  %163 = load <4 x i32>, <4 x i32>* %162, align 4
  %164 = mul nsw <4 x i32> %160, %155
  %165 = mul nsw <4 x i32> %163, %156
  %166 = add i64 %154, 8
  %167 = add i64 %157, -1
  %168 = icmp eq i64 %167, 0
  br i1 %168, label %169, label %153, !llvm.loop !130

169:                                              ; preds = %153, %146
  %170 = phi <4 x i32> [ %147, %146 ], [ %164, %153 ]
  %171 = phi <4 x i32> [ %148, %146 ], [ %165, %153 ]
  %172 = mul <4 x i32> %171, %170
  %173 = shufflevector <4 x i32> %172, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %174 = mul <4 x i32> %172, %173
  %175 = shufflevector <4 x i32> %174, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %176 = mul <4 x i32> %174, %175
  %177 = extractelement <4 x i32> %176, i32 0
  %178 = icmp eq i64 %95, %92
  br i1 %178, label %190, label %179

179:                                              ; preds = %169, %90
  %180 = phi i64 [ 0, %90 ], [ %95, %169 ]
  %181 = phi i32 [ 1, %90 ], [ %177, %169 ]
  br label %182

182:                                              ; preds = %179, %182
  %183 = phi i64 [ %188, %182 ], [ %180, %179 ]
  %184 = phi i32 [ %187, %182 ], [ %181, %179 ]
  %185 = getelementptr inbounds i32, i32* %91, i64 %183
  %186 = load i32, i32* %185, align 4
  %187 = mul nsw i32 %186, %184
  %188 = add nuw nsw i64 %183, 1
  %189 = icmp eq i64 %188, %92
  br i1 %189, label %190, label %182, !llvm.loop !131

190:                                              ; preds = %182, %169
  %191 = phi i32 [ %177, %169 ], [ %187, %182 ]
  %192 = sext i32 %191 to i64
  %193 = shl nsw i64 %192, 2
  br label %194

194:                                              ; preds = %190, %88
  %195 = phi i64 [ 4, %88 ], [ %193, %190 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %82, i8* align 4 %83, i64 %195, i1 false)
  br label %355

196:                                              ; preds = %74
  %197 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 0
  %198 = load i32, i32* %197, align 4
  %199 = icmp eq i32 %198, 0
  %200 = icmp sgt i32 %13, 2
  %201 = and i1 %200, %199
  br i1 %201, label %202, label %354

202:                                              ; preds = %196
  %203 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %203) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %203, i8 -86, i64 32, i1 false)
  %204 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %204, align 8
  %205 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %205) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %205, i8 -86, i64 32, i1 false)
  %206 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %206, align 8
  %207 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %207) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %207, i8 -86, i64 24, i1 false)
  %208 = load i32, i32* %16, align 8
  %209 = icmp sgt i32 %208, 5
  %210 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %209, label %211, label %214

211:                                              ; preds = %202
  %212 = getelementptr inbounds %union.anon, %union.anon* %210, i64 0, i32 0
  %213 = load i32*, i32** %212, align 8
  br label %219

214:                                              ; preds = %202
  %215 = bitcast %union.anon* %210 to i32*
  %216 = icmp sgt i32 %208, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %214
  %218 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #9
  br label %323

219:                                              ; preds = %214, %211
  %220 = phi i32* [ %213, %211 ], [ %215, %214 ]
  %221 = zext i32 %208 to i64
  %222 = icmp ult i32 %208, 8
  br i1 %222, label %308, label %223

223:                                              ; preds = %219
  %224 = and i64 %221, 4294967288
  %225 = add nsw i64 %224, -8
  %226 = lshr exact i64 %225, 3
  %227 = add nuw nsw i64 %226, 1
  %228 = and i64 %227, 3
  %229 = icmp ult i64 %225, 24
  br i1 %229, label %275, label %230

230:                                              ; preds = %223
  %231 = sub nsw i64 %227, %228
  br label %232

232:                                              ; preds = %232, %230
  %233 = phi i64 [ 0, %230 ], [ %272, %232 ]
  %234 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %230 ], [ %270, %232 ]
  %235 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %230 ], [ %271, %232 ]
  %236 = phi i64 [ %231, %230 ], [ %273, %232 ]
  %237 = getelementptr inbounds i32, i32* %220, i64 %233
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4
  %240 = getelementptr inbounds i32, i32* %237, i64 4
  %241 = bitcast i32* %240 to <4 x i32>*
  %242 = load <4 x i32>, <4 x i32>* %241, align 4
  %243 = mul nsw <4 x i32> %239, %234
  %244 = mul nsw <4 x i32> %242, %235
  %245 = or i64 %233, 8
  %246 = getelementptr inbounds i32, i32* %220, i64 %245
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = getelementptr inbounds i32, i32* %246, i64 4
  %250 = bitcast i32* %249 to <4 x i32>*
  %251 = load <4 x i32>, <4 x i32>* %250, align 4
  %252 = mul nsw <4 x i32> %248, %243
  %253 = mul nsw <4 x i32> %251, %244
  %254 = or i64 %233, 16
  %255 = getelementptr inbounds i32, i32* %220, i64 %254
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4
  %258 = getelementptr inbounds i32, i32* %255, i64 4
  %259 = bitcast i32* %258 to <4 x i32>*
  %260 = load <4 x i32>, <4 x i32>* %259, align 4
  %261 = mul nsw <4 x i32> %257, %252
  %262 = mul nsw <4 x i32> %260, %253
  %263 = or i64 %233, 24
  %264 = getelementptr inbounds i32, i32* %220, i64 %263
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4
  %267 = getelementptr inbounds i32, i32* %264, i64 4
  %268 = bitcast i32* %267 to <4 x i32>*
  %269 = load <4 x i32>, <4 x i32>* %268, align 4
  %270 = mul nsw <4 x i32> %266, %261
  %271 = mul nsw <4 x i32> %269, %262
  %272 = add i64 %233, 32
  %273 = add i64 %236, -4
  %274 = icmp eq i64 %273, 0
  br i1 %274, label %275, label %232, !llvm.loop !132

275:                                              ; preds = %232, %223
  %276 = phi <4 x i32> [ undef, %223 ], [ %270, %232 ]
  %277 = phi <4 x i32> [ undef, %223 ], [ %271, %232 ]
  %278 = phi i64 [ 0, %223 ], [ %272, %232 ]
  %279 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %223 ], [ %270, %232 ]
  %280 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %223 ], [ %271, %232 ]
  %281 = icmp eq i64 %228, 0
  br i1 %281, label %298, label %282

282:                                              ; preds = %275, %282
  %283 = phi i64 [ %295, %282 ], [ %278, %275 ]
  %284 = phi <4 x i32> [ %293, %282 ], [ %279, %275 ]
  %285 = phi <4 x i32> [ %294, %282 ], [ %280, %275 ]
  %286 = phi i64 [ %296, %282 ], [ %228, %275 ]
  %287 = getelementptr inbounds i32, i32* %220, i64 %283
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = getelementptr inbounds i32, i32* %287, i64 4
  %291 = bitcast i32* %290 to <4 x i32>*
  %292 = load <4 x i32>, <4 x i32>* %291, align 4
  %293 = mul nsw <4 x i32> %289, %284
  %294 = mul nsw <4 x i32> %292, %285
  %295 = add i64 %283, 8
  %296 = add i64 %286, -1
  %297 = icmp eq i64 %296, 0
  br i1 %297, label %298, label %282, !llvm.loop !133

298:                                              ; preds = %282, %275
  %299 = phi <4 x i32> [ %276, %275 ], [ %293, %282 ]
  %300 = phi <4 x i32> [ %277, %275 ], [ %294, %282 ]
  %301 = mul <4 x i32> %300, %299
  %302 = shufflevector <4 x i32> %301, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %303 = mul <4 x i32> %301, %302
  %304 = shufflevector <4 x i32> %303, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %305 = mul <4 x i32> %303, %304
  %306 = extractelement <4 x i32> %305, i32 0
  %307 = icmp eq i64 %224, %221
  br i1 %307, label %319, label %308

308:                                              ; preds = %298, %219
  %309 = phi i64 [ 0, %219 ], [ %224, %298 ]
  %310 = phi i32 [ 1, %219 ], [ %306, %298 ]
  br label %311

311:                                              ; preds = %308, %311
  %312 = phi i64 [ %317, %311 ], [ %309, %308 ]
  %313 = phi i32 [ %316, %311 ], [ %310, %308 ]
  %314 = getelementptr inbounds i32, i32* %220, i64 %312
  %315 = load i32, i32* %314, align 4
  %316 = mul nsw i32 %315, %313
  %317 = add nuw nsw i64 %312, 1
  %318 = icmp eq i64 %317, %221
  br i1 %318, label %319, label %311, !llvm.loop !134

319:                                              ; preds = %311, %298
  %320 = phi i32 [ %306, %298 ], [ %316, %311 ]
  %321 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #9
  %322 = icmp sgt i32 %320, 0
  br i1 %322, label %323, label %329

323:                                              ; preds = %217, %319
  %324 = phi i64 [ %218, %217 ], [ %321, %319 ]
  %325 = phi i32 [ 1, %217 ], [ %320, %319 ]
  %326 = shl i64 %324, 32
  %327 = ashr exact i64 %326, 32
  %328 = sext i32 %325 to i64
  br label %348

329:                                              ; preds = %348, %319
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %207) #9
  %330 = load i32, i32* %206, align 8
  %331 = icmp sgt i32 %330, 5
  br i1 %331, label %332, label %338

332:                                              ; preds = %329
  %333 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %334 = load i32*, i32** %333, align 8
  %335 = icmp eq i32* %334, null
  br i1 %335, label %338, label %336

336:                                              ; preds = %332
  %337 = bitcast i32* %334 to i8*
  call void @_ZdaPv(i8* %337) #10
  br label %338

338:                                              ; preds = %329, %332, %336
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %205) #9
  %339 = load i32, i32* %204, align 8
  %340 = icmp sgt i32 %339, 5
  br i1 %340, label %341, label %347

341:                                              ; preds = %338
  %342 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %343 = load i32*, i32** %342, align 8
  %344 = icmp eq i32* %343, null
  br i1 %344, label %347, label %345

345:                                              ; preds = %341
  %346 = bitcast i32* %343 to i8*
  call void @_ZdaPv(i8* %346) #10
  br label %347

347:                                              ; preds = %338, %341, %345
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %203) #9
  br label %355

348:                                              ; preds = %323, %348
  %349 = phi i64 [ 0, %323 ], [ %352, %348 ]
  %350 = getelementptr inbounds i32, i32* %2, i64 %349
  %351 = getelementptr inbounds i32, i32* %4, i64 %349
  call void @_ZN6tflite13optimized_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i32* %350, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i32* %351)
  %352 = add i64 %349, %327
  %353 = icmp slt i64 %352, %328
  br i1 %353, label %348, label %329

354:                                              ; preds = %196
  call void @_ZN6tflite13optimized_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i32* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i32* %4)
  br label %355

355:                                              ; preds = %354, %347, %194
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #9
  %356 = load i32, i32* %42, align 8
  %357 = icmp sgt i32 %356, 5
  br i1 %357, label %358, label %364

358:                                              ; preds = %355
  %359 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %360 = load i32*, i32** %359, align 8
  %361 = icmp eq i32* %360, null
  br i1 %361, label %364, label %362

362:                                              ; preds = %358
  %363 = bitcast i32* %360 to i8*
  call void @_ZdaPv(i8* %363) #10
  br label %364

364:                                              ; preds = %355, %358, %362
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #9
  %365 = load i32, i32* %16, align 8
  %366 = icmp sgt i32 %365, 5
  br i1 %366, label %367, label %373

367:                                              ; preds = %364
  %368 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %369 = load i32*, i32** %368, align 8
  %370 = icmp eq i32* %369, null
  br i1 %370, label %373, label %371

371:                                              ; preds = %367
  %372 = bitcast i32* %369 to i8*
  call void @_ZdaPv(i8* %372) #10
  br label %373

373:                                              ; preds = %364, %367, %371
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops9TransposeIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca %"class.tflite::RuntimeShape", align 8
  %7 = alloca %"class.tflite::RuntimeShape", align 8
  %8 = alloca %"struct.tflite::TransposeParams", align 4
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = alloca %"class.tflite::RuntimeShape", align 8
  %11 = alloca %"struct.tflite::TransposeParams", align 4
  %12 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 0
  %13 = load i32, i32* %12, align 8
  %14 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %15 = bitcast %"class.tflite::RuntimeShape"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %15) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %15, i8 -86, i64 32, i1 false)
  %16 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 0
  %17 = load i32, i32* %14, align 8
  store i32 %17, i32* %16, align 8
  %18 = icmp sgt i32 %17, 5
  br i1 %18, label %19, label %26

19:                                               ; preds = %5
  %20 = sext i32 %17 to i64
  %21 = shl nsw i64 %20, 2
  %22 = tail call i8* @_Znam(i64 %21) #10
  %23 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %24 = bitcast i32** %23 to i8**
  store i8* %22, i8** %24, align 8
  %25 = bitcast i8* %22 to i32*
  br label %31

26:                                               ; preds = %5
  %27 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  %28 = bitcast %union.anon* %27 to i32*
  %29 = sext i32 %17 to i64
  %30 = shl nsw i64 %29, 2
  br label %31

31:                                               ; preds = %19, %26
  %32 = phi i64 [ %21, %19 ], [ %30, %26 ]
  %33 = phi i32* [ %25, %19 ], [ %28, %26 ]
  %34 = bitcast i32* %33 to i8*
  %35 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %36 = getelementptr inbounds %union.anon, %union.anon* %35, i64 0, i32 0
  %37 = load i32*, i32** %36, align 8
  %38 = bitcast %union.anon* %35 to i32*
  %39 = select i1 %18, i32* %37, i32* %38
  %40 = bitcast i32* %39 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %34, i8* align 4 %40, i64 %32, i1 false) #9
  %41 = bitcast %"class.tflite::RuntimeShape"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %41) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %41, i8 -86, i64 32, i1 false)
  %42 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 0
  store i32 %13, i32* %42, align 8
  %43 = icmp sgt i32 %13, 5
  br i1 %43, label %44, label %51

44:                                               ; preds = %31
  %45 = sext i32 %13 to i64
  %46 = shl nsw i64 %45, 2
  %47 = tail call i8* @_Znam(i64 %46) #10
  %48 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %49 = bitcast i32** %48 to i8**
  store i8* %47, i8** %49, align 8
  %50 = bitcast i8* %47 to i32*
  br label %56

51:                                               ; preds = %31
  %52 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1
  %53 = bitcast %union.anon* %52 to i32*
  %54 = sext i32 %13 to i64
  %55 = shl nsw i64 %54, 2
  br label %56

56:                                               ; preds = %44, %51
  %57 = phi i64 [ %46, %44 ], [ %55, %51 ]
  %58 = phi i32* [ %50, %44 ], [ %53, %51 ]
  %59 = bitcast i32* %58 to i8*
  %60 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %3, i64 0, i32 1
  %61 = getelementptr inbounds %union.anon, %union.anon* %60, i64 0, i32 0
  %62 = load i32*, i32** %61, align 8
  %63 = bitcast %union.anon* %60 to i32*
  %64 = select i1 %43, i32* %62, i32* %63
  %65 = bitcast i32* %64 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 4 %59, i8* align 4 %65, i64 %57, i1 false) #9
  %66 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %66) #9
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 4 %66, i8* align 4 %67, i64 24, i1 false)
  call void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"* nonnull %6, %"class.tflite::RuntimeShape"* nonnull %7, %"struct.tflite::TransposeParams"* nonnull %8) #9
  %68 = load i8, i8* %66, align 4
  %69 = icmp sgt i8 %68, 0
  br i1 %69, label %70, label %81

70:                                               ; preds = %56
  %71 = sext i8 %68 to i64
  br label %74

72:                                               ; preds = %74
  %73 = icmp slt i64 %80, %71
  br i1 %73, label %74, label %81

74:                                               ; preds = %70, %72
  %75 = phi i64 [ 0, %70 ], [ %80, %72 ]
  %76 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 %75
  %77 = load i32, i32* %76, align 4
  %78 = zext i32 %77 to i64
  %79 = icmp eq i64 %75, %78
  %80 = add nuw nsw i64 %75, 1
  br i1 %79, label %72, label %193

81:                                               ; preds = %72, %56
  %82 = load i32, i32* %14, align 8
  %83 = icmp sgt i32 %82, 5
  br i1 %83, label %84, label %86

84:                                               ; preds = %81
  %85 = load i32*, i32** %36, align 8
  br label %88

86:                                               ; preds = %81
  %87 = icmp sgt i32 %82, 0
  br i1 %87, label %88, label %191

88:                                               ; preds = %86, %84
  %89 = phi i32* [ %85, %84 ], [ %38, %86 ]
  %90 = zext i32 %82 to i64
  %91 = icmp ult i32 %82, 8
  br i1 %91, label %177, label %92

92:                                               ; preds = %88
  %93 = and i64 %90, 4294967288
  %94 = add nsw i64 %93, -8
  %95 = lshr exact i64 %94, 3
  %96 = add nuw nsw i64 %95, 1
  %97 = and i64 %96, 3
  %98 = icmp ult i64 %94, 24
  br i1 %98, label %144, label %99

99:                                               ; preds = %92
  %100 = sub nsw i64 %96, %97
  br label %101

101:                                              ; preds = %101, %99
  %102 = phi i64 [ 0, %99 ], [ %141, %101 ]
  %103 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %139, %101 ]
  %104 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %99 ], [ %140, %101 ]
  %105 = phi i64 [ %100, %99 ], [ %142, %101 ]
  %106 = getelementptr inbounds i32, i32* %89, i64 %102
  %107 = bitcast i32* %106 to <4 x i32>*
  %108 = load <4 x i32>, <4 x i32>* %107, align 4
  %109 = getelementptr inbounds i32, i32* %106, i64 4
  %110 = bitcast i32* %109 to <4 x i32>*
  %111 = load <4 x i32>, <4 x i32>* %110, align 4
  %112 = mul nsw <4 x i32> %108, %103
  %113 = mul nsw <4 x i32> %111, %104
  %114 = or i64 %102, 8
  %115 = getelementptr inbounds i32, i32* %89, i64 %114
  %116 = bitcast i32* %115 to <4 x i32>*
  %117 = load <4 x i32>, <4 x i32>* %116, align 4
  %118 = getelementptr inbounds i32, i32* %115, i64 4
  %119 = bitcast i32* %118 to <4 x i32>*
  %120 = load <4 x i32>, <4 x i32>* %119, align 4
  %121 = mul nsw <4 x i32> %117, %112
  %122 = mul nsw <4 x i32> %120, %113
  %123 = or i64 %102, 16
  %124 = getelementptr inbounds i32, i32* %89, i64 %123
  %125 = bitcast i32* %124 to <4 x i32>*
  %126 = load <4 x i32>, <4 x i32>* %125, align 4
  %127 = getelementptr inbounds i32, i32* %124, i64 4
  %128 = bitcast i32* %127 to <4 x i32>*
  %129 = load <4 x i32>, <4 x i32>* %128, align 4
  %130 = mul nsw <4 x i32> %126, %121
  %131 = mul nsw <4 x i32> %129, %122
  %132 = or i64 %102, 24
  %133 = getelementptr inbounds i32, i32* %89, i64 %132
  %134 = bitcast i32* %133 to <4 x i32>*
  %135 = load <4 x i32>, <4 x i32>* %134, align 4
  %136 = getelementptr inbounds i32, i32* %133, i64 4
  %137 = bitcast i32* %136 to <4 x i32>*
  %138 = load <4 x i32>, <4 x i32>* %137, align 4
  %139 = mul nsw <4 x i32> %135, %130
  %140 = mul nsw <4 x i32> %138, %131
  %141 = add i64 %102, 32
  %142 = add i64 %105, -4
  %143 = icmp eq i64 %142, 0
  br i1 %143, label %144, label %101, !llvm.loop !135

144:                                              ; preds = %101, %92
  %145 = phi <4 x i32> [ undef, %92 ], [ %139, %101 ]
  %146 = phi <4 x i32> [ undef, %92 ], [ %140, %101 ]
  %147 = phi i64 [ 0, %92 ], [ %141, %101 ]
  %148 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %139, %101 ]
  %149 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %92 ], [ %140, %101 ]
  %150 = icmp eq i64 %97, 0
  br i1 %150, label %167, label %151

151:                                              ; preds = %144, %151
  %152 = phi i64 [ %164, %151 ], [ %147, %144 ]
  %153 = phi <4 x i32> [ %162, %151 ], [ %148, %144 ]
  %154 = phi <4 x i32> [ %163, %151 ], [ %149, %144 ]
  %155 = phi i64 [ %165, %151 ], [ %97, %144 ]
  %156 = getelementptr inbounds i32, i32* %89, i64 %152
  %157 = bitcast i32* %156 to <4 x i32>*
  %158 = load <4 x i32>, <4 x i32>* %157, align 4
  %159 = getelementptr inbounds i32, i32* %156, i64 4
  %160 = bitcast i32* %159 to <4 x i32>*
  %161 = load <4 x i32>, <4 x i32>* %160, align 4
  %162 = mul nsw <4 x i32> %158, %153
  %163 = mul nsw <4 x i32> %161, %154
  %164 = add i64 %152, 8
  %165 = add i64 %155, -1
  %166 = icmp eq i64 %165, 0
  br i1 %166, label %167, label %151, !llvm.loop !136

167:                                              ; preds = %151, %144
  %168 = phi <4 x i32> [ %145, %144 ], [ %162, %151 ]
  %169 = phi <4 x i32> [ %146, %144 ], [ %163, %151 ]
  %170 = mul <4 x i32> %169, %168
  %171 = shufflevector <4 x i32> %170, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %172 = mul <4 x i32> %170, %171
  %173 = shufflevector <4 x i32> %172, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %174 = mul <4 x i32> %172, %173
  %175 = extractelement <4 x i32> %174, i32 0
  %176 = icmp eq i64 %93, %90
  br i1 %176, label %188, label %177

177:                                              ; preds = %167, %88
  %178 = phi i64 [ 0, %88 ], [ %93, %167 ]
  %179 = phi i32 [ 1, %88 ], [ %175, %167 ]
  br label %180

180:                                              ; preds = %177, %180
  %181 = phi i64 [ %186, %180 ], [ %178, %177 ]
  %182 = phi i32 [ %185, %180 ], [ %179, %177 ]
  %183 = getelementptr inbounds i32, i32* %89, i64 %181
  %184 = load i32, i32* %183, align 4
  %185 = mul nsw i32 %184, %182
  %186 = add nuw nsw i64 %181, 1
  %187 = icmp eq i64 %186, %90
  br i1 %187, label %188, label %180, !llvm.loop !137

188:                                              ; preds = %180, %167
  %189 = phi i32 [ %175, %167 ], [ %185, %180 ]
  %190 = sext i32 %189 to i64
  br label %191

191:                                              ; preds = %188, %86
  %192 = phi i64 [ 1, %86 ], [ %190, %188 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 1 %4, i8* align 1 %2, i64 %192, i1 false)
  br label %352

193:                                              ; preds = %74
  %194 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %8, i64 0, i32 1, i64 0
  %195 = load i32, i32* %194, align 4
  %196 = icmp eq i32 %195, 0
  %197 = icmp sgt i32 %13, 2
  %198 = and i1 %197, %196
  br i1 %198, label %199, label %351

199:                                              ; preds = %193
  %200 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %200) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %200, i8 -86, i64 32, i1 false)
  %201 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 0, i32* %201, align 8
  %202 = bitcast %"class.tflite::RuntimeShape"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %202) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %202, i8 -86, i64 32, i1 false)
  %203 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 0
  store i32 0, i32* %203, align 8
  %204 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %11, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %204) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 4 %204, i8 -86, i64 24, i1 false)
  %205 = load i32, i32* %16, align 8
  %206 = icmp sgt i32 %205, 5
  %207 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1
  br i1 %206, label %208, label %211

208:                                              ; preds = %199
  %209 = getelementptr inbounds %union.anon, %union.anon* %207, i64 0, i32 0
  %210 = load i32*, i32** %209, align 8
  br label %216

211:                                              ; preds = %199
  %212 = bitcast %union.anon* %207 to i32*
  %213 = icmp sgt i32 %205, 0
  br i1 %213, label %216, label %214

214:                                              ; preds = %211
  %215 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #9
  br label %320

216:                                              ; preds = %211, %208
  %217 = phi i32* [ %210, %208 ], [ %212, %211 ]
  %218 = zext i32 %205 to i64
  %219 = icmp ult i32 %205, 8
  br i1 %219, label %305, label %220

220:                                              ; preds = %216
  %221 = and i64 %218, 4294967288
  %222 = add nsw i64 %221, -8
  %223 = lshr exact i64 %222, 3
  %224 = add nuw nsw i64 %223, 1
  %225 = and i64 %224, 3
  %226 = icmp ult i64 %222, 24
  br i1 %226, label %272, label %227

227:                                              ; preds = %220
  %228 = sub nsw i64 %224, %225
  br label %229

229:                                              ; preds = %229, %227
  %230 = phi i64 [ 0, %227 ], [ %269, %229 ]
  %231 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %267, %229 ]
  %232 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %227 ], [ %268, %229 ]
  %233 = phi i64 [ %228, %227 ], [ %270, %229 ]
  %234 = getelementptr inbounds i32, i32* %217, i64 %230
  %235 = bitcast i32* %234 to <4 x i32>*
  %236 = load <4 x i32>, <4 x i32>* %235, align 4
  %237 = getelementptr inbounds i32, i32* %234, i64 4
  %238 = bitcast i32* %237 to <4 x i32>*
  %239 = load <4 x i32>, <4 x i32>* %238, align 4
  %240 = mul nsw <4 x i32> %236, %231
  %241 = mul nsw <4 x i32> %239, %232
  %242 = or i64 %230, 8
  %243 = getelementptr inbounds i32, i32* %217, i64 %242
  %244 = bitcast i32* %243 to <4 x i32>*
  %245 = load <4 x i32>, <4 x i32>* %244, align 4
  %246 = getelementptr inbounds i32, i32* %243, i64 4
  %247 = bitcast i32* %246 to <4 x i32>*
  %248 = load <4 x i32>, <4 x i32>* %247, align 4
  %249 = mul nsw <4 x i32> %245, %240
  %250 = mul nsw <4 x i32> %248, %241
  %251 = or i64 %230, 16
  %252 = getelementptr inbounds i32, i32* %217, i64 %251
  %253 = bitcast i32* %252 to <4 x i32>*
  %254 = load <4 x i32>, <4 x i32>* %253, align 4
  %255 = getelementptr inbounds i32, i32* %252, i64 4
  %256 = bitcast i32* %255 to <4 x i32>*
  %257 = load <4 x i32>, <4 x i32>* %256, align 4
  %258 = mul nsw <4 x i32> %254, %249
  %259 = mul nsw <4 x i32> %257, %250
  %260 = or i64 %230, 24
  %261 = getelementptr inbounds i32, i32* %217, i64 %260
  %262 = bitcast i32* %261 to <4 x i32>*
  %263 = load <4 x i32>, <4 x i32>* %262, align 4
  %264 = getelementptr inbounds i32, i32* %261, i64 4
  %265 = bitcast i32* %264 to <4 x i32>*
  %266 = load <4 x i32>, <4 x i32>* %265, align 4
  %267 = mul nsw <4 x i32> %263, %258
  %268 = mul nsw <4 x i32> %266, %259
  %269 = add i64 %230, 32
  %270 = add i64 %233, -4
  %271 = icmp eq i64 %270, 0
  br i1 %271, label %272, label %229, !llvm.loop !138

272:                                              ; preds = %229, %220
  %273 = phi <4 x i32> [ undef, %220 ], [ %267, %229 ]
  %274 = phi <4 x i32> [ undef, %220 ], [ %268, %229 ]
  %275 = phi i64 [ 0, %220 ], [ %269, %229 ]
  %276 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %267, %229 ]
  %277 = phi <4 x i32> [ <i32 1, i32 1, i32 1, i32 1>, %220 ], [ %268, %229 ]
  %278 = icmp eq i64 %225, 0
  br i1 %278, label %295, label %279

279:                                              ; preds = %272, %279
  %280 = phi i64 [ %292, %279 ], [ %275, %272 ]
  %281 = phi <4 x i32> [ %290, %279 ], [ %276, %272 ]
  %282 = phi <4 x i32> [ %291, %279 ], [ %277, %272 ]
  %283 = phi i64 [ %293, %279 ], [ %225, %272 ]
  %284 = getelementptr inbounds i32, i32* %217, i64 %280
  %285 = bitcast i32* %284 to <4 x i32>*
  %286 = load <4 x i32>, <4 x i32>* %285, align 4
  %287 = getelementptr inbounds i32, i32* %284, i64 4
  %288 = bitcast i32* %287 to <4 x i32>*
  %289 = load <4 x i32>, <4 x i32>* %288, align 4
  %290 = mul nsw <4 x i32> %286, %281
  %291 = mul nsw <4 x i32> %289, %282
  %292 = add i64 %280, 8
  %293 = add i64 %283, -1
  %294 = icmp eq i64 %293, 0
  br i1 %294, label %295, label %279, !llvm.loop !139

295:                                              ; preds = %279, %272
  %296 = phi <4 x i32> [ %273, %272 ], [ %290, %279 ]
  %297 = phi <4 x i32> [ %274, %272 ], [ %291, %279 ]
  %298 = mul <4 x i32> %297, %296
  %299 = shufflevector <4 x i32> %298, <4 x i32> undef, <4 x i32> <i32 2, i32 3, i32 undef, i32 undef>
  %300 = mul <4 x i32> %298, %299
  %301 = shufflevector <4 x i32> %300, <4 x i32> undef, <4 x i32> <i32 1, i32 undef, i32 undef, i32 undef>
  %302 = mul <4 x i32> %300, %301
  %303 = extractelement <4 x i32> %302, i32 0
  %304 = icmp eq i64 %221, %218
  br i1 %304, label %316, label %305

305:                                              ; preds = %295, %216
  %306 = phi i64 [ 0, %216 ], [ %221, %295 ]
  %307 = phi i32 [ 1, %216 ], [ %303, %295 ]
  br label %308

308:                                              ; preds = %305, %308
  %309 = phi i64 [ %314, %308 ], [ %306, %305 ]
  %310 = phi i32 [ %313, %308 ], [ %307, %305 ]
  %311 = getelementptr inbounds i32, i32* %217, i64 %309
  %312 = load i32, i32* %311, align 4
  %313 = mul nsw i32 %312, %310
  %314 = add nuw nsw i64 %309, 1
  %315 = icmp eq i64 %314, %218
  br i1 %315, label %316, label %308, !llvm.loop !140

316:                                              ; preds = %308, %295
  %317 = phi i32 [ %303, %295 ], [ %313, %308 ]
  %318 = call i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, %"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull %9, %"class.tflite::RuntimeShape"* nonnull %10, %"struct.tflite::TransposeParams"* nonnull %11) #9
  %319 = icmp sgt i32 %317, 0
  br i1 %319, label %320, label %326

320:                                              ; preds = %214, %316
  %321 = phi i64 [ %215, %214 ], [ %318, %316 ]
  %322 = phi i32 [ 1, %214 ], [ %317, %316 ]
  %323 = shl i64 %321, 32
  %324 = ashr exact i64 %323, 32
  %325 = sext i32 %322 to i64
  br label %345

326:                                              ; preds = %345, %316
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %204) #9
  %327 = load i32, i32* %203, align 8
  %328 = icmp sgt i32 %327, 5
  br i1 %328, label %329, label %335

329:                                              ; preds = %326
  %330 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %10, i64 0, i32 1, i32 0
  %331 = load i32*, i32** %330, align 8
  %332 = icmp eq i32* %331, null
  br i1 %332, label %335, label %333

333:                                              ; preds = %329
  %334 = bitcast i32* %331 to i8*
  call void @_ZdaPv(i8* %334) #10
  br label %335

335:                                              ; preds = %326, %329, %333
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %202) #9
  %336 = load i32, i32* %201, align 8
  %337 = icmp sgt i32 %336, 5
  br i1 %337, label %338, label %344

338:                                              ; preds = %335
  %339 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %340 = load i32*, i32** %339, align 8
  %341 = icmp eq i32* %340, null
  br i1 %341, label %344, label %342

342:                                              ; preds = %338
  %343 = bitcast i32* %340 to i8*
  call void @_ZdaPv(i8* %343) #10
  br label %344

344:                                              ; preds = %335, %338, %342
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %200) #9
  br label %352

345:                                              ; preds = %320, %345
  %346 = phi i64 [ 0, %320 ], [ %349, %345 ]
  %347 = getelementptr inbounds i8, i8* %2, i64 %346
  %348 = getelementptr inbounds i8, i8* %4, i64 %346
  call void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %11, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %347, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %10, i8* %348)
  %349 = add i64 %346, %324
  %350 = icmp slt i64 %349, %325
  br i1 %350, label %345, label %326

351:                                              ; preds = %193
  call void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* nonnull dereferenceable(24) %8, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %6, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %7, i8* %4)
  br label %352

352:                                              ; preds = %351, %344, %191
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %66) #9
  %353 = load i32, i32* %42, align 8
  %354 = icmp sgt i32 %353, 5
  br i1 %354, label %355, label %361

355:                                              ; preds = %352
  %356 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %7, i64 0, i32 1, i32 0
  %357 = load i32*, i32** %356, align 8
  %358 = icmp eq i32* %357, null
  br i1 %358, label %361, label %359

359:                                              ; preds = %355
  %360 = bitcast i32* %357 to i8*
  call void @_ZdaPv(i8* %360) #10
  br label %361

361:                                              ; preds = %352, %355, %359
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %41) #9
  %362 = load i32, i32* %16, align 8
  %363 = icmp sgt i32 %362, 5
  br i1 %363, label %364, label %370

364:                                              ; preds = %361
  %365 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %6, i64 0, i32 1, i32 0
  %366 = load i32*, i32** %365, align 8
  %367 = icmp eq i32* %366, null
  br i1 %367, label %370, label %368

368:                                              ; preds = %364
  %369 = bitcast i32* %366 to i8*
  call void @_ZdaPv(i8* %369) #10
  br label %370

370:                                              ; preds = %361, %364, %368
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %15) #9
  ret void
}

declare void @_ZN6tflite15transpose_utils23RemoveOneSizeDimensionsEPNS_12RuntimeShapeES2_PNS_15TransposeParamsE(%"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"struct.tflite::TransposeParams"*) local_unnamed_addr #2

declare i64 @_ZN6tflite15transpose_utils7FlattenERKNS_12RuntimeShapeES3_RKNS_15TransposeParamsEPS1_S7_PS4_(%"class.tflite::RuntimeShape"* dereferenceable(32), %"class.tflite::RuntimeShape"* dereferenceable(32), %"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"*, %"class.tflite::RuntimeShape"*, %"struct.tflite::TransposeParams"*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, %"class.tflite::RuntimeShape"* dereferenceable(32), i32*) local_unnamed_addr #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #9
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #9
  store i32 -1431655766, i32* %7, align 4
  %14 = call zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* nonnull %6, i32* nonnull %7) #9
  br i1 %14, label %15, label %109

15:                                               ; preds = %5
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  store i32 %17, i32* %21, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %18, i32* %22, align 4
  %23 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %17, i32* %27, align 4
  %28 = icmp sgt i32 %17, 0
  br i1 %28, label %29, label %99

29:                                               ; preds = %15
  %30 = icmp sgt i32 %18, 0
  %31 = sext i32 %17 to i64
  %32 = zext i32 %17 to i64
  %33 = add i32 %18, -1
  %34 = and i32 %18, 7
  %35 = icmp ult i32 %33, 7
  %36 = sub i32 %18, %34
  %37 = icmp eq i32 %34, 0
  br label %38

38:                                               ; preds = %56, %29
  %39 = phi i64 [ 0, %29 ], [ %58, %56 ]
  %40 = phi i32* [ %2, %29 ], [ %57, %56 ]
  br i1 %30, label %41, label %56

41:                                               ; preds = %38
  %42 = getelementptr inbounds i32, i32* %4, i64 %39
  br i1 %35, label %43, label %60

43:                                               ; preds = %60, %41
  %44 = phi i32* [ undef, %41 ], [ %87, %60 ]
  %45 = phi i32* [ %42, %41 ], [ %86, %60 ]
  %46 = phi i32* [ %40, %41 ], [ %87, %60 ]
  br i1 %37, label %56, label %47

47:                                               ; preds = %43, %47
  %48 = phi i32* [ %52, %47 ], [ %45, %43 ]
  %49 = phi i32* [ %53, %47 ], [ %46, %43 ]
  %50 = phi i32 [ %54, %47 ], [ %34, %43 ]
  %51 = load i32, i32* %49, align 4
  store i32 %51, i32* %48, align 4
  %52 = getelementptr inbounds i32, i32* %48, i64 %31
  %53 = getelementptr inbounds i32, i32* %49, i64 1
  %54 = add i32 %50, -1
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %47, !llvm.loop !141

56:                                               ; preds = %43, %47, %38
  %57 = phi i32* [ %40, %38 ], [ %44, %43 ], [ %53, %47 ]
  %58 = add nuw nsw i64 %39, 1
  %59 = icmp eq i64 %58, %32
  br i1 %59, label %90, label %38

60:                                               ; preds = %41, %60
  %61 = phi i32* [ %86, %60 ], [ %42, %41 ]
  %62 = phi i32* [ %87, %60 ], [ %40, %41 ]
  %63 = phi i32 [ %88, %60 ], [ %36, %41 ]
  %64 = load i32, i32* %62, align 4
  store i32 %64, i32* %61, align 4
  %65 = getelementptr inbounds i32, i32* %61, i64 %31
  %66 = getelementptr inbounds i32, i32* %62, i64 1
  %67 = load i32, i32* %66, align 4
  store i32 %67, i32* %65, align 4
  %68 = getelementptr inbounds i32, i32* %65, i64 %31
  %69 = getelementptr inbounds i32, i32* %62, i64 2
  %70 = load i32, i32* %69, align 4
  store i32 %70, i32* %68, align 4
  %71 = getelementptr inbounds i32, i32* %68, i64 %31
  %72 = getelementptr inbounds i32, i32* %62, i64 3
  %73 = load i32, i32* %72, align 4
  store i32 %73, i32* %71, align 4
  %74 = getelementptr inbounds i32, i32* %71, i64 %31
  %75 = getelementptr inbounds i32, i32* %62, i64 4
  %76 = load i32, i32* %75, align 4
  store i32 %76, i32* %74, align 4
  %77 = getelementptr inbounds i32, i32* %74, i64 %31
  %78 = getelementptr inbounds i32, i32* %62, i64 5
  %79 = load i32, i32* %78, align 4
  store i32 %79, i32* %77, align 4
  %80 = getelementptr inbounds i32, i32* %77, i64 %31
  %81 = getelementptr inbounds i32, i32* %62, i64 6
  %82 = load i32, i32* %81, align 4
  store i32 %82, i32* %80, align 4
  %83 = getelementptr inbounds i32, i32* %80, i64 %31
  %84 = getelementptr inbounds i32, i32* %62, i64 7
  %85 = load i32, i32* %84, align 4
  store i32 %85, i32* %83, align 4
  %86 = getelementptr inbounds i32, i32* %83, i64 %31
  %87 = getelementptr inbounds i32, i32* %62, i64 8
  %88 = add i32 %63, -8
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %43, label %60

90:                                               ; preds = %56
  %91 = load i32, i32* %24, align 8
  %92 = icmp sgt i32 %91, 5
  br i1 %92, label %93, label %99

93:                                               ; preds = %90
  %94 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %95 = load i32*, i32** %94, align 8
  %96 = icmp eq i32* %95, null
  br i1 %96, label %99, label %97

97:                                               ; preds = %93
  %98 = bitcast i32* %95 to i8*
  call void @_ZdaPv(i8* %98) #10
  br label %99

99:                                               ; preds = %15, %90, %93, %97
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #9
  %100 = load i32, i32* %19, align 8
  %101 = icmp sgt i32 %100, 5
  br i1 %101, label %102, label %108

102:                                              ; preds = %99
  %103 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %104 = load i32*, i32** %103, align 8
  %105 = icmp eq i32* %104, null
  br i1 %105, label %108, label %106

106:                                              ; preds = %102
  %107 = bitcast i32* %104 to i8*
  call void @_ZdaPv(i8* %107) #10
  br label %108

108:                                              ; preds = %99, %102, %106
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  br label %328

109:                                              ; preds = %5
  %110 = icmp eq i32 %11, 3
  br i1 %110, label %111, label %327

111:                                              ; preds = %109
  %112 = load i32, i32* %10, align 8
  %113 = icmp sgt i32 %112, 5
  %114 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %115 = getelementptr inbounds %union.anon, %union.anon* %114, i64 0, i32 0
  %116 = load i32*, i32** %115, align 8
  %117 = getelementptr inbounds i32, i32* %116, i64 1
  %118 = getelementptr inbounds i32, i32* %116, i64 2
  %119 = bitcast %union.anon* %114 to [5 x i32]*
  %120 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 1
  %121 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %122 = bitcast [16 x i8]* %121 to i32*
  %123 = select i1 %113, i32* %117, i32* %120
  %124 = select i1 %113, i32* %118, i32* %122
  %125 = load i32, i32* %123, align 4
  %126 = load i32, i32* %124, align 4
  %127 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %128 = load i32, i32* %127, align 4
  %129 = icmp eq i32 %128, 2
  %130 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 1
  %131 = load i32, i32* %130, align 4
  br i1 %129, label %132, label %136

132:                                              ; preds = %111
  %133 = icmp eq i32 %131, 1
  %134 = select i1 %133, i32 %126, i32 -1431655766
  %135 = select i1 %133, i32 -1431655766, i32 %126
  br label %148

136:                                              ; preds = %111
  %137 = icmp eq i32 %131, 2
  %138 = select i1 %137, i32 1, i32 -1431655766
  %139 = select i1 %137, i32 -1431655766, i32 1
  %140 = icmp eq i32 %128, 1
  br i1 %140, label %148, label %141

141:                                              ; preds = %136
  %142 = icmp eq i32 %131, 1
  %143 = select i1 %142, i32 %126, i32 %138
  %144 = select i1 %142, i32 %139, i32 %126
  %145 = icmp eq i32 %128, 0
  br i1 %145, label %146, label %148

146:                                              ; preds = %141
  %147 = mul nsw i32 %126, %125
  br label %156

148:                                              ; preds = %141, %136, %132
  %149 = phi i32 [ %144, %141 ], [ %135, %132 ], [ %139, %136 ]
  %150 = phi i32 [ %143, %141 ], [ %134, %132 ], [ %138, %136 ]
  %151 = phi i32 [ -1431655766, %141 ], [ 1, %132 ], [ %126, %136 ]
  %152 = icmp eq i32 %131, 0
  %153 = mul nsw i32 %126, %125
  %154 = select i1 %152, i32 %153, i32 %150
  %155 = select i1 %152, i32 %149, i32 %153
  br label %156

156:                                              ; preds = %148, %146
  %157 = phi i32 [ %147, %146 ], [ %151, %148 ]
  %158 = phi i32 [ %143, %146 ], [ %154, %148 ]
  %159 = phi i32 [ %144, %146 ], [ %155, %148 ]
  %160 = sext i32 %128 to i64
  %161 = getelementptr inbounds i32, i32* %116, i64 %160
  %162 = sext i32 %131 to i64
  %163 = getelementptr inbounds i32, i32* %116, i64 %162
  %164 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 2
  %165 = load i32, i32* %164, align 4
  %166 = sext i32 %165 to i64
  %167 = getelementptr inbounds i32, i32* %116, i64 %166
  %168 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %160
  %169 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %162
  %170 = getelementptr inbounds [5 x i32], [5 x i32]* %119, i64 0, i64 %166
  %171 = select i1 %113, i32* %163, i32* %169
  %172 = select i1 %113, i32* %161, i32* %168
  %173 = select i1 %113, i32* %167, i32* %170
  %174 = load i32, i32* %172, align 4
  %175 = load i32, i32* %171, align 4
  %176 = load i32, i32* %173, align 4
  %177 = icmp sgt i32 %174, 0
  br i1 %177, label %178, label %328

178:                                              ; preds = %156
  %179 = icmp sgt i32 %175, 0
  %180 = icmp sgt i32 %176, 0
  %181 = sext i32 %159 to i64
  %182 = sext i32 %158 to i64
  %183 = sext i32 %157 to i64
  %184 = zext i32 %174 to i64
  %185 = zext i32 %175 to i64
  %186 = zext i32 %176 to i64
  %187 = mul i32 %175, %176
  %188 = zext i32 %187 to i64
  %189 = getelementptr i32, i32* %4, i64 %186
  %190 = and i64 %186, 4294967288
  %191 = add nsw i64 %190, -8
  %192 = lshr exact i64 %191, 3
  %193 = add nuw nsw i64 %192, 1
  %194 = icmp ugt i32 %176, 7
  %195 = icmp eq i32 %159, 1
  %196 = and i1 %194, %195
  %197 = and i64 %186, 4294967288
  %198 = and i64 %193, 1
  %199 = icmp eq i64 %191, 0
  %200 = sub nuw nsw i64 %193, %198
  %201 = icmp eq i64 %198, 0
  %202 = icmp eq i64 %197, %186
  %203 = and i64 %186, 1
  %204 = icmp eq i64 %203, 0
  %205 = sub nsw i64 0, %186
  br label %206

206:                                              ; preds = %304, %178
  %207 = phi i64 [ 0, %178 ], [ %305, %304 ]
  %208 = mul i64 %207, %188
  %209 = mul i64 %207, %183
  %210 = add i64 %209, %186
  br i1 %179, label %211, label %304

211:                                              ; preds = %206
  %212 = mul nsw i64 %207, %183
  %213 = trunc i64 %207 to i32
  %214 = mul i32 %175, %213
  br label %215

215:                                              ; preds = %307, %211
  %216 = phi i64 [ 0, %211 ], [ %308, %307 ]
  %217 = mul i64 %216, %186
  %218 = add i64 %208, %217
  %219 = shl i64 %218, 32
  %220 = ashr exact i64 %219, 32
  %221 = getelementptr i32, i32* %4, i64 %220
  %222 = getelementptr i32, i32* %189, i64 %220
  %223 = mul i64 %216, %182
  %224 = add i64 %209, %223
  %225 = getelementptr i32, i32* %2, i64 %224
  %226 = add i64 %210, %223
  %227 = getelementptr i32, i32* %2, i64 %226
  br i1 %180, label %228, label %307

228:                                              ; preds = %215
  %229 = mul nsw i64 %216, %182
  %230 = add nsw i64 %229, %212
  %231 = trunc i64 %216 to i32
  %232 = add i32 %214, %231
  %233 = mul i32 %232, %176
  %234 = sext i32 %233 to i64
  br i1 %196, label %235, label %239

235:                                              ; preds = %228
  %236 = icmp ult i32* %221, %227
  %237 = icmp ult i32* %225, %222
  %238 = and i1 %236, %237
  br i1 %238, label %239, label %253

239:                                              ; preds = %228, %303, %235
  %240 = phi i64 [ 0, %235 ], [ 0, %228 ], [ %197, %303 ]
  %241 = xor i64 %240, -1
  br i1 %204, label %250, label %242

242:                                              ; preds = %239
  %243 = mul nsw i64 %240, %181
  %244 = add nsw i64 %230, %243
  %245 = add nsw i64 %240, %234
  %246 = getelementptr inbounds i32, i32* %2, i64 %244
  %247 = load i32, i32* %246, align 4
  %248 = getelementptr inbounds i32, i32* %4, i64 %245
  store i32 %247, i32* %248, align 4
  %249 = or i64 %240, 1
  br label %250

250:                                              ; preds = %242, %239
  %251 = phi i64 [ %249, %242 ], [ %240, %239 ]
  %252 = icmp eq i64 %241, %205
  br i1 %252, label %307, label %310

253:                                              ; preds = %235
  br i1 %199, label %287, label %254

254:                                              ; preds = %253, %254
  %255 = phi i64 [ %284, %254 ], [ 0, %253 ]
  %256 = phi i64 [ %285, %254 ], [ %200, %253 ]
  %257 = mul nsw i64 %255, %181
  %258 = add nsw i64 %230, %257
  %259 = add nsw i64 %255, %234
  %260 = getelementptr inbounds i32, i32* %2, i64 %258
  %261 = bitcast i32* %260 to <4 x i32>*
  %262 = load <4 x i32>, <4 x i32>* %261, align 4, !alias.scope !142
  %263 = getelementptr inbounds i32, i32* %260, i64 4
  %264 = bitcast i32* %263 to <4 x i32>*
  %265 = load <4 x i32>, <4 x i32>* %264, align 4, !alias.scope !142
  %266 = getelementptr inbounds i32, i32* %4, i64 %259
  %267 = bitcast i32* %266 to <4 x i32>*
  store <4 x i32> %262, <4 x i32>* %267, align 4, !alias.scope !145, !noalias !142
  %268 = getelementptr inbounds i32, i32* %266, i64 4
  %269 = bitcast i32* %268 to <4 x i32>*
  store <4 x i32> %265, <4 x i32>* %269, align 4, !alias.scope !145, !noalias !142
  %270 = or i64 %255, 8
  %271 = mul nsw i64 %270, %181
  %272 = add nsw i64 %230, %271
  %273 = add nsw i64 %270, %234
  %274 = getelementptr inbounds i32, i32* %2, i64 %272
  %275 = bitcast i32* %274 to <4 x i32>*
  %276 = load <4 x i32>, <4 x i32>* %275, align 4, !alias.scope !142
  %277 = getelementptr inbounds i32, i32* %274, i64 4
  %278 = bitcast i32* %277 to <4 x i32>*
  %279 = load <4 x i32>, <4 x i32>* %278, align 4, !alias.scope !142
  %280 = getelementptr inbounds i32, i32* %4, i64 %273
  %281 = bitcast i32* %280 to <4 x i32>*
  store <4 x i32> %276, <4 x i32>* %281, align 4, !alias.scope !145, !noalias !142
  %282 = getelementptr inbounds i32, i32* %280, i64 4
  %283 = bitcast i32* %282 to <4 x i32>*
  store <4 x i32> %279, <4 x i32>* %283, align 4, !alias.scope !145, !noalias !142
  %284 = add i64 %255, 16
  %285 = add i64 %256, -2
  %286 = icmp eq i64 %285, 0
  br i1 %286, label %287, label %254, !llvm.loop !147

287:                                              ; preds = %254, %253
  %288 = phi i64 [ 0, %253 ], [ %284, %254 ]
  br i1 %201, label %303, label %289

289:                                              ; preds = %287
  %290 = mul nsw i64 %288, %181
  %291 = add nsw i64 %230, %290
  %292 = add nsw i64 %288, %234
  %293 = getelementptr inbounds i32, i32* %2, i64 %291
  %294 = bitcast i32* %293 to <4 x i32>*
  %295 = load <4 x i32>, <4 x i32>* %294, align 4, !alias.scope !142
  %296 = getelementptr inbounds i32, i32* %293, i64 4
  %297 = bitcast i32* %296 to <4 x i32>*
  %298 = load <4 x i32>, <4 x i32>* %297, align 4, !alias.scope !142
  %299 = getelementptr inbounds i32, i32* %4, i64 %292
  %300 = bitcast i32* %299 to <4 x i32>*
  store <4 x i32> %295, <4 x i32>* %300, align 4, !alias.scope !145, !noalias !142
  %301 = getelementptr inbounds i32, i32* %299, i64 4
  %302 = bitcast i32* %301 to <4 x i32>*
  store <4 x i32> %298, <4 x i32>* %302, align 4, !alias.scope !145, !noalias !142
  br label %303

303:                                              ; preds = %287, %289
  br i1 %202, label %307, label %239

304:                                              ; preds = %307, %206
  %305 = add nuw nsw i64 %207, 1
  %306 = icmp eq i64 %305, %184
  br i1 %306, label %328, label %206

307:                                              ; preds = %250, %310, %303, %215
  %308 = add nuw nsw i64 %216, 1
  %309 = icmp eq i64 %308, %185
  br i1 %309, label %304, label %215

310:                                              ; preds = %250, %310
  %311 = phi i64 [ %325, %310 ], [ %251, %250 ]
  %312 = mul nsw i64 %311, %181
  %313 = add nsw i64 %230, %312
  %314 = add nsw i64 %311, %234
  %315 = getelementptr inbounds i32, i32* %2, i64 %313
  %316 = load i32, i32* %315, align 4
  %317 = getelementptr inbounds i32, i32* %4, i64 %314
  store i32 %316, i32* %317, align 4
  %318 = add nuw nsw i64 %311, 1
  %319 = mul nsw i64 %318, %181
  %320 = add nsw i64 %230, %319
  %321 = add nsw i64 %318, %234
  %322 = getelementptr inbounds i32, i32* %2, i64 %320
  %323 = load i32, i32* %322, align 4
  %324 = getelementptr inbounds i32, i32* %4, i64 %321
  store i32 %323, i32* %324, align 4
  %325 = add nuw nsw i64 %311, 2
  %326 = icmp eq i64 %325, %186
  br i1 %326, label %307, label %310, !llvm.loop !148

327:                                              ; preds = %109
  call void @_ZN6tflite13reference_ops13TransposeImplIiLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i32* %4) #9
  br label %328

328:                                              ; preds = %304, %156, %327, %108
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #9
  ret void
}

declare zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i32*, i32*) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24), %"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #0 comdat {
  %6 = alloca i32, align 4
  %7 = alloca i32, align 4
  %8 = alloca %"class.tflite::RuntimeShape", align 8
  %9 = alloca %"class.tflite::RuntimeShape", align 8
  %10 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = bitcast i32* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %12) #9
  store i32 -1431655766, i32* %6, align 4
  %13 = bitcast i32* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %13) #9
  store i32 -1431655766, i32* %7, align 4
  %14 = call zeroext i1 @_ZN6tflite15transpose_utils23IsTranspose2DApplicableERKNS_15TransposeParamsERKNS_12RuntimeShapeEPiS7_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i32* nonnull %6, i32* nonnull %7) #9
  br i1 %14, label %15, label %46

15:                                               ; preds = %5
  %16 = bitcast %"class.tflite::RuntimeShape"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %16) #9
  %17 = load i32, i32* %6, align 4
  %18 = load i32, i32* %7, align 4
  %19 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 0
  store i32 2, i32* %19, align 8
  %20 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1
  %21 = bitcast %union.anon* %20 to i32*
  store i32 %17, i32* %21, align 8
  %22 = getelementptr inbounds i32, i32* %21, i64 1
  store i32 %18, i32* %22, align 4
  %23 = bitcast %"class.tflite::RuntimeShape"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 32, i8* nonnull %23) #9
  %24 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 0
  store i32 2, i32* %24, align 8
  %25 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1
  %26 = bitcast %union.anon* %25 to i32*
  store i32 %18, i32* %26, align 8
  %27 = getelementptr inbounds i32, i32* %26, i64 1
  store i32 %17, i32* %27, align 4
  call void @_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %8, i8* %2, %"class.tflite::RuntimeShape"* nonnull dereferenceable(32) %9, i8* %4)
  %28 = load i32, i32* %24, align 8
  %29 = icmp sgt i32 %28, 5
  br i1 %29, label %30, label %36

30:                                               ; preds = %15
  %31 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %9, i64 0, i32 1, i32 0
  %32 = load i32*, i32** %31, align 8
  %33 = icmp eq i32* %32, null
  br i1 %33, label %36, label %34

34:                                               ; preds = %30
  %35 = bitcast i32* %32 to i8*
  call void @_ZdaPv(i8* %35) #10
  br label %36

36:                                               ; preds = %15, %30, %34
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %23) #9
  %37 = load i32, i32* %19, align 8
  %38 = icmp sgt i32 %37, 5
  br i1 %38, label %39, label %45

39:                                               ; preds = %36
  %40 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %8, i64 0, i32 1, i32 0
  %41 = load i32*, i32** %40, align 8
  %42 = icmp eq i32* %41, null
  br i1 %42, label %45, label %43

43:                                               ; preds = %39
  %44 = bitcast i32* %41 to i8*
  call void @_ZdaPv(i8* %44) #10
  br label %45

45:                                               ; preds = %36, %39, %43
  call void @llvm.lifetime.end.p0i8(i64 32, i8* nonnull %16) #9
  br label %265

46:                                               ; preds = %5
  %47 = icmp eq i32 %11, 3
  br i1 %47, label %48, label %264

48:                                               ; preds = %46
  %49 = load i32, i32* %10, align 8
  %50 = icmp sgt i32 %49, 5
  %51 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1
  %52 = getelementptr inbounds %union.anon, %union.anon* %51, i64 0, i32 0
  %53 = load i32*, i32** %52, align 8
  %54 = getelementptr inbounds i32, i32* %53, i64 1
  %55 = getelementptr inbounds i32, i32* %53, i64 2
  %56 = bitcast %union.anon* %51 to [5 x i32]*
  %57 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 1
  %58 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %1, i64 0, i32 1, i32 1
  %59 = bitcast [16 x i8]* %58 to i32*
  %60 = select i1 %50, i32* %54, i32* %57
  %61 = select i1 %50, i32* %55, i32* %59
  %62 = load i32, i32* %60, align 4
  %63 = load i32, i32* %61, align 4
  %64 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 0
  %65 = load i32, i32* %64, align 4
  %66 = icmp eq i32 %65, 2
  %67 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 1
  %68 = load i32, i32* %67, align 4
  br i1 %66, label %69, label %73

69:                                               ; preds = %48
  %70 = icmp eq i32 %68, 1
  %71 = select i1 %70, i32 %63, i32 -1431655766
  %72 = select i1 %70, i32 -1431655766, i32 %63
  br label %85

73:                                               ; preds = %48
  %74 = icmp eq i32 %68, 2
  %75 = select i1 %74, i32 1, i32 -1431655766
  %76 = select i1 %74, i32 -1431655766, i32 1
  %77 = icmp eq i32 %65, 1
  br i1 %77, label %85, label %78

78:                                               ; preds = %73
  %79 = icmp eq i32 %68, 1
  %80 = select i1 %79, i32 %63, i32 %75
  %81 = select i1 %79, i32 %76, i32 %63
  %82 = icmp eq i32 %65, 0
  br i1 %82, label %83, label %85

83:                                               ; preds = %78
  %84 = mul nsw i32 %63, %62
  br label %93

85:                                               ; preds = %78, %73, %69
  %86 = phi i32 [ %81, %78 ], [ %72, %69 ], [ %76, %73 ]
  %87 = phi i32 [ %80, %78 ], [ %71, %69 ], [ %75, %73 ]
  %88 = phi i32 [ -1431655766, %78 ], [ 1, %69 ], [ %63, %73 ]
  %89 = icmp eq i32 %68, 0
  %90 = mul nsw i32 %63, %62
  %91 = select i1 %89, i32 %90, i32 %87
  %92 = select i1 %89, i32 %86, i32 %90
  br label %93

93:                                               ; preds = %85, %83
  %94 = phi i32 [ %84, %83 ], [ %88, %85 ]
  %95 = phi i32 [ %80, %83 ], [ %91, %85 ]
  %96 = phi i32 [ %81, %83 ], [ %92, %85 ]
  %97 = sext i32 %65 to i64
  %98 = getelementptr inbounds i32, i32* %53, i64 %97
  %99 = sext i32 %68 to i64
  %100 = getelementptr inbounds i32, i32* %53, i64 %99
  %101 = getelementptr inbounds %"struct.tflite::TransposeParams", %"struct.tflite::TransposeParams"* %0, i64 0, i32 1, i64 2
  %102 = load i32, i32* %101, align 4
  %103 = sext i32 %102 to i64
  %104 = getelementptr inbounds i32, i32* %53, i64 %103
  %105 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %97
  %106 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %99
  %107 = getelementptr inbounds [5 x i32], [5 x i32]* %56, i64 0, i64 %103
  %108 = select i1 %50, i32* %100, i32* %106
  %109 = select i1 %50, i32* %98, i32* %105
  %110 = select i1 %50, i32* %104, i32* %107
  %111 = load i32, i32* %109, align 4
  %112 = load i32, i32* %108, align 4
  %113 = load i32, i32* %110, align 4
  %114 = icmp sgt i32 %111, 0
  br i1 %114, label %115, label %265

115:                                              ; preds = %93
  %116 = icmp sgt i32 %112, 0
  %117 = icmp sgt i32 %113, 0
  %118 = sext i32 %96 to i64
  %119 = sext i32 %95 to i64
  %120 = sext i32 %94 to i64
  %121 = zext i32 %111 to i64
  %122 = zext i32 %112 to i64
  %123 = zext i32 %113 to i64
  %124 = mul i32 %112, %113
  %125 = zext i32 %124 to i64
  %126 = getelementptr i8, i8* %4, i64 %123
  %127 = and i64 %123, 4294967264
  %128 = add nsw i64 %127, -32
  %129 = lshr exact i64 %128, 5
  %130 = add nuw nsw i64 %129, 1
  %131 = icmp ugt i32 %113, 31
  %132 = icmp eq i32 %96, 1
  %133 = and i1 %131, %132
  %134 = and i64 %123, 4294967264
  %135 = and i64 %130, 1
  %136 = icmp eq i64 %128, 0
  %137 = sub nuw nsw i64 %130, %135
  %138 = icmp eq i64 %135, 0
  %139 = icmp eq i64 %134, %123
  %140 = and i64 %123, 1
  %141 = icmp eq i64 %140, 0
  %142 = sub nsw i64 0, %123
  br label %143

143:                                              ; preds = %241, %115
  %144 = phi i64 [ 0, %115 ], [ %242, %241 ]
  %145 = mul i64 %144, %125
  %146 = mul i64 %144, %120
  %147 = add i64 %146, %123
  br i1 %116, label %148, label %241

148:                                              ; preds = %143
  %149 = mul nsw i64 %144, %120
  %150 = trunc i64 %144 to i32
  %151 = mul i32 %112, %150
  br label %152

152:                                              ; preds = %244, %148
  %153 = phi i64 [ 0, %148 ], [ %245, %244 ]
  %154 = mul i64 %153, %123
  %155 = add i64 %145, %154
  %156 = shl i64 %155, 32
  %157 = ashr exact i64 %156, 32
  %158 = getelementptr i8, i8* %4, i64 %157
  %159 = getelementptr i8, i8* %126, i64 %157
  %160 = mul i64 %153, %119
  %161 = add i64 %146, %160
  %162 = getelementptr i8, i8* %2, i64 %161
  %163 = add i64 %147, %160
  %164 = getelementptr i8, i8* %2, i64 %163
  br i1 %117, label %165, label %244

165:                                              ; preds = %152
  %166 = mul nsw i64 %153, %119
  %167 = add nsw i64 %166, %149
  %168 = trunc i64 %153 to i32
  %169 = add i32 %151, %168
  %170 = mul i32 %169, %113
  %171 = sext i32 %170 to i64
  br i1 %133, label %172, label %176

172:                                              ; preds = %165
  %173 = icmp ult i8* %158, %164
  %174 = icmp ult i8* %162, %159
  %175 = and i1 %173, %174
  br i1 %175, label %176, label %190

176:                                              ; preds = %165, %240, %172
  %177 = phi i64 [ 0, %172 ], [ 0, %165 ], [ %134, %240 ]
  %178 = xor i64 %177, -1
  br i1 %141, label %187, label %179

179:                                              ; preds = %176
  %180 = mul nsw i64 %177, %118
  %181 = add nsw i64 %167, %180
  %182 = add nsw i64 %177, %171
  %183 = getelementptr inbounds i8, i8* %2, i64 %181
  %184 = load i8, i8* %183, align 1
  %185 = getelementptr inbounds i8, i8* %4, i64 %182
  store i8 %184, i8* %185, align 1
  %186 = or i64 %177, 1
  br label %187

187:                                              ; preds = %179, %176
  %188 = phi i64 [ %186, %179 ], [ %177, %176 ]
  %189 = icmp eq i64 %178, %142
  br i1 %189, label %244, label %247

190:                                              ; preds = %172
  br i1 %136, label %224, label %191

191:                                              ; preds = %190, %191
  %192 = phi i64 [ %221, %191 ], [ 0, %190 ]
  %193 = phi i64 [ %222, %191 ], [ %137, %190 ]
  %194 = mul nsw i64 %192, %118
  %195 = add nsw i64 %167, %194
  %196 = add nsw i64 %192, %171
  %197 = getelementptr inbounds i8, i8* %2, i64 %195
  %198 = bitcast i8* %197 to <16 x i8>*
  %199 = load <16 x i8>, <16 x i8>* %198, align 1, !alias.scope !149
  %200 = getelementptr inbounds i8, i8* %197, i64 16
  %201 = bitcast i8* %200 to <16 x i8>*
  %202 = load <16 x i8>, <16 x i8>* %201, align 1, !alias.scope !149
  %203 = getelementptr inbounds i8, i8* %4, i64 %196
  %204 = bitcast i8* %203 to <16 x i8>*
  store <16 x i8> %199, <16 x i8>* %204, align 1, !alias.scope !152, !noalias !149
  %205 = getelementptr inbounds i8, i8* %203, i64 16
  %206 = bitcast i8* %205 to <16 x i8>*
  store <16 x i8> %202, <16 x i8>* %206, align 1, !alias.scope !152, !noalias !149
  %207 = or i64 %192, 32
  %208 = mul nsw i64 %207, %118
  %209 = add nsw i64 %167, %208
  %210 = add nsw i64 %207, %171
  %211 = getelementptr inbounds i8, i8* %2, i64 %209
  %212 = bitcast i8* %211 to <16 x i8>*
  %213 = load <16 x i8>, <16 x i8>* %212, align 1, !alias.scope !149
  %214 = getelementptr inbounds i8, i8* %211, i64 16
  %215 = bitcast i8* %214 to <16 x i8>*
  %216 = load <16 x i8>, <16 x i8>* %215, align 1, !alias.scope !149
  %217 = getelementptr inbounds i8, i8* %4, i64 %210
  %218 = bitcast i8* %217 to <16 x i8>*
  store <16 x i8> %213, <16 x i8>* %218, align 1, !alias.scope !152, !noalias !149
  %219 = getelementptr inbounds i8, i8* %217, i64 16
  %220 = bitcast i8* %219 to <16 x i8>*
  store <16 x i8> %216, <16 x i8>* %220, align 1, !alias.scope !152, !noalias !149
  %221 = add i64 %192, 64
  %222 = add i64 %193, -2
  %223 = icmp eq i64 %222, 0
  br i1 %223, label %224, label %191, !llvm.loop !154

224:                                              ; preds = %191, %190
  %225 = phi i64 [ 0, %190 ], [ %221, %191 ]
  br i1 %138, label %240, label %226

226:                                              ; preds = %224
  %227 = mul nsw i64 %225, %118
  %228 = add nsw i64 %167, %227
  %229 = add nsw i64 %225, %171
  %230 = getelementptr inbounds i8, i8* %2, i64 %228
  %231 = bitcast i8* %230 to <16 x i8>*
  %232 = load <16 x i8>, <16 x i8>* %231, align 1, !alias.scope !149
  %233 = getelementptr inbounds i8, i8* %230, i64 16
  %234 = bitcast i8* %233 to <16 x i8>*
  %235 = load <16 x i8>, <16 x i8>* %234, align 1, !alias.scope !149
  %236 = getelementptr inbounds i8, i8* %4, i64 %229
  %237 = bitcast i8* %236 to <16 x i8>*
  store <16 x i8> %232, <16 x i8>* %237, align 1, !alias.scope !152, !noalias !149
  %238 = getelementptr inbounds i8, i8* %236, i64 16
  %239 = bitcast i8* %238 to <16 x i8>*
  store <16 x i8> %235, <16 x i8>* %239, align 1, !alias.scope !152, !noalias !149
  br label %240

240:                                              ; preds = %224, %226
  br i1 %139, label %244, label %176

241:                                              ; preds = %244, %143
  %242 = add nuw nsw i64 %144, 1
  %243 = icmp eq i64 %242, %121
  br i1 %243, label %265, label %143

244:                                              ; preds = %187, %247, %240, %152
  %245 = add nuw nsw i64 %153, 1
  %246 = icmp eq i64 %245, %122
  br i1 %246, label %241, label %152

247:                                              ; preds = %187, %247
  %248 = phi i64 [ %262, %247 ], [ %188, %187 ]
  %249 = mul nsw i64 %248, %118
  %250 = add nsw i64 %167, %249
  %251 = add nsw i64 %248, %171
  %252 = getelementptr inbounds i8, i8* %2, i64 %250
  %253 = load i8, i8* %252, align 1
  %254 = getelementptr inbounds i8, i8* %4, i64 %251
  store i8 %253, i8* %254, align 1
  %255 = add nuw nsw i64 %248, 1
  %256 = mul nsw i64 %255, %118
  %257 = add nsw i64 %167, %256
  %258 = add nsw i64 %255, %171
  %259 = getelementptr inbounds i8, i8* %2, i64 %257
  %260 = load i8, i8* %259, align 1
  %261 = getelementptr inbounds i8, i8* %4, i64 %258
  store i8 %260, i8* %261, align 1
  %262 = add nuw nsw i64 %248, 2
  %263 = icmp eq i64 %262, %123
  br i1 %263, label %244, label %247, !llvm.loop !155

264:                                              ; preds = %46
  call void @_ZN6tflite13reference_ops13TransposeImplIaLi5EEEvRKNS_15TransposeParamsERKNS_12RuntimeShapeEPKT_S7_PS8_(%"struct.tflite::TransposeParams"* dereferenceable(24) %0, %"class.tflite::RuntimeShape"* dereferenceable(32) %1, i8* %2, %"class.tflite::RuntimeShape"* dereferenceable(32) %3, i8* %4) #9
  br label %265

265:                                              ; preds = %241, %93, %264, %45
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %13) #9
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %12) #9
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6tflite13optimized_ops11Transpose2DIaEEvRKNS_12RuntimeShapeEPKT_S4_PS5_(%"class.tflite::RuntimeShape"* dereferenceable(32), i8*, %"class.tflite::RuntimeShape"* dereferenceable(32), i8*) local_unnamed_addr #7 comdat {
  %5 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 0
  %6 = load i32, i32* %5, align 8
  %7 = icmp sgt i32 %6, 5
  %8 = getelementptr inbounds %"class.tflite::RuntimeShape", %"class.tflite::RuntimeShape"* %0, i64 0, i32 1
  %9 = getelementptr inbounds %union.anon, %union.anon* %8, i64 0, i32 0
  %10 = load i32*, i32** %9, align 8
  %11 = bitcast %union.anon* %8 to i32*
  %12 = select i1 %7, i32* %10, i32* %11
  %13 = load i32, i32* %12, align 4
  %14 = getelementptr inbounds i32, i32* %12, i64 1
  %15 = load i32, i32* %14, align 4
  %16 = mul nsw i32 %15, 3
  %17 = add nsw i32 %13, -4
  %18 = icmp slt i32 %17, 0
  br i1 %18, label %30, label %19

19:                                               ; preds = %4
  %20 = sext i32 %15 to i64
  %21 = add i32 %15, -4
  %22 = icmp slt i32 %21, 0
  %23 = sext i32 %13 to i64
  %24 = shl i32 %15, 2
  %25 = and i32 %15, -4
  %26 = shl nsw i64 %20, 1
  %27 = mul nsw i64 %20, 3
  br label %44

28:                                               ; preds = %159
  %29 = trunc i64 %163 to i32
  br label %30

30:                                               ; preds = %28, %4
  %31 = phi i32 [ 0, %4 ], [ %29, %28 ]
  %32 = phi i8* [ %1, %4 ], [ %162, %28 ]
  %33 = icmp slt i32 %31, %13
  br i1 %33, label %34, label %218

34:                                               ; preds = %30
  %35 = icmp sgt i32 %15, 0
  %36 = sext i32 %13 to i64
  %37 = zext i32 %31 to i64
  %38 = zext i32 %13 to i64
  %39 = add i32 %15, -1
  %40 = and i32 %15, 7
  %41 = icmp ult i32 %39, 7
  %42 = sub i32 %15, %40
  %43 = icmp eq i32 %40, 0
  br label %166

44:                                               ; preds = %19, %159
  %45 = phi i64 [ 0, %19 ], [ %163, %159 ]
  %46 = phi i8* [ %1, %19 ], [ %162, %159 ]
  %47 = getelementptr inbounds i8, i8* %3, i64 %45
  tail call void @llvm.prefetch(i8* %46, i32 0, i32 3, i32 1) #9
  %48 = getelementptr inbounds i8, i8* %46, i64 %20
  tail call void @llvm.prefetch(i8* %48, i32 0, i32 3, i32 1) #9
  %49 = getelementptr inbounds i8, i8* %48, i64 %20
  tail call void @llvm.prefetch(i8* %49, i32 0, i32 3, i32 1) #9
  %50 = getelementptr inbounds i8, i8* %49, i64 %20
  tail call void @llvm.prefetch(i8* %50, i32 0, i32 3, i32 1) #9
  br i1 %22, label %105, label %51

51:                                               ; preds = %44, %51
  %52 = phi i8* [ %102, %51 ], [ %46, %44 ]
  %53 = phi i8* [ %101, %51 ], [ %47, %44 ]
  %54 = phi i32 [ %103, %51 ], [ 0, %44 ]
  %55 = load i8, i8* %52, align 1
  %56 = getelementptr inbounds i8, i8* %52, i64 1
  %57 = load i8, i8* %56, align 1
  %58 = getelementptr inbounds i8, i8* %52, i64 2
  %59 = load i8, i8* %58, align 1
  %60 = getelementptr inbounds i8, i8* %52, i64 3
  %61 = load i8, i8* %60, align 1
  %62 = getelementptr inbounds i8, i8* %52, i64 %20
  %63 = load i8, i8* %62, align 1
  %64 = getelementptr inbounds i8, i8* %62, i64 1
  %65 = load i8, i8* %64, align 1
  %66 = getelementptr inbounds i8, i8* %62, i64 2
  %67 = load i8, i8* %66, align 1
  %68 = getelementptr inbounds i8, i8* %62, i64 3
  %69 = load i8, i8* %68, align 1
  %70 = getelementptr inbounds i8, i8* %62, i64 %20
  %71 = load i8, i8* %70, align 1
  %72 = getelementptr inbounds i8, i8* %70, i64 1
  %73 = load i8, i8* %72, align 1
  %74 = getelementptr inbounds i8, i8* %70, i64 2
  %75 = load i8, i8* %74, align 1
  %76 = getelementptr inbounds i8, i8* %70, i64 3
  %77 = load i8, i8* %76, align 1
  %78 = getelementptr inbounds i8, i8* %70, i64 %20
  %79 = load i8, i8* %78, align 1
  %80 = getelementptr inbounds i8, i8* %78, i64 1
  %81 = load i8, i8* %80, align 1
  %82 = getelementptr inbounds i8, i8* %78, i64 2
  %83 = load i8, i8* %82, align 1
  %84 = getelementptr inbounds i8, i8* %78, i64 3
  %85 = load i8, i8* %84, align 1
  store i8 %55, i8* %53, align 1
  %86 = getelementptr inbounds i8, i8* %53, i64 1
  store i8 %63, i8* %86, align 1
  %87 = getelementptr inbounds i8, i8* %53, i64 2
  store i8 %71, i8* %87, align 1
  %88 = getelementptr inbounds i8, i8* %53, i64 3
  store i8 %79, i8* %88, align 1
  %89 = getelementptr inbounds i8, i8* %53, i64 %23
  store i8 %57, i8* %89, align 1
  %90 = getelementptr inbounds i8, i8* %89, i64 1
  store i8 %65, i8* %90, align 1
  %91 = getelementptr inbounds i8, i8* %89, i64 2
  store i8 %73, i8* %91, align 1
  %92 = getelementptr inbounds i8, i8* %89, i64 3
  store i8 %81, i8* %92, align 1
  %93 = getelementptr inbounds i8, i8* %89, i64 %23
  store i8 %59, i8* %93, align 1
  %94 = getelementptr inbounds i8, i8* %93, i64 1
  store i8 %67, i8* %94, align 1
  %95 = getelementptr inbounds i8, i8* %93, i64 2
  store i8 %75, i8* %95, align 1
  %96 = getelementptr inbounds i8, i8* %93, i64 3
  store i8 %83, i8* %96, align 1
  %97 = getelementptr inbounds i8, i8* %93, i64 %23
  store i8 %61, i8* %97, align 1
  %98 = getelementptr inbounds i8, i8* %97, i64 1
  store i8 %69, i8* %98, align 1
  %99 = getelementptr inbounds i8, i8* %97, i64 2
  store i8 %77, i8* %99, align 1
  %100 = getelementptr inbounds i8, i8* %97, i64 3
  store i8 %85, i8* %100, align 1
  %101 = getelementptr inbounds i8, i8* %97, i64 %23
  %102 = getelementptr inbounds i8, i8* %52, i64 4
  %103 = add nuw nsw i32 %54, 4
  %104 = icmp sgt i32 %103, %21
  br i1 %104, label %105, label %51

105:                                              ; preds = %51, %44
  %106 = phi i32 [ 0, %44 ], [ %25, %51 ]
  %107 = phi i8* [ %47, %44 ], [ %101, %51 ]
  %108 = phi i8* [ %46, %44 ], [ %102, %51 ]
  %109 = icmp eq i32 %15, %106
  br i1 %109, label %159, label %110

110:                                              ; preds = %105
  %111 = sub i32 %15, %106
  %112 = icmp sgt i32 %111, 0
  br i1 %112, label %113, label %356

113:                                              ; preds = %110
  %114 = zext i32 %111 to i64
  %115 = add nsw i64 %114, -1
  %116 = and i64 %114, 3
  %117 = icmp ult i64 %115, 3
  br i1 %117, label %120, label %118

118:                                              ; preds = %113
  %119 = sub nsw i64 %114, %116
  br label %134

120:                                              ; preds = %134, %113
  %121 = phi i64 [ 0, %113 ], [ %156, %134 ]
  %122 = icmp eq i64 %116, 0
  br i1 %122, label %133, label %123

123:                                              ; preds = %120, %123
  %124 = phi i64 [ %130, %123 ], [ %121, %120 ]
  %125 = phi i64 [ %131, %123 ], [ %116, %120 ]
  %126 = getelementptr inbounds i8, i8* %108, i64 %124
  %127 = load i8, i8* %126, align 1
  %128 = mul nsw i64 %124, %23
  %129 = getelementptr inbounds i8, i8* %107, i64 %128
  store i8 %127, i8* %129, align 1
  %130 = add nuw nsw i64 %124, 1
  %131 = add i64 %125, -1
  %132 = icmp eq i64 %131, 0
  br i1 %132, label %133, label %123, !llvm.loop !156

133:                                              ; preds = %123, %120
  br i1 %112, label %219, label %356

134:                                              ; preds = %134, %118
  %135 = phi i64 [ 0, %118 ], [ %156, %134 ]
  %136 = phi i64 [ %119, %118 ], [ %157, %134 ]
  %137 = getelementptr inbounds i8, i8* %108, i64 %135
  %138 = load i8, i8* %137, align 1
  %139 = mul nsw i64 %135, %23
  %140 = getelementptr inbounds i8, i8* %107, i64 %139
  store i8 %138, i8* %140, align 1
  %141 = or i64 %135, 1
  %142 = getelementptr inbounds i8, i8* %108, i64 %141
  %143 = load i8, i8* %142, align 1
  %144 = mul nsw i64 %141, %23
  %145 = getelementptr inbounds i8, i8* %107, i64 %144
  store i8 %143, i8* %145, align 1
  %146 = or i64 %135, 2
  %147 = getelementptr inbounds i8, i8* %108, i64 %146
  %148 = load i8, i8* %147, align 1
  %149 = mul nsw i64 %146, %23
  %150 = getelementptr inbounds i8, i8* %107, i64 %149
  store i8 %148, i8* %150, align 1
  %151 = or i64 %135, 3
  %152 = getelementptr inbounds i8, i8* %108, i64 %151
  %153 = load i8, i8* %152, align 1
  %154 = mul nsw i64 %151, %23
  %155 = getelementptr inbounds i8, i8* %107, i64 %154
  store i8 %153, i8* %155, align 1
  %156 = add nuw nsw i64 %135, 4
  %157 = add i64 %136, -4
  %158 = icmp eq i64 %157, 0
  br i1 %158, label %120, label %134

159:                                              ; preds = %105, %356
  %160 = phi i32 [ %357, %356 ], [ %16, %105 ]
  %161 = sext i32 %160 to i64
  %162 = getelementptr inbounds i8, i8* %108, i64 %161
  %163 = add nuw i64 %45, 4
  %164 = trunc i64 %163 to i32
  %165 = icmp slt i32 %17, %164
  br i1 %165, label %28, label %44

166:                                              ; preds = %184, %34
  %167 = phi i64 [ %37, %34 ], [ %186, %184 ]
  %168 = phi i8* [ %32, %34 ], [ %185, %184 ]
  br i1 %35, label %169, label %184

169:                                              ; preds = %166
  %170 = getelementptr inbounds i8, i8* %3, i64 %167
  br i1 %41, label %171, label %188

171:                                              ; preds = %188, %169
  %172 = phi i8* [ undef, %169 ], [ %215, %188 ]
  %173 = phi i8* [ %170, %169 ], [ %214, %188 ]
  %174 = phi i8* [ %168, %169 ], [ %215, %188 ]
  br i1 %43, label %184, label %175

175:                                              ; preds = %171, %175
  %176 = phi i8* [ %180, %175 ], [ %173, %171 ]
  %177 = phi i8* [ %181, %175 ], [ %174, %171 ]
  %178 = phi i32 [ %182, %175 ], [ %40, %171 ]
  %179 = load i8, i8* %177, align 1
  store i8 %179, i8* %176, align 1
  %180 = getelementptr inbounds i8, i8* %176, i64 %36
  %181 = getelementptr inbounds i8, i8* %177, i64 1
  %182 = add i32 %178, -1
  %183 = icmp eq i32 %182, 0
  br i1 %183, label %184, label %175, !llvm.loop !157

184:                                              ; preds = %171, %175, %166
  %185 = phi i8* [ %168, %166 ], [ %172, %171 ], [ %181, %175 ]
  %186 = add nuw nsw i64 %167, 1
  %187 = icmp eq i64 %186, %38
  br i1 %187, label %218, label %166

188:                                              ; preds = %169, %188
  %189 = phi i8* [ %214, %188 ], [ %170, %169 ]
  %190 = phi i8* [ %215, %188 ], [ %168, %169 ]
  %191 = phi i32 [ %216, %188 ], [ %42, %169 ]
  %192 = load i8, i8* %190, align 1
  store i8 %192, i8* %189, align 1
  %193 = getelementptr inbounds i8, i8* %189, i64 %36
  %194 = getelementptr inbounds i8, i8* %190, i64 1
  %195 = load i8, i8* %194, align 1
  store i8 %195, i8* %193, align 1
  %196 = getelementptr inbounds i8, i8* %193, i64 %36
  %197 = getelementptr inbounds i8, i8* %190, i64 2
  %198 = load i8, i8* %197, align 1
  store i8 %198, i8* %196, align 1
  %199 = getelementptr inbounds i8, i8* %196, i64 %36
  %200 = getelementptr inbounds i8, i8* %190, i64 3
  %201 = load i8, i8* %200, align 1
  store i8 %201, i8* %199, align 1
  %202 = getelementptr inbounds i8, i8* %199, i64 %36
  %203 = getelementptr inbounds i8, i8* %190, i64 4
  %204 = load i8, i8* %203, align 1
  store i8 %204, i8* %202, align 1
  %205 = getelementptr inbounds i8, i8* %202, i64 %36
  %206 = getelementptr inbounds i8, i8* %190, i64 5
  %207 = load i8, i8* %206, align 1
  store i8 %207, i8* %205, align 1
  %208 = getelementptr inbounds i8, i8* %205, i64 %36
  %209 = getelementptr inbounds i8, i8* %190, i64 6
  %210 = load i8, i8* %209, align 1
  store i8 %210, i8* %208, align 1
  %211 = getelementptr inbounds i8, i8* %208, i64 %36
  %212 = getelementptr inbounds i8, i8* %190, i64 7
  %213 = load i8, i8* %212, align 1
  store i8 %213, i8* %211, align 1
  %214 = getelementptr inbounds i8, i8* %211, i64 %36
  %215 = getelementptr inbounds i8, i8* %190, i64 8
  %216 = add i32 %191, -8
  %217 = icmp eq i32 %216, 0
  br i1 %217, label %171, label %188

218:                                              ; preds = %184, %30
  ret void

219:                                              ; preds = %133
  %220 = getelementptr inbounds i8, i8* %108, i64 %20
  %221 = getelementptr inbounds i8, i8* %107, i64 1
  %222 = and i64 %114, 3
  %223 = icmp ult i64 %115, 3
  br i1 %223, label %251, label %224

224:                                              ; preds = %219
  %225 = sub nsw i64 %114, %222
  br label %226

226:                                              ; preds = %226, %224
  %227 = phi i64 [ 0, %224 ], [ %248, %226 ]
  %228 = phi i64 [ %225, %224 ], [ %249, %226 ]
  %229 = getelementptr inbounds i8, i8* %220, i64 %227
  %230 = load i8, i8* %229, align 1
  %231 = mul nsw i64 %227, %23
  %232 = getelementptr inbounds i8, i8* %221, i64 %231
  store i8 %230, i8* %232, align 1
  %233 = or i64 %227, 1
  %234 = getelementptr inbounds i8, i8* %220, i64 %233
  %235 = load i8, i8* %234, align 1
  %236 = mul nsw i64 %233, %23
  %237 = getelementptr inbounds i8, i8* %221, i64 %236
  store i8 %235, i8* %237, align 1
  %238 = or i64 %227, 2
  %239 = getelementptr inbounds i8, i8* %220, i64 %238
  %240 = load i8, i8* %239, align 1
  %241 = mul nsw i64 %238, %23
  %242 = getelementptr inbounds i8, i8* %221, i64 %241
  store i8 %240, i8* %242, align 1
  %243 = or i64 %227, 3
  %244 = getelementptr inbounds i8, i8* %220, i64 %243
  %245 = load i8, i8* %244, align 1
  %246 = mul nsw i64 %243, %23
  %247 = getelementptr inbounds i8, i8* %221, i64 %246
  store i8 %245, i8* %247, align 1
  %248 = add nuw nsw i64 %227, 4
  %249 = add i64 %228, -4
  %250 = icmp eq i64 %249, 0
  br i1 %250, label %251, label %226

251:                                              ; preds = %226, %219
  %252 = phi i64 [ 0, %219 ], [ %248, %226 ]
  %253 = icmp eq i64 %222, 0
  br i1 %253, label %264, label %254

254:                                              ; preds = %251, %254
  %255 = phi i64 [ %261, %254 ], [ %252, %251 ]
  %256 = phi i64 [ %262, %254 ], [ %222, %251 ]
  %257 = getelementptr inbounds i8, i8* %220, i64 %255
  %258 = load i8, i8* %257, align 1
  %259 = mul nsw i64 %255, %23
  %260 = getelementptr inbounds i8, i8* %221, i64 %259
  store i8 %258, i8* %260, align 1
  %261 = add nuw nsw i64 %255, 1
  %262 = add i64 %256, -1
  %263 = icmp eq i64 %262, 0
  br i1 %263, label %264, label %254, !llvm.loop !158

264:                                              ; preds = %254, %251
  br i1 %112, label %265, label %356

265:                                              ; preds = %264
  %266 = getelementptr inbounds i8, i8* %108, i64 %26
  %267 = getelementptr inbounds i8, i8* %107, i64 2
  %268 = and i64 %114, 3
  %269 = icmp ult i64 %115, 3
  br i1 %269, label %297, label %270

270:                                              ; preds = %265
  %271 = sub nsw i64 %114, %268
  br label %272

272:                                              ; preds = %272, %270
  %273 = phi i64 [ 0, %270 ], [ %294, %272 ]
  %274 = phi i64 [ %271, %270 ], [ %295, %272 ]
  %275 = getelementptr inbounds i8, i8* %266, i64 %273
  %276 = load i8, i8* %275, align 1
  %277 = mul nsw i64 %273, %23
  %278 = getelementptr inbounds i8, i8* %267, i64 %277
  store i8 %276, i8* %278, align 1
  %279 = or i64 %273, 1
  %280 = getelementptr inbounds i8, i8* %266, i64 %279
  %281 = load i8, i8* %280, align 1
  %282 = mul nsw i64 %279, %23
  %283 = getelementptr inbounds i8, i8* %267, i64 %282
  store i8 %281, i8* %283, align 1
  %284 = or i64 %273, 2
  %285 = getelementptr inbounds i8, i8* %266, i64 %284
  %286 = load i8, i8* %285, align 1
  %287 = mul nsw i64 %284, %23
  %288 = getelementptr inbounds i8, i8* %267, i64 %287
  store i8 %286, i8* %288, align 1
  %289 = or i64 %273, 3
  %290 = getelementptr inbounds i8, i8* %266, i64 %289
  %291 = load i8, i8* %290, align 1
  %292 = mul nsw i64 %289, %23
  %293 = getelementptr inbounds i8, i8* %267, i64 %292
  store i8 %291, i8* %293, align 1
  %294 = add nuw nsw i64 %273, 4
  %295 = add i64 %274, -4
  %296 = icmp eq i64 %295, 0
  br i1 %296, label %297, label %272

297:                                              ; preds = %272, %265
  %298 = phi i64 [ 0, %265 ], [ %294, %272 ]
  %299 = icmp eq i64 %268, 0
  br i1 %299, label %310, label %300

300:                                              ; preds = %297, %300
  %301 = phi i64 [ %307, %300 ], [ %298, %297 ]
  %302 = phi i64 [ %308, %300 ], [ %268, %297 ]
  %303 = getelementptr inbounds i8, i8* %266, i64 %301
  %304 = load i8, i8* %303, align 1
  %305 = mul nsw i64 %301, %23
  %306 = getelementptr inbounds i8, i8* %267, i64 %305
  store i8 %304, i8* %306, align 1
  %307 = add nuw nsw i64 %301, 1
  %308 = add i64 %302, -1
  %309 = icmp eq i64 %308, 0
  br i1 %309, label %310, label %300, !llvm.loop !159

310:                                              ; preds = %300, %297
  br i1 %112, label %311, label %356

311:                                              ; preds = %310
  %312 = getelementptr inbounds i8, i8* %108, i64 %27
  %313 = getelementptr inbounds i8, i8* %107, i64 3
  %314 = and i64 %114, 3
  %315 = icmp ult i64 %115, 3
  br i1 %315, label %343, label %316

316:                                              ; preds = %311
  %317 = sub nsw i64 %114, %314
  br label %318

318:                                              ; preds = %318, %316
  %319 = phi i64 [ 0, %316 ], [ %340, %318 ]
  %320 = phi i64 [ %317, %316 ], [ %341, %318 ]
  %321 = getelementptr inbounds i8, i8* %312, i64 %319
  %322 = load i8, i8* %321, align 1
  %323 = mul nsw i64 %319, %23
  %324 = getelementptr inbounds i8, i8* %313, i64 %323
  store i8 %322, i8* %324, align 1
  %325 = or i64 %319, 1
  %326 = getelementptr inbounds i8, i8* %312, i64 %325
  %327 = load i8, i8* %326, align 1
  %328 = mul nsw i64 %325, %23
  %329 = getelementptr inbounds i8, i8* %313, i64 %328
  store i8 %327, i8* %329, align 1
  %330 = or i64 %319, 2
  %331 = getelementptr inbounds i8, i8* %312, i64 %330
  %332 = load i8, i8* %331, align 1
  %333 = mul nsw i64 %330, %23
  %334 = getelementptr inbounds i8, i8* %313, i64 %333
  store i8 %332, i8* %334, align 1
  %335 = or i64 %319, 3
  %336 = getelementptr inbounds i8, i8* %312, i64 %335
  %337 = load i8, i8* %336, align 1
  %338 = mul nsw i64 %335, %23
  %339 = getelementptr inbounds i8, i8* %313, i64 %338
  store i8 %337, i8* %339, align 1
  %340 = add nuw nsw i64 %319, 4
  %341 = add i64 %320, -4
  %342 = icmp eq i64 %341, 0
  br i1 %342, label %343, label %318

343:                                              ; preds = %318, %311
  %344 = phi i64 [ 0, %311 ], [ %340, %318 ]
  %345 = icmp eq i64 %314, 0
  br i1 %345, label %356, label %346

346:                                              ; preds = %343, %346
  %347 = phi i64 [ %353, %346 ], [ %344, %343 ]
  %348 = phi i64 [ %354, %346 ], [ %314, %343 ]
  %349 = getelementptr inbounds i8, i8* %312, i64 %347
  %350 = load i8, i8* %349, align 1
  %351 = mul nsw i64 %347, %23
  %352 = getelementptr inbounds i8, i8* %313, i64 %351
  store i8 %350, i8* %352, align 1
  %353 = add nuw nsw i64 %347, 1
  %354 = add i64 %348, -1
  %355 = icmp eq i64 %354, 0
  br i1 %355, label %356, label %346, !llvm.loop !160

356:                                              ; preds = %343, %346, %110, %133, %264, %310
  %357 = sub i32 %24, %106
  br label %159
}

; Function Attrs: inaccessiblemem_or_argmemonly nounwind
declare void @llvm.prefetch(i8* nocapture readonly, i32 immarg, i32 immarg, i32) #8

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { inaccessiblemem_or_argmemonly nounwind }
attributes #9 = { nounwind }
attributes #10 = { builtin nounwind }
attributes #11 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = distinct !{!2, !3}
!3 = !{!"llvm.loop.unroll.disable"}
!4 = distinct !{!4, !3}
!5 = !{!6}
!6 = distinct !{!6, !7}
!7 = distinct !{!7, !"LVerDomain"}
!8 = !{!9}
!9 = distinct !{!9, !7}
!10 = distinct !{!10, !11}
!11 = !{!"llvm.loop.isvectorized", i32 1}
!12 = distinct !{!12, !3}
!13 = distinct !{!13, !11}
!14 = !{!15}
!15 = distinct !{!15, !16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!16 = distinct !{!16, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!17 = !{!18}
!18 = distinct !{!18, !19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!19 = distinct !{!19, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!20 = !{!21}
!21 = distinct !{!21, !22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!22 = distinct !{!22, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!23 = !{!24}
!24 = distinct !{!24, !25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!25 = distinct !{!25, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!26 = !{!27}
!27 = distinct !{!27, !28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!28 = distinct !{!28, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!29 = !{!30}
!30 = distinct !{!30, !31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!31 = distinct !{!31, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!32 = !{!33}
!33 = distinct !{!33, !34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!34 = distinct !{!34, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!35 = !{!36}
!36 = distinct !{!36, !37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!37 = distinct !{!37, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!38 = distinct !{!38, !3}
!39 = !{!40}
!40 = distinct !{!40, !41}
!41 = distinct !{!41, !"LVerDomain"}
!42 = !{!43}
!43 = distinct !{!43, !41}
!44 = distinct !{!44, !11}
!45 = distinct !{!45, !3}
!46 = distinct !{!46, !11}
!47 = !{!48}
!48 = distinct !{!48, !49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!49 = distinct !{!49, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!50 = !{!51}
!51 = distinct !{!51, !52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!52 = distinct !{!52, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!53 = !{!54}
!54 = distinct !{!54, !55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!55 = distinct !{!55, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!56 = !{!57}
!57 = distinct !{!57, !58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!58 = distinct !{!58, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!59 = !{!60}
!60 = distinct !{!60, !61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!61 = distinct !{!61, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!62 = !{!63}
!63 = distinct !{!63, !64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!64 = distinct !{!64, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!65 = !{!66}
!66 = distinct !{!66, !67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!67 = distinct !{!67, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!68 = !{!69}
!69 = distinct !{!69, !70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor: argument 0"}
!70 = distinct !{!70, !"_ZN6tflite14GetTensorShapeEPK12TfLiteTensor"}
!71 = !{!72}
!72 = distinct !{!72, !73, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!73 = distinct !{!73, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!74 = distinct !{!74, !11}
!75 = distinct !{!75, !3}
!76 = distinct !{!76, !77, !11}
!77 = !{!"llvm.loop.unroll.runtime.disable"}
!78 = !{!79}
!79 = distinct !{!79, !80, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!80 = distinct !{!80, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!81 = distinct !{!81, !11}
!82 = distinct !{!82, !3}
!83 = distinct !{!83, !77, !11}
!84 = !{!85}
!85 = distinct !{!85, !86}
!86 = distinct !{!86, !"LVerDomain"}
!87 = !{!88}
!88 = distinct !{!88, !86}
!89 = distinct !{!89, !11}
!90 = distinct !{!90, !11}
!91 = !{!92}
!92 = distinct !{!92, !93, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!93 = distinct !{!93, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!94 = distinct !{!94, !11}
!95 = distinct !{!95, !3}
!96 = distinct !{!96, !77, !11}
!97 = !{!98}
!98 = distinct !{!98, !99, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!99 = distinct !{!99, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!100 = distinct !{!100, !11}
!101 = distinct !{!101, !3}
!102 = distinct !{!102, !77, !11}
!103 = !{!104}
!104 = distinct !{!104, !105}
!105 = distinct !{!105, !"LVerDomain"}
!106 = !{!107}
!107 = distinct !{!107, !105}
!108 = distinct !{!108, !11}
!109 = distinct !{!109, !11}
!110 = !{!111}
!111 = distinct !{!111, !112, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!112 = distinct !{!112, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!113 = distinct !{!113, !11}
!114 = distinct !{!114, !3}
!115 = distinct !{!115, !77, !11}
!116 = !{!117}
!117 = distinct !{!117, !118, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_: argument 0"}
!118 = distinct !{!118, !"_ZN6tflite12RuntimeShape13ExtendedShapeEiRKS0_"}
!119 = distinct !{!119, !11}
!120 = distinct !{!120, !3}
!121 = distinct !{!121, !77, !11}
!122 = !{!123}
!123 = distinct !{!123, !124}
!124 = distinct !{!124, !"LVerDomain"}
!125 = !{!126}
!126 = distinct !{!126, !124}
!127 = distinct !{!127, !11}
!128 = distinct !{!128, !11}
!129 = distinct !{!129, !11}
!130 = distinct !{!130, !3}
!131 = distinct !{!131, !77, !11}
!132 = distinct !{!132, !11}
!133 = distinct !{!133, !3}
!134 = distinct !{!134, !77, !11}
!135 = distinct !{!135, !11}
!136 = distinct !{!136, !3}
!137 = distinct !{!137, !77, !11}
!138 = distinct !{!138, !11}
!139 = distinct !{!139, !3}
!140 = distinct !{!140, !77, !11}
!141 = distinct !{!141, !3}
!142 = !{!143}
!143 = distinct !{!143, !144}
!144 = distinct !{!144, !"LVerDomain"}
!145 = !{!146}
!146 = distinct !{!146, !144}
!147 = distinct !{!147, !11}
!148 = distinct !{!148, !11}
!149 = !{!150}
!150 = distinct !{!150, !151}
!151 = distinct !{!151, !"LVerDomain"}
!152 = !{!153}
!153 = distinct !{!153, !151}
!154 = distinct !{!154, !11}
!155 = distinct !{!155, !11}
!156 = distinct !{!156, !3}
!157 = distinct !{!157, !3}
!158 = distinct !{!158, !3}
!159 = distinct !{!159, !3}
!160 = distinct !{!160, !3}
