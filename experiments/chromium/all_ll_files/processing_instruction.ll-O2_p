; ModuleID = '../../third_party/blink/renderer/core/dom/processing_instruction.cc'
source_filename = "../../third_party/blink/renderer/core/dom/processing_instruction.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.WTF::AtomicString" = type { %"class.WTF::String" }
%"class.WTF::String" = type { %class.scoped_refptr.6 }
%class.scoped_refptr.6 = type { %"class.WTF::StringImpl"* }
%"class.WTF::StringImpl" = type { i32, i32, %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.7" }
%"struct.std::__1::__atomic_base.7" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"struct.url::Component" = type { i32, i32 }
%"struct.url::Parsed" = type { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, %"struct.url::Parsed"* }
%"class.std::__1::unique_ptr.29" = type { %"class.std::__1::__compressed_pair.30" }
%"class.std::__1::__compressed_pair.30" = type { %"struct.std::__1::__compressed_pair_elem.31" }
%"struct.std::__1::__compressed_pair_elem.31" = type { %"class.blink::KURL"* }
%"class.blink::KURL" = type { i8, i8, %"class.WTF::String", %"struct.url::Parsed", %"class.WTF::String", %"class.std::__1::unique_ptr.29" }
%"class.base::TimeDelta" = type { i64 }
%"class.url::SchemeHostPort" = type <{ %"class.std::__1::basic_string", %"class.std::__1::basic_string", i16, [6 x i8] }>
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.40" }
%"class.std::__1::__compressed_pair.40" = type { %"struct.std::__1::__compressed_pair_elem.41" }
%"struct.std::__1::__compressed_pair_elem.41" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.42 }
%union.anon.42 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%union.anon.66 = type { %"class.url::Origin::Nonce" }
%"class.url::Origin::Nonce" = type { %"class.base::UnguessableToken" }
%class.scoped_refptr.67 = type { %"class.blink::SecurityOrigin"* }
%"class.blink::SecurityOrigin" = type { %"class.WTF::RefCounted.406", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i16, %"class.absl::optional.62", i8, i8, i8, i8, i8, i8, %"class.base::UnguessableToken", %class.scoped_refptr.67 }
%"class.WTF::RefCounted.406" = type { %"class.base::RefCounted.407" }
%"class.base::RefCounted.407" = type { %"class.base::subtle::RefCountedBase" }
%"class.base::subtle::RefCountedBase" = type { i32 }
%"class.absl::optional.62" = type { %"class.absl::optional_internal::optional_data.63" }
%"class.absl::optional_internal::optional_data.63" = type { %"class.absl::optional_internal::optional_data_base.64" }
%"class.absl::optional_internal::optional_data_base.64" = type { %"class.absl::optional_internal::optional_data_dtor_base.65" }
%"class.absl::optional_internal::optional_data_dtor_base.65" = type { i8, %union.anon.66 }
%"class.blink::HTTPHeaderMap" = type { %"class.WTF::HashMap" }
%"class.WTF::HashMap" = type { %"class.WTF::HashTable" }
%"class.WTF::HashTable" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair" = type { %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%class.scoped_refptr.70 = type { %"class.blink::WebURLRequestExtraData"* }
%"class.blink::WebURLRequestExtraData" = type { i32 (...)**, %"class.base::RefCounted.71", i8, i32, i8, i8, %"class.blink::WebString", %"class.blink::WebVector", %class.scoped_refptr.78, i8, %"class.url::Origin" }
%"class.base::RefCounted.71" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::WebString" = type { %class.scoped_refptr.6 }
%"class.blink::WebVector" = type { %"class.std::__1::vector" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.std::__1::unique_ptr.72"*, %"class.std::__1::unique_ptr.72"*, %"class.std::__1::__compressed_pair.73" }
%"class.std::__1::unique_ptr.72" = type { %"class.std::__1::__compressed_pair.1487" }
%"class.std::__1::__compressed_pair.1487" = type { %"struct.std::__1::__compressed_pair_elem.1488" }
%"struct.std::__1::__compressed_pair_elem.1488" = type { %"class.blink::URLLoaderThrottle"* }
%"class.blink::URLLoaderThrottle" = type { i32 (...)**, %"class.blink::URLLoaderThrottle::Delegate"* }
%"class.blink::URLLoaderThrottle::Delegate" = type { i32 (...)** }
%"class.std::__1::__compressed_pair.73" = type { %"struct.std::__1::__compressed_pair_elem.74" }
%"struct.std::__1::__compressed_pair_elem.74" = type { %"class.std::__1::unique_ptr.72"* }
%class.scoped_refptr.78 = type { %"class.blink::WebFrameRequestBlocker"* }
%"class.blink::WebFrameRequestBlocker" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe", [4 x i8] }>
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic.79" }
%"struct.std::__1::atomic.79" = type { %"struct.std::__1::__atomic_base.80" }
%"struct.std::__1::__atomic_base.80" = type { %"struct.std::__1::__atomic_base.81" }
%"struct.std::__1::__atomic_base.81" = type { %"struct.std::__1::__cxx_atomic_impl.82" }
%"struct.std::__1::__cxx_atomic_impl.82" = type { %"struct.std::__1::__cxx_atomic_base_impl.83" }
%"struct.std::__1::__cxx_atomic_base_impl.83" = type { i32 }
%"class.url::Origin" = type { %"class.url::SchemeHostPort", %"class.absl::optional.62" }
%"class.WTF::Vector.94" = type { %"class.WTF::VectorBuffer.95" }
%"class.WTF::VectorBuffer.95" = type { %"class.WTF::VectorBufferBase.96" }
%"class.WTF::VectorBufferBase.96" = type { %class.scoped_refptr.67*, i32, i32 }
%"class.WTF::Vector.54" = type { %"class.WTF::VectorBuffer.55" }
%"class.WTF::VectorBuffer.55" = type { %"class.WTF::VectorBufferBase.56" }
%"class.WTF::VectorBufferBase.56" = type { %"class.WTF::String"*, i32, i32 }
%union.anon.108 = type { %"class.base::TimeDelta" }
%union.anon.103 = type { %"class.WTF::String" }
%"class.base::UnguessableToken" = type { %"class.base::Token" }
%"class.base::Token" = type { i64, i64 }
%union.anon.113 = type { %"class.base::UnguessableToken" }
%"class.mojo::PendingRemote" = type { %"struct.mojo::internal::PendingRemoteState" }
%"struct.mojo::internal::PendingRemoteState" = type { %"class.mojo::ScopedHandleBase", i32 }
%"class.mojo::ScopedHandleBase" = type { %"class.mojo::MessagePipeHandle" }
%"class.mojo::MessagePipeHandle" = type { %"class.mojo::Handle" }
%"class.mojo::Handle" = type { i32 }
%class.scoped_refptr.119 = type { %"class.base::RefCountedData"* }
%"class.base::RefCountedData" = type { %"class.base::RefCountedThreadSafe.1492", %"class.base::internal::flat_tree" }
%"class.base::RefCountedThreadSafe.1492" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.1493" }
%"class.std::__1::vector.1493" = type { %"class.std::__1::__vector_base.1494" }
%"class.std::__1::__vector_base.1494" = type { i32*, i32*, %"class.std::__1::__compressed_pair.1495" }
%"class.std::__1::__compressed_pair.1495" = type { %"struct.std::__1::__compressed_pair_elem.1496" }
%"struct.std::__1::__compressed_pair_elem.1496" = type { i32* }
%"class.blink::ResourceRequestBody" = type { %class.scoped_refptr.1425, %"class.mojo::PendingRemote.1426" }
%class.scoped_refptr.1425 = type { %"class.blink::EncodedFormData"* }
%"class.blink::EncodedFormData" = type opaque
%"class.mojo::PendingRemote.1426" = type { %"struct.mojo::internal::PendingRemoteState" }
%"class.WTF::TextEncoding" = type { i8* }
%"class.WTF::TextPosition" = type { %"class.WTF::OrdinalNumber", %"class.WTF::OrdinalNumber" }
%"class.WTF::OrdinalNumber" = type { i32 }
%"class.base::StrongAlias" = type { i8 }
%"class.WTF::HashSet.165" = type { %"class.WTF::HashTable.166" }
%"class.WTF::HashTable.166" = type <{ %"struct.std::__1::pair"*, i32, i32, i32, [4 x i8] }>
%"struct.std::__1::pair" = type <{ %"class.WTF::String", i8, [7 x i8] }>
%class.scoped_refptr.169 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::DOMWrapperWorld" = type { %"class.WTF::RefCounted.170", i32, i32, %"class.blink::Persistent" }
%"class.WTF::RefCounted.170" = type { %"class.base::RefCounted.171" }
%"class.base::RefCounted.171" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Persistent" = type { %"class.blink::PersistentBase" }
%"class.blink::PersistentBase" = type { %"class.blink::DOMDataStore"*, %"class.blink::PersistentNodePtr" }
%"class.blink::DOMDataStore" = type { i32 (...)**, i8, [7 x i8], %"class.blink::HeapHashMap" }
%"class.blink::HeapHashMap" = type { %"class.WTF::HashMap.176" }
%"class.WTF::HashMap.176" = type { %"class.WTF::HashTable.177" }
%"class.WTF::HashTable.177" = type <{ %"struct.WTF::KeyValuePair.179"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.179" = type { %"class.blink::WeakMember.180", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::WeakMember.180" = type { %"class.blink::MemberBase.181" }
%"class.blink::MemberBase.181" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::ScriptWrappable" = type { %"class.blink::NameClient", %"class.blink::TraceWrapperV8Reference" }
%"class.blink::NameClient" = type { i32 (...)** }
%"class.blink::TraceWrapperV8Reference" = type { %"class.v8::TracedReference" }
%"class.v8::TracedReference" = type { %"class.v8::BasicTracedReference" }
%"class.v8::BasicTracedReference" = type { %"class.v8::TracedReferenceBase" }
%"class.v8::TracedReferenceBase" = type { i64* }
%"class.blink::PersistentNodePtr" = type { %"class.blink::PersistentNode"* }
%"class.blink::PersistentNode" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Visitor" = type { i32 (...)**, %"class.blink::ThreadState"* }
%"class.blink::ThreadState" = type <{ %"class.std::__1::unique_ptr.182", i32, [4 x i8], %"class.std::__1::unique_ptr.320", %"class.std::__1::unique_ptr.320", i8**, i8, i8, i8, i8, i8, i8, [2 x i8], i64, i64, i32, i32, i32, [4 x i8], %"class.WTF::Deque", %"class.v8::Isolate"*, void (%"class.v8::Isolate"*, %"class.v8::EmbedderGraph"*, i8*)*, %"class.std::__1::unique_ptr.331", %"class.std::__1::unique_ptr.337", %"struct.blink::ThreadState::GCData", %"class.std::__1::unique_ptr.349", %"class.std::__1::unique_ptr.355", %"class.base::JobHandle", %"class.base::JobHandle", %"struct.std::__1::atomic.362", [7 x i8], i64, i8, [7 x i8], i64, %"class.base::TimeTicks", i8, i8, [6 x i8] }>
%"class.std::__1::unique_ptr.182" = type { %"class.std::__1::__compressed_pair.183" }
%"class.std::__1::__compressed_pair.183" = type { %"struct.std::__1::__compressed_pair_elem.184" }
%"struct.std::__1::__compressed_pair_elem.184" = type { %"class.blink::ThreadHeap"* }
%"class.blink::ThreadHeap" = type { %"class.blink::ThreadState"*, %"class.std::__1::unique_ptr.185", %"class.std::__1::unique_ptr.191", %"class.std::__1::unique_ptr.197", %"class.std::__1::unique_ptr.203", %"class.std::__1::unique_ptr.209", %"class.std::__1::unique_ptr.215", %"class.std::__1::unique_ptr.226", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.233", %"class.std::__1::unique_ptr.240", %"class.std::__1::unique_ptr.247", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.254", %"class.std::__1::unique_ptr.261", %"class.std::__1::unique_ptr.268", %"class.std::__1::unique_ptr.275", %"class.std::__1::unique_ptr.300", %"struct.blink::ThreadHeap::LastAllocatedRegion", [9 x %"class.blink::BaseArena"*], i64, i64 }
%"class.std::__1::unique_ptr.185" = type { %"class.std::__1::__compressed_pair.186" }
%"class.std::__1::__compressed_pair.186" = type { %"struct.std::__1::__compressed_pair_elem.187" }
%"struct.std::__1::__compressed_pair_elem.187" = type { %"class.blink::ThreadHeapStatsCollector"* }
%"class.blink::ThreadHeapStatsCollector" = type opaque
%"class.std::__1::unique_ptr.191" = type { %"class.std::__1::__compressed_pair.192" }
%"class.std::__1::__compressed_pair.192" = type { %"struct.std::__1::__compressed_pair_elem.193" }
%"struct.std::__1::__compressed_pair_elem.193" = type { %"class.blink::RegionTree"* }
%"class.blink::RegionTree" = type opaque
%"class.std::__1::unique_ptr.197" = type { %"class.std::__1::__compressed_pair.198" }
%"class.std::__1::__compressed_pair.198" = type { %"struct.std::__1::__compressed_pair_elem.199" }
%"struct.std::__1::__compressed_pair_elem.199" = type { %"class.blink::PageBloomFilter"* }
%"class.blink::PageBloomFilter" = type opaque
%"class.std::__1::unique_ptr.203" = type { %"class.std::__1::__compressed_pair.204" }
%"class.std::__1::__compressed_pair.204" = type { %"struct.std::__1::__compressed_pair_elem.205" }
%"struct.std::__1::__compressed_pair_elem.205" = type { %"class.blink::PagePool"* }
%"class.blink::PagePool" = type opaque
%"class.std::__1::unique_ptr.209" = type { %"class.std::__1::__compressed_pair.210" }
%"class.std::__1::__compressed_pair.210" = type { %"struct.std::__1::__compressed_pair_elem.211" }
%"struct.std::__1::__compressed_pair_elem.211" = type { %"class.blink::ProcessHeapReporter"* }
%"class.blink::ProcessHeapReporter" = type opaque
%"class.std::__1::unique_ptr.215" = type { %"class.std::__1::__compressed_pair.216" }
%"class.std::__1::__compressed_pair.216" = type { %"struct.std::__1::__compressed_pair_elem.217" }
%"struct.std::__1::__compressed_pair_elem.217" = type { %"class.blink::Worklist"* }
%"class.blink::Worklist" = type { [4 x %"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::TraceDescriptor, 512, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment" = type { %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, i64, [512 x %"struct.blink::TraceDescriptor"] }
%"struct.blink::TraceDescriptor" = type { i8*, void (%"class.blink::Visitor"*, i8*)* }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.base::Lock" = type { %"class.base::internal::LockImpl" }
%"class.base::internal::LockImpl" = type { %union.pthread_mutex_t }
%union.pthread_mutex_t = type { %struct.__pthread_mutex_s }
%struct.__pthread_mutex_s = type { i32, i32, i32, i32, i32, i16, i16, %struct.__pthread_internal_list }
%struct.__pthread_internal_list = type { %struct.__pthread_internal_list*, %struct.__pthread_internal_list* }
%"struct.std::__1::atomic.218" = type { %"struct.std::__1::__atomic_base.219" }
%"struct.std::__1::__atomic_base.219" = type { %"struct.std::__1::__atomic_base.220" }
%"struct.std::__1::__atomic_base.220" = type { %"struct.std::__1::__cxx_atomic_impl.221" }
%"struct.std::__1::__cxx_atomic_impl.221" = type { %"struct.std::__1::__cxx_atomic_base_impl.222" }
%"struct.std::__1::__cxx_atomic_base_impl.222" = type { i64 }
%"class.std::__1::unique_ptr.226" = type { %"class.std::__1::__compressed_pair.227" }
%"class.std::__1::__compressed_pair.227" = type { %"struct.std::__1::__compressed_pair_elem.228" }
%"struct.std::__1::__compressed_pair_elem.228" = type { %"class.blink::Worklist.229"* }
%"class.blink::Worklist.229" = type { [4 x %"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.233" = type { %"class.std::__1::__compressed_pair.234" }
%"class.std::__1::__compressed_pair.234" = type { %"struct.std::__1::__compressed_pair_elem.235" }
%"struct.std::__1::__compressed_pair_elem.235" = type { %"class.blink::Worklist.236"* }
%"class.blink::Worklist.236" = type { [4 x %"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"class.blink::Worklist<const void *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *, 16, 4>::Segment" = type { %"class.blink::Worklist<const void *, 16, 4>::Segment"*, i64, [16 x i8*] }
%"class.blink::Worklist<const void *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *, 16, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.240" = type { %"class.std::__1::__compressed_pair.241" }
%"class.std::__1::__compressed_pair.241" = type { %"struct.std::__1::__compressed_pair_elem.242" }
%"struct.std::__1::__compressed_pair_elem.242" = type { %"class.blink::Worklist.243"* }
%"class.blink::Worklist.243" = type { [4 x %"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::CustomCallbackItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.247" = type { %"class.std::__1::__compressed_pair.248" }
%"class.std::__1::__compressed_pair.248" = type { %"struct.std::__1::__compressed_pair_elem.249" }
%"struct.std::__1::__compressed_pair_elem.249" = type { %"class.blink::Worklist.250"* }
%"class.blink::Worklist.250" = type { [4 x %"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" }
%"struct.blink::Worklist<const void *const *, 256, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const void *const *, 256, 4>::Segment" = type opaque
%"class.blink::Worklist<const void *const *, 256, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const void *const *, 256, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.254" = type { %"class.std::__1::__compressed_pair.255" }
%"class.std::__1::__compressed_pair.255" = type { %"struct.std::__1::__compressed_pair_elem.256" }
%"struct.std::__1::__compressed_pair_elem.256" = type { %"class.blink::Worklist.257"* }
%"class.blink::Worklist.257" = type { [4 x %"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::EphemeronPairItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment" = type opaque
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.261" = type { %"class.std::__1::__compressed_pair.262" }
%"class.std::__1::__compressed_pair.262" = type { %"struct.std::__1::__compressed_pair_elem.263" }
%"struct.std::__1::__compressed_pair_elem.263" = type { %"class.blink::Worklist.264"* }
%"class.blink::Worklist.264" = type { [4 x %"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" }
%"struct.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment" = type opaque
%"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<const blink::TraceWrapperV8Reference<v8::Value> *, 16, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.268" = type { %"class.std::__1::__compressed_pair.269" }
%"class.std::__1::__compressed_pair.269" = type { %"struct.std::__1::__compressed_pair_elem.270" }
%"struct.std::__1::__compressed_pair_elem.270" = type { %"class.blink::Worklist.271"* }
%"class.blink::Worklist.271" = type { [4 x %"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder"], %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" }
%"struct.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::PrivateSegmentHolder" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, [64 x i8] }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment" = type { %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, i64, [64 x %"struct.blink::NotSafeToConcurrentlyTraceItem"] }
%"struct.blink::NotSafeToConcurrentlyTraceItem" = type { %"struct.blink::TraceDescriptor", i64 }
%"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::GlobalPool" = type { %"class.base::Lock", %"class.blink::Worklist<blink::NotSafeToConcurrentlyTraceItem, 64, 4>::Segment"*, %"struct.std::__1::atomic.218" }
%"class.std::__1::unique_ptr.275" = type { %"class.std::__1::__compressed_pair.276" }
%"class.std::__1::__compressed_pair.276" = type { %"struct.std::__1::__compressed_pair_elem.277" }
%"struct.std::__1::__compressed_pair_elem.277" = type { %"class.blink::WeakContainersWorklist"* }
%"class.blink::WeakContainersWorklist" = type { %"class.WTF::Mutex", %"class.std::__1::unordered_set" }
%"class.WTF::Mutex" = type { %"class.WTF::MutexBase" }
%"class.WTF::MutexBase" = type { %"struct.WTF::PlatformMutex" }
%"struct.WTF::PlatformMutex" = type { %union.pthread_mutex_t }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.278", %"class.std::__1::__compressed_pair.287", %"class.std::__1::__compressed_pair.292", %"class.std::__1::__compressed_pair.294", [4 x i8] }>
%"class.std::__1::unique_ptr.278" = type { %"class.std::__1::__compressed_pair.279" }
%"class.std::__1::__compressed_pair.279" = type { %"struct.std::__1::__compressed_pair_elem.280", %"struct.std::__1::__compressed_pair_elem.281" }
%"struct.std::__1::__compressed_pair_elem.280" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.281" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.282" }
%"class.std::__1::__compressed_pair.282" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"struct.std::__1::__compressed_pair_elem.283" = type { i64 }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.292" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { float }
%"class.std::__1::unique_ptr.300" = type { %"class.std::__1::__compressed_pair.301" }
%"class.std::__1::__compressed_pair.301" = type { %"struct.std::__1::__compressed_pair_elem.302" }
%"struct.std::__1::__compressed_pair_elem.302" = type { %"class.blink::HeapCompact"* }
%"class.blink::HeapCompact" = type <{ %"class.blink::ThreadHeap"*, %"class.std::__1::unique_ptr.303", i8, [7 x i8], i64, i64, i32, [4 x i8], i64, i8, [7 x i8] }>
%"class.std::__1::unique_ptr.303" = type { %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.305" }
%"struct.std::__1::__compressed_pair_elem.305" = type { %"class.blink::HeapCompact::MovableObjectFixups"* }
%"class.blink::HeapCompact::MovableObjectFixups" = type opaque
%"struct.blink::ThreadHeap::LastAllocatedRegion" = type { i8*, i64 }
%"class.blink::BaseArena" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32, [4 x i8] }>
%"class.blink::PageStackThreadSafe" = type { %"class.blink::PageStack", %"class.WTF::Mutex" }
%"class.blink::PageStack" = type { %"class.WTF::Vector.312" }
%"class.WTF::Vector.312" = type { %"class.WTF::VectorBuffer.313" }
%"class.WTF::VectorBuffer.313" = type { %"class.WTF::VectorBufferBase.314" }
%"class.WTF::VectorBufferBase.314" = type { %"class.blink::BasePage"**, i32, i32 }
%"class.blink::BasePage" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8, [5 x i8] }>
%"class.blink::PageMemory" = type opaque
%"class.std::__1::unique_ptr.320" = type { %"class.std::__1::__compressed_pair.321" }
%"class.std::__1::__compressed_pair.321" = type { %"struct.std::__1::__compressed_pair_elem.322" }
%"struct.std::__1::__compressed_pair_elem.322" = type { %"class.blink::PersistentRegion"* }
%"class.blink::PersistentRegion" = type { %"class.blink::PersistentRegionBase" }
%"class.blink::PersistentRegionBase" = type { %"class.blink::PersistentNode"*, %"struct.blink::PersistentNodeSlots"* }
%"struct.blink::PersistentNodeSlots" = type { %"struct.blink::PersistentNodeSlots"*, [256 x %"class.blink::PersistentNode"] }
%"class.WTF::Deque" = type { %"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer", i32, i32 }
%"class.WTF::Deque<std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>, 0, WTF::PartitionAllocator>::BackingBuffer" = type { %"class.WTF::VectorBuffer.328" }
%"class.WTF::VectorBuffer.328" = type { %"class.WTF::VectorBufferBase.329" }
%"class.WTF::VectorBufferBase.329" = type { %"struct.std::__1::pair.330"*, i32, i32 }
%"struct.std::__1::pair.330" = type { i8*, i1 (%"class.blink::LivenessBroker"*, i8*)* }
%"class.blink::LivenessBroker" = type { i8 }
%"class.v8::Isolate" = type { i8 }
%"class.v8::EmbedderGraph" = type opaque
%"class.std::__1::unique_ptr.331" = type { %"class.std::__1::__compressed_pair.332" }
%"class.std::__1::__compressed_pair.332" = type { %"struct.std::__1::__compressed_pair_elem.333" }
%"struct.std::__1::__compressed_pair_elem.333" = type { %"class.blink::UnifiedHeapController"* }
%"class.blink::UnifiedHeapController" = type opaque
%"class.std::__1::unique_ptr.337" = type { %"class.std::__1::__compressed_pair.338" }
%"class.std::__1::__compressed_pair.338" = type { %"struct.std::__1::__compressed_pair_elem.339" }
%"struct.std::__1::__compressed_pair_elem.339" = type { %"class.v8::EmbedderRootsHandler"* }
%"class.v8::EmbedderRootsHandler" = type { i32 (...)** }
%"struct.blink::ThreadState::GCData" = type { i32, i32, i32, i32, %"class.std::__1::unique_ptr.343" }
%"class.std::__1::unique_ptr.343" = type { %"class.std::__1::__compressed_pair.344" }
%"class.std::__1::__compressed_pair.344" = type { %"struct.std::__1::__compressed_pair_elem.345" }
%"struct.std::__1::__compressed_pair_elem.345" = type { %"class.blink::MarkingVisitor"* }
%"class.blink::MarkingVisitor" = type { %"class.blink::MarkingVisitorBase", %"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" }
%"class.blink::MarkingVisitorBase" = type { %"class.blink::Visitor", %"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View", %"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View", %"class.blink::Worklist<const void *, 16, 4>::View", %"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View", %"class.blink::Worklist<const void *const *, 256, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View", %"class.blink::WeakContainersWorklist"*, i64, i32, i32 }
%"class.blink::Worklist<blink::TraceDescriptor, 512, 4>::View" = type <{ %"class.blink::Worklist"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::HeapObjectHeader *, 64, 4>::View" = type <{ %"class.blink::Worklist.229"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *, 16, 4>::View" = type <{ %"class.blink::Worklist.236"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::CustomCallbackItem, 64, 4>::View" = type <{ %"class.blink::Worklist.243"*, i32, [4 x i8] }>
%"class.blink::Worklist<const void *const *, 256, 4>::View" = type <{ %"class.blink::Worklist.250"*, i32, [4 x i8] }>
%"class.blink::Worklist<blink::EphemeronPairItem, 64, 4>::View" = type <{ %"class.blink::Worklist.257"*, i32, [4 x i8] }>
%"class.blink::MarkingVisitor::RecentlyRetracedWeakContainers" = type { %"class.std::__1::vector.399", i64 }
%"class.std::__1::vector.399" = type { %"class.std::__1::__vector_base.400" }
%"class.std::__1::__vector_base.400" = type { %"class.blink::HeapObjectHeader"**, %"class.blink::HeapObjectHeader"**, %"class.std::__1::__compressed_pair.401" }
%"class.blink::HeapObjectHeader" = type { i32, i16, i16 }
%"class.std::__1::__compressed_pair.401" = type { %"struct.std::__1::__compressed_pair_elem.402" }
%"struct.std::__1::__compressed_pair_elem.402" = type { %"class.blink::HeapObjectHeader"** }
%"class.std::__1::unique_ptr.349" = type { %"class.std::__1::__compressed_pair.350" }
%"class.std::__1::__compressed_pair.350" = type { %"struct.std::__1::__compressed_pair_elem.351" }
%"struct.std::__1::__compressed_pair_elem.351" = type { %"class.blink::ThreadState::IncrementalMarkingScheduler"* }
%"class.blink::ThreadState::IncrementalMarkingScheduler" = type opaque
%"class.std::__1::unique_ptr.355" = type { %"class.std::__1::__compressed_pair.356" }
%"class.std::__1::__compressed_pair.356" = type { %"struct.std::__1::__compressed_pair_elem.357" }
%"struct.std::__1::__compressed_pair_elem.357" = type { %"class.blink::MarkingSchedulingOracle"* }
%"class.blink::MarkingSchedulingOracle" = type opaque
%"class.base::JobHandle" = type { %class.scoped_refptr.361 }
%class.scoped_refptr.361 = type { %"class.base::internal::JobTaskSource"* }
%"class.base::internal::JobTaskSource" = type opaque
%"struct.std::__1::atomic.362" = type { %"struct.std::__1::__atomic_base.363" }
%"struct.std::__1::__atomic_base.363" = type { %"struct.std::__1::__cxx_atomic_impl.364" }
%"struct.std::__1::__cxx_atomic_impl.364" = type { %"struct.std::__1::__cxx_atomic_base_impl.365" }
%"struct.std::__1::__cxx_atomic_base_impl.365" = type { i8 }
%"class.base::TimeTicks" = type { %"class.base::time_internal::TimeBase" }
%"class.base::time_internal::TimeBase" = type { i64 }
%class.scoped_refptr.366 = type { %"class.base::RefCountedData.367"* }
%"class.base::RefCountedData.367" = type opaque
%class.scoped_refptr.368 = type { %"class.base::RefCountedData.369"* }
%"class.base::RefCountedData.369" = type opaque
%"struct.blink::FetchParameters::ResourceWidth" = type <{ float, i8, [3 x i8] }>
%"class.blink::ClientHintsPreferences" = type { %"struct.blink::WebEnabledClientHints" }
%"struct.blink::WebEnabledClientHints" = type { [16 x i8] }
%"class.WTF::ThreadSpecific" = type { %"class.blink::ThreadState"**, %"class.base::ThreadLocalStorage::Slot" }
%"class.base::ThreadLocalStorage::Slot" = type { i32, i32 }
%"class.blink::GCInfoTable" = type { %"struct.blink::GCInfo"**, i32, i32, %"class.WTF::Mutex" }
%"struct.blink::GCInfo" = type { void (%"class.blink::Visitor"*, i8*)*, void (i8*)*, { i8*, i8 } (i8*)*, i8 }
%"struct.blink::WrapperTypeInfo" = type { i16, void (%"class.v8::Isolate"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Template"*)*, void (%"class.v8::Context"*, %"class.blink::DOMWrapperWorld"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Object"*, %"class.v8::Template"*, i64)*, i8*, %"struct.blink::WrapperTypeInfo"*, i8 }
%"class.v8::Template" = type { i8 }
%"class.v8::Context" = type { i8 }
%"class.v8::Object" = type { i8 }
%"class.blink::AtomicEntryFlag" = type { %"struct.std::__1::atomic.79" }
%"class.blink::ProcessingInstruction" = type { %"class.blink::CharacterData", %"class.blink::ResourceClient.base", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.395", %"class.blink::StyleEngineContext", i8, i8, i8, i8, %"class.blink::Member.397" }
%"class.blink::CharacterData" = type { %"class.blink::Node", i8, %"class.blink::ParkableString", %"class.WTF::String" }
%"class.blink::Node" = type { %"class.blink::EventTarget", i32, %"class.blink::Member", %"class.blink::Member.0", %"class.blink::Member", %"class.blink::Member", %"class.blink::Member.2" }
%"class.blink::EventTarget" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.0" = type { %"class.blink::MemberBase.1" }
%"class.blink::MemberBase.1" = type { %"class.blink::TreeScope"* }
%"class.blink::TreeScope" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.408", %"class.blink::Member.410", %"class.blink::Member.0", %"class.blink::Member.412", %"class.blink::Member.412", %"class.blink::Member.455", %"class.blink::Member.457", %"class.blink::Member.459", %"class.blink::RadioButtonGroupScope", %"class.blink::Member.464", %"class.blink::HeapVector.466" }
%"class.blink::GarbageCollectedMixin" = type { i32 (...)** }
%"class.blink::Member.408" = type { %"class.blink::MemberBase.409" }
%"class.blink::MemberBase.409" = type { %"class.blink::ContainerNode"* }
%"class.blink::ContainerNode" = type { %"class.blink::Node", %"class.blink::Member", %"class.blink::Member" }
%"class.blink::Member.410" = type { %"class.blink::MemberBase.411" }
%"class.blink::MemberBase.411" = type { %"class.blink::Document"* }
%"class.blink::Member.412" = type { %"class.blink::MemberBase.413" }
%"class.blink::MemberBase.413" = type { %"class.blink::TreeOrderedMap"* }
%"class.blink::TreeOrderedMap" = type { %"class.blink::HeapHashMap.416" }
%"class.blink::HeapHashMap.416" = type { %"class.WTF::HashMap.419" }
%"class.WTF::HashMap.419" = type { %"class.WTF::HashTable.420" }
%"class.WTF::HashTable.420" = type <{ %"struct.WTF::KeyValuePair.422"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.422" = type { %"class.WTF::AtomicString", %"class.blink::Member.423" }
%"class.blink::Member.423" = type { %"class.blink::MemberBase.424" }
%"class.blink::MemberBase.424" = type { %"class.blink::TreeOrderedMap::MapEntry"* }
%"class.blink::TreeOrderedMap::MapEntry" = type { %"class.blink::Member.427", i32, %"class.blink::HeapVector" }
%"class.blink::Member.427" = type { %"class.blink::MemberBase.428" }
%"class.blink::MemberBase.428" = type { %"class.blink::Element"* }
%"class.blink::Element" = type { %"class.blink::ContainerNode", %"class.blink::Animatable", %"class.blink::QualifiedName", %"class.blink::Member.432" }
%"class.blink::Animatable" = type { i32 (...)** }
%"class.blink::QualifiedName" = type { %class.scoped_refptr.429 }
%class.scoped_refptr.429 = type { %"class.blink::QualifiedName::QualifiedNameImpl"* }
%"class.blink::QualifiedName::QualifiedNameImpl" = type { %"class.WTF::RefCounted.430", i32, %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.WTF::AtomicString" }
%"class.WTF::RefCounted.430" = type { %"class.base::RefCounted.431" }
%"class.base::RefCounted.431" = type { %"class.base::subtle::RefCountedBase" }
%"class.blink::Member.432" = type { %"class.blink::MemberBase.433" }
%"class.blink::MemberBase.433" = type { %"class.blink::ElementData"* }
%"class.blink::ElementData" = type { %"class.WTF::ConcurrentlyReadBitField.436", %"class.blink::Member.438", %"class.blink::SpaceSplitString", %"class.WTF::AtomicString" }
%"class.WTF::ConcurrentlyReadBitField.436" = type { %"class.WTF::SingleThreadedBitField.437" }
%"class.WTF::SingleThreadedBitField.437" = type { i32 }
%"class.blink::Member.438" = type { %"class.blink::MemberBase.439" }
%"class.blink::MemberBase.439" = type { %"class.blink::CSSPropertyValueSet"* }
%"class.blink::CSSPropertyValueSet" = type { i32 }
%"class.blink::SpaceSplitString" = type { %class.scoped_refptr.442 }
%class.scoped_refptr.442 = type { %"class.blink::SpaceSplitString::Data"* }
%"class.blink::SpaceSplitString::Data" = type { %"class.WTF::RefCounted.443", %"class.WTF::AtomicString", %"class.WTF::Vector.445" }
%"class.WTF::RefCounted.443" = type { %"class.base::RefCounted.444" }
%"class.base::RefCounted.444" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.445" = type { %"class.WTF::VectorBuffer.446" }
%"class.WTF::VectorBuffer.446" = type { %"class.WTF::VectorBufferBase.128", [32 x i8] }
%"class.WTF::VectorBufferBase.128" = type { %"class.WTF::AtomicString"*, i32, i32 }
%"class.blink::HeapVector" = type { %"class.WTF::Vector.451" }
%"class.WTF::Vector.451" = type { %"class.WTF::VectorBuffer.452" }
%"class.WTF::VectorBuffer.452" = type { %"class.WTF::VectorBufferBase.453" }
%"class.WTF::VectorBufferBase.453" = type { %"class.blink::Member.427"*, i32, i32 }
%"class.blink::Member.455" = type { %"class.blink::MemberBase.456" }
%"class.blink::MemberBase.456" = type { %"class.blink::IdTargetObserverRegistry"* }
%"class.blink::IdTargetObserverRegistry" = type opaque
%"class.blink::Member.457" = type { %"class.blink::MemberBase.458" }
%"class.blink::MemberBase.458" = type { %"class.blink::ScopedStyleResolver"* }
%"class.blink::ScopedStyleResolver" = type opaque
%"class.blink::Member.459" = type { %"class.blink::MemberBase.460" }
%"class.blink::MemberBase.460" = type { %"class.blink::DOMSelection"* }
%"class.blink::DOMSelection" = type opaque
%"class.blink::RadioButtonGroupScope" = type { %"class.blink::Member.461" }
%"class.blink::Member.461" = type { %"class.blink::MemberBase.462" }
%"class.blink::MemberBase.462" = type { %"class.blink::HeapHashMap.463"* }
%"class.blink::HeapHashMap.463" = type opaque
%"class.blink::Member.464" = type { %"class.blink::MemberBase.465" }
%"class.blink::MemberBase.465" = type { %"class.blink::SVGTreeScopeResources"* }
%"class.blink::SVGTreeScopeResources" = type opaque
%"class.blink::HeapVector.466" = type { %"class.WTF::Vector.469" }
%"class.WTF::Vector.469" = type { %"class.WTF::VectorBuffer.470" }
%"class.WTF::VectorBuffer.470" = type { %"class.WTF::VectorBufferBase.471" }
%"class.WTF::VectorBufferBase.471" = type { %"class.blink::Member.472"*, i32, i32 }
%"class.blink::Member.472" = type { %"class.blink::MemberBase.473" }
%"class.blink::MemberBase.473" = type { %"class.blink::CSSStyleSheet"* }
%"class.blink::CSSStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member.474", i8, i8, i8, i8, i8, %"class.WTF::String", %class.scoped_refptr.700, %"class.WTF::Vector.591", %"class.WTF::Vector.591", %"class.blink::Member", %"class.blink::Member.701", %"class.blink::HeapHashSet.705", %"class.blink::Member.410", %"class.WTF::HashSet.582", %"class.WTF::TextPosition", %"class.blink::Member.712", %"class.blink::HeapVector.714", %"class.blink::Member.721" }
%"class.blink::StyleSheet" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member.474" = type { %"class.blink::MemberBase.475" }
%"class.blink::MemberBase.475" = type { %"class.blink::StyleSheetContents"* }
%"class.blink::StyleSheetContents" = type <{ %"class.blink::Member.478", %"class.WTF::String", %"class.blink::HeapVector.480", %"class.blink::HeapVector.487", %"class.blink::HeapVector.495", %"class.WTF::HashMap.503", %"class.WTF::AtomicString", %"class.blink::WeakMember.507", i8, [7 x i8], %"class.blink::Member.509", %"class.blink::HeapHashSet.515", %"class.blink::HeapHashSet.515", %"class.blink::Member.522", %"class.WTF::String", i8, [7 x i8] }>
%"class.blink::Member.478" = type { %"class.blink::MemberBase.479" }
%"class.blink::MemberBase.479" = type { %"class.blink::StyleRuleImport"* }
%"class.blink::StyleRuleImport" = type opaque
%"class.blink::HeapVector.480" = type { %"class.WTF::Vector.483" }
%"class.WTF::Vector.483" = type { %"class.WTF::VectorBuffer.484" }
%"class.WTF::VectorBuffer.484" = type { %"class.WTF::VectorBufferBase.485" }
%"class.WTF::VectorBufferBase.485" = type { %"class.blink::Member.478"*, i32, i32 }
%"class.blink::HeapVector.487" = type { %"class.WTF::Vector.490" }
%"class.WTF::Vector.490" = type { %"class.WTF::VectorBuffer.491" }
%"class.WTF::VectorBuffer.491" = type { %"class.WTF::VectorBufferBase.492" }
%"class.WTF::VectorBufferBase.492" = type { %"class.blink::Member.493"*, i32, i32 }
%"class.blink::Member.493" = type opaque
%"class.blink::HeapVector.495" = type { %"class.WTF::Vector.498" }
%"class.WTF::Vector.498" = type { %"class.WTF::VectorBuffer.499" }
%"class.WTF::VectorBuffer.499" = type { %"class.WTF::VectorBufferBase.500" }
%"class.WTF::VectorBufferBase.500" = type { %"class.blink::Member.501"*, i32, i32 }
%"class.blink::Member.501" = type opaque
%"class.WTF::HashMap.503" = type { %"class.WTF::HashTable.504" }
%"class.WTF::HashTable.504" = type <{ %"struct.WTF::KeyValuePair"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.507" = type { %"class.blink::MemberBase.508" }
%"class.blink::MemberBase.508" = type { %"class.blink::CSSStyleSheetResource"* }
%"class.blink::CSSStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String", %"class.blink::Member.474" }
%"class.blink::TextResource" = type { %"class.blink::Resource", %"class.std::__1::unique_ptr.1393" }
%"class.blink::Resource" = type { %"class.blink::MemoryPressureListener", i8, i8, %"class.absl::optional", %"class.base::TimeTicks", i64, i64, i64, %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, %"class.blink::SubresourceIntegrity::ReportInfo", %"class.WTF::Vector.59", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashCountedSet", %"class.blink::HeapHashSet", %"struct.blink::ResourceLoaderOptions", %"class.base::Time", %"class.blink::TaskHandle", %"class.blink::ResourceRequestHead", i64, %"class.blink::Member.371", %"class.blink::ResourceResponse", %class.scoped_refptr.373, %"class.blink::WebScopedVirtualTimePauser", %"class.std::__1::set" }
%"class.blink::MemoryPressureListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.blink::ResourceError" }
%"class.blink::ResourceError" = type { i32, i32, %"struct.net::ResolveErrorInfo", %"class.blink::KURL", %"class.WTF::String", i8, i8, [6 x i8], %"class.absl::optional.35", i8, %"class.absl::optional.44", i32 }
%"struct.net::ResolveErrorInfo" = type <{ i32, i8, [3 x i8] }>
%"class.absl::optional.35" = type { %"class.absl::optional_internal::optional_data.36" }
%"class.absl::optional_internal::optional_data.36" = type { %"class.absl::optional_internal::optional_data_base.37" }
%"class.absl::optional_internal::optional_data_base.37" = type { %"class.absl::optional_internal::optional_data_dtor_base.38" }
%"class.absl::optional_internal::optional_data_dtor_base.38" = type { i8, [7 x i8], %union.anon.39 }
%union.anon.39 = type { %"struct.network::CorsErrorStatus" }
%"struct.network::CorsErrorStatus" = type <{ i32, [4 x i8], %"class.std::__1::basic_string", i32, i8, [3 x i8] }>
%"class.absl::optional.44" = type { %"class.absl::optional_internal::optional_data.45" }
%"class.absl::optional_internal::optional_data.45" = type { %"class.absl::optional_internal::optional_data_base.46" }
%"class.absl::optional_internal::optional_data_base.46" = type { %"class.absl::optional_internal::optional_data_dtor_base.47" }
%"class.absl::optional_internal::optional_data_dtor_base.47" = type { i8, %union.anon.48 }
%union.anon.48 = type { i32 }
%"class.blink::SubresourceIntegrity::ReportInfo" = type { %"class.WTF::Vector.49", %"class.WTF::Vector.54" }
%"class.WTF::Vector.49" = type { %"class.WTF::VectorBuffer.50" }
%"class.WTF::VectorBuffer.50" = type { %"class.WTF::VectorBufferBase.51" }
%"class.WTF::VectorBufferBase.51" = type { i32*, i32, i32 }
%"class.WTF::Vector.59" = type { %"class.WTF::VectorBuffer.60" }
%"class.WTF::VectorBuffer.60" = type { %"class.WTF::VectorBufferBase.61" }
%"class.WTF::VectorBufferBase.61" = type { %"struct.blink::Resource::RedirectPair"*, i32, i32 }
%"struct.blink::Resource::RedirectPair" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceResponse" }
%"class.blink::HeapHashCountedSet" = type { %"class.WTF::HashCountedSet" }
%"class.WTF::HashCountedSet" = type { %"class.WTF::HashMap.157" }
%"class.WTF::HashMap.157" = type { %"class.WTF::HashTable.158" }
%"class.WTF::HashTable.158" = type <{ %"struct.WTF::KeyValuePair.160"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.160" = type <{ %"class.blink::WeakMember.1500", i32, [4 x i8] }>
%"class.blink::WeakMember.1500" = type { %"class.blink::MemberBase.1501" }
%"class.blink::MemberBase.1501" = type { %"class.blink::ResourceClient"* }
%"class.blink::ResourceClient" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.25", i8, [7 x i8] }>
%"class.blink::ThreadState::PrefinalizerRegistration" = type { i8 }
%"class.blink::Member.25" = type { %"class.blink::MemberBase.26" }
%"class.blink::MemberBase.26" = type { %"class.blink::Resource"* }
%"class.blink::HeapHashSet" = type { %"class.WTF::HashSet" }
%"class.WTF::HashSet" = type { %"class.WTF::HashTable.163" }
%"class.WTF::HashTable.163" = type <{ %"class.blink::WeakMember"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember" = type opaque
%"struct.blink::ResourceLoaderOptions" = type { %"struct.blink::FetchInitiatorInfo", i8, i32, i8, i8, %"class.base::StrongAlias", %"class.WTF::String", %"class.WTF::HashSet.165", i8, i8, %class.scoped_refptr.169, %class.scoped_refptr.366, %class.scoped_refptr.368 }
%"struct.blink::FetchInitiatorInfo" = type { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, %"class.WTF::String" }
%"class.base::Time" = type { %"class.base::time_internal::TimeBase.120" }
%"class.base::time_internal::TimeBase.120" = type { i64 }
%"class.blink::TaskHandle" = type { %class.scoped_refptr.370 }
%class.scoped_refptr.370 = type { %"class.blink::TaskHandle::Runner"* }
%"class.blink::TaskHandle::Runner" = type opaque
%"class.blink::ResourceRequestHead" = type { %"class.blink::KURL", %"class.base::TimeDelta", %"class.net::SiteForCookies", %class.scoped_refptr.67, %class.scoped_refptr.67, %class.scoped_refptr.67, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, i32, i8, i32, i32, i32, %class.scoped_refptr.70, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, i32, %"class.absl::optional.84", %"class.absl::optional.89", %"class.absl::optional.99", %"struct.blink::CacheControlHeader", i8, i8, i8, i8, %"class.absl::optional.109", %"class.absl::optional.99", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.absl::optional.99", i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, %"class.absl::optional.109", %"class.absl::optional.114", i8, %class.scoped_refptr.119 }
%"class.net::SiteForCookies" = type <{ %"class.net::SchemefulSite", i8, [7 x i8] }>
%"class.net::SchemefulSite" = type { %"class.url::Origin" }
%"class.absl::optional.84" = type { %"class.absl::optional_internal::optional_data.85" }
%"class.absl::optional_internal::optional_data.85" = type { %"class.absl::optional_internal::optional_data_base.86" }
%"class.absl::optional_internal::optional_data_base.86" = type { %"class.absl::optional_internal::optional_data_dtor_base.87" }
%"class.absl::optional_internal::optional_data_dtor_base.87" = type { i8, %union.anon.88 }
%union.anon.88 = type { %"struct.blink::ResourceRequestHead::RedirectInfo" }
%"struct.blink::ResourceRequestHead::RedirectInfo" = type { %"class.blink::KURL", %"class.blink::KURL" }
%"class.absl::optional.89" = type { %"class.absl::optional_internal::optional_data.90" }
%"class.absl::optional_internal::optional_data.90" = type { %"class.absl::optional_internal::optional_data_base.91" }
%"class.absl::optional_internal::optional_data_base.91" = type { %"class.absl::optional_internal::optional_data_dtor_base.92" }
%"class.absl::optional_internal::optional_data_dtor_base.92" = type { i8, %union.anon.93 }
%union.anon.93 = type { %"class.network::mojom::blink::TrustTokenParams" }
%"class.network::mojom::blink::TrustTokenParams" = type { i32, i32, i32, i8, %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" }
%"struct.blink::CacheControlHeader" = type { i8, %"class.absl::optional.104", %"class.absl::optional.104" }
%"class.absl::optional.104" = type { %"class.absl::optional_internal::optional_data.105" }
%"class.absl::optional_internal::optional_data.105" = type { %"class.absl::optional_internal::optional_data_base.106" }
%"class.absl::optional_internal::optional_data_base.106" = type { %"class.absl::optional_internal::optional_data_dtor_base.107" }
%"class.absl::optional_internal::optional_data_dtor_base.107" = type { i8, %union.anon.108 }
%"class.absl::optional.99" = type { %"class.absl::optional_internal::optional_data.100" }
%"class.absl::optional_internal::optional_data.100" = type { %"class.absl::optional_internal::optional_data_base.101" }
%"class.absl::optional_internal::optional_data_base.101" = type { %"class.absl::optional_internal::optional_data_dtor_base.102" }
%"class.absl::optional_internal::optional_data_dtor_base.102" = type { i8, %union.anon.103 }
%"class.absl::optional.109" = type { %"class.absl::optional_internal::optional_data.110" }
%"class.absl::optional_internal::optional_data.110" = type { %"class.absl::optional_internal::optional_data_base.111" }
%"class.absl::optional_internal::optional_data_base.111" = type { %"class.absl::optional_internal::optional_data_dtor_base.112" }
%"class.absl::optional_internal::optional_data_dtor_base.112" = type { i8, %union.anon.113 }
%"class.absl::optional.114" = type { %"class.absl::optional_internal::optional_data.115" }
%"class.absl::optional_internal::optional_data.115" = type { %"class.absl::optional_internal::optional_data_base.116" }
%"class.absl::optional_internal::optional_data_base.116" = type { %"class.absl::optional_internal::optional_data_dtor_base.117" }
%"class.absl::optional_internal::optional_data_dtor_base.117" = type { i8, %union.anon.118 }
%union.anon.118 = type { %"struct.blink::ResourceRequestHead::WebBundleTokenParams" }
%"struct.blink::ResourceRequestHead::WebBundleTokenParams" = type { %"class.blink::KURL", %"class.base::UnguessableToken", %"class.mojo::PendingRemote" }
%"class.blink::Member.371" = type { %"class.blink::MemberBase.372" }
%"class.blink::MemberBase.372" = type { %"class.blink::ResourceLoader"* }
%"class.blink::ResourceLoader" = type opaque
%"class.blink::ResourceResponse" = type { %"class.blink::KURL", %"class.WTF::AtomicString", i64, %"class.WTF::AtomicString", i32, i32, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", %"class.net::IPEndPoint", i32, i8, i8, i8, i8, i8, i8, i8, i8, i32, i8, i8, i8, %"class.base::Time", i8, i8, i32, i8, i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, i64, i8, i32, i32, %"class.absl::optional.121", %class.scoped_refptr.136, %class.scoped_refptr.137, %"struct.blink::CacheControlHeader", %"class.absl::optional.104", %"class.absl::optional.138", %"class.absl::optional.138", %"class.absl::optional.138", i64, %"class.blink::KURL", %"class.WTF::Vector.143", %"class.WTF::String", %"class.WTF::Vector.54", %"class.base::Time", %"class.WTF::AtomicString", i32, i8, i64, i64, i64, %"class.absl::optional.109", %"class.WTF::Vector.54", %"class.blink::KURL", %"class.absl::optional.148" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.absl::optional.121" = type { %"class.absl::optional_internal::optional_data.122" }
%"class.absl::optional_internal::optional_data.122" = type { %"class.absl::optional_internal::optional_data_base.123" }
%"class.absl::optional_internal::optional_data_base.123" = type { %"class.absl::optional_internal::optional_data_dtor_base.124" }
%"class.absl::optional_internal::optional_data_dtor_base.124" = type { i8, %union.anon.125 }
%union.anon.125 = type { %"struct.blink::ResourceResponse::SecurityDetails" }
%"struct.blink::ResourceResponse::SecurityDetails" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::Vector.54", %"class.WTF::String", i64, i64, %"class.WTF::Vector.126", %"class.WTF::Vector.131" }
%"class.WTF::Vector.126" = type { %"class.WTF::VectorBuffer.127" }
%"class.WTF::VectorBuffer.127" = type { %"class.WTF::VectorBufferBase.128" }
%"class.WTF::Vector.131" = type { %"class.WTF::VectorBuffer.132" }
%"class.WTF::VectorBuffer.132" = type { %"class.WTF::VectorBufferBase.133" }
%"class.WTF::VectorBufferBase.133" = type { %"class.blink::ResourceResponse::SignedCertificateTimestamp"*, i32, i32 }
%"class.blink::ResourceResponse::SignedCertificateTimestamp" = type { %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", i64, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String" }
%class.scoped_refptr.136 = type { %"class.blink::ResourceLoadTiming"* }
%"class.blink::ResourceLoadTiming" = type opaque
%class.scoped_refptr.137 = type { %"struct.blink::ResourceLoadInfo"* }
%"struct.blink::ResourceLoadInfo" = type opaque
%"class.absl::optional.138" = type { %"class.absl::optional_internal::optional_data.139" }
%"class.absl::optional_internal::optional_data.139" = type { %"class.absl::optional_internal::optional_data_base.140" }
%"class.absl::optional_internal::optional_data_base.140" = type { %"class.absl::optional_internal::optional_data_dtor_base.141" }
%"class.absl::optional_internal::optional_data_dtor_base.141" = type { i8, %union.anon.142 }
%union.anon.142 = type { %"class.base::Time" }
%"class.WTF::Vector.143" = type { %"class.WTF::VectorBuffer.144" }
%"class.WTF::VectorBuffer.144" = type { %"class.WTF::VectorBufferBase.145" }
%"class.WTF::VectorBufferBase.145" = type { %"class.blink::KURL"*, i32, i32 }
%"class.absl::optional.148" = type { %"class.absl::optional_internal::optional_data.149" }
%"class.absl::optional_internal::optional_data.149" = type { %"class.absl::optional_internal::optional_data_base.150" }
%"class.absl::optional_internal::optional_data_base.150" = type { %"class.absl::optional_internal::optional_data_dtor_base.151" }
%"class.absl::optional_internal::optional_data_dtor_base.151" = type { i8, %union.anon.152 }
%union.anon.152 = type { %"class.net::AuthChallengeInfo" }
%"class.net::AuthChallengeInfo" = type { i8, %"class.url::Origin", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string", %"class.std::__1::basic_string" }
%class.scoped_refptr.373 = type { %"class.WTF::SharedBuffer"* }
%"class.WTF::SharedBuffer" = type { %"class.WTF::RefCounted.374", i64, %"class.WTF::Vector.376", %"class.WTF::Vector.381" }
%"class.WTF::RefCounted.374" = type { %"class.base::RefCounted.375" }
%"class.base::RefCounted.375" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.376" = type { %"class.WTF::VectorBuffer.377" }
%"class.WTF::VectorBuffer.377" = type { %"class.WTF::VectorBufferBase.378" }
%"class.WTF::VectorBufferBase.378" = type { i8*, i32, i32 }
%"class.WTF::Vector.381" = type { %"class.WTF::VectorBuffer.382" }
%"class.WTF::VectorBuffer.382" = type { %"class.WTF::VectorBufferBase.383" }
%"class.WTF::VectorBufferBase.383" = type { %"class.std::__1::unique_ptr.384"*, i32, i32 }
%"class.std::__1::unique_ptr.384" = type opaque
%"class.blink::WebScopedVirtualTimePauser" = type { %"class.base::TimeTicks", i8, i8, i32, %"class.blink::scheduler::MainThreadSchedulerImpl"*, %"class.blink::WebString", i64 }
%"class.blink::scheduler::MainThreadSchedulerImpl" = type opaque
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.387", %"class.std::__1::__compressed_pair.392" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.392" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::unique_ptr.1393" = type { %"class.std::__1::__compressed_pair.1394" }
%"class.std::__1::__compressed_pair.1394" = type { %"struct.std::__1::__compressed_pair_elem.1395" }
%"struct.std::__1::__compressed_pair_elem.1395" = type { %"class.blink::TextResourceDecoder"* }
%"class.blink::TextResourceDecoder" = type { %"class.blink::TextResourceDecoderOptions", %"class.WTF::TextEncoding", %"class.std::__1::unique_ptr.1396", i32, %"class.WTF::Vector.376", i8, i8, i8, i8, i8, i8, %"class.std::__1::unique_ptr.1402" }
%"class.blink::TextResourceDecoderOptions" = type <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, %"class.blink::KURL", [3 x i8], [5 x i8] }>
%"class.std::__1::unique_ptr.1396" = type { %"class.std::__1::__compressed_pair.1397" }
%"class.std::__1::__compressed_pair.1397" = type { %"struct.std::__1::__compressed_pair_elem.1398" }
%"struct.std::__1::__compressed_pair_elem.1398" = type { %"class.WTF::TextCodec"* }
%"class.WTF::TextCodec" = type { i32 (...)** }
%"class.std::__1::unique_ptr.1402" = type { %"class.std::__1::__compressed_pair.1403" }
%"class.std::__1::__compressed_pair.1403" = type { %"struct.std::__1::__compressed_pair_elem.1404" }
%"struct.std::__1::__compressed_pair_elem.1404" = type { %"class.blink::HTMLMetaCharsetParser"* }
%"class.blink::HTMLMetaCharsetParser" = type opaque
%"class.blink::Member.509" = type { %"class.blink::MemberBase.510" }
%"class.blink::MemberBase.510" = type { %"class.blink::CSSParserContext"* }
%"class.blink::CSSParserContext" = type <{ %"class.blink::KURL", %class.scoped_refptr.169, i8, i8, i8, [5 x i8], %"struct.blink::Referrer", i8, i8, i8, i8, i32, %"class.WTF::TextEncoding", %"class.blink::WeakMember.513", i32, [4 x i8] }>
%"struct.blink::Referrer" = type <{ %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::WeakMember.513" = type { %"class.blink::MemberBase.514" }
%"class.blink::MemberBase.514" = type { %"class.blink::Document"* }
%"class.blink::HeapHashSet.515" = type { %"class.WTF::HashSet.518" }
%"class.WTF::HashSet.518" = type { %"class.WTF::HashTable.519" }
%"class.WTF::HashTable.519" = type <{ %"class.blink::WeakMember.521"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.521" = type { %"class.blink::MemberBase.473" }
%"class.blink::Member.522" = type { %"class.blink::MemberBase.523" }
%"class.blink::MemberBase.523" = type { %"class.blink::RuleSet"* }
%"class.blink::RuleSet" = type { %"class.blink::HeapHashMap.526", %"class.blink::HeapHashMap.526", %"class.blink::HeapHashMap.526", %"class.blink::HeapHashMap.526", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::HeapVector.533", %"class.blink::RuleFeatureSet", %"class.blink::HeapVector.596", %"class.blink::HeapVector.604", %"class.blink::HeapVector.612", %"class.blink::HeapVector.629", %"class.blink::HeapVector.637", %"class.blink::HeapVector.645", %"class.blink::HeapVector.658", %"class.WTF::Vector.665", i32, %"class.blink::Member.689" }
%"class.blink::HeapHashMap.526" = type { %"class.WTF::HashMap.529" }
%"class.WTF::HashMap.529" = type { %"class.WTF::HashTable.530" }
%"class.WTF::HashTable.530" = type <{ %"struct.WTF::KeyValuePair.532"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.532" = type { %"class.WTF::AtomicString", %"class.blink::Member.1485" }
%"class.blink::Member.1485" = type { %"class.blink::MemberBase.1486" }
%"class.blink::MemberBase.1486" = type { %"class.blink::HeapVector.533"* }
%"class.blink::HeapVector.533" = type { %"class.WTF::Vector.536" }
%"class.WTF::Vector.536" = type { %"class.WTF::VectorBuffer.537" }
%"class.WTF::VectorBuffer.537" = type { %"class.WTF::VectorBufferBase.538" }
%"class.WTF::VectorBufferBase.538" = type { %"class.blink::Member.539"*, i32, i32 }
%"class.blink::Member.539" = type { %"class.blink::MemberBase.540" }
%"class.blink::MemberBase.540" = type { %"class.blink::RuleData"* }
%"class.blink::RuleData" = type { %"class.blink::Member.543", i64, [4 x i32] }
%"class.blink::Member.543" = type { %"class.blink::MemberBase.544" }
%"class.blink::MemberBase.544" = type { %"class.blink::StyleRule"* }
%"class.blink::StyleRule" = type { %"class.blink::StyleRuleBase", i32, %"class.blink::CSSSelectorList", %"class.blink::Member.438", %"class.blink::Member.564" }
%"class.blink::StyleRuleBase" = type { i8 }
%"class.blink::CSSSelectorList" = type { %"class.blink::CSSSelector"* }
%"class.blink::CSSSelector" = type { i24, %"union.blink::CSSSelector::DataUnion" }
%"union.blink::CSSSelector::DataUnion" = type { %"class.WTF::AtomicString" }
%"class.blink::Member.564" = type { %"class.blink::MemberBase.565" }
%"class.blink::MemberBase.565" = type { %"class.blink::CSSLazyPropertyParser"* }
%"class.blink::CSSLazyPropertyParser" = type { i32 (...)** }
%"class.blink::RuleFeatureSet" = type <{ %"struct.blink::RuleFeatureSet::FeatureMetadata", [4 x i8], %"class.WTF::HashMap.569", %"class.WTF::HashMap.569", %"class.WTF::HashMap.569", %"class.WTF::HashMap.574", %class.scoped_refptr.579, %class.scoped_refptr.590, %class.scoped_refptr.589, %"class.WTF::Vector.591", %"class.WTF::Vector.591", i8, [7 x i8] }>
%"struct.blink::RuleFeatureSet::FeatureMetadata" = type <{ i8, i8, i8, i8, i32, i8, [3 x i8] }>
%"class.WTF::HashMap.569" = type { %"class.WTF::HashTable.570" }
%"class.WTF::HashTable.570" = type <{ %"struct.WTF::KeyValuePair.573"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.573" = type { %"class.WTF::AtomicString", %class.scoped_refptr.1471 }
%class.scoped_refptr.1471 = type { %"class.blink::InvalidationSet"* }
%"class.blink::InvalidationSet" = type <{ %"class.WTF::RefCounted.580", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.586", %"union.blink::InvalidationSet::Backing.587", %"union.blink::InvalidationSet::Backing.588", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8, [5 x i8] }>
%"class.WTF::RefCounted.580" = type { %"class.base::RefCounted.581" }
%"class.base::RefCounted.581" = type { %"class.base::subtle::RefCountedBase" }
%"union.blink::InvalidationSet::Backing" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.586" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.587" = type { %"class.WTF::StringImpl"* }
%"union.blink::InvalidationSet::Backing.588" = type { %"class.WTF::StringImpl"* }
%"class.blink::InvalidationFlags" = type { i8 }
%"class.blink::InvalidationSet::BackingFlags" = type { i8 }
%"class.WTF::HashMap.574" = type { %"class.WTF::HashTable.575" }
%"class.WTF::HashTable.575" = type <{ %"struct.WTF::KeyValuePair.578"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.578" = type opaque
%class.scoped_refptr.579 = type { %"class.blink::SiblingInvalidationSet"* }
%"class.blink::SiblingInvalidationSet" = type { %"class.blink::InvalidationSet.base", i32, %class.scoped_refptr.589, %class.scoped_refptr.589 }
%"class.blink::InvalidationSet.base" = type <{ %"class.WTF::RefCounted.580", [4 x i8], %"union.blink::InvalidationSet::Backing", %"union.blink::InvalidationSet::Backing.586", %"union.blink::InvalidationSet::Backing.587", %"union.blink::InvalidationSet::Backing.588", %"class.blink::InvalidationFlags", %"class.blink::InvalidationSet::BackingFlags", i8 }>
%class.scoped_refptr.590 = type { %"class.blink::NthSiblingInvalidationSet"* }
%"class.blink::NthSiblingInvalidationSet" = type { %"class.blink::SiblingInvalidationSet" }
%class.scoped_refptr.589 = type { %"class.blink::DescendantInvalidationSet"* }
%"class.blink::DescendantInvalidationSet" = type { %"class.blink::InvalidationSet.base", [5 x i8] }
%"class.blink::HeapVector.596" = type { %"class.WTF::Vector.599" }
%"class.WTF::Vector.599" = type { %"class.WTF::VectorBuffer.600" }
%"class.WTF::VectorBuffer.600" = type { %"class.WTF::VectorBufferBase.601" }
%"class.WTF::VectorBufferBase.601" = type { %"class.blink::Member.602"*, i32, i32 }
%"class.blink::Member.602" = type { %"class.blink::MemberBase.1481" }
%"class.blink::MemberBase.1481" = type { %"class.blink::StyleRulePage"* }
%"class.blink::StyleRulePage" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.438", %"class.blink::CSSSelectorList" }
%"class.blink::HeapVector.604" = type { %"class.WTF::Vector.607" }
%"class.WTF::Vector.607" = type { %"class.WTF::VectorBuffer.608" }
%"class.WTF::VectorBuffer.608" = type { %"class.WTF::VectorBufferBase.609" }
%"class.WTF::VectorBufferBase.609" = type { %"class.blink::Member.610"*, i32, i32 }
%"class.blink::Member.610" = type { %"class.blink::MemberBase.1482" }
%"class.blink::MemberBase.1482" = type { %"class.blink::StyleRuleFontFace"* }
%"class.blink::StyleRuleFontFace" = type { %"class.blink::StyleRuleBase", %"class.blink::Member.438" }
%"class.blink::HeapVector.612" = type { %"class.WTF::Vector.615" }
%"class.WTF::Vector.615" = type { %"class.WTF::VectorBuffer.616" }
%"class.WTF::VectorBuffer.616" = type { %"class.WTF::VectorBufferBase.617" }
%"class.WTF::VectorBufferBase.617" = type { %"class.blink::Member.618"*, i32, i32 }
%"class.blink::Member.618" = type { %"class.blink::MemberBase.619" }
%"class.blink::MemberBase.619" = type { %"class.blink::StyleRuleKeyframes"* }
%"class.blink::StyleRuleKeyframes" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.blink::HeapVector.620", %"class.WTF::AtomicString", i32, [4 x i8] }>
%"class.blink::HeapVector.620" = type { %"class.WTF::Vector.623" }
%"class.WTF::Vector.623" = type { %"class.WTF::VectorBuffer.624" }
%"class.WTF::VectorBuffer.624" = type { %"class.WTF::VectorBufferBase.625" }
%"class.WTF::VectorBufferBase.625" = type { %"class.blink::Member.626"*, i32, i32 }
%"class.blink::Member.626" = type opaque
%"class.blink::HeapVector.629" = type { %"class.WTF::Vector.632" }
%"class.WTF::Vector.632" = type { %"class.WTF::VectorBuffer.633" }
%"class.WTF::VectorBuffer.633" = type { %"class.WTF::VectorBufferBase.634" }
%"class.WTF::VectorBufferBase.634" = type { %"class.blink::Member.635"*, i32, i32 }
%"class.blink::Member.635" = type { %"class.blink::MemberBase.1483" }
%"class.blink::MemberBase.1483" = type { %"class.blink::StyleRuleProperty"* }
%"class.blink::StyleRuleProperty" = type { %"class.blink::StyleRuleBase", %"class.WTF::String", %"class.blink::Member.438" }
%"class.blink::HeapVector.637" = type { %"class.WTF::Vector.640" }
%"class.WTF::Vector.640" = type { %"class.WTF::VectorBuffer.641" }
%"class.WTF::VectorBuffer.641" = type { %"class.WTF::VectorBufferBase.642" }
%"class.WTF::VectorBufferBase.642" = type { %"class.blink::Member.643"*, i32, i32 }
%"class.blink::Member.643" = type { %"class.blink::MemberBase.1484" }
%"class.blink::MemberBase.1484" = type { %"class.blink::StyleRuleCounterStyle"* }
%"class.blink::StyleRuleCounterStyle" = type <{ %"class.blink::StyleRuleBase", [7 x i8], %"class.WTF::AtomicString", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", i32, [4 x i8] }>
%"class.blink::Member.653" = type { %"class.blink::MemberBase.654" }
%"class.blink::MemberBase.654" = type { %"class.blink::CSSValue"* }
%"class.blink::CSSValue" = type { i8, i8, i8 }
%"class.blink::HeapVector.645" = type { %"class.WTF::Vector.648" }
%"class.WTF::Vector.648" = type { %"class.WTF::VectorBuffer.649" }
%"class.WTF::VectorBuffer.649" = type { %"class.WTF::VectorBufferBase.650" }
%"class.WTF::VectorBufferBase.650" = type { %"class.blink::Member.651"*, i32, i32 }
%"class.blink::Member.651" = type { %"class.blink::MemberBase.652" }
%"class.blink::MemberBase.652" = type { %"class.blink::StyleRuleScrollTimeline"* }
%"class.blink::StyleRuleScrollTimeline" = type { %"class.blink::StyleRuleBase", %"class.WTF::AtomicString", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653", %"class.blink::Member.653" }
%"class.blink::HeapVector.658" = type { %"class.WTF::Vector.661" }
%"class.WTF::Vector.661" = type { %"class.WTF::VectorBuffer.662" }
%"class.WTF::VectorBuffer.662" = type { %"class.WTF::VectorBufferBase.663" }
%"class.WTF::VectorBufferBase.663" = type { %"class.blink::MinimalRuleData"*, i32, i32 }
%"class.blink::MinimalRuleData" = type { %"class.blink::Member.543", i32, i32 }
%"class.WTF::Vector.665" = type { %"class.WTF::VectorBuffer.666" }
%"class.WTF::VectorBuffer.666" = type { %"class.WTF::VectorBufferBase.667" }
%"class.WTF::VectorBufferBase.667" = type { %"class.blink::MediaQuerySetResult"*, i32, i32 }
%"class.blink::MediaQuerySetResult" = type <{ %class.scoped_refptr.668, i8, [7 x i8] }>
%class.scoped_refptr.668 = type { %"class.blink::MediaQuerySet"* }
%"class.blink::MediaQuerySet" = type { %"class.WTF::RefCounted.669", %"class.WTF::Vector.671" }
%"class.WTF::RefCounted.669" = type { %"class.base::RefCounted.670" }
%"class.base::RefCounted.670" = type { %"class.base::subtle::RefCountedBase" }
%"class.WTF::Vector.671" = type { %"class.WTF::VectorBuffer.672" }
%"class.WTF::VectorBuffer.672" = type { %"class.WTF::VectorBufferBase.673" }
%"class.WTF::VectorBufferBase.673" = type { %"class.std::__1::unique_ptr.674"*, i32, i32 }
%"class.std::__1::unique_ptr.674" = type { %"class.std::__1::__compressed_pair.675" }
%"class.std::__1::__compressed_pair.675" = type { %"struct.std::__1::__compressed_pair_elem.676" }
%"struct.std::__1::__compressed_pair_elem.676" = type { %"class.blink::MediaQuery"* }
%"class.blink::MediaQuery" = type { i32, %"class.WTF::String", %"class.WTF::Vector.677", %"class.WTF::String" }
%"class.WTF::Vector.677" = type { %"class.WTF::VectorBuffer.678" }
%"class.WTF::VectorBuffer.678" = type { %"class.WTF::VectorBufferBase.679" }
%"class.WTF::VectorBufferBase.679" = type { %"class.blink::MediaQueryExp"*, i32, i32 }
%"class.blink::MediaQueryExp" = type { %"class.WTF::String", %"struct.blink::MediaQueryExpValue" }
%"struct.blink::MediaQueryExpValue" = type <{ i32, [4 x i8], double, i32, i32, i32, i8, i8, i8, i8 }>
%"class.blink::Member.689" = type { %"class.blink::MemberBase.690" }
%"class.blink::MemberBase.690" = type { %"class.blink::RuleSet::PendingRuleMaps"* }
%"class.blink::RuleSet::PendingRuleMaps" = type { %"class.blink::HeapHashMap.693", %"class.blink::HeapHashMap.693", %"class.blink::HeapHashMap.693", %"class.blink::HeapHashMap.693" }
%"class.blink::HeapHashMap.693" = type { %"class.WTF::HashMap.696" }
%"class.WTF::HashMap.696" = type { %"class.WTF::HashTable.697" }
%"class.WTF::HashTable.697" = type <{ %"struct.WTF::KeyValuePair.699"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.699" = type opaque
%class.scoped_refptr.700 = type { %"class.blink::MediaQuerySet"* }
%"class.WTF::Vector.591" = type { %"class.WTF::VectorBuffer.592" }
%"class.WTF::VectorBuffer.592" = type { %"class.WTF::VectorBufferBase.593" }
%"class.WTF::VectorBufferBase.593" = type { %"class.blink::MediaQueryResult"*, i32, i32 }
%"class.blink::MediaQueryResult" = type <{ %"class.blink::MediaQueryExp", i8, [7 x i8] }>
%"class.blink::Member.701" = type { %"class.blink::MemberBase.702" }
%"class.blink::MemberBase.702" = type { %"class.blink::CSSRule"* }
%"class.blink::CSSRule" = type { %"class.blink::ScriptWrappable", i8, %"class.blink::Member.703" }
%"class.blink::Member.703" = type { %"class.blink::MemberBase.704" }
%"class.blink::MemberBase.704" = type { %"class.blink::ScriptWrappable"* }
%"class.blink::HeapHashSet.705" = type { %"class.WTF::HashSet.708" }
%"class.WTF::HashSet.708" = type { %"class.WTF::HashTable.709" }
%"class.WTF::HashTable.709" = type <{ %"class.blink::WeakMember.711"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.711" = type { %"class.blink::MemberBase.1" }
%"class.WTF::HashSet.582" = type { %"class.WTF::HashTable.583" }
%"class.WTF::HashTable.583" = type <{ %"class.WTF::AtomicString"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.712" = type { %"class.blink::MemberBase.713" }
%"class.blink::MemberBase.713" = type { %"class.blink::MediaList"* }
%"class.blink::MediaList" = type { %"class.blink::ScriptWrappable", %class.scoped_refptr.700, %"class.blink::Member.472", %"class.blink::Member.701" }
%"class.blink::HeapVector.714" = type { %"class.WTF::Vector.717" }
%"class.WTF::Vector.717" = type { %"class.WTF::VectorBuffer.718" }
%"class.WTF::VectorBuffer.718" = type { %"class.WTF::VectorBufferBase.719" }
%"class.WTF::VectorBufferBase.719" = type { %"class.blink::Member.701"*, i32, i32 }
%"class.blink::Member.721" = type { %"class.blink::MemberBase.722" }
%"class.blink::MemberBase.722" = type { %"class.blink::CSSRuleList"* }
%"class.blink::CSSRuleList" = type { %"class.blink::ScriptWrappable" }
%"class.blink::Member" = type { %"class.blink::MemberBase" }
%"class.blink::MemberBase" = type { %"class.blink::Node"* }
%"class.blink::Member.2" = type { %"class.blink::MemberBase.3" }
%"class.blink::MemberBase.3" = type { %"class.blink::NodeData"* }
%"class.blink::NodeData" = type { i16, %"class.WTF::ConcurrentlyReadBitField" }
%"class.WTF::ConcurrentlyReadBitField" = type { %"class.WTF::SingleThreadedBitField" }
%"class.WTF::SingleThreadedBitField" = type { i16 }
%"class.blink::ParkableString" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.blink::ParkableStringImpl"* }
%"class.blink::ParkableStringImpl" = type { %"class.WTF::RefCounted", %"class.WTF::String", %"class.std::__1::unique_ptr" }
%"class.WTF::RefCounted" = type { %"class.base::RefCounted" }
%"class.base::RefCounted" = type { %"class.base::subtle::RefCountedBase" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.blink::ParkableStringImpl::ParkableMetadata"* }
%"struct.blink::ParkableStringImpl::ParkableMetadata" = type { %"class.WTF::Mutex", i32, i8, i8, %"class.std::__1::unique_ptr.8", %"class.std::__1::unique_ptr.12", %"class.WTF::Vector.18", i8, i32 }
%"class.std::__1::unique_ptr.8" = type { %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.10" }
%"struct.std::__1::__compressed_pair_elem.10" = type { %"class.WTF::Vector"* }
%"class.WTF::Vector" = type { %"class.WTF::VectorBuffer" }
%"class.WTF::VectorBuffer" = type { %"class.WTF::VectorBufferBase" }
%"class.WTF::VectorBufferBase" = type { i8*, i32, i32 }
%"class.std::__1::unique_ptr.12" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.blink::DiskDataMetadata"* }
%"class.blink::DiskDataMetadata" = type { i64, i64 }
%"class.WTF::Vector.18" = type { %"class.WTF::VectorBuffer.19" }
%"class.WTF::VectorBuffer.19" = type { %"class.WTF::VectorBufferBase", [32 x i8] }
%"class.blink::ResourceClient.base" = type <{ %"class.blink::GarbageCollectedMixin", %"class.blink::ThreadState::PrefinalizerRegistration", [7 x i8], %"class.blink::Member.25", i8 }>
%"class.blink::Member.395" = type { %"class.blink::MemberBase.396" }
%"class.blink::MemberBase.396" = type { %"class.blink::StyleSheet"* }
%"class.blink::StyleEngineContext" = type { i8 }
%"class.blink::Member.397" = type { %"class.blink::MemberBase.398" }
%"class.blink::MemberBase.398" = type { %"class.blink::ProcessingInstruction::DetachableEventListener"* }
%"class.blink::ProcessingInstruction::DetachableEventListener" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Document" = type { %"class.blink::ContainerNode", %"class.blink::TreeScope", %"class.blink::UseCounter", %"class.blink::Supplementable", i32, %"class.blink::DocumentLifecycle", i8, i8, %"class.WTF::Vector.731", %"class.WTF::Vector.731", i8, i32, %"class.blink::Member.738", %"class.blink::Member.740", %"class.blink::Member.742", %"class.blink::Member.744", %"class.blink::Member.755", %"class.blink::Member.757", i8, %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.blink::KURL", %"class.std::__1::unique_ptr.759", %"class.blink::KURL", %"class.WTF::AtomicString", %"class.WTF::AtomicString", %"class.blink::Member.765", %"class.blink::Member.767", %"class.blink::Member.472", i32, i32, i32, i8, %"class.blink::TaskHandle", %"class.blink::TaskHandle", %"class.WTF::Vector.769", i8, i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapVector", %"class.blink::Member.427", %"class.blink::Member.784", %"class.blink::Member.427", %"class.blink::Member.427", %"class.blink::Member.427", %"class.blink::UserActionElementSet", %"class.blink::Member.793", double, double, i64, i64, %"class.blink::HeapHashSet.795", %"class.blink::HeapHashSet.802", i16, i8, %"class.blink::Member.809", %"class.blink::Member.811", %"class.blink::Member.980", %"class.blink::Member.982", %"class.blink::TextLinkColors", %"class.blink::Member.984", i8, [7 x i8], %"class.blink::HeapHashMap.986", i32, i32, i8, i8, i8, i32, i32, i32, i8, %"class.WTF::String", %"class.WTF::String", %"class.blink::Member.427", %"class.WTF::Vector.993", %"class.blink::Member.998", %"class.blink::Member.1000", i8, %"class.blink::Member.427", i8, i32, i8, %"class.base::ElapsedTimer", %"class.blink::Member.1002", %"class.blink::HeapVector.1004", %"class.std::__1::unique_ptr.1013", %"class.WTF::String", %"class.WTF::String", i8, %"class.WTF::AtomicString", %"class.blink::DocumentEncodingData", i8, i8, [6 x i8], %"class.blink::HeapHashSet.1019", %"class.blink::LiveNodeListRegistry", %"class.blink::Member.1032", %"class.WTF::Vector.1034", i8, i8, %"class.std::__1::unique_ptr.1039", %"class.blink::NthIndexCache"*, i8, i8, i8, i8, i8, i8, %"class.blink::LayoutView"*, %"class.blink::HeapVector", %"class.blink::HeapVector.1045", i32, i8, %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapTaskRunnerTimer", %"class.blink::DocumentTiming", %"class.blink::Member.1053", i8, i32, %"class.blink::Member.1055", %"class.blink::Member.1057", %"class.blink::Member.1059", %"class.blink::HeapTaskRunnerTimer", %"class.blink::Member.1061", %"class.WTF::HashMap.1063", %"class.blink::Member.1068", %"class.blink::Member.1070", %"class.blink::Member.1072", %"class.blink::Member.1074", %"class.blink::Member.410", %"class.blink::Member.410", %"class.blink::HeapTaskRunnerTimer", %"class.blink::HeapHashSet.1076", i8, i32, %"class.blink::Member.1083", %"class.blink::Member.1085", i32, %"class.blink::Member.1087", %"class.blink::Member.1089", %"class.blink::Member.1091", %"class.std::__1::unique_ptr.1093", i64, %"class.std::__1::unique_ptr.1099", i32, i32, %"class.blink::Member.1105", %"class.blink::Member.1107", %"class.blink::Member.1109", i8, i32, i32, i32, i32, i32, i32, i32, i8, i8, %"class.blink::Member.1111", %"class.WTF::Vector.1113", %"class.WTF::AtomicString", %"class.blink::HeapHashMap.1118", %"class.blink::Member.1125", %"class.std::__1::unique_ptr.1127", %"class.blink::Member.1133", i8, i8, %"class.WTF::String", %"class.blink::Member.1135", i8, [7 x i8], %"class.blink::HeapHashMap.1137", %"class.blink::HeapObserverSet", %"class.blink::Member.1151", i8, i8, i8, i8, i8, i8, i8, %"class.blink::Member.1153", i32, i8, i8, %"class.blink::WeakMember.1155", %"class.blink::Member.1156" }
%"class.blink::UseCounter" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Supplementable" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.724" }
%"class.blink::HeapHashMap.724" = type { %"class.WTF::HashMap.727" }
%"class.WTF::HashMap.727" = type { %"class.WTF::HashTable.728" }
%"class.WTF::HashTable.728" = type <{ %"struct.WTF::KeyValuePair.730"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.730" = type opaque
%"class.blink::DocumentLifecycle" = type <{ i32, i32, i32, i8, i8, [2 x i8] }>
%"class.WTF::Vector.731" = type { %"class.WTF::VectorBuffer.732" }
%"class.WTF::VectorBuffer.732" = type { %"class.WTF::VectorBufferBase.733" }
%"class.WTF::VectorBufferBase.733" = type { %"class.base::OnceCallback"*, i32, i32 }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr.734 }
%class.scoped_refptr.734 = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe.735", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe.735" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.738" = type { %"class.blink::MemberBase.739" }
%"class.blink::MemberBase.739" = type { %"class.blink::LocalDOMWindow"* }
%"class.blink::LocalDOMWindow" = type opaque
%"class.blink::Member.740" = type { %"class.blink::MemberBase.741" }
%"class.blink::MemberBase.741" = type { %"class.blink::ExecutionContext"* }
%"class.blink::ExecutionContext" = type <{ %"class.blink::Supplementable.1321", %"class.blink::MojoBindingContext", %"class.blink::ConsoleLogger", %"class.blink::UseCounter", %"class.blink::FeatureContext", %"class.v8::Isolate"*, %"class.blink::SecurityContext", %"class.blink::Member.1362", i32, i8, [3 x i8], %"class.blink::HeapVector.1364", i32, i8, i8, i8, i8, i8, i8, [6 x i8], %"class.blink::Member.1372", %"class.blink::Member.1374", %"class.blink::DOMTimerCoordinator", i32, [4 x i8], %"class.std::__1::unique_ptr.1383", %"class.blink::Member.1389", %"class.blink::Member.1391", i8, [7 x i8] }>
%"class.blink::Supplementable.1321" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1322" }
%"class.blink::HeapHashMap.1322" = type { %"class.WTF::HashMap.1325" }
%"class.WTF::HashMap.1325" = type { %"class.WTF::HashTable.1326" }
%"class.WTF::HashTable.1326" = type <{ %"struct.WTF::KeyValuePair.1328"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1328" = type opaque
%"class.blink::MojoBindingContext" = type { %"class.blink::ContextLifecycleNotifier", %"class.blink::Supplementable.1337" }
%"class.blink::ContextLifecycleNotifier" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapObserverSet.1329" }
%"class.blink::HeapObserverSet.1329" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1330" }
%"class.blink::HeapHashSet.1330" = type { %"class.WTF::HashSet.1333" }
%"class.WTF::HashSet.1333" = type { %"class.WTF::HashTable.1334" }
%"class.WTF::HashTable.1334" = type <{ %"class.blink::WeakMember.1336"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1336" = type opaque
%"class.blink::Supplementable.1337" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::HeapHashMap.1338" }
%"class.blink::HeapHashMap.1338" = type { %"class.WTF::HashMap.1341" }
%"class.WTF::HashMap.1341" = type { %"class.WTF::HashTable.1342" }
%"class.WTF::HashTable.1342" = type <{ %"struct.WTF::KeyValuePair.1344"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1344" = type { i8*, %"class.blink::Member.1477" }
%"class.blink::Member.1477" = type { %"class.blink::MemberBase.1478" }
%"class.blink::MemberBase.1478" = type { %"class.blink::Supplement"* }
%"class.blink::Supplement" = type { %"class.blink::GarbageCollectedMixin", %"class.blink::Member.1479" }
%"class.blink::Member.1479" = type { %"class.blink::MemberBase.1480" }
%"class.blink::MemberBase.1480" = type { %"class.blink::MojoBindingContext"* }
%"class.blink::ConsoleLogger" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::FeatureContext" = type { i32 (...)** }
%"class.blink::SecurityContext" = type { i32 (...)**, i32, %class.scoped_refptr.1345, %"class.std::__1::unique_ptr.1346", %"class.std::__1::unique_ptr.1346", %"class.std::__1::unique_ptr.1352", %"class.std::__1::unique_ptr.1352", %"class.blink::Member.740", i32, [4 x i8], %"class.WTF::HashSet.1358", i32, i32 }
%class.scoped_refptr.1345 = type { %"class.blink::SecurityOrigin"* }
%"class.std::__1::unique_ptr.1346" = type { %"class.std::__1::__compressed_pair.1347" }
%"class.std::__1::__compressed_pair.1347" = type { %"struct.std::__1::__compressed_pair_elem.1348" }
%"struct.std::__1::__compressed_pair_elem.1348" = type { %"class.blink::PermissionsPolicy"* }
%"class.blink::PermissionsPolicy" = type opaque
%"class.std::__1::unique_ptr.1352" = type { %"class.std::__1::__compressed_pair.1353" }
%"class.std::__1::__compressed_pair.1353" = type { %"struct.std::__1::__compressed_pair_elem.1354" }
%"struct.std::__1::__compressed_pair_elem.1354" = type { %"class.blink::DocumentPolicy"* }
%"class.blink::DocumentPolicy" = type opaque
%"class.WTF::HashSet.1358" = type { %"class.WTF::HashTable.1359" }
%"class.WTF::HashTable.1359" = type <{ i32*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1362" = type { %"class.blink::MemberBase.1363" }
%"class.blink::MemberBase.1363" = type { %"class.blink::Agent"* }
%"class.blink::Agent" = type opaque
%"class.blink::HeapVector.1364" = type { %"class.WTF::Vector.1367" }
%"class.WTF::Vector.1367" = type { %"class.WTF::VectorBuffer.1368" }
%"class.WTF::VectorBuffer.1368" = type { %"class.WTF::VectorBufferBase.1369" }
%"class.WTF::VectorBufferBase.1369" = type { %"class.blink::Member.1370"*, i32, i32 }
%"class.blink::Member.1370" = type opaque
%"class.blink::Member.1372" = type { %"class.blink::MemberBase.1373" }
%"class.blink::MemberBase.1373" = type { %"class.blink::PublicURLManager"* }
%"class.blink::PublicURLManager" = type opaque
%"class.blink::Member.1374" = type { %"class.blink::MemberBase.1375" }
%"class.blink::MemberBase.1375" = type { %"class.blink::ContentSecurityPolicyDelegate"* }
%"class.blink::ContentSecurityPolicyDelegate" = type opaque
%"class.blink::DOMTimerCoordinator" = type { %"class.blink::HeapHashMap.1376", i32, i32 }
%"class.blink::HeapHashMap.1376" = type { %"class.WTF::HashMap.1379" }
%"class.WTF::HashMap.1379" = type { %"class.WTF::HashTable.1380" }
%"class.WTF::HashTable.1380" = type <{ %"struct.WTF::KeyValuePair.1382"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1382" = type opaque
%"class.std::__1::unique_ptr.1383" = type { %"class.std::__1::__compressed_pair.1384" }
%"class.std::__1::__compressed_pair.1384" = type { %"struct.std::__1::__compressed_pair_elem.1385" }
%"struct.std::__1::__compressed_pair_elem.1385" = type { %"class.blink::PolicyContainer"* }
%"class.blink::PolicyContainer" = type opaque
%"class.blink::Member.1389" = type { %"class.blink::MemberBase.1390" }
%"class.blink::MemberBase.1390" = type { %"class.blink::OriginTrialContext"* }
%"class.blink::OriginTrialContext" = type opaque
%"class.blink::Member.1391" = type { %"class.blink::MemberBase.1392" }
%"class.blink::MemberBase.1392" = type { %"class.blink::ContentSecurityPolicy"* }
%"class.blink::ContentSecurityPolicy" = type opaque
%"class.blink::Member.742" = type { %"class.blink::MemberBase.743" }
%"class.blink::MemberBase.743" = type { %"class.blink::ResourceFetcher"* }
%"class.blink::ResourceFetcher" = type { i32 (...)**, %"class.blink::ThreadState::PrefinalizerRegistration.1188", %"class.blink::Member.1189", %"class.blink::Member.1191", %"class.blink::Member.1193", %class.scoped_refptr.774, %class.scoped_refptr.774, %"class.blink::Member.1195", %"class.blink::Member.1197", %"class.blink::Member.1203", %"class.blink::Member.1207", %"class.blink::Member.1256", %"class.blink::HeapHashMap.1258", %"class.blink::HeapHashSet.1265", %"class.blink::HeapHashSet.1265", %"class.blink::HeapHashMap.1272", %"class.blink::HeapVector.1279", %"class.blink::Member.1286", %"class.blink::HeapTaskRunnerTimer.1288", %"class.blink::TaskHandle", %"class.blink::HeapHashMap.1290", %"class.WTF::Vector.1297", %"class.blink::HeapHashSet.1303", %"class.blink::HeapHashSet.1303", %"class.std::__1::unique_ptr.1309", %"class.base::WeakPtr", %"class.blink::TaskHandle", i32, %"class.blink::HeapMojoRemote", %"class.blink::Member.1318", i8, i8, %"class.base::WeakPtrFactory.1320" }
%"class.blink::ThreadState::PrefinalizerRegistration.1188" = type { i8 }
%"class.blink::Member.1189" = type { %"class.blink::MemberBase.1190" }
%"class.blink::MemberBase.1190" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.blink::DetachableResourceFetcherProperties" = type opaque
%"class.blink::Member.1191" = type { %"class.blink::MemberBase.1192" }
%"class.blink::MemberBase.1192" = type { %"class.blink::ResourceLoadObserver"* }
%"class.blink::ResourceLoadObserver" = type opaque
%"class.blink::Member.1193" = type { %"class.blink::MemberBase.1194" }
%"class.blink::MemberBase.1194" = type { %"class.blink::FetchContext"* }
%"class.blink::FetchContext" = type opaque
%class.scoped_refptr.774 = type { %"class.base::SingleThreadTaskRunner"* }
%"class.base::SingleThreadTaskRunner" = type { %"class.base::SequencedTaskRunner.base", [4 x i8] }
%"class.base::SequencedTaskRunner.base" = type { %"class.base::TaskRunner.base" }
%"class.base::TaskRunner.base" = type <{ i32 (...)**, %"class.base::RefCountedThreadSafe.775" }>
%"class.base::RefCountedThreadSafe.775" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.blink::Member.1195" = type { %"class.blink::MemberBase.1196" }
%"class.blink::MemberBase.1196" = type { %"class.blink::DetachableUseCounter"* }
%"class.blink::DetachableUseCounter" = type opaque
%"class.blink::Member.1197" = type { %"class.blink::MemberBase.1198" }
%"class.blink::MemberBase.1198" = type { %"class.blink::DetachableConsoleLogger"* }
%"class.blink::DetachableConsoleLogger" = type { %"class.blink::ConsoleLogger", %"class.blink::Member.1201" }
%"class.blink::Member.1201" = type { %"class.blink::MemberBase.1202" }
%"class.blink::MemberBase.1202" = type { %"class.blink::ConsoleLogger"* }
%"class.blink::Member.1203" = type { %"class.blink::MemberBase.1204" }
%"class.blink::MemberBase.1204" = type { %"class.blink::ResourceFetcher::LoaderFactory"* }
%"class.blink::ResourceFetcher::LoaderFactory" = type { i32 (...)** }
%"class.blink::Member.1207" = type { %"class.blink::MemberBase.1208" }
%"class.blink::MemberBase.1208" = type { %"class.blink::ResourceLoadScheduler"* }
%"class.blink::ResourceLoadScheduler" = type <{ %"class.blink::FrameOrWorkerScheduler::Observer", %"class.blink::Member.1211", i8, [3 x i8], i32, i64, i64, i64, i64, %"class.WTF::HashMap.1213", %"class.WTF::HashSet.1218", i8, [3 x i8], i32, %"class.blink::HeapHashMap.1222", %"class.std::__1::map", %"class.std::__1::map.1238", %"class.std::__1::unique_ptr.1247", %"class.blink::Member.1197", %"class.base::Clock"*, i32, i8, [3 x i8], i32, [4 x i8], %"class.blink::Member.1254", %"class.mojo::InlinedStructPtr", [4 x i8] }>
%"class.blink::FrameOrWorkerScheduler::Observer" = type { i32 (...)** }
%"class.blink::Member.1211" = type { %"class.blink::MemberBase.1212" }
%"class.blink::MemberBase.1212" = type { %"class.blink::DetachableResourceFetcherProperties"* }
%"class.WTF::HashMap.1213" = type { %"class.WTF::HashTable.1214" }
%"class.WTF::HashTable.1214" = type <{ %"struct.WTF::KeyValuePair.1217"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1217" = type <{ i64, i32, [4 x i8] }>
%"class.WTF::HashSet.1218" = type { %"class.WTF::HashTable.1219" }
%"class.WTF::HashTable.1219" = type <{ i64*, i32, i32, i32, [4 x i8] }>
%"class.blink::HeapHashMap.1222" = type { %"class.WTF::HashMap.1225" }
%"class.WTF::HashMap.1225" = type { %"class.WTF::HashTable.1226" }
%"class.WTF::HashTable.1226" = type <{ %"struct.WTF::KeyValuePair.1228"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1228" = type opaque
%"class.std::__1::map" = type { %"class.std::__1::__tree.1229" }
%"class.std::__1::__tree.1229" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1230", %"class.std::__1::__compressed_pair.1234" }
%"class.std::__1::__compressed_pair.1230" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"class.std::__1::__compressed_pair.1234" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::map.1238" = type { %"class.std::__1::__tree.1239" }
%"class.std::__1::__tree.1239" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.1240", %"class.std::__1::__compressed_pair.1244" }
%"class.std::__1::__compressed_pair.1240" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"class.std::__1::__compressed_pair.1244" = type { %"struct.std::__1::__compressed_pair_elem.283" }
%"class.std::__1::unique_ptr.1247" = type { %"class.std::__1::__compressed_pair.1248" }
%"class.std::__1::__compressed_pair.1248" = type { %"struct.std::__1::__compressed_pair_elem.1249" }
%"struct.std::__1::__compressed_pair_elem.1249" = type { %"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle"* }
%"class.blink::FrameOrWorkerScheduler::LifecycleObserverHandle" = type { %"class.base::WeakPtr", %"class.blink::FrameOrWorkerScheduler::Observer"* }
%"class.base::Clock" = type opaque
%"class.blink::Member.1254" = type { %"class.blink::MemberBase.1255" }
%"class.blink::MemberBase.1255" = type { %"class.blink::LoadingBehaviorObserver"* }
%"class.blink::LoadingBehaviorObserver" = type opaque
%"class.mojo::InlinedStructPtr" = type { %"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints", i32 }
%"class.blink::mojom::blink::DelayCompetingLowPriorityRequestsHints" = type { i32, i32 }
%"class.blink::Member.1256" = type { %"class.blink::MemberBase.1257" }
%"class.blink::MemberBase.1257" = type { %"class.blink::BackForwardCacheLoaderHelper"* }
%"class.blink::BackForwardCacheLoaderHelper" = type opaque
%"class.blink::HeapHashMap.1258" = type { %"class.WTF::HashMap.1261" }
%"class.WTF::HashMap.1261" = type { %"class.WTF::HashTable.1262" }
%"class.WTF::HashTable.1262" = type <{ %"struct.WTF::KeyValuePair.1264"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1264" = type opaque
%"class.blink::HeapHashSet.1265" = type { %"class.WTF::HashSet.1268" }
%"class.WTF::HashSet.1268" = type { %"class.WTF::HashTable.1269" }
%"class.WTF::HashTable.1269" = type <{ %"class.blink::WeakMember.1271"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1271" = type { %"class.blink::MemberBase.26" }
%"class.blink::HeapHashMap.1272" = type { %"class.WTF::HashMap.1275" }
%"class.WTF::HashMap.1275" = type { %"class.WTF::HashTable.1276" }
%"class.WTF::HashTable.1276" = type <{ %"struct.WTF::KeyValuePair.1278"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1278" = type opaque
%"class.blink::HeapVector.1279" = type { %"class.WTF::Vector.1282" }
%"class.WTF::Vector.1282" = type { %"class.WTF::VectorBuffer.1283" }
%"class.WTF::VectorBuffer.1283" = type { %"class.WTF::VectorBufferBase.1284" }
%"class.WTF::VectorBufferBase.1284" = type { %"class.blink::Member.25"*, i32, i32 }
%"class.blink::Member.1286" = type { %"class.blink::MemberBase.1287" }
%"class.blink::MemberBase.1287" = type { %"class.blink::MHTMLArchive"* }
%"class.blink::MHTMLArchive" = type opaque
%"class.blink::HeapTaskRunnerTimer.1288" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1289", { i64, i64 } }
%"class.blink::TimerBase" = type { i32 (...)**, %"class.base::TimeTicks", %"class.base::TimeDelta", %"class.base::Location", %class.scoped_refptr.774, %"class.base::WeakPtrFactory" }
%"class.base::Location" = type { i8*, i8*, i32, i8* }
%"class.base::WeakPtrFactory" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.base::internal::WeakPtrFactoryBase" = type { %"class.base::internal::WeakReferenceOwner", i64 }
%"class.base::internal::WeakReferenceOwner" = type { %class.scoped_refptr.776 }
%class.scoped_refptr.776 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.base::internal::WeakReference::Flag" = type <{ %"class.base::RefCountedThreadSafe.777", %"class.base::AtomicFlag", [3 x i8] }>
%"class.base::RefCountedThreadSafe.777" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::AtomicFlag" = type { %"struct.std::__1::atomic.778" }
%"struct.std::__1::atomic.778" = type { %"struct.std::__1::__atomic_base.779" }
%"struct.std::__1::__atomic_base.779" = type { %"struct.std::__1::__atomic_base.780" }
%"struct.std::__1::__atomic_base.780" = type { %"struct.std::__1::__cxx_atomic_impl.781" }
%"struct.std::__1::__cxx_atomic_impl.781" = type { %"struct.std::__1::__cxx_atomic_base_impl.782" }
%"struct.std::__1::__cxx_atomic_base_impl.782" = type { i8 }
%"class.blink::WeakMember.1289" = type { %"class.blink::MemberBase.743" }
%"class.blink::HeapHashMap.1290" = type { %"class.WTF::HashMap.1293" }
%"class.WTF::HashMap.1293" = type { %"class.WTF::HashTable.1294" }
%"class.WTF::HashTable.1294" = type <{ %"struct.WTF::KeyValuePair.1296"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1296" = type opaque
%"class.WTF::Vector.1297" = type { %"class.WTF::VectorBuffer.1298" }
%"class.WTF::VectorBuffer.1298" = type { %"class.WTF::VectorBufferBase.1299" }
%"class.WTF::VectorBufferBase.1299" = type { %class.scoped_refptr.1300*, i32, i32 }
%class.scoped_refptr.1300 = type { %"class.blink::ResourceTimingInfo"* }
%"class.blink::ResourceTimingInfo" = type opaque
%"class.blink::HeapHashSet.1303" = type { %"class.WTF::HashSet.1306" }
%"class.WTF::HashSet.1306" = type { %"class.WTF::HashTable.1307" }
%"class.WTF::HashTable.1307" = type <{ %"class.blink::Member.371"*, i32, i32, i32, [4 x i8] }>
%"class.std::__1::unique_ptr.1309" = type { %"class.std::__1::__compressed_pair.1310" }
%"class.std::__1::__compressed_pair.1310" = type { %"struct.std::__1::__compressed_pair_elem.1311" }
%"struct.std::__1::__compressed_pair_elem.1311" = type { %"class.WTF::HashSet.1312"* }
%"class.WTF::HashSet.1312" = type opaque
%"class.base::WeakPtr" = type { %"class.base::internal::WeakPtrBase" }
%"class.base::internal::WeakPtrBase" = type { %"class.base::internal::WeakReference", i64 }
%"class.base::internal::WeakReference" = type { %class.scoped_refptr.1250 }
%class.scoped_refptr.1250 = type { %"class.base::internal::WeakReference::Flag"* }
%"class.blink::HeapMojoRemote" = type { %"class.blink::Member.1316" }
%"class.blink::Member.1316" = type { %"class.blink::MemberBase.1317" }
%"class.blink::MemberBase.1317" = type { %"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper"* }
%"class.blink::HeapMojoRemote<blink::mojom::blink::BlobRegistry, blink::HeapMojoWrapperMode::kWithContextObserver>::Wrapper" = type opaque
%"class.blink::Member.1318" = type { %"class.blink::MemberBase.1319" }
%"class.blink::MemberBase.1319" = type { %"class.blink::SubresourceWebBundleList"* }
%"class.blink::SubresourceWebBundleList" = type opaque
%"class.base::WeakPtrFactory.1320" = type { %"class.base::internal::WeakPtrFactoryBase" }
%"class.blink::Member.744" = type { %"class.blink::MemberBase.745" }
%"class.blink::MemberBase.745" = type { %"class.blink::DocumentParser"* }
%"class.blink::DocumentParser" = type { %"class.blink::NameClient", i32, i8, %"class.blink::Member.410", %"class.blink::HeapHashSet.748" }
%"class.blink::HeapHashSet.748" = type { %"class.WTF::HashSet.751" }
%"class.WTF::HashSet.751" = type { %"class.WTF::HashTable.752" }
%"class.WTF::HashTable.752" = type <{ %"class.blink::WeakMember.754"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.754" = type opaque
%"class.blink::Member.755" = type { %"class.blink::MemberBase.756" }
%"class.blink::MemberBase.756" = type { %"class.blink::ContextFeatures"* }
%"class.blink::ContextFeatures" = type opaque
%"class.blink::Member.757" = type { %"class.blink::MemberBase.758" }
%"class.blink::MemberBase.758" = type { %"class.blink::HttpRefreshScheduler"* }
%"class.blink::HttpRefreshScheduler" = type opaque
%"class.std::__1::unique_ptr.759" = type { %"class.std::__1::__compressed_pair.760" }
%"class.std::__1::__compressed_pair.760" = type { %"struct.std::__1::__compressed_pair_elem.761" }
%"struct.std::__1::__compressed_pair_elem.761" = type { %"class.blink::OriginAccessEntry"* }
%"class.blink::OriginAccessEntry" = type opaque
%"class.blink::Member.765" = type { %"class.blink::MemberBase.766" }
%"class.blink::MemberBase.766" = type { %"class.blink::DocumentType"* }
%"class.blink::DocumentType" = type opaque
%"class.blink::Member.767" = type { %"class.blink::MemberBase.768" }
%"class.blink::MemberBase.768" = type { %"class.blink::DOMImplementation"* }
%"class.blink::DOMImplementation" = type opaque
%"class.WTF::Vector.769" = type { %"class.WTF::VectorBuffer.770" }
%"class.WTF::VectorBuffer.770" = type { %"class.WTF::VectorBufferBase.771" }
%"class.WTF::VectorBufferBase.771" = type { %"struct.blink::Document::PendingJavascriptUrl"*, i32, i32 }
%"struct.blink::Document::PendingJavascriptUrl" = type { %"class.blink::KURL", %class.scoped_refptr.169 }
%"class.blink::Member.784" = type { %"class.blink::MemberBase.785" }
%"class.blink::MemberBase.785" = type { %"class.blink::Range"* }
%"class.blink::Range" = type opaque
%"class.blink::UserActionElementSet" = type { %"class.blink::HeapHashMap.786" }
%"class.blink::HeapHashMap.786" = type { %"class.WTF::HashMap.789" }
%"class.WTF::HashMap.789" = type { %"class.WTF::HashTable.790" }
%"class.WTF::HashTable.790" = type <{ %"struct.WTF::KeyValuePair.792"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.792" = type opaque
%"class.blink::Member.793" = type { %"class.blink::MemberBase.794" }
%"class.blink::MemberBase.794" = type { %"class.blink::RootScrollerController"* }
%"class.blink::RootScrollerController" = type opaque
%"class.blink::HeapHashSet.795" = type { %"class.WTF::HashSet.798" }
%"class.WTF::HashSet.798" = type { %"class.WTF::HashTable.799" }
%"class.WTF::HashTable.799" = type <{ %"class.blink::WeakMember.801"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.801" = type opaque
%"class.blink::HeapHashSet.802" = type { %"class.WTF::HashSet.805" }
%"class.WTF::HashSet.805" = type { %"class.WTF::HashTable.806" }
%"class.WTF::HashTable.806" = type <{ %"class.blink::WeakMember.808"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.808" = type opaque
%"class.blink::Member.809" = type { %"class.blink::MemberBase.810" }
%"class.blink::MemberBase.810" = type { %"class.blink::ElementIntersectionObserverData"* }
%"class.blink::ElementIntersectionObserverData" = type opaque
%"class.blink::Member.811" = type { %"class.blink::MemberBase.812" }
%"class.blink::MemberBase.812" = type { %"class.blink::StyleEngine"* }
%"class.blink::StyleEngine" = type { %"class.blink::FontSelectorClient", %"class.blink::NameClient", %"class.blink::Member.410", i32, i32, i32, %"class.blink::Member.472", %"class.blink::Member.815", %"class.blink::Member.841", %"class.blink::HeapHashMap.843", i8, i8, i8, [5 x i8], %"class.blink::HeapHashSet.850", %"class.blink::HeapHashSet.850", %"class.WTF::String", i8, i8, i8, i8, i8, i8, i8, i8, i8, i32, %"class.blink::Member.856", %"class.blink::Member.870", %"class.blink::Member.900", %"class.blink::Member.902", %"class.blink::Member.908", %"class.blink::PendingInvalidations", %"class.blink::StyleInvalidationRoot", %"class.blink::StyleRecalcRoot", %"class.blink::LayoutTreeRebuildRoot", %"class.blink::HeapHashSet.919", %"class.blink::Member.925", %"class.blink::HeapHashMap.927", %"class.blink::HeapHashMap.934", %"class.std::__1::unique_ptr.941", i32, %"class.blink::HeapVector.947", %"class.blink::HeapVector.947", %"class.blink::HeapVector.826", %"class.blink::HeapHashSet.515", %"class.blink::HeapHashMap.955", %"class.blink::Member.962", %"class.blink::HeapHashMap.964", %class.scoped_refptr.971, %class.scoped_refptr.972, %"class.blink::Member.653", i32, i32, %"class.blink::Color", i32, %"class.blink::Color", [4 x i8], %"class.blink::HeapHashSet.973", %"class.blink::Member.427" }
%"class.blink::FontSelectorClient" = type { %"class.blink::GarbageCollectedMixin" }
%"class.blink::Member.815" = type { %"class.blink::MemberBase.816" }
%"class.blink::MemberBase.816" = type { %"class.blink::DocumentStyleSheetCollection"* }
%"class.blink::DocumentStyleSheetCollection" = type { %"class.blink::TreeScopeStyleSheetCollection" }
%"class.blink::TreeScopeStyleSheetCollection" = type { %"class.blink::StyleSheetCollection.base", %"class.blink::Member.0", %"class.blink::TreeOrderedList" }
%"class.blink::StyleSheetCollection.base" = type <{ %"class.blink::NameClient", %"class.blink::HeapVector.819", %"class.blink::HeapVector.826", i8 }>
%"class.blink::HeapVector.819" = type { %"class.WTF::Vector.822" }
%"class.WTF::Vector.822" = type { %"class.WTF::VectorBuffer.823" }
%"class.WTF::VectorBuffer.823" = type { %"class.WTF::VectorBufferBase.824" }
%"class.WTF::VectorBufferBase.824" = type { %"class.blink::Member.395"*, i32, i32 }
%"class.blink::TreeOrderedList" = type { %"class.blink::HeapListHashSet" }
%"class.blink::HeapListHashSet" = type { %"class.WTF::ListHashSet.base", [7 x i8] }
%"class.WTF::ListHashSet.base" = type <{ %"class.WTF::HashTable.837", %"class.blink::Member.839", %"class.blink::Member.839", %"struct.blink::HeapListHashSetAllocator::AllocatorProvider" }>
%"class.WTF::HashTable.837" = type <{ %"class.blink::Member.839"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.839" = type { %"class.blink::MemberBase.840" }
%"class.blink::MemberBase.840" = type { %"class.blink::HeapListHashSetNode"* }
%"class.blink::HeapListHashSetNode" = type { %"class.blink::Member", %"class.blink::Member.839", %"class.blink::Member.839" }
%"struct.blink::HeapListHashSetAllocator::AllocatorProvider" = type { i8 }
%"class.blink::Member.841" = type { %"class.blink::MemberBase.842" }
%"class.blink::MemberBase.842" = type { %"class.blink::StyleRuleUsageTracker"* }
%"class.blink::StyleRuleUsageTracker" = type opaque
%"class.blink::HeapHashMap.843" = type { %"class.WTF::HashMap.846" }
%"class.WTF::HashMap.846" = type { %"class.WTF::HashTable.847" }
%"class.WTF::HashTable.847" = type <{ %"struct.WTF::KeyValuePair.849"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.849" = type opaque
%"class.blink::HeapHashSet.850" = type { %"class.WTF::HashSet.853" }
%"class.WTF::HashSet.853" = type { %"class.WTF::HashTable.854" }
%"class.WTF::HashTable.854" = type <{ %"class.blink::Member.0"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.856" = type { %"class.blink::MemberBase.857" }
%"class.blink::MemberBase.857" = type { %"class.blink::ReferenceFilterOperation"* }
%"class.blink::ReferenceFilterOperation" = type { %"class.blink::FilterOperation.base", %"class.WTF::AtomicString", %"class.blink::Member.860", %"class.blink::Member.862" }
%"class.blink::FilterOperation.base" = type <{ i32 (...)**, i32 }>
%"class.blink::Member.860" = type { %"class.blink::MemberBase.861" }
%"class.blink::MemberBase.861" = type { %"class.blink::SVGResource"* }
%"class.blink::SVGResource" = type opaque
%"class.blink::Member.862" = type { %"class.blink::MemberBase.863" }
%"class.blink::MemberBase.863" = type { %"class.blink::Filter"* }
%"class.blink::Filter" = type { %"class.blink::FloatRect", %"class.blink::FloatRect", float, i32, %"class.blink::Member.866", %"class.blink::Member.868" }
%"class.blink::FloatRect" = type { %"class.blink::FloatPoint", %"class.blink::FloatSize" }
%"class.blink::FloatPoint" = type { float, float }
%"class.blink::FloatSize" = type { float, float }
%"class.blink::Member.866" = type { %"class.blink::MemberBase.867" }
%"class.blink::MemberBase.867" = type { %"class.blink::SourceGraphic"* }
%"class.blink::SourceGraphic" = type opaque
%"class.blink::Member.868" = type { %"class.blink::MemberBase.869" }
%"class.blink::MemberBase.869" = type { %"class.blink::FilterEffect"* }
%"class.blink::FilterEffect" = type { i32 (...)**, %"class.blink::HeapVector.1171", %"class.blink::Member.862", %"class.blink::FloatRect", i8, i8, i32, [4 x %class.sk_sp] }
%"class.blink::HeapVector.1171" = type { %"class.WTF::Vector.1174" }
%"class.WTF::Vector.1174" = type { %"class.WTF::VectorBuffer.1175" }
%"class.WTF::VectorBuffer.1175" = type { %"class.WTF::VectorBufferBase.1176" }
%"class.WTF::VectorBufferBase.1176" = type { %"class.blink::Member.868"*, i32, i32 }
%class.sk_sp = type { %"class.cc::PaintFilter"* }
%"class.cc::PaintFilter" = type { %class.SkRefCnt.base, %class.sk_sp.1178, i32, %"class.absl::optional.1179", i8, i32 }
%class.SkRefCnt.base = type { %class.SkRefCntBase.base }
%class.SkRefCntBase.base = type <{ i32 (...)**, %"struct.std::__1::atomic.79" }>
%class.sk_sp.1178 = type { %class.SkImageFilter* }
%class.SkImageFilter = type { %class.SkFlattenable.base, [4 x i8] }
%class.SkFlattenable.base = type { %class.SkRefCnt.base }
%"class.absl::optional.1179" = type { %"class.absl::optional_internal::optional_data.1180" }
%"class.absl::optional_internal::optional_data.1180" = type { %"class.absl::optional_internal::optional_data_base.1181" }
%"class.absl::optional_internal::optional_data_base.1181" = type { %"class.absl::optional_internal::optional_data_dtor_base.1182" }
%"class.absl::optional_internal::optional_data_dtor_base.1182" = type { i8, %union.anon.1183 }
%union.anon.1183 = type { %struct.SkRect }
%struct.SkRect = type { float, float, float, float }
%"class.blink::Member.870" = type { %"class.blink::MemberBase.871" }
%"class.blink::MemberBase.871" = type { %"class.blink::StyleResolver"* }
%"class.blink::StyleResolver" = type <{ %"class.blink::MatchedPropertiesCache", %"class.blink::Member.410", %class.scoped_refptr.881, %"class.blink::SelectorFilter", %"class.blink::Member.841", i8, i8, [6 x i8] }>
%"class.blink::MatchedPropertiesCache" = type { %"class.blink::HeapHashMap.874" }
%"class.blink::HeapHashMap.874" = type { %"class.WTF::HashMap.877" }
%"class.WTF::HashMap.877" = type { %"class.WTF::HashTable.878" }
%"class.WTF::HashTable.878" = type <{ %"struct.WTF::KeyValuePair.880"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.880" = type opaque
%class.scoped_refptr.881 = type { %"class.blink::ComputedStyle"* }
%"class.blink::ComputedStyle" = type opaque
%"class.blink::SelectorFilter" = type { %"class.blink::HeapVector.882", %"class.std::__1::unique_ptr.894" }
%"class.blink::HeapVector.882" = type { %"class.WTF::Vector.885" }
%"class.WTF::Vector.885" = type { %"class.WTF::VectorBuffer.886" }
%"class.WTF::VectorBuffer.886" = type { %"class.WTF::VectorBufferBase.887" }
%"class.WTF::VectorBufferBase.887" = type { %"class.blink::SelectorFilter::ParentStackFrame"*, i32, i32 }
%"class.blink::SelectorFilter::ParentStackFrame" = type { %"class.blink::Member.427", %"class.WTF::Vector.888" }
%"class.WTF::Vector.888" = type { %"class.WTF::VectorBuffer.889" }
%"class.WTF::VectorBuffer.889" = type { %"class.WTF::VectorBufferBase.890", [16 x i8] }
%"class.WTF::VectorBufferBase.890" = type { i32*, i32, i32 }
%"class.std::__1::unique_ptr.894" = type { %"class.std::__1::__compressed_pair.895" }
%"class.std::__1::__compressed_pair.895" = type { %"struct.std::__1::__compressed_pair_elem.896" }
%"struct.std::__1::__compressed_pair_elem.896" = type { %"class.WTF::BloomFilter"* }
%"class.WTF::BloomFilter" = type { [4096 x i8] }
%"class.blink::Member.900" = type { %"class.blink::MemberBase.901" }
%"class.blink::MemberBase.901" = type { %"class.blink::ViewportStyleResolver"* }
%"class.blink::ViewportStyleResolver" = type opaque
%"class.blink::Member.902" = type { %"class.blink::MemberBase.903" }
%"class.blink::MemberBase.903" = type { %"class.blink::MediaQueryEvaluator"* }
%"class.blink::MediaQueryEvaluator" = type <{ %"class.WTF::String", %"class.blink::Member.906", i8, [7 x i8] }>
%"class.blink::Member.906" = type { %"class.blink::MemberBase.907" }
%"class.blink::MemberBase.907" = type { %"class.blink::MediaValues"* }
%"class.blink::MediaValues" = type opaque
%"class.blink::Member.908" = type { %"class.blink::MemberBase.909" }
%"class.blink::MemberBase.909" = type { %"class.blink::CSSGlobalRuleSet"* }
%"class.blink::CSSGlobalRuleSet" = type <{ %"class.blink::RuleFeatureSet", %"class.blink::Member.522", i8, i8, [6 x i8] }>
%"class.blink::PendingInvalidations" = type { %"class.blink::HeapHashMap.912" }
%"class.blink::HeapHashMap.912" = type { %"class.WTF::HashMap.915" }
%"class.WTF::HashMap.915" = type { %"class.WTF::HashTable.916" }
%"class.WTF::HashTable.916" = type <{ %"struct.WTF::KeyValuePair.918"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.918" = type { %"class.blink::Member.408", %"class.blink::NodeInvalidationSets" }
%"class.blink::NodeInvalidationSets" = type { %"class.WTF::Vector.1472", %"class.WTF::Vector.1472" }
%"class.WTF::Vector.1472" = type { %"class.WTF::VectorBuffer.1473" }
%"class.WTF::VectorBuffer.1473" = type { %"class.WTF::VectorBufferBase.1474" }
%"class.WTF::VectorBufferBase.1474" = type { %class.scoped_refptr.1471*, i32, i32 }
%"class.blink::StyleInvalidationRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::StyleTraversalRoot.base" = type <{ i32 (...)**, %"class.blink::Member", i32 }>
%"class.blink::StyleRecalcRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::LayoutTreeRebuildRoot" = type { %"class.blink::StyleTraversalRoot.base", [4 x i8] }
%"class.blink::HeapHashSet.919" = type { %"class.WTF::HashSet.922" }
%"class.WTF::HashSet.922" = type { %"class.WTF::HashTable.923" }
%"class.WTF::HashTable.923" = type <{ %"class.blink::Member.427"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.925" = type { %"class.blink::MemberBase.926" }
%"class.blink::MemberBase.926" = type { %"class.blink::CSSFontSelector"* }
%"class.blink::CSSFontSelector" = type opaque
%"class.blink::HeapHashMap.927" = type { %"class.WTF::HashMap.930" }
%"class.WTF::HashMap.930" = type { %"class.WTF::HashTable.931" }
%"class.WTF::HashTable.931" = type <{ %"struct.WTF::KeyValuePair.933"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.933" = type opaque
%"class.blink::HeapHashMap.934" = type { %"class.WTF::HashMap.937" }
%"class.WTF::HashMap.937" = type { %"class.WTF::HashTable.938" }
%"class.WTF::HashTable.938" = type <{ %"struct.WTF::KeyValuePair.940"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.940" = type opaque
%"class.std::__1::unique_ptr.941" = type { %"class.std::__1::__compressed_pair.942" }
%"class.std::__1::__compressed_pair.942" = type { %"struct.std::__1::__compressed_pair_elem.943" }
%"struct.std::__1::__compressed_pair_elem.943" = type { %"class.blink::StyleResolverStats"* }
%"class.blink::StyleResolverStats" = type { i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32, i32 }
%"class.blink::HeapVector.947" = type { %"class.WTF::Vector.950" }
%"class.WTF::Vector.950" = type { %"class.WTF::VectorBuffer.951" }
%"class.WTF::VectorBuffer.951" = type { %"class.WTF::VectorBufferBase.952" }
%"class.WTF::VectorBufferBase.952" = type { %"struct.std::__1::pair.953"*, i32, i32 }
%"struct.std::__1::pair.953" = type opaque
%"class.blink::HeapVector.826" = type { %"class.WTF::Vector.829" }
%"class.WTF::Vector.829" = type { %"class.WTF::VectorBuffer.830" }
%"class.WTF::VectorBuffer.830" = type { %"class.WTF::VectorBufferBase.831" }
%"class.WTF::VectorBufferBase.831" = type { %"struct.std::__1::pair.832"*, i32, i32 }
%"struct.std::__1::pair.832" = type opaque
%"class.blink::HeapHashMap.955" = type { %"class.WTF::HashMap.958" }
%"class.WTF::HashMap.958" = type { %"class.WTF::HashTable.959" }
%"class.WTF::HashTable.959" = type <{ %"struct.WTF::KeyValuePair.961"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.961" = type { %"class.WTF::AtomicString", %"class.blink::Member.618" }
%"class.blink::Member.962" = type { %"class.blink::MemberBase.963" }
%"class.blink::MemberBase.963" = type { %"class.blink::CounterStyleMap"* }
%"class.blink::CounterStyleMap" = type opaque
%"class.blink::HeapHashMap.964" = type { %"class.WTF::HashMap.967" }
%"class.WTF::HashMap.967" = type { %"class.WTF::HashTable.968" }
%"class.WTF::HashTable.968" = type <{ %"struct.WTF::KeyValuePair.970"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.970" = type opaque
%class.scoped_refptr.971 = type { %"class.blink::DocumentStyleEnvironmentVariables"* }
%"class.blink::DocumentStyleEnvironmentVariables" = type opaque
%class.scoped_refptr.972 = type { %"class.blink::StyleInitialData"* }
%"class.blink::StyleInitialData" = type opaque
%"class.blink::Color" = type { i32 }
%"class.blink::HeapHashSet.973" = type { %"class.WTF::HashSet.976" }
%"class.WTF::HashSet.976" = type { %"class.WTF::HashTable.977" }
%"class.WTF::HashTable.977" = type <{ %"class.blink::Member.979"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.979" = type opaque
%"class.blink::Member.980" = type { %"class.blink::MemberBase.981" }
%"class.blink::MemberBase.981" = type { %"class.blink::StyleSheetList"* }
%"class.blink::StyleSheetList" = type opaque
%"class.blink::Member.982" = type { %"class.blink::MemberBase.983" }
%"class.blink::MemberBase.983" = type { %"class.blink::FormController"* }
%"class.blink::FormController" = type opaque
%"class.blink::TextLinkColors" = type { %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", %"class.blink::Color", i8, i8, i8, i8 }
%"class.blink::Member.984" = type { %"class.blink::MemberBase.985" }
%"class.blink::MemberBase.985" = type { %"class.blink::VisitedLinkState"* }
%"class.blink::VisitedLinkState" = type opaque
%"class.blink::HeapHashMap.986" = type { %"class.WTF::HashMap.989" }
%"class.WTF::HashMap.989" = type { %"class.WTF::HashTable.990" }
%"class.WTF::HashTable.990" = type <{ %"struct.WTF::KeyValuePair.992"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.992" = type opaque
%"class.WTF::Vector.993" = type { %"class.WTF::VectorBuffer.994" }
%"class.WTF::VectorBuffer.994" = type { %"class.WTF::VectorBufferBase.995" }
%"class.WTF::VectorBufferBase.995" = type { %"class.blink::AXContext"**, i32, i32 }
%"class.blink::AXContext" = type opaque
%"class.blink::Member.998" = type { %"class.blink::MemberBase.999" }
%"class.blink::MemberBase.999" = type { %"class.blink::AXObjectCache"* }
%"class.blink::AXObjectCache" = type opaque
%"class.blink::Member.1000" = type { %"class.blink::MemberBase.1001" }
%"class.blink::MemberBase.1001" = type { %"class.blink::DocumentMarkerController"* }
%"class.blink::DocumentMarkerController" = type opaque
%"class.base::ElapsedTimer" = type { %"class.base::TimeTicks" }
%"class.blink::Member.1002" = type { %"class.blink::MemberBase.1003" }
%"class.blink::MemberBase.1003" = type { %"class.blink::ScriptRunner"* }
%"class.blink::ScriptRunner" = type opaque
%"class.blink::HeapVector.1004" = type { %"class.WTF::Vector.1007" }
%"class.WTF::Vector.1007" = type { %"class.WTF::VectorBuffer.1008" }
%"class.WTF::VectorBuffer.1008" = type { %"class.WTF::VectorBufferBase.1009" }
%"class.WTF::VectorBufferBase.1009" = type { %"class.blink::Member.1010"*, i32, i32 }
%"class.blink::Member.1010" = type { %"class.blink::MemberBase.1011" }
%"class.blink::MemberBase.1011" = type { %"class.blink::ScriptElementBase"* }
%"class.blink::ScriptElementBase" = type { %"class.blink::GarbageCollectedMixin" }
%"class.std::__1::unique_ptr.1013" = type { %"class.std::__1::__compressed_pair.1014" }
%"class.std::__1::__compressed_pair.1014" = type { %"struct.std::__1::__compressed_pair_elem.1015" }
%"struct.std::__1::__compressed_pair_elem.1015" = type { %"class.blink::TransformSource"* }
%"class.blink::TransformSource" = type opaque
%"class.blink::DocumentEncodingData" = type <{ %"class.WTF::TextEncoding", i8, i8, [6 x i8] }>
%"class.blink::HeapHashSet.1019" = type { %"class.WTF::HashSet.1022" }
%"class.WTF::HashSet.1022" = type { %"class.WTF::HashTable.1023" }
%"class.WTF::HashTable.1023" = type <{ %"class.blink::WeakMember.1025"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1025" = type opaque
%"class.blink::LiveNodeListRegistry" = type <{ %"class.WTF::Vector.1026", i32, [4 x i8] }>
%"class.WTF::Vector.1026" = type { %"class.WTF::VectorBuffer.1027" }
%"class.WTF::VectorBuffer.1027" = type { %"class.WTF::VectorBufferBase.1028" }
%"class.WTF::VectorBufferBase.1028" = type { %"struct.std::__1::pair.1029"*, i32, i32 }
%"struct.std::__1::pair.1029" = type opaque
%"class.blink::Member.1032" = type { %"class.blink::MemberBase.1033" }
%"class.blink::MemberBase.1033" = type { %"class.blink::SVGDocumentExtensions"* }
%"class.blink::SVGDocumentExtensions" = type opaque
%"class.WTF::Vector.1034" = type { %"class.WTF::VectorBuffer.1035" }
%"class.WTF::VectorBuffer.1035" = type { %"class.WTF::VectorBufferBase.1036" }
%"class.WTF::VectorBufferBase.1036" = type { %"struct.blink::AnnotatedRegionValue"*, i32, i32 }
%"struct.blink::AnnotatedRegionValue" = type opaque
%"class.std::__1::unique_ptr.1039" = type { %"class.std::__1::__compressed_pair.1040" }
%"class.std::__1::__compressed_pair.1040" = type { %"struct.std::__1::__compressed_pair_elem.1041" }
%"struct.std::__1::__compressed_pair_elem.1041" = type { %"class.blink::SelectorQueryCache"* }
%"class.blink::SelectorQueryCache" = type opaque
%"class.blink::NthIndexCache" = type opaque
%"class.blink::LayoutView" = type opaque
%"class.blink::HeapVector.1045" = type { %"class.WTF::Vector.1048" }
%"class.WTF::Vector.1048" = type { %"class.WTF::VectorBuffer.1049" }
%"class.WTF::VectorBuffer.1049" = type { %"class.WTF::VectorBufferBase.1050" }
%"class.WTF::VectorBufferBase.1050" = type { %"class.blink::Member.1051"*, i32, i32 }
%"class.blink::Member.1051" = type opaque
%"class.blink::DocumentTiming" = type { %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.base::TimeTicks", %"class.blink::Member.410" }
%"class.blink::Member.1053" = type { %"class.blink::MemberBase.1054" }
%"class.blink::MemberBase.1054" = type { %"class.blink::MediaQueryMatcher"* }
%"class.blink::MediaQueryMatcher" = type opaque
%"class.blink::Member.1055" = type { %"class.blink::MemberBase.1056" }
%"class.blink::MemberBase.1056" = type { %"class.blink::ScriptedAnimationController"* }
%"class.blink::ScriptedAnimationController" = type opaque
%"class.blink::Member.1057" = type { %"class.blink::MemberBase.1058" }
%"class.blink::MemberBase.1058" = type { %"class.blink::ScriptedIdleTaskController"* }
%"class.blink::ScriptedIdleTaskController" = type opaque
%"class.blink::Member.1059" = type { %"class.blink::MemberBase.1060" }
%"class.blink::MemberBase.1060" = type { %"class.blink::TextAutosizer"* }
%"class.blink::TextAutosizer" = type opaque
%"class.blink::Member.1061" = type { %"class.blink::MemberBase.1062" }
%"class.blink::MemberBase.1062" = type { %"class.blink::ElementDataCache"* }
%"class.blink::ElementDataCache" = type opaque
%"class.WTF::HashMap.1063" = type { %"class.WTF::HashTable.1064" }
%"class.WTF::HashTable.1064" = type <{ %"struct.WTF::KeyValuePair.1067"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1067" = type opaque
%"class.blink::Member.1068" = type { %"class.blink::MemberBase.1069" }
%"class.blink::MemberBase.1069" = type { %"class.blink::DocumentAnimations"* }
%"class.blink::DocumentAnimations" = type opaque
%"class.blink::Member.1070" = type { %"class.blink::MemberBase.1071" }
%"class.blink::MemberBase.1071" = type { %"class.blink::DocumentTimeline"* }
%"class.blink::DocumentTimeline" = type opaque
%"class.blink::Member.1072" = type { %"class.blink::MemberBase.1073" }
%"class.blink::MemberBase.1073" = type { %"class.blink::PendingAnimations"* }
%"class.blink::PendingAnimations" = type opaque
%"class.blink::Member.1074" = type { %"class.blink::MemberBase.1075" }
%"class.blink::MemberBase.1075" = type { %"class.blink::WorkletAnimationController"* }
%"class.blink::WorkletAnimationController" = type opaque
%"class.blink::HeapTaskRunnerTimer" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.783", { i64, i64 } }
%"class.blink::WeakMember.783" = type { %"class.blink::MemberBase.411" }
%"class.blink::HeapHashSet.1076" = type { %"class.WTF::HashSet.1079" }
%"class.WTF::HashSet.1079" = type { %"class.WTF::HashTable.1080" }
%"class.WTF::HashTable.1080" = type <{ %"class.blink::Member.1082"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1082" = type opaque
%"class.blink::Member.1083" = type { %"class.blink::MemberBase.1084" }
%"class.blink::MemberBase.1084" = type { %"class.blink::CanvasFontCache"* }
%"class.blink::CanvasFontCache" = type opaque
%"class.blink::Member.1085" = type { %"class.blink::MemberBase.1086" }
%"class.blink::MemberBase.1086" = type { %"class.blink::IntersectionObserverController"* }
%"class.blink::IntersectionObserverController" = type opaque
%"class.blink::Member.1087" = type { %"class.blink::MemberBase.1088" }
%"class.blink::MemberBase.1088" = type { %"class.blink::SnapCoordinator"* }
%"class.blink::SnapCoordinator" = type opaque
%"class.blink::Member.1089" = type { %"class.blink::MemberBase.1090" }
%"class.blink::MemberBase.1090" = type { %"class.blink::PropertyRegistry"* }
%"class.blink::PropertyRegistry" = type opaque
%"class.blink::Member.1091" = type { %"class.blink::MemberBase.1092" }
%"class.blink::MemberBase.1092" = type { %"class.blink::Document::NetworkStateObserver"* }
%"class.blink::Document::NetworkStateObserver" = type opaque
%"class.std::__1::unique_ptr.1093" = type { %"class.std::__1::__compressed_pair.1094" }
%"class.std::__1::__compressed_pair.1094" = type { %"struct.std::__1::__compressed_pair_elem.1095" }
%"struct.std::__1::__compressed_pair_elem.1095" = type { %"class.ukm::UkmRecorder"* }
%"class.ukm::UkmRecorder" = type opaque
%"class.std::__1::unique_ptr.1099" = type { %"class.std::__1::__compressed_pair.1100" }
%"class.std::__1::__compressed_pair.1100" = type { %"struct.std::__1::__compressed_pair_elem.1101" }
%"struct.std::__1::__compressed_pair_elem.1101" = type { %"class.blink::FontMatchingMetrics"* }
%"class.blink::FontMatchingMetrics" = type opaque
%"class.blink::Member.1105" = type { %"class.blink::MemberBase.1106" }
%"class.blink::MemberBase.1106" = type { %"class.blink::DOMFeaturePolicy"* }
%"class.blink::DOMFeaturePolicy" = type opaque
%"class.blink::Member.1107" = type { %"class.blink::MemberBase.1108" }
%"class.blink::MemberBase.1108" = type { %"class.blink::SlotAssignmentEngine"* }
%"class.blink::SlotAssignmentEngine" = type opaque
%"class.blink::Member.1109" = type { %"class.blink::MemberBase.1110" }
%"class.blink::MemberBase.1110" = type { %"class.blink::ViewportData"* }
%"class.blink::ViewportData" = type opaque
%"class.blink::Member.1111" = type { %"class.blink::MemberBase.1112" }
%"class.blink::MemberBase.1112" = type { %"class.blink::LazyLoadImageObserver"* }
%"class.blink::LazyLoadImageObserver" = type opaque
%"class.WTF::Vector.1113" = type { %"class.WTF::VectorBuffer.1114" }
%"class.WTF::VectorBuffer.1114" = type { %"class.WTF::VectorBufferBase.1115" }
%"class.WTF::VectorBufferBase.1115" = type { i8*, i32, i32 }
%"class.blink::HeapHashMap.1118" = type { %"class.WTF::HashMap.1121" }
%"class.WTF::HashMap.1121" = type { %"class.WTF::HashTable.1122" }
%"class.WTF::HashTable.1122" = type <{ %"struct.WTF::KeyValuePair.1124"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1124" = type opaque
%"class.blink::Member.1125" = type { %"class.blink::MemberBase.1126" }
%"class.blink::MemberBase.1126" = type { %"class.blink::BeforeUnloadEventListener"* }
%"class.blink::BeforeUnloadEventListener" = type opaque
%"class.std::__1::unique_ptr.1127" = type { %"class.std::__1::__compressed_pair.1128" }
%"class.std::__1::__compressed_pair.1128" = type { %"struct.std::__1::__compressed_pair_elem.1129" }
%"struct.std::__1::__compressed_pair_elem.1129" = type { %"class.blink::DocumentResourceCoordinator"* }
%"class.blink::DocumentResourceCoordinator" = type opaque
%"class.blink::Member.1133" = type { %"class.blink::MemberBase.1134" }
%"class.blink::MemberBase.1134" = type { %"class.blink::CookieJar"* }
%"class.blink::CookieJar" = type opaque
%"class.blink::Member.1135" = type { %"class.blink::MemberBase.1136" }
%"class.blink::MemberBase.1136" = type { %"class.blink::FragmentDirective"* }
%"class.blink::FragmentDirective" = type { %"class.blink::ScriptWrappable" }
%"class.blink::HeapHashMap.1137" = type { %"class.WTF::HashMap.1140" }
%"class.WTF::HashMap.1140" = type { %"class.WTF::HashTable.1141" }
%"class.WTF::HashTable.1141" = type <{ %"struct.WTF::KeyValuePair.1143"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1143" = type opaque
%"class.blink::HeapObserverSet" = type { i32, [4 x i8], %"class.blink::HeapHashSet.1144" }
%"class.blink::HeapHashSet.1144" = type { %"class.WTF::HashSet.1147" }
%"class.WTF::HashSet.1147" = type { %"class.WTF::HashTable.1148" }
%"class.WTF::HashTable.1148" = type <{ %"class.blink::WeakMember.1150"*, i32, i32, i32, [4 x i8] }>
%"class.blink::WeakMember.1150" = type opaque
%"class.blink::Member.1151" = type { %"class.blink::MemberBase.1152" }
%"class.blink::MemberBase.1152" = type { %"class.blink::DisplayLockDocumentState"* }
%"class.blink::DisplayLockDocumentState" = type opaque
%"class.blink::Member.1153" = type { %"class.blink::MemberBase.1154" }
%"class.blink::MemberBase.1154" = type { %"class.blink::FontPreloadManager"* }
%"class.blink::FontPreloadManager" = type <{ %"class.blink::Member.410", %"class.blink::HeapHashSet.1160", i32, [4 x i8], %"class.blink::HeapTaskRunnerTimer.1167", %"class.base::TimeDelta", i32, [4 x i8] }>
%"class.blink::HeapHashSet.1160" = type { %"class.WTF::HashSet.1163" }
%"class.WTF::HashSet.1163" = type { %"class.WTF::HashTable.1164" }
%"class.WTF::HashTable.1164" = type <{ %"class.blink::Member.1166"*, i32, i32, i32, [4 x i8] }>
%"class.blink::Member.1166" = type opaque
%"class.blink::HeapTaskRunnerTimer.1167" = type { %"class.blink::TimerBase", %"class.blink::WeakMember.1168", { i64, i64 } }
%"class.blink::WeakMember.1168" = type { %"class.blink::MemberBase.1154" }
%"class.blink::WeakMember.1155" = type { %"class.blink::MemberBase" }
%"class.blink::Member.1156" = type { %"class.blink::MemberBase.1157" }
%"class.blink::MemberBase.1157" = type { %"class.blink::DocumentData"* }
%"class.blink::DocumentData" = type opaque
%"class.blink::EventListener" = type opaque
%"class.WTF::StringView" = type <{ %"class.WTF::StringImpl"*, i8*, i32, [4 x i8] }>
%"class.WTF::HashMap.1411" = type { %"class.WTF::HashTable.1412" }
%"class.WTF::HashTable.1412" = type <{ %"struct.WTF::KeyValuePair.1415"*, i32, i32, i32, [4 x i8] }>
%"struct.WTF::KeyValuePair.1415" = type { %"class.WTF::String", %"class.WTF::String" }
%"class.blink::LocalFrame" = type opaque
%"class.blink::FetchParameters" = type <{ %"class.blink::ResourceRequest", %"class.blink::TextResourceDecoderOptions", %"struct.blink::ResourceLoaderOptions", i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>
%"class.blink::ResourceRequest" = type { %"class.blink::ResourceRequestHead", %"class.blink::ResourceRequestBody" }
%"class.blink::XSLStyleSheet" = type { %"class.blink::StyleSheet", %"class.blink::Member", %"class.WTF::String", %"class.blink::KURL", i8, %"class.blink::HeapVector.1416", i8, i8, %struct._xmlDoc*, i8, i8, %"class.blink::Member.1422", %"class.blink::Member.410" }
%"class.blink::HeapVector.1416" = type { %"class.WTF::Vector.1419" }
%"class.WTF::Vector.1419" = type { %"class.WTF::VectorBuffer.1420" }
%"class.WTF::VectorBuffer.1420" = type { %"class.WTF::VectorBufferBase.1421" }
%"class.WTF::VectorBufferBase.1421" = type { %"class.blink::Member.1422"*, i32, i32 }
%struct._xmlDoc = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i32, i32, %struct._xmlDtd*, %struct._xmlDtd*, %struct._xmlNs*, i8*, i8*, i8*, i8*, i8*, i32, %struct._xmlDict*, i8*, i32, i32 }
%struct._xmlNode = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNs*, i8*, %struct._xmlAttr*, %struct._xmlNs*, i8*, i16, i16 }
%struct._xmlAttr = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlAttr*, %struct._xmlAttr*, %struct._xmlDoc*, %struct._xmlNs*, i32, i8* }
%struct._xmlDtd = type { i8*, i32, i8*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, %struct._xmlNode*, %struct._xmlNode*, %struct._xmlDoc*, i8*, i8*, i8*, i8*, i8*, i8*, i8* }
%struct._xmlNs = type { %struct._xmlNs*, i32, i8*, i8*, i8*, %struct._xmlDoc* }
%struct._xmlDict = type opaque
%"class.blink::Member.1422" = type { %"class.blink::MemberBase.1423" }
%"class.blink::MemberBase.1423" = type { %"class.blink::XSLStyleSheet"* }
%"class.blink::XSLStyleSheetResource" = type { %"class.blink::TextResource", %"class.WTF::String" }
%"class.blink::IncrementLoadEventDelayCount" = type { %"class.blink::WeakPersistent" }
%"class.blink::WeakPersistent" = type { %"class.blink::PersistentBase.1430" }
%"class.blink::PersistentBase.1430" = type { %"class.blink::Document"*, %"class.blink::PersistentNodePtr.1431" }
%"class.blink::PersistentNodePtr.1431" = type { %"class.blink::PersistentNode"* }
%"class.blink::NormalPage" = type { %"class.blink::BasePage.base", %"class.blink::NormalPage::CardTable", %"class.blink::PlatformAwareObjectStartBitmap", %"class.WTF::Vector.1508", %"class.blink::FreeList", %"class.WTF::Vector.1513" }
%"class.blink::BasePage.base" = type <{ i32 (...)**, %"class.blink::PageMemory"*, %"class.blink::BaseArena"*, %"class.blink::ThreadState"*, i64, i8, i8, i8 }>
%"class.blink::NormalPage::CardTable" = type { %"struct.std::__1::array.1507" }
%"struct.std::__1::array.1507" = type { [256 x i8] }
%"class.blink::PlatformAwareObjectStartBitmap" = type { %"class.blink::ObjectStartBitmap" }
%"class.blink::ObjectStartBitmap" = type { i8*, [2048 x i8] }
%"class.WTF::Vector.1508" = type { %"class.WTF::VectorBuffer.1509" }
%"class.WTF::VectorBuffer.1509" = type { %"class.WTF::VectorBufferBase.1510" }
%"class.WTF::VectorBufferBase.1510" = type { %"struct.blink::NormalPage::ToBeFinalizedObject"*, i32, i32 }
%"struct.blink::NormalPage::ToBeFinalizedObject" = type { %"class.blink::HeapObjectHeader"* }
%"class.blink::FreeList" = type <{ [17 x %"class.blink::FreeListEntry"*], [17 x %"class.blink::FreeListEntry"*], i32, [4 x i8] }>
%"class.blink::FreeListEntry" = type { %"class.blink::HeapObjectHeader", %"class.blink::FreeListEntry"* }
%"class.WTF::Vector.1513" = type { %"class.WTF::VectorBuffer.1514" }
%"class.WTF::VectorBuffer.1514" = type { %"class.WTF::VectorBufferBase.1515" }
%"class.WTF::VectorBufferBase.1515" = type { %"struct.blink::NormalPage::FutureFreelistEntry"*, i32, i32 }
%"struct.blink::NormalPage::FutureFreelistEntry" = type { i8*, i64 }
%"class.blink::EventTargetData" = type { %"class.blink::EventListenerMap", %"class.std::__1::unique_ptr.1461" }
%"class.blink::EventListenerMap" = type { %"class.blink::HeapVector.1449" }
%"class.blink::HeapVector.1449" = type { %"class.WTF::Vector.1452" }
%"class.WTF::Vector.1452" = type { %"class.WTF::VectorBuffer.1453" }
%"class.WTF::VectorBuffer.1453" = type { %"class.WTF::VectorBufferBase.1454", [32 x i8] }
%"class.WTF::VectorBufferBase.1454" = type { %"struct.std::__1::pair.1455"*, i32, i32 }
%"struct.std::__1::pair.1455" = type { %"class.WTF::AtomicString", %"class.blink::Member.1456" }
%"class.blink::Member.1456" = type { %"class.blink::MemberBase.1457" }
%"class.blink::MemberBase.1457" = type { %"class.blink::HeapVector.1458"* }
%"class.blink::HeapVector.1458" = type opaque
%"class.std::__1::unique_ptr.1461" = type { %"class.std::__1::__compressed_pair.1462" }
%"class.std::__1::__compressed_pair.1462" = type { %"struct.std::__1::__compressed_pair_elem.1463" }
%"struct.std::__1::__compressed_pair_elem.1463" = type { %"class.WTF::Vector.1464"* }
%"class.WTF::Vector.1464" = type opaque
%"class.v8::Value" = type { i8 }
%"class.blink::ScriptState" = type { %"class.v8::Isolate"*, %"class.blink::ScopedPersistent", %class.scoped_refptr.1439, %"class.blink::Member.1440", %"class.blink::SelfKeepAlive", %"class.util::TokenType" }
%"class.blink::ScopedPersistent" = type { %"class.v8::Persistent" }
%"class.v8::Persistent" = type { %"class.v8::PersistentBase" }
%"class.v8::PersistentBase" = type { %"class.v8::Context"* }
%class.scoped_refptr.1439 = type { %"class.blink::DOMWrapperWorld"* }
%"class.blink::Member.1440" = type { %"class.blink::MemberBase.1441" }
%"class.blink::MemberBase.1441" = type { %"class.blink::V8PerContextData"* }
%"class.blink::V8PerContextData" = type opaque
%"class.blink::SelfKeepAlive" = type { %"class.blink::Persistent.1442" }
%"class.blink::Persistent.1442" = type { %"class.blink::PersistentBase.1443" }
%"class.blink::PersistentBase.1443" = type { %"class.blink::ScriptState"*, %"class.blink::PersistentNodePtr" }
%"class.util::TokenType" = type { %"class.base::StrongAlias.1444" }
%"class.base::StrongAlias.1444" = type { %"class.base::UnguessableToken" }
%"class.blink::DOMWindow" = type opaque
%"class.blink::MessagePort" = type opaque
%"class.blink::ServiceWorker" = type opaque
%"class.blink::PortalHost" = type opaque
%"class.blink::Event" = type opaque
%"class.blink::AddEventListenerOptionsResolved" = type opaque
%"class.blink::RegisteredEventListener" = type <{ %"class.blink::Member.1445", i8, [7 x i8] }>
%"class.blink::Member.1445" = type { %"class.blink::MemberBase.1446" }
%"class.blink::MemberBase.1446" = type { %"class.blink::EventListener"* }
%"class.blink::V8UnionStringOrTrustedScript" = type opaque
%"class.blink::ExceptionState" = type { i32 (...)**, %"class.blink::ExceptionContext", %"class.blink::ExceptionState::ContextScope"*, %"class.v8::Isolate"*, i32, %"class.WTF::String", %"class.blink::TraceWrapperV8Reference.1468" }
%"class.blink::ExceptionContext" = type { i16, i16, i8*, i8* }
%"class.blink::ExceptionState::ContextScope" = type { %"class.blink::ExceptionState"*, %"class.blink::ExceptionState::ContextScope"*, %"class.blink::ExceptionContext" }
%"class.blink::TraceWrapperV8Reference.1468" = type { %"class.v8::TracedReference.1469" }
%"class.v8::TracedReference.1469" = type { %"class.v8::BasicTracedReference.1470" }
%"class.v8::BasicTracedReference.1470" = type { %"class.v8::TracedReferenceBase" }
%"struct.blink::Node::AttachContext" = type <{ %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, %"class.blink::LayoutObject"*, i8, i8, i8, i8, [4 x i8] }>
%"class.blink::LayoutObject" = type opaque
%"class.blink::EventDispatchHandlingState" = type opaque
%"class.blink::LayoutBox" = type opaque
%"class.logging::CheckOpResult" = type { i8* }
%"class.logging::CheckError" = type { %"class.logging::LogMessage"* }
%"class.logging::LogMessage" = type { i32 (...)**, i32, %"class.std::__1::basic_ostringstream", i64, i8*, i32, %"class.base::ScopedClearLastErrorBase" }
%"class.std::__1::basic_ostringstream" = type { %"class.std::__1::basic_ostream.base", %"class.std::__1::basic_stringbuf", %"class.std::__1::basic_ios.base" }
%"class.std::__1::basic_ostream.base" = type { i32 (...)** }
%"class.std::__1::basic_stringbuf" = type <{ %"class.std::__1::basic_streambuf", %"class.std::__1::basic_string", i8*, i32, [4 x i8] }>
%"class.std::__1::basic_streambuf" = type { i32 (...)**, %"class.std::__1::locale", i8*, i8*, i8*, i8*, i8*, i8* }
%"class.std::__1::locale" = type { %"class.std::__1::locale::__imp"* }
%"class.std::__1::locale::__imp" = type opaque
%"class.std::__1::basic_ios.base" = type <{ %"class.std::__1::ios_base", %"class.std::__1::basic_ostream"*, i32 }>
%"class.std::__1::ios_base" = type { i32 (...)**, i32, i64, i64, i32, i32, i8*, i8*, void (i32, %"class.std::__1::ios_base"*, i32)**, i32*, i64, i64, i64*, i64, i64, i8**, i64, i64 }
%"class.std::__1::basic_ostream" = type { i32 (...)**, %"class.std::__1::basic_ios.base" }
%"class.base::ScopedClearLastErrorBase" = type { i32 }
%"class.blink::NormalPageArena" = type { %"class.blink::BaseArena.base", [4 x i8], %"class.blink::FreeList", i8*, i64, i64 }
%"class.blink::BaseArena.base" = type <{ i32 (...)**, %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::PageStackThreadSafe", %"class.blink::ThreadState"*, i32 }>

$_ZNK5blink15ScriptWrappable18HasPendingActivityEv = comdat any

$_ZNK5blink11EventTarget17HasEventListenersEv = comdat any

$_ZNK5blink21ProcessingInstruction18GetWrapperTypeInfoEv = comdat any

$_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE = comdat any

$_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv = comdat any

$_ZNK5blink4Node11GetPseudoIdEv = comdat any

$_ZNK5blink4Node21IsMediaControlElementEv = comdat any

$_ZNK5blink4Node15IsMediaControlsEv = comdat any

$_ZNK5blink4Node14IsMediaElementEv = comdat any

$_ZNK5blink4Node20IsTextTrackContainerEv = comdat any

$_ZNK5blink4Node12IsVTTElementEv = comdat any

$_ZNK5blink4Node15IsAttributeNodeEv = comdat any

$_ZNK5blink13CharacterData19IsCharacterDataNodeEv = comdat any

$_ZNK5blink4Node19IsFrameOwnerElementEv = comdat any

$_ZNK5blink4Node27IsMediaRemotingInterstitialEv = comdat any

$_ZNK5blink4Node30IsPictureInPictureInterstitialEv = comdat any

$_ZNK5blink4Node23CanContainRangeEndPointEv = comdat any

$_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE = comdat any

$_ZN5blink4Node24StartLoadingDynamicSheetEv = comdat any

$_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE = comdat any

$_ZN5blink21ProcessingInstruction16DetachLayoutTreeEb = comdat any

$_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv = comdat any

$_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE = comdat any

$_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE = comdat any

$_ZNK5blink21ProcessingInstruction9DebugNameEv = comdat any

$_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm = comdat any

$_ZNK5blink14ResourceClient20IsFontResourceClientEv = comdat any

$_ZNK5blink14ResourceClient19IsRawResourceClientEv = comdat any

$_ZThn88_NK5blink21ProcessingInstruction9DebugNameEv = comdat any

$_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_ = comdat any

$_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv = comdat any

$_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv = comdat any

$_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm = comdat any

$_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_ = comdat any

$_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j = comdat any

$_ZN5blink25MakeGarbageCollectedTraitINS_21ProcessingInstructionEE4CallIJRNS_8DocumentERKN3WTF6StringES9_EEEPS1_DpOT_ = comdat any

$_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc = comdat any

$_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv = comdat any

$_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_ = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv = comdat any

$_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv = comdat any

$_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm = comdat any

$_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv = comdat any

$_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv = comdat any

$_ZN5blink10TraceTraitINS_10StyleSheetEE5TraceEPNS_7VisitorEPKv = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = comdat any

$_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = comdat any

@_ZTVN5blink21ProcessingInstructionE = hidden unnamed_addr constant { [76 x i8*], [10 x i8*] } { [76 x i8*] [i8* null, i8* null, i8* bitcast (i8* (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*)* @_ZN5blink21ProcessingInstructionD2Ev to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*)* @_ZN5blink21ProcessingInstructionD0Ev to i8*), i8* bitcast (i1 (%"class.blink::ScriptWrappable"*)* @_ZNK5blink15ScriptWrappable18HasPendingActivityEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget17HasEventListenersEv to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*, %"class.blink::Visitor"*)* @_ZNK5blink21ProcessingInstruction5TraceEPNS_7VisitorE to i8*), i8* bitcast (%"struct.blink::WrapperTypeInfo"* (%"class.blink::ProcessingInstruction"*)* @_ZNK5blink21ProcessingInstruction18GetWrapperTypeInfoEv to i8*), i8* bitcast (%"class.v8::Value"* (%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*)* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE to i8*), i8* bitcast (%"class.v8::Object"* (%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*)* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE to i8*), i8* bitcast (%"class.WTF::AtomicString"* (%"class.blink::Node"*)* @_ZNK5blink4Node13InterfaceNameEv to i8*), i8* bitcast (%"class.blink::ExecutionContext"* (%"class.blink::Node"*)* @_ZNK5blink4Node19GetExecutionContextEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::Node"*)* @_ZN5blink4Node6ToNodeEv to i8*), i8* bitcast (%"class.blink::DOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget11ToDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::LocalDOMWindow"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget16ToLocalDOMWindowEv to i8*), i8* bitcast (%"class.blink::MessagePort"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget13ToMessagePortEv to i8*), i8* bitcast (%"class.blink::ServiceWorker"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget15ToServiceWorkerEv to i8*), i8* bitcast (%"class.blink::PortalHost"* (%"class.blink::EventTarget"*)* @_ZN5blink11EventTarget12ToPortalHostEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node23RemoveAllEventListenersEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.blink::Event"*)* @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*)* @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv to i8*), i8* bitcast (i1 (%"class.blink::EventTarget"*, %"class.WTF::AtomicString"*, %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*)* @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::AtomicString"*, %"class.blink::RegisteredEventListener"*)* @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE to i8*), i8* bitcast (i32 (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node21DispatchEventInternalERNS_5EventE to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node18GetEventTargetDataEv to i8*), i8* bitcast (%"class.blink::EventTargetData"* (%"class.blink::Node"*)* @_ZN5blink4Node21EnsureEventTargetDataEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ProcessingInstruction"*)* @_ZNK5blink21ProcessingInstruction8nodeNameEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::CharacterData"*)* @_ZNK5blink13CharacterData9nodeValueEv to i8*), i8* bitcast (void (%"class.blink::CharacterData"*, %"class.WTF::String"*)* @_ZN5blink13CharacterData12setNodeValueERKN3WTF6StringE to i8*), i8* bitcast (i32 (%"class.blink::ProcessingInstruction"*)* @_ZNK5blink21ProcessingInstruction11getNodeTypeEv to i8*), i8* bitcast (%"class.blink::Node"* (%"class.blink::ProcessingInstruction"*, %"class.blink::Document"*, i32)* @_ZNK5blink21ProcessingInstruction5CloneERNS_8DocumentENS_17CloneChildrenFlagE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.WTF::String"*)* @_ZN5blink4Node14setTextContentERKN3WTF6StringE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"*)* @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE to i8*), i8* bitcast (i8 (%"class.blink::Node"*)* @_ZNK5blink4Node11GetPseudoIdEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21IsMediaControlElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsMediaControlsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node14IsMediaElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node20IsTextTrackContainerEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node12IsVTTElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node15IsAttributeNodeEv to i8*), i8* bitcast (i1 (%"class.blink::CharacterData"*)* @_ZNK5blink13CharacterData19IsCharacterDataNodeEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node19IsFrameOwnerElementEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node27IsMediaRemotingInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node30IsPictureInPictureInterstitialEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node23CanContainRangeEndPointEv to i8*), i8* bitcast (i1 (%"class.blink::ProcessingInstruction"*)* @_ZN5blink21ProcessingInstruction11SheetLoadedEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i32)* @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node24StartLoadingDynamicSheetEv to i8*), i8* bitcast (void (%"class.blink::Node"*, i1, i32)* @_ZN5blink4Node10SetFocusedEbNS_5mojom9FocusTypeE to i8*), i8* bitcast (void (%"class.blink::Node"*, i1)* @_ZN5blink4Node10SetDraggedEb to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv to i8*), i8* bitcast (void ()* @_ZNK5blink4Node11BoundingBoxEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*, i32)* @_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node17CanStartSelectionEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"struct.blink::Node::AttachContext"*)* @_ZN5blink4Node16AttachLayoutTreeERNS0_13AttachContextE to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*, i1)* @_ZN5blink21ProcessingInstruction16DetachLayoutTreeEb to i8*), i8* bitcast (i32 (%"class.blink::ProcessingInstruction"*, %"class.blink::ContainerNode"*)* @_ZN5blink21ProcessingInstruction12InsertedIntoERNS_13ContainerNodeE to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*, %"class.blink::ContainerNode"*)* @_ZN5blink21ProcessingInstruction11RemovedFromERNS_13ContainerNodeE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node28WillRespondToMouseMoveEventsEv to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZN5blink4Node29WillRespondToMouseClickEventsEv to i8*), i8* bitcast (%"class.blink::EventDispatchHandlingState"* (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*)* @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node17HandleLocalEventsERNS_5EventE to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Event"*)* @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE to i8*), i8* bitcast (i1 (%"class.blink::Node"*)* @_ZNK5blink4Node21HasActivationBehaviorEv to i8*), i8* bitcast (%"class.blink::LayoutBox"* (%"class.blink::Node"*)* @_ZN5blink4Node13AutoscrollBoxEv to i8*), i8* bitcast (void (%"class.blink::Node"*)* @_ZN5blink4Node14StopAutoscrollEv to i8*), i8* bitcast (void (%"class.blink::Node"*, %"class.blink::Document"*)* @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::Node"*)* @_ZNK5blink4Node13DebugNodeNameEv to i8*), i8* bitcast (%"class.blink::ComputedStyle"* (%"class.blink::Node"*, i8, %"class.WTF::AtomicString"*)* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*, %"class.blink::Resource"*)* @_ZN5blink21ProcessingInstruction14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ProcessingInstruction"*)* @_ZNK5blink21ProcessingInstruction9DebugNameEv to i8*)], [10 x i8*] [i8* inttoptr (i64 -88 to i8*), i8* null, i8* bitcast (void (%"class.blink::ProcessingInstruction"*, %"class.blink::Visitor"*)* @_ZThn88_NK5blink21ProcessingInstruction5TraceEPNS_7VisitorE to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*)* @_ZThn88_N5blink21ProcessingInstructionD1Ev to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*)* @_ZThn88_N5blink21ProcessingInstructionD0Ev to i8*), i8* bitcast (void (%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64)* @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm to i8*), i8* bitcast (void (%"class.blink::ProcessingInstruction"*, %"class.blink::Resource"*)* @_ZThn88_N5blink21ProcessingInstruction14NotifyFinishedEPNS_8ResourceE to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient20IsFontResourceClientEv to i8*), i8* bitcast (i1 (%"class.blink::ResourceClient"*)* @_ZNK5blink14ResourceClient19IsRawResourceClientEv to i8*), i8* bitcast (%"class.WTF::StringImpl"* (%"class.blink::ProcessingInstruction"*)* @_ZThn88_NK5blink21ProcessingInstruction9DebugNameEv to i8*)] }, align 8
@.str = private unnamed_addr constant [15 x i8] c"xml-stylesheet\00", align 1
@.str.1 = private unnamed_addr constant [5 x i8] c"type\00", align 1
@.str.2 = private unnamed_addr constant [9 x i8] c"text/css\00", align 1
@.str.3 = private unnamed_addr constant [9 x i8] c"text/xml\00", align 1
@.str.4 = private unnamed_addr constant [9 x i8] c"text/xsl\00", align 1
@.str.5 = private unnamed_addr constant [16 x i8] c"application/xml\00", align 1
@.str.6 = private unnamed_addr constant [22 x i8] c"application/xhtml+xml\00", align 1
@.str.7 = private unnamed_addr constant [20 x i8] c"application/rss+xml\00", align 1
@.str.8 = private unnamed_addr constant [21 x i8] c"application/atom+xml\00", align 1
@.str.9 = private unnamed_addr constant [5 x i8] c"href\00", align 1
@.str.10 = private unnamed_addr constant [8 x i8] c"charset\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"alternate\00", align 1
@.str.12 = private unnamed_addr constant [4 x i8] c"yes\00", align 1
@.str.13 = private unnamed_addr constant [6 x i8] c"title\00", align 1
@.str.14 = private unnamed_addr constant [6 x i8] c"media\00", align 1
@_ZN5blink26fetch_initiator_type_names22kProcessinginstructionE = external local_unnamed_addr constant %"class.WTF::AtomicString"*, align 8
@__const._ZN5blink21ProcessingInstruction7ProcessERKN3WTF6StringES4_.params = private unnamed_addr constant <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.67, %class.scoped_refptr.67, %class.scoped_refptr.67, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.70, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.108 } } } }, { { { { i8, [7 x i8], %union.anon.108 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.103 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.119 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.165", i8, i8, [6 x i8], %class.scoped_refptr.169, %class.scoped_refptr.366, %class.scoped_refptr.368 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }> <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.67, %class.scoped_refptr.67, %class.scoped_refptr.67, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.70, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.108 } } } }, { { { { i8, [7 x i8], %union.anon.108 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.103 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.119 }, %"class.blink::ResourceRequestBody" } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.67, %class.scoped_refptr.67, %class.scoped_refptr.67, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.70, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.108 } } } }, { { { { i8, [7 x i8], %union.anon.108 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.103 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.119 } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.29" { %"class.std::__1::__compressed_pair.30" { %"struct.std::__1::__compressed_pair_elem.31" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::TimeDelta" { i64 -6148914691236517206 }, <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } }, i8, [7 x i8] }> <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } } { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } { %"class.url::SchemeHostPort" <{ %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.40" { %"struct.std::__1::__compressed_pair_elem.41" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.42 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.40" { %"struct.std::__1::__compressed_pair_elem.41" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.42 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, i16 -21846, [6 x i8] c"\AA\AA\AA\AA\AA\AA" }>, { { { { i8, [7 x i8], %union.anon.66 } } } } { { { { i8, [7 x i8], %union.anon.66 } } } { { { i8, [7 x i8], %union.anon.66 } } { { i8, [7 x i8], %union.anon.66 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.66 { %"class.url::Origin::Nonce" { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA" }>, %class.scoped_refptr.67 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.67 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %class.scoped_refptr.67 { %"class.blink::SecurityOrigin"* inttoptr (i64 -6148914691236517206 to %"class.blink::SecurityOrigin"*) }, %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.blink::HTTPHeaderMap" { %"class.WTF::HashMap" { %"class.WTF::HashTable" <{ %"struct.WTF::KeyValuePair"* inttoptr (i64 -6148914691236517206 to %"struct.WTF::KeyValuePair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> } }, i16 -21846, [2 x i8] c"\AA\AA", i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i32 -1431655766, i32 -1431655766, %class.scoped_refptr.70 { %"class.blink::WebURLRequestExtraData"* inttoptr (i64 -6148914691236517206 to %"class.blink::WebURLRequestExtraData"*) }, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, i32 -1431655766, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.29" { %"class.std::__1::__compressed_pair.30" { %"struct.std::__1::__compressed_pair_elem.31" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.29" { %"class.std::__1::__compressed_pair.30" { %"struct.std::__1::__compressed_pair_elem.31" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } } } { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } } { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } { i32 -1431655766, i32 -1431655766, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.WTF::Vector.94" { %"class.WTF::VectorBuffer.95" { %"class.WTF::VectorBufferBase.96" { %class.scoped_refptr.67* inttoptr (i64 -6148914691236517206 to %class.scoped_refptr.67*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::Vector.54" { %"class.WTF::VectorBuffer.55" { %"class.WTF::VectorBufferBase.56" { %"class.WTF::String"* inttoptr (i64 -6148914691236517206 to %"class.WTF::String"*), i32 -1431655766, i32 -1431655766 } } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } } { { { { i8, [7 x i8], %union.anon.103 } } } { { { i8, [7 x i8], %union.anon.103 } } { { i8, [7 x i8], %union.anon.103 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.103 { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.108 } } } }, { { { { i8, [7 x i8], %union.anon.108 } } } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.108 } } } } { { { { i8, [7 x i8], %union.anon.108 } } } { { { i8, [7 x i8], %union.anon.108 } } { { i8, [7 x i8], %union.anon.108 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.108 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } }, { { { { i8, [7 x i8], %union.anon.108 } } } } { { { { i8, [7 x i8], %union.anon.108 } } } { { { i8, [7 x i8], %union.anon.108 } } { { i8, [7 x i8], %union.anon.108 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.108 { %"class.base::TimeDelta" { i64 -6148914691236517206 } } } } } } }, i8 -86, i8 -86, i8 -86, i8 -86, [4 x i8] c"\AA\AA\AA\AA", { { { { i8, [7 x i8], %union.anon.113 } } } } { { { { i8, [7 x i8], %union.anon.113 } } } { { { i8, [7 x i8], %union.anon.113 } } { { i8, [7 x i8], %union.anon.113 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.113 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } } { { { { i8, [7 x i8], %union.anon.103 } } } { { { i8, [7 x i8], %union.anon.103 } } { { i8, [7 x i8], %union.anon.103 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.103 { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { { { { i8, [7 x i8], %union.anon.103 } } } } { { { { i8, [7 x i8], %union.anon.103 } } } { { { i8, [7 x i8], %union.anon.103 } } { { i8, [7 x i8], %union.anon.103 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.103 { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } } } } } }, i64 -6148914691236517206, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, i64 -6148914691236517206, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, i8 -86, [2 x i8] c"\AA\AA", { { { { i8, [7 x i8], %union.anon.113 } } } } { { { { i8, [7 x i8], %union.anon.113 } } } { { { i8, [7 x i8], %union.anon.113 } } { { i8, [7 x i8], %union.anon.113 } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %union.anon.113 { %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } } } } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } } { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } { i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.29" { %"class.std::__1::__compressed_pair.30" { %"struct.std::__1::__compressed_pair_elem.31" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, %"class.base::UnguessableToken" { %"class.base::Token" { i64 -6148914691236517206, i64 -6148914691236517206 } }, %"class.mojo::PendingRemote" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } } } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.119 { %"class.base::RefCountedData"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData"*) } }, %"class.blink::ResourceRequestBody" { %class.scoped_refptr.1425 { %"class.blink::EncodedFormData"* inttoptr (i64 -6148914691236517206 to %"class.blink::EncodedFormData"*) }, %"class.mojo::PendingRemote.1426" { %"struct.mojo::internal::PendingRemoteState" { %"class.mojo::ScopedHandleBase" { %"class.mojo::MessagePipeHandle" { %"class.mojo::Handle" { i32 -1431655766 } } }, i32 -1431655766 } } } }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, [3 x i8], [5 x i8] }> <{ i32 -1431655766, i32 -1431655766, %"class.WTF::TextEncoding" { i8* inttoptr (i64 -6148914691236517206 to i8*) }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", i8* inttoptr (i64 -6148914691236517206 to i8*), { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } { i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* } { %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, %"struct.url::Component" { i32 -1431655766, i32 -1431655766 }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"struct.url::Parsed"* inttoptr (i64 -6148914691236517206 to %"struct.url::Parsed"*) }, %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.std::__1::unique_ptr.29" { %"class.std::__1::__compressed_pair.30" { %"struct.std::__1::__compressed_pair_elem.31" { %"class.blink::KURL"* inttoptr (i64 -6148914691236517206 to %"class.blink::KURL"*) } } } }, [3 x i8] c"\AA\AA\AA", [5 x i8] c"\AA\AA\AA\AA\AA" }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.165", i8, i8, [6 x i8], %class.scoped_refptr.169, %class.scoped_refptr.366, %class.scoped_refptr.368 } { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" } { %"class.WTF::AtomicString" { %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, %"class.WTF::TextPosition" { %"class.WTF::OrdinalNumber" { i32 -1431655766 }, %"class.WTF::OrdinalNumber" { i32 -1431655766 } }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } } }, i8 -86, [3 x i8] c"\AA\AA\AA", i32 -1431655766, i8 -86, i8 -86, %"class.base::StrongAlias" { i8 -86 }, [5 x i8] c"\AA\AA\AA\AA\AA", %"class.WTF::String" { %class.scoped_refptr.6 { %"class.WTF::StringImpl"* inttoptr (i64 -6148914691236517206 to %"class.WTF::StringImpl"*) } }, %"class.WTF::HashSet.165" { %"class.WTF::HashTable.166" <{ %"struct.std::__1::pair"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::pair"*), i32 -1431655766, i32 -1431655766, i32 -1431655766, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %class.scoped_refptr.169 { %"class.blink::DOMWrapperWorld"* inttoptr (i64 -6148914691236517206 to %"class.blink::DOMWrapperWorld"*) }, %class.scoped_refptr.366 { %"class.base::RefCountedData.367"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.367"*) }, %class.scoped_refptr.368 { %"class.base::RefCountedData.369"* inttoptr (i64 -6148914691236517206 to %"class.base::RefCountedData.369"*) } }, i32 -1431655766, i32 -1431655766, %"struct.blink::FetchParameters::ResourceWidth" <{ float 0xFFFFFFFFE0000000, i8 -86, [3 x i8] c"\AA\AA\AA" }>, %"class.blink::ClientHintsPreferences" { %"struct.blink::WebEnabledClientHints" { [16 x i8] c"\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA\AA" } }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, i8 -86, [5 x i8] c"\AA\AA\AA\AA\AA" }>, align 8
@_ZTVN5blink13CharacterDataE = external unnamed_addr constant { [74 x i8*] }, align 8
@_ZN3WTF14g_empty_stringE = external local_unnamed_addr constant %"class.WTF::String"*, align 8
@_ZTVN5blink14ResourceClientE = external unnamed_addr constant { [10 x i8*] }, align 8
@_ZN5blink11ThreadState16thread_specific_E = external local_unnamed_addr global %"class.WTF::ThreadSpecific"*, align 8
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv = private unnamed_addr constant [68 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ThreadState *]\00", align 1
@.str.15 = private unnamed_addr constant [44 x i8] c"count <= MaxElementCountInBackingStore<T>()\00", align 1
@.str.16 = private unnamed_addr constant [78 x i8] c"../../third_party/blink/renderer/platform/wtf/allocator/partition_allocator.h\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv = private unnamed_addr constant [119 x i8] c"const char *WTF::GetStringWithTypeName() [T = std::__1::pair<void *, bool (*)(const blink::LivenessBroker &, void *)>]\00", align 1
@_ZN5blink11GCInfoTable13global_table_E = external local_unnamed_addr global %"class.blink::GCInfoTable"*, align 8
@_ZN3WTF10StringImpl6empty_E = external local_unnamed_addr global %"class.WTF::StringImpl"*, align 8
@_ZN5blink26RuntimeEnabledFeaturesBase16is_xslt_enabled_E = external local_unnamed_addr global i8, align 1
@_ZN5blink21ProcessingInstruction18wrapper_type_info_E = external local_unnamed_addr constant %"struct.blink::WrapperTypeInfo"*, align 8
@.str.17 = private unnamed_addr constant [22 x i8] c"ProcessingInstruction\00", align 1
@_ZN5blink11ThreadState26main_thread_state_storage_E = external local_unnamed_addr global [0 x i8], align 1
@.str.19 = private unnamed_addr constant [23 x i8] c"allocation_size > size\00", align 1
@.str.20 = private unnamed_addr constant [59 x i8] c"../../third_party/blink/renderer/platform/heap/impl/heap.h\00", align 1
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv, i8 1 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv = private unnamed_addr constant [70 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::ScriptWrappable]\00", align 1
@_ZN5blink11ThreadState25incremental_marking_flag_E = external local_unnamed_addr global %"class.blink::AtomicEntryFlag", align 4
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv = private unnamed_addr constant [71 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::CSSParserContext]\00", align 1
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4
@.str.21 = private unnamed_addr constant [13 x i8] c"InternalNode\00", align 1
@__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv = private unnamed_addr constant [73 x i8] c"const char *WTF::GetStringWithTypeName() [T = blink::StyleSheetContents]\00", align 1
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo = linkonce_odr hidden constant %"struct.blink::GCInfo" { void (%"class.blink::Visitor"*, i8*)* @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv, void (i8*)* @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv, { i8*, i8 } (i8*)* @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv, i8 0 }, comdat, align 8
@_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index = linkonce_odr hidden global { { i32 } } zeroinitializer, comdat, align 4

@_ZN5blink21ProcessingInstructionC1ERNS_8DocumentERKN3WTF6StringES6_ = hidden unnamed_addr alias void (%"class.blink::ProcessingInstruction"*, %"class.blink::Document"*, %"class.WTF::String"*, %"class.WTF::String"*), void (%"class.blink::ProcessingInstruction"*, %"class.blink::Document"*, %"class.WTF::String"*, %"class.WTF::String"*)* @_ZN5blink21ProcessingInstructionC2ERNS_8DocumentERKN3WTF6StringES6_
@_ZN5blink21ProcessingInstructionD1Ev = hidden unnamed_addr alias void (%"class.blink::ProcessingInstruction"*), void (%"class.blink::ProcessingInstruction"*)* @_ZN5blink21ProcessingInstructionD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstructionC2ERNS_8DocumentERKN3WTF6StringES6_(%"class.blink::ProcessingInstruction"*, %"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* nocapture readonly dereferenceable(8), %"class.WTF::String"* nocapture readonly dereferenceable(8)) unnamed_addr #0 align 2 {
  %5 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %1, i64 0, i32 1
  %6 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4NodeC2EPNS_9TreeScopeENS0_16ConstructionTypeE(%"class.blink::Node"* %6, %"class.blink::TreeScope"* %5, i32 1084) #9
  %7 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [74 x i8*] }, { [74 x i8*] }* @_ZTVN5blink13CharacterDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  %8 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 1
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  store %"class.blink::ParkableStringImpl"* null, %"class.blink::ParkableStringImpl"** %9, align 8
  %10 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  %11 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %10, align 8
  %12 = icmp eq %"class.WTF::StringImpl"* %11, null
  %13 = load %"class.WTF::String"*, %"class.WTF::String"** @_ZN3WTF14g_empty_stringE, align 8
  %14 = select i1 %12, %"class.WTF::String"* %13, %"class.WTF::String"* %3
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %14, i64 0, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  store %"class.WTF::StringImpl"* %16, %"class.WTF::StringImpl"** %17, align 8
  %18 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %18, label %36, label %19

19:                                               ; preds = %4
  %20 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %21 = load atomic i32, i32* %20 monotonic, align 4
  %22 = and i32 %21, 2
  %23 = icmp eq i32 %22, 0
  br i1 %23, label %24, label %36

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %26 = load i32, i32* %25, align 4
  %27 = zext i32 %26 to i33
  %28 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %27, i33 1) #9
  %29 = extractvalue { i33, i1 } %28, 1
  %30 = extractvalue { i33, i1 } %28, 0
  %31 = icmp slt i33 %30, 0
  %32 = or i1 %29, %31
  br i1 %32, label %33, label %34, !prof !2

33:                                               ; preds = %24
  tail call void @llvm.trap() #9
  unreachable

34:                                               ; preds = %24
  %35 = trunc i33 %30 to i32
  store i32 %35, i32* %25, align 4
  br label %36

36:                                               ; preds = %4, %19, %34
  %37 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1
  %38 = bitcast %"class.blink::ResourceClient.base"* %37 to %"class.blink::ResourceClient"*
  %39 = getelementptr inbounds %"class.blink::ResourceClient.base", %"class.blink::ResourceClient.base"* %37, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [10 x i8*] }, { [10 x i8*] }* @_ZTVN5blink14ResourceClientE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %40 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1, i32 1
  tail call void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"* %40, %"class.blink::ResourceClient"* %38) #9
  %41 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1, i32 3, i32 0, i32 0
  store %"class.blink::Resource"* null, %"class.blink::Resource"** %41, align 8
  %42 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1, i32 4
  store i8 0, i8* %42, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [76 x i8*], [10 x i8*] }, { [76 x i8*], [10 x i8*] }* @_ZTVN5blink21ProcessingInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %7, align 8
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [76 x i8*], [10 x i8*] }, { [76 x i8*], [10 x i8*] }* @_ZTVN5blink21ProcessingInstructionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %39, align 8
  %43 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %44 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %43, align 8
  %45 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 2, i32 0, i32 0
  store %"class.WTF::StringImpl"* %44, %"class.WTF::StringImpl"** %45, align 8
  %46 = icmp eq %"class.WTF::StringImpl"* %44, null
  br i1 %46, label %64, label %47

47:                                               ; preds = %36
  %48 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %49 = load atomic i32, i32* %48 monotonic, align 4
  %50 = and i32 %49, 2
  %51 = icmp eq i32 %50, 0
  br i1 %51, label %52, label %64

52:                                               ; preds = %47
  %53 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %44, i64 0, i32 0
  %54 = load i32, i32* %53, align 4
  %55 = zext i32 %54 to i33
  %56 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %55, i33 1) #9
  %57 = extractvalue { i33, i1 } %56, 1
  %58 = extractvalue { i33, i1 } %56, 0
  %59 = icmp slt i33 %58, 0
  %60 = or i1 %57, %59
  br i1 %60, label %61, label %62, !prof !2

61:                                               ; preds = %52
  tail call void @llvm.trap() #9
  unreachable

62:                                               ; preds = %52
  %63 = trunc i33 %58 to i32
  store i32 %63, i32* %53, align 4
  br label %64

64:                                               ; preds = %36, %47, %62
  %65 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 3, i32 0, i32 0
  %66 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 7
  %67 = bitcast %"class.WTF::StringImpl"** %65 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %67, i8 0, i64 32, i1 false)
  tail call void @_ZN5blink18StyleEngineContextC1Ev(%"class.blink::StyleEngineContext"* %66) #9
  %68 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 8
  %69 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 12, i32 0, i32 0
  store %"class.blink::ProcessingInstruction::DetachableEventListener"* null, %"class.blink::ProcessingInstruction::DetachableEventListener"** %69, align 8
  %70 = bitcast i8* %68 to i32*
  store i32 0, i32* %70, align 1
  ret void
}

declare void @_ZN5blink18StyleEngineContextC1Ev(%"class.blink::StyleEngineContext"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstructionD2Ev(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [76 x i8*], [10 x i8*] }, { [76 x i8*], [10 x i8*] }* @_ZTVN5blink21ProcessingInstructionE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [76 x i8*], [10 x i8*] }, { [76 x i8*], [10 x i8*] }* @_ZTVN5blink21ProcessingInstructionE, i64 0, inrange i32 1, i64 2) to i32 (...)**), i32 (...)*** %3, align 8
  %4 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 5, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  %6 = icmp eq %"class.WTF::StringImpl"* %5, null
  br i1 %6, label %20, label %7

7:                                                ; preds = %1
  %8 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load atomic i32, i32* %8 monotonic, align 4
  %10 = and i32 %9, 2
  %11 = icmp eq i32 %10, 0
  %12 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %5, i64 0, i32 0
  %13 = load i32, i32* %12, align 4
  br i1 %11, label %14, label %16

14:                                               ; preds = %7
  %15 = add i32 %13, -1
  store i32 %15, i32* %12, align 4
  br label %16

16:                                               ; preds = %14, %7
  %17 = phi i32 [ %15, %14 ], [ %13, %7 ]
  %18 = icmp eq i32 %17, 0
  br i1 %18, label %19, label %20

19:                                               ; preds = %16
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %5) #9
  br label %20

20:                                               ; preds = %1, %16, %19
  %21 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 4, i32 0, i32 0
  %22 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %21, align 8
  %23 = icmp eq %"class.WTF::StringImpl"* %22, null
  br i1 %23, label %37, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %26 = load atomic i32, i32* %25 monotonic, align 4
  %27 = and i32 %26, 2
  %28 = icmp eq i32 %27, 0
  %29 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %22, i64 0, i32 0
  %30 = load i32, i32* %29, align 4
  br i1 %28, label %31, label %33

31:                                               ; preds = %24
  %32 = add i32 %30, -1
  store i32 %32, i32* %29, align 4
  br label %33

33:                                               ; preds = %31, %24
  %34 = phi i32 [ %32, %31 ], [ %30, %24 ]
  %35 = icmp eq i32 %34, 0
  br i1 %35, label %36, label %37

36:                                               ; preds = %33
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %22) #9
  br label %37

37:                                               ; preds = %20, %33, %36
  %38 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 3, i32 0, i32 0
  %39 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %40 = icmp eq %"class.WTF::StringImpl"* %39, null
  br i1 %40, label %54, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %43 = load atomic i32, i32* %42 monotonic, align 4
  %44 = and i32 %43, 2
  %45 = icmp eq i32 %44, 0
  %46 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %39, i64 0, i32 0
  %47 = load i32, i32* %46, align 4
  br i1 %45, label %48, label %50

48:                                               ; preds = %41
  %49 = add i32 %47, -1
  store i32 %49, i32* %46, align 4
  br label %50

50:                                               ; preds = %48, %41
  %51 = phi i32 [ %49, %48 ], [ %47, %41 ]
  %52 = icmp eq i32 %51, 0
  br i1 %52, label %53, label %54

53:                                               ; preds = %50
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %39) #9
  br label %54

54:                                               ; preds = %37, %50, %53
  %55 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 2, i32 0, i32 0
  %56 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %55, align 8
  %57 = icmp eq %"class.WTF::StringImpl"* %56, null
  br i1 %57, label %71, label %58

58:                                               ; preds = %54
  %59 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load atomic i32, i32* %59 monotonic, align 4
  %61 = and i32 %60, 2
  %62 = icmp eq i32 %61, 0
  %63 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %56, i64 0, i32 0
  %64 = load i32, i32* %63, align 4
  br i1 %62, label %65, label %67

65:                                               ; preds = %58
  %66 = add i32 %64, -1
  store i32 %66, i32* %63, align 4
  br label %67

67:                                               ; preds = %65, %58
  %68 = phi i32 [ %66, %65 ], [ %64, %58 ]
  %69 = icmp eq i32 %68, 0
  br i1 %69, label %70, label %71

70:                                               ; preds = %67
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %56) #9
  br label %71

71:                                               ; preds = %54, %67, %70
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [74 x i8*] }, { [74 x i8*] }* @_ZTVN5blink13CharacterDataE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %72 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 3, i32 0, i32 0
  %73 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %72, align 8
  %74 = icmp eq %"class.WTF::StringImpl"* %73, null
  br i1 %74, label %88, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %77 = load atomic i32, i32* %76 monotonic, align 4
  %78 = and i32 %77, 2
  %79 = icmp eq i32 %78, 0
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %73, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  br i1 %79, label %82, label %84

82:                                               ; preds = %75
  %83 = add i32 %81, -1
  store i32 %83, i32* %80, align 4
  br label %84

84:                                               ; preds = %82, %75
  %85 = phi i32 [ %83, %82 ], [ %81, %75 ]
  %86 = icmp eq i32 %85, 0
  br i1 %86, label %87, label %88

87:                                               ; preds = %84
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %73) #9
  br label %88

88:                                               ; preds = %71, %84, %87
  %89 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 2
  tail call void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"* %89) #9
  %90 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4NodeD2Ev(%"class.blink::Node"* %90) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N5blink21ProcessingInstructionD1Ev(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::ResourceClient.base"* %2 to %"class.blink::ProcessingInstruction"*
  tail call void @_ZN5blink21ProcessingInstructionD2Ev(%"class.blink::ProcessingInstruction"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstructionD0Ev(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 align 2 {
  tail call void @_ZN5blink21ProcessingInstructionD2Ev(%"class.blink::ProcessingInstruction"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N5blink21ProcessingInstructionD0Ev(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 -1, i32 1
  %3 = bitcast %"class.blink::ResourceClient.base"* %2 to %"class.blink::ProcessingInstruction"*
  tail call void @_ZN5blink21ProcessingInstructionD2Ev(%"class.blink::ProcessingInstruction"* %3) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::EventListener"* @_ZN5blink21ProcessingInstruction20EventListenerForXSLTEv(%"class.blink::ProcessingInstruction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 12, i32 0, i32 0
  %3 = load %"class.blink::ProcessingInstruction::DetachableEventListener"*, %"class.blink::ProcessingInstruction::DetachableEventListener"** %2, align 8
  %4 = icmp eq %"class.blink::ProcessingInstruction::DetachableEventListener"* %3, null
  br i1 %4, label %11, label %5

5:                                                ; preds = %1
  %6 = bitcast %"class.blink::ProcessingInstruction::DetachableEventListener"* %3 to %"class.blink::EventListener"* (%"class.blink::ProcessingInstruction::DetachableEventListener"*)***
  %7 = load %"class.blink::EventListener"* (%"class.blink::ProcessingInstruction::DetachableEventListener"*)**, %"class.blink::EventListener"* (%"class.blink::ProcessingInstruction::DetachableEventListener"*)*** %6, align 8
  %8 = getelementptr inbounds %"class.blink::EventListener"* (%"class.blink::ProcessingInstruction::DetachableEventListener"*)*, %"class.blink::EventListener"* (%"class.blink::ProcessingInstruction::DetachableEventListener"*)** %7, i64 3
  %9 = load %"class.blink::EventListener"* (%"class.blink::ProcessingInstruction::DetachableEventListener"*)*, %"class.blink::EventListener"* (%"class.blink::ProcessingInstruction::DetachableEventListener"*)** %8, align 8
  %10 = tail call %"class.blink::EventListener"* %9(%"class.blink::ProcessingInstruction::DetachableEventListener"* nonnull %3) #9
  br label %11

11:                                               ; preds = %1, %5
  %12 = phi %"class.blink::EventListener"* [ %10, %5 ], [ null, %1 ]
  ret %"class.blink::EventListener"* %12
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstruction25ClearEventListenerForXSLTEv(%"class.blink::ProcessingInstruction"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 12, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase.398", %"class.blink::MemberBase.398"* %2, i64 0, i32 0
  %4 = load %"class.blink::ProcessingInstruction::DetachableEventListener"*, %"class.blink::ProcessingInstruction::DetachableEventListener"** %3, align 8
  %5 = icmp eq %"class.blink::ProcessingInstruction::DetachableEventListener"* %4, null
  br i1 %5, label %12, label %6

6:                                                ; preds = %1
  %7 = bitcast %"class.blink::ProcessingInstruction::DetachableEventListener"* %4 to void (%"class.blink::ProcessingInstruction::DetachableEventListener"*)***
  %8 = load void (%"class.blink::ProcessingInstruction::DetachableEventListener"*)**, void (%"class.blink::ProcessingInstruction::DetachableEventListener"*)*** %7, align 8
  %9 = getelementptr inbounds void (%"class.blink::ProcessingInstruction::DetachableEventListener"*)*, void (%"class.blink::ProcessingInstruction::DetachableEventListener"*)** %8, i64 4
  %10 = load void (%"class.blink::ProcessingInstruction::DetachableEventListener"*)*, void (%"class.blink::ProcessingInstruction::DetachableEventListener"*)** %9, align 8
  tail call void %10(%"class.blink::ProcessingInstruction::DetachableEventListener"* nonnull %4) #9
  %11 = bitcast %"class.blink::MemberBase.398"* %2 to i64*
  store atomic i64 0, i64* %11 monotonic, align 8
  br label %12

12:                                               ; preds = %1, %6
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.WTF::StringImpl"* @_ZNK5blink21ProcessingInstruction8nodeNameEv(%"class.blink::ProcessingInstruction"* nocapture readonly) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 2, i32 0, i32 0
  %3 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %2, align 8
  %4 = icmp eq %"class.WTF::StringImpl"* %3, null
  br i1 %4, label %22, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load atomic i32, i32* %6 monotonic, align 4
  %8 = and i32 %7, 2
  %9 = icmp eq i32 %8, 0
  br i1 %9, label %10, label %22

10:                                               ; preds = %5
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %3, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  %13 = zext i32 %12 to i33
  %14 = tail call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %13, i33 1) #9
  %15 = extractvalue { i33, i1 } %14, 1
  %16 = extractvalue { i33, i1 } %14, 0
  %17 = icmp slt i33 %16, 0
  %18 = or i1 %15, %17
  br i1 %18, label %19, label %20, !prof !2

19:                                               ; preds = %10
  tail call void @llvm.trap() #9
  unreachable

20:                                               ; preds = %10
  %21 = trunc i33 %16 to i32
  store i32 %21, i32* %11, align 4
  br label %22

22:                                               ; preds = %1, %5, %20
  ret %"class.WTF::StringImpl"* %3
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden i32 @_ZNK5blink21ProcessingInstruction11getNodeTypeEv(%"class.blink::ProcessingInstruction"* nocapture readnone) unnamed_addr #2 align 2 {
  ret i32 7
}

; Function Attrs: nounwind ssp uwtable
define hidden %"class.blink::Node"* @_ZNK5blink21ProcessingInstruction5CloneERNS_8DocumentENS_17CloneChildrenFlagE(%"class.blink::ProcessingInstruction"*, %"class.blink::Document"* dereferenceable(2848), i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 2
  %5 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 3
  %6 = tail call %"class.blink::ProcessingInstruction"* @_ZN5blink25MakeGarbageCollectedTraitINS_21ProcessingInstructionEE4CallIJRNS_8DocumentERKN3WTF6StringES9_EEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848) %1, %"class.WTF::String"* dereferenceable(8) %4, %"class.WTF::String"* dereferenceable(8) %5) #9
  %7 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %6, i64 0, i32 0, i32 0
  ret %"class.blink::Node"* %7
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstruction19DidAttributeChangedEv(%"class.blink::ProcessingInstruction"*) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = alloca %"class.WTF::String", align 8
  %4 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0
  %5 = getelementptr inbounds %"class.blink::MemberBase.396", %"class.blink::MemberBase.396"* %4, i64 0, i32 0
  %6 = load %"class.blink::StyleSheet"*, %"class.blink::StyleSheet"** %5, align 8
  %7 = icmp eq %"class.blink::StyleSheet"* %6, null
  br i1 %7, label %34, label %8

8:                                                ; preds = %1
  %9 = bitcast %"class.blink::StyleSheet"* %6 to i1 (%"class.blink::StyleSheet"*)***
  %10 = load i1 (%"class.blink::StyleSheet"*)**, i1 (%"class.blink::StyleSheet"*)*** %9, align 8
  %11 = getelementptr inbounds i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %10, i64 20
  %12 = load i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %11, align 8
  %13 = tail call zeroext i1 %12(%"class.blink::StyleSheet"* nonnull %6) #9
  br i1 %13, label %14, label %27

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %16 = load i8, i8* %15, align 4, !range !3
  %17 = icmp eq i8 %16, 0
  br i1 %17, label %18, label %27

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  %20 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %23, i64 0, i32 59, i32 0, i32 0
  %25 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 7
  tail call void @_ZN5blink11StyleEngine18RemovePendingSheetERNS_4NodeERKNS_18StyleEngineContextE(%"class.blink::StyleEngine"* %25, %"class.blink::Node"* dereferenceable(64) %19, %"class.blink::StyleEngineContext"* dereferenceable(1) %26) #9
  br label %27

27:                                               ; preds = %18, %14, %8
  %28 = load %"class.blink::StyleSheet"*, %"class.blink::StyleSheet"** %5, align 8
  %29 = bitcast %"class.blink::MemberBase.396"* %4 to i64*
  store atomic i64 0, i64* %29 monotonic, align 8
  %30 = bitcast %"class.blink::StyleSheet"* %28 to void (%"class.blink::StyleSheet"*)***
  %31 = load void (%"class.blink::StyleSheet"*)**, void (%"class.blink::StyleSheet"*)*** %30, align 8
  %32 = getelementptr inbounds void (%"class.blink::StyleSheet"*)*, void (%"class.blink::StyleSheet"*)** %31, i64 18
  %33 = load void (%"class.blink::StyleSheet"*)*, void (%"class.blink::StyleSheet"*)** %32, align 8
  tail call void %33(%"class.blink::StyleSheet"* %28) #9
  br label %34

34:                                               ; preds = %1, %27
  %35 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %35) #9
  %36 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %36, align 8
  %37 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #9
  %38 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %38, align 8
  %39 = call zeroext i1 @_ZN5blink21ProcessingInstruction15CheckStyleSheetERN3WTF6StringES3_(%"class.blink::ProcessingInstruction"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  br i1 %39, label %40, label %41

40:                                               ; preds = %34
  call void @_ZN5blink21ProcessingInstruction7ProcessERKN3WTF6StringES4_(%"class.blink::ProcessingInstruction"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %2, %"class.WTF::String"* nonnull dereferenceable(8) %3)
  br label %41

41:                                               ; preds = %34, %40
  %42 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %38, align 8
  %43 = icmp eq %"class.WTF::StringImpl"* %42, null
  br i1 %43, label %57, label %44

44:                                               ; preds = %41
  %45 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load atomic i32, i32* %45 monotonic, align 4
  %47 = and i32 %46, 2
  %48 = icmp eq i32 %47, 0
  %49 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %42, i64 0, i32 0
  %50 = load i32, i32* %49, align 4
  br i1 %48, label %51, label %53

51:                                               ; preds = %44
  %52 = add i32 %50, -1
  store i32 %52, i32* %49, align 4
  br label %53

53:                                               ; preds = %51, %44
  %54 = phi i32 [ %52, %51 ], [ %50, %44 ]
  %55 = icmp eq i32 %54, 0
  br i1 %55, label %56, label %57

56:                                               ; preds = %53
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %42) #9
  br label %57

57:                                               ; preds = %41, %53, %56
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #9
  %58 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %36, align 8
  %59 = icmp eq %"class.WTF::StringImpl"* %58, null
  br i1 %59, label %73, label %60

60:                                               ; preds = %57
  %61 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %62 = load atomic i32, i32* %61 monotonic, align 4
  %63 = and i32 %62, 2
  %64 = icmp eq i32 %63, 0
  %65 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %58, i64 0, i32 0
  %66 = load i32, i32* %65, align 4
  br i1 %64, label %67, label %69

67:                                               ; preds = %60
  %68 = add i32 %66, -1
  store i32 %68, i32* %65, align 4
  br label %69

69:                                               ; preds = %67, %60
  %70 = phi i32 [ %68, %67 ], [ %66, %60 ]
  %71 = icmp eq i32 %70, 0
  br i1 %71, label %72, label %73

72:                                               ; preds = %69
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %58) #9
  br label %73

73:                                               ; preds = %57, %69, %72
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %35) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstruction18RemovePendingSheetEv(%"class.blink::ProcessingInstruction"*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %3 = load i8, i8* %2, align 4, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %14

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  %7 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %8 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %7, align 8
  %9 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %8, i64 0, i32 2, i32 0, i32 0
  %10 = load %"class.blink::Document"*, %"class.blink::Document"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %10, i64 0, i32 59, i32 0, i32 0
  %12 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %11, align 8
  %13 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 7
  tail call void @_ZN5blink11StyleEngine18RemovePendingSheetERNS_4NodeERKNS_18StyleEngineContextE(%"class.blink::StyleEngine"* %12, %"class.blink::Node"* dereferenceable(64) %6, %"class.blink::StyleEngineContext"* dereferenceable(1) %13) #9
  br label %14

14:                                               ; preds = %1, %5
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstruction10ClearSheetEv(%"class.blink::ProcessingInstruction"* nocapture) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0
  %3 = getelementptr inbounds %"class.blink::MemberBase.396", %"class.blink::MemberBase.396"* %2, i64 0, i32 0
  %4 = load %"class.blink::StyleSheet"*, %"class.blink::StyleSheet"** %3, align 8
  %5 = bitcast %"class.blink::MemberBase.396"* %2 to i64*
  store atomic i64 0, i64* %5 monotonic, align 8
  %6 = bitcast %"class.blink::StyleSheet"* %4 to void (%"class.blink::StyleSheet"*)***
  %7 = load void (%"class.blink::StyleSheet"*)**, void (%"class.blink::StyleSheet"*)*** %6, align 8
  %8 = getelementptr inbounds void (%"class.blink::StyleSheet"*)*, void (%"class.blink::StyleSheet"*)** %7, i64 18
  %9 = load void (%"class.blink::StyleSheet"*)*, void (%"class.blink::StyleSheet"*)** %8, align 8
  tail call void %9(%"class.blink::StyleSheet"* %4) #9
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #3

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ProcessingInstruction15CheckStyleSheetERN3WTF6StringES3_(%"class.blink::ProcessingInstruction"*, %"class.WTF::String"* nocapture dereferenceable(8), %"class.WTF::String"* nocapture dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.WTF::StringView", align 8
  %5 = alloca %"class.WTF::StringView", align 8
  %6 = alloca %"class.WTF::StringView", align 8
  %7 = alloca %"class.WTF::StringView", align 8
  %8 = alloca %"class.WTF::StringView", align 8
  %9 = alloca %"class.WTF::StringView", align 8
  %10 = alloca %"class.WTF::StringView", align 8
  %11 = alloca %"class.WTF::StringView", align 8
  %12 = alloca %"class.WTF::StringView", align 8
  %13 = alloca %"class.WTF::StringView", align 8
  %14 = alloca %"class.WTF::StringView", align 8
  %15 = alloca %"class.WTF::StringView", align 8
  %16 = alloca %"class.WTF::StringView", align 8
  %17 = alloca %"class.WTF::StringView", align 8
  %18 = alloca %"class.WTF::StringView", align 8
  %19 = alloca %"class.WTF::StringView", align 8
  %20 = alloca %"class.WTF::StringView", align 8
  %21 = alloca %"class.WTF::StringView", align 8
  %22 = alloca i8, align 1
  %23 = alloca %"class.WTF::HashMap.1411", align 8
  %24 = alloca %"class.WTF::String", align 8
  %25 = alloca %"class.WTF::String", align 8
  %26 = alloca %"class.WTF::String", align 8
  %27 = alloca %"class.WTF::String", align 8
  %28 = alloca %"class.WTF::String", align 8
  %29 = alloca %"class.WTF::String", align 8
  %30 = bitcast %"class.WTF::StringView"* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %30) #9
  %31 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 2, i32 0, i32 0
  %32 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %31, align 8
  %33 = icmp eq %"class.WTF::StringImpl"* %32, null
  br i1 %33, label %34, label %38

34:                                               ; preds = %3
  %35 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  store i8* null, i8** %35, align 8
  %36 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %37 = bitcast %"class.WTF::StringView"* %20 to i64*
  store i64 %36, i64* %37, align 8
  br label %46

38:                                               ; preds = %3
  %39 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 0
  store %"class.WTF::StringImpl"* %32, %"class.WTF::StringImpl"** %39, align 8
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 0, i32 1
  %41 = load i32, i32* %40, align 4
  %42 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %32, i64 1
  %43 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 1
  %44 = bitcast i8** %43 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %42, %"class.WTF::StringImpl"** %44, align 8
  %45 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %46

46:                                               ; preds = %38, %34
  %47 = phi i64 [ %45, %38 ], [ %36, %34 ]
  %48 = phi i32 [ %41, %38 ], [ 0, %34 ]
  %49 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %20, i64 0, i32 2
  store i32 %48, i32* %49, align 8
  %50 = bitcast %"class.WTF::StringView"* %21 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %50) #9
  %51 = bitcast %"class.WTF::StringView"* %21 to i64*
  store i64 %47, i64* %51, align 8
  %52 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 1
  store i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str, i64 0, i64 0), i8** %52, align 8
  %53 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %21, i64 0, i32 2
  store i32 14, i32* %53, align 8
  %54 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %20, %"class.WTF::StringView"* nonnull dereferenceable(24) %21) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %50) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %30) #9
  br i1 %54, label %55, label %942

55:                                               ; preds = %46
  %56 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %57 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %56, align 8
  %58 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %57, i64 0, i32 2, i32 0, i32 0
  %59 = load %"class.blink::Document"*, %"class.blink::Document"** %58, align 8
  %60 = call %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"* %59) #9
  %61 = icmp eq %"class.blink::LocalFrame"* %60, null
  br i1 %61, label %942, label %62

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  %64 = call %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"* %63) #9
  %65 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %64, i64 0, i32 0
  %66 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %56, align 8
  %67 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %66, i64 0, i32 2, i32 0, i32 0
  %68 = load %"class.blink::Document"*, %"class.blink::Document"** %67, align 8
  %69 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %68, i64 0, i32 0, i32 0
  %70 = icmp eq %"class.blink::Node"* %65, %69
  br i1 %70, label %71, label %942

71:                                               ; preds = %62
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %22) #9
  store i8 -86, i8* %22, align 1
  %72 = bitcast %"class.WTF::HashMap.1411"* %23 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %72) #9
  %73 = getelementptr inbounds %"class.WTF::HashMap.1411", %"class.WTF::HashMap.1411"* %23, i64 0, i32 0, i32 0
  %74 = getelementptr inbounds %"class.WTF::HashMap.1411", %"class.WTF::HashMap.1411"* %23, i64 0, i32 0, i32 1
  %75 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 3
  %76 = bitcast %"class.WTF::HashMap.1411"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %76, i8 -86, i64 24, i1 false)
  call void @_ZN5blink15ParseAttributesERKN3WTF6StringERb(%"class.WTF::HashMap.1411"* nonnull sret %23, %"class.WTF::String"* dereferenceable(8) %75, i8* nonnull dereferenceable(1) %22) #9
  %77 = load i8, i8* %22, align 1, !range !3
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %935, label %79

79:                                               ; preds = %71
  %80 = bitcast %"class.WTF::String"* %24 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %80) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %24, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.1, i64 0, i64 0), i64 4) #9
  %81 = getelementptr inbounds %"class.WTF::HashMap.1411", %"class.WTF::HashMap.1411"* %23, i64 0, i32 0
  %82 = call { %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1412"* nonnull %81, %"class.WTF::String"* nonnull dereferenceable(8) %24) #9
  %83 = extractvalue { %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"* } %82, 0
  %84 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %24, i64 0, i32 0, i32 0
  %85 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %84, align 8
  %86 = icmp eq %"class.WTF::StringImpl"* %85, null
  br i1 %86, label %100, label %87

87:                                               ; preds = %79
  %88 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %89 = load atomic i32, i32* %88 monotonic, align 4
  %90 = and i32 %89, 2
  %91 = icmp eq i32 %90, 0
  %92 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %85, i64 0, i32 0
  %93 = load i32, i32* %92, align 4
  br i1 %91, label %94, label %96

94:                                               ; preds = %87
  %95 = add i32 %93, -1
  store i32 %95, i32* %92, align 4
  br label %96

96:                                               ; preds = %94, %87
  %97 = phi i32 [ %95, %94 ], [ %93, %87 ]
  %98 = icmp eq i32 %97, 0
  br i1 %98, label %99, label %100

99:                                               ; preds = %96
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %85) #9
  br label %100

100:                                              ; preds = %79, %96, %99
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %80) #9
  %101 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  %102 = load i32, i32* %74, align 8
  %103 = zext i32 %102 to i64
  %104 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %101, i64 %103
  %105 = icmp eq %"struct.WTF::KeyValuePair.1415"* %83, %104
  br i1 %105, label %146, label %106

106:                                              ; preds = %100
  %107 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %83, i64 0, i32 1, i32 0, i32 0
  %108 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %107, align 8
  %109 = icmp eq %"class.WTF::StringImpl"* %108, null
  br i1 %109, label %146, label %110

110:                                              ; preds = %106
  %111 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %112 = load atomic i32, i32* %111 monotonic, align 4
  %113 = and i32 %112, 2
  %114 = icmp eq i32 %113, 0
  br i1 %114, label %115, label %127

115:                                              ; preds = %110
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  %118 = zext i32 %117 to i33
  %119 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %118, i33 1) #9
  %120 = extractvalue { i33, i1 } %119, 1
  %121 = extractvalue { i33, i1 } %119, 0
  %122 = icmp slt i33 %121, 0
  %123 = or i1 %120, %122
  br i1 %123, label %124, label %125, !prof !2

124:                                              ; preds = %115
  call void @llvm.trap() #9
  unreachable

125:                                              ; preds = %115
  %126 = trunc i33 %121 to i32
  store i32 %126, i32* %116, align 4
  br label %127

127:                                              ; preds = %110, %125
  %128 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 0, i32 1
  %129 = load i32, i32* %128, align 4
  %130 = icmp eq i32 %129, 0
  br i1 %130, label %152, label %131

131:                                              ; preds = %127
  %132 = bitcast %"class.WTF::StringView"* %18 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %132) #9
  %133 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %133, align 8
  %134 = load i32, i32* %128, align 4
  %135 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 1
  %136 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 1
  %137 = bitcast i8** %136 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %135, %"class.WTF::StringImpl"** %137, align 8
  %138 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %18, i64 0, i32 2
  store i32 %134, i32* %138, align 8
  %139 = bitcast %"class.WTF::StringView"* %19 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %139) #9
  %140 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %141 = bitcast %"class.WTF::StringView"* %19 to i64*
  store i64 %140, i64* %141, align 8
  %142 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.2, i64 0, i64 0), i8** %142, align 8
  %143 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %19, i64 0, i32 2
  store i32 8, i32* %143, align 8
  %144 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %18, %"class.WTF::StringView"* nonnull dereferenceable(24) %19) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %139) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %132) #9
  %145 = zext i1 %144 to i8
  br label %152

146:                                              ; preds = %106, %100
  %147 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 10
  store i8 1, i8* %147, align 1
  %148 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %148) #9
  %149 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  store i8* null, i8** %149, align 8
  %150 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %151 = bitcast %"class.WTF::StringView"* %16 to i64*
  store i64 %150, i64* %151, align 8
  br label %162

152:                                              ; preds = %127, %131
  %153 = phi i8 [ %145, %131 ], [ 1, %127 ]
  %154 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 10
  store i8 %153, i8* %154, align 1
  %155 = bitcast %"class.WTF::StringView"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %155) #9
  %156 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 0
  store %"class.WTF::StringImpl"* %108, %"class.WTF::StringImpl"** %156, align 8
  %157 = load i32, i32* %128, align 4
  %158 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %108, i64 1
  %159 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 1
  %160 = bitcast i8** %159 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %158, %"class.WTF::StringImpl"** %160, align 8
  %161 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %162

162:                                              ; preds = %152, %146
  %163 = phi i64 [ %161, %152 ], [ %150, %146 ]
  %164 = phi i8* [ %155, %152 ], [ %148, %146 ]
  %165 = phi i8* [ %154, %152 ], [ %147, %146 ]
  %166 = phi i1 [ false, %152 ], [ true, %146 ]
  %167 = phi %"class.WTF::StringImpl"* [ %108, %152 ], [ null, %146 ]
  %168 = phi i32 [ %157, %152 ], [ 0, %146 ]
  %169 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %16, i64 0, i32 2
  store i32 %168, i32* %169, align 8
  %170 = bitcast %"class.WTF::StringView"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %170) #9
  %171 = bitcast %"class.WTF::StringView"* %17 to i64*
  store i64 %163, i64* %171, align 8
  %172 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.3, i64 0, i64 0), i8** %172, align 8
  %173 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %17, i64 0, i32 2
  store i32 8, i32* %173, align 8
  %174 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %16, %"class.WTF::StringView"* nonnull dereferenceable(24) %17) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %170) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %164) #9
  br i1 %174, label %281, label %175

175:                                              ; preds = %162
  %176 = bitcast %"class.WTF::StringView"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %176) #9
  br i1 %166, label %177, label %181

177:                                              ; preds = %175
  %178 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  store i8* null, i8** %178, align 8
  %179 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %180 = bitcast %"class.WTF::StringView"* %14 to i64*
  store i64 %179, i64* %180, align 8
  br label %189

181:                                              ; preds = %175
  %182 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %182, align 8
  %183 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %184 = load i32, i32* %183, align 4
  %185 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %186 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 1
  %187 = bitcast i8** %186 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %185, %"class.WTF::StringImpl"** %187, align 8
  %188 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %189

189:                                              ; preds = %181, %177
  %190 = phi i64 [ %188, %181 ], [ %179, %177 ]
  %191 = phi i32 [ %184, %181 ], [ 0, %177 ]
  %192 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %14, i64 0, i32 2
  store i32 %191, i32* %192, align 8
  %193 = bitcast %"class.WTF::StringView"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %193) #9
  %194 = bitcast %"class.WTF::StringView"* %15 to i64*
  store i64 %190, i64* %194, align 8
  %195 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 1
  store i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.4, i64 0, i64 0), i8** %195, align 8
  %196 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %15, i64 0, i32 2
  store i32 8, i32* %196, align 8
  %197 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %14, %"class.WTF::StringView"* nonnull dereferenceable(24) %15) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %193) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %176) #9
  br i1 %197, label %281, label %198

198:                                              ; preds = %189
  %199 = bitcast %"class.WTF::StringView"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %199) #9
  br i1 %166, label %200, label %204

200:                                              ; preds = %198
  %201 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  store i8* null, i8** %201, align 8
  %202 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %203 = bitcast %"class.WTF::StringView"* %12 to i64*
  store i64 %202, i64* %203, align 8
  br label %212

204:                                              ; preds = %198
  %205 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %205, align 8
  %206 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %207 = load i32, i32* %206, align 4
  %208 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %209 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 1
  %210 = bitcast i8** %209 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %208, %"class.WTF::StringImpl"** %210, align 8
  %211 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %212

212:                                              ; preds = %204, %200
  %213 = phi i64 [ %211, %204 ], [ %202, %200 ]
  %214 = phi i32 [ %207, %204 ], [ 0, %200 ]
  %215 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %12, i64 0, i32 2
  store i32 %214, i32* %215, align 8
  %216 = bitcast %"class.WTF::StringView"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %216) #9
  %217 = bitcast %"class.WTF::StringView"* %13 to i64*
  store i64 %213, i64* %217, align 8
  %218 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 1
  store i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.5, i64 0, i64 0), i8** %218, align 8
  %219 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %13, i64 0, i32 2
  store i32 15, i32* %219, align 8
  %220 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %12, %"class.WTF::StringView"* nonnull dereferenceable(24) %13) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %216) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %199) #9
  br i1 %220, label %281, label %221

221:                                              ; preds = %212
  %222 = bitcast %"class.WTF::StringView"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %222) #9
  br i1 %166, label %223, label %227

223:                                              ; preds = %221
  %224 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  store i8* null, i8** %224, align 8
  %225 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %226 = bitcast %"class.WTF::StringView"* %10 to i64*
  store i64 %225, i64* %226, align 8
  br label %235

227:                                              ; preds = %221
  %228 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %228, align 8
  %229 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %230 = load i32, i32* %229, align 4
  %231 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %232 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 1
  %233 = bitcast i8** %232 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %231, %"class.WTF::StringImpl"** %233, align 8
  %234 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %235

235:                                              ; preds = %227, %223
  %236 = phi i64 [ %234, %227 ], [ %225, %223 ]
  %237 = phi i32 [ %230, %227 ], [ 0, %223 ]
  %238 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %10, i64 0, i32 2
  store i32 %237, i32* %238, align 8
  %239 = bitcast %"class.WTF::StringView"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %239) #9
  %240 = bitcast %"class.WTF::StringView"* %11 to i64*
  store i64 %236, i64* %240, align 8
  %241 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 1
  store i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.6, i64 0, i64 0), i8** %241, align 8
  %242 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %11, i64 0, i32 2
  store i32 21, i32* %242, align 8
  %243 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %10, %"class.WTF::StringView"* nonnull dereferenceable(24) %11) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %239) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %222) #9
  br i1 %243, label %281, label %244

244:                                              ; preds = %235
  %245 = bitcast %"class.WTF::StringView"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %245) #9
  br i1 %166, label %246, label %250

246:                                              ; preds = %244
  %247 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  store i8* null, i8** %247, align 8
  %248 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %249 = bitcast %"class.WTF::StringView"* %8 to i64*
  store i64 %248, i64* %249, align 8
  br label %258

250:                                              ; preds = %244
  %251 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %251, align 8
  %252 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %253 = load i32, i32* %252, align 4
  %254 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %255 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 1
  %256 = bitcast i8** %255 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %254, %"class.WTF::StringImpl"** %256, align 8
  %257 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %258

258:                                              ; preds = %250, %246
  %259 = phi i64 [ %257, %250 ], [ %248, %246 ]
  %260 = phi i32 [ %253, %250 ], [ 0, %246 ]
  %261 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %8, i64 0, i32 2
  store i32 %260, i32* %261, align 8
  %262 = bitcast %"class.WTF::StringView"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %262) #9
  %263 = bitcast %"class.WTF::StringView"* %9 to i64*
  store i64 %259, i64* %263, align 8
  %264 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 1
  store i8* getelementptr inbounds ([20 x i8], [20 x i8]* @.str.7, i64 0, i64 0), i8** %264, align 8
  %265 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %9, i64 0, i32 2
  store i32 19, i32* %265, align 8
  %266 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %8, %"class.WTF::StringView"* nonnull dereferenceable(24) %9) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %262) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %245) #9
  br i1 %266, label %281, label %267

267:                                              ; preds = %258
  %268 = bitcast %"class.WTF::StringView"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %268) #9
  br i1 %166, label %269, label %273

269:                                              ; preds = %267
  %270 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  store i8* null, i8** %270, align 8
  %271 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %272 = bitcast %"class.WTF::StringView"* %6 to i64*
  store i64 %271, i64* %272, align 8
  br label %283

273:                                              ; preds = %267
  %274 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 0
  store %"class.WTF::StringImpl"* %167, %"class.WTF::StringImpl"** %274, align 8
  %275 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 1
  %276 = load i32, i32* %275, align 4
  %277 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 1
  %278 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 1
  %279 = bitcast i8** %278 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %277, %"class.WTF::StringImpl"** %279, align 8
  %280 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %283

281:                                              ; preds = %258, %235, %212, %189, %162
  %282 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  store i8 1, i8* %282, align 4
  br label %297

283:                                              ; preds = %269, %273
  %284 = phi i64 [ %280, %273 ], [ %271, %269 ]
  %285 = phi i32 [ %276, %273 ], [ 0, %269 ]
  %286 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %6, i64 0, i32 2
  store i32 %285, i32* %286, align 8
  %287 = bitcast %"class.WTF::StringView"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %287) #9
  %288 = bitcast %"class.WTF::StringView"* %7 to i64*
  store i64 %284, i64* %288, align 8
  %289 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 1
  store i8* getelementptr inbounds ([21 x i8], [21 x i8]* @.str.8, i64 0, i64 0), i8** %289, align 8
  %290 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %7, i64 0, i32 2
  store i32 20, i32* %290, align 8
  %291 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %6, %"class.WTF::StringView"* nonnull dereferenceable(24) %7) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %287) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %268) #9
  %292 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %293 = zext i1 %291 to i8
  store i8 %293, i8* %292, align 4
  %294 = load i8, i8* %165, align 1, !range !3
  %295 = icmp ne i8 %294, 0
  %296 = or i1 %291, %295
  br i1 %296, label %297, label %920

297:                                              ; preds = %281, %283
  %298 = bitcast %"class.WTF::String"* %25 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %298) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %25, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.9, i64 0, i64 0), i64 4) #9
  %299 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  %300 = icmp eq %"struct.WTF::KeyValuePair.1415"* %299, null
  br i1 %300, label %378, label %301

301:                                              ; preds = %297
  %302 = load i32, i32* %74, align 8
  %303 = add i32 %302, -1
  %304 = zext i32 %303 to i64
  %305 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %306 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %307 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %306, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %308 = load atomic i32, i32* %307 monotonic, align 4
  %309 = lshr i32 %308, 8
  %310 = icmp eq i32 %309, 0
  br i1 %310, label %311, label %313

311:                                              ; preds = %301
  %312 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %306) #9
  br label %313

313:                                              ; preds = %311, %301
  %314 = phi i32 [ %312, %311 ], [ %309, %301 ]
  %315 = and i32 %314, %303
  %316 = zext i32 %315 to i64
  %317 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %299, i64 %316
  %318 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %317, i64 0, i32 0, i32 0, i32 0
  %319 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %318, align 8
  %320 = icmp eq %"class.WTF::StringImpl"* %319, null
  br i1 %320, label %378, label %321

321:                                              ; preds = %313
  %322 = xor i32 %314, -1
  %323 = lshr i32 %314, 23
  %324 = add i32 %323, %322
  %325 = shl i32 %324, 12
  %326 = xor i32 %325, %324
  %327 = lshr i32 %326, 7
  %328 = xor i32 %327, %326
  %329 = shl i32 %328, 2
  %330 = xor i32 %329, %328
  %331 = lshr i32 %330, 20
  %332 = xor i32 %331, %330
  %333 = or i32 %332, 1
  %334 = zext i32 %333 to i64
  br label %335

335:                                              ; preds = %346, %321
  %336 = phi %"struct.WTF::KeyValuePair.1415"* [ %317, %321 ], [ %351, %346 ]
  %337 = phi i64 [ %316, %321 ], [ %350, %346 ]
  %338 = phi i64 [ 0, %321 ], [ %348, %346 ]
  %339 = bitcast %"struct.WTF::KeyValuePair.1415"* %336 to i8**
  %340 = load i8*, i8** %339, align 8
  %341 = icmp eq i8* %340, inttoptr (i64 -1 to i8*)
  br i1 %341, label %346, label %342

342:                                              ; preds = %335
  %343 = bitcast i8* %340 to %"class.WTF::StringImpl"*
  %344 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %305, align 8
  %345 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %343, %"class.WTF::StringImpl"* %344) #9
  br i1 %345, label %355, label %346

346:                                              ; preds = %342, %335
  %347 = icmp eq i64 %338, 0
  %348 = select i1 %347, i64 %334, i64 %338
  %349 = add i64 %348, %337
  %350 = and i64 %349, %304
  %351 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %299, i64 %350
  %352 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %351, i64 0, i32 0, i32 0, i32 0
  %353 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %352, align 8
  %354 = icmp eq %"class.WTF::StringImpl"* %353, null
  br i1 %354, label %378, label %335

355:                                              ; preds = %342
  %356 = icmp eq %"struct.WTF::KeyValuePair.1415"* %336, null
  br i1 %356, label %378, label %357

357:                                              ; preds = %355
  %358 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %336, i64 0, i32 1, i32 0, i32 0
  %359 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %358, align 8
  %360 = icmp eq %"class.WTF::StringImpl"* %359, null
  br i1 %360, label %378, label %361

361:                                              ; preds = %357
  %362 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %363 = load atomic i32, i32* %362 monotonic, align 4
  %364 = and i32 %363, 2
  %365 = icmp eq i32 %364, 0
  br i1 %365, label %366, label %378

366:                                              ; preds = %361
  %367 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %359, i64 0, i32 0
  %368 = load i32, i32* %367, align 4
  %369 = zext i32 %368 to i33
  %370 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %369, i33 1) #9
  %371 = extractvalue { i33, i1 } %370, 1
  %372 = extractvalue { i33, i1 } %370, 0
  %373 = icmp slt i33 %372, 0
  %374 = or i1 %371, %373
  br i1 %374, label %375, label %376, !prof !2

375:                                              ; preds = %366
  call void @llvm.trap() #9
  unreachable

376:                                              ; preds = %366
  %377 = trunc i33 %372 to i32
  store i32 %377, i32* %367, align 4
  br label %378

378:                                              ; preds = %346, %313, %297, %355, %357, %361, %376
  %379 = phi %"class.WTF::StringImpl"* [ null, %355 ], [ null, %357 ], [ %359, %361 ], [ %359, %376 ], [ null, %297 ], [ null, %313 ], [ null, %346 ]
  %380 = ptrtoint %"class.WTF::StringImpl"* %379 to i64
  %381 = bitcast %"class.WTF::String"* %1 to i64*
  %382 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %383 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %382, align 8
  store i64 %380, i64* %381, align 8
  %384 = icmp eq %"class.WTF::StringImpl"* %383, null
  br i1 %384, label %398, label %385

385:                                              ; preds = %378
  %386 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %387 = load atomic i32, i32* %386 monotonic, align 4
  %388 = and i32 %387, 2
  %389 = icmp eq i32 %388, 0
  %390 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %383, i64 0, i32 0
  %391 = load i32, i32* %390, align 4
  br i1 %389, label %392, label %394

392:                                              ; preds = %385
  %393 = add i32 %391, -1
  store i32 %393, i32* %390, align 4
  br label %394

394:                                              ; preds = %392, %385
  %395 = phi i32 [ %393, %392 ], [ %391, %385 ]
  %396 = icmp eq i32 %395, 0
  br i1 %396, label %397, label %398

397:                                              ; preds = %394
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %383) #9
  br label %398

398:                                              ; preds = %397, %394, %378
  %399 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %25, i64 0, i32 0, i32 0
  %400 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %399, align 8
  %401 = icmp eq %"class.WTF::StringImpl"* %400, null
  br i1 %401, label %415, label %402

402:                                              ; preds = %398
  %403 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %404 = load atomic i32, i32* %403 monotonic, align 4
  %405 = and i32 %404, 2
  %406 = icmp eq i32 %405, 0
  %407 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %400, i64 0, i32 0
  %408 = load i32, i32* %407, align 4
  br i1 %406, label %409, label %411

409:                                              ; preds = %402
  %410 = add i32 %408, -1
  store i32 %410, i32* %407, align 4
  br label %411

411:                                              ; preds = %409, %402
  %412 = phi i32 [ %410, %409 ], [ %408, %402 ]
  %413 = icmp eq i32 %412, 0
  br i1 %413, label %414, label %415

414:                                              ; preds = %411
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %400) #9
  br label %415

415:                                              ; preds = %398, %411, %414
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %298) #9
  %416 = bitcast %"class.WTF::String"* %26 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %416) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %26, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.10, i64 0, i64 0), i64 7) #9
  %417 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  %418 = icmp eq %"struct.WTF::KeyValuePair.1415"* %417, null
  br i1 %418, label %496, label %419

419:                                              ; preds = %415
  %420 = load i32, i32* %74, align 8
  %421 = add i32 %420, -1
  %422 = zext i32 %421 to i64
  %423 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %424 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  %425 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %424, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %426 = load atomic i32, i32* %425 monotonic, align 4
  %427 = lshr i32 %426, 8
  %428 = icmp eq i32 %427, 0
  br i1 %428, label %429, label %431

429:                                              ; preds = %419
  %430 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %424) #9
  br label %431

431:                                              ; preds = %429, %419
  %432 = phi i32 [ %430, %429 ], [ %427, %419 ]
  %433 = and i32 %432, %421
  %434 = zext i32 %433 to i64
  %435 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %417, i64 %434
  %436 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %435, i64 0, i32 0, i32 0, i32 0
  %437 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %436, align 8
  %438 = icmp eq %"class.WTF::StringImpl"* %437, null
  br i1 %438, label %496, label %439

439:                                              ; preds = %431
  %440 = xor i32 %432, -1
  %441 = lshr i32 %432, 23
  %442 = add i32 %441, %440
  %443 = shl i32 %442, 12
  %444 = xor i32 %443, %442
  %445 = lshr i32 %444, 7
  %446 = xor i32 %445, %444
  %447 = shl i32 %446, 2
  %448 = xor i32 %447, %446
  %449 = lshr i32 %448, 20
  %450 = xor i32 %449, %448
  %451 = or i32 %450, 1
  %452 = zext i32 %451 to i64
  br label %453

453:                                              ; preds = %464, %439
  %454 = phi %"struct.WTF::KeyValuePair.1415"* [ %435, %439 ], [ %469, %464 ]
  %455 = phi i64 [ %434, %439 ], [ %468, %464 ]
  %456 = phi i64 [ 0, %439 ], [ %466, %464 ]
  %457 = bitcast %"struct.WTF::KeyValuePair.1415"* %454 to i8**
  %458 = load i8*, i8** %457, align 8
  %459 = icmp eq i8* %458, inttoptr (i64 -1 to i8*)
  br i1 %459, label %464, label %460

460:                                              ; preds = %453
  %461 = bitcast i8* %458 to %"class.WTF::StringImpl"*
  %462 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %423, align 8
  %463 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %461, %"class.WTF::StringImpl"* %462) #9
  br i1 %463, label %473, label %464

464:                                              ; preds = %460, %453
  %465 = icmp eq i64 %456, 0
  %466 = select i1 %465, i64 %452, i64 %456
  %467 = add i64 %466, %455
  %468 = and i64 %467, %422
  %469 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %417, i64 %468
  %470 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %469, i64 0, i32 0, i32 0, i32 0
  %471 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %470, align 8
  %472 = icmp eq %"class.WTF::StringImpl"* %471, null
  br i1 %472, label %496, label %453

473:                                              ; preds = %460
  %474 = icmp eq %"struct.WTF::KeyValuePair.1415"* %454, null
  br i1 %474, label %496, label %475

475:                                              ; preds = %473
  %476 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %454, i64 0, i32 1, i32 0, i32 0
  %477 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %476, align 8
  %478 = icmp eq %"class.WTF::StringImpl"* %477, null
  br i1 %478, label %496, label %479

479:                                              ; preds = %475
  %480 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %481 = load atomic i32, i32* %480 monotonic, align 4
  %482 = and i32 %481, 2
  %483 = icmp eq i32 %482, 0
  br i1 %483, label %484, label %496

484:                                              ; preds = %479
  %485 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %477, i64 0, i32 0
  %486 = load i32, i32* %485, align 4
  %487 = zext i32 %486 to i33
  %488 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %487, i33 1) #9
  %489 = extractvalue { i33, i1 } %488, 1
  %490 = extractvalue { i33, i1 } %488, 0
  %491 = icmp slt i33 %490, 0
  %492 = or i1 %489, %491
  br i1 %492, label %493, label %494, !prof !2

493:                                              ; preds = %484
  call void @llvm.trap() #9
  unreachable

494:                                              ; preds = %484
  %495 = trunc i33 %490 to i32
  store i32 %495, i32* %485, align 4
  br label %496

496:                                              ; preds = %464, %431, %415, %473, %475, %479, %494
  %497 = phi %"class.WTF::StringImpl"* [ null, %473 ], [ null, %475 ], [ %477, %479 ], [ %477, %494 ], [ null, %415 ], [ null, %431 ], [ null, %464 ]
  %498 = ptrtoint %"class.WTF::StringImpl"* %497 to i64
  %499 = bitcast %"class.WTF::String"* %2 to i64*
  %500 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %501 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %500, align 8
  store i64 %498, i64* %499, align 8
  %502 = icmp eq %"class.WTF::StringImpl"* %501, null
  br i1 %502, label %516, label %503

503:                                              ; preds = %496
  %504 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %505 = load atomic i32, i32* %504 monotonic, align 4
  %506 = and i32 %505, 2
  %507 = icmp eq i32 %506, 0
  %508 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %501, i64 0, i32 0
  %509 = load i32, i32* %508, align 4
  br i1 %507, label %510, label %512

510:                                              ; preds = %503
  %511 = add i32 %509, -1
  store i32 %511, i32* %508, align 4
  br label %512

512:                                              ; preds = %510, %503
  %513 = phi i32 [ %511, %510 ], [ %509, %503 ]
  %514 = icmp eq i32 %513, 0
  br i1 %514, label %515, label %516

515:                                              ; preds = %512
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %501) #9
  br label %516

516:                                              ; preds = %515, %512, %496
  %517 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %26, i64 0, i32 0, i32 0
  %518 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %517, align 8
  %519 = icmp eq %"class.WTF::StringImpl"* %518, null
  br i1 %519, label %533, label %520

520:                                              ; preds = %516
  %521 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %522 = load atomic i32, i32* %521 monotonic, align 4
  %523 = and i32 %522, 2
  %524 = icmp eq i32 %523, 0
  %525 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %518, i64 0, i32 0
  %526 = load i32, i32* %525, align 4
  br i1 %524, label %527, label %529

527:                                              ; preds = %520
  %528 = add i32 %526, -1
  store i32 %528, i32* %525, align 4
  br label %529

529:                                              ; preds = %527, %520
  %530 = phi i32 [ %528, %527 ], [ %526, %520 ]
  %531 = icmp eq i32 %530, 0
  br i1 %531, label %532, label %533

532:                                              ; preds = %529
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %518) #9
  br label %533

533:                                              ; preds = %516, %529, %532
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %416) #9
  %534 = bitcast %"class.WTF::String"* %27 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %534) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %27, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0), i64 9) #9
  %535 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  %536 = icmp eq %"struct.WTF::KeyValuePair.1415"* %535, null
  br i1 %536, label %614, label %537

537:                                              ; preds = %533
  %538 = load i32, i32* %74, align 8
  %539 = add i32 %538, -1
  %540 = zext i32 %539 to i64
  %541 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %542 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %541, align 8
  %543 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %542, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %544 = load atomic i32, i32* %543 monotonic, align 4
  %545 = lshr i32 %544, 8
  %546 = icmp eq i32 %545, 0
  br i1 %546, label %547, label %549

547:                                              ; preds = %537
  %548 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %542) #9
  br label %549

549:                                              ; preds = %547, %537
  %550 = phi i32 [ %548, %547 ], [ %545, %537 ]
  %551 = and i32 %550, %539
  %552 = zext i32 %551 to i64
  %553 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %535, i64 %552
  %554 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %553, i64 0, i32 0, i32 0, i32 0
  %555 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %554, align 8
  %556 = icmp eq %"class.WTF::StringImpl"* %555, null
  br i1 %556, label %614, label %557

557:                                              ; preds = %549
  %558 = xor i32 %550, -1
  %559 = lshr i32 %550, 23
  %560 = add i32 %559, %558
  %561 = shl i32 %560, 12
  %562 = xor i32 %561, %560
  %563 = lshr i32 %562, 7
  %564 = xor i32 %563, %562
  %565 = shl i32 %564, 2
  %566 = xor i32 %565, %564
  %567 = lshr i32 %566, 20
  %568 = xor i32 %567, %566
  %569 = or i32 %568, 1
  %570 = zext i32 %569 to i64
  br label %571

571:                                              ; preds = %582, %557
  %572 = phi %"struct.WTF::KeyValuePair.1415"* [ %553, %557 ], [ %587, %582 ]
  %573 = phi i64 [ %552, %557 ], [ %586, %582 ]
  %574 = phi i64 [ 0, %557 ], [ %584, %582 ]
  %575 = bitcast %"struct.WTF::KeyValuePair.1415"* %572 to i8**
  %576 = load i8*, i8** %575, align 8
  %577 = icmp eq i8* %576, inttoptr (i64 -1 to i8*)
  br i1 %577, label %582, label %578

578:                                              ; preds = %571
  %579 = bitcast i8* %576 to %"class.WTF::StringImpl"*
  %580 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %541, align 8
  %581 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %579, %"class.WTF::StringImpl"* %580) #9
  br i1 %581, label %591, label %582

582:                                              ; preds = %578, %571
  %583 = icmp eq i64 %574, 0
  %584 = select i1 %583, i64 %570, i64 %574
  %585 = add i64 %584, %573
  %586 = and i64 %585, %540
  %587 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %535, i64 %586
  %588 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %587, i64 0, i32 0, i32 0, i32 0
  %589 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %588, align 8
  %590 = icmp eq %"class.WTF::StringImpl"* %589, null
  br i1 %590, label %614, label %571

591:                                              ; preds = %578
  %592 = icmp eq %"struct.WTF::KeyValuePair.1415"* %572, null
  br i1 %592, label %614, label %593

593:                                              ; preds = %591
  %594 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %572, i64 0, i32 1, i32 0, i32 0
  %595 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %594, align 8
  %596 = icmp eq %"class.WTF::StringImpl"* %595, null
  br i1 %596, label %614, label %597

597:                                              ; preds = %593
  %598 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %599 = load atomic i32, i32* %598 monotonic, align 4
  %600 = and i32 %599, 2
  %601 = icmp eq i32 %600, 0
  br i1 %601, label %602, label %614

602:                                              ; preds = %597
  %603 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %595, i64 0, i32 0
  %604 = load i32, i32* %603, align 4
  %605 = zext i32 %604 to i33
  %606 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %605, i33 1) #9
  %607 = extractvalue { i33, i1 } %606, 1
  %608 = extractvalue { i33, i1 } %606, 0
  %609 = icmp slt i33 %608, 0
  %610 = or i1 %607, %609
  br i1 %610, label %611, label %612, !prof !2

611:                                              ; preds = %602
  call void @llvm.trap() #9
  unreachable

612:                                              ; preds = %602
  %613 = trunc i33 %608 to i32
  store i32 %613, i32* %603, align 4
  br label %614

614:                                              ; preds = %582, %549, %533, %591, %593, %597, %612
  %615 = phi %"class.WTF::StringImpl"* [ null, %591 ], [ null, %593 ], [ %595, %597 ], [ %595, %612 ], [ null, %533 ], [ null, %549 ], [ null, %582 ]
  %616 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %27, i64 0, i32 0, i32 0
  %617 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %616, align 8
  %618 = icmp eq %"class.WTF::StringImpl"* %617, null
  br i1 %618, label %632, label %619

619:                                              ; preds = %614
  %620 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %617, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %621 = load atomic i32, i32* %620 monotonic, align 4
  %622 = and i32 %621, 2
  %623 = icmp eq i32 %622, 0
  %624 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %617, i64 0, i32 0
  %625 = load i32, i32* %624, align 4
  br i1 %623, label %626, label %628

626:                                              ; preds = %619
  %627 = add i32 %625, -1
  store i32 %627, i32* %624, align 4
  br label %628

628:                                              ; preds = %626, %619
  %629 = phi i32 [ %627, %626 ], [ %625, %619 ]
  %630 = icmp eq i32 %629, 0
  br i1 %630, label %631, label %632

631:                                              ; preds = %628
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %617) #9
  br label %632

632:                                              ; preds = %614, %628, %631
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %534) #9
  %633 = bitcast %"class.WTF::StringView"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %633) #9
  %634 = icmp eq %"class.WTF::StringImpl"* %615, null
  br i1 %634, label %635, label %639

635:                                              ; preds = %632
  %636 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  store i8* null, i8** %636, align 8
  %637 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  %638 = bitcast %"class.WTF::StringView"* %4 to i64*
  store i64 %637, i64* %638, align 8
  br label %647

639:                                              ; preds = %632
  %640 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 0
  store %"class.WTF::StringImpl"* %615, %"class.WTF::StringImpl"** %640, align 8
  %641 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 1
  %642 = load i32, i32* %641, align 4
  %643 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 1
  %644 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 1
  %645 = bitcast i8** %644 to %"class.WTF::StringImpl"**
  store %"class.WTF::StringImpl"* %643, %"class.WTF::StringImpl"** %645, align 8
  %646 = load i64, i64* bitcast (%"class.WTF::StringImpl"** @_ZN3WTF10StringImpl6empty_E to i64*), align 8
  br label %647

647:                                              ; preds = %639, %635
  %648 = phi i64 [ %646, %639 ], [ %637, %635 ]
  %649 = phi i32 [ %642, %639 ], [ 0, %635 ]
  %650 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %4, i64 0, i32 2
  store i32 %649, i32* %650, align 8
  %651 = bitcast %"class.WTF::StringView"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %651) #9
  %652 = bitcast %"class.WTF::StringView"* %5 to i64*
  store i64 %648, i64* %652, align 8
  %653 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 1
  store i8* getelementptr inbounds ([4 x i8], [4 x i8]* @.str.12, i64 0, i64 0), i8** %653, align 8
  %654 = getelementptr inbounds %"class.WTF::StringView", %"class.WTF::StringView"* %5, i64 0, i32 2
  store i32 3, i32* %654, align 8
  %655 = call zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* nonnull dereferenceable(24) %4, %"class.WTF::StringView"* nonnull dereferenceable(24) %5) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %651) #9
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %633) #9
  %656 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 9
  %657 = zext i1 %655 to i8
  store i8 %657, i8* %656, align 2
  %658 = bitcast %"class.WTF::String"* %28 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %658) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %28, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.13, i64 0, i64 0), i64 5) #9
  %659 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  %660 = icmp eq %"struct.WTF::KeyValuePair.1415"* %659, null
  br i1 %660, label %738, label %661

661:                                              ; preds = %647
  %662 = load i32, i32* %74, align 8
  %663 = add i32 %662, -1
  %664 = zext i32 %663 to i64
  %665 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %666 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %665, align 8
  %667 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %666, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %668 = load atomic i32, i32* %667 monotonic, align 4
  %669 = lshr i32 %668, 8
  %670 = icmp eq i32 %669, 0
  br i1 %670, label %671, label %673

671:                                              ; preds = %661
  %672 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %666) #9
  br label %673

673:                                              ; preds = %671, %661
  %674 = phi i32 [ %672, %671 ], [ %669, %661 ]
  %675 = and i32 %674, %663
  %676 = zext i32 %675 to i64
  %677 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %659, i64 %676
  %678 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %677, i64 0, i32 0, i32 0, i32 0
  %679 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %678, align 8
  %680 = icmp eq %"class.WTF::StringImpl"* %679, null
  br i1 %680, label %738, label %681

681:                                              ; preds = %673
  %682 = xor i32 %674, -1
  %683 = lshr i32 %674, 23
  %684 = add i32 %683, %682
  %685 = shl i32 %684, 12
  %686 = xor i32 %685, %684
  %687 = lshr i32 %686, 7
  %688 = xor i32 %687, %686
  %689 = shl i32 %688, 2
  %690 = xor i32 %689, %688
  %691 = lshr i32 %690, 20
  %692 = xor i32 %691, %690
  %693 = or i32 %692, 1
  %694 = zext i32 %693 to i64
  br label %695

695:                                              ; preds = %706, %681
  %696 = phi %"struct.WTF::KeyValuePair.1415"* [ %677, %681 ], [ %711, %706 ]
  %697 = phi i64 [ %676, %681 ], [ %710, %706 ]
  %698 = phi i64 [ 0, %681 ], [ %708, %706 ]
  %699 = bitcast %"struct.WTF::KeyValuePair.1415"* %696 to i8**
  %700 = load i8*, i8** %699, align 8
  %701 = icmp eq i8* %700, inttoptr (i64 -1 to i8*)
  br i1 %701, label %706, label %702

702:                                              ; preds = %695
  %703 = bitcast i8* %700 to %"class.WTF::StringImpl"*
  %704 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %665, align 8
  %705 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %703, %"class.WTF::StringImpl"* %704) #9
  br i1 %705, label %715, label %706

706:                                              ; preds = %702, %695
  %707 = icmp eq i64 %698, 0
  %708 = select i1 %707, i64 %694, i64 %698
  %709 = add i64 %708, %697
  %710 = and i64 %709, %664
  %711 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %659, i64 %710
  %712 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %711, i64 0, i32 0, i32 0, i32 0
  %713 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %712, align 8
  %714 = icmp eq %"class.WTF::StringImpl"* %713, null
  br i1 %714, label %738, label %695

715:                                              ; preds = %702
  %716 = icmp eq %"struct.WTF::KeyValuePair.1415"* %696, null
  br i1 %716, label %738, label %717

717:                                              ; preds = %715
  %718 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %696, i64 0, i32 1, i32 0, i32 0
  %719 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %718, align 8
  %720 = icmp eq %"class.WTF::StringImpl"* %719, null
  br i1 %720, label %738, label %721

721:                                              ; preds = %717
  %722 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %723 = load atomic i32, i32* %722 monotonic, align 4
  %724 = and i32 %723, 2
  %725 = icmp eq i32 %724, 0
  br i1 %725, label %726, label %738

726:                                              ; preds = %721
  %727 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %719, i64 0, i32 0
  %728 = load i32, i32* %727, align 4
  %729 = zext i32 %728 to i33
  %730 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %729, i33 1) #9
  %731 = extractvalue { i33, i1 } %730, 1
  %732 = extractvalue { i33, i1 } %730, 0
  %733 = icmp slt i33 %732, 0
  %734 = or i1 %731, %733
  br i1 %734, label %735, label %736, !prof !2

735:                                              ; preds = %726
  call void @llvm.trap() #9
  unreachable

736:                                              ; preds = %726
  %737 = trunc i33 %732 to i32
  store i32 %737, i32* %727, align 4
  br label %738

738:                                              ; preds = %706, %673, %647, %715, %717, %721, %736
  %739 = phi %"class.WTF::StringImpl"* [ null, %715 ], [ null, %717 ], [ %719, %721 ], [ %719, %736 ], [ null, %647 ], [ null, %673 ], [ null, %706 ]
  %740 = ptrtoint %"class.WTF::StringImpl"* %739 to i64
  %741 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 4
  %742 = bitcast %"class.WTF::String"* %741 to i64*
  %743 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %741, i64 0, i32 0, i32 0
  %744 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %743, align 8
  store i64 %740, i64* %742, align 8
  %745 = icmp eq %"class.WTF::StringImpl"* %744, null
  br i1 %745, label %759, label %746

746:                                              ; preds = %738
  %747 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %748 = load atomic i32, i32* %747 monotonic, align 4
  %749 = and i32 %748, 2
  %750 = icmp eq i32 %749, 0
  %751 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %744, i64 0, i32 0
  %752 = load i32, i32* %751, align 4
  br i1 %750, label %753, label %755

753:                                              ; preds = %746
  %754 = add i32 %752, -1
  store i32 %754, i32* %751, align 4
  br label %755

755:                                              ; preds = %753, %746
  %756 = phi i32 [ %754, %753 ], [ %752, %746 ]
  %757 = icmp eq i32 %756, 0
  br i1 %757, label %758, label %759

758:                                              ; preds = %755
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %744) #9
  br label %759

759:                                              ; preds = %758, %755, %738
  %760 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %28, i64 0, i32 0, i32 0
  %761 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %760, align 8
  %762 = icmp eq %"class.WTF::StringImpl"* %761, null
  br i1 %762, label %776, label %763

763:                                              ; preds = %759
  %764 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %761, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %765 = load atomic i32, i32* %764 monotonic, align 4
  %766 = and i32 %765, 2
  %767 = icmp eq i32 %766, 0
  %768 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %761, i64 0, i32 0
  %769 = load i32, i32* %768, align 4
  br i1 %767, label %770, label %772

770:                                              ; preds = %763
  %771 = add i32 %769, -1
  store i32 %771, i32* %768, align 4
  br label %772

772:                                              ; preds = %770, %763
  %773 = phi i32 [ %771, %770 ], [ %769, %763 ]
  %774 = icmp eq i32 %773, 0
  br i1 %774, label %775, label %776

775:                                              ; preds = %772
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %761) #9
  br label %776

776:                                              ; preds = %759, %772, %775
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %658) #9
  %777 = bitcast %"class.WTF::String"* %29 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %777) #9
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %29, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.14, i64 0, i64 0), i64 5) #9
  %778 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  %779 = icmp eq %"struct.WTF::KeyValuePair.1415"* %778, null
  br i1 %779, label %857, label %780

780:                                              ; preds = %776
  %781 = load i32, i32* %74, align 8
  %782 = add i32 %781, -1
  %783 = zext i32 %782 to i64
  %784 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %785 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %784, align 8
  %786 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %785, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %787 = load atomic i32, i32* %786 monotonic, align 4
  %788 = lshr i32 %787, 8
  %789 = icmp eq i32 %788, 0
  br i1 %789, label %790, label %792

790:                                              ; preds = %780
  %791 = call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %785) #9
  br label %792

792:                                              ; preds = %790, %780
  %793 = phi i32 [ %791, %790 ], [ %788, %780 ]
  %794 = and i32 %793, %782
  %795 = zext i32 %794 to i64
  %796 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %778, i64 %795
  %797 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %796, i64 0, i32 0, i32 0, i32 0
  %798 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %797, align 8
  %799 = icmp eq %"class.WTF::StringImpl"* %798, null
  br i1 %799, label %857, label %800

800:                                              ; preds = %792
  %801 = xor i32 %793, -1
  %802 = lshr i32 %793, 23
  %803 = add i32 %802, %801
  %804 = shl i32 %803, 12
  %805 = xor i32 %804, %803
  %806 = lshr i32 %805, 7
  %807 = xor i32 %806, %805
  %808 = shl i32 %807, 2
  %809 = xor i32 %808, %807
  %810 = lshr i32 %809, 20
  %811 = xor i32 %810, %809
  %812 = or i32 %811, 1
  %813 = zext i32 %812 to i64
  br label %814

814:                                              ; preds = %825, %800
  %815 = phi %"struct.WTF::KeyValuePair.1415"* [ %796, %800 ], [ %830, %825 ]
  %816 = phi i64 [ %795, %800 ], [ %829, %825 ]
  %817 = phi i64 [ 0, %800 ], [ %827, %825 ]
  %818 = bitcast %"struct.WTF::KeyValuePair.1415"* %815 to i8**
  %819 = load i8*, i8** %818, align 8
  %820 = icmp eq i8* %819, inttoptr (i64 -1 to i8*)
  br i1 %820, label %825, label %821

821:                                              ; preds = %814
  %822 = bitcast i8* %819 to %"class.WTF::StringImpl"*
  %823 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %784, align 8
  %824 = call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %822, %"class.WTF::StringImpl"* %823) #9
  br i1 %824, label %834, label %825

825:                                              ; preds = %821, %814
  %826 = icmp eq i64 %817, 0
  %827 = select i1 %826, i64 %813, i64 %817
  %828 = add i64 %827, %816
  %829 = and i64 %828, %783
  %830 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %778, i64 %829
  %831 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %830, i64 0, i32 0, i32 0, i32 0
  %832 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %831, align 8
  %833 = icmp eq %"class.WTF::StringImpl"* %832, null
  br i1 %833, label %857, label %814

834:                                              ; preds = %821
  %835 = icmp eq %"struct.WTF::KeyValuePair.1415"* %815, null
  br i1 %835, label %857, label %836

836:                                              ; preds = %834
  %837 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %815, i64 0, i32 1, i32 0, i32 0
  %838 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %837, align 8
  %839 = icmp eq %"class.WTF::StringImpl"* %838, null
  br i1 %839, label %857, label %840

840:                                              ; preds = %836
  %841 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %838, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %842 = load atomic i32, i32* %841 monotonic, align 4
  %843 = and i32 %842, 2
  %844 = icmp eq i32 %843, 0
  br i1 %844, label %845, label %857

845:                                              ; preds = %840
  %846 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %838, i64 0, i32 0
  %847 = load i32, i32* %846, align 4
  %848 = zext i32 %847 to i33
  %849 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %848, i33 1) #9
  %850 = extractvalue { i33, i1 } %849, 1
  %851 = extractvalue { i33, i1 } %849, 0
  %852 = icmp slt i33 %851, 0
  %853 = or i1 %850, %852
  br i1 %853, label %854, label %855, !prof !2

854:                                              ; preds = %845
  call void @llvm.trap() #9
  unreachable

855:                                              ; preds = %845
  %856 = trunc i33 %851 to i32
  store i32 %856, i32* %846, align 4
  br label %857

857:                                              ; preds = %825, %792, %776, %834, %836, %840, %855
  %858 = phi %"class.WTF::StringImpl"* [ null, %834 ], [ null, %836 ], [ %838, %840 ], [ %838, %855 ], [ null, %776 ], [ null, %792 ], [ null, %825 ]
  %859 = ptrtoint %"class.WTF::StringImpl"* %858 to i64
  %860 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 5
  %861 = bitcast %"class.WTF::String"* %860 to i64*
  %862 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %860, i64 0, i32 0, i32 0
  %863 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %862, align 8
  store i64 %859, i64* %861, align 8
  %864 = icmp eq %"class.WTF::StringImpl"* %863, null
  br i1 %864, label %878, label %865

865:                                              ; preds = %857
  %866 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %863, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %867 = load atomic i32, i32* %866 monotonic, align 4
  %868 = and i32 %867, 2
  %869 = icmp eq i32 %868, 0
  %870 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %863, i64 0, i32 0
  %871 = load i32, i32* %870, align 4
  br i1 %869, label %872, label %874

872:                                              ; preds = %865
  %873 = add i32 %871, -1
  store i32 %873, i32* %870, align 4
  br label %874

874:                                              ; preds = %872, %865
  %875 = phi i32 [ %873, %872 ], [ %871, %865 ]
  %876 = icmp eq i32 %875, 0
  br i1 %876, label %877, label %878

877:                                              ; preds = %874
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %863) #9
  br label %878

878:                                              ; preds = %877, %874, %857
  %879 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %29, i64 0, i32 0, i32 0
  %880 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %879, align 8
  %881 = icmp eq %"class.WTF::StringImpl"* %880, null
  br i1 %881, label %895, label %882

882:                                              ; preds = %878
  %883 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %880, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %884 = load atomic i32, i32* %883 monotonic, align 4
  %885 = and i32 %884, 2
  %886 = icmp eq i32 %885, 0
  %887 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %880, i64 0, i32 0
  %888 = load i32, i32* %887, align 4
  br i1 %886, label %889, label %891

889:                                              ; preds = %882
  %890 = add i32 %888, -1
  store i32 %890, i32* %887, align 4
  br label %891

891:                                              ; preds = %889, %882
  %892 = phi i32 [ %890, %889 ], [ %888, %882 ]
  %893 = icmp eq i32 %892, 0
  br i1 %893, label %894, label %895

894:                                              ; preds = %891
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %880) #9
  br label %895

895:                                              ; preds = %878, %891, %894
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %777) #9
  %896 = load i8, i8* %656, align 2, !range !3
  %897 = icmp eq i8 %896, 0
  br i1 %897, label %905, label %898

898:                                              ; preds = %895
  %899 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %743, align 8
  %900 = icmp eq %"class.WTF::StringImpl"* %899, null
  br i1 %900, label %905, label %901

901:                                              ; preds = %898
  %902 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %899, i64 0, i32 1
  %903 = load i32, i32* %902, align 4
  %904 = icmp ne i32 %903, 0
  br label %905

905:                                              ; preds = %901, %898, %895
  %906 = phi i1 [ true, %895 ], [ false, %898 ], [ %904, %901 ]
  br i1 %634, label %920, label %907

907:                                              ; preds = %905
  %908 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %909 = load atomic i32, i32* %908 monotonic, align 4
  %910 = and i32 %909, 2
  %911 = icmp eq i32 %910, 0
  %912 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %615, i64 0, i32 0
  %913 = load i32, i32* %912, align 4
  br i1 %911, label %914, label %916

914:                                              ; preds = %907
  %915 = add i32 %913, -1
  store i32 %915, i32* %912, align 4
  br label %916

916:                                              ; preds = %914, %907
  %917 = phi i32 [ %915, %914 ], [ %913, %907 ]
  %918 = icmp eq i32 %917, 0
  br i1 %918, label %919, label %920

919:                                              ; preds = %916
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %615) #9
  br label %920

920:                                              ; preds = %919, %916, %905, %283
  %921 = phi i1 [ false, %283 ], [ %906, %905 ], [ %906, %916 ], [ %906, %919 ]
  br i1 %166, label %935, label %922

922:                                              ; preds = %920
  %923 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %924 = load atomic i32, i32* %923 monotonic, align 4
  %925 = and i32 %924, 2
  %926 = icmp eq i32 %925, 0
  %927 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %167, i64 0, i32 0
  %928 = load i32, i32* %927, align 4
  br i1 %926, label %929, label %931

929:                                              ; preds = %922
  %930 = add i32 %928, -1
  store i32 %930, i32* %927, align 4
  br label %931

931:                                              ; preds = %929, %922
  %932 = phi i32 [ %930, %929 ], [ %928, %922 ]
  %933 = icmp eq i32 %932, 0
  br i1 %933, label %934, label %935

934:                                              ; preds = %931
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %167) #9
  br label %935

935:                                              ; preds = %934, %931, %920, %71
  %936 = phi i1 [ false, %71 ], [ %921, %920 ], [ %921, %931 ], [ %921, %934 ]
  %937 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  %938 = icmp eq %"struct.WTF::KeyValuePair.1415"* %937, null
  br i1 %938, label %941, label %939, !prof !4

939:                                              ; preds = %935
  %940 = load i32, i32* %74, align 8
  call void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1415"* nonnull %937, i32 %940) #9
  store %"struct.WTF::KeyValuePair.1415"* null, %"struct.WTF::KeyValuePair.1415"** %73, align 8
  br label %941

941:                                              ; preds = %935, %939
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %72) #9
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %22) #9
  br label %942

942:                                              ; preds = %62, %46, %55, %941
  %943 = phi i1 [ %936, %941 ], [ false, %55 ], [ false, %62 ], [ false, %46 ]
  ret i1 %943
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstruction7ProcessERKN3WTF6StringES4_(%"class.blink::ProcessingInstruction"*, %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.blink::TextResourceDecoderOptions", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"struct.blink::ResourceLoaderOptions", align 8
  %7 = alloca %"class.blink::FetchParameters", align 8
  %8 = alloca %"class.blink::ResourceRequest", align 8
  %9 = alloca %"class.blink::KURL", align 8
  %10 = alloca %"class.WTF::TextEncoding", align 8
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = icmp eq %"class.WTF::StringImpl"* %12, null
  br i1 %13, label %81, label %14

14:                                               ; preds = %3
  %15 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 1
  %16 = load i32, i32* %15, align 4
  %17 = icmp ugt i32 %16, 1
  br i1 %17, label %18, label %81

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 1
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 1
  br i1 %22, label %28, label %24

24:                                               ; preds = %18
  %25 = bitcast %"class.WTF::StringImpl"* %23 to i8*
  %26 = load i8, i8* %25, align 1
  %27 = zext i8 %26 to i16
  br label %31

28:                                               ; preds = %18
  %29 = bitcast %"class.WTF::StringImpl"* %23 to i16*
  %30 = load i16, i16* %29, align 2
  br label %31

31:                                               ; preds = %24, %28
  %32 = phi i16 [ %27, %24 ], [ %30, %28 ]
  %33 = icmp eq i16 %32, 35
  br i1 %33, label %34, label %81

34:                                               ; preds = %31
  %35 = tail call %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"* %1, i32 1, i32 -1) #9
  %36 = ptrtoint %"class.WTF::StringImpl"* %35 to i64
  %37 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 3
  %38 = bitcast %"class.WTF::String"* %37 to i64*
  %39 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %37, i64 0, i32 0, i32 0
  %40 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %39, align 8
  store i64 %36, i64* %38, align 8
  %41 = icmp eq %"class.WTF::StringImpl"* %40, null
  br i1 %41, label %55, label %42

42:                                               ; preds = %34
  %43 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %44 = load atomic i32, i32* %43 monotonic, align 4
  %45 = and i32 %44, 2
  %46 = icmp eq i32 %45, 0
  %47 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %40, i64 0, i32 0
  %48 = load i32, i32* %47, align 4
  br i1 %46, label %49, label %51

49:                                               ; preds = %42
  %50 = add i32 %48, -1
  store i32 %50, i32* %47, align 4
  br label %51

51:                                               ; preds = %49, %42
  %52 = phi i32 [ %50, %49 ], [ %48, %42 ]
  %53 = icmp eq i32 %52, 0
  br i1 %53, label %54, label %55

54:                                               ; preds = %51
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %40) #9
  br label %55

55:                                               ; preds = %54, %51, %34
  %56 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %57 = load i8, i8* %56, align 4, !range !3
  %58 = icmp ne i8 %57, 0
  %59 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase16is_xslt_enabled_E, align 1
  %60 = icmp ne i8 %59, 0
  %61 = and i1 %58, %60
  br i1 %61, label %62, label %193

62:                                               ; preds = %55
  %63 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %63) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %63, i8 -86, i64 112, i1 false)
  call void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"* nonnull %5, %"class.WTF::String"* dereferenceable(8) %37) #9
  %64 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 4
  %65 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 208) #9
  %66 = bitcast i8* %65 to %"class.blink::XSLStyleSheet"*
  %67 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  call void @_ZN5blink13XSLStyleSheetC1EPNS_4NodeERKN3WTF6StringERKNS_4KURLEb(%"class.blink::XSLStyleSheet"* %66, %"class.blink::Node"* %67, %"class.WTF::String"* dereferenceable(8) %64, %"class.blink::KURL"* nonnull dereferenceable(112) %5, i1 zeroext true) #9
  %68 = getelementptr inbounds i8, i8* %65, i64 -4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 monotonic, align 2
  %71 = or i16 %70, 1
  store atomic i16 %71, i16* %69 release, align 2
  %72 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6
  %73 = ptrtoint i8* %65 to i64
  %74 = bitcast %"class.blink::Member.395"* %72 to i64*
  store atomic i64 %73, i64* %74 monotonic, align 8
  %75 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %76 = icmp eq i32 %75, 0
  br i1 %76, label %79, label %77

77:                                               ; preds = %62
  %78 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %65) #9
  br label %79

79:                                               ; preds = %62, %77
  %80 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 8
  store i8 0, i8* %80, align 1
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %63) #9
  br label %193

81:                                               ; preds = %3, %31, %14
  %82 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1
  %83 = bitcast %"class.blink::ResourceClient.base"* %82 to %"class.blink::ResourceClient"*
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %83, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #9
  %84 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %85 = load i8, i8* %84, align 4, !range !3
  %86 = icmp eq i8 %85, 0
  %87 = load i8, i8* @_ZN5blink26RuntimeEnabledFeaturesBase16is_xslt_enabled_E, align 1
  %88 = icmp ne i8 %87, 0
  %89 = or i1 %86, %88
  br i1 %89, label %90, label %193

90:                                               ; preds = %81
  %91 = bitcast %"struct.blink::ResourceLoaderOptions"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %91) #9
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %91, i8 -86, i64 112, i1 false)
  %92 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  %93 = tail call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %92) #9
  %94 = tail call %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"* %93) #9
  call void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"* nonnull %6, %"class.blink::DOMWrapperWorld"* %94) #9
  %95 = load %"class.WTF::AtomicString"*, %"class.WTF::AtomicString"** @_ZN5blink26fetch_initiator_type_names22kProcessinginstructionE, align 8
  %96 = getelementptr inbounds %"class.WTF::AtomicString", %"class.WTF::AtomicString"* %95, i64 0, i32 0, i32 0, i32 0
  %97 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %96, align 8
  %98 = icmp eq %"class.WTF::StringImpl"* %97, null
  br i1 %98, label %116, label %99

99:                                               ; preds = %90
  %100 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %101 = load atomic i32, i32* %100 monotonic, align 4
  %102 = and i32 %101, 2
  %103 = icmp eq i32 %102, 0
  br i1 %103, label %104, label %116

104:                                              ; preds = %99
  %105 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %97, i64 0, i32 0
  %106 = load i32, i32* %105, align 4
  %107 = zext i32 %106 to i33
  %108 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %107, i33 1) #9
  %109 = extractvalue { i33, i1 } %108, 1
  %110 = extractvalue { i33, i1 } %108, 0
  %111 = icmp slt i33 %110, 0
  %112 = or i1 %109, %111
  br i1 %112, label %113, label %114, !prof !2

113:                                              ; preds = %104
  call void @llvm.trap() #9
  unreachable

114:                                              ; preds = %104
  %115 = trunc i33 %110 to i32
  store i32 %115, i32* %105, align 4
  br label %116

116:                                              ; preds = %114, %99, %90
  %117 = ptrtoint %"class.WTF::StringImpl"* %97 to i64
  %118 = bitcast %"struct.blink::ResourceLoaderOptions"* %6 to i64*
  %119 = getelementptr inbounds %"struct.blink::ResourceLoaderOptions", %"struct.blink::ResourceLoaderOptions"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %120 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %119, align 8
  store i64 %117, i64* %118, align 8
  %121 = icmp eq %"class.WTF::StringImpl"* %120, null
  br i1 %121, label %135, label %122

122:                                              ; preds = %116
  %123 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %124 = load atomic i32, i32* %123 monotonic, align 4
  %125 = and i32 %124, 2
  %126 = icmp eq i32 %125, 0
  %127 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %120, i64 0, i32 0
  %128 = load i32, i32* %127, align 4
  br i1 %126, label %129, label %131

129:                                              ; preds = %122
  %130 = add i32 %128, -1
  store i32 %130, i32* %127, align 4
  br label %131

131:                                              ; preds = %129, %122
  %132 = phi i32 [ %130, %129 ], [ %128, %122 ]
  %133 = icmp eq i32 %132, 0
  br i1 %133, label %134, label %135

134:                                              ; preds = %131
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %120) #9
  br label %135

135:                                              ; preds = %116, %131, %134
  %136 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1344, i8* nonnull %136) #9
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %136, i8* align 8 getelementptr inbounds (<{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.67, %class.scoped_refptr.67, %class.scoped_refptr.67, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.70, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.108 } } } }, { { { { i8, [7 x i8], %union.anon.108 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.103 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.119 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.165", i8, i8, [6 x i8], %class.scoped_refptr.169, %class.scoped_refptr.366, %class.scoped_refptr.368 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>, <{ { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::TimeDelta", <{ { { %"class.url::SchemeHostPort", { { { { i8, [7 x i8], %union.anon.66 } } } } } }, i8, [7 x i8] }>, %class.scoped_refptr.67, %class.scoped_refptr.67, %class.scoped_refptr.67, %"class.WTF::AtomicString", %"class.blink::HTTPHeaderMap", i16, [2 x i8], i32, i8, [3 x i8], i32, i32, i32, %class.scoped_refptr.70, i32, i32, i32, i32, i32, i32, %"class.WTF::String", %"class.WTF::String", i32, i8, [3 x i8], i32, [4 x i8], { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" } } } } } } }, { { { { i8, [7 x i8], { { i32, i32, i32, i8, [3 x i8], %"class.WTF::Vector.94", %"class.WTF::Vector.54", %"class.WTF::String" } } } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, { i8, [7 x i8], { { { { i8, [7 x i8], %union.anon.108 } } } }, { { { { i8, [7 x i8], %union.anon.108 } } } } }, i8, i8, i8, i8, [4 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], %union.anon.103 } } } }, %"class.WTF::String", %"class.WTF::String", %"class.WTF::String", { { { { i8, [7 x i8], %union.anon.103 } } } }, i64, %"class.base::UnguessableToken", i64, i8, i8, i8, i8, i8, i8, [2 x i8], { { { { i8, [7 x i8], %union.anon.113 } } } }, { { { { i8, [7 x i8], { { { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, %"class.base::UnguessableToken", %"class.mojo::PendingRemote" } } } } } }, i8, [7 x i8], %class.scoped_refptr.119 }, %"class.blink::ResourceRequestBody" }, <{ i32, i32, %"class.WTF::TextEncoding", i8, i8, [6 x i8], i8*, { i8, i8, [6 x i8], %"class.WTF::String", { %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", %"struct.url::Component", i8, [7 x i8], %"struct.url::Parsed"* }, %"class.WTF::String", %"class.std::__1::unique_ptr.29" }, [3 x i8], [5 x i8] }>, { { %"class.WTF::AtomicString", %"class.WTF::TextPosition", i8, i8, [6 x i8], %"class.WTF::String" }, i8, [3 x i8], i32, i8, i8, %"class.base::StrongAlias", [5 x i8], %"class.WTF::String", %"class.WTF::HashSet.165", i8, i8, [6 x i8], %class.scoped_refptr.169, %class.scoped_refptr.366, %class.scoped_refptr.368 }, i32, i32, %"struct.blink::FetchParameters::ResourceWidth", %"class.blink::ClientHintsPreferences", i32, i32, i8, i8, i8, [5 x i8] }>* @__const._ZN5blink21ProcessingInstruction7ProcessERKN3WTF6StringES4_.params, i64 0, i32 0, i32 0, i32 0, i32 0), i64 1344, i1 false)
  %137 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %9, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %137) #9
  %138 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %139 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %138, align 8
  %140 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %139, i64 0, i32 2, i32 0, i32 0
  %141 = load %"class.blink::Document"*, %"class.blink::Document"** %140, align 8
  call void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* nonnull sret %9, %"class.blink::Document"* %141, %"class.WTF::String"* dereferenceable(8) %1) #9
  call void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"* nonnull %8, %"class.blink::KURL"* nonnull dereferenceable(112) %9) #9
  call void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"* nonnull %7, %"class.blink::ResourceRequest"* nonnull %8, %"struct.blink::ResourceLoaderOptions"* nonnull dereferenceable(112) %6) #9
  call void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"* nonnull %8) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %137) #9
  %142 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 8
  store i8 1, i8* %142, align 1
  %143 = load i8, i8* %84, align 4, !range !3
  %144 = icmp eq i8 %143, 0
  br i1 %144, label %153, label %145

145:                                              ; preds = %135
  %146 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 0, i32 0, i32 17
  store i32 0, i32* %146, align 8
  %147 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %138, align 8
  %148 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %147, i64 0, i32 2, i32 0, i32 0
  %149 = load %"class.blink::Document"*, %"class.blink::Document"** %148, align 8
  %150 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %149, i64 0, i32 14, i32 0, i32 0
  %151 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %150, align 8
  %152 = call %"class.blink::XSLStyleSheetResource"* @_ZN5blink21XSLStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %7, %"class.blink::ResourceFetcher"* %151, %"class.blink::ResourceClient"* %83) #9
  br label %192

153:                                              ; preds = %135
  %154 = bitcast %"class.WTF::TextEncoding"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %154) #9
  %155 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %156 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %155, align 8
  %157 = icmp eq %"class.WTF::StringImpl"* %156, null
  br i1 %157, label %162, label %158

158:                                              ; preds = %153
  %159 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %156, i64 0, i32 1
  %160 = load i32, i32* %159, align 4
  %161 = icmp eq i32 %160, 0
  br i1 %161, label %162, label %170

162:                                              ; preds = %153, %158
  %163 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %138, align 8
  %164 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %163, i64 0, i32 2, i32 0, i32 0
  %165 = load %"class.blink::Document"*, %"class.blink::Document"** %164, align 8
  %166 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %165, i64 0, i32 95, i32 0
  %167 = bitcast %"class.WTF::TextEncoding"* %166 to i64*
  %168 = bitcast %"class.WTF::TextEncoding"* %10 to i64*
  %169 = load i64, i64* %167, align 8
  store i64 %169, i64* %168, align 8
  br label %171

170:                                              ; preds = %158
  call void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"* nonnull %10, %"class.WTF::String"* dereferenceable(8) %2) #9
  br label %171

171:                                              ; preds = %170, %162
  %172 = bitcast %"class.blink::TextResourceDecoderOptions"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 152, i8* nonnull %172) #9
  call void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"* nonnull %4, i32 0, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %10) #9
  %173 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 1
  %174 = bitcast %"class.blink::TextResourceDecoderOptions"* %173 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %174, i8* nonnull align 8 %172, i64 32, i1 false) #9
  %175 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 1, i32 7
  %176 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %4, i64 0, i32 7
  %177 = call dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"* %175, %"class.blink::KURL"* dereferenceable(112) %176) #9
  %178 = getelementptr inbounds %"class.blink::FetchParameters", %"class.blink::FetchParameters"* %7, i64 0, i32 1, i32 8, i64 0
  %179 = getelementptr inbounds %"class.blink::TextResourceDecoderOptions", %"class.blink::TextResourceDecoderOptions"* %4, i64 0, i32 8, i64 0
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 3, i1 false) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %176) #9
  call void @llvm.lifetime.end.p0i8(i64 152, i8* nonnull %172) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %154) #9
  %180 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %138, align 8
  %181 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %180, i64 0, i32 2, i32 0, i32 0
  %182 = load %"class.blink::Document"*, %"class.blink::Document"** %181, align 8
  %183 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %182, i64 0, i32 59, i32 0, i32 0
  %184 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %183, align 8
  %185 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 7
  call void @_ZN5blink11StyleEngine15AddPendingSheetERNS_18StyleEngineContextE(%"class.blink::StyleEngine"* %184, %"class.blink::StyleEngineContext"* dereferenceable(1) %185) #9
  %186 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %138, align 8
  %187 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %186, i64 0, i32 2, i32 0, i32 0
  %188 = load %"class.blink::Document"*, %"class.blink::Document"** %187, align 8
  %189 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %188, i64 0, i32 14, i32 0, i32 0
  %190 = load %"class.blink::ResourceFetcher"*, %"class.blink::ResourceFetcher"** %189, align 8
  %191 = call %"class.blink::CSSStyleSheetResource"* @_ZN5blink21CSSStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* nonnull dereferenceable(1344) %7, %"class.blink::ResourceFetcher"* %190, %"class.blink::ResourceClient"* %83) #9
  br label %192

192:                                              ; preds = %171, %145
  call void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 1344, i8* nonnull %136) #9
  call void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"* nonnull %6) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %91) #9
  br label %193

193:                                              ; preds = %81, %55, %79, %192
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #3

declare %"class.blink::LocalFrame"* @_ZNK5blink8Document8GetFrameEv(%"class.blink::Document"*) local_unnamed_addr #1

declare %"class.blink::ContainerNode"* @_ZNK5blink4Node10parentNodeEv(%"class.blink::Node"*) local_unnamed_addr #1

declare void @_ZN5blink15ParseAttributesERKN3WTF6StringERb(%"class.WTF::HashMap.1411"* sret, %"class.WTF::String"* dereferenceable(8), i8* dereferenceable(1)) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK3WTF6String9SubstringEjj(%"class.WTF::String"*, i32, i32) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #3

declare void @_ZN5blink4KURLC1ERKN3WTF6StringE(%"class.blink::KURL"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"*) unnamed_addr #4

declare %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWrapperWorld"* @_ZNK5blink16ExecutionContext15GetCurrentWorldEv(%"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare void @_ZN5blink21ResourceLoaderOptionsC1E13scoped_refptrIKNS_15DOMWrapperWorldEE(%"struct.blink::ResourceLoaderOptions"*, %"class.blink::DOMWrapperWorld"*) unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #3

declare void @_ZNK5blink8Document11CompleteURLERKN3WTF6StringE(%"class.blink::KURL"* sret, %"class.blink::Document"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink15ResourceRequestC1ERKNS_4KURLE(%"class.blink::ResourceRequest"*, %"class.blink::KURL"* dereferenceable(112)) unnamed_addr #1

declare void @_ZN5blink15FetchParametersC1ENS_15ResourceRequestERKNS_21ResourceLoaderOptionsE(%"class.blink::FetchParameters"*, %"class.blink::ResourceRequest"*, %"struct.blink::ResourceLoaderOptions"* dereferenceable(112)) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15ResourceRequestD1Ev(%"class.blink::ResourceRequest"*) unnamed_addr #4

declare %"class.blink::XSLStyleSheetResource"* @_ZN5blink21XSLStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::ResourceClient"*) local_unnamed_addr #1

declare void @_ZN3WTF12TextEncodingC1ERKNS_6StringE(%"class.WTF::TextEncoding"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink11StyleEngine15AddPendingSheetERNS_18StyleEngineContextE(%"class.blink::StyleEngine"*, %"class.blink::StyleEngineContext"* dereferenceable(1)) local_unnamed_addr #1

declare %"class.blink::CSSStyleSheetResource"* @_ZN5blink21CSSStyleSheetResource5FetchERNS_15FetchParametersEPNS_15ResourceFetcherEPNS_14ResourceClientE(%"class.blink::FetchParameters"* dereferenceable(1344), %"class.blink::ResourceFetcher"*, %"class.blink::ResourceClient"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15FetchParametersD1Ev(%"class.blink::FetchParameters"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink21ResourceLoaderOptionsD1Ev(%"struct.blink::ResourceLoaderOptions"*) unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK5blink21ProcessingInstruction9IsLoadingEv(%"class.blink::ProcessingInstruction"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %15

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::StyleSheet"*, %"class.blink::StyleSheet"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheet"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::StyleSheet"* %7 to i1 (%"class.blink::StyleSheet"*)***
  %11 = load i1 (%"class.blink::StyleSheet"*)**, i1 (%"class.blink::StyleSheet"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %11, i64 20
  %13 = load i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::StyleSheet"* nonnull %7) #9
  br label %15

15:                                               ; preds = %5, %1, %9
  %16 = phi i1 [ %14, %9 ], [ true, %1 ], [ false, %5 ]
  ret i1 %16
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN5blink21ProcessingInstruction11SheetLoadedEv(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 8
  %3 = load i8, i8* %2, align 1, !range !3
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %5, label %33

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0, i32 0
  %7 = load %"class.blink::StyleSheet"*, %"class.blink::StyleSheet"** %6, align 8
  %8 = icmp eq %"class.blink::StyleSheet"* %7, null
  br i1 %8, label %15, label %9

9:                                                ; preds = %5
  %10 = bitcast %"class.blink::StyleSheet"* %7 to i1 (%"class.blink::StyleSheet"*)***
  %11 = load i1 (%"class.blink::StyleSheet"*)**, i1 (%"class.blink::StyleSheet"*)*** %10, align 8
  %12 = getelementptr inbounds i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %11, i64 20
  %13 = load i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %12, align 8
  %14 = tail call zeroext i1 %13(%"class.blink::StyleSheet"* nonnull %7) #9
  br i1 %14, label %33, label %15

15:                                               ; preds = %5, %9
  %16 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  %17 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink12DocumentXSLT11SheetLoadedERNS_8DocumentEPNS_21ProcessingInstructionE(%"class.blink::Document"* dereferenceable(2848) %20, %"class.blink::ProcessingInstruction"* %0) #9
  br i1 %21, label %33, label %22

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %24 = load i8, i8* %23, align 4, !range !3
  %25 = icmp eq i8 %24, 0
  br i1 %25, label %26, label %33

26:                                               ; preds = %22
  %27 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %28 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %27, i64 0, i32 2, i32 0, i32 0
  %29 = load %"class.blink::Document"*, %"class.blink::Document"** %28, align 8
  %30 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %29, i64 0, i32 59, i32 0, i32 0
  %31 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %30, align 8
  %32 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 7
  tail call void @_ZN5blink11StyleEngine18RemovePendingSheetERNS_4NodeERKNS_18StyleEngineContextE(%"class.blink::StyleEngine"* %31, %"class.blink::Node"* dereferenceable(64) %16, %"class.blink::StyleEngineContext"* dereferenceable(1) %32) #9
  br label %33

33:                                               ; preds = %1, %26, %22, %9, %15
  %34 = phi i1 [ true, %15 ], [ false, %9 ], [ true, %22 ], [ true, %26 ], [ false, %1 ]
  ret i1 %34
}

declare zeroext i1 @_ZN5blink12DocumentXSLT11SheetLoadedERNS_8DocumentEPNS_21ProcessingInstructionE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ProcessingInstruction"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstruction14NotifyFinishedEPNS_8ResourceE(%"class.blink::ProcessingInstruction"*, %"class.blink::Resource"*) unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.blink::KURL", align 8
  %5 = alloca %"class.blink::KURL", align 8
  %6 = alloca %"struct.blink::Referrer", align 8
  %7 = alloca %"class.blink::KURL", align 8
  %8 = alloca %"class.WTF::TextEncoding", align 8
  %9 = alloca %"class.WTF::String", align 8
  %10 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  %11 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 1
  %12 = load i32, i32* %11, align 8
  %13 = and i32 %12, 256
  %14 = icmp eq i32 %13, 0
  br i1 %14, label %269, label %15

15:                                               ; preds = %2
  %16 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %17 = load i8, i8* %16, align 4, !range !3
  %18 = icmp eq i8 %17, 0
  br i1 %18, label %54, label %19

19:                                               ; preds = %15
  %20 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %21 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %20, align 8
  %22 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %21, i64 0, i32 2, i32 0, i32 0
  %23 = load %"class.blink::Document"*, %"class.blink::Document"** %22, align 8
  %24 = tail call noalias i8* @malloc(i64 16) #9
  %25 = bitcast i8* %24 to %"class.blink::IncrementLoadEventDelayCount"*
  tail call void @_ZN5blink28IncrementLoadEventDelayCountC1ERNS_8DocumentE(%"class.blink::IncrementLoadEventDelayCount"* %25, %"class.blink::Document"* dereferenceable(2848) %23) #9
  %26 = ptrtoint i8* %24 to i64
  %27 = load i8, i8* %16, align 4
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %54, label %29

29:                                               ; preds = %19
  %30 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26
  %31 = tail call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %30) #9
  %32 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %4, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %32) #9
  %33 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 29
  call void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* nonnull sret %4, %"class.blink::ResourceResponse"* %33) #9
  %34 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 208) #9
  %35 = bitcast i8* %34 to %"class.blink::XSLStyleSheet"*
  %36 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %31, i64 0, i32 4
  call void @_ZN5blink13XSLStyleSheetC1EPNS_4NodeERKN3WTF6StringERKNS_4KURLEb(%"class.blink::XSLStyleSheet"* %35, %"class.blink::Node"* %10, %"class.WTF::String"* dereferenceable(8) %36, %"class.blink::KURL"* nonnull dereferenceable(112) %4, i1 zeroext false) #9
  %37 = getelementptr inbounds i8, i8* %34, i64 -4
  %38 = bitcast i8* %37 to i16*
  %39 = load atomic i16, i16* %38 monotonic, align 2
  %40 = or i16 %39, 1
  store atomic i16 %40, i16* %38 release, align 2
  %41 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6
  %42 = ptrtoint i8* %34 to i64
  %43 = bitcast %"class.blink::Member.395"* %41 to i64*
  store atomic i64 %42, i64* %43 monotonic, align 8
  %44 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %45 = icmp eq i32 %44, 0
  br i1 %45, label %48, label %46

46:                                               ; preds = %29
  %47 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %34) #9
  br label %48

48:                                               ; preds = %29, %46
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %32) #9
  %49 = bitcast %"class.blink::Member.395"* %41 to %"class.blink::XSLStyleSheet"**
  %50 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %49, align 8
  %51 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 1, i32 1
  %52 = bitcast i8* %51 to %"class.WTF::String"*
  %53 = call zeroext i1 @_ZN5blink13XSLStyleSheet11ParseStringERKN3WTF6StringE(%"class.blink::XSLStyleSheet"* %50, %"class.WTF::String"* dereferenceable(8) %52) #9
  br label %243

54:                                               ; preds = %15, %19
  %55 = phi i64 [ %26, %19 ], [ 0, %15 ]
  %56 = bitcast %"class.blink::Resource"* %1 to %"class.blink::CSSStyleSheetResource"*
  %57 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %58 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %57, align 8
  %59 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %58, i64 0, i32 2, i32 0, i32 0
  %60 = load %"class.blink::Document"*, %"class.blink::Document"** %59, align 8
  %61 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %5, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %61) #9
  %62 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 29
  call void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* nonnull sret %5, %"class.blink::ResourceResponse"* %62) #9
  %63 = call zeroext i1 @_ZNK5blink16ResourceResponse16IsCorsSameOriginEv(%"class.blink::ResourceResponse"* %62) #9
  %64 = bitcast %"struct.blink::Referrer"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %64) #9
  %65 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 112, i8* nonnull %65) #9
  call void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* nonnull sret %7, %"class.blink::ResourceResponse"* %62) #9
  %66 = call i32 @_ZNK5blink21CSSStyleSheetResource17GetReferrerPolicyEv(%"class.blink::CSSStyleSheetResource"* %56) #9
  %67 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %7, i64 0, i32 4, i32 0, i32 0
  %68 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %67, align 8
  %69 = icmp eq %"class.WTF::StringImpl"* %68, null
  br i1 %69, label %93, label %70

70:                                               ; preds = %54
  %71 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %72 = load atomic i32, i32* %71 acquire, align 4
  %73 = and i32 %72, 4
  %74 = icmp eq i32 %73, 0
  br i1 %74, label %91, label %75

75:                                               ; preds = %70
  %76 = load atomic i32, i32* %71 monotonic, align 4
  %77 = and i32 %76, 2
  %78 = icmp eq i32 %77, 0
  br i1 %78, label %79, label %93

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %68, i64 0, i32 0
  %81 = load i32, i32* %80, align 4
  %82 = zext i32 %81 to i33
  %83 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %82, i33 1) #9
  %84 = extractvalue { i33, i1 } %83, 1
  %85 = extractvalue { i33, i1 } %83, 0
  %86 = icmp slt i33 %85, 0
  %87 = or i1 %84, %86
  br i1 %87, label %88, label %89, !prof !2

88:                                               ; preds = %79
  call void @llvm.trap() #9
  unreachable

89:                                               ; preds = %79
  %90 = trunc i33 %85 to i32
  store i32 %90, i32* %80, align 4
  br label %93

91:                                               ; preds = %70
  %92 = call %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"* nonnull %68) #9
  br label %93

93:                                               ; preds = %54, %75, %89, %91
  %94 = phi %"class.WTF::StringImpl"* [ %92, %91 ], [ %68, %75 ], [ %68, %89 ], [ null, %54 ]
  %95 = ptrtoint %"class.WTF::StringImpl"* %94 to i64
  %96 = bitcast %"struct.blink::Referrer"* %6 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %6, i64 0, i32 1
  store i32 %66, i32* %97, align 8
  %98 = bitcast %"class.WTF::TextEncoding"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %98) #9
  %99 = bitcast %"class.blink::Resource"* %1 to %"class.blink::TextResource"*
  %100 = call i8* @_ZNK5blink12TextResource8EncodingEv(%"class.blink::TextResource"* %99) #9
  %101 = getelementptr inbounds %"class.WTF::TextEncoding", %"class.WTF::TextEncoding"* %8, i64 0, i32 0
  store i8* %100, i8** %101, align 8
  %102 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64 176) #9
  %103 = bitcast i8* %102 to %"class.blink::CSSParserContext"*
  call void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"* %103, %"class.blink::Document"* dereferenceable(2848) %60, %"class.blink::KURL"* nonnull dereferenceable(112) %5, i1 zeroext %63, %"struct.blink::Referrer"* nonnull dereferenceable(16) %6, %"class.WTF::TextEncoding"* nonnull dereferenceable(8) %8, i8 zeroext 0, i32 0) #9
  %104 = getelementptr inbounds i8, i8* %102, i64 -4
  %105 = bitcast i8* %104 to i16*
  %106 = load atomic i16, i16* %105 monotonic, align 2
  %107 = or i16 %106, 1
  store atomic i16 %107, i16* %105 release, align 2
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %98) #9
  %108 = getelementptr inbounds %"struct.blink::Referrer", %"struct.blink::Referrer"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  %109 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %108, align 8
  %110 = icmp eq %"class.WTF::StringImpl"* %109, null
  br i1 %110, label %124, label %111

111:                                              ; preds = %93
  %112 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %113 = load atomic i32, i32* %112 monotonic, align 4
  %114 = and i32 %113, 2
  %115 = icmp eq i32 %114, 0
  %116 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %109, i64 0, i32 0
  %117 = load i32, i32* %116, align 4
  br i1 %115, label %118, label %120

118:                                              ; preds = %111
  %119 = add i32 %117, -1
  store i32 %119, i32* %116, align 4
  br label %120

120:                                              ; preds = %118, %111
  %121 = phi i32 [ %119, %118 ], [ %117, %111 ]
  %122 = icmp eq i32 %121, 0
  br i1 %122, label %123, label %124

123:                                              ; preds = %120
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %109) #9
  br label %124

124:                                              ; preds = %93, %120, %123
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %7) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %65) #9
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %64) #9
  call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* nonnull %5) #9
  call void @llvm.lifetime.end.p0i8(i64 112, i8* nonnull %61) #9
  %125 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26
  %126 = getelementptr inbounds %"class.blink::Resource", %"class.blink::Resource"* %1, i64 0, i32 26, i32 30
  %127 = load i8, i8* %126, align 8, !range !3
  %128 = icmp eq i8 %127, 0
  br i1 %128, label %131, label %129

129:                                              ; preds = %124
  %130 = getelementptr inbounds i8, i8* %102, i64 144
  store i8 1, i8* %130, align 8
  br label %131

131:                                              ; preds = %124, %129
  %132 = call dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"* %125) #9
  %133 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64 192) #9
  %134 = bitcast i8* %133 to %"class.blink::StyleSheetContents"*
  %135 = getelementptr inbounds %"class.blink::KURL", %"class.blink::KURL"* %132, i64 0, i32 4
  call void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"* %134, %"class.blink::CSSParserContext"* %103, %"class.WTF::String"* dereferenceable(8) %135, %"class.blink::StyleRuleImport"* null) #9
  %136 = getelementptr inbounds i8, i8* %133, i64 -4
  %137 = bitcast i8* %136 to i16*
  %138 = load atomic i16, i16* %137 monotonic, align 2
  %139 = or i16 %138, 1
  store atomic i16 %139, i16* %137 release, align 2
  %140 = bitcast i64* %3 to %"class.WTF::TextPosition"*
  %141 = call i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64 192) #9
  %142 = bitcast i8* %141 to %"class.blink::CSSStyleSheet"*
  %143 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %143) #9
  store i64 0, i64* %3, align 8
  call void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsERNS_4NodeEbRKN3WTF12TextPositionE(%"class.blink::CSSStyleSheet"* %142, %"class.blink::StyleSheetContents"* %134, %"class.blink::Node"* dereferenceable(64) %10, i1 zeroext false, %"class.WTF::TextPosition"* nonnull dereferenceable(8) %140) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %143) #9
  %144 = getelementptr inbounds i8, i8* %141, i64 -4
  %145 = bitcast i8* %144 to i16*
  %146 = load atomic i16, i16* %145 monotonic, align 2
  %147 = or i16 %146, 1
  store atomic i16 %147, i16* %145 release, align 2
  %148 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 9
  %149 = load i8, i8* %148, align 2, !range !3
  %150 = icmp ne i8 %149, 0
  call void @_ZN5blink13CSSStyleSheet11setDisabledEb(%"class.blink::CSSStyleSheet"* %142, i1 zeroext %150) #9
  %151 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 4
  %152 = getelementptr inbounds i8, i8* %141, i64 32
  %153 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %151, i64 0, i32 0, i32 0
  %154 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %155 = icmp eq %"class.WTF::StringImpl"* %154, null
  br i1 %155, label %173, label %156

156:                                              ; preds = %131
  %157 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %158 = load atomic i32, i32* %157 monotonic, align 4
  %159 = and i32 %158, 2
  %160 = icmp eq i32 %159, 0
  br i1 %160, label %161, label %173

161:                                              ; preds = %156
  %162 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %154, i64 0, i32 0
  %163 = load i32, i32* %162, align 4
  %164 = zext i32 %163 to i33
  %165 = call { i33, i1 } @llvm.sadd.with.overflow.i33(i33 %164, i33 1) #9
  %166 = extractvalue { i33, i1 } %165, 1
  %167 = extractvalue { i33, i1 } %165, 0
  %168 = icmp slt i33 %167, 0
  %169 = or i1 %166, %168
  br i1 %169, label %170, label %171, !prof !2

170:                                              ; preds = %161
  call void @llvm.trap() #9
  unreachable

171:                                              ; preds = %161
  %172 = trunc i33 %167 to i32
  store i32 %172, i32* %162, align 4
  br label %173

173:                                              ; preds = %171, %156, %131
  %174 = ptrtoint %"class.WTF::StringImpl"* %154 to i64
  %175 = bitcast i8* %152 to i64*
  %176 = bitcast i8* %152 to %"class.WTF::StringImpl"**
  %177 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %176, align 8
  store i64 %174, i64* %175, align 8
  %178 = icmp eq %"class.WTF::StringImpl"* %177, null
  br i1 %178, label %192, label %179

179:                                              ; preds = %173
  %180 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %181 = load atomic i32, i32* %180 monotonic, align 4
  %182 = and i32 %181, 2
  %183 = icmp eq i32 %182, 0
  %184 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %177, i64 0, i32 0
  %185 = load i32, i32* %184, align 4
  br i1 %183, label %186, label %188

186:                                              ; preds = %179
  %187 = add i32 %185, -1
  store i32 %187, i32* %184, align 4
  br label %188

188:                                              ; preds = %186, %179
  %189 = phi i32 [ %187, %186 ], [ %185, %179 ]
  %190 = icmp eq i32 %189, 0
  br i1 %190, label %191, label %192

191:                                              ; preds = %188
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %177) #9
  br label %192

192:                                              ; preds = %173, %188, %191
  %193 = load i8, i8* %148, align 2, !range !3
  %194 = icmp eq i8 %193, 0
  br i1 %194, label %195, label %208

195:                                              ; preds = %192
  %196 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %153, align 8
  %197 = icmp eq %"class.WTF::StringImpl"* %196, null
  br i1 %197, label %208, label %198

198:                                              ; preds = %195
  %199 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %196, i64 0, i32 1
  %200 = load i32, i32* %199, align 4
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %208, label %202

202:                                              ; preds = %198
  %203 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %57, align 8
  %204 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %203, i64 0, i32 2, i32 0, i32 0
  %205 = load %"class.blink::Document"*, %"class.blink::Document"** %204, align 8
  %206 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %205, i64 0, i32 59, i32 0, i32 0
  %207 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %206, align 8
  call void @_ZN5blink11StyleEngine37SetPreferredStylesheetSetNameIfNotSetERKN3WTF6StringE(%"class.blink::StyleEngine"* %207, %"class.WTF::String"* dereferenceable(8) %151) #9
  br label %208

208:                                              ; preds = %195, %192, %202, %198
  %209 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 5
  %210 = call %"class.blink::ExecutionContext"* @_ZNK5blink4Node19GetExecutionContextEv(%"class.blink::Node"* %10) #9
  %211 = call %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8) %209, %"class.blink::ExecutionContext"* %210) #9
  call void @_ZN5blink13CSSStyleSheet15SetMediaQueriesE13scoped_refptrINS_13MediaQuerySetEE(%"class.blink::CSSStyleSheet"* %142, %"class.blink::MediaQuerySet"* %211) #9
  %212 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6
  %213 = ptrtoint i8* %141 to i64
  %214 = bitcast %"class.blink::Member.395"* %212 to i64*
  store atomic i64 %213, i64* %214 monotonic, align 8
  %215 = load atomic i32, i32* getelementptr inbounds (%"class.blink::AtomicEntryFlag", %"class.blink::AtomicEntryFlag"* @_ZN5blink11ThreadState25incremental_marking_flag_E, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0) monotonic, align 4
  %216 = icmp eq i32 %215, 0
  br i1 %216, label %219, label %217

217:                                              ; preds = %208
  %218 = call zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8* %141) #9
  br label %219

219:                                              ; preds = %208, %217
  %220 = getelementptr inbounds i8, i8* %141, i64 16
  %221 = bitcast i8* %220 to %"class.blink::StyleSheetContents"**
  %222 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %221, align 8
  %223 = bitcast %"class.WTF::String"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %223) #9
  %224 = call %"class.WTF::StringImpl"* @_ZNK5blink21CSSStyleSheetResource9SheetTextEPKNS_16CSSParserContextENS0_13MIMETypeCheckE(%"class.blink::CSSStyleSheetResource"* %56, %"class.blink::CSSParserContext"* %103, i32 0) #9
  %225 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %9, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* %224, %"class.WTF::StringImpl"** %225, align 8
  %226 = call i32 @_ZN5blink18StyleSheetContents11ParseStringERKN3WTF6StringEb(%"class.blink::StyleSheetContents"* %222, %"class.WTF::String"* nonnull dereferenceable(8) %9, i1 zeroext true) #9
  %227 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %225, align 8
  %228 = icmp eq %"class.WTF::StringImpl"* %227, null
  br i1 %228, label %242, label %229

229:                                              ; preds = %219
  %230 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %231 = load atomic i32, i32* %230 monotonic, align 4
  %232 = and i32 %231, 2
  %233 = icmp eq i32 %232, 0
  %234 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %227, i64 0, i32 0
  %235 = load i32, i32* %234, align 4
  br i1 %233, label %236, label %238

236:                                              ; preds = %229
  %237 = add i32 %235, -1
  store i32 %237, i32* %234, align 4
  br label %238

238:                                              ; preds = %236, %229
  %239 = phi i32 [ %237, %236 ], [ %235, %229 ]
  %240 = icmp eq i32 %239, 0
  br i1 %240, label %241, label %242

241:                                              ; preds = %238
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %227) #9
  br label %242

242:                                              ; preds = %219, %238, %241
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %223) #9
  br label %243

243:                                              ; preds = %242, %48
  %244 = phi i64 [ %55, %242 ], [ %26, %48 ]
  %245 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1
  %246 = bitcast %"class.blink::ResourceClient.base"* %245 to %"class.blink::ResourceClient"*
  call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %246, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #9
  %247 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 8
  store i8 0, i8* %247, align 1
  %248 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 10
  %249 = load i8, i8* %248, align 1, !range !3
  %250 = icmp eq i8 %249, 0
  br i1 %250, label %257, label %251

251:                                              ; preds = %243
  %252 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0, i32 0
  %253 = bitcast %"class.blink::StyleSheet"** %252 to %"class.blink::CSSStyleSheet"**
  %254 = load %"class.blink::CSSStyleSheet"*, %"class.blink::CSSStyleSheet"** %253, align 8
  %255 = getelementptr inbounds %"class.blink::CSSStyleSheet", %"class.blink::CSSStyleSheet"* %254, i64 0, i32 1, i32 0, i32 0
  %256 = load %"class.blink::StyleSheetContents"*, %"class.blink::StyleSheetContents"** %255, align 8
  call void @_ZN5blink18StyleSheetContents11CheckLoadedEv(%"class.blink::StyleSheetContents"* %256) #9
  br label %264

257:                                              ; preds = %243
  %258 = load i8, i8* %16, align 4, !range !3
  %259 = icmp eq i8 %258, 0
  br i1 %259, label %264, label %260

260:                                              ; preds = %257
  %261 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0, i32 0
  %262 = bitcast %"class.blink::StyleSheet"** %261 to %"class.blink::XSLStyleSheet"**
  %263 = load %"class.blink::XSLStyleSheet"*, %"class.blink::XSLStyleSheet"** %262, align 8
  call void @_ZN5blink13XSLStyleSheet11CheckLoadedEv(%"class.blink::XSLStyleSheet"* %263) #9
  br label %264

264:                                              ; preds = %257, %260, %251
  %265 = icmp eq i64 %244, 0
  br i1 %265, label %269, label %266

266:                                              ; preds = %264
  %267 = inttoptr i64 %244 to %"class.blink::IncrementLoadEventDelayCount"*
  call void @_ZN5blink28IncrementLoadEventDelayCountD1Ev(%"class.blink::IncrementLoadEventDelayCount"* nonnull %267) #9
  %268 = inttoptr i64 %244 to i8*
  call void @free(i8* %268) #9
  br label %269

269:                                              ; preds = %2, %266, %264
  ret void
}

declare void @_ZNK5blink16ResourceResponse11ResponseUrlEv(%"class.blink::KURL"* sret, %"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare zeroext i1 @_ZN5blink13XSLStyleSheet11ParseStringERKN3WTF6StringE(%"class.blink::XSLStyleSheet"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5blink16ResourceResponse16IsCorsSameOriginEv(%"class.blink::ResourceResponse"*) local_unnamed_addr #1

declare i32 @_ZNK5blink21CSSStyleSheetResource17GetReferrerPolicyEv(%"class.blink::CSSStyleSheetResource"*) local_unnamed_addr #1

declare i8* @_ZNK5blink12TextResource8EncodingEv(%"class.blink::TextResource"*) unnamed_addr #1

declare void @_ZN5blink13CSSStyleSheet11setDisabledEb(%"class.blink::CSSStyleSheet"*, i1 zeroext) unnamed_addr #1

declare void @_ZN5blink11StyleEngine37SetPreferredStylesheetSetNameIfNotSetERKN3WTF6StringE(%"class.blink::StyleEngine"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5blink13CSSStyleSheet15SetMediaQueriesE13scoped_refptrINS_13MediaQuerySetEE(%"class.blink::CSSStyleSheet"*, %"class.blink::MediaQuerySet"*) local_unnamed_addr #1

declare %"class.blink::MediaQuerySet"* @_ZN5blink13MediaQuerySet6CreateERKN3WTF6StringEPKNS_16ExecutionContextE(%"class.WTF::String"* dereferenceable(8), %"class.blink::ExecutionContext"*) local_unnamed_addr #1

declare i32 @_ZN5blink18StyleSheetContents11ParseStringERKN3WTF6StringEb(%"class.blink::StyleSheetContents"*, %"class.WTF::String"* dereferenceable(8), i1 zeroext) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink21CSSStyleSheetResource9SheetTextEPKNS_16CSSParserContextENS0_13MIMETypeCheckE(%"class.blink::CSSStyleSheetResource"*, %"class.blink::CSSParserContext"*, i32) local_unnamed_addr #1

declare void @_ZN5blink18StyleSheetContents11CheckLoadedEv(%"class.blink::StyleSheetContents"*) local_unnamed_addr #1

declare void @_ZN5blink13XSLStyleSheet11CheckLoadedEv(%"class.blink::XSLStyleSheet"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_N5blink21ProcessingInstruction14NotifyFinishedEPNS_8ResourceE(%"class.blink::ProcessingInstruction"*, %"class.blink::Resource"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::ResourceClient.base"* %3 to %"class.blink::ProcessingInstruction"*
  tail call void @_ZN5blink21ProcessingInstruction14NotifyFinishedEPNS_8ResourceE(%"class.blink::ProcessingInstruction"* %4, %"class.blink::Resource"* %1)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN5blink21ProcessingInstruction12InsertedIntoERNS_13ContainerNodeE(%"class.blink::ProcessingInstruction"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = alloca %"class.WTF::String", align 8
  %4 = alloca %"class.WTF::String", align 8
  %5 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  %6 = tail call i32 @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Node"* %5, %"class.blink::ContainerNode"* dereferenceable(80) %1) #9
  %7 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = and i32 %8, 256
  %10 = icmp eq i32 %9, 0
  br i1 %10, label %63, label %11

11:                                               ; preds = %2
  %12 = bitcast %"class.WTF::String"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #9
  %13 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %3, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %13, align 8
  %14 = bitcast %"class.WTF::String"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %4, i64 0, i32 0, i32 0
  store %"class.WTF::StringImpl"* null, %"class.WTF::StringImpl"** %15, align 8
  %16 = call zeroext i1 @_ZN5blink21ProcessingInstruction15CheckStyleSheetERN3WTF6StringES3_(%"class.blink::ProcessingInstruction"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  %17 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %18 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %19 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %18, i64 0, i32 2, i32 0, i32 0
  %20 = load %"class.blink::Document"*, %"class.blink::Document"** %19, align 8
  %21 = tail call zeroext i1 @_ZN5blink12DocumentXSLT41ProcessingInstructionInsertedIntoDocumentERNS_8DocumentEPNS_21ProcessingInstructionE(%"class.blink::Document"* dereferenceable(2848) %20, %"class.blink::ProcessingInstruction"* %0) #9
  br i1 %21, label %28, label %22

22:                                               ; preds = %11
  %23 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %17, align 8
  %24 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %23, i64 0, i32 2, i32 0, i32 0
  %25 = load %"class.blink::Document"*, %"class.blink::Document"** %24, align 8
  %26 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %25, i64 0, i32 59, i32 0, i32 0
  %27 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %26, align 8
  tail call void @_ZN5blink11StyleEngine26AddStyleSheetCandidateNodeERNS_4NodeE(%"class.blink::StyleEngine"* %27, %"class.blink::Node"* dereferenceable(64) %5) #9
  br label %28

28:                                               ; preds = %22, %11
  br i1 %16, label %29, label %30

29:                                               ; preds = %28
  call void @_ZN5blink21ProcessingInstruction7ProcessERKN3WTF6StringES4_(%"class.blink::ProcessingInstruction"* %0, %"class.WTF::String"* nonnull dereferenceable(8) %3, %"class.WTF::String"* nonnull dereferenceable(8) %4)
  br label %30

30:                                               ; preds = %29, %28
  %31 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %32 = icmp eq %"class.WTF::StringImpl"* %31, null
  br i1 %32, label %46, label %33

33:                                               ; preds = %30
  %34 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %35 = load atomic i32, i32* %34 monotonic, align 4
  %36 = and i32 %35, 2
  %37 = icmp eq i32 %36, 0
  %38 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %31, i64 0, i32 0
  %39 = load i32, i32* %38, align 4
  br i1 %37, label %40, label %42

40:                                               ; preds = %33
  %41 = add i32 %39, -1
  store i32 %41, i32* %38, align 4
  br label %42

42:                                               ; preds = %40, %33
  %43 = phi i32 [ %41, %40 ], [ %39, %33 ]
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %45, label %46

45:                                               ; preds = %42
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %31) #9
  br label %46

46:                                               ; preds = %30, %42, %45
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %47 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %13, align 8
  %48 = icmp eq %"class.WTF::StringImpl"* %47, null
  br i1 %48, label %62, label %49

49:                                               ; preds = %46
  %50 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %51 = load atomic i32, i32* %50 monotonic, align 4
  %52 = and i32 %51, 2
  %53 = icmp eq i32 %52, 0
  %54 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %47, i64 0, i32 0
  %55 = load i32, i32* %54, align 4
  br i1 %53, label %56, label %58

56:                                               ; preds = %49
  %57 = add i32 %55, -1
  store i32 %57, i32* %54, align 4
  br label %58

58:                                               ; preds = %56, %49
  %59 = phi i32 [ %57, %56 ], [ %55, %49 ]
  %60 = icmp eq i32 %59, 0
  br i1 %60, label %61, label %62

61:                                               ; preds = %58
  call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %47) #9
  br label %62

62:                                               ; preds = %46, %58, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #9
  br label %63

63:                                               ; preds = %2, %62
  ret i32 0
}

declare i32 @_ZN5blink4Node12InsertedIntoERNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink12DocumentXSLT41ProcessingInstructionInsertedIntoDocumentERNS_8DocumentEPNS_21ProcessingInstructionE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ProcessingInstruction"*) local_unnamed_addr #1

declare void @_ZN5blink11StyleEngine26AddStyleSheetCandidateNodeERNS_4NodeE(%"class.blink::StyleEngine"*, %"class.blink::Node"* dereferenceable(64)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5blink21ProcessingInstruction11RemovedFromERNS_13ContainerNodeE(%"class.blink::ProcessingInstruction"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZN5blink4Node11RemovedFromERNS_13ContainerNodeE(%"class.blink::Node"* %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #9
  %4 = getelementptr inbounds %"class.blink::ContainerNode", %"class.blink::ContainerNode"* %1, i64 0, i32 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = and i32 %5, 256
  %7 = icmp eq i32 %6, 0
  br i1 %7, label %59, label %8

8:                                                ; preds = %2
  %9 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0, i32 3, i32 0, i32 0
  %10 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %11 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %10, i64 0, i32 2, i32 0, i32 0
  %12 = load %"class.blink::Document"*, %"class.blink::Document"** %11, align 8
  %13 = tail call zeroext i1 @_ZN5blink12DocumentXSLT40ProcessingInstructionRemovedFromDocumentERNS_8DocumentEPNS_21ProcessingInstructionE(%"class.blink::Document"* dereferenceable(2848) %12, %"class.blink::ProcessingInstruction"* %0) #9
  br i1 %13, label %20, label %14

14:                                               ; preds = %8
  %15 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %16 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %15, i64 0, i32 2, i32 0, i32 0
  %17 = load %"class.blink::Document"*, %"class.blink::Document"** %16, align 8
  %18 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %17, i64 0, i32 59, i32 0, i32 0
  %19 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %18, align 8
  tail call void @_ZN5blink11StyleEngine29RemoveStyleSheetCandidateNodeERNS_4NodeERNS_13ContainerNodeE(%"class.blink::StyleEngine"* %19, %"class.blink::Node"* dereferenceable(64) %3, %"class.blink::ContainerNode"* dereferenceable(80) %1) #9
  br label %20

20:                                               ; preds = %14, %8
  %21 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 8
  %22 = load i8, i8* %21, align 1, !range !3
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %24, label %34

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0, i32 0
  %26 = load %"class.blink::StyleSheet"*, %"class.blink::StyleSheet"** %25, align 8
  %27 = icmp eq %"class.blink::StyleSheet"* %26, null
  br i1 %27, label %45, label %28

28:                                               ; preds = %24
  %29 = bitcast %"class.blink::StyleSheet"* %26 to i1 (%"class.blink::StyleSheet"*)***
  %30 = load i1 (%"class.blink::StyleSheet"*)**, i1 (%"class.blink::StyleSheet"*)*** %29, align 8
  %31 = getelementptr inbounds i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %30, i64 20
  %32 = load i1 (%"class.blink::StyleSheet"*)*, i1 (%"class.blink::StyleSheet"*)** %31, align 8
  %33 = tail call zeroext i1 %32(%"class.blink::StyleSheet"* nonnull %26) #9
  br i1 %33, label %34, label %45

34:                                               ; preds = %20, %28
  %35 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 11
  %36 = load i8, i8* %35, align 4, !range !3
  %37 = icmp eq i8 %36, 0
  br i1 %37, label %38, label %45

38:                                               ; preds = %34
  %39 = load %"class.blink::TreeScope"*, %"class.blink::TreeScope"** %9, align 8
  %40 = getelementptr inbounds %"class.blink::TreeScope", %"class.blink::TreeScope"* %39, i64 0, i32 2, i32 0, i32 0
  %41 = load %"class.blink::Document"*, %"class.blink::Document"** %40, align 8
  %42 = getelementptr inbounds %"class.blink::Document", %"class.blink::Document"* %41, i64 0, i32 59, i32 0, i32 0
  %43 = load %"class.blink::StyleEngine"*, %"class.blink::StyleEngine"** %42, align 8
  %44 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 7
  tail call void @_ZN5blink11StyleEngine18RemovePendingSheetERNS_4NodeERKNS_18StyleEngineContextE(%"class.blink::StyleEngine"* %43, %"class.blink::Node"* dereferenceable(64) %3, %"class.blink::StyleEngineContext"* dereferenceable(1) %44) #9
  br label %45

45:                                               ; preds = %24, %38, %34, %28
  %46 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6, i32 0
  %47 = getelementptr inbounds %"class.blink::MemberBase.396", %"class.blink::MemberBase.396"* %46, i64 0, i32 0
  %48 = load %"class.blink::StyleSheet"*, %"class.blink::StyleSheet"** %47, align 8
  %49 = icmp eq %"class.blink::StyleSheet"* %48, null
  br i1 %49, label %56, label %50

50:                                               ; preds = %45
  %51 = bitcast %"class.blink::MemberBase.396"* %46 to i64*
  store atomic i64 0, i64* %51 monotonic, align 8
  %52 = bitcast %"class.blink::StyleSheet"* %48 to void (%"class.blink::StyleSheet"*)***
  %53 = load void (%"class.blink::StyleSheet"*)**, void (%"class.blink::StyleSheet"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.blink::StyleSheet"*)*, void (%"class.blink::StyleSheet"*)** %53, i64 18
  %55 = load void (%"class.blink::StyleSheet"*)*, void (%"class.blink::StyleSheet"*)** %54, align 8
  tail call void %55(%"class.blink::StyleSheet"* nonnull %48) #9
  br label %56

56:                                               ; preds = %45, %50
  %57 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1
  %58 = bitcast %"class.blink::ResourceClient.base"* %57 to %"class.blink::ResourceClient"*
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %58, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #9
  br label %59

59:                                               ; preds = %2, %56
  ret void
}

declare void @_ZN5blink4Node11RemovedFromERNS_13ContainerNodeE(%"class.blink::Node"*, %"class.blink::ContainerNode"* dereferenceable(80)) unnamed_addr #1

declare zeroext i1 @_ZN5blink12DocumentXSLT40ProcessingInstructionRemovedFromDocumentERNS_8DocumentEPNS_21ProcessingInstructionE(%"class.blink::Document"* dereferenceable(2848), %"class.blink::ProcessingInstruction"*) local_unnamed_addr #1

declare void @_ZN5blink11StyleEngine29RemoveStyleSheetCandidateNodeERNS_4NodeERNS_13ContainerNodeE(%"class.blink::StyleEngine"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::ContainerNode"* dereferenceable(80)) local_unnamed_addr #1

declare void @_ZN5blink11StyleEngine18RemovePendingSheetERNS_4NodeERKNS_18StyleEngineContextE(%"class.blink::StyleEngine"*, %"class.blink::Node"* dereferenceable(64), %"class.blink::StyleEngineContext"* dereferenceable(1)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK5blink21ProcessingInstruction5TraceEPNS_7VisitorE(%"class.blink::ProcessingInstruction"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 6
  %4 = bitcast %"class.blink::Member.395"* %3 to i64*
  %5 = load atomic i64, i64* %4 monotonic, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %13, label %7

7:                                                ; preds = %2
  %8 = inttoptr i64 %5 to i8*
  %9 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %10 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %9, align 8
  %11 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %10, i64 5
  %12 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %11, align 8
  tail call void %12(%"class.blink::Visitor"* %1, i8* nonnull %8, i8* nonnull %8, void (%"class.blink::Visitor"*, i8*)* nonnull @_ZN5blink10TraceTraitINS_10StyleSheetEE5TraceEPNS_7VisitorEPKv) #9
  br label %13

13:                                               ; preds = %2, %7
  %14 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 12
  %15 = bitcast %"class.blink::Member.397"* %14 to i64*
  %16 = load atomic i64, i64* %15 monotonic, align 8
  %17 = icmp eq i64 %16, 0
  br i1 %17, label %84, label %18

18:                                               ; preds = %13
  %19 = inttoptr i64 %16 to i8*
  %20 = and i64 %16, -131072
  %21 = inttoptr i64 %20 to i8*
  %22 = getelementptr inbounds i8, i8* %21, i64 4138
  %23 = load i8, i8* %22, align 2
  %24 = icmp eq i8 %23, 1
  br i1 %24, label %25, label %27

25:                                               ; preds = %18
  %26 = getelementptr inbounds i8, i8* %21, i64 4160
  br label %65

27:                                               ; preds = %18
  %28 = getelementptr inbounds i8, i8* %21, i64 4096
  %29 = bitcast i8* %28 to %"class.blink::NormalPage"*
  %30 = getelementptr inbounds i8, i8* %21, i64 4400
  %31 = bitcast i8* %30 to i8**
  %32 = bitcast i8* %30 to i64*
  %33 = load i64, i64* %32, align 16
  %34 = sub i64 %16, %33
  %35 = lshr i64 %34, 3
  %36 = lshr i64 %34, 6
  %37 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %36
  %38 = load atomic i8, i8* %37 acquire, align 1
  %39 = trunc i64 %35 to i32
  %40 = and i32 %39, 7
  %41 = shl i32 2, %40
  %42 = trunc i32 %41 to i8
  %43 = add i8 %42, -1
  %44 = and i8 %43, %38
  %45 = icmp eq i8 %44, 0
  br i1 %45, label %46, label %52

46:                                               ; preds = %27, %46
  %47 = phi i64 [ %48, %46 ], [ %36, %27 ]
  %48 = add i64 %47, -1
  %49 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %29, i64 0, i32 2, i32 0, i32 1, i64 %48
  %50 = load atomic i8, i8* %49 acquire, align 1
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %46, label %52

52:                                               ; preds = %46, %27
  %53 = phi i64 [ %36, %27 ], [ %48, %46 ]
  %54 = phi i8 [ %44, %27 ], [ %50, %46 ]
  %55 = zext i8 %54 to i32
  %56 = tail call i32 @llvm.ctlz.i32(i32 %55, i1 true) #9, !range !5
  %57 = add nsw i32 %56, -24
  %58 = shl i64 %53, 3
  %59 = or i64 %58, 7
  %60 = sext i32 %57 to i64
  %61 = sub i64 %59, %60
  %62 = shl i64 %61, 3
  %63 = load i8*, i8** %31, align 16
  %64 = getelementptr inbounds i8, i8* %63, i64 %62
  br label %65

65:                                               ; preds = %52, %25
  %66 = phi i8* [ %26, %25 ], [ %64, %52 ]
  %67 = getelementptr inbounds i8, i8* %66, i64 8
  %68 = getelementptr inbounds i8, i8* %66, i64 4
  %69 = bitcast i8* %68 to i16*
  %70 = load atomic i16, i16* %69 acquire, align 2
  %71 = lshr i16 %70, 2
  %72 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %73 = getelementptr inbounds %"class.blink::GCInfoTable", %"class.blink::GCInfoTable"* %72, i64 0, i32 0
  %74 = load %"struct.blink::GCInfo"**, %"struct.blink::GCInfo"*** %73, align 8
  %75 = zext i16 %71 to i64
  %76 = getelementptr inbounds %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %74, i64 %75
  %77 = load %"struct.blink::GCInfo"*, %"struct.blink::GCInfo"** %76, align 8
  %78 = getelementptr inbounds %"struct.blink::GCInfo", %"struct.blink::GCInfo"* %77, i64 0, i32 0
  %79 = load void (%"class.blink::Visitor"*, i8*)*, void (%"class.blink::Visitor"*, i8*)** %78, align 8
  %80 = bitcast %"class.blink::Visitor"* %1 to void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)***
  %81 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)**, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*** %80, align 8
  %82 = getelementptr inbounds void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %81, i64 5
  %83 = load void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)*, void (%"class.blink::Visitor"*, i8*, i8*, void (%"class.blink::Visitor"*, i8*)*)** %82, align 8
  tail call void %83(%"class.blink::Visitor"* %1, i8* nonnull %19, i8* %67, void (%"class.blink::Visitor"*, i8*)* %79) #9
  br label %84

84:                                               ; preds = %13, %65
  %85 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 0, i32 0
  tail call void @_ZNK5blink4Node5TraceEPNS_7VisitorE(%"class.blink::Node"* %85, %"class.blink::Visitor"* %1) #9
  %86 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 0, i32 1
  %87 = bitcast %"class.blink::ResourceClient.base"* %86 to %"class.blink::ResourceClient"*
  tail call void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"* %87, %"class.blink::Visitor"* %1) #9
  ret void
}

declare void @_ZNK5blink4Node5TraceEPNS_7VisitorE(%"class.blink::Node"*, %"class.blink::Visitor"*) unnamed_addr #1

declare void @_ZNK5blink14ResourceClient5TraceEPNS_7VisitorE(%"class.blink::ResourceClient"*, %"class.blink::Visitor"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZThn88_NK5blink21ProcessingInstruction5TraceEPNS_7VisitorE(%"class.blink::ProcessingInstruction"*, %"class.blink::Visitor"*) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"class.blink::ProcessingInstruction", %"class.blink::ProcessingInstruction"* %0, i64 -1, i32 1
  %4 = bitcast %"class.blink::ResourceClient.base"* %3 to %"class.blink::ProcessingInstruction"*
  tail call void @_ZNK5blink21ProcessingInstruction5TraceEPNS_7VisitorE(%"class.blink::ProcessingInstruction"* %4, %"class.blink::Visitor"* %1)
  ret void
}

declare i8* @_ZNK5blink15ScriptWrappable18NameInHeapSnapshotEv(%"class.blink::ScriptWrappable"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink15ScriptWrappable18HasPendingActivityEv(%"class.blink::ScriptWrappable"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget17HasEventListenersEv(%"class.blink::EventTarget"*) unnamed_addr #5 comdat align 2 {
  %2 = bitcast %"class.blink::EventTarget"* %0 to %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)***
  %3 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)**, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*** %2, align 8
  %4 = getelementptr inbounds %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %3, i64 25
  %5 = load %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)*, %"class.blink::EventTargetData"* (%"class.blink::EventTarget"*)** %4, align 8
  %6 = tail call %"class.blink::EventTargetData"* %5(%"class.blink::EventTarget"* %0) #9
  %7 = icmp eq %"class.blink::EventTargetData"* %6, null
  br i1 %7, label %12, label %8

8:                                                ; preds = %1
  %9 = getelementptr inbounds %"class.blink::EventTargetData", %"class.blink::EventTargetData"* %6, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 2
  %10 = load i32, i32* %9, align 4
  %11 = icmp ne i32 %10, 0
  br label %12

12:                                               ; preds = %1, %8
  %13 = phi i1 [ %11, %8 ], [ false, %1 ]
  ret i1 %13
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"struct.blink::WrapperTypeInfo"* @_ZNK5blink21ProcessingInstruction18GetWrapperTypeInfoEv(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 comdat align 2 {
  %2 = load %"struct.blink::WrapperTypeInfo"*, %"struct.blink::WrapperTypeInfo"** @_ZN5blink21ProcessingInstruction18wrapper_type_info_E, align 8
  ret %"struct.blink::WrapperTypeInfo"* %2
}

declare %"class.v8::Value"* @_ZN5blink15ScriptWrappable4WrapEPNS_11ScriptStateE(%"class.blink::ScriptWrappable"*, %"class.blink::ScriptState"*) unnamed_addr #1

declare %"class.v8::Object"* @_ZN5blink15ScriptWrappable20AssociateWithWrapperEPN2v87IsolateEPKNS_15WrapperTypeInfoENS1_5LocalINS1_6ObjectEEE(%"class.blink::ScriptWrappable"*, %"class.v8::Isolate"*, %"struct.blink::WrapperTypeInfo"*, %"class.v8::Object"*) unnamed_addr #1

declare dereferenceable(8) %"class.WTF::AtomicString"* @_ZNK5blink4Node13InterfaceNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::Node"* @_ZN5blink4Node6ToNodeEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::DOMWindow"* @_ZNK5blink11EventTarget11ToDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZNK5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::LocalDOMWindow"* @_ZN5blink11EventTarget16ToLocalDOMWindowEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::MessagePort"* @_ZN5blink11EventTarget13ToMessagePortEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::ServiceWorker"* @_ZN5blink11EventTarget15ToServiceWorkerEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare %"class.blink::PortalHost"* @_ZN5blink11EventTarget12ToPortalHostEv(%"class.blink::EventTarget"*) unnamed_addr #1

declare void @_ZN5blink4Node23RemoveAllEventListenersEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget15KeepEventInNodeERKNS_5EventE(%"class.blink::EventTarget"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink11EventTarget27IsWindowOrWorkerGlobalScopeEv(%"class.blink::EventTarget"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZN5blink11EventTarget24AddEventListenerInternalERKN3WTF12AtomicStringEPNS_13EventListenerEPKNS_31AddEventListenerOptionsResolvedE(%"class.blink::EventTarget"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::EventListener"*, %"class.blink::AddEventListenerOptionsResolved"*) unnamed_addr #1

declare void @_ZN5blink4Node18AddedEventListenerERKN3WTF12AtomicStringERNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare void @_ZN5blink4Node20RemovedEventListenerERKN3WTF12AtomicStringERKNS_23RegisteredEventListenerE(%"class.blink::Node"*, %"class.WTF::AtomicString"* dereferenceable(8), %"class.blink::RegisteredEventListener"* dereferenceable(16)) unnamed_addr #1

declare i32 @_ZN5blink4Node21DispatchEventInternalERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare %"class.blink::EventTargetData"* @_ZN5blink4Node18GetEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare dereferenceable(56) %"class.blink::EventTargetData"* @_ZN5blink4Node21EnsureEventTargetDataEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink13CharacterData9nodeValueEv(%"class.blink::CharacterData"*) unnamed_addr #1

declare void @_ZN5blink13CharacterData12setNodeValueERKN3WTF6StringE(%"class.blink::CharacterData"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node14setTextContentERKN3WTF6StringE(%"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8)) unnamed_addr #1

declare void @_ZN5blink4Node24setTextContentForBindingEPKNS_28V8UnionStringOrTrustedScriptERNS_14ExceptionStateE(%"class.blink::Node"*, %"class.blink::V8UnionStringOrTrustedScript"*, %"class.blink::ExceptionState"* dereferenceable(72)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i8 @_ZNK5blink4Node11GetPseudoIdEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i8 0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node21IsMediaControlElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsMediaControlsEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node14IsMediaElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node20IsTextTrackContainerEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node12IsVTTElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node15IsAttributeNodeEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink13CharacterData19IsCharacterDataNodeEv(%"class.blink::CharacterData"*) unnamed_addr #0 comdat align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node19IsFrameOwnerElementEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node27IsMediaRemotingInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node30IsPictureInPictureInterstitialEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node23CanContainRangeEndPointEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node43NotifyLoadedSheetAndAllCriticalSubresourcesENS0_22LoadedSheetErrorStatusE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24StartLoadingDynamicSheetEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node10SetFocusedEbNS_5mojom9FocusTypeE(%"class.blink::Node"*, i1 zeroext, i32) unnamed_addr #1

declare void @_ZN5blink4Node10SetDraggedEb(%"class.blink::Node"*, i1 zeroext) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node25ShouldHaveFocusAppearanceEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZNK5blink4Node11BoundingBoxEv() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink4Node16ChildTypeAllowedENS0_8NodeTypeE(%"class.blink::Node"*, i32) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

declare zeroext i1 @_ZNK5blink4Node17CanStartSelectionEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node16AttachLayoutTreeERNS0_13AttachContextE(%"class.blink::Node"*, %"struct.blink::Node::AttachContext"* dereferenceable(32)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink21ProcessingInstruction16DetachLayoutTreeEb(%"class.blink::ProcessingInstruction"*, i1 zeroext) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node36DidNotifySubtreeInsertionsToDocumentEv(%"class.blink::Node"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare zeroext i1 @_ZN5blink4Node28WillRespondToMouseMoveEventsEv(%"class.blink::Node"*) unnamed_addr #1

declare zeroext i1 @_ZN5blink4Node29WillRespondToMouseClickEventsEv(%"class.blink::Node"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::EventDispatchHandlingState"* @_ZN5blink4Node23PreDispatchEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #0 comdat align 2 {
  ret %"class.blink::EventDispatchHandlingState"* null
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink4Node24PostDispatchEventHandlerERNS_5EventEPNS_26EventDispatchHandlingStateE(%"class.blink::Node"*, %"class.blink::Event"*, %"class.blink::EventDispatchHandlingState"*) unnamed_addr #0 comdat align 2 {
  ret void
}

declare void @_ZN5blink4Node17HandleLocalEventsERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare void @_ZN5blink4Node19DefaultEventHandlerERNS_5EventE(%"class.blink::Node"*, %"class.blink::Event"*) unnamed_addr #1

declare zeroext i1 @_ZNK5blink4Node21HasActivationBehaviorEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::LayoutBox"* @_ZN5blink4Node13AutoscrollBoxEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node14StopAutoscrollEv(%"class.blink::Node"*) unnamed_addr #1

declare void @_ZN5blink4Node20DidMoveToNewDocumentERNS_8DocumentE(%"class.blink::Node"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZNK5blink4Node13DebugNodeNameEv(%"class.blink::Node"*) unnamed_addr #1

declare %"class.blink::ComputedStyle"* @_ZN5blink4Node26VirtualEnsureComputedStyleENS_8PseudoIdERKN3WTF12AtomicStringE(%"class.blink::Node"*, i8 zeroext, %"class.WTF::AtomicString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZNK5blink21ProcessingInstruction9DebugNameEv(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i64 21) #9
  %3 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  ret %"class.WTF::StringImpl"* %4
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink14ResourceClient12DataReceivedEPNS_8ResourceEPKcm(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, i8*, i64) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient20IsFontResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14ResourceClient19IsRawResourceClientEv(%"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  ret i1 false
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.WTF::StringImpl"* @_ZThn88_NK5blink21ProcessingInstruction9DebugNameEv(%"class.blink::ProcessingInstruction"*) unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.WTF::String", align 8
  %3 = bitcast %"class.WTF::String"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %3)
  call void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"* nonnull %2, i8* getelementptr inbounds ([22 x i8], [22 x i8]* @.str.17, i64 0, i64 0), i64 21) #9
  %4 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %2, i64 0, i32 0, i32 0
  %5 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %4, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %3)
  ret %"class.WTF::StringImpl"* %5
}

declare void @_ZN5blink4NodeC2EPNS_9TreeScopeENS0_16ConstructionTypeE(%"class.blink::Node"*, %"class.blink::TreeScope"*, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink11ThreadState24PrefinalizerRegistrationINS_14ResourceClientEEC2EPS2_(%"class.blink::ThreadState::PrefinalizerRegistration"*, %"class.blink::ResourceClient"*) unnamed_addr #0 comdat align 2 {
  %3 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %4 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %5 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %4, i64 0, i32 1
  %6 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %5) #9
  %7 = icmp eq i8* %6, null
  br i1 %7, label %8, label %10, !prof !2

8:                                                ; preds = %2
  %9 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %5, i8* %9) #9
  br label %10

10:                                               ; preds = %2, %8
  %11 = phi i8* [ %9, %8 ], [ %6, %2 ]
  %12 = bitcast i8* %11 to %"class.blink::ThreadState"**
  %13 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %12, align 8
  %14 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19
  %15 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = icmp eq i32 %16, 0
  %18 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 2
  %19 = load i32, i32* %18, align 4
  br i1 %17, label %23, label %20

20:                                               ; preds = %10
  %21 = add i32 %19, 1
  %22 = icmp eq i32 %21, %16
  br i1 %22, label %32, label %34

23:                                               ; preds = %10
  %24 = icmp eq i32 %19, 0
  %25 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %26 = load i32, i32* %25, align 8
  br i1 %24, label %30, label %27

27:                                               ; preds = %23
  %28 = add i32 %26, -1
  %29 = icmp eq i32 %19, %28
  br i1 %29, label %32, label %34

30:                                               ; preds = %23
  %31 = icmp eq i32 %26, 0
  br i1 %31, label %32, label %34

32:                                               ; preds = %30, %27, %20
  tail call void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"* %14) #9
  %33 = load i32, i32* %18, align 4
  br label %34

34:                                               ; preds = %20, %27, %30, %32
  %35 = phi i32 [ %19, %20 ], [ %19, %27 ], [ 0, %30 ], [ %33, %32 ]
  %36 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %14, i64 0, i32 0, i32 0, i32 0, i32 0
  %37 = load %"struct.std::__1::pair.330"*, %"struct.std::__1::pair.330"** %36, align 8
  %38 = zext i32 %35 to i64
  %39 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %37, i64 %38
  %40 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %13, i64 0, i32 19, i32 0, i32 0, i32 0, i32 1
  %41 = load i32, i32* %40, align 8
  %42 = add i32 %41, -1
  %43 = icmp eq i32 %35, %42
  %44 = add i32 %35, 1
  %45 = select i1 %43, i32 0, i32 %44
  store i32 %45, i32* %18, align 4
  %46 = bitcast %"struct.std::__1::pair.330"* %39 to i64*
  store i64 %3, i64* %46, align 8
  %47 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %37, i64 %38, i32 1
  store i1 (%"class.blink::LivenessBroker"*, i8*)* @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv, i1 (%"class.blink::LivenessBroker"*, i8*)** %47, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN5blink14ResourceClient18InvokePreFinalizerERKNS_14LivenessBrokerEPv(%"class.blink::LivenessBroker"* dereferenceable(1), i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ResourceClient"*
  %4 = tail call zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"* %0, %"class.blink::ResourceClient"* %3)
  br i1 %4, label %6, label %5

5:                                                ; preds = %2
  tail call void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"* %3, %"class.blink::Resource"* null, %"class.base::SingleThreadTaskRunner"* null) #9
  br label %6

6:                                                ; preds = %2, %5
  %7 = phi i1 [ true, %5 ], [ false, %2 ]
  ret i1 %7
}

declare i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64, i8*) local_unnamed_addr #1

declare i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"*) local_unnamed_addr #1

declare void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"*, i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF5DequeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEELj0ENS_18PartitionAllocatorEE14ExpandCapacityEv(%"class.WTF::Deque"*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 1
  %3 = load i32, i32* %2, align 8
  %4 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %5 = load %"struct.std::__1::pair.330"*, %"struct.std::__1::pair.330"** %4, align 8
  %6 = lshr i32 %3, 2
  %7 = add i32 %3, 1
  %8 = add i32 %7, %6
  %9 = icmp ugt i32 %8, 16
  %10 = select i1 %9, i32 %8, i32 16
  %11 = zext i32 %10 to i64
  %12 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #9
  %13 = tail call i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64 %11) #9
  %14 = tail call i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64 %13, i8* getelementptr inbounds ([119 x i8], [119 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES3_EEEEEPKcv, i64 0, i64 0)) #9
  %15 = ptrtoint i8* %14 to i64
  %16 = bitcast %"class.WTF::Deque"* %0 to i64*
  store atomic i64 %15, i64* %16 monotonic, align 8
  %17 = lshr i64 %13, 4
  %18 = trunc i64 %17 to i32
  store i32 %18, i32* %2, align 8
  %19 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 1
  %20 = load i32, i32* %19, align 8
  %21 = getelementptr inbounds %"class.WTF::Deque", %"class.WTF::Deque"* %0, i64 0, i32 2
  %22 = load i32, i32* %21, align 4
  %23 = icmp ugt i32 %20, %22
  %24 = bitcast i8* %14 to %"struct.std::__1::pair.330"*
  br i1 %23, label %40, label %25

25:                                               ; preds = %1
  %26 = zext i32 %20 to i64
  %27 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %5, i64 %26
  %28 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %24, i64 %26
  %29 = icmp ne %"struct.std::__1::pair.330"* %28, null
  %30 = icmp ne %"struct.std::__1::pair.330"* %27, null
  %31 = and i1 %30, %29
  br i1 %31, label %32, label %73, !prof !4

32:                                               ; preds = %25
  %33 = zext i32 %22 to i64
  %34 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %5, i64 %33
  %35 = bitcast %"struct.std::__1::pair.330"* %27 to i8*
  %36 = ptrtoint %"struct.std::__1::pair.330"* %34 to i64
  %37 = ptrtoint %"struct.std::__1::pair.330"* %27 to i64
  %38 = sub i64 %36, %37
  %39 = bitcast %"struct.std::__1::pair.330"* %28 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %39, i8* nonnull align 8 %35, i64 %38, i1 false) #9
  br label %73

40:                                               ; preds = %1
  %41 = icmp ne i8* %14, null
  %42 = icmp ne %"struct.std::__1::pair.330"* %5, null
  %43 = and i1 %42, %41
  br i1 %43, label %44, label %51, !prof !4

44:                                               ; preds = %40
  %45 = zext i32 %22 to i64
  %46 = bitcast %"struct.std::__1::pair.330"* %5 to i8*
  %47 = shl nuw nsw i64 %45, 4
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* nonnull align 8 %46, i64 %47, i1 false) #9
  %48 = load i32, i32* %2, align 8
  %49 = load i32, i32* %19, align 8
  %50 = load %"struct.std::__1::pair.330"*, %"struct.std::__1::pair.330"** %4, align 8
  br label %51

51:                                               ; preds = %40, %44
  %52 = phi %"struct.std::__1::pair.330"* [ %24, %40 ], [ %50, %44 ]
  %53 = phi i32 [ %20, %40 ], [ %49, %44 ]
  %54 = phi i32 [ %18, %40 ], [ %48, %44 ]
  %55 = sub i32 %53, %3
  %56 = add i32 %55, %54
  %57 = zext i32 %53 to i64
  %58 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %5, i64 %57
  %59 = zext i32 %56 to i64
  %60 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %52, i64 %59
  %61 = icmp ne %"struct.std::__1::pair.330"* %60, null
  %62 = icmp ne %"struct.std::__1::pair.330"* %58, null
  %63 = and i1 %62, %61
  br i1 %63, label %64, label %72, !prof !4

64:                                               ; preds = %51
  %65 = zext i32 %3 to i64
  %66 = getelementptr inbounds %"struct.std::__1::pair.330", %"struct.std::__1::pair.330"* %5, i64 %65
  %67 = bitcast %"struct.std::__1::pair.330"* %58 to i8*
  %68 = ptrtoint %"struct.std::__1::pair.330"* %66 to i64
  %69 = ptrtoint %"struct.std::__1::pair.330"* %58 to i64
  %70 = sub i64 %68, %69
  %71 = bitcast %"struct.std::__1::pair.330"* %60 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %71, i8* nonnull align 8 %67, i64 %70, i1 false) #9
  br label %72

72:                                               ; preds = %51, %64
  store i32 %56, i32* %19, align 8
  br label %73

73:                                               ; preds = %32, %25, %72
  %74 = bitcast %"struct.std::__1::pair.330"* %5 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %74) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i64 @_ZN3WTF18PartitionAllocator13QuantizedSizeINSt3__14pairIPvPFbRKN5blink14LivenessBrokerES4_EEEEEmm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = alloca %"class.logging::CheckOpResult", align 8
  %3 = alloca %"class.logging::CheckOpResult", align 8
  %4 = alloca %"class.logging::CheckError", align 8
  %5 = bitcast %"class.logging::CheckOpResult"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #9
  %6 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %3, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %6, align 8
  %7 = bitcast %"class.logging::CheckOpResult"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %7)
  %8 = icmp ugt i64 %0, 134086656
  br i1 %8, label %10, label %9

9:                                                ; preds = %1
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* null, i8** %6, align 8
  br label %19

10:                                               ; preds = %1
  %11 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %0) #9
  %12 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 134086656) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %2, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str.15, i64 0, i64 0), i8* %11, i8* %12) #9
  %13 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %2, i64 0, i32 0
  %14 = load i8*, i8** %13, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %7)
  store i8* %14, i8** %6, align 8
  %15 = icmp eq i8* %14, null
  br i1 %15, label %19, label %16

16:                                               ; preds = %10
  %17 = bitcast %"class.logging::CheckError"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %17) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %4, i8* getelementptr inbounds ([78 x i8], [78 x i8]* @.str.16, i64 0, i64 0), i32 31, %"class.logging::CheckOpResult"* nonnull %3) #9
  %18 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %4) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %4) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %17) #9
  br label %19

19:                                               ; preds = %9, %10, %16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #9
  %20 = shl i64 %0, 4
  %21 = call i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64 %20) #9
  ret i64 %21
}

declare void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* sret, i8*, i32, %"class.logging::CheckOpResult"*) local_unnamed_addr #1

declare dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"*) unnamed_addr #4

declare i64 @_ZN3WTF10Partitions23BufferPotentialCapacityEm(i64) local_unnamed_addr #1

declare i8* @_ZN7logging15CheckOpValueStrEm(i64) local_unnamed_addr #1

declare void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"*, i8*, i8*, i8*) unnamed_addr #1

declare i8* @_ZN3WTF18PartitionAllocator15AllocateBackingEmPKc(i64, i8*) local_unnamed_addr #1

declare void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZNK5blink14LivenessBroker17IsHeapObjectAliveINS_14ResourceClientEEEbPKT_(%"class.blink::LivenessBroker"*, %"class.blink::ResourceClient"*) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq %"class.blink::ResourceClient"* %1, null
  br i1 %3, label %73, label %4

4:                                                ; preds = %2
  %5 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %6 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %5, i64 0, i32 1
  %7 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %6) #9
  %8 = icmp eq i8* %7, null
  br i1 %8, label %9, label %11, !prof !2

9:                                                ; preds = %4
  %10 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %6, i8* %10) #9
  br label %11

11:                                               ; preds = %4, %9
  %12 = phi i8* [ %10, %9 ], [ %7, %4 ]
  %13 = bitcast i8* %12 to %"class.blink::ThreadState"**
  %14 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %13, align 8
  %15 = icmp eq %"class.blink::ThreadState"* %14, null
  br i1 %15, label %73, label %16

16:                                               ; preds = %11
  %17 = ptrtoint %"class.blink::ResourceClient"* %1 to i64
  %18 = and i64 %17, -131072
  %19 = inttoptr i64 %18 to i8*
  %20 = getelementptr inbounds i8, i8* %19, i64 4138
  %21 = load i8, i8* %20, align 2
  %22 = icmp eq i8 %21, 1
  br i1 %22, label %23, label %25

23:                                               ; preds = %16
  %24 = getelementptr inbounds i8, i8* %19, i64 4160
  br label %63

25:                                               ; preds = %16
  %26 = getelementptr inbounds i8, i8* %19, i64 4096
  %27 = bitcast i8* %26 to %"class.blink::NormalPage"*
  %28 = getelementptr inbounds i8, i8* %19, i64 4400
  %29 = bitcast i8* %28 to i8**
  %30 = bitcast i8* %28 to i64*
  %31 = load i64, i64* %30, align 16
  %32 = sub i64 %17, %31
  %33 = lshr i64 %32, 3
  %34 = lshr i64 %32, 6
  %35 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %34
  %36 = load atomic i8, i8* %35 acquire, align 1
  %37 = trunc i64 %33 to i32
  %38 = and i32 %37, 7
  %39 = shl i32 2, %38
  %40 = trunc i32 %39 to i8
  %41 = add i8 %40, -1
  %42 = and i8 %41, %36
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %44, label %50

44:                                               ; preds = %25, %44
  %45 = phi i64 [ %46, %44 ], [ %34, %25 ]
  %46 = add i64 %45, -1
  %47 = getelementptr inbounds %"class.blink::NormalPage", %"class.blink::NormalPage"* %27, i64 0, i32 2, i32 0, i32 1, i64 %46
  %48 = load atomic i8, i8* %47 acquire, align 1
  %49 = icmp eq i8 %48, 0
  br i1 %49, label %44, label %50

50:                                               ; preds = %44, %25
  %51 = phi i64 [ %34, %25 ], [ %46, %44 ]
  %52 = phi i8 [ %42, %25 ], [ %48, %44 ]
  %53 = zext i8 %52 to i32
  %54 = tail call i32 @llvm.ctlz.i32(i32 %53, i1 true) #9, !range !5
  %55 = add nsw i32 %54, -24
  %56 = shl i64 %51, 3
  %57 = or i64 %56, 7
  %58 = sext i32 %55 to i64
  %59 = sub i64 %57, %58
  %60 = shl i64 %59, 3
  %61 = load i8*, i8** %29, align 16
  %62 = getelementptr inbounds i8, i8* %61, i64 %60
  br label %63

63:                                               ; preds = %23, %50
  %64 = phi i8* [ %24, %23 ], [ %62, %50 ]
  %65 = getelementptr inbounds i8, i8* %64, i64 4
  %66 = bitcast i8* %65 to i16*
  %67 = load atomic i16, i16* %66 acquire, align 2
  %68 = getelementptr inbounds i8, i8* %64, i64 6
  %69 = bitcast i8* %68 to i16*
  %70 = load i16, i16* %69, align 2
  %71 = and i16 %70, 1
  %72 = icmp ne i16 %71, 0
  br label %73

73:                                               ; preds = %11, %2, %63
  %74 = phi i1 [ %72, %63 ], [ true, %2 ], [ true, %11 ]
  ret i1 %74
}

; Function Attrs: nounwind readnone speculatable
declare i32 @llvm.ctlz.i32(i32, i1 immarg) #6

; Function Attrs: nounwind readnone speculatable
declare { i33, i1 } @llvm.sadd.with.overflow.i33(i33, i33) #6

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #7

declare void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink14ParkableStringD1Ev(%"class.blink::ParkableString"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @_ZN5blink4NodeD2Ev(%"class.blink::Node"*) unnamed_addr #4

declare void @_ZN3WTF6StringC2EPKcm(%"class.WTF::String"*, i8*, i64) unnamed_addr #1

declare zeroext i1 @_ZN3WTF15EqualStringViewERKNS_10StringViewES2_(%"class.WTF::StringView"* dereferenceable(24), %"class.WTF::StringView"* dereferenceable(24)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE29DeleteAllBucketsAndDeallocateEPS3_j(%"struct.WTF::KeyValuePair.1415"*, i32) local_unnamed_addr #0 comdat align 2 {
  %3 = icmp eq i32 %1, 0
  br i1 %3, label %6, label %4

4:                                                ; preds = %2
  %5 = zext i32 %1 to i64
  br label %8

6:                                                ; preds = %48, %2
  %7 = bitcast %"struct.WTF::KeyValuePair.1415"* %0 to i8*
  tail call void @_ZN3WTF18PartitionAllocator11FreeBackingEPv(i8* %7) #9
  ret void

8:                                                ; preds = %48, %4
  %9 = phi i64 [ 0, %4 ], [ %49, %48 ]
  %10 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %0, i64 %9
  %11 = bitcast %"struct.WTF::KeyValuePair.1415"* %10 to i8**
  %12 = load i8*, i8** %11, align 8
  %13 = icmp eq i8* %12, inttoptr (i64 -1 to i8*)
  br i1 %13, label %48, label %14

14:                                               ; preds = %8
  %15 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %0, i64 %9, i32 1, i32 0, i32 0
  %16 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %15, align 8
  %17 = icmp eq %"class.WTF::StringImpl"* %16, null
  br i1 %17, label %31, label %18

18:                                               ; preds = %14
  %19 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %20 = load atomic i32, i32* %19 monotonic, align 4
  %21 = and i32 %20, 2
  %22 = icmp eq i32 %21, 0
  %23 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %16, i64 0, i32 0
  %24 = load i32, i32* %23, align 4
  br i1 %22, label %25, label %27

25:                                               ; preds = %18
  %26 = add i32 %24, -1
  store i32 %26, i32* %23, align 4
  br label %27

27:                                               ; preds = %25, %18
  %28 = phi i32 [ %26, %25 ], [ %24, %18 ]
  %29 = icmp eq i32 %28, 0
  br i1 %29, label %30, label %31

30:                                               ; preds = %27
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %16) #9
  br label %31

31:                                               ; preds = %30, %27, %14
  %32 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %10, i64 0, i32 0, i32 0, i32 0
  %33 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %32, align 8
  %34 = icmp eq %"class.WTF::StringImpl"* %33, null
  br i1 %34, label %48, label %35

35:                                               ; preds = %31
  %36 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %37 = load atomic i32, i32* %36 monotonic, align 4
  %38 = and i32 %37, 2
  %39 = icmp eq i32 %38, 0
  %40 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %33, i64 0, i32 0
  %41 = load i32, i32* %40, align 4
  br i1 %39, label %42, label %44

42:                                               ; preds = %35
  %43 = add i32 %41, -1
  store i32 %43, i32* %40, align 4
  br label %44

44:                                               ; preds = %42, %35
  %45 = phi i32 [ %43, %42 ], [ %41, %35 ]
  %46 = icmp eq i32 %45, 0
  br i1 %46, label %47, label %48

47:                                               ; preds = %44
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %33) #9
  br label %48

48:                                               ; preds = %47, %44, %31, %8
  %49 = add nuw nsw i64 %9, 1
  %50 = icmp eq i64 %49, %5
  br i1 %50, label %6, label %8
}

declare void @_ZN5blink14ResourceClient11SetResourceEPNS_8ResourceEPN4base22SingleThreadTaskRunnerE(%"class.blink::ResourceClient"*, %"class.blink::Resource"*, %"class.base::SingleThreadTaskRunner"*) local_unnamed_addr #1

declare void @_ZN5blink26TextResourceDecoderOptionsC1ENS0_11ContentTypeERKN3WTF12TextEncodingE(%"class.blink::TextResourceDecoderOptions"*, i32, %"class.WTF::TextEncoding"* dereferenceable(8)) unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZN5blink4KURLaSERKS0_(%"class.blink::KURL"*, %"class.blink::KURL"* dereferenceable(112)) local_unnamed_addr #1

declare dereferenceable(112) %"class.blink::KURL"* @_ZNK5blink19ResourceRequestHead3UrlEv(%"class.blink::ResourceRequestHead"*) local_unnamed_addr #1

declare %"class.WTF::StringImpl"* @_ZN3WTF12AtomicString11AddSlowCaseEPNS_10StringImplE(%"class.WTF::StringImpl"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.blink::ProcessingInstruction"* @_ZN5blink25MakeGarbageCollectedTraitINS_21ProcessingInstructionEE4CallIJRNS_8DocumentERKN3WTF6StringES9_EEEPS1_DpOT_(%"class.blink::Document"* dereferenceable(2848), %"class.WTF::String"* dereferenceable(8), %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** bitcast ([0 x i8]* @_ZN5blink11ThreadState26main_thread_state_storage_E to %"class.blink::ThreadHeap"**), align 8
  %5 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %6 = icmp eq i32 %5, 0
  br i1 %6, label %7, label %10

7:                                                ; preds = %3
  %8 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %9 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %8, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %10

10:                                               ; preds = %3, %7
  %11 = phi i32 [ %5, %3 ], [ %9, %7 ]
  %12 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %4, i64 0, i32 19, i64 6
  %13 = bitcast %"class.blink::BaseArena"** %12 to %"class.blink::NormalPageArena"**
  %14 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %13, align 8
  %15 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %14, i64 0, i32 4
  %16 = load i64, i64* %15, align 8
  %17 = icmp ult i64 %16, 184
  br i1 %17, label %48, label %18, !prof !2

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %14, i64 0, i32 3
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 184
  store i8* %21, i8** %19, align 8
  %22 = add i64 %16, -184
  store i64 %22, i64* %15, align 8
  %23 = bitcast i8* %20 to i32*
  store i32 0, i32* %23, align 4
  %24 = getelementptr inbounds i8, i8* %20, i64 4
  %25 = bitcast i8* %24 to i16*
  %26 = trunc i32 %11 to i16
  %27 = shl i16 %26, 2
  store atomic i16 %27, i16* %25 monotonic, align 2
  %28 = getelementptr inbounds i8, i8* %20, i64 6
  %29 = bitcast i8* %28 to i16*
  store i16 92, i16* %29, align 2
  %30 = ptrtoint i8* %20 to i64
  %31 = and i64 %30, -131072
  %32 = inttoptr i64 %31 to i8*
  %33 = getelementptr inbounds i8, i8* %32, i64 4400
  %34 = bitcast i8* %33 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %35 = bitcast i8* %33 to i64*
  %36 = load i64, i64* %35, align 16
  %37 = sub i64 %30, %36
  %38 = lshr i64 %37, 3
  %39 = lshr i64 %37, 6
  %40 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %34, i64 0, i32 0, i32 1, i64 %39
  %41 = load i8, i8* %40, align 1
  %42 = trunc i64 %38 to i32
  %43 = and i32 %42, 7
  %44 = shl i32 1, %43
  %45 = trunc i32 %44 to i8
  %46 = or i8 %41, %45
  store atomic i8 %46, i8* %40 release, align 1
  %47 = getelementptr inbounds i8, i8* %20, i64 8
  br label %51

48:                                               ; preds = %10
  %49 = zext i32 %11 to i64
  %50 = tail call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %14, i64 184, i64 %49) #9
  br label %51

51:                                               ; preds = %18, %48
  %52 = phi i8* [ %47, %18 ], [ %50, %48 ]
  %53 = bitcast i8* %52 to %"class.blink::ProcessingInstruction"*
  tail call void @_ZN5blink21ProcessingInstructionC2ERNS_8DocumentERKN3WTF6StringES6_(%"class.blink::ProcessingInstruction"* %53, %"class.blink::Document"* dereferenceable(2848) %0, %"class.WTF::String"* dereferenceable(8) %1, %"class.WTF::String"* dereferenceable(8) %2)
  %54 = getelementptr inbounds i8, i8* %52, i64 -4
  %55 = bitcast i8* %54 to i16*
  %56 = load atomic i16, i16* %55 monotonic, align 2
  %57 = or i16 %56, 1
  store atomic i16 %57, i16* %55 release, align 2
  ret %"class.blink::ProcessingInstruction"* %53
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"*, %"class.blink::ThreadState"*, i64, i32, i32, i8*) local_unnamed_addr #5 comdat align 2 {
  %7 = alloca %"class.logging::CheckOpResult", align 8
  %8 = alloca %"class.logging::CheckOpResult", align 8
  %9 = alloca %"class.logging::CheckError", align 8
  %10 = sext i32 %3 to i64
  %11 = getelementptr inbounds %"class.blink::ThreadHeap", %"class.blink::ThreadHeap"* %0, i64 0, i32 19, i64 %10
  %12 = bitcast %"class.blink::BaseArena"** %11 to %"class.blink::NormalPageArena"**
  %13 = load %"class.blink::NormalPageArena"*, %"class.blink::NormalPageArena"** %12, align 8
  %14 = bitcast %"class.logging::CheckOpResult"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %14) #9
  %15 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %8, i64 0, i32 0
  store i8* inttoptr (i64 -6148914691236517206 to i8*), i8** %15, align 8
  %16 = bitcast %"class.logging::CheckOpResult"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %16) #9
  %17 = icmp ult i64 %2, -8
  br i1 %17, label %18, label %19

18:                                               ; preds = %6
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* null, i8** %15, align 8
  br label %29

19:                                               ; preds = %6
  %20 = add nsw i64 %2, 8
  %21 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %20) #9
  %22 = tail call i8* @_ZN7logging15CheckOpValueStrEm(i64 %2) #9
  call void @_ZN7logging13CheckOpResultC1EPKcPcS3_(%"class.logging::CheckOpResult"* nonnull %7, i8* getelementptr inbounds ([23 x i8], [23 x i8]* @.str.19, i64 0, i64 0), i8* %21, i8* %22) #9
  %23 = getelementptr inbounds %"class.logging::CheckOpResult", %"class.logging::CheckOpResult"* %7, i64 0, i32 0
  %24 = load i8*, i8** %23, align 8
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %16) #9
  store i8* %24, i8** %15, align 8
  %25 = icmp eq i8* %24, null
  br i1 %25, label %29, label %26

26:                                               ; preds = %19
  %27 = bitcast %"class.logging::CheckError"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #9
  call void @_ZN7logging10CheckError7CheckOpEPKciPNS_13CheckOpResultE(%"class.logging::CheckError"* nonnull sret %9, i8* getelementptr inbounds ([59 x i8], [59 x i8]* @.str.20, i64 0, i64 0), i32 246, %"class.logging::CheckOpResult"* nonnull %8) #9
  %28 = call dereferenceable(160) %"class.std::__1::basic_ostream"* @_ZN7logging10CheckError6streamEv(%"class.logging::CheckError"* nonnull %9) #9
  call void @_ZN7logging10CheckErrorD1Ev(%"class.logging::CheckError"* nonnull %9) #9
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #9
  br label %29

29:                                               ; preds = %18, %19, %26
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %14) #9
  %30 = add i64 %2, 15
  %31 = and i64 %30, -8
  %32 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 4
  %33 = load i64, i64* %32, align 8
  %34 = icmp ult i64 %33, %31
  br i1 %34, label %67, label %35, !prof !2

35:                                               ; preds = %29
  %36 = getelementptr inbounds %"class.blink::NormalPageArena", %"class.blink::NormalPageArena"* %13, i64 0, i32 3
  %37 = load i8*, i8** %36, align 8
  %38 = getelementptr inbounds i8, i8* %37, i64 %31
  store i8* %38, i8** %36, align 8
  %39 = sub i64 %33, %31
  store i64 %39, i64* %32, align 8
  %40 = bitcast i8* %37 to i32*
  store i32 0, i32* %40, align 4
  %41 = getelementptr inbounds i8, i8* %37, i64 4
  %42 = bitcast i8* %41 to i16*
  %43 = trunc i32 %4 to i16
  %44 = shl i16 %43, 2
  store atomic i16 %44, i16* %42 monotonic, align 2
  %45 = lshr exact i64 %31, 1
  %46 = trunc i64 %45 to i16
  %47 = getelementptr inbounds i8, i8* %37, i64 6
  %48 = bitcast i8* %47 to i16*
  store i16 %46, i16* %48, align 2
  %49 = ptrtoint i8* %37 to i64
  %50 = and i64 %49, -131072
  %51 = inttoptr i64 %50 to i8*
  %52 = getelementptr inbounds i8, i8* %51, i64 4400
  %53 = bitcast i8* %52 to %"class.blink::PlatformAwareObjectStartBitmap"*
  %54 = bitcast i8* %52 to i64*
  %55 = load i64, i64* %54, align 16
  %56 = sub i64 %49, %55
  %57 = lshr i64 %56, 3
  %58 = lshr i64 %56, 6
  %59 = getelementptr inbounds %"class.blink::PlatformAwareObjectStartBitmap", %"class.blink::PlatformAwareObjectStartBitmap"* %53, i64 0, i32 0, i32 1, i64 %58
  %60 = load i8, i8* %59, align 1
  %61 = trunc i64 %57 to i32
  %62 = and i32 %61, 7
  %63 = shl i32 1, %62
  %64 = trunc i32 %63 to i8
  %65 = or i8 %60, %64
  store atomic i8 %65, i8* %59 release, align 1
  %66 = getelementptr inbounds i8, i8* %37, i64 8
  br label %70

67:                                               ; preds = %29
  %68 = zext i32 %4 to i64
  %69 = call i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"* %13, i64 %31, i64 %68) #9
  br label %70

70:                                               ; preds = %35, %67
  %71 = phi i8* [ %66, %35 ], [ %69, %67 ]
  ret i8* %71
}

declare i8* @_ZN5blink15NormalPageArena17OutOfLineAllocateEmm(%"class.blink::NormalPageArena"*, i64, i64) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_15ScriptWrappableEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_15ScriptWrappableEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::ScriptWrappable"*
  %3 = bitcast i8* %0 to void (%"class.blink::ScriptWrappable"*)***
  %4 = load void (%"class.blink::ScriptWrappable"*)**, void (%"class.blink::ScriptWrappable"*)*** %3, align 8
  %5 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %4, i64 1
  %6 = load void (%"class.blink::ScriptWrappable"*)*, void (%"class.blink::ScriptWrappable"*)** %5, align 8
  tail call void %6(%"class.blink::ScriptWrappable"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_15ScriptWrappableEE7GetNameEPKv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::NameClient"*
  %3 = bitcast i8* %0 to i8* (%"class.blink::NameClient"*)***
  %4 = load i8* (%"class.blink::NameClient"*)**, i8* (%"class.blink::NameClient"*)*** %3, align 8
  %5 = load i8* (%"class.blink::NameClient"*)*, i8* (%"class.blink::NameClient"*)** %4, align 8
  %6 = tail call i8* %5(%"class.blink::NameClient"* %2) #9
  %7 = insertvalue { i8*, i8 } undef, i8* %6, 0
  %8 = insertvalue { i8*, i8 } %7, i8 0, 1
  ret { i8*, i8 } %8
}

declare i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"*, %"struct.blink::GCInfo"*, %"struct.std::__1::atomic"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"* } @_ZNK3WTF9HashTableINS_6StringENS_12KeyValuePairIS1_S1_EENS_24KeyValuePairKeyExtractorENS_10StringHashENS_18HashMapValueTraitsINS_10HashTraitsIS1_EES8_EES8_NS_18PartitionAllocatorEE4findERKS1_(%"class.WTF::HashTable.1412"*, %"class.WTF::String"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.WTF::HashTable.1412", %"class.WTF::HashTable.1412"* %0, i64 0, i32 0
  %4 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %3, align 8
  %5 = icmp eq %"struct.WTF::KeyValuePair.1415"* %4, null
  br i1 %5, label %63, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.WTF::HashTable.1412", %"class.WTF::HashTable.1412"* %0, i64 0, i32 1
  %8 = load i32, i32* %7, align 8
  %9 = add i32 %8, -1
  %10 = zext i32 %9 to i64
  %11 = getelementptr inbounds %"class.WTF::String", %"class.WTF::String"* %1, i64 0, i32 0, i32 0
  %12 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %13 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %12, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load atomic i32, i32* %13 monotonic, align 4
  %15 = lshr i32 %14, 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %19

17:                                               ; preds = %6
  %18 = tail call i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"* %12) #9
  br label %19

19:                                               ; preds = %17, %6
  %20 = phi i32 [ %18, %17 ], [ %15, %6 ]
  %21 = and i32 %20, %9
  %22 = zext i32 %21 to i64
  %23 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %4, i64 %22
  %24 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %23, i64 0, i32 0, i32 0, i32 0
  %25 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %24, align 8
  %26 = icmp eq %"class.WTF::StringImpl"* %25, null
  br i1 %26, label %63, label %27

27:                                               ; preds = %19
  %28 = xor i32 %20, -1
  %29 = lshr i32 %20, 23
  %30 = add i32 %29, %28
  %31 = shl i32 %30, 12
  %32 = xor i32 %31, %30
  %33 = lshr i32 %32, 7
  %34 = xor i32 %33, %32
  %35 = shl i32 %34, 2
  %36 = xor i32 %35, %34
  %37 = lshr i32 %36, 20
  %38 = xor i32 %37, %36
  %39 = or i32 %38, 1
  %40 = zext i32 %39 to i64
  br label %41

41:                                               ; preds = %52, %27
  %42 = phi %"struct.WTF::KeyValuePair.1415"* [ %23, %27 ], [ %57, %52 ]
  %43 = phi i64 [ %22, %27 ], [ %56, %52 ]
  %44 = phi i64 [ 0, %27 ], [ %54, %52 ]
  %45 = bitcast %"struct.WTF::KeyValuePair.1415"* %42 to i8**
  %46 = load i8*, i8** %45, align 8
  %47 = icmp eq i8* %46, inttoptr (i64 -1 to i8*)
  br i1 %47, label %52, label %48

48:                                               ; preds = %41
  %49 = bitcast i8* %46 to %"class.WTF::StringImpl"*
  %50 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %11, align 8
  %51 = tail call zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"* %49, %"class.WTF::StringImpl"* %50) #9
  br i1 %51, label %61, label %52

52:                                               ; preds = %48, %41
  %53 = icmp eq i64 %44, 0
  %54 = select i1 %53, i64 %40, i64 %44
  %55 = add i64 %54, %43
  %56 = and i64 %55, %10
  %57 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %4, i64 %56
  %58 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %57, i64 0, i32 0, i32 0, i32 0
  %59 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %58, align 8
  %60 = icmp eq %"class.WTF::StringImpl"* %59, null
  br i1 %60, label %63, label %41

61:                                               ; preds = %48
  %62 = icmp eq %"struct.WTF::KeyValuePair.1415"* %42, null
  br i1 %62, label %63, label %69

63:                                               ; preds = %52, %61, %19, %2
  %64 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %3, align 8
  %65 = getelementptr inbounds %"class.WTF::HashTable.1412", %"class.WTF::HashTable.1412"* %0, i64 0, i32 1
  %66 = load i32, i32* %65, align 8
  %67 = zext i32 %66 to i64
  %68 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %64, i64 %67
  br label %74

69:                                               ; preds = %61
  %70 = load %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"** %3, align 8
  %71 = load i32, i32* %7, align 8
  %72 = zext i32 %71 to i64
  %73 = getelementptr inbounds %"struct.WTF::KeyValuePair.1415", %"struct.WTF::KeyValuePair.1415"* %70, i64 %72
  br label %74

74:                                               ; preds = %63, %69
  %75 = phi %"struct.WTF::KeyValuePair.1415"* [ %42, %69 ], [ %68, %63 ]
  %76 = phi %"struct.WTF::KeyValuePair.1415"* [ %73, %69 ], [ %68, %63 ]
  %77 = insertvalue { %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"* } undef, %"struct.WTF::KeyValuePair.1415"* %75, 0
  %78 = insertvalue { %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"* } %77, %"struct.WTF::KeyValuePair.1415"* %76, 1
  ret { %"struct.WTF::KeyValuePair.1415"*, %"struct.WTF::KeyValuePair.1415"* } %78
}

declare i32 @_ZNK3WTF10StringImpl12HashSlowCaseEv(%"class.WTF::StringImpl"*) local_unnamed_addr #1

declare zeroext i1 @_ZN3WTF12EqualNonNullEPKNS_10StringImplES2_(%"class.WTF::StringImpl"*, %"class.WTF::StringImpl"*) local_unnamed_addr #1

declare void @_ZN5blink13XSLStyleSheetC1EPNS_4NodeERKN3WTF6StringERKNS_4KURLEb(%"class.blink::XSLStyleSheet"*, %"class.blink::Node"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::KURL"* dereferenceable(112), i1 zeroext) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_15ScriptWrappableEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_15ScriptWrappableEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([70 x i8], [70 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink15ScriptWrappableEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

declare zeroext i1 @_ZN5blink14MarkingVisitor16WriteBarrierSlowEPv(i8*) local_unnamed_addr #1

declare void @_ZN5blink28IncrementLoadEventDelayCountC1ERNS_8DocumentE(%"class.blink::IncrementLoadEventDelayCount"*, %"class.blink::Document"* dereferenceable(2848)) unnamed_addr #1

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #8

; Function Attrs: nounwind
declare void @_ZN5blink28IncrementLoadEventDelayCountD1Ev(%"class.blink::IncrementLoadEventDelayCount"*) unnamed_addr #4

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #4

declare void @_ZN5blink16CSSParserContextC1ERKNS_8DocumentERKNS_4KURLEbRKNS_8ReferrerERKN3WTF12TextEncodingENS0_15SelectorProfileENS_24ResourceFetchRestrictionE(%"class.blink::CSSParserContext"*, %"class.blink::Document"* dereferenceable(2848), %"class.blink::KURL"* dereferenceable(112), i1 zeroext, %"struct.blink::Referrer"* dereferenceable(16), %"class.WTF::TextEncoding"* dereferenceable(8), i8 zeroext, i32) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_16CSSParserContextEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_16CSSParserContextEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([71 x i8], [71 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink16CSSParserContextEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_16CSSParserContextEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::CSSParserContext"*
  tail call void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_16CSSParserContextEE8FinalizeEPv(i8*) #0 comdat align 2 {
  tail call void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_16CSSParserContextEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink16CSSParserContext5TraceEPNS_7VisitorE(%"class.blink::CSSParserContext"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal18FinalizerTraitImplINS_16CSSParserContextELb1EE10Destructor4CallEPv(i8*) local_unnamed_addr #0 comdat align 2 {
  %2 = getelementptr inbounds i8, i8* %0, i64 128
  %3 = bitcast i8* %2 to %"class.WTF::StringImpl"**
  %4 = load %"class.WTF::StringImpl"*, %"class.WTF::StringImpl"** %3, align 8
  %5 = icmp eq %"class.WTF::StringImpl"* %4, null
  br i1 %5, label %19, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %8 = load atomic i32, i32* %7 monotonic, align 4
  %9 = and i32 %8, 2
  %10 = icmp eq i32 %9, 0
  %11 = getelementptr inbounds %"class.WTF::StringImpl", %"class.WTF::StringImpl"* %4, i64 0, i32 0
  %12 = load i32, i32* %11, align 4
  br i1 %10, label %13, label %15

13:                                               ; preds = %6
  %14 = add i32 %12, -1
  store i32 %14, i32* %11, align 4
  br label %15

15:                                               ; preds = %13, %6
  %16 = phi i32 [ %14, %13 ], [ %12, %6 ]
  %17 = icmp eq i32 %16, 0
  br i1 %17, label %18, label %19

18:                                               ; preds = %15
  tail call void @_ZNK3WTF10StringImpl18DestroyIfNotStaticEv(%"class.WTF::StringImpl"* nonnull %4) #9
  br label %19

19:                                               ; preds = %18, %15, %1
  %20 = getelementptr inbounds i8, i8* %0, i64 112
  %21 = bitcast i8* %20 to %"class.blink::DOMWrapperWorld"**
  %22 = load %"class.blink::DOMWrapperWorld"*, %"class.blink::DOMWrapperWorld"** %21, align 8
  %23 = icmp eq %"class.blink::DOMWrapperWorld"* %22, null
  br i1 %23, label %31, label %24

24:                                               ; preds = %19
  %25 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0
  tail call void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"* %25) #9
  %26 = getelementptr inbounds %"class.blink::DOMWrapperWorld", %"class.blink::DOMWrapperWorld"* %22, i64 0, i32 0, i32 0, i32 0, i32 0
  %27 = load i32, i32* %26, align 4
  %28 = icmp eq i32 %27, 0
  br i1 %28, label %29, label %31

29:                                               ; preds = %24
  tail call void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"* nonnull %22) #9
  %30 = bitcast %"class.blink::DOMWrapperWorld"* %22 to i8*
  tail call void @free(i8* %30) #9
  br label %31

31:                                               ; preds = %19, %24, %29
  %32 = bitcast i8* %0 to %"class.blink::KURL"*
  tail call void @_ZN5blink4KURLD1Ev(%"class.blink::KURL"* %32) #9
  ret void
}

declare void @_ZNK4base6subtle14RefCountedBase11ReleaseImplEv(%"class.base::subtle::RefCountedBase"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink15DOMWrapperWorldD1Ev(%"class.blink::DOMWrapperWorld"*) unnamed_addr #4

declare void @_ZN5blink18StyleSheetContentsC1EPKNS_16CSSParserContextERKN3WTF6StringEPNS_15StyleRuleImportE(%"class.blink::StyleSheetContents"*, %"class.blink::CSSParserContext"*, %"class.WTF::String"* dereferenceable(8), %"class.blink::StyleRuleImport"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden i8* @_ZN5blink10ThreadHeap8AllocateINS_18StyleSheetContentsEEEPhm(i64) local_unnamed_addr #0 comdat align 2 {
  %2 = load %"class.WTF::ThreadSpecific"*, %"class.WTF::ThreadSpecific"** @_ZN5blink11ThreadState16thread_specific_E, align 8
  %3 = getelementptr inbounds %"class.WTF::ThreadSpecific", %"class.WTF::ThreadSpecific"* %2, i64 0, i32 1
  %4 = tail call i8* @_ZNK4base18ThreadLocalStorage4Slot3GetEv(%"class.base::ThreadLocalStorage::Slot"* %3) #9
  %5 = icmp eq i8* %4, null
  br i1 %5, label %6, label %8, !prof !2

6:                                                ; preds = %1
  %7 = tail call i8* @_ZN3WTF10Partitions16FastZeroedMallocEmPKc(i64 8, i8* getelementptr inbounds ([68 x i8], [68 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIPN5blink11ThreadStateEEEPKcv, i64 0, i64 0)) #9
  tail call void @_ZN4base18ThreadLocalStorage4Slot3SetEPv(%"class.base::ThreadLocalStorage::Slot"* %3, i8* %7) #9
  br label %8

8:                                                ; preds = %1, %6
  %9 = phi i8* [ %7, %6 ], [ %4, %1 ]
  %10 = bitcast i8* %9 to %"class.blink::ThreadState"**
  %11 = load %"class.blink::ThreadState"*, %"class.blink::ThreadState"** %10, align 8
  %12 = getelementptr inbounds %"class.blink::ThreadState", %"class.blink::ThreadState"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %13 = load %"class.blink::ThreadHeap"*, %"class.blink::ThreadHeap"** %12, align 8
  %14 = icmp ult i64 %0, 64
  %15 = icmp ugt i64 %0, 31
  %16 = zext i1 %15 to i32
  %17 = icmp ult i64 %0, 128
  %18 = select i1 %17, i32 2, i32 3
  %19 = select i1 %14, i32 %16, i32 %18
  %20 = load atomic i32, i32* getelementptr inbounds ({ { i32 } }, { { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index, i64 0, i32 0, i32 0) acquire, align 4
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %8
  %23 = load %"class.blink::GCInfoTable"*, %"class.blink::GCInfoTable"** @_ZN5blink11GCInfoTable13global_table_E, align 8
  %24 = tail call i32 @_ZN5blink11GCInfoTable17EnsureGCInfoIndexEPKNS_6GCInfoEPNSt3__16atomicIjEE(%"class.blink::GCInfoTable"* %23, %"struct.blink::GCInfo"* nonnull @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE7kGcInfo, %"struct.std::__1::atomic"* bitcast ({ { i32 } }* @_ZZN5blink11GCInfoTraitINS_18StyleSheetContentsEE5IndexEvE13gc_info_index to %"struct.std::__1::atomic"*)) #9
  br label %25

25:                                               ; preds = %8, %22
  %26 = phi i32 [ %20, %8 ], [ %24, %22 ]
  %27 = tail call i8* @_ZN5blink10ThreadHeap20AllocateOnArenaIndexEPNS_11ThreadStateEmijPKc(%"class.blink::ThreadHeap"* %13, %"class.blink::ThreadState"* %11, i64 %0, i32 %19, i32 %26, i8* getelementptr inbounds ([73 x i8], [73 x i8]* @__PRETTY_FUNCTION__._ZN3WTF21GetStringWithTypeNameIN5blink18StyleSheetContentsEEEPKcv, i64 0, i64 0))
  ret i8* %27
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_18StyleSheetContentsEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::StyleSheetContents"*
  tail call void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink8internal14FinalizerTraitINS_18StyleSheetContentsEE8FinalizeEPv(i8*) #0 comdat align 2 {
  %2 = bitcast i8* %0 to %"class.blink::StyleSheetContents"*
  tail call void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"* %2) #9
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden { i8*, i8 } @_ZN5blink9NameTraitINS_18StyleSheetContentsEE7GetNameEPKv(i8*) #0 comdat align 2 {
  ret { i8*, i8 } { i8* getelementptr inbounds ([13 x i8], [13 x i8]* @.str.21, i64 0, i64 0), i8 1 }
}

declare void @_ZNK5blink18StyleSheetContents5TraceEPNS_7VisitorE(%"class.blink::StyleSheetContents"*, %"class.blink::Visitor"*) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5blink18StyleSheetContentsD1Ev(%"class.blink::StyleSheetContents"*) unnamed_addr #4

declare void @_ZN5blink13CSSStyleSheetC1EPNS_18StyleSheetContentsERNS_4NodeEbRKN3WTF12TextPositionE(%"class.blink::CSSStyleSheet"*, %"class.blink::StyleSheetContents"*, %"class.blink::Node"* dereferenceable(64), i1 zeroext, %"class.WTF::TextPosition"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5blink10TraceTraitINS_10StyleSheetEE5TraceEPNS_7VisitorEPKv(%"class.blink::Visitor"*, i8*) #0 comdat align 2 {
  %3 = bitcast i8* %1 to %"class.blink::ScriptWrappable"*
  %4 = bitcast i8* %1 to void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)***
  %5 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)**, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*** %4, align 8
  %6 = getelementptr inbounds void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %5, i64 5
  %7 = load void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)*, void (%"class.blink::ScriptWrappable"*, %"class.blink::Visitor"*)** %6, align 8
  tail call void %7(%"class.blink::ScriptWrappable"* %3, %"class.blink::Visitor"* %0) #9
  ret void
}

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { argmemonly nounwind }
attributes #4 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nounwind readnone speculatable }
attributes #7 = { cold noreturn nounwind }
attributes #8 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{!"branch_weights", i32 1, i32 2000}
!3 = !{i8 0, i8 2}
!4 = !{!"branch_weights", i32 2000, i32 1}
!5 = !{i32 24, i32 33}
