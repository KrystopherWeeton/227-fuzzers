; ModuleID = '../../net/dns/public/dns_config_overrides.cc'
source_filename = "../../net/dns/public/dns_config_overrides.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*, %"class.std::__1::__compressed_pair" }
%"class.net::IPEndPoint" = type { %"class.net::IPAddress", i16 }
%"class.net::IPAddress" = type { %"class.net::IPAddressBytes" }
%"class.net::IPAddressBytes" = type { %"struct.std::__1::array", i8 }
%"struct.std::__1::array" = type { [16 x i8] }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.net::IPEndPoint"* }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair.8" }
%"class.std::__1::__compressed_pair.8" = type { %"struct.std::__1::__compressed_pair_elem.9" }
%"struct.std::__1::__compressed_pair_elem.9" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon.10 }
%union.anon.10 = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::unordered_map" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr", %"class.std::__1::__compressed_pair.59", %"class.std::__1::__compressed_pair.64", %"class.std::__1::__compressed_pair.66", [4 x i8] }>
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.51" }
%"class.std::__1::__compressed_pair.51" = type { %"struct.std::__1::__compressed_pair_elem.52", %"struct.std::__1::__compressed_pair_elem.53" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.53" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.54" }
%"class.std::__1::__compressed_pair.54" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"struct.std::__1::__compressed_pair_elem.55" = type { i64 }
%"class.std::__1::__compressed_pair.59" = type { %"struct.std::__1::__compressed_pair_elem.60" }
%"struct.std::__1::__compressed_pair_elem.60" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.55" }
%"class.std::__1::__compressed_pair.66" = type { %"struct.std::__1::__compressed_pair_elem.67" }
%"struct.std::__1::__compressed_pair_elem.67" = type { float }
%"class.base::TimeDelta" = type { i64 }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*, %"class.std::__1::__compressed_pair.41" }
%"struct.net::DnsOverHttpsServerConfig" = type <{ %"class.std::__1::basic_string", i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.net::DnsOverHttpsServerConfig"* }
%"class.std::__1::vector.6" = type { %"class.std::__1::__vector_base.7" }
%"class.std::__1::__vector_base.7" = type { %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*, %"class.std::__1::__compressed_pair.14" }
%"class.std::__1::__compressed_pair.14" = type { %"struct.std::__1::__compressed_pair_elem.15" }
%"struct.std::__1::__compressed_pair_elem.15" = type { %"class.std::__1::basic_string"* }
%"struct.net::DnsConfigOverrides" = type <{ %"class.absl::optional", %"class.absl::optional.1", %"class.absl::optional.19", [2 x i8], %"class.absl::optional.24", [4 x i8], %"class.absl::optional.29", %"class.absl::optional.24", %"class.absl::optional.24", %"class.absl::optional.19", %"class.absl::optional.19", [4 x i8], %"class.absl::optional.34", %"class.absl::optional.46", %"class.absl::optional.19", [6 x i8], %"class.absl::optional.1", i8, [7 x i8] }>
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon }
%union.anon = type { %"class.std::__1::vector" }
%"class.absl::optional.29" = type { %"class.absl::optional_internal::optional_data.30" }
%"class.absl::optional_internal::optional_data.30" = type { %"class.absl::optional_internal::optional_data_base.31" }
%"class.absl::optional_internal::optional_data_base.31" = type { %"class.absl::optional_internal::optional_data_dtor_base.32" }
%"class.absl::optional_internal::optional_data_dtor_base.32" = type { i8, %union.anon.33 }
%union.anon.33 = type { %"class.base::TimeDelta" }
%"class.absl::optional.24" = type { %"class.absl::optional_internal::optional_data.25" }
%"class.absl::optional_internal::optional_data.25" = type { %"class.absl::optional_internal::optional_data_base.26" }
%"class.absl::optional_internal::optional_data_base.26" = type { %"class.absl::optional_internal::optional_data_dtor_base.27" }
%"class.absl::optional_internal::optional_data_dtor_base.27" = type { i8, %union.anon.28 }
%union.anon.28 = type { i32 }
%"class.absl::optional.34" = type { %"class.absl::optional_internal::optional_data.35" }
%"class.absl::optional_internal::optional_data.35" = type { %"class.absl::optional_internal::optional_data_base.36" }
%"class.absl::optional_internal::optional_data_base.36" = type { %"class.absl::optional_internal::optional_data_dtor_base.37" }
%"class.absl::optional_internal::optional_data_dtor_base.37" = type { i8, %union.anon.38 }
%union.anon.38 = type { %"class.std::__1::vector.39" }
%"class.absl::optional.46" = type { %"class.absl::optional_internal::optional_data.47" }
%"class.absl::optional_internal::optional_data.47" = type { %"class.absl::optional_internal::optional_data_base.48" }
%"class.absl::optional_internal::optional_data_base.48" = type { %"class.absl::optional_internal::optional_data_dtor_base.49" }
%"class.absl::optional_internal::optional_data_dtor_base.49" = type { i8, %union.anon.50 }
%union.anon.50 = type { i32 }
%"class.absl::optional.19" = type { %"class.absl::optional_internal::optional_data.20" }
%"class.absl::optional_internal::optional_data.20" = type { %"class.absl::optional_internal::optional_data_base.21" }
%"class.absl::optional_internal::optional_data_base.21" = type { %"class.absl::optional_internal::optional_data_dtor_base.22" }
%"class.absl::optional_internal::optional_data_dtor_base.22" = type { i8, %union.anon.23 }
%union.anon.23 = type { i8 }
%"class.absl::optional.1" = type { %"class.absl::optional_internal::optional_data.2" }
%"class.absl::optional_internal::optional_data.2" = type { %"class.absl::optional_internal::optional_data_base.3" }
%"class.absl::optional_internal::optional_data_base.3" = type { %"class.absl::optional_internal::optional_data_dtor_base.4" }
%"class.absl::optional_internal::optional_data_dtor_base.4" = type { i8, %union.anon.5 }
%union.anon.5 = type { %"class.std::__1::vector.6" }
%"class.std::__1::__vector_base_common" = type { i8 }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short" = type { [23 x i8], %struct.anon }
%struct.anon = type { i8 }
%"struct.net::DnsConfig" = type { %"class.std::__1::vector", i8, %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::unordered_map", i8, i8, i32, %"class.base::TimeDelta", i32, i32, i8, i8, %"class.std::__1::vector.39", i32, i8, %"class.std::__1::vector.6" }

$_ZN4absl8optionalINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEaSEOSB_ = comdat any

$_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE = comdat any

$_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net10IPEndPointENS2_9allocatorIS5_EEEELb0EEaSERKS9_ = comdat any

$_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_ = comdat any

$_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net24DnsOverHttpsServerConfigENS2_9allocatorIS5_EEEELb0EEaSERKS9_ = comdat any

$_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

$_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_ = comdat any

$_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_ = comdat any

@__const._ZNK3net18DnsConfigOverrides14ApplyOverridesERKNS_9DnsConfigE.overridden = private unnamed_addr constant { %"class.std::__1::vector", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::unordered_map", i8, i8, [2 x i8], i32, %"class.base::TimeDelta", i32, i32, i8, i8, [6 x i8], %"class.std::__1::vector.39", i32, i8, [3 x i8], %"class.std::__1::vector.6" } { %"class.std::__1::vector" { %"class.std::__1::__vector_base" { %"class.net::IPEndPoint"* inttoptr (i64 -6148914691236517206 to %"class.net::IPEndPoint"*), %"class.net::IPEndPoint"* inttoptr (i64 -6148914691236517206 to %"class.net::IPEndPoint"*), %"class.std::__1::__compressed_pair" { %"struct.std::__1::__compressed_pair_elem" { %"class.net::IPEndPoint"* inttoptr (i64 -6148914691236517206 to %"class.net::IPEndPoint"*) } } } }, i8 -86, [7 x i8] c"\AA\AA\AA\AA\AA\AA\AA", %"class.std::__1::basic_string" { %"class.std::__1::__compressed_pair.8" { %"struct.std::__1::__compressed_pair_elem.9" { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" { %union.anon.10 { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" { i8* inttoptr (i64 -6148914691236517206 to i8*), i64 -6148914691236517206, i64 -6148914691236517206 } } } } } }, %"class.std::__1::vector.6" { %"class.std::__1::__vector_base.7" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.14" { %"struct.std::__1::__compressed_pair_elem.15" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } }, %"class.std::__1::unordered_map" { %"class.std::__1::__hash_table" <{ %"class.std::__1::unique_ptr" { %"class.std::__1::__compressed_pair.51" { %"struct.std::__1::__compressed_pair_elem.52" { %"struct.std::__1::__hash_node_base"** inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"**) }, %"struct.std::__1::__compressed_pair_elem.53" { %"class.std::__1::__bucket_list_deallocator" { %"class.std::__1::__compressed_pair.54" { %"struct.std::__1::__compressed_pair_elem.55" { i64 -6148914691236517206 } } } } } }, %"class.std::__1::__compressed_pair.59" { %"struct.std::__1::__compressed_pair_elem.60" { %"struct.std::__1::__hash_node_base" { %"struct.std::__1::__hash_node_base"* inttoptr (i64 -6148914691236517206 to %"struct.std::__1::__hash_node_base"*) } } }, %"class.std::__1::__compressed_pair.64" { %"struct.std::__1::__compressed_pair_elem.55" { i64 -6148914691236517206 } }, %"class.std::__1::__compressed_pair.66" { %"struct.std::__1::__compressed_pair_elem.67" { float 0xFFFFFFFFE0000000 } }, [4 x i8] c"\AA\AA\AA\AA" }> }, i8 -86, i8 -86, [2 x i8] c"\AA\AA", i32 -1431655766, %"class.base::TimeDelta" { i64 -6148914691236517206 }, i32 -1431655766, i32 -1431655766, i8 -86, i8 -86, [6 x i8] c"\AA\AA\AA\AA\AA\AA", %"class.std::__1::vector.39" { %"class.std::__1::__vector_base.40" { %"struct.net::DnsOverHttpsServerConfig"* inttoptr (i64 -6148914691236517206 to %"struct.net::DnsOverHttpsServerConfig"*), %"struct.net::DnsOverHttpsServerConfig"* inttoptr (i64 -6148914691236517206 to %"struct.net::DnsOverHttpsServerConfig"*), %"class.std::__1::__compressed_pair.41" { %"struct.std::__1::__compressed_pair_elem.42" { %"struct.net::DnsOverHttpsServerConfig"* inttoptr (i64 -6148914691236517206 to %"struct.net::DnsOverHttpsServerConfig"*) } } } }, i32 -1431655766, i8 -86, [3 x i8] c"\AA\AA\AA", %"class.std::__1::vector.6" { %"class.std::__1::__vector_base.7" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*), %"class.std::__1::__compressed_pair.14" { %"struct.std::__1::__compressed_pair_elem.15" { %"class.std::__1::basic_string"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::basic_string"*) } } } } }, align 8

@_ZN3net18DnsConfigOverridesC1Ev = hidden unnamed_addr alias void (%"struct.net::DnsConfigOverrides"*), void (%"struct.net::DnsConfigOverrides"*)* @_ZN3net18DnsConfigOverridesC2Ev
@_ZN3net18DnsConfigOverridesC1ERKS0_ = hidden unnamed_addr alias void (%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"*), void (%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"*)* @_ZN3net18DnsConfigOverridesC2ERKS0_
@_ZN3net18DnsConfigOverridesC1EOS0_ = hidden unnamed_addr alias void (%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"*), void (%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"*)* @_ZN3net18DnsConfigOverridesC2EOS0_
@_ZN3net18DnsConfigOverridesD1Ev = hidden unnamed_addr alias void (%"struct.net::DnsConfigOverrides"*), void (%"struct.net::DnsConfigOverrides"*)* @_ZN3net18DnsConfigOverridesD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DnsConfigOverridesC2Ev(%"struct.net::DnsConfigOverrides"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %2, align 8
  %3 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %4 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %5 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %5, align 4
  %6 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %6, align 8
  %7 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 4
  %9 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 1
  %10 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 1
  %11 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 8
  %12 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %13 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 1
  %14 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %14, align 8
  %15 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %16 = bitcast %union.anon* %3 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %16, i8 0, i64 25, i1 false)
  %17 = bitcast %union.anon.5* %4 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %17, i8 0, i64 25, i1 false)
  %18 = bitcast %union.anon.38* %12 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %18, i8 0, i64 25, i1 false)
  %19 = bitcast %union.anon.5* %15 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %19, i8 0, i64 25, i1 false)
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DnsConfigOverridesC2ERKS0_(%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"* nocapture readonly dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #10
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %48, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  %11 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %12 = bitcast %"class.net::IPEndPoint"** %11 to i64*
  %13 = load i64, i64* %12, align 8
  %14 = bitcast %"class.std::__1::vector"* %8 to i64*
  %15 = load i64, i64* %14, align 8
  %16 = sub i64 %13, %15
  %17 = sdiv exact i64 %16, 20
  %18 = icmp eq i64 %16, 0
  br i1 %18, label %47, label %19

19:                                               ; preds = %7
  %20 = icmp ugt i64 %17, 922337203685477580
  br i1 %20, label %21, label %23

21:                                               ; preds = %19
  %22 = bitcast %"class.std::__1::vector"* %9 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %22) #11
  unreachable

23:                                               ; preds = %19
  %24 = tail call i8* @_Znwm(i64 %16) #12
  %25 = bitcast i8* %24 to %"class.net::IPEndPoint"*
  %26 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %27 = bitcast %"class.net::IPEndPoint"** %26 to i8**
  store i8* %24, i8** %27, align 8
  %28 = bitcast %"class.std::__1::vector"* %9 to i8**
  store i8* %24, i8** %28, align 8
  %29 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %25, i64 %17
  %30 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::IPEndPoint"* %29, %"class.net::IPEndPoint"** %30, align 8
  %31 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %8, i64 0, i32 0, i32 0
  %32 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %31, align 8
  %33 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %11, align 8
  %34 = bitcast %"class.net::IPEndPoint"** %26 to i64*
  %35 = ptrtoint i8* %24 to i64
  %36 = icmp eq %"class.net::IPEndPoint"* %32, %33
  br i1 %36, label %45, label %37

37:                                               ; preds = %23, %37
  %38 = phi %"class.net::IPEndPoint"* [ %41, %37 ], [ %25, %23 ]
  %39 = phi %"class.net::IPEndPoint"* [ %40, %37 ], [ %32, %23 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %38, %"class.net::IPEndPoint"* dereferenceable(20) %39) #10
  %40 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %39, i64 1
  %41 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %38, i64 1
  %42 = icmp eq %"class.net::IPEndPoint"* %40, %33
  br i1 %42, label %43, label %37

43:                                               ; preds = %37
  %44 = ptrtoint %"class.net::IPEndPoint"* %41 to i64
  br label %45

45:                                               ; preds = %43, %23
  %46 = phi i64 [ %35, %23 ], [ %44, %43 ]
  store i64 %46, i64* %34, align 8
  br label %47

47:                                               ; preds = %45, %7
  store i8 1, i8* %3, align 8
  br label %48

48:                                               ; preds = %2, %47
  %49 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %49, i8 0, i64 32, i1 false) #10
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %107, label %53

53:                                               ; preds = %48
  %54 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %55 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %56 = bitcast %"class.std::__1::vector.6"* %55 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %56, i8 0, i64 24, i1 false) #10
  %57 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %58 = bitcast %"class.std::__1::basic_string"** %57 to i64*
  %59 = load i64, i64* %58, align 8
  %60 = bitcast %"class.std::__1::vector.6"* %54 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = sub i64 %59, %61
  %63 = sdiv exact i64 %62, 24
  %64 = icmp eq i64 %62, 0
  br i1 %64, label %106, label %65

65:                                               ; preds = %53
  %66 = icmp ugt i64 %63, 768614336404564650
  br i1 %66, label %67, label %69

67:                                               ; preds = %65
  %68 = bitcast %"class.std::__1::vector.6"* %55 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %68) #11
  unreachable

69:                                               ; preds = %65
  %70 = tail call i8* @_Znwm(i64 %62) #12
  %71 = bitcast i8* %70 to %"class.std::__1::basic_string"*
  %72 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %73 = bitcast %"class.std::__1::basic_string"** %72 to i8**
  store i8* %70, i8** %73, align 8
  %74 = bitcast %"class.std::__1::vector.6"* %55 to i8**
  store i8* %70, i8** %74, align 8
  %75 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %71, i64 %63
  %76 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %75, %"class.std::__1::basic_string"** %76, align 8
  %77 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %54, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8
  %79 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %57, align 8
  %80 = bitcast %"class.std::__1::basic_string"** %72 to i64*
  %81 = ptrtoint i8* %70 to i64
  %82 = icmp eq %"class.std::__1::basic_string"* %78, %79
  br i1 %82, label %104, label %83

83:                                               ; preds = %69, %98
  %84 = phi %"class.std::__1::basic_string"* [ %100, %98 ], [ %71, %69 ]
  %85 = phi %"class.std::__1::basic_string"* [ %99, %98 ], [ %78, %69 ]
  %86 = bitcast %"class.std::__1::basic_string"* %85 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %87 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %86, i64 0, i32 1, i32 0
  %88 = load i8, i8* %87, align 1
  %89 = icmp slt i8 %88, 0
  br i1 %89, label %93, label %90

90:                                               ; preds = %83
  %91 = bitcast %"class.std::__1::basic_string"* %84 to i8*
  %92 = bitcast %"class.std::__1::basic_string"* %85 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %91, i8* align 8 %92, i64 24, i1 false) #10
  br label %98

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %95 = load i8*, i8** %94, align 8
  %96 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %97 = load i64, i64* %96, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %84, i8* %95, i64 %97) #10
  br label %98

98:                                               ; preds = %93, %90
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 1
  %100 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %84, i64 1
  %101 = icmp eq %"class.std::__1::basic_string"* %99, %79
  br i1 %101, label %102, label %83

102:                                              ; preds = %98
  %103 = ptrtoint %"class.std::__1::basic_string"* %100 to i64
  br label %104

104:                                              ; preds = %102, %69
  %105 = phi i64 [ %81, %69 ], [ %103, %102 ]
  store i64 %105, i64* %80, align 8
  br label %106

106:                                              ; preds = %53, %104
  store i8 1, i8* %49, align 8
  br label %107

107:                                              ; preds = %48, %106
  %108 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %109 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %108, i8* align 8 %109, i64 52, i1 false)
  %110 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %111 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %110, i8 0, i64 32, i1 false) #10
  %112 = load i8, i8* %111, align 8, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %172, label %114

114:                                              ; preds = %107
  %115 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %116 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %117 = bitcast %"class.std::__1::vector.39"* %116 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %117, i8 0, i64 24, i1 false) #10
  %118 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %119 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %118 to i64*
  %120 = load i64, i64* %119, align 8
  %121 = bitcast %"class.std::__1::vector.39"* %115 to i64*
  %122 = load i64, i64* %121, align 8
  %123 = sub i64 %120, %122
  %124 = ashr exact i64 %123, 5
  %125 = icmp eq i64 %123, 0
  br i1 %125, label %171, label %126

126:                                              ; preds = %114
  %127 = icmp ugt i64 %124, 576460752303423487
  br i1 %127, label %128, label %130

128:                                              ; preds = %126
  %129 = bitcast %"class.std::__1::vector.39"* %116 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %129) #11
  unreachable

130:                                              ; preds = %126
  %131 = tail call i8* @_Znwm(i64 %123) #12
  %132 = bitcast i8* %131 to %"struct.net::DnsOverHttpsServerConfig"*
  %133 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %134 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %133 to i8**
  store i8* %131, i8** %134, align 8
  %135 = bitcast %"class.std::__1::vector.39"* %116 to i8**
  store i8* %131, i8** %135, align 8
  %136 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %132, i64 %124
  %137 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::DnsOverHttpsServerConfig"* %136, %"struct.net::DnsOverHttpsServerConfig"** %137, align 8
  %138 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %115, i64 0, i32 0, i32 0
  %139 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %138, align 8
  %140 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %118, align 8
  %141 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %133 to i64*
  %142 = ptrtoint i8* %131 to i64
  %143 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %139, %140
  br i1 %143, label %169, label %144

144:                                              ; preds = %130, %160
  %145 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %165, %160 ], [ %132, %130 ]
  %146 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %164, %160 ], [ %139, %130 ]
  %147 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %146 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %148 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %147, i64 0, i32 1, i32 0
  %149 = load i8, i8* %148, align 1
  %150 = icmp slt i8 %149, 0
  br i1 %150, label %154, label %151

151:                                              ; preds = %144
  %152 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %145 to i8*
  %153 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %146 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %152, i8* align 8 %153, i64 24, i1 false) #10
  br label %160

154:                                              ; preds = %144
  %155 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 0, i32 0
  %156 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %157 = load i8*, i8** %156, align 8
  %158 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %146, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %159 = load i64, i64* %158, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %155, i8* %157, i64 %159) #10
  br label %160

160:                                              ; preds = %154, %151
  %161 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 0, i32 1
  %162 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %146, i64 0, i32 1
  %163 = load i8, i8* %162, align 8, !range !2
  store i8 %163, i8* %161, align 8
  %164 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %146, i64 1
  %165 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %145, i64 1
  %166 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %164, %140
  br i1 %166, label %167, label %144

167:                                              ; preds = %160
  %168 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %165 to i64
  br label %169

169:                                              ; preds = %167, %130
  %170 = phi i64 [ %142, %130 ], [ %168, %167 ]
  store i64 %170, i64* %141, align 8
  br label %171

171:                                              ; preds = %114, %169
  store i8 1, i8* %110, align 8
  br label %172

172:                                              ; preds = %107, %171
  %173 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %174 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %173, i8* align 8 %174, i64 10, i1 false)
  %175 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %176 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %175, i8 0, i64 32, i1 false) #10
  %177 = load i8, i8* %176, align 8, !range !2
  %178 = icmp eq i8 %177, 0
  br i1 %178, label %233, label %179

179:                                              ; preds = %172
  %180 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %181 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %182 = bitcast %"class.std::__1::vector.6"* %181 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %182, i8 0, i64 24, i1 false) #10
  %183 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %184 = bitcast %"class.std::__1::basic_string"** %183 to i64*
  %185 = load i64, i64* %184, align 8
  %186 = bitcast %"class.std::__1::vector.6"* %180 to i64*
  %187 = load i64, i64* %186, align 8
  %188 = sub i64 %185, %187
  %189 = sdiv exact i64 %188, 24
  %190 = icmp eq i64 %188, 0
  br i1 %190, label %232, label %191

191:                                              ; preds = %179
  %192 = icmp ugt i64 %189, 768614336404564650
  br i1 %192, label %193, label %195

193:                                              ; preds = %191
  %194 = bitcast %"class.std::__1::vector.6"* %181 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %194) #11
  unreachable

195:                                              ; preds = %191
  %196 = tail call i8* @_Znwm(i64 %188) #12
  %197 = bitcast i8* %196 to %"class.std::__1::basic_string"*
  %198 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %199 = bitcast %"class.std::__1::basic_string"** %198 to i8**
  store i8* %196, i8** %199, align 8
  %200 = bitcast %"class.std::__1::vector.6"* %181 to i8**
  store i8* %196, i8** %200, align 8
  %201 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %197, i64 %189
  %202 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %201, %"class.std::__1::basic_string"** %202, align 8
  %203 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %180, i64 0, i32 0, i32 0
  %204 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %203, align 8
  %205 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %183, align 8
  %206 = bitcast %"class.std::__1::basic_string"** %198 to i64*
  %207 = ptrtoint i8* %196 to i64
  %208 = icmp eq %"class.std::__1::basic_string"* %204, %205
  br i1 %208, label %230, label %209

209:                                              ; preds = %195, %224
  %210 = phi %"class.std::__1::basic_string"* [ %226, %224 ], [ %197, %195 ]
  %211 = phi %"class.std::__1::basic_string"* [ %225, %224 ], [ %204, %195 ]
  %212 = bitcast %"class.std::__1::basic_string"* %211 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %213 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %212, i64 0, i32 1, i32 0
  %214 = load i8, i8* %213, align 1
  %215 = icmp slt i8 %214, 0
  br i1 %215, label %219, label %216

216:                                              ; preds = %209
  %217 = bitcast %"class.std::__1::basic_string"* %210 to i8*
  %218 = bitcast %"class.std::__1::basic_string"* %211 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %217, i8* align 8 %218, i64 24, i1 false) #10
  br label %224

219:                                              ; preds = %209
  %220 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %221 = load i8*, i8** %220, align 8
  %222 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %223 = load i64, i64* %222, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %210, i8* %221, i64 %223) #10
  br label %224

224:                                              ; preds = %219, %216
  %225 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %211, i64 1
  %226 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %210, i64 1
  %227 = icmp eq %"class.std::__1::basic_string"* %225, %205
  br i1 %227, label %228, label %209

228:                                              ; preds = %224
  %229 = ptrtoint %"class.std::__1::basic_string"* %226 to i64
  br label %230

230:                                              ; preds = %228, %195
  %231 = phi i64 [ %207, %195 ], [ %229, %228 ]
  store i64 %231, i64* %206, align 8
  br label %232

232:                                              ; preds = %179, %230
  store i8 1, i8* %175, align 8
  br label %233

233:                                              ; preds = %172, %232
  %234 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 17
  %235 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 17
  %236 = load i8, i8* %235, align 8, !range !2
  store i8 %236, i8* %234, align 8
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DnsConfigOverridesC2EOS0_(%"struct.net::DnsConfigOverrides"* nocapture, %"struct.net::DnsConfigOverrides"* nocapture dereferenceable(208)) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %3, i8 0, i64 32, i1 false) #10
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %25, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %9 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %10 = bitcast %"class.std::__1::vector"* %9 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %10, i8 0, i64 24, i1 false) #10
  %11 = bitcast %"class.std::__1::vector"* %8 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = bitcast %"class.std::__1::vector"* %9 to i64*
  store i64 %12, i64* %13, align 8
  %14 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %15 = bitcast %"class.net::IPEndPoint"** %14 to i64*
  %16 = load i64, i64* %15, align 8
  %17 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = bitcast %"class.net::IPEndPoint"** %17 to i64*
  store i64 %16, i64* %18, align 8
  %19 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %20 = bitcast %"class.net::IPEndPoint"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %23 = bitcast %"class.net::IPEndPoint"** %22 to i64*
  store i64 %21, i64* %23, align 8
  %24 = bitcast %"class.std::__1::vector"* %8 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %3, align 8
  br label %25

25:                                               ; preds = %2, %7
  %26 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %27 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %26, i8 0, i64 32, i1 false) #10
  %28 = load i8, i8* %27, align 8, !range !2
  %29 = icmp eq i8 %28, 0
  br i1 %29, label %48, label %30

30:                                               ; preds = %25
  %31 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %32 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %33 = bitcast %"class.std::__1::vector.6"* %32 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %33, i8 0, i64 24, i1 false) #10
  %34 = bitcast %"class.std::__1::vector.6"* %31 to i64*
  %35 = load i64, i64* %34, align 8
  %36 = bitcast %"class.std::__1::vector.6"* %32 to i64*
  store i64 %35, i64* %36, align 8
  %37 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::basic_string"** %37 to i64*
  %39 = load i64, i64* %38, align 8
  %40 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %41 = bitcast %"class.std::__1::basic_string"** %40 to i64*
  store i64 %39, i64* %41, align 8
  %42 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.std::__1::basic_string"** %42 to i64*
  %44 = load i64, i64* %43, align 8
  %45 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %46 = bitcast %"class.std::__1::basic_string"** %45 to i64*
  store i64 %44, i64* %46, align 8
  %47 = bitcast %"class.std::__1::vector.6"* %31 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %47, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %26, align 8
  br label %48

48:                                               ; preds = %25, %30
  %49 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %50 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %49, i8* align 8 %50, i64 52, i1 false)
  %51 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %52 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %51, i8 0, i64 32, i1 false) #10
  %53 = load i8, i8* %52, align 8, !range !2
  %54 = icmp eq i8 %53, 0
  br i1 %54, label %73, label %55

55:                                               ; preds = %48
  %56 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %57 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %58 = bitcast %"class.std::__1::vector.39"* %57 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %58, i8 0, i64 24, i1 false) #10
  %59 = bitcast %"class.std::__1::vector.39"* %56 to i64*
  %60 = load i64, i64* %59, align 8
  %61 = bitcast %"class.std::__1::vector.39"* %57 to i64*
  store i64 %60, i64* %61, align 8
  %62 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %63 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %62 to i64*
  %64 = load i64, i64* %63, align 8
  %65 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %66 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %65 to i64*
  store i64 %64, i64* %66, align 8
  %67 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %67 to i64*
  %69 = load i64, i64* %68, align 8
  %70 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %71 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %70 to i64*
  store i64 %69, i64* %71, align 8
  %72 = bitcast %"class.std::__1::vector.39"* %56 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %72, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %51, align 8
  br label %73

73:                                               ; preds = %48, %55
  %74 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %75 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %74, i8* align 8 %75, i64 10, i1 false)
  %76 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %77 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %76, i8 0, i64 32, i1 false) #10
  %78 = load i8, i8* %77, align 8, !range !2
  %79 = icmp eq i8 %78, 0
  br i1 %79, label %98, label %80

80:                                               ; preds = %73
  %81 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %82 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %83 = bitcast %"class.std::__1::vector.6"* %82 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %83, i8 0, i64 24, i1 false) #10
  %84 = bitcast %"class.std::__1::vector.6"* %81 to i64*
  %85 = load i64, i64* %84, align 8
  %86 = bitcast %"class.std::__1::vector.6"* %82 to i64*
  store i64 %85, i64* %86, align 8
  %87 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %88 = bitcast %"class.std::__1::basic_string"** %87 to i64*
  %89 = load i64, i64* %88, align 8
  %90 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %91 = bitcast %"class.std::__1::basic_string"** %90 to i64*
  store i64 %89, i64* %91, align 8
  %92 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %93 = bitcast %"class.std::__1::basic_string"** %92 to i64*
  %94 = load i64, i64* %93, align 8
  %95 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %96 = bitcast %"class.std::__1::basic_string"** %95 to i64*
  store i64 %94, i64* %96, align 8
  %97 = bitcast %"class.std::__1::vector.6"* %81 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %97, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %76, align 8
  br label %98

98:                                               ; preds = %73, %80
  %99 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 17
  %100 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 17
  %101 = load i8, i8* %100, align 8, !range !2
  store i8 %101, i8* %99, align 8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DnsConfigOverridesD2Ev(%"struct.net::DnsConfigOverrides"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %33, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %7 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %6, i64 0, i32 0, i32 0
  %8 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %7, align 8
  %9 = icmp eq %"class.std::__1::basic_string"* %8, null
  br i1 %9, label %32, label %10

10:                                               ; preds = %5
  %11 = bitcast %"class.std::__1::basic_string"* %8 to i8*
  %12 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %13 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %12, align 8
  %14 = icmp eq %"class.std::__1::basic_string"* %13, %8
  br i1 %14, label %30, label %15

15:                                               ; preds = %10, %25
  %16 = phi %"class.std::__1::basic_string"* [ %17, %25 ], [ %13, %10 ]
  %17 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %16, i64 -1
  %18 = bitcast %"class.std::__1::basic_string"* %17 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %19 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %18, i64 0, i32 1, i32 0
  %20 = load i8, i8* %19, align 1
  %21 = icmp slt i8 %20, 0
  br i1 %21, label %22, label %25

22:                                               ; preds = %15
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %17, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %24 = load i8*, i8** %23, align 8
  tail call void @_ZdlPv(i8* %24) #12
  br label %25

25:                                               ; preds = %22, %15
  %26 = icmp eq %"class.std::__1::basic_string"* %17, %8
  br i1 %26, label %27, label %15

27:                                               ; preds = %25
  %28 = bitcast %"class.std::__1::vector.6"* %6 to i8**
  %29 = load i8*, i8** %28, align 8
  br label %30

30:                                               ; preds = %27, %10
  %31 = phi i8* [ %29, %27 ], [ %11, %10 ]
  store %"class.std::__1::basic_string"* %8, %"class.std::__1::basic_string"** %12, align 8
  tail call void @_ZdlPv(i8* %31) #12
  br label %32

32:                                               ; preds = %30, %5
  store i8 0, i8* %2, align 8
  br label %33

33:                                               ; preds = %1, %32
  %34 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 8, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %65, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %39 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %38, i64 0, i32 0, i32 0
  %40 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %39, align 8
  %41 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %40, null
  br i1 %41, label %64, label %42

42:                                               ; preds = %37
  %43 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %40 to i8*
  %44 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %45 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %44, align 8
  %46 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %45, %40
  br i1 %46, label %62, label %47

47:                                               ; preds = %42, %57
  %48 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %49, %57 ], [ %45, %42 ]
  %49 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 -1
  %50 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %54, label %57

54:                                               ; preds = %47
  %55 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %56 = load i8*, i8** %55, align 8
  tail call void @_ZdlPv(i8* %56) #12
  br label %57

57:                                               ; preds = %54, %47
  %58 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %49, %40
  br i1 %58, label %59, label %47

59:                                               ; preds = %57
  %60 = bitcast %"class.std::__1::vector.39"* %38 to i8**
  %61 = load i8*, i8** %60, align 8
  br label %62

62:                                               ; preds = %59, %42
  %63 = phi i8* [ %61, %59 ], [ %43, %42 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %40, %"struct.net::DnsOverHttpsServerConfig"** %44, align 8
  tail call void @_ZdlPv(i8* %63) #12
  br label %64

64:                                               ; preds = %62, %37
  store i8 0, i8* %34, align 8
  br label %65

65:                                               ; preds = %33, %64
  %66 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %67 = load i8, i8* %66, align 8, !range !2
  %68 = icmp eq i8 %67, 0
  br i1 %68, label %97, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %71 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %70, i64 0, i32 0, i32 0
  %72 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %71, align 8
  %73 = icmp eq %"class.std::__1::basic_string"* %72, null
  br i1 %73, label %96, label %74

74:                                               ; preds = %69
  %75 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %76 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %76, align 8
  %78 = icmp eq %"class.std::__1::basic_string"* %77, %72
  br i1 %78, label %94, label %79

79:                                               ; preds = %74, %89
  %80 = phi %"class.std::__1::basic_string"* [ %81, %89 ], [ %77, %74 ]
  %81 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %80, i64 -1
  %82 = bitcast %"class.std::__1::basic_string"* %81 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %83 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %82, i64 0, i32 1, i32 0
  %84 = load i8, i8* %83, align 1
  %85 = icmp slt i8 %84, 0
  br i1 %85, label %86, label %89

86:                                               ; preds = %79
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %81, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  tail call void @_ZdlPv(i8* %88) #12
  br label %89

89:                                               ; preds = %86, %79
  %90 = icmp eq %"class.std::__1::basic_string"* %81, %72
  br i1 %90, label %91, label %79

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::vector.6"* %70 to i8**
  %93 = load i8*, i8** %92, align 8
  br label %94

94:                                               ; preds = %91, %74
  %95 = phi i8* [ %93, %91 ], [ %75, %74 ]
  store %"class.std::__1::basic_string"* %72, %"class.std::__1::basic_string"** %76, align 8
  tail call void @_ZdlPv(i8* %95) #12
  br label %96

96:                                               ; preds = %94, %69
  store i8 0, i8* %66, align 8
  br label %97

97:                                               ; preds = %65, %96
  %98 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %99 = load i8, i8* %98, align 8, !range !2
  %100 = icmp eq i8 %99, 0
  br i1 %100, label %119, label %101

101:                                              ; preds = %97
  %102 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %103 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %102, align 8
  %104 = icmp eq %"class.net::IPEndPoint"* %103, null
  br i1 %104, label %118, label %105

105:                                              ; preds = %101
  %106 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %107 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %106, align 8
  %108 = icmp eq %"class.net::IPEndPoint"* %107, %103
  br i1 %108, label %115, label %109

109:                                              ; preds = %105, %109
  %110 = phi %"class.net::IPEndPoint"* [ %111, %109 ], [ %107, %105 ]
  %111 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %110, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %111) #10
  %112 = icmp eq %"class.net::IPEndPoint"* %111, %103
  br i1 %112, label %113, label %109

113:                                              ; preds = %109
  %114 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %102, align 8
  br label %115

115:                                              ; preds = %113, %105
  %116 = phi %"class.net::IPEndPoint"* [ %114, %113 ], [ %103, %105 ]
  store %"class.net::IPEndPoint"* %103, %"class.net::IPEndPoint"** %106, align 8
  %117 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %116, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %115, %101
  store i8 0, i8* %98, align 8
  br label %119

119:                                              ; preds = %97, %118
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %"struct.net::DnsConfigOverrides"* @_ZN3net18DnsConfigOverridesaSERKS0_(%"struct.net::DnsConfigOverrides"* returned, %"struct.net::DnsConfigOverrides"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0
  %4 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0
  %5 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net10IPEndPointENS2_9allocatorIS5_EEEELb0EEaSERKS9_(%"class.absl::optional_internal::optional_data"* %3, %"class.absl::optional_internal::optional_data"* dereferenceable(32) %4) #10
  %6 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0
  %7 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0
  %8 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.2"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_(%"class.absl::optional_internal::optional_data.2"* %6, %"class.absl::optional_internal::optional_data.2"* dereferenceable(32) %7) #10
  %9 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %9, i8* align 8 %10, i64 52, i1 false)
  %11 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0
  %12 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0
  %13 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.35"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net24DnsOverHttpsServerConfigENS2_9allocatorIS5_EEEELb0EEaSERKS9_(%"class.absl::optional_internal::optional_data.35"* %11, %"class.absl::optional_internal::optional_data.35"* dereferenceable(32) %12) #10
  %14 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %15 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %14, i8* align 8 %15, i64 10, i1 false)
  %16 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0
  %17 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0
  %18 = tail call dereferenceable(32) %"class.absl::optional_internal::optional_data.2"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_(%"class.absl::optional_internal::optional_data.2"* %16, %"class.absl::optional_internal::optional_data.2"* dereferenceable(32) %17) #10
  %19 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 17
  %20 = load i8, i8* %19, align 8, !range !2
  %21 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 17
  store i8 %20, i8* %21, align 8
  ret %"struct.net::DnsConfigOverrides"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden dereferenceable(208) %"struct.net::DnsConfigOverrides"* @_ZN3net18DnsConfigOverridesaSEOS0_(%"struct.net::DnsConfigOverrides"* returned, %"struct.net::DnsConfigOverrides"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %61, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %45, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %13, align 8
  %15 = icmp eq %"class.net::IPEndPoint"* %14, null
  br i1 %15, label %30, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %17, align 8
  %19 = icmp eq %"class.net::IPEndPoint"* %18, %14
  br i1 %19, label %26, label %20

20:                                               ; preds = %16, %20
  %21 = phi %"class.net::IPEndPoint"* [ %22, %20 ], [ %18, %16 ]
  %22 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %21, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %22) #10
  %23 = icmp eq %"class.net::IPEndPoint"* %22, %14
  br i1 %23, label %24, label %20

24:                                               ; preds = %20
  %25 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %13, align 8
  br label %26

26:                                               ; preds = %24, %16
  %27 = phi %"class.net::IPEndPoint"* [ %25, %24 ], [ %14, %16 ]
  store %"class.net::IPEndPoint"* %14, %"class.net::IPEndPoint"** %17, align 8
  %28 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %27, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %28) #12
  %29 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %29, i8 0, i64 24, i1 false) #10
  br label %30

30:                                               ; preds = %26, %12
  %31 = bitcast %"class.std::__1::vector"* %7 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %32, i64* %33, align 8
  %34 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %35 = bitcast %"class.net::IPEndPoint"** %34 to i64*
  %36 = load i64, i64* %35, align 8
  %37 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %38 = bitcast %"class.net::IPEndPoint"** %37 to i64*
  store i64 %36, i64* %38, align 8
  %39 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %40 = bitcast %"class.net::IPEndPoint"** %39 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %43 = bitcast %"class.net::IPEndPoint"** %42 to i64*
  store i64 %41, i64* %43, align 8
  %44 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %44, i8 0, i64 24, i1 false) #10
  br label %83

45:                                               ; preds = %6
  %46 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %46, i8 0, i64 24, i1 false) #10
  %47 = bitcast %"class.std::__1::vector"* %7 to i64*
  %48 = load i64, i64* %47, align 8
  %49 = bitcast %"class.std::__1::vector"* %11 to i64*
  store i64 %48, i64* %49, align 8
  %50 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %51 = bitcast %"class.net::IPEndPoint"** %50 to i64*
  %52 = load i64, i64* %51, align 8
  %53 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %54 = bitcast %"class.net::IPEndPoint"** %53 to i64*
  store i64 %52, i64* %54, align 8
  %55 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %56 = bitcast %"class.net::IPEndPoint"** %55 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %59 = bitcast %"class.net::IPEndPoint"** %58 to i64*
  store i64 %57, i64* %59, align 8
  %60 = bitcast %"class.std::__1::vector"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %60, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %8, align 8
  br label %83

61:                                               ; preds = %2
  %62 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = icmp eq i8 %63, 0
  br i1 %64, label %83, label %65

65:                                               ; preds = %61
  %66 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %67 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %66, align 8
  %68 = icmp eq %"class.net::IPEndPoint"* %67, null
  br i1 %68, label %82, label %69

69:                                               ; preds = %65
  %70 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %71 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %70, align 8
  %72 = icmp eq %"class.net::IPEndPoint"* %71, %67
  br i1 %72, label %79, label %73

73:                                               ; preds = %69, %73
  %74 = phi %"class.net::IPEndPoint"* [ %75, %73 ], [ %71, %69 ]
  %75 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %74, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %75) #10
  %76 = icmp eq %"class.net::IPEndPoint"* %75, %67
  br i1 %76, label %77, label %73

77:                                               ; preds = %73
  %78 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %66, align 8
  br label %79

79:                                               ; preds = %77, %69
  %80 = phi %"class.net::IPEndPoint"* [ %78, %77 ], [ %67, %69 ]
  store %"class.net::IPEndPoint"* %67, %"class.net::IPEndPoint"** %70, align 8
  %81 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %80, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %81) #12
  br label %82

82:                                               ; preds = %79, %65
  store i8 0, i8* %62, align 8
  br label %83

83:                                               ; preds = %45, %30, %61, %82
  %84 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1
  %85 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1
  %86 = tail call dereferenceable(32) %"class.absl::optional.1"* @_ZN4absl8optionalINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEaSEOSB_(%"class.absl::optional.1"* %84, %"class.absl::optional.1"* dereferenceable(32) %85) #10
  %87 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %88 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %87, i8* align 8 %88, i64 52, i1 false)
  %89 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12
  %90 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %157, label %93

93:                                               ; preds = %83
  %94 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %95 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 8, !range !2
  %97 = icmp eq i8 %96, 0
  %98 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %97, label %141, label %99

99:                                               ; preds = %93
  %100 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %98, i64 0, i32 0, i32 0
  %101 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %100, align 8
  %102 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %101, null
  br i1 %102, label %126, label %103

103:                                              ; preds = %99
  %104 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %101 to i8*
  %105 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %106 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %105, align 8
  %107 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %106, %101
  br i1 %107, label %123, label %108

108:                                              ; preds = %103, %118
  %109 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %110, %118 ], [ %106, %103 ]
  %110 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %109, i64 -1
  %111 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %110 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %112 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %111, i64 0, i32 1, i32 0
  %113 = load i8, i8* %112, align 1
  %114 = icmp slt i8 %113, 0
  br i1 %114, label %115, label %118

115:                                              ; preds = %108
  %116 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %110, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %117 = load i8*, i8** %116, align 8
  tail call void @_ZdlPv(i8* %117) #12
  br label %118

118:                                              ; preds = %115, %108
  %119 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %110, %101
  br i1 %119, label %120, label %108

120:                                              ; preds = %118
  %121 = bitcast %"class.std::__1::vector.39"* %98 to i8**
  %122 = load i8*, i8** %121, align 8
  br label %123

123:                                              ; preds = %120, %103
  %124 = phi i8* [ %122, %120 ], [ %104, %103 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %101, %"struct.net::DnsOverHttpsServerConfig"** %105, align 8
  tail call void @_ZdlPv(i8* %124) #12
  %125 = bitcast %"class.std::__1::vector.39"* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %125, i8 0, i64 24, i1 false) #10
  br label %126

126:                                              ; preds = %123, %99
  %127 = bitcast %"class.std::__1::vector.39"* %94 to i64*
  %128 = load i64, i64* %127, align 8
  %129 = bitcast %"class.std::__1::vector.39"* %98 to i64*
  store i64 %128, i64* %129, align 8
  %130 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %131 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %130 to i64*
  %132 = load i64, i64* %131, align 8
  %133 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %134 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %133 to i64*
  store i64 %132, i64* %134, align 8
  %135 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %136 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %135 to i64*
  %137 = load i64, i64* %136, align 8
  %138 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %139 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %138 to i64*
  store i64 %137, i64* %139, align 8
  %140 = bitcast %"class.std::__1::vector.39"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %140, i8 0, i64 24, i1 false) #10
  br label %189

141:                                              ; preds = %93
  %142 = bitcast %"class.std::__1::vector.39"* %98 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #10
  %143 = bitcast %"class.std::__1::vector.39"* %94 to i64*
  %144 = load i64, i64* %143, align 8
  %145 = bitcast %"class.std::__1::vector.39"* %98 to i64*
  store i64 %144, i64* %145, align 8
  %146 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %147 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %146 to i64*
  %148 = load i64, i64* %147, align 8
  %149 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %150 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %149 to i64*
  store i64 %148, i64* %150, align 8
  %151 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %152 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %151 to i64*
  %153 = load i64, i64* %152, align 8
  %154 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %155 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %154 to i64*
  store i64 %153, i64* %155, align 8
  %156 = bitcast %"class.std::__1::vector.39"* %94 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %156, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %95, align 8
  br label %189

157:                                              ; preds = %83
  %158 = getelementptr inbounds %"class.absl::optional.34", %"class.absl::optional.34"* %89, i64 0, i32 0, i32 0, i32 0, i32 0
  %159 = load i8, i8* %158, align 8, !range !2
  %160 = icmp eq i8 %159, 0
  br i1 %160, label %189, label %161

161:                                              ; preds = %157
  %162 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %163 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %162, i64 0, i32 0, i32 0
  %164 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %163, align 8
  %165 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %164, null
  br i1 %165, label %188, label %166

166:                                              ; preds = %161
  %167 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %164 to i8*
  %168 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %169 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %168, align 8
  %170 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %169, %164
  br i1 %170, label %186, label %171

171:                                              ; preds = %166, %181
  %172 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %173, %181 ], [ %169, %166 ]
  %173 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 -1
  %174 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %173 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %175 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %174, i64 0, i32 1, i32 0
  %176 = load i8, i8* %175, align 1
  %177 = icmp slt i8 %176, 0
  br i1 %177, label %178, label %181

178:                                              ; preds = %171
  %179 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %173, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %180 = load i8*, i8** %179, align 8
  tail call void @_ZdlPv(i8* %180) #12
  br label %181

181:                                              ; preds = %178, %171
  %182 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %173, %164
  br i1 %182, label %183, label %171

183:                                              ; preds = %181
  %184 = bitcast %"class.std::__1::vector.39"* %162 to i8**
  %185 = load i8*, i8** %184, align 8
  br label %186

186:                                              ; preds = %183, %166
  %187 = phi i8* [ %185, %183 ], [ %167, %166 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %164, %"struct.net::DnsOverHttpsServerConfig"** %168, align 8
  tail call void @_ZdlPv(i8* %187) #12
  br label %188

188:                                              ; preds = %186, %161
  store i8 0, i8* %158, align 8
  br label %189

189:                                              ; preds = %141, %126, %157, %188
  %190 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %191 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %190, i8* align 8 %191, i64 10, i1 false)
  %192 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16
  %193 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16
  %194 = tail call dereferenceable(32) %"class.absl::optional.1"* @_ZN4absl8optionalINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEaSEOSB_(%"class.absl::optional.1"* %192, %"class.absl::optional.1"* dereferenceable(32) %193) #10
  %195 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 17
  %196 = load i8, i8* %195, align 8, !range !2
  %197 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 17
  store i8 %196, i8* %197, align 8
  ret %"struct.net::DnsConfigOverrides"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional.1"* @_ZN4absl8optionalINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEEEaSEOSB_(%"class.absl::optional.1"*, %"class.absl::optional.1"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %70, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %54, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %11, i64 0, i32 0, i32 0
  %14 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %13, align 8
  %15 = icmp eq %"class.std::__1::basic_string"* %14, null
  br i1 %15, label %39, label %16

16:                                               ; preds = %12
  %17 = bitcast %"class.std::__1::basic_string"* %14 to i8*
  %18 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %20 = icmp eq %"class.std::__1::basic_string"* %19, %14
  br i1 %20, label %36, label %21

21:                                               ; preds = %16, %31
  %22 = phi %"class.std::__1::basic_string"* [ %23, %31 ], [ %19, %16 ]
  %23 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %22, i64 -1
  %24 = bitcast %"class.std::__1::basic_string"* %23 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %25 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %24, i64 0, i32 1, i32 0
  %26 = load i8, i8* %25, align 1
  %27 = icmp slt i8 %26, 0
  br i1 %27, label %28, label %31

28:                                               ; preds = %21
  %29 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %23, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load i8*, i8** %29, align 8
  tail call void @_ZdlPv(i8* %30) #12
  br label %31

31:                                               ; preds = %28, %21
  %32 = icmp eq %"class.std::__1::basic_string"* %23, %14
  br i1 %32, label %33, label %21

33:                                               ; preds = %31
  %34 = bitcast %"class.std::__1::vector.6"* %11 to i8**
  %35 = load i8*, i8** %34, align 8
  br label %36

36:                                               ; preds = %33, %16
  %37 = phi i8* [ %35, %33 ], [ %17, %16 ]
  store %"class.std::__1::basic_string"* %14, %"class.std::__1::basic_string"** %18, align 8
  tail call void @_ZdlPv(i8* %37) #12
  %38 = bitcast %"class.std::__1::vector.6"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %38, i8 0, i64 24, i1 false) #10
  br label %39

39:                                               ; preds = %36, %12
  %40 = bitcast %"class.std::__1::vector.6"* %7 to i64*
  %41 = load i64, i64* %40, align 8
  %42 = bitcast %"class.std::__1::vector.6"* %11 to i64*
  store i64 %41, i64* %42, align 8
  %43 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %44 = bitcast %"class.std::__1::basic_string"** %43 to i64*
  %45 = load i64, i64* %44, align 8
  %46 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %47 = bitcast %"class.std::__1::basic_string"** %46 to i64*
  store i64 %45, i64* %47, align 8
  %48 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %49 = bitcast %"class.std::__1::basic_string"** %48 to i64*
  %50 = load i64, i64* %49, align 8
  %51 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %52 = bitcast %"class.std::__1::basic_string"** %51 to i64*
  store i64 %50, i64* %52, align 8
  %53 = bitcast %"class.std::__1::vector.6"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %53, i8 0, i64 24, i1 false) #10
  br label %102

54:                                               ; preds = %6
  %55 = bitcast %"class.std::__1::vector.6"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %55, i8 0, i64 24, i1 false) #10
  %56 = bitcast %"class.std::__1::vector.6"* %7 to i64*
  %57 = load i64, i64* %56, align 8
  %58 = bitcast %"class.std::__1::vector.6"* %11 to i64*
  store i64 %57, i64* %58, align 8
  %59 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %60 = bitcast %"class.std::__1::basic_string"** %59 to i64*
  %61 = load i64, i64* %60, align 8
  %62 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %63 = bitcast %"class.std::__1::basic_string"** %62 to i64*
  store i64 %61, i64* %63, align 8
  %64 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %65 = bitcast %"class.std::__1::basic_string"** %64 to i64*
  %66 = load i64, i64* %65, align 8
  %67 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  %68 = bitcast %"class.std::__1::basic_string"** %67 to i64*
  store i64 %66, i64* %68, align 8
  %69 = bitcast %"class.std::__1::vector.6"* %7 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %69, i8 0, i64 24, i1 false) #10
  store i8 1, i8* %8, align 8
  br label %102

70:                                               ; preds = %2
  %71 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 8, !range !2
  %73 = icmp eq i8 %72, 0
  br i1 %73, label %102, label %74

74:                                               ; preds = %70
  %75 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %76 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %75, i64 0, i32 0, i32 0
  %77 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %76, align 8
  %78 = icmp eq %"class.std::__1::basic_string"* %77, null
  br i1 %78, label %101, label %79

79:                                               ; preds = %74
  %80 = bitcast %"class.std::__1::basic_string"* %77 to i8*
  %81 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %82 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %81, align 8
  %83 = icmp eq %"class.std::__1::basic_string"* %82, %77
  br i1 %83, label %99, label %84

84:                                               ; preds = %79, %94
  %85 = phi %"class.std::__1::basic_string"* [ %86, %94 ], [ %82, %79 ]
  %86 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %85, i64 -1
  %87 = bitcast %"class.std::__1::basic_string"* %86 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %88 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %87, i64 0, i32 1, i32 0
  %89 = load i8, i8* %88, align 1
  %90 = icmp slt i8 %89, 0
  br i1 %90, label %91, label %94

91:                                               ; preds = %84
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %93 = load i8*, i8** %92, align 8
  tail call void @_ZdlPv(i8* %93) #12
  br label %94

94:                                               ; preds = %91, %84
  %95 = icmp eq %"class.std::__1::basic_string"* %86, %77
  br i1 %95, label %96, label %84

96:                                               ; preds = %94
  %97 = bitcast %"class.std::__1::vector.6"* %75 to i8**
  %98 = load i8*, i8** %97, align 8
  br label %99

99:                                               ; preds = %96, %79
  %100 = phi i8* [ %98, %96 ], [ %80, %79 ]
  store %"class.std::__1::basic_string"* %77, %"class.std::__1::basic_string"** %81, align 8
  tail call void @_ZdlPv(i8* %100) #12
  br label %101

101:                                              ; preds = %99, %74
  store i8 0, i8* %71, align 8
  br label %102

102:                                              ; preds = %54, %39, %70, %101
  ret %"class.absl::optional.1"* %0
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net18DnsConfigOverrideseqERKS0_(%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  br i1 %11, label %45, label %12

12:                                               ; preds = %2
  %13 = icmp eq i8 %7, 0
  br i1 %13, label %14, label %15, !prof !3

14:                                               ; preds = %12
  tail call void @llvm.trap() #10
  unreachable

15:                                               ; preds = %12
  %16 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %17 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %19 = bitcast %"class.net::IPEndPoint"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::vector"* %16 to i64*
  %22 = load i64, i64* %21, align 8
  %23 = sub i64 %20, %22
  %24 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %25 = bitcast %"class.net::IPEndPoint"** %24 to i64*
  %26 = load i64, i64* %25, align 8
  %27 = bitcast %"class.std::__1::vector"* %17 to i64*
  %28 = load i64, i64* %27, align 8
  %29 = sub i64 %26, %28
  %30 = icmp eq i64 %23, %29
  %31 = inttoptr i64 %22 to %"class.net::IPEndPoint"*
  %32 = inttoptr i64 %20 to %"class.net::IPEndPoint"*
  br i1 %30, label %33, label %284

33:                                               ; preds = %15
  %34 = icmp eq %"class.net::IPEndPoint"* %31, %32
  br i1 %34, label %46, label %35

35:                                               ; preds = %33
  %36 = inttoptr i64 %28 to %"class.net::IPEndPoint"*
  br label %37

37:                                               ; preds = %41, %35
  %38 = phi %"class.net::IPEndPoint"* [ %43, %41 ], [ %36, %35 ]
  %39 = phi %"class.net::IPEndPoint"* [ %42, %41 ], [ %31, %35 ]
  %40 = tail call zeroext i1 @_ZNK3net10IPEndPointeqERKS0_(%"class.net::IPEndPoint"* %39, %"class.net::IPEndPoint"* dereferenceable(20) %38) #10
  br i1 %40, label %41, label %284

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %39, i64 1
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %38, i64 1
  %44 = icmp eq %"class.net::IPEndPoint"* %42, %32
  br i1 %44, label %46, label %37

45:                                               ; preds = %2
  br i1 %9, label %284, label %46

46:                                               ; preds = %41, %45, %33
  %47 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1
  %48 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1
  %49 = tail call zeroext i1 @_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE(%"class.absl::optional.1"* dereferenceable(32) %47, %"class.absl::optional.1"* dereferenceable(32) %48)
  br i1 %49, label %50, label %284

50:                                               ; preds = %46
  %51 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %52 = load i8, i8* %51, align 1, !range !2
  %53 = icmp ne i8 %52, 0
  %54 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %55 = load i8, i8* %54, align 1, !range !2
  %56 = icmp ne i8 %55, 0
  %57 = xor i1 %53, %56
  %58 = xor i1 %53, true
  %59 = or i1 %57, %58
  br i1 %59, label %69, label %60

60:                                               ; preds = %50
  %61 = icmp eq i8 %55, 0
  br i1 %61, label %62, label %63, !prof !3

62:                                               ; preds = %60
  tail call void @llvm.trap() #10
  unreachable

63:                                               ; preds = %60
  %64 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %65 = load i8, i8* %64, align 1, !range !2
  %66 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %67 = load i8, i8* %66, align 1, !range !2
  %68 = icmp eq i8 %65, %67
  br i1 %68, label %70, label %284

69:                                               ; preds = %50
  br i1 %57, label %284, label %70

70:                                               ; preds = %69, %63
  %71 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %72 = load i8, i8* %71, align 4, !range !2
  %73 = icmp ne i8 %72, 0
  %74 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 4, !range !2
  %76 = icmp ne i8 %75, 0
  %77 = xor i1 %73, %76
  %78 = xor i1 %73, true
  %79 = or i1 %77, %78
  br i1 %79, label %89, label %80

80:                                               ; preds = %70
  %81 = icmp eq i8 %75, 0
  br i1 %81, label %82, label %83, !prof !3

82:                                               ; preds = %80
  tail call void @llvm.trap() #10
  unreachable

83:                                               ; preds = %80
  %84 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %85 = load i32, i32* %84, align 4
  %86 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %87 = load i32, i32* %86, align 4
  %88 = icmp eq i32 %85, %87
  br i1 %88, label %90, label %284

89:                                               ; preds = %70
  br i1 %77, label %284, label %90

90:                                               ; preds = %89, %83
  %91 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %92 = load i8, i8* %91, align 8, !range !2
  %93 = icmp ne i8 %92, 0
  %94 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %95 = load i8, i8* %94, align 8, !range !2
  %96 = icmp ne i8 %95, 0
  %97 = xor i1 %93, %96
  %98 = xor i1 %93, true
  %99 = or i1 %97, %98
  br i1 %99, label %109, label %100

100:                                              ; preds = %90
  %101 = icmp eq i8 %95, 0
  br i1 %101, label %102, label %103, !prof !3

102:                                              ; preds = %100
  tail call void @llvm.trap() #10
  unreachable

103:                                              ; preds = %100
  %104 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %105 = load i64, i64* %104, align 8
  %106 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %107 = load i64, i64* %106, align 8
  %108 = icmp eq i64 %107, %105
  br i1 %108, label %110, label %284

109:                                              ; preds = %90
  br i1 %97, label %284, label %110

110:                                              ; preds = %109, %103
  %111 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %112 = load i8, i8* %111, align 4, !range !2
  %113 = icmp ne i8 %112, 0
  %114 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %115 = load i8, i8* %114, align 4, !range !2
  %116 = icmp ne i8 %115, 0
  %117 = xor i1 %113, %116
  %118 = xor i1 %113, true
  %119 = or i1 %117, %118
  br i1 %119, label %129, label %120

120:                                              ; preds = %110
  %121 = icmp eq i8 %115, 0
  br i1 %121, label %122, label %123, !prof !3

122:                                              ; preds = %120
  tail call void @llvm.trap() #10
  unreachable

123:                                              ; preds = %120
  %124 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %125 = load i32, i32* %124, align 4
  %126 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %127 = load i32, i32* %126, align 4
  %128 = icmp eq i32 %125, %127
  br i1 %128, label %130, label %284

129:                                              ; preds = %110
  br i1 %117, label %284, label %130

130:                                              ; preds = %129, %123
  %131 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %132 = load i8, i8* %131, align 4, !range !2
  %133 = icmp ne i8 %132, 0
  %134 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %135 = load i8, i8* %134, align 4, !range !2
  %136 = icmp ne i8 %135, 0
  %137 = xor i1 %133, %136
  %138 = xor i1 %133, true
  %139 = or i1 %137, %138
  br i1 %139, label %149, label %140

140:                                              ; preds = %130
  %141 = icmp eq i8 %135, 0
  br i1 %141, label %142, label %143, !prof !3

142:                                              ; preds = %140
  tail call void @llvm.trap() #10
  unreachable

143:                                              ; preds = %140
  %144 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %145 = load i32, i32* %144, align 4
  %146 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %147 = load i32, i32* %146, align 4
  %148 = icmp eq i32 %145, %147
  br i1 %148, label %150, label %284

149:                                              ; preds = %130
  br i1 %137, label %284, label %150

150:                                              ; preds = %149, %143
  %151 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %152 = load i8, i8* %151, align 1, !range !2
  %153 = icmp ne i8 %152, 0
  %154 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %155 = load i8, i8* %154, align 1, !range !2
  %156 = icmp ne i8 %155, 0
  %157 = xor i1 %153, %156
  %158 = xor i1 %153, true
  %159 = or i1 %157, %158
  br i1 %159, label %169, label %160

160:                                              ; preds = %150
  %161 = icmp eq i8 %155, 0
  br i1 %161, label %162, label %163, !prof !3

162:                                              ; preds = %160
  tail call void @llvm.trap() #10
  unreachable

163:                                              ; preds = %160
  %164 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %165 = load i8, i8* %164, align 1, !range !2
  %166 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %167 = load i8, i8* %166, align 1, !range !2
  %168 = icmp eq i8 %165, %167
  br i1 %168, label %170, label %284

169:                                              ; preds = %150
  br i1 %157, label %284, label %170

170:                                              ; preds = %169, %163
  %171 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %172 = load i8, i8* %171, align 1, !range !2
  %173 = icmp ne i8 %172, 0
  %174 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %175 = load i8, i8* %174, align 1, !range !2
  %176 = icmp ne i8 %175, 0
  %177 = xor i1 %173, %176
  %178 = xor i1 %173, true
  %179 = or i1 %177, %178
  br i1 %179, label %189, label %180

180:                                              ; preds = %170
  %181 = icmp eq i8 %175, 0
  br i1 %181, label %182, label %183, !prof !3

182:                                              ; preds = %180
  tail call void @llvm.trap() #10
  unreachable

183:                                              ; preds = %180
  %184 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %185 = load i8, i8* %184, align 1, !range !2
  %186 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %187 = load i8, i8* %186, align 1, !range !2
  %188 = icmp eq i8 %185, %187
  br i1 %188, label %190, label %284

189:                                              ; preds = %170
  br i1 %177, label %284, label %190

190:                                              ; preds = %189, %183
  %191 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %192 = load i8, i8* %191, align 8, !range !2
  %193 = icmp ne i8 %192, 0
  %194 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %195 = load i8, i8* %194, align 8, !range !2
  %196 = icmp ne i8 %195, 0
  %197 = xor i1 %193, %196
  %198 = xor i1 %193, true
  %199 = or i1 %197, %198
  br i1 %199, label %233, label %200

200:                                              ; preds = %190
  %201 = icmp eq i8 %195, 0
  br i1 %201, label %202, label %203, !prof !3

202:                                              ; preds = %200
  tail call void @llvm.trap() #10
  unreachable

203:                                              ; preds = %200
  %204 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %205 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %206 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %207 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %206 to i64*
  %208 = load i64, i64* %207, align 8
  %209 = bitcast %"class.std::__1::vector.39"* %204 to i64*
  %210 = load i64, i64* %209, align 8
  %211 = sub i64 %208, %210
  %212 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %213 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %212 to i64*
  %214 = load i64, i64* %213, align 8
  %215 = bitcast %"class.std::__1::vector.39"* %205 to i64*
  %216 = load i64, i64* %215, align 8
  %217 = sub i64 %214, %216
  %218 = icmp eq i64 %211, %217
  %219 = inttoptr i64 %210 to %"struct.net::DnsOverHttpsServerConfig"*
  %220 = inttoptr i64 %208 to %"struct.net::DnsOverHttpsServerConfig"*
  br i1 %218, label %221, label %284

221:                                              ; preds = %203
  %222 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %219, %220
  br i1 %222, label %234, label %223

223:                                              ; preds = %221
  %224 = inttoptr i64 %216 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %225

225:                                              ; preds = %229, %223
  %226 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %231, %229 ], [ %224, %223 ]
  %227 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %230, %229 ], [ %219, %223 ]
  %228 = tail call zeroext i1 @_ZNK3net24DnsOverHttpsServerConfigeqERKS0_(%"struct.net::DnsOverHttpsServerConfig"* %227, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32) %226) #10
  br i1 %228, label %229, label %284

229:                                              ; preds = %225
  %230 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %227, i64 1
  %231 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %226, i64 1
  %232 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %230, %220
  br i1 %232, label %234, label %225

233:                                              ; preds = %190
  br i1 %197, label %284, label %234

234:                                              ; preds = %229, %233, %221
  %235 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %236 = load i8, i8* %235, align 4, !range !2
  %237 = icmp ne i8 %236, 0
  %238 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %239 = load i8, i8* %238, align 4, !range !2
  %240 = icmp ne i8 %239, 0
  %241 = xor i1 %237, %240
  %242 = xor i1 %237, true
  %243 = or i1 %241, %242
  br i1 %243, label %253, label %244

244:                                              ; preds = %234
  %245 = icmp eq i8 %239, 0
  br i1 %245, label %246, label %247, !prof !3

246:                                              ; preds = %244
  tail call void @llvm.trap() #10
  unreachable

247:                                              ; preds = %244
  %248 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %249 = load i32, i32* %248, align 4
  %250 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %251 = load i32, i32* %250, align 4
  %252 = icmp eq i32 %249, %251
  br i1 %252, label %254, label %284

253:                                              ; preds = %234
  br i1 %241, label %284, label %254

254:                                              ; preds = %253, %247
  %255 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %256 = load i8, i8* %255, align 1, !range !2
  %257 = icmp ne i8 %256, 0
  %258 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %259 = load i8, i8* %258, align 1, !range !2
  %260 = icmp ne i8 %259, 0
  %261 = xor i1 %257, %260
  %262 = xor i1 %257, true
  %263 = or i1 %261, %262
  br i1 %263, label %273, label %264

264:                                              ; preds = %254
  %265 = icmp eq i8 %259, 0
  br i1 %265, label %266, label %267, !prof !3

266:                                              ; preds = %264
  tail call void @llvm.trap() #10
  unreachable

267:                                              ; preds = %264
  %268 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %269 = load i8, i8* %268, align 1, !range !2
  %270 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %271 = load i8, i8* %270, align 1, !range !2
  %272 = icmp eq i8 %269, %271
  br i1 %272, label %274, label %284

273:                                              ; preds = %254
  br i1 %261, label %284, label %274

274:                                              ; preds = %273, %267
  %275 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16
  %276 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16
  %277 = tail call zeroext i1 @_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE(%"class.absl::optional.1"* dereferenceable(32) %275, %"class.absl::optional.1"* dereferenceable(32) %276)
  br i1 %277, label %278, label %284

278:                                              ; preds = %274
  %279 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 17
  %280 = load i8, i8* %279, align 8, !range !2
  %281 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 17
  %282 = load i8, i8* %281, align 8, !range !2
  %283 = icmp eq i8 %280, %282
  br label %284

284:                                              ; preds = %37, %225, %45, %69, %89, %109, %129, %149, %169, %189, %233, %253, %273, %203, %15, %267, %247, %183, %163, %143, %123, %103, %83, %63, %278, %274, %46
  %285 = phi i1 [ false, %274 ], [ false, %273 ], [ false, %253 ], [ false, %233 ], [ false, %189 ], [ false, %169 ], [ false, %149 ], [ false, %129 ], [ false, %109 ], [ false, %89 ], [ false, %69 ], [ false, %46 ], [ false, %45 ], [ %283, %278 ], [ false, %63 ], [ false, %83 ], [ false, %103 ], [ false, %123 ], [ false, %143 ], [ false, %163 ], [ false, %183 ], [ false, %247 ], [ false, %267 ], [ false, %15 ], [ false, %203 ], [ false, %225 ], [ false, %37 ]
  ret i1 %285
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden zeroext i1 @_ZN4absleqINSt3__16vectorINS1_12basic_stringIcNS1_11char_traitsIcEENS1_9allocatorIcEEEENS6_IS8_EEEESA_EEDTclL_ZNS_17optional_internal19convertible_to_boolEbEeqdefp_defp0_EERKNS_8optionalIT_EERKNSD_IT0_EE(%"class.absl::optional.1"* dereferenceable(32), %"class.absl::optional.1"* dereferenceable(32)) local_unnamed_addr #0 comdat {
  %3 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp ne i8 %4, 0
  %6 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp ne i8 %7, 0
  %9 = xor i1 %5, %8
  %10 = xor i1 %5, true
  %11 = or i1 %9, %10
  %12 = xor i1 %9, true
  br i1 %11, label %94, label %13

13:                                               ; preds = %2
  %14 = icmp eq i8 %7, 0
  br i1 %14, label %15, label %16, !prof !3

15:                                               ; preds = %13
  tail call void @llvm.trap() #10
  unreachable

16:                                               ; preds = %13
  %17 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %18 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %19 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %0, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %20 = bitcast %"class.std::__1::basic_string"** %19 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = bitcast %"class.std::__1::vector.6"* %17 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = sub i64 %21, %23
  %25 = getelementptr inbounds %"class.absl::optional.1", %"class.absl::optional.1"* %1, i64 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %26 = bitcast %"class.std::__1::basic_string"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"class.std::__1::vector.6"* %18 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = icmp eq i64 %24, %30
  %32 = inttoptr i64 %23 to %"class.std::__1::basic_string"*
  %33 = inttoptr i64 %21 to %"class.std::__1::basic_string"*
  br i1 %31, label %34, label %94

34:                                               ; preds = %16
  %35 = icmp eq %"class.std::__1::basic_string"* %32, %33
  br i1 %35, label %94, label %36

36:                                               ; preds = %34
  %37 = inttoptr i64 %29 to %"class.std::__1::basic_string"*
  br label %38

38:                                               ; preds = %36, %90
  %39 = phi %"class.std::__1::basic_string"* [ %92, %90 ], [ %37, %36 ]
  %40 = phi %"class.std::__1::basic_string"* [ %91, %90 ], [ %32, %36 ]
  %41 = bitcast %"class.std::__1::basic_string"* %40 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %42 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %41, i64 0, i32 1, i32 0
  %43 = load i8, i8* %42, align 1
  %44 = icmp slt i8 %43, 0
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %46 = load i64, i64* %45, align 8
  %47 = zext i8 %43 to i64
  %48 = select i1 %44, i64 %46, i64 %47
  %49 = bitcast %"class.std::__1::basic_string"* %39 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %50 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %49, i64 0, i32 1, i32 0
  %51 = load i8, i8* %50, align 1
  %52 = icmp slt i8 %51, 0
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = zext i8 %51 to i64
  %56 = select i1 %52, i64 %54, i64 %55
  %57 = icmp eq i64 %48, %56
  br i1 %57, label %58, label %94

58:                                               ; preds = %38
  %59 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = bitcast %"class.std::__1::basic_string"* %40 to i8*
  %62 = select i1 %44, i8* %60, i8* %61
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %64 = load i8*, i8** %63, align 8
  %65 = bitcast %"class.std::__1::basic_string"* %39 to i8*
  %66 = select i1 %52, i8* %64, i8* %65
  %67 = icmp eq i64 %48, 0
  br i1 %44, label %74, label %68

68:                                               ; preds = %58
  br i1 %67, label %90, label %69

69:                                               ; preds = %68
  %70 = ptrtoint i8* %60 to i64
  %71 = trunc i64 %70 to i8
  %72 = load i8, i8* %66, align 1
  %73 = icmp eq i8 %72, %71
  br i1 %73, label %75, label %94

74:                                               ; preds = %58
  br i1 %67, label %90, label %87

75:                                               ; preds = %69, %82
  %76 = phi i64 [ %79, %82 ], [ %47, %69 ]
  %77 = phi i8* [ %80, %82 ], [ %61, %69 ]
  %78 = phi i8* [ %83, %82 ], [ %66, %69 ]
  %79 = add i64 %76, -1
  %80 = getelementptr inbounds i8, i8* %77, i64 1
  %81 = icmp eq i64 %79, 0
  br i1 %81, label %90, label %82

82:                                               ; preds = %75
  %83 = getelementptr inbounds i8, i8* %78, i64 1
  %84 = load i8, i8* %80, align 1
  %85 = load i8, i8* %83, align 1
  %86 = icmp eq i8 %84, %85
  br i1 %86, label %75, label %94

87:                                               ; preds = %74
  %88 = tail call i32 @bcmp(i8* %62, i8* %66, i64 %48) #10
  %89 = icmp eq i32 %88, 0
  br i1 %89, label %90, label %94

90:                                               ; preds = %75, %87, %74, %68
  %91 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %40, i64 1
  %92 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %39, i64 1
  %93 = icmp eq %"class.std::__1::basic_string"* %91, %33
  br i1 %93, label %94, label %38

94:                                               ; preds = %90, %87, %69, %38, %82, %2, %34, %16
  %95 = phi i1 [ %12, %2 ], [ false, %16 ], [ true, %34 ], [ false, %82 ], [ true, %90 ], [ false, %38 ], [ false, %87 ], [ false, %69 ]
  ret i1 %95
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK3net18DnsConfigOverridesneERKS0_(%"struct.net::DnsConfigOverrides"*, %"struct.net::DnsConfigOverrides"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %3 = tail call zeroext i1 @_ZNK3net18DnsConfigOverrideseqERKS0_(%"struct.net::DnsConfigOverrides"* %0, %"struct.net::DnsConfigOverrides"* dereferenceable(208) %1)
  %4 = xor i1 %3, true
  ret i1 %4
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN3net18DnsConfigOverrides38CreateOverridingEverythingWithDefaultsEv(%"struct.net::DnsConfigOverrides"* noalias sret) local_unnamed_addr #0 align 2 {
  %2 = alloca %"struct.net::DnsConfig", align 8
  %3 = bitcast %"struct.net::DnsConfig"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 208, i8* nonnull %3) #10
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %3, i8* align 8 bitcast ({ %"class.std::__1::vector", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::unordered_map", i8, i8, [2 x i8], i32, %"class.base::TimeDelta", i32, i32, i8, i8, [6 x i8], %"class.std::__1::vector.39", i32, i8, [3 x i8], %"class.std::__1::vector.6" }* @__const._ZNK3net18DnsConfigOverrides14ApplyOverridesERKNS_9DnsConfigE.overridden to i8*), i64 208, i1 false)
  call void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"* nonnull %2) #10
  %4 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* align 8 %4, i8 -86, i64 208, i1 false)
  store i8 0, i8* %4, align 8
  %5 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %6 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %7 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %7, align 4
  %8 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %8, align 8
  %9 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %9, align 4
  %10 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %10, align 4
  %11 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %12, align 1
  %13 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %13, align 8
  %14 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1
  %15 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %15, align 1
  %16 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  store i8 0, i8* %16, align 8
  %17 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1
  %18 = getelementptr inbounds %union.anon, %union.anon* %5, i64 1
  %19 = bitcast %union.anon* %18 to i8*
  store i8 0, i8* %19, align 8
  %20 = bitcast %union.anon.5* %6 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 25, i1 false) #10
  %21 = bitcast %union.anon.38* %14 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %21, i8 0, i64 25, i1 false) #10
  %22 = bitcast %union.anon.5* %17 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %22, i8 0, i64 25, i1 false) #10
  %23 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %24 = bitcast %"class.std::__1::vector"* %23 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 24, i1 false) #10
  %25 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 0, i32 0, i32 1
  %26 = bitcast %"class.net::IPEndPoint"** %25 to i64*
  %27 = load i64, i64* %26, align 8
  %28 = bitcast %"struct.net::DnsConfig"* %2 to i64*
  %29 = load i64, i64* %28, align 8
  %30 = sub i64 %27, %29
  %31 = sdiv exact i64 %30, 20
  %32 = icmp eq i64 %30, 0
  %33 = inttoptr i64 %29 to %"class.net::IPEndPoint"*
  %34 = inttoptr i64 %27 to %"class.net::IPEndPoint"*
  br i1 %32, label %71, label %35

35:                                               ; preds = %1
  %36 = icmp ugt i64 %31, 922337203685477580
  br i1 %36, label %37, label %39

37:                                               ; preds = %35
  %38 = bitcast %"class.std::__1::vector"* %23 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %38) #11
  unreachable

39:                                               ; preds = %35
  %40 = call i8* @_Znwm(i64 %30) #12
  %41 = bitcast i8* %40 to %"class.net::IPEndPoint"*
  %42 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %43 = bitcast %"class.net::IPEndPoint"** %42 to i8**
  store i8* %40, i8** %43, align 8
  %44 = bitcast %"class.std::__1::vector"* %23 to i8**
  store i8* %40, i8** %44, align 8
  %45 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %41, i64 %31
  %46 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::IPEndPoint"* %45, %"class.net::IPEndPoint"** %46, align 8
  %47 = bitcast %"class.net::IPEndPoint"** %42 to i64*
  %48 = icmp eq %"class.net::IPEndPoint"* %33, %34
  br i1 %48, label %49, label %51

49:                                               ; preds = %39
  %50 = ptrtoint i8* %40 to i64
  store i64 %50, i64* %47, align 8
  br label %71

51:                                               ; preds = %39, %51
  %52 = phi %"class.net::IPEndPoint"* [ %55, %51 ], [ %41, %39 ]
  %53 = phi %"class.net::IPEndPoint"* [ %54, %51 ], [ %33, %39 ]
  call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %52, %"class.net::IPEndPoint"* dereferenceable(20) %53) #10
  %54 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %53, i64 1
  %55 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %52, i64 1
  %56 = icmp eq %"class.net::IPEndPoint"* %54, %34
  br i1 %56, label %57, label %51

57:                                               ; preds = %51
  %58 = ptrtoint %"class.net::IPEndPoint"* %55 to i64
  %59 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 8, !range !2
  store i64 %58, i64* %47, align 8
  store i8 1, i8* %4, align 8
  %61 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 3
  %62 = icmp eq i8 %60, 0
  %63 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %62, label %74, label %64

64:                                               ; preds = %57
  %65 = icmp eq %"class.std::__1::vector.6"* %63, %61
  br i1 %65, label %128, label %66

66:                                               ; preds = %64
  %67 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %61, i64 0, i32 0, i32 0
  %68 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %67, align 8
  %69 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 3, i32 0, i32 1
  %70 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %69, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %63, %"class.std::__1::basic_string"* %68, %"class.std::__1::basic_string"* %70) #10
  br label %128

71:                                               ; preds = %1, %49
  store i8 1, i8* %4, align 8
  %72 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 3
  %73 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  br label %74

74:                                               ; preds = %71, %57
  %75 = phi %"class.std::__1::vector.6"* [ %63, %57 ], [ %73, %71 ]
  %76 = phi %"class.std::__1::vector.6"* [ %61, %57 ], [ %72, %71 ]
  %77 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %78 = bitcast %"class.std::__1::vector.6"* %75 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %78, i8 0, i64 24, i1 false) #10
  %79 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 3, i32 0, i32 1
  %80 = bitcast %"class.std::__1::basic_string"** %79 to i64*
  %81 = load i64, i64* %80, align 8
  %82 = bitcast %"class.std::__1::vector.6"* %76 to i64*
  %83 = load i64, i64* %82, align 8
  %84 = sub i64 %81, %83
  %85 = sdiv exact i64 %84, 24
  %86 = icmp eq i64 %84, 0
  %87 = inttoptr i64 %83 to %"class.std::__1::basic_string"*
  %88 = inttoptr i64 %81 to %"class.std::__1::basic_string"*
  br i1 %86, label %127, label %89

89:                                               ; preds = %74
  %90 = icmp ugt i64 %85, 768614336404564650
  br i1 %90, label %91, label %93

91:                                               ; preds = %89
  %92 = bitcast %"class.std::__1::vector.6"* %75 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %92) #11
  unreachable

93:                                               ; preds = %89
  %94 = call i8* @_Znwm(i64 %84) #12
  %95 = bitcast i8* %94 to %"class.std::__1::basic_string"*
  %96 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %97 = bitcast %"class.std::__1::basic_string"** %96 to i8**
  store i8* %94, i8** %97, align 8
  %98 = bitcast %"class.std::__1::vector.6"* %75 to i8**
  store i8* %94, i8** %98, align 8
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %95, i64 %85
  %100 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %99, %"class.std::__1::basic_string"** %100, align 8
  %101 = bitcast %"class.std::__1::basic_string"** %96 to i64*
  %102 = ptrtoint i8* %94 to i64
  %103 = icmp eq %"class.std::__1::basic_string"* %87, %88
  br i1 %103, label %125, label %104

104:                                              ; preds = %93, %119
  %105 = phi %"class.std::__1::basic_string"* [ %121, %119 ], [ %95, %93 ]
  %106 = phi %"class.std::__1::basic_string"* [ %120, %119 ], [ %87, %93 ]
  %107 = bitcast %"class.std::__1::basic_string"* %106 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %108 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %107, i64 0, i32 1, i32 0
  %109 = load i8, i8* %108, align 1
  %110 = icmp slt i8 %109, 0
  br i1 %110, label %114, label %111

111:                                              ; preds = %104
  %112 = bitcast %"class.std::__1::basic_string"* %105 to i8*
  %113 = bitcast %"class.std::__1::basic_string"* %106 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %112, i8* align 8 %113, i64 24, i1 false) #10
  br label %119

114:                                              ; preds = %104
  %115 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %116 = load i8*, i8** %115, align 8
  %117 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %118 = load i64, i64* %117, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %105, i8* %116, i64 %118) #10
  br label %119

119:                                              ; preds = %114, %111
  %120 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %106, i64 1
  %121 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %105, i64 1
  %122 = icmp eq %"class.std::__1::basic_string"* %120, %88
  br i1 %122, label %123, label %104

123:                                              ; preds = %119
  %124 = ptrtoint %"class.std::__1::basic_string"* %121 to i64
  br label %125

125:                                              ; preds = %123, %93
  %126 = phi i64 [ %102, %93 ], [ %124, %123 ]
  store i64 %126, i64* %101, align 8
  br label %127

127:                                              ; preds = %74, %125
  store i8 1, i8* %77, align 8
  br label %128

128:                                              ; preds = %64, %66, %127
  %129 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 6
  %130 = load i8, i8* %129, align 1, !range !2
  %131 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %132 = bitcast i8* %131 to i16*
  %133 = zext i8 %130 to i16
  %134 = shl nuw nsw i16 %133, 8
  %135 = or i16 %134, 1
  store i16 %135, i16* %132, align 8
  %136 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 7
  %137 = load i32, i32* %136, align 4
  %138 = bitcast i8* %7 to i64*
  %139 = zext i32 %137 to i64
  %140 = shl nuw i64 %139, 32
  %141 = or i64 %140, 1
  store i64 %141, i64* %138, align 4
  %142 = load i8, i8* %8, align 8, !range !2
  %143 = icmp eq i8 %142, 0
  %144 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 8, i32 0
  %145 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %146 = load i64, i64* %144, align 8
  store i64 %146, i64* %145, align 8
  br i1 %143, label %147, label %148

147:                                              ; preds = %128
  store i8 1, i8* %8, align 8
  br label %148

148:                                              ; preds = %128, %147
  %149 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 9
  %150 = bitcast i32* %149 to <2 x i32>*
  %151 = load <2 x i32>, <2 x i32>* %150, align 8
  %152 = zext <2 x i32> %151 to <2 x i64>
  %153 = shl nuw <2 x i64> %152, <i64 32, i64 32>
  %154 = or <2 x i64> %153, <i64 1, i64 1>
  %155 = bitcast i8* %9 to <2 x i64>*
  store <2 x i64> %154, <2 x i64>* %155, align 8
  %156 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 11
  %157 = load i8, i8* %156, align 8, !range !2
  %158 = bitcast i8* %11 to i16*
  %159 = zext i8 %157 to i16
  %160 = shl nuw nsw i16 %159, 8
  %161 = or i16 %160, 1
  store i16 %161, i16* %158, align 8
  %162 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 12
  %163 = load i8, i8* %162, align 1, !range !2
  %164 = bitcast i8* %12 to i16*
  %165 = zext i8 %163 to i16
  %166 = shl nuw nsw i16 %165, 8
  %167 = or i16 %166, 1
  store i16 %167, i16* %164, align 2
  %168 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 13
  %169 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %170 = load i8, i8* %169, align 8, !range !2
  %171 = icmp eq i8 %170, 0
  %172 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %171, label %180, label %173

173:                                              ; preds = %148
  %174 = icmp eq %"class.std::__1::vector.39"* %172, %168
  br i1 %174, label %235, label %175

175:                                              ; preds = %173
  %176 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %168, i64 0, i32 0, i32 0
  %177 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %176, align 8
  %178 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 13, i32 0, i32 1
  %179 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %178, align 8
  call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"* %172, %"struct.net::DnsOverHttpsServerConfig"* %177, %"struct.net::DnsOverHttpsServerConfig"* %179) #10
  br label %235

180:                                              ; preds = %148
  %181 = bitcast %"class.std::__1::vector.39"* %172 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %181, i8 0, i64 24, i1 false) #10
  %182 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 13, i32 0, i32 1
  %183 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %182 to i64*
  %184 = load i64, i64* %183, align 8
  %185 = bitcast %"class.std::__1::vector.39"* %168 to i64*
  %186 = load i64, i64* %185, align 8
  %187 = sub i64 %184, %186
  %188 = ashr exact i64 %187, 5
  %189 = icmp eq i64 %187, 0
  %190 = inttoptr i64 %186 to %"struct.net::DnsOverHttpsServerConfig"*
  %191 = inttoptr i64 %184 to %"struct.net::DnsOverHttpsServerConfig"*
  br i1 %189, label %234, label %192

192:                                              ; preds = %180
  %193 = icmp ugt i64 %188, 576460752303423487
  br i1 %193, label %194, label %196

194:                                              ; preds = %192
  %195 = bitcast %"class.std::__1::vector.39"* %172 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %195) #11
  unreachable

196:                                              ; preds = %192
  %197 = call i8* @_Znwm(i64 %187) #12
  %198 = bitcast i8* %197 to %"struct.net::DnsOverHttpsServerConfig"*
  %199 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %200 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %199 to i8**
  store i8* %197, i8** %200, align 8
  %201 = bitcast %"class.std::__1::vector.39"* %172 to i8**
  store i8* %197, i8** %201, align 8
  %202 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %198, i64 %188
  %203 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::DnsOverHttpsServerConfig"* %202, %"struct.net::DnsOverHttpsServerConfig"** %203, align 8
  %204 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %199 to i64*
  %205 = ptrtoint i8* %197 to i64
  %206 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %190, %191
  br i1 %206, label %232, label %207

207:                                              ; preds = %196, %223
  %208 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %228, %223 ], [ %198, %196 ]
  %209 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %227, %223 ], [ %190, %196 ]
  %210 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %209 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %211 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %210, i64 0, i32 1, i32 0
  %212 = load i8, i8* %211, align 1
  %213 = icmp slt i8 %212, 0
  br i1 %213, label %217, label %214

214:                                              ; preds = %207
  %215 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %208 to i8*
  %216 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %209 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %215, i8* align 8 %216, i64 24, i1 false) #10
  br label %223

217:                                              ; preds = %207
  %218 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %208, i64 0, i32 0
  %219 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %220 = load i8*, i8** %219, align 8
  %221 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %209, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %222 = load i64, i64* %221, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %218, i8* %220, i64 %222) #10
  br label %223

223:                                              ; preds = %217, %214
  %224 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %208, i64 0, i32 1
  %225 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %209, i64 0, i32 1
  %226 = load i8, i8* %225, align 8, !range !2
  store i8 %226, i8* %224, align 8
  %227 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %209, i64 1
  %228 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %208, i64 1
  %229 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %227, %191
  br i1 %229, label %230, label %207

230:                                              ; preds = %223
  %231 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %228 to i64
  br label %232

232:                                              ; preds = %230, %196
  %233 = phi i64 [ %205, %196 ], [ %231, %230 ]
  store i64 %233, i64* %204, align 8
  br label %234

234:                                              ; preds = %180, %232
  store i8 1, i8* %169, align 8
  br label %235

235:                                              ; preds = %173, %175, %234
  %236 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 14
  %237 = load i32, i32* %236, align 8
  %238 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %239 = bitcast i8* %238 to i64*
  %240 = zext i32 %237 to i64
  %241 = shl nuw i64 %240, 32
  %242 = or i64 %241, 1
  store i64 %242, i64* %239, align 8
  %243 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 15
  %244 = load i8, i8* %243, align 4, !range !2
  %245 = bitcast i8* %15 to i16*
  %246 = zext i8 %244 to i16
  %247 = shl nuw nsw i16 %246, 8
  %248 = or i16 %247, 1
  store i16 %248, i16* %245, align 8
  %249 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 16
  %250 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %251 = load i8, i8* %250, align 8, !range !2
  %252 = icmp eq i8 %251, 0
  %253 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  br i1 %252, label %261, label %254

254:                                              ; preds = %235
  %255 = icmp eq %"class.std::__1::vector.6"* %253, %249
  br i1 %255, label %312, label %256

256:                                              ; preds = %254
  %257 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %249, i64 0, i32 0, i32 0
  %258 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %257, align 8
  %259 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 16, i32 0, i32 1
  %260 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %259, align 8
  call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %253, %"class.std::__1::basic_string"* %258, %"class.std::__1::basic_string"* %260) #10
  br label %312

261:                                              ; preds = %235
  %262 = bitcast %"class.std::__1::vector.6"* %253 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %262, i8 0, i64 24, i1 false) #10
  %263 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %2, i64 0, i32 16, i32 0, i32 1
  %264 = bitcast %"class.std::__1::basic_string"** %263 to i64*
  %265 = load i64, i64* %264, align 8
  %266 = bitcast %"class.std::__1::vector.6"* %249 to i64*
  %267 = load i64, i64* %266, align 8
  %268 = sub i64 %265, %267
  %269 = sdiv exact i64 %268, 24
  %270 = icmp eq i64 %268, 0
  %271 = inttoptr i64 %267 to %"class.std::__1::basic_string"*
  %272 = inttoptr i64 %265 to %"class.std::__1::basic_string"*
  br i1 %270, label %311, label %273

273:                                              ; preds = %261
  %274 = icmp ugt i64 %269, 768614336404564650
  br i1 %274, label %275, label %277

275:                                              ; preds = %273
  %276 = bitcast %"class.std::__1::vector.6"* %253 to %"class.std::__1::__vector_base_common"*
  call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %276) #11
  unreachable

277:                                              ; preds = %273
  %278 = call i8* @_Znwm(i64 %268) #12
  %279 = bitcast i8* %278 to %"class.std::__1::basic_string"*
  %280 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %281 = bitcast %"class.std::__1::basic_string"** %280 to i8**
  store i8* %278, i8** %281, align 8
  %282 = bitcast %"class.std::__1::vector.6"* %253 to i8**
  store i8* %278, i8** %282, align 8
  %283 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %279, i64 %269
  %284 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %283, %"class.std::__1::basic_string"** %284, align 8
  %285 = bitcast %"class.std::__1::basic_string"** %280 to i64*
  %286 = ptrtoint i8* %278 to i64
  %287 = icmp eq %"class.std::__1::basic_string"* %271, %272
  br i1 %287, label %309, label %288

288:                                              ; preds = %277, %303
  %289 = phi %"class.std::__1::basic_string"* [ %305, %303 ], [ %279, %277 ]
  %290 = phi %"class.std::__1::basic_string"* [ %304, %303 ], [ %271, %277 ]
  %291 = bitcast %"class.std::__1::basic_string"* %290 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %292 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %291, i64 0, i32 1, i32 0
  %293 = load i8, i8* %292, align 1
  %294 = icmp slt i8 %293, 0
  br i1 %294, label %298, label %295

295:                                              ; preds = %288
  %296 = bitcast %"class.std::__1::basic_string"* %289 to i8*
  %297 = bitcast %"class.std::__1::basic_string"* %290 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %296, i8* align 8 %297, i64 24, i1 false) #10
  br label %303

298:                                              ; preds = %288
  %299 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %290, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %300 = load i8*, i8** %299, align 8
  %301 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %290, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %302 = load i64, i64* %301, align 8
  call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %289, i8* %300, i64 %302) #10
  br label %303

303:                                              ; preds = %298, %295
  %304 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %290, i64 1
  %305 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %289, i64 1
  %306 = icmp eq %"class.std::__1::basic_string"* %304, %272
  br i1 %306, label %307, label %288

307:                                              ; preds = %303
  %308 = ptrtoint %"class.std::__1::basic_string"* %305 to i64
  br label %309

309:                                              ; preds = %307, %277
  %310 = phi i64 [ %286, %277 ], [ %308, %307 ]
  store i64 %310, i64* %285, align 8
  br label %311

311:                                              ; preds = %261, %309
  store i8 1, i8* %250, align 8
  br label %312

312:                                              ; preds = %254, %256, %311
  %313 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 17
  store i8 1, i8* %313, align 8
  call void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"* nonnull %2) #10
  call void @llvm.lifetime.end.p0i8(i64 208, i8* nonnull %3) #10
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

declare void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"*) unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @_ZN3net9DnsConfigD1Ev(%"struct.net::DnsConfig"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden zeroext i1 @_ZNK3net18DnsConfigOverrides19OverridesEverythingEv(%"struct.net::DnsConfigOverrides"* nocapture readonly) local_unnamed_addr #4 align 2 {
  %2 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %3 = load i8, i8* %2, align 8, !range !2
  %4 = icmp eq i8 %3, 0
  br i1 %4, label %57, label %5

5:                                                ; preds = %1
  %6 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %7 = load i8, i8* %6, align 8, !range !2
  %8 = icmp eq i8 %7, 0
  br i1 %8, label %57, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %11 = load i8, i8* %10, align 1, !range !2
  %12 = icmp eq i8 %11, 0
  br i1 %12, label %57, label %13

13:                                               ; preds = %9
  %14 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %15 = load i8, i8* %14, align 4, !range !2
  %16 = icmp eq i8 %15, 0
  br i1 %16, label %57, label %17

17:                                               ; preds = %13
  %18 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %19 = load i8, i8* %18, align 8, !range !2
  %20 = icmp eq i8 %19, 0
  br i1 %20, label %57, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %23 = load i8, i8* %22, align 4, !range !2
  %24 = icmp eq i8 %23, 0
  br i1 %24, label %57, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %27 = load i8, i8* %26, align 4, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %57, label %29

29:                                               ; preds = %25
  %30 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %31 = load i8, i8* %30, align 1, !range !2
  %32 = icmp eq i8 %31, 0
  br i1 %32, label %57, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %35 = load i8, i8* %34, align 1, !range !2
  %36 = icmp eq i8 %35, 0
  br i1 %36, label %57, label %37

37:                                               ; preds = %33
  %38 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %39 = load i8, i8* %38, align 8, !range !2
  %40 = icmp eq i8 %39, 0
  br i1 %40, label %57, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %43 = load i8, i8* %42, align 4, !range !2
  %44 = icmp eq i8 %43, 0
  br i1 %44, label %57, label %45

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %47 = load i8, i8* %46, align 1, !range !2
  %48 = icmp eq i8 %47, 0
  br i1 %48, label %57, label %49

49:                                               ; preds = %45
  %50 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %51 = load i8, i8* %50, align 8, !range !2
  %52 = icmp eq i8 %51, 0
  br i1 %52, label %57, label %53

53:                                               ; preds = %49
  %54 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %0, i64 0, i32 17
  %55 = load i8, i8* %54, align 8, !range !2
  %56 = icmp ne i8 %55, 0
  br label %57

57:                                               ; preds = %49, %45, %41, %37, %33, %29, %25, %21, %17, %13, %9, %5, %1, %53
  %58 = phi i1 [ false, %49 ], [ false, %45 ], [ false, %41 ], [ false, %37 ], [ false, %33 ], [ false, %29 ], [ false, %25 ], [ false, %21 ], [ false, %17 ], [ false, %13 ], [ false, %9 ], [ false, %5 ], [ false, %1 ], [ %56, %53 ]
  ret i1 %58
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK3net18DnsConfigOverrides14ApplyOverridesERKNS_9DnsConfigE(%"struct.net::DnsConfig"* noalias sret, %"struct.net::DnsConfigOverrides"* readonly, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #0 align 2 {
  %4 = bitcast %"struct.net::DnsConfig"* %0 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %4, i8* align 8 bitcast ({ %"class.std::__1::vector", i8, [7 x i8], %"class.std::__1::basic_string", %"class.std::__1::vector.6", %"class.std::__1::unordered_map", i8, i8, [2 x i8], i32, %"class.base::TimeDelta", i32, i32, i8, i8, [6 x i8], %"class.std::__1::vector.39", i32, i8, [3 x i8], %"class.std::__1::vector.6" }* @__const._ZNK3net18DnsConfigOverrides14ApplyOverridesERKNS_9DnsConfigE.overridden to i8*), i64 208, i1 false)
  tail call void @_ZN3net9DnsConfigC1Ev(%"struct.net::DnsConfig"* %0) #10
  %5 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %6 = load i8, i8* %5, align 8, !range !2
  %7 = icmp eq i8 %6, 0
  br i1 %7, label %60, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %10 = load i8, i8* %9, align 8, !range !2
  %11 = icmp eq i8 %10, 0
  br i1 %11, label %60, label %12

12:                                               ; preds = %8
  %13 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %14 = load i8, i8* %13, align 1, !range !2
  %15 = icmp eq i8 %14, 0
  br i1 %15, label %60, label %16

16:                                               ; preds = %12
  %17 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 4, !range !2
  %19 = icmp eq i8 %18, 0
  br i1 %19, label %60, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %22 = load i8, i8* %21, align 8, !range !2
  %23 = icmp eq i8 %22, 0
  br i1 %23, label %60, label %24

24:                                               ; preds = %20
  %25 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %26 = load i8, i8* %25, align 4, !range !2
  %27 = icmp eq i8 %26, 0
  br i1 %27, label %60, label %28

28:                                               ; preds = %24
  %29 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %30 = load i8, i8* %29, align 4, !range !2
  %31 = icmp eq i8 %30, 0
  br i1 %31, label %60, label %32

32:                                               ; preds = %28
  %33 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %34 = load i8, i8* %33, align 1, !range !2
  %35 = icmp eq i8 %34, 0
  br i1 %35, label %60, label %36

36:                                               ; preds = %32
  %37 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %38 = load i8, i8* %37, align 1, !range !2
  %39 = icmp eq i8 %38, 0
  br i1 %39, label %60, label %40

40:                                               ; preds = %36
  %41 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %42 = load i8, i8* %41, align 8, !range !2
  %43 = icmp eq i8 %42, 0
  br i1 %43, label %60, label %44

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %46 = load i8, i8* %45, align 4, !range !2
  %47 = icmp eq i8 %46, 0
  br i1 %47, label %60, label %48

48:                                               ; preds = %44
  %49 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %50 = load i8, i8* %49, align 1, !range !2
  %51 = icmp eq i8 %50, 0
  br i1 %51, label %60, label %52

52:                                               ; preds = %48
  %53 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %54 = load i8, i8* %53, align 8, !range !2
  %55 = icmp eq i8 %54, 0
  br i1 %55, label %60, label %56

56:                                               ; preds = %52
  %57 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 17
  %58 = load i8, i8* %57, align 8, !range !2
  %59 = icmp eq i8 %58, 0
  br i1 %59, label %60, label %64

60:                                               ; preds = %52, %48, %44, %40, %36, %32, %28, %24, %20, %16, %12, %8, %3, %56
  %61 = tail call dereferenceable(208) %"struct.net::DnsConfig"* @_ZN3net9DnsConfigaSERKS0_(%"struct.net::DnsConfig"* %0, %"struct.net::DnsConfig"* dereferenceable(208) %2) #10
  %62 = load i8, i8* %5, align 8, !range !2
  %63 = icmp eq i8 %62, 0
  br i1 %63, label %73, label %64

64:                                               ; preds = %56, %60
  %65 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0
  %66 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 0
  %67 = icmp eq %"class.std::__1::vector"* %66, %65
  br i1 %67, label %73, label %68

68:                                               ; preds = %64
  %69 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %65, i64 0, i32 0, i32 0
  %70 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %69, align 8
  %71 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %72 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %71, align 8
  tail call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %66, %"class.net::IPEndPoint"* %70, %"class.net::IPEndPoint"* %72) #10
  br label %73

73:                                               ; preds = %60, %68, %64
  %74 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %75 = load i8, i8* %74, align 8, !range !2
  %76 = icmp eq i8 %75, 0
  br i1 %76, label %86, label %77

77:                                               ; preds = %73
  %78 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0
  %79 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 3
  %80 = icmp eq %"class.std::__1::vector.6"* %79, %78
  br i1 %80, label %86, label %81

81:                                               ; preds = %77
  %82 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %78, i64 0, i32 0, i32 0
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %85 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %84, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %79, %"class.std::__1::basic_string"* %83, %"class.std::__1::basic_string"* %85) #10
  br label %86

86:                                               ; preds = %73, %81, %77
  %87 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %88 = load i8, i8* %87, align 1, !range !2
  %89 = icmp eq i8 %88, 0
  br i1 %89, label %94, label %90

90:                                               ; preds = %86
  %91 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 2, i32 0, i32 0, i32 0, i32 1, i32 0
  %92 = load i8, i8* %91, align 1, !range !2
  %93 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 6
  store i8 %92, i8* %93, align 1
  br label %94

94:                                               ; preds = %86, %90
  %95 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0
  %96 = load i8, i8* %95, align 4, !range !2
  %97 = icmp eq i8 %96, 0
  br i1 %97, label %102, label %98

98:                                               ; preds = %94
  %99 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0
  %100 = load i32, i32* %99, align 4
  %101 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 7
  store i32 %100, i32* %101, align 4
  br label %102

102:                                              ; preds = %94, %98
  %103 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %104 = load i8, i8* %103, align 8, !range !2
  %105 = icmp eq i8 %104, 0
  br i1 %105, label %110, label %106

106:                                              ; preds = %102
  %107 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 6, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0
  %108 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 8, i32 0
  %109 = load i64, i64* %107, align 8
  store i64 %109, i64* %108, align 8
  br label %110

110:                                              ; preds = %102, %106
  %111 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 0
  %112 = load i8, i8* %111, align 4, !range !2
  %113 = icmp eq i8 %112, 0
  br i1 %113, label %118, label %114

114:                                              ; preds = %110
  %115 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 7, i32 0, i32 0, i32 0, i32 1, i32 0
  %116 = load i32, i32* %115, align 4
  %117 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 9
  store i32 %116, i32* %117, align 8
  br label %118

118:                                              ; preds = %110, %114
  %119 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 0
  %120 = load i8, i8* %119, align 4, !range !2
  %121 = icmp eq i8 %120, 0
  br i1 %121, label %126, label %122

122:                                              ; preds = %118
  %123 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 8, i32 0, i32 0, i32 0, i32 1, i32 0
  %124 = load i32, i32* %123, align 4
  %125 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 10
  store i32 %124, i32* %125, align 4
  br label %126

126:                                              ; preds = %118, %122
  %127 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 0
  %128 = load i8, i8* %127, align 1, !range !2
  %129 = icmp eq i8 %128, 0
  br i1 %129, label %134, label %130

130:                                              ; preds = %126
  %131 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 9, i32 0, i32 0, i32 0, i32 1, i32 0
  %132 = load i8, i8* %131, align 1, !range !2
  %133 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 11
  store i8 %132, i8* %133, align 8
  br label %134

134:                                              ; preds = %126, %130
  %135 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 0
  %136 = load i8, i8* %135, align 1, !range !2
  %137 = icmp eq i8 %136, 0
  br i1 %137, label %142, label %138

138:                                              ; preds = %134
  %139 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 10, i32 0, i32 0, i32 0, i32 1, i32 0
  %140 = load i8, i8* %139, align 1, !range !2
  %141 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 12
  store i8 %140, i8* %141, align 1
  br label %142

142:                                              ; preds = %134, %138
  %143 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 0
  %144 = load i8, i8* %143, align 8, !range !2
  %145 = icmp eq i8 %144, 0
  br i1 %145, label %155, label %146

146:                                              ; preds = %142
  %147 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0
  %148 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 13
  %149 = icmp eq %"class.std::__1::vector.39"* %148, %147
  br i1 %149, label %155, label %150

150:                                              ; preds = %146
  %151 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %147, i64 0, i32 0, i32 0
  %152 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %151, align 8
  %153 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 12, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %154 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %153, align 8
  tail call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"* %148, %"struct.net::DnsOverHttpsServerConfig"* %152, %"struct.net::DnsOverHttpsServerConfig"* %154) #10
  br label %155

155:                                              ; preds = %142, %150, %146
  %156 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 0
  %157 = load i8, i8* %156, align 4, !range !2
  %158 = icmp eq i8 %157, 0
  br i1 %158, label %163, label %159

159:                                              ; preds = %155
  %160 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 13, i32 0, i32 0, i32 0, i32 1, i32 0
  %161 = load i32, i32* %160, align 4
  %162 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 14
  store i32 %161, i32* %162, align 8
  br label %163

163:                                              ; preds = %155, %159
  %164 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 0
  %165 = load i8, i8* %164, align 1, !range !2
  %166 = icmp eq i8 %165, 0
  br i1 %166, label %171, label %167

167:                                              ; preds = %163
  %168 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 14, i32 0, i32 0, i32 0, i32 1, i32 0
  %169 = load i8, i8* %168, align 1, !range !2
  %170 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 15
  store i8 %169, i8* %170, align 4
  br label %171

171:                                              ; preds = %163, %167
  %172 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 0
  %173 = load i8, i8* %172, align 8, !range !2
  %174 = icmp eq i8 %173, 0
  br i1 %174, label %184, label %175

175:                                              ; preds = %171
  %176 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0
  %177 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 16
  %178 = icmp eq %"class.std::__1::vector.6"* %177, %176
  br i1 %178, label %184, label %179

179:                                              ; preds = %175
  %180 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %176, i64 0, i32 0, i32 0
  %181 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %180, align 8
  %182 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 16, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %183 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %182, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %177, %"class.std::__1::basic_string"* %181, %"class.std::__1::basic_string"* %183) #10
  br label %184

184:                                              ; preds = %171, %179, %175
  %185 = getelementptr inbounds %"struct.net::DnsConfigOverrides", %"struct.net::DnsConfigOverrides"* %1, i64 0, i32 17
  %186 = load i8, i8* %185, align 8, !range !2
  %187 = icmp eq i8 %186, 0
  br i1 %187, label %253, label %188

188:                                              ; preds = %184
  %189 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %190 = load i64, i64* %189, align 8
  %191 = icmp eq i64 %190, 0
  br i1 %191, label %253, label %192

192:                                              ; preds = %188
  %193 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 1, i32 0, i32 0, i32 0
  %194 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %193, align 8
  %195 = icmp eq %"struct.std::__1::__hash_node_base"* %194, null
  br i1 %195, label %213, label %196

196:                                              ; preds = %192, %210
  %197 = phi %"struct.std::__1::__hash_node_base"* [ %199, %210 ], [ %194, %192 ]
  %198 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %197, i64 0, i32 0
  %199 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %198, align 8
  %200 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %197, i64 2
  %201 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %197, i64 6
  %202 = bitcast %"struct.std::__1::__hash_node_base"* %201 to %"class.net::IPAddress"*
  tail call void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"* %202) #10
  %203 = bitcast %"struct.std::__1::__hash_node_base"* %200 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %204 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %203, i64 0, i32 1, i32 0
  %205 = load i8, i8* %204, align 1
  %206 = icmp slt i8 %205, 0
  br i1 %206, label %207, label %210

207:                                              ; preds = %196
  %208 = bitcast %"struct.std::__1::__hash_node_base"* %200 to i8**
  %209 = load i8*, i8** %208, align 8
  tail call void @_ZdlPv(i8* %209) #12
  br label %210

210:                                              ; preds = %207, %196
  %211 = bitcast %"struct.std::__1::__hash_node_base"* %197 to i8*
  tail call void @_ZdlPv(i8* %211) #12
  %212 = icmp eq %"struct.std::__1::__hash_node_base"* %199, null
  br i1 %212, label %213, label %196

213:                                              ; preds = %210, %192
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %193, align 8
  %214 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %215 = load i64, i64* %214, align 8
  %216 = icmp eq i64 %215, 0
  br i1 %216, label %235, label %217

217:                                              ; preds = %213
  %218 = getelementptr inbounds %"struct.net::DnsConfig", %"struct.net::DnsConfig"* %0, i64 0, i32 4, i32 0, i32 0, i32 0, i32 0, i32 0
  %219 = add i64 %215, -1
  %220 = and i64 %215, 3
  %221 = icmp ult i64 %219, 3
  br i1 %221, label %224, label %222

222:                                              ; preds = %217
  %223 = sub i64 %215, %220
  br label %236

224:                                              ; preds = %236, %217
  %225 = phi i64 [ 0, %217 ], [ %250, %236 ]
  %226 = icmp eq i64 %220, 0
  br i1 %226, label %235, label %227

227:                                              ; preds = %224, %227
  %228 = phi i64 [ %232, %227 ], [ %225, %224 ]
  %229 = phi i64 [ %233, %227 ], [ %220, %224 ]
  %230 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %218, align 8
  %231 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %230, i64 %228
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %231, align 8
  %232 = add nuw i64 %228, 1
  %233 = add i64 %229, -1
  %234 = icmp eq i64 %233, 0
  br i1 %234, label %235, label %227, !llvm.loop !4

235:                                              ; preds = %224, %227, %213
  store i64 0, i64* %189, align 8
  br label %253

236:                                              ; preds = %236, %222
  %237 = phi i64 [ 0, %222 ], [ %250, %236 ]
  %238 = phi i64 [ %223, %222 ], [ %251, %236 ]
  %239 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %218, align 8
  %240 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %239, i64 %237
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %240, align 8
  %241 = or i64 %237, 1
  %242 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %218, align 8
  %243 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %242, i64 %241
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %243, align 8
  %244 = or i64 %237, 2
  %245 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %218, align 8
  %246 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %245, i64 %244
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %246, align 8
  %247 = or i64 %237, 3
  %248 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %218, align 8
  %249 = getelementptr inbounds %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %248, i64 %247
  store %"struct.std::__1::__hash_node_base"* null, %"struct.std::__1::__hash_node_base"** %249, align 8
  %250 = add nuw i64 %237, 4
  %251 = add i64 %238, -4
  %252 = icmp eq i64 %251, 0
  br i1 %252, label %224, label %236

253:                                              ; preds = %235, %188, %184
  ret void
}

declare dereferenceable(208) %"struct.net::DnsConfig"* @_ZN3net9DnsConfigaSERKS0_(%"struct.net::DnsConfig"*, %"struct.net::DnsConfig"* dereferenceable(208)) local_unnamed_addr #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #5

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #6

declare void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) unnamed_addr #2

declare void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #7

; Function Attrs: nounwind
declare void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"*) unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional_internal::optional_data"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net10IPEndPointENS2_9allocatorIS5_EEEELb0EEaSERKS9_(%"class.absl::optional_internal::optional_data"*, %"class.absl::optional_internal::optional_data"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %58, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %19, label %12

12:                                               ; preds = %6
  %13 = icmp eq %"class.absl::optional_internal::optional_data"* %0, %1
  br i1 %13, label %80, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %16 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %17, align 8
  tail call void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"* %11, %"class.net::IPEndPoint"* %16, %"class.net::IPEndPoint"* %18) #10
  br label %80

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::vector"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"class.net::IPEndPoint"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 20
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %57, label %29

29:                                               ; preds = %19
  %30 = icmp ugt i64 %27, 922337203685477580
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #11
  unreachable

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 %26) #12
  %35 = bitcast i8* %34 to %"class.net::IPEndPoint"*
  %36 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"class.net::IPEndPoint"** %36 to i8**
  store i8* %34, i8** %37, align 8
  %38 = bitcast %"class.std::__1::vector"* %11 to i8**
  store i8* %34, i8** %38, align 8
  %39 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %35, i64 %27
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.net::IPEndPoint"* %39, %"class.net::IPEndPoint"** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %7, i64 0, i32 0, i32 0
  %42 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %41, align 8
  %43 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %21, align 8
  %44 = bitcast %"class.net::IPEndPoint"** %36 to i64*
  %45 = ptrtoint i8* %34 to i64
  %46 = icmp eq %"class.net::IPEndPoint"* %42, %43
  br i1 %46, label %55, label %47

47:                                               ; preds = %33, %47
  %48 = phi %"class.net::IPEndPoint"* [ %51, %47 ], [ %35, %33 ]
  %49 = phi %"class.net::IPEndPoint"* [ %50, %47 ], [ %42, %33 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %48, %"class.net::IPEndPoint"* dereferenceable(20) %49) #10
  %50 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %49, i64 1
  %51 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %48, i64 1
  %52 = icmp eq %"class.net::IPEndPoint"* %50, %43
  br i1 %52, label %53, label %47

53:                                               ; preds = %47
  %54 = ptrtoint %"class.net::IPEndPoint"* %51 to i64
  br label %55

55:                                               ; preds = %53, %33
  %56 = phi i64 [ %45, %33 ], [ %54, %53 ]
  store i64 %56, i64* %44, align 8
  br label %57

57:                                               ; preds = %19, %55
  store i8 1, i8* %8, align 8
  br label %80

58:                                               ; preds = %2
  %59 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 0
  %60 = load i8, i8* %59, align 8, !range !2
  %61 = icmp eq i8 %60, 0
  br i1 %61, label %80, label %62

62:                                               ; preds = %58
  %63 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %64 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %63, align 8
  %65 = icmp eq %"class.net::IPEndPoint"* %64, null
  br i1 %65, label %79, label %66

66:                                               ; preds = %62
  %67 = getelementptr inbounds %"class.absl::optional_internal::optional_data", %"class.absl::optional_internal::optional_data"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %68 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %67, align 8
  %69 = icmp eq %"class.net::IPEndPoint"* %68, %64
  br i1 %69, label %76, label %70

70:                                               ; preds = %66, %70
  %71 = phi %"class.net::IPEndPoint"* [ %72, %70 ], [ %68, %66 ]
  %72 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %71, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %72) #10
  %73 = icmp eq %"class.net::IPEndPoint"* %72, %64
  br i1 %73, label %74, label %70

74:                                               ; preds = %70
  %75 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %63, align 8
  br label %76

76:                                               ; preds = %74, %66
  %77 = phi %"class.net::IPEndPoint"* [ %75, %74 ], [ %64, %66 ]
  store %"class.net::IPEndPoint"* %64, %"class.net::IPEndPoint"** %67, align 8
  %78 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %78) #12
  br label %79

79:                                               ; preds = %76, %62
  store i8 0, i8* %59, align 8
  br label %80

80:                                               ; preds = %79, %58, %57, %14, %12
  ret %"class.absl::optional_internal::optional_data"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional_internal::optional_data.2"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorINS2_12basic_stringIcNS2_11char_traitsIcEENS2_9allocatorIcEEEENS7_IS9_EEEELb0EEaSERKSC_(%"class.absl::optional_internal::optional_data.2"*, %"class.absl::optional_internal::optional_data.2"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %71, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %19, label %12

12:                                               ; preds = %6
  %13 = icmp eq %"class.absl::optional_internal::optional_data.2"* %0, %1
  br i1 %13, label %103, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %7, i64 0, i32 0, i32 0
  %16 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %17, align 8
  tail call void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"* %11, %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"* %18) #10
  br label %103

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::vector.6"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"class.std::__1::basic_string"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.6"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = sdiv exact i64 %26, 24
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %70, label %29

29:                                               ; preds = %19
  %30 = icmp ugt i64 %27, 768614336404564650
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.6"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #11
  unreachable

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 %26) #12
  %35 = bitcast i8* %34 to %"class.std::__1::basic_string"*
  %36 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"class.std::__1::basic_string"** %36 to i8**
  store i8* %34, i8** %37, align 8
  %38 = bitcast %"class.std::__1::vector.6"* %11 to i8**
  store i8* %34, i8** %38, align 8
  %39 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %35, i64 %27
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"class.std::__1::basic_string"* %39, %"class.std::__1::basic_string"** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %7, i64 0, i32 0, i32 0
  %42 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %41, align 8
  %43 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %21, align 8
  %44 = bitcast %"class.std::__1::basic_string"** %36 to i64*
  %45 = ptrtoint i8* %34 to i64
  %46 = icmp eq %"class.std::__1::basic_string"* %42, %43
  br i1 %46, label %68, label %47

47:                                               ; preds = %33, %62
  %48 = phi %"class.std::__1::basic_string"* [ %64, %62 ], [ %35, %33 ]
  %49 = phi %"class.std::__1::basic_string"* [ %63, %62 ], [ %42, %33 ]
  %50 = bitcast %"class.std::__1::basic_string"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"class.std::__1::basic_string"* %48 to i8*
  %56 = bitcast %"class.std::__1::basic_string"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #10
  br label %62

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %59 = load i8*, i8** %58, align 8
  %60 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %48, i8* %59, i64 %61) #10
  br label %62

62:                                               ; preds = %57, %54
  %63 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %49, i64 1
  %64 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %48, i64 1
  %65 = icmp eq %"class.std::__1::basic_string"* %63, %43
  br i1 %65, label %66, label %47

66:                                               ; preds = %62
  %67 = ptrtoint %"class.std::__1::basic_string"* %64 to i64
  br label %68

68:                                               ; preds = %66, %33
  %69 = phi i64 [ %45, %33 ], [ %67, %66 ]
  store i64 %69, i64* %44, align 8
  br label %70

70:                                               ; preds = %19, %68
  store i8 1, i8* %8, align 8
  br label %103

71:                                               ; preds = %2
  %72 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %0, i64 0, i32 0, i32 0, i32 0
  %73 = load i8, i8* %72, align 8, !range !2
  %74 = icmp eq i8 %73, 0
  br i1 %74, label %103, label %75

75:                                               ; preds = %71
  %76 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %77 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %76, i64 0, i32 0, i32 0
  %78 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %77, align 8
  %79 = icmp eq %"class.std::__1::basic_string"* %78, null
  br i1 %79, label %102, label %80

80:                                               ; preds = %75
  %81 = bitcast %"class.std::__1::basic_string"* %78 to i8*
  %82 = getelementptr inbounds %"class.absl::optional_internal::optional_data.2", %"class.absl::optional_internal::optional_data.2"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %83 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %82, align 8
  %84 = icmp eq %"class.std::__1::basic_string"* %83, %78
  br i1 %84, label %100, label %85

85:                                               ; preds = %80, %95
  %86 = phi %"class.std::__1::basic_string"* [ %87, %95 ], [ %83, %80 ]
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %86, i64 -1
  %88 = bitcast %"class.std::__1::basic_string"* %87 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %89 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %88, i64 0, i32 1, i32 0
  %90 = load i8, i8* %89, align 1
  %91 = icmp slt i8 %90, 0
  br i1 %91, label %92, label %95

92:                                               ; preds = %85
  %93 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %87, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %94 = load i8*, i8** %93, align 8
  tail call void @_ZdlPv(i8* %94) #12
  br label %95

95:                                               ; preds = %92, %85
  %96 = icmp eq %"class.std::__1::basic_string"* %87, %78
  br i1 %96, label %97, label %85

97:                                               ; preds = %95
  %98 = bitcast %"class.std::__1::vector.6"* %76 to i8**
  %99 = load i8*, i8** %98, align 8
  br label %100

100:                                              ; preds = %97, %80
  %101 = phi i8* [ %99, %97 ], [ %81, %80 ]
  store %"class.std::__1::basic_string"* %78, %"class.std::__1::basic_string"** %82, align 8
  tail call void @_ZdlPv(i8* %101) #12
  br label %102

102:                                              ; preds = %100, %75
  store i8 0, i8* %72, align 8
  br label %103

103:                                              ; preds = %102, %71, %70, %14, %12
  ret %"class.absl::optional_internal::optional_data.2"* %0
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(32) %"class.absl::optional_internal::optional_data.35"* @_ZN4absl17optional_internal13optional_dataINSt3__16vectorIN3net24DnsOverHttpsServerConfigENS2_9allocatorIS5_EEEELb0EEaSERKS9_(%"class.absl::optional_internal::optional_data.35"*, %"class.absl::optional_internal::optional_data.35"* dereferenceable(32)) local_unnamed_addr #0 comdat align 2 {
  %3 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %1, i64 0, i32 0, i32 0, i32 0
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %75, label %6

6:                                                ; preds = %2
  %7 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %1, i64 0, i32 0, i32 0, i32 1, i32 0
  %8 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %0, i64 0, i32 0, i32 0, i32 0
  %9 = load i8, i8* %8, align 8, !range !2
  %10 = icmp eq i8 %9, 0
  %11 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  br i1 %10, label %19, label %12

12:                                               ; preds = %6
  %13 = icmp eq %"class.absl::optional_internal::optional_data.35"* %0, %1
  br i1 %13, label %107, label %14

14:                                               ; preds = %12
  %15 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %7, i64 0, i32 0, i32 0
  %16 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %15, align 8
  %17 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %18 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %17, align 8
  tail call void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"* %11, %"struct.net::DnsOverHttpsServerConfig"* %16, %"struct.net::DnsOverHttpsServerConfig"* %18) #10
  br label %107

19:                                               ; preds = %6
  %20 = bitcast %"class.std::__1::vector.39"* %11 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %20, i8 0, i64 24, i1 false) #10
  %21 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %1, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %22 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %21 to i64*
  %23 = load i64, i64* %22, align 8
  %24 = bitcast %"class.std::__1::vector.39"* %7 to i64*
  %25 = load i64, i64* %24, align 8
  %26 = sub i64 %23, %25
  %27 = ashr exact i64 %26, 5
  %28 = icmp eq i64 %26, 0
  br i1 %28, label %74, label %29

29:                                               ; preds = %19
  %30 = icmp ugt i64 %27, 576460752303423487
  br i1 %30, label %31, label %33

31:                                               ; preds = %29
  %32 = bitcast %"class.std::__1::vector.39"* %11 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %32) #11
  unreachable

33:                                               ; preds = %29
  %34 = tail call i8* @_Znwm(i64 %26) #12
  %35 = bitcast i8* %34 to %"struct.net::DnsOverHttpsServerConfig"*
  %36 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %37 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %36 to i8**
  store i8* %34, i8** %37, align 8
  %38 = bitcast %"class.std::__1::vector.39"* %11 to i8**
  store i8* %34, i8** %38, align 8
  %39 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %35, i64 %27
  %40 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 2, i32 0, i32 0
  store %"struct.net::DnsOverHttpsServerConfig"* %39, %"struct.net::DnsOverHttpsServerConfig"** %40, align 8
  %41 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %7, i64 0, i32 0, i32 0
  %42 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %41, align 8
  %43 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %21, align 8
  %44 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %36 to i64*
  %45 = ptrtoint i8* %34 to i64
  %46 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %42, %43
  br i1 %46, label %72, label %47

47:                                               ; preds = %33, %63
  %48 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %68, %63 ], [ %35, %33 ]
  %49 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %67, %63 ], [ %42, %33 ]
  %50 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %49 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %51 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %50, i64 0, i32 1, i32 0
  %52 = load i8, i8* %51, align 1
  %53 = icmp slt i8 %52, 0
  br i1 %53, label %57, label %54

54:                                               ; preds = %47
  %55 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %48 to i8*
  %56 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %49 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %55, i8* align 8 %56, i64 24, i1 false) #10
  br label %63

57:                                               ; preds = %47
  %58 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 0, i32 0
  %59 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %60 = load i8*, i8** %59, align 8
  %61 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %49, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %62 = load i64, i64* %61, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %58, i8* %60, i64 %62) #10
  br label %63

63:                                               ; preds = %57, %54
  %64 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 0, i32 1
  %65 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %49, i64 0, i32 1
  %66 = load i8, i8* %65, align 8, !range !2
  store i8 %66, i8* %64, align 8
  %67 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %49, i64 1
  %68 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %48, i64 1
  %69 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %67, %43
  br i1 %69, label %70, label %47

70:                                               ; preds = %63
  %71 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %68 to i64
  br label %72

72:                                               ; preds = %70, %33
  %73 = phi i64 [ %45, %33 ], [ %71, %70 ]
  store i64 %73, i64* %44, align 8
  br label %74

74:                                               ; preds = %19, %72
  store i8 1, i8* %8, align 8
  br label %107

75:                                               ; preds = %2
  %76 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %0, i64 0, i32 0, i32 0, i32 0
  %77 = load i8, i8* %76, align 8, !range !2
  %78 = icmp eq i8 %77, 0
  br i1 %78, label %107, label %79

79:                                               ; preds = %75
  %80 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %0, i64 0, i32 0, i32 0, i32 1, i32 0
  %81 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %80, i64 0, i32 0, i32 0
  %82 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %81, align 8
  %83 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %82, null
  br i1 %83, label %106, label %84

84:                                               ; preds = %79
  %85 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %82 to i8*
  %86 = getelementptr inbounds %"class.absl::optional_internal::optional_data.35", %"class.absl::optional_internal::optional_data.35"* %0, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 1
  %87 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %86, align 8
  %88 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %87, %82
  br i1 %88, label %104, label %89

89:                                               ; preds = %84, %99
  %90 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %91, %99 ], [ %87, %84 ]
  %91 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %90, i64 -1
  %92 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %91 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %93 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %92, i64 0, i32 1, i32 0
  %94 = load i8, i8* %93, align 1
  %95 = icmp slt i8 %94, 0
  br i1 %95, label %96, label %99

96:                                               ; preds = %89
  %97 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %91, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %98 = load i8*, i8** %97, align 8
  tail call void @_ZdlPv(i8* %98) #12
  br label %99

99:                                               ; preds = %96, %89
  %100 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %91, %82
  br i1 %100, label %101, label %89

101:                                              ; preds = %99
  %102 = bitcast %"class.std::__1::vector.39"* %80 to i8**
  %103 = load i8*, i8** %102, align 8
  br label %104

104:                                              ; preds = %101, %84
  %105 = phi i8* [ %103, %101 ], [ %85, %84 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %82, %"struct.net::DnsOverHttpsServerConfig"** %86, align 8
  tail call void @_ZdlPv(i8* %105) #12
  br label %106

106:                                              ; preds = %104, %79
  store i8 0, i8* %76, align 8
  br label %107

107:                                              ; preds = %106, %75, %74, %14, %12
  ret %"class.absl::optional_internal::optional_data.35"* %0
}

declare zeroext i1 @_ZNK3net10IPEndPointeqERKS0_(%"class.net::IPEndPoint"*, %"class.net::IPEndPoint"* dereferenceable(20)) local_unnamed_addr #2

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #8

declare zeroext i1 @_ZNK3net24DnsOverHttpsServerConfigeqERKS0_(%"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"* dereferenceable(32)) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net10IPEndPointENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector"*, %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.net::IPEndPoint"* %2 to i64
  %5 = ptrtoint %"class.net::IPEndPoint"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 20
  %8 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.net::IPEndPoint"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 20
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.net::IPEndPoint"*
  br i1 %15, label %58, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.net::IPEndPoint"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 20
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 %22
  %25 = select i1 %23, %"class.net::IPEndPoint"* %24, %"class.net::IPEndPoint"* %2
  %26 = ptrtoint %"class.net::IPEndPoint"* %25 to i64
  %27 = sub i64 %26, %5
  %28 = sdiv exact i64 %27, 20
  %29 = icmp eq i64 %27, 0
  br i1 %29, label %33, label %30

30:                                               ; preds = %17
  %31 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %16, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  %32 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @llvm.memmove.p0i8.p0i8.i64(i8* align 2 %31, i8* align 2 %32, i64 %27, i1 false) #10
  br label %33

33:                                               ; preds = %17, %30
  %34 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %16, i64 %28
  br i1 %23, label %35, label %50

35:                                               ; preds = %33
  %36 = load i64, i64* %19, align 8
  %37 = icmp eq %"class.net::IPEndPoint"* %25, %2
  br i1 %37, label %48, label %38

38:                                               ; preds = %35
  %39 = inttoptr i64 %36 to %"class.net::IPEndPoint"*
  br label %40

40:                                               ; preds = %40, %38
  %41 = phi %"class.net::IPEndPoint"* [ %44, %40 ], [ %39, %38 ]
  %42 = phi %"class.net::IPEndPoint"* [ %43, %40 ], [ %24, %38 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %41, %"class.net::IPEndPoint"* dereferenceable(20) %42) #10
  %43 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %42, i64 1
  %44 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %41, i64 1
  %45 = icmp eq %"class.net::IPEndPoint"* %43, %2
  br i1 %45, label %46, label %40

46:                                               ; preds = %40
  %47 = ptrtoint %"class.net::IPEndPoint"* %44 to i64
  br label %48

48:                                               ; preds = %35, %46
  %49 = phi i64 [ %36, %35 ], [ %47, %46 ]
  store i64 %49, i64* %19, align 8
  br label %109

50:                                               ; preds = %33
  %51 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %18, align 8
  %52 = icmp eq %"class.net::IPEndPoint"* %51, %34
  br i1 %52, label %57, label %53

53:                                               ; preds = %50, %53
  %54 = phi %"class.net::IPEndPoint"* [ %55, %53 ], [ %51, %50 ]
  %55 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %54, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %55) #10
  %56 = icmp eq %"class.net::IPEndPoint"* %55, %34
  br i1 %56, label %57, label %53

57:                                               ; preds = %53, %50
  store %"class.net::IPEndPoint"* %34, %"class.net::IPEndPoint"** %18, align 8
  br label %109

58:                                               ; preds = %3
  %59 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 0
  %60 = icmp eq i64 %12, 0
  br i1 %60, label %75, label %61

61:                                               ; preds = %58
  %62 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %63 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %62, align 8
  %64 = icmp eq %"class.net::IPEndPoint"* %63, %16
  br i1 %64, label %71, label %65

65:                                               ; preds = %61, %65
  %66 = phi %"class.net::IPEndPoint"* [ %67, %65 ], [ %63, %61 ]
  %67 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %66, i64 -1
  tail call void @_ZN3net10IPEndPointD1Ev(%"class.net::IPEndPoint"* %67) #10
  %68 = icmp eq %"class.net::IPEndPoint"* %67, %16
  br i1 %68, label %69, label %65

69:                                               ; preds = %65
  %70 = load %"class.net::IPEndPoint"*, %"class.net::IPEndPoint"** %59, align 8
  br label %71

71:                                               ; preds = %69, %61
  %72 = phi %"class.net::IPEndPoint"* [ %70, %69 ], [ %16, %61 ]
  store %"class.net::IPEndPoint"* %16, %"class.net::IPEndPoint"** %62, align 8
  %73 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %72, i64 0, i32 0, i32 0, i32 0, i32 0, i64 0
  tail call void @_ZdlPv(i8* %73) #12
  %74 = bitcast %"class.std::__1::vector"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %74, i8 0, i64 24, i1 false) #10
  br label %75

75:                                               ; preds = %58, %71
  %76 = phi i64 [ %10, %58 ], [ 0, %71 ]
  %77 = icmp ugt i64 %7, 922337203685477580
  br i1 %77, label %78, label %80

78:                                               ; preds = %75
  %79 = bitcast %"class.std::__1::vector"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %79) #11
  unreachable

80:                                               ; preds = %75
  %81 = sdiv exact i64 %76, 20
  %82 = icmp ult i64 %81, 461168601842738790
  br i1 %82, label %83, label %87

83:                                               ; preds = %80
  %84 = shl nsw i64 %81, 1
  %85 = icmp ult i64 %84, %7
  %86 = select i1 %85, i64 %7, i64 %84
  br label %87

87:                                               ; preds = %83, %80
  %88 = phi i64 [ %86, %83 ], [ 922337203685477580, %80 ]
  %89 = mul i64 %88, 20
  %90 = tail call i8* @_Znwm(i64 %89) #12
  %91 = bitcast i8* %90 to %"class.net::IPEndPoint"*
  %92 = getelementptr inbounds %"class.std::__1::vector", %"class.std::__1::vector"* %0, i64 0, i32 0, i32 1
  %93 = bitcast %"class.net::IPEndPoint"** %92 to i8**
  store i8* %90, i8** %93, align 8
  %94 = bitcast %"class.std::__1::vector"* %0 to i8**
  store i8* %90, i8** %94, align 8
  %95 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %91, i64 %88
  store %"class.net::IPEndPoint"* %95, %"class.net::IPEndPoint"** %8, align 8
  %96 = bitcast %"class.net::IPEndPoint"** %92 to i64*
  %97 = ptrtoint i8* %90 to i64
  %98 = icmp eq %"class.net::IPEndPoint"* %1, %2
  br i1 %98, label %107, label %99

99:                                               ; preds = %87, %99
  %100 = phi %"class.net::IPEndPoint"* [ %103, %99 ], [ %91, %87 ]
  %101 = phi %"class.net::IPEndPoint"* [ %102, %99 ], [ %1, %87 ]
  tail call void @_ZN3net10IPEndPointC1ERKS0_(%"class.net::IPEndPoint"* %100, %"class.net::IPEndPoint"* dereferenceable(20) %101) #10
  %102 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %101, i64 1
  %103 = getelementptr inbounds %"class.net::IPEndPoint", %"class.net::IPEndPoint"* %100, i64 1
  %104 = icmp eq %"class.net::IPEndPoint"* %102, %2
  br i1 %104, label %105, label %99

105:                                              ; preds = %99
  %106 = ptrtoint %"class.net::IPEndPoint"* %103 to i64
  br label %107

107:                                              ; preds = %87, %105
  %108 = phi i64 [ %97, %87 ], [ %106, %105 ]
  store i64 %108, i64* %96, align 8
  br label %109

109:                                              ; preds = %48, %57, %107
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memmove.p0i8.p0i8.i64(i8* nocapture, i8* nocapture readonly, i64, i1 immarg) #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_12basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEEENS4_IS6_EEE6assignIPS6_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS6_NS_15iterator_traitsISC_E9referenceEEE5valueEvE4typeESC_SC_(%"class.std::__1::vector.6"*, %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"class.std::__1::basic_string"* %2 to i64
  %5 = ptrtoint %"class.std::__1::basic_string"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = sdiv exact i64 %6, 24
  %8 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"class.std::__1::basic_string"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.6"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = sdiv exact i64 %13, 24
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"class.std::__1::basic_string"*
  br i1 %15, label %110, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"class.std::__1::basic_string"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = sdiv exact i64 %21, 24
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %1, i64 %22
  %25 = select i1 %23, %"class.std::__1::basic_string"* %24, %"class.std::__1::basic_string"* %2
  %26 = icmp eq %"class.std::__1::basic_string"* %25, %1
  br i1 %26, label %64, label %27

27:                                               ; preds = %17, %60
  %28 = phi %"class.std::__1::basic_string"* [ %62, %60 ], [ %16, %17 ]
  %29 = phi %"class.std::__1::basic_string"* [ %61, %60 ], [ %1, %17 ]
  %30 = icmp eq %"class.std::__1::basic_string"* %28, %29
  br i1 %30, label %60, label %31

31:                                               ; preds = %27
  %32 = bitcast %"class.std::__1::basic_string"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %33 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %32, i64 0, i32 1, i32 0
  %34 = load i8, i8* %33, align 1
  %35 = icmp slt i8 %34, 0
  %36 = bitcast %"class.std::__1::basic_string"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %37 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %36, i64 0, i32 1, i32 0
  %38 = load i8, i8* %37, align 1
  %39 = icmp slt i8 %38, 0
  br i1 %35, label %50, label %40

40:                                               ; preds = %31
  br i1 %39, label %44, label %41

41:                                               ; preds = %40
  %42 = bitcast %"class.std::__1::basic_string"* %28 to i8*
  %43 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %42, i8* align 8 %43, i64 24, i1 false) #10
  br label %60

44:                                               ; preds = %40
  %45 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %46 = load i8*, i8** %45, align 8
  %47 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %48 = load i64, i64* %47, align 8
  %49 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %46, i64 %48) #10
  br label %60

50:                                               ; preds = %31
  %51 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load i8*, i8** %51, align 8
  %53 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %54 = load i64, i64* %53, align 8
  %55 = bitcast %"class.std::__1::basic_string"* %29 to i8*
  %56 = zext i8 %38 to i64
  %57 = select i1 %39, i8* %52, i8* %55
  %58 = select i1 %39, i64 %54, i64 %56
  %59 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %28, i8* %57, i64 %58) #10
  br label %60

60:                                               ; preds = %50, %44, %41, %27
  %61 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %29, i64 1
  %62 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %28, i64 1
  %63 = icmp eq %"class.std::__1::basic_string"* %61, %25
  br i1 %63, label %64, label %27

64:                                               ; preds = %60, %17
  %65 = phi %"class.std::__1::basic_string"* [ %16, %17 ], [ %62, %60 ]
  br i1 %23, label %66, label %94

66:                                               ; preds = %64
  %67 = load i64, i64* %19, align 8
  %68 = icmp eq %"class.std::__1::basic_string"* %25, %2
  br i1 %68, label %92, label %69

69:                                               ; preds = %66
  %70 = inttoptr i64 %67 to %"class.std::__1::basic_string"*
  br label %71

71:                                               ; preds = %86, %69
  %72 = phi %"class.std::__1::basic_string"* [ %88, %86 ], [ %70, %69 ]
  %73 = phi %"class.std::__1::basic_string"* [ %87, %86 ], [ %24, %69 ]
  %74 = bitcast %"class.std::__1::basic_string"* %73 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %75 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %74, i64 0, i32 1, i32 0
  %76 = load i8, i8* %75, align 1
  %77 = icmp slt i8 %76, 0
  br i1 %77, label %81, label %78

78:                                               ; preds = %71
  %79 = bitcast %"class.std::__1::basic_string"* %72 to i8*
  %80 = bitcast %"class.std::__1::basic_string"* %73 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %79, i8* align 8 %80, i64 24, i1 false) #10
  br label %86

81:                                               ; preds = %71
  %82 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %83 = load i8*, i8** %82, align 8
  %84 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %85 = load i64, i64* %84, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %72, i8* %83, i64 %85) #10
  br label %86

86:                                               ; preds = %81, %78
  %87 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %73, i64 1
  %88 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %72, i64 1
  %89 = icmp eq %"class.std::__1::basic_string"* %87, %2
  br i1 %89, label %90, label %71

90:                                               ; preds = %86
  %91 = ptrtoint %"class.std::__1::basic_string"* %88 to i64
  br label %92

92:                                               ; preds = %66, %90
  %93 = phi i64 [ %67, %66 ], [ %91, %90 ]
  store i64 %93, i64* %19, align 8
  br label %182

94:                                               ; preds = %64
  %95 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %18, align 8
  %96 = icmp eq %"class.std::__1::basic_string"* %95, %65
  br i1 %96, label %109, label %97

97:                                               ; preds = %94, %107
  %98 = phi %"class.std::__1::basic_string"* [ %99, %107 ], [ %95, %94 ]
  %99 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %98, i64 -1
  %100 = bitcast %"class.std::__1::basic_string"* %99 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %101 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %100, i64 0, i32 1, i32 0
  %102 = load i8, i8* %101, align 1
  %103 = icmp slt i8 %102, 0
  br i1 %103, label %104, label %107

104:                                              ; preds = %97
  %105 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %99, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %106 = load i8*, i8** %105, align 8
  tail call void @_ZdlPv(i8* %106) #12
  br label %107

107:                                              ; preds = %104, %97
  %108 = icmp eq %"class.std::__1::basic_string"* %99, %65
  br i1 %108, label %109, label %97

109:                                              ; preds = %107, %94
  store %"class.std::__1::basic_string"* %65, %"class.std::__1::basic_string"** %18, align 8
  br label %182

110:                                              ; preds = %3
  %111 = icmp eq i64 %12, 0
  br i1 %111, label %135, label %112

112:                                              ; preds = %110
  %113 = inttoptr i64 %12 to i8*
  %114 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %115 = load %"class.std::__1::basic_string"*, %"class.std::__1::basic_string"** %114, align 8
  %116 = icmp eq %"class.std::__1::basic_string"* %115, %16
  br i1 %116, label %132, label %117

117:                                              ; preds = %112, %127
  %118 = phi %"class.std::__1::basic_string"* [ %119, %127 ], [ %115, %112 ]
  %119 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %118, i64 -1
  %120 = bitcast %"class.std::__1::basic_string"* %119 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %121 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %120, i64 0, i32 1, i32 0
  %122 = load i8, i8* %121, align 1
  %123 = icmp slt i8 %122, 0
  br i1 %123, label %124, label %127

124:                                              ; preds = %117
  %125 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %119, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %126 = load i8*, i8** %125, align 8
  tail call void @_ZdlPv(i8* %126) #12
  br label %127

127:                                              ; preds = %124, %117
  %128 = icmp eq %"class.std::__1::basic_string"* %119, %16
  br i1 %128, label %129, label %117

129:                                              ; preds = %127
  %130 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  %131 = load i8*, i8** %130, align 8
  br label %132

132:                                              ; preds = %129, %112
  %133 = phi i8* [ %131, %129 ], [ %113, %112 ]
  store %"class.std::__1::basic_string"* %16, %"class.std::__1::basic_string"** %114, align 8
  tail call void @_ZdlPv(i8* %133) #12
  %134 = bitcast %"class.std::__1::vector.6"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %134, i8 0, i64 24, i1 false) #10
  br label %135

135:                                              ; preds = %110, %132
  %136 = phi i64 [ %10, %110 ], [ 0, %132 ]
  %137 = icmp ugt i64 %7, 768614336404564650
  br i1 %137, label %138, label %140

138:                                              ; preds = %135
  %139 = bitcast %"class.std::__1::vector.6"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %139) #11
  unreachable

140:                                              ; preds = %135
  %141 = sdiv exact i64 %136, 24
  %142 = icmp ult i64 %141, 384307168202282325
  br i1 %142, label %143, label %147

143:                                              ; preds = %140
  %144 = shl nsw i64 %141, 1
  %145 = icmp ult i64 %144, %7
  %146 = select i1 %145, i64 %7, i64 %144
  br label %147

147:                                              ; preds = %143, %140
  %148 = phi i64 [ %146, %143 ], [ 768614336404564650, %140 ]
  %149 = mul i64 %148, 24
  %150 = tail call i8* @_Znwm(i64 %149) #12
  %151 = bitcast i8* %150 to %"class.std::__1::basic_string"*
  %152 = getelementptr inbounds %"class.std::__1::vector.6", %"class.std::__1::vector.6"* %0, i64 0, i32 0, i32 1
  %153 = bitcast %"class.std::__1::basic_string"** %152 to i8**
  store i8* %150, i8** %153, align 8
  %154 = bitcast %"class.std::__1::vector.6"* %0 to i8**
  store i8* %150, i8** %154, align 8
  %155 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %151, i64 %148
  store %"class.std::__1::basic_string"* %155, %"class.std::__1::basic_string"** %8, align 8
  %156 = bitcast %"class.std::__1::basic_string"** %152 to i64*
  %157 = ptrtoint i8* %150 to i64
  %158 = icmp eq %"class.std::__1::basic_string"* %1, %2
  br i1 %158, label %180, label %159

159:                                              ; preds = %147, %174
  %160 = phi %"class.std::__1::basic_string"* [ %176, %174 ], [ %151, %147 ]
  %161 = phi %"class.std::__1::basic_string"* [ %175, %174 ], [ %1, %147 ]
  %162 = bitcast %"class.std::__1::basic_string"* %161 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %163 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %162, i64 0, i32 1, i32 0
  %164 = load i8, i8* %163, align 1
  %165 = icmp slt i8 %164, 0
  br i1 %165, label %169, label %166

166:                                              ; preds = %159
  %167 = bitcast %"class.std::__1::basic_string"* %160 to i8*
  %168 = bitcast %"class.std::__1::basic_string"* %161 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %167, i8* align 8 %168, i64 24, i1 false) #10
  br label %174

169:                                              ; preds = %159
  %170 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %171 = load i8*, i8** %170, align 8
  %172 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %173 = load i64, i64* %172, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %160, i8* %171, i64 %173) #10
  br label %174

174:                                              ; preds = %169, %166
  %175 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %161, i64 1
  %176 = getelementptr inbounds %"class.std::__1::basic_string", %"class.std::__1::basic_string"* %160, i64 1
  %177 = icmp eq %"class.std::__1::basic_string"* %175, %2
  br i1 %177, label %178, label %159

178:                                              ; preds = %174
  %179 = ptrtoint %"class.std::__1::basic_string"* %176 to i64
  br label %180

180:                                              ; preds = %147, %178
  %181 = phi i64 [ %157, %147 ], [ %179, %178 ]
  store i64 %181, i64* %156, align 8
  br label %182

182:                                              ; preds = %92, %109, %180
  ret void
}

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

declare dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"*, i8*, i64) local_unnamed_addr #2

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorIN3net24DnsOverHttpsServerConfigENS_9allocatorIS2_EEE6assignIPS2_EENS_9enable_ifIXaasr27__is_cpp17_forward_iteratorIT_EE5valuesr16is_constructibleIS2_NS_15iterator_traitsIS9_E9referenceEEE5valueEvE4typeES9_S9_(%"class.std::__1::vector.39"*, %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"*) local_unnamed_addr #0 comdat align 2 {
  %4 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %2 to i64
  %5 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %1 to i64
  %6 = sub i64 %4, %5
  %7 = ashr exact i64 %6, 5
  %8 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %9 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.39"* %0 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 5
  %15 = icmp ugt i64 %7, %14
  %16 = inttoptr i64 %12 to %"struct.net::DnsOverHttpsServerConfig"*
  br i1 %15, label %118, label %17

17:                                               ; preds = %3
  %18 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %19 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %18 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = sub i64 %20, %12
  %22 = ashr exact i64 %21, 5
  %23 = icmp ugt i64 %7, %22
  %24 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %1, i64 %22
  %25 = select i1 %23, %"struct.net::DnsOverHttpsServerConfig"* %24, %"struct.net::DnsOverHttpsServerConfig"* %2
  %26 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %25, %1
  br i1 %26, label %68, label %27

27:                                               ; preds = %17, %61
  %28 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %66, %61 ], [ %16, %17 ]
  %29 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %65, %61 ], [ %1, %17 ]
  %30 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 0, i32 0
  %31 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %28, %29
  br i1 %31, label %61, label %32

32:                                               ; preds = %27
  %33 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %28 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %34 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %33, i64 0, i32 1, i32 0
  %35 = load i8, i8* %34, align 1
  %36 = icmp slt i8 %35, 0
  %37 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %29 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %38 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %37, i64 0, i32 1, i32 0
  %39 = load i8, i8* %38, align 1
  %40 = icmp slt i8 %39, 0
  br i1 %36, label %51, label %41

41:                                               ; preds = %32
  br i1 %40, label %45, label %42

42:                                               ; preds = %41
  %43 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %28 to i8*
  %44 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %29 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %43, i8* align 8 %44, i64 24, i1 false) #10
  br label %61

45:                                               ; preds = %41
  %46 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %47 = load i8*, i8** %46, align 8
  %48 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %49 = load i64, i64* %48, align 8
  %50 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb1EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %47, i64 %49) #10
  br label %61

51:                                               ; preds = %32
  %52 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %53 = load i8*, i8** %52, align 8
  %54 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %55 = load i64, i64* %54, align 8
  %56 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %29 to i8*
  %57 = zext i8 %39 to i64
  %58 = select i1 %40, i8* %53, i8* %56
  %59 = select i1 %40, i64 %55, i64 %57
  %60 = tail call dereferenceable(24) %"class.std::__1::basic_string"* @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE17__assign_no_aliasILb0EEERS5_PKcm(%"class.std::__1::basic_string"* %30, i8* %58, i64 %59) #10
  br label %61

61:                                               ; preds = %51, %45, %42, %27
  %62 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 0, i32 1
  %63 = load i8, i8* %62, align 8, !range !2
  %64 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 0, i32 1
  store i8 %63, i8* %64, align 8
  %65 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %29, i64 1
  %66 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %28, i64 1
  %67 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %65, %25
  br i1 %67, label %68, label %27

68:                                               ; preds = %61, %17
  %69 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %16, %17 ], [ %66, %61 ]
  br i1 %23, label %70, label %102

70:                                               ; preds = %68
  %71 = load i64, i64* %19, align 8
  %72 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %25, %2
  br i1 %72, label %100, label %73

73:                                               ; preds = %70
  %74 = inttoptr i64 %71 to %"struct.net::DnsOverHttpsServerConfig"*
  br label %75

75:                                               ; preds = %91, %73
  %76 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %96, %91 ], [ %74, %73 ]
  %77 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %95, %91 ], [ %24, %73 ]
  %78 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %77 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %79 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %78, i64 0, i32 1, i32 0
  %80 = load i8, i8* %79, align 1
  %81 = icmp slt i8 %80, 0
  br i1 %81, label %85, label %82

82:                                               ; preds = %75
  %83 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %76 to i8*
  %84 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %77 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %83, i8* align 8 %84, i64 24, i1 false) #10
  br label %91

85:                                               ; preds = %75
  %86 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %76, i64 0, i32 0
  %87 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %88 = load i8*, i8** %87, align 8
  %89 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %90 = load i64, i64* %89, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %86, i8* %88, i64 %90) #10
  br label %91

91:                                               ; preds = %85, %82
  %92 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %76, i64 0, i32 1
  %93 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 0, i32 1
  %94 = load i8, i8* %93, align 8, !range !2
  store i8 %94, i8* %92, align 8
  %95 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %77, i64 1
  %96 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %76, i64 1
  %97 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %95, %2
  br i1 %97, label %98, label %75

98:                                               ; preds = %91
  %99 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %96 to i64
  br label %100

100:                                              ; preds = %70, %98
  %101 = phi i64 [ %71, %70 ], [ %99, %98 ]
  store i64 %101, i64* %19, align 8
  br label %197

102:                                              ; preds = %68
  %103 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %18, align 8
  %104 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %103, %69
  br i1 %104, label %117, label %105

105:                                              ; preds = %102, %115
  %106 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %107, %115 ], [ %103, %102 ]
  %107 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %106, i64 -1
  %108 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %107 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %109 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %108, i64 0, i32 1, i32 0
  %110 = load i8, i8* %109, align 1
  %111 = icmp slt i8 %110, 0
  br i1 %111, label %112, label %115

112:                                              ; preds = %105
  %113 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %107, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %114 = load i8*, i8** %113, align 8
  tail call void @_ZdlPv(i8* %114) #12
  br label %115

115:                                              ; preds = %112, %105
  %116 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %107, %69
  br i1 %116, label %117, label %105

117:                                              ; preds = %115, %102
  store %"struct.net::DnsOverHttpsServerConfig"* %69, %"struct.net::DnsOverHttpsServerConfig"** %18, align 8
  br label %197

118:                                              ; preds = %3
  %119 = icmp eq i64 %12, 0
  br i1 %119, label %143, label %120

120:                                              ; preds = %118
  %121 = inttoptr i64 %12 to i8*
  %122 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %123 = load %"struct.net::DnsOverHttpsServerConfig"*, %"struct.net::DnsOverHttpsServerConfig"** %122, align 8
  %124 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %123, %16
  br i1 %124, label %140, label %125

125:                                              ; preds = %120, %135
  %126 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %127, %135 ], [ %123, %120 ]
  %127 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %126, i64 -1
  %128 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %127 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %129 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %128, i64 0, i32 1, i32 0
  %130 = load i8, i8* %129, align 1
  %131 = icmp slt i8 %130, 0
  br i1 %131, label %132, label %135

132:                                              ; preds = %125
  %133 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %127, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %134 = load i8*, i8** %133, align 8
  tail call void @_ZdlPv(i8* %134) #12
  br label %135

135:                                              ; preds = %132, %125
  %136 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %127, %16
  br i1 %136, label %137, label %125

137:                                              ; preds = %135
  %138 = bitcast %"class.std::__1::vector.39"* %0 to i8**
  %139 = load i8*, i8** %138, align 8
  br label %140

140:                                              ; preds = %137, %120
  %141 = phi i8* [ %139, %137 ], [ %121, %120 ]
  store %"struct.net::DnsOverHttpsServerConfig"* %16, %"struct.net::DnsOverHttpsServerConfig"** %122, align 8
  tail call void @_ZdlPv(i8* %141) #12
  %142 = bitcast %"class.std::__1::vector.39"* %0 to i8*
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %142, i8 0, i64 24, i1 false) #10
  br label %143

143:                                              ; preds = %118, %140
  %144 = phi i64 [ %10, %118 ], [ 0, %140 ]
  %145 = icmp ugt i64 %7, 576460752303423487
  br i1 %145, label %146, label %148

146:                                              ; preds = %143
  %147 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %147) #11
  unreachable

148:                                              ; preds = %143
  %149 = ashr exact i64 %144, 5
  %150 = icmp ult i64 %149, 288230376151711743
  br i1 %150, label %151, label %158

151:                                              ; preds = %148
  %152 = ashr exact i64 %144, 4
  %153 = icmp ult i64 %152, %7
  br i1 %153, label %158, label %154

154:                                              ; preds = %151
  %155 = icmp ugt i64 %152, 576460752303423487
  br i1 %155, label %156, label %158

156:                                              ; preds = %154
  %157 = bitcast %"class.std::__1::vector.39"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %157) #11
  unreachable

158:                                              ; preds = %151, %148, %154
  %159 = phi i64 [ %152, %154 ], [ 576460752303423487, %148 ], [ %7, %151 ]
  %160 = shl i64 %159, 5
  %161 = tail call i8* @_Znwm(i64 %160) #12
  %162 = bitcast i8* %161 to %"struct.net::DnsOverHttpsServerConfig"*
  %163 = getelementptr inbounds %"class.std::__1::vector.39", %"class.std::__1::vector.39"* %0, i64 0, i32 0, i32 1
  %164 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %163 to i8**
  store i8* %161, i8** %164, align 8
  %165 = bitcast %"class.std::__1::vector.39"* %0 to i8**
  store i8* %161, i8** %165, align 8
  %166 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %162, i64 %159
  store %"struct.net::DnsOverHttpsServerConfig"* %166, %"struct.net::DnsOverHttpsServerConfig"** %8, align 8
  %167 = bitcast %"struct.net::DnsOverHttpsServerConfig"** %163 to i64*
  %168 = ptrtoint i8* %161 to i64
  %169 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %1, %2
  br i1 %169, label %195, label %170

170:                                              ; preds = %158, %186
  %171 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %191, %186 ], [ %162, %158 ]
  %172 = phi %"struct.net::DnsOverHttpsServerConfig"* [ %190, %186 ], [ %1, %158 ]
  %173 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %172 to %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"*
  %174 = getelementptr inbounds %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short", %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__short"* %173, i64 0, i32 1, i32 0
  %175 = load i8, i8* %174, align 1
  %176 = icmp slt i8 %175, 0
  br i1 %176, label %180, label %177

177:                                              ; preds = %170
  %178 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %171 to i8*
  %179 = bitcast %"struct.net::DnsOverHttpsServerConfig"* %172 to i8*
  tail call void @llvm.memcpy.p0i8.p0i8.i64(i8* align 8 %178, i8* align 8 %179, i64 24, i1 false) #10
  br label %186

180:                                              ; preds = %170
  %181 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %171, i64 0, i32 0
  %182 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %183 = load i8*, i8** %182, align 8
  %184 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 1
  %185 = load i64, i64* %184, align 8
  tail call void @_ZNSt3__112basic_stringIcNS_11char_traitsIcEENS_9allocatorIcEEE25__init_copy_ctor_externalEPKcm(%"class.std::__1::basic_string"* %181, i8* %183, i64 %185) #10
  br label %186

186:                                              ; preds = %180, %177
  %187 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %171, i64 0, i32 1
  %188 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 0, i32 1
  %189 = load i8, i8* %188, align 8, !range !2
  store i8 %189, i8* %187, align 8
  %190 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %172, i64 1
  %191 = getelementptr inbounds %"struct.net::DnsOverHttpsServerConfig", %"struct.net::DnsOverHttpsServerConfig"* %171, i64 1
  %192 = icmp eq %"struct.net::DnsOverHttpsServerConfig"* %190, %2
  br i1 %192, label %193, label %170

193:                                              ; preds = %186
  %194 = ptrtoint %"struct.net::DnsOverHttpsServerConfig"* %191 to i64
  br label %195

195:                                              ; preds = %158, %193
  %196 = phi i64 [ %168, %158 ], [ %194, %193 ]
  store i64 %196, i64* %167, align 8
  br label %197

197:                                              ; preds = %100, %117, %195
  ret void
}

; Function Attrs: nounwind
declare void @_ZN3net9IPAddressD1Ev(%"class.net::IPAddress"*) unnamed_addr #3

; Function Attrs: nofree nounwind readonly
declare i32 @bcmp(i8* nocapture, i8* nocapture, i64) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { cold noreturn nounwind }
attributes #9 = { nofree nounwind readonly }
attributes #10 = { nounwind }
attributes #11 = { noreturn nounwind }
attributes #12 = { builtin nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 1, i32 2000}
!4 = distinct !{!4, !5}
!5 = !{!"llvm.loop.unroll.disable"}
