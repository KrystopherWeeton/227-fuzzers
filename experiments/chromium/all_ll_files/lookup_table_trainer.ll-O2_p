; ModuleID = '../../media/learning/impl/lookup_table_trainer.cc'
source_filename = "../../media/learning/impl/lookup_table_trainer.cc"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%"struct.std::__1::piecewise_construct_t" = type { i8 }
%"class.media::learning::LookupTableTrainer" = type { %"class.media::learning::TrainingAlgorithm" }
%"class.media::learning::TrainingAlgorithm" = type { i32 (...)** }
%"struct.media::learning::LearningTask" = type { %"class.std::__1::basic_string", i32, %"class.std::__1::vector", %"struct.media::learning::LearningTask::ValueDescription", i64, double, %"class.absl::optional", i64, i8, double, i8, i8, i8, double, i32, i8, double, double }
%"class.std::__1::basic_string" = type { %"class.std::__1::__compressed_pair" }
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__rep" = type { %union.anon }
%union.anon = type { %"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" }
%"struct.std::__1::basic_string<char, std::__1::char_traits<char>, std::__1::allocator<char> >::__long" = type { i8*, i64, i64 }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.media::learning::LearningTask::ValueDescription"*, %"struct.media::learning::LearningTask::ValueDescription"*, %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { %"struct.media::learning::LearningTask::ValueDescription"* }
%"struct.media::learning::LearningTask::ValueDescription" = type { %"class.std::__1::basic_string", i32, i32 }
%"class.absl::optional" = type { %"class.absl::optional_internal::optional_data" }
%"class.absl::optional_internal::optional_data" = type { %"class.absl::optional_internal::optional_data_base" }
%"class.absl::optional_internal::optional_data_base" = type { %"class.absl::optional_internal::optional_data_dtor_base" }
%"class.absl::optional_internal::optional_data_dtor_base" = type { i8, %union.anon.6 }
%union.anon.6 = type { i32 }
%"class.media::learning::TrainingData" = type { %"class.std::__1::vector.7", i64 }
%"class.std::__1::vector.7" = type { %"class.std::__1::__vector_base.8" }
%"class.std::__1::__vector_base.8" = type { %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"*, %"class.std::__1::__compressed_pair.16" }
%"struct.media::learning::LabelledExample" = type { %"class.std::__1::vector.9", %"class.media::learning::Value", i64 }
%"class.std::__1::vector.9" = type { %"class.std::__1::__vector_base.10" }
%"class.std::__1::__vector_base.10" = type { %"class.media::learning::Value"*, %"class.media::learning::Value"*, %"class.std::__1::__compressed_pair.11" }
%"class.std::__1::__compressed_pair.11" = type { %"struct.std::__1::__compressed_pair_elem.12" }
%"struct.std::__1::__compressed_pair_elem.12" = type { %"class.media::learning::Value"* }
%"class.media::learning::Value" = type { double }
%"class.std::__1::__compressed_pair.16" = type { %"struct.std::__1::__compressed_pair_elem.17" }
%"struct.std::__1::__compressed_pair_elem.17" = type { %"struct.media::learning::LabelledExample"* }
%"class.base::OnceCallback" = type { %"class.base::internal::CallbackBase" }
%"class.base::internal::CallbackBase" = type { %class.scoped_refptr }
%class.scoped_refptr = type { %"class.base::internal::BindStateBase"* }
%"class.base::internal::BindStateBase" = type { %"class.base::RefCountedThreadSafe", void ()*, void (%"class.base::internal::BindStateBase"*)*, i1 (%"class.base::internal::BindStateBase"*, i32)* }
%"class.base::RefCountedThreadSafe" = type { %"class.base::subtle::RefCountedThreadSafeBase" }
%"class.base::subtle::RefCountedThreadSafeBase" = type { %"class.base::AtomicRefCount" }
%"class.base::AtomicRefCount" = type { %"struct.std::__1::atomic" }
%"struct.std::__1::atomic" = type { %"struct.std::__1::__atomic_base" }
%"struct.std::__1::__atomic_base" = type { %"struct.std::__1::__atomic_base.21" }
%"struct.std::__1::__atomic_base.21" = type { %"struct.std::__1::__cxx_atomic_impl" }
%"struct.std::__1::__cxx_atomic_impl" = type { %"struct.std::__1::__cxx_atomic_base_impl" }
%"struct.std::__1::__cxx_atomic_base_impl" = type { i32 }
%"class.std::__1::unique_ptr.33" = type { %"class.std::__1::__compressed_pair.34" }
%"class.std::__1::__compressed_pair.34" = type { %"struct.std::__1::__compressed_pair_elem.35" }
%"struct.std::__1::__compressed_pair_elem.35" = type { %"class.media::learning::Model"* }
%"class.media::learning::Model" = type { i32 (...)** }
%"class.std::__1::map" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.24", %"class.std::__1::__compressed_pair.29" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8, [7 x i8] }>
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.29" = type { %"struct.std::__1::__compressed_pair_elem.30" }
%"struct.std::__1::__compressed_pair_elem.30" = type { i64 }
%"class.media::learning::TargetHistogram" = type { %"class.base::flat_map" }
%"class.base::flat_map" = type { %"class.base::internal::flat_tree" }
%"class.base::internal::flat_tree" = type { %"class.std::__1::vector.39" }
%"class.std::__1::vector.39" = type { %"class.std::__1::__vector_base.40" }
%"class.std::__1::__vector_base.40" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.41" }
%"struct.std::__1::pair" = type { %"class.media::learning::Value", double }
%"class.std::__1::__compressed_pair.41" = type { %"struct.std::__1::__compressed_pair_elem.42" }
%"struct.std::__1::__compressed_pair_elem.42" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.49" = type { %"class.std::__1::__compressed_pair.50" }
%"class.std::__1::__compressed_pair.50" = type { %"struct.std::__1::__compressed_pair_elem.51", %"struct.std::__1::__compressed_pair_elem.52" }
%"struct.std::__1::__compressed_pair_elem.51" = type { %"class.std::__1::__tree_node"* }
%"class.std::__1::__tree_node" = type { %"class.std::__1::__tree_node_base.base", %"struct.std::__1::__value_type" }
%"class.std::__1::__tree_node_base.base" = type <{ %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_end_node"*, i8 }>
%"struct.std::__1::__value_type" = type { %"struct.std::__1::pair.48" }
%"struct.std::__1::pair.48" = type { %"class.std::__1::vector.9", %"class.media::learning::TargetHistogram" }
%"struct.std::__1::__compressed_pair_elem.52" = type { %"class.std::__1::__tree_node_destructor" }
%"class.std::__1::__tree_node_destructor" = type <{ %"class.std::__1::allocator.27"*, i8, [7 x i8] }>
%"class.std::__1::allocator.27" = type { i8 }
%"class.std::__1::tuple" = type { %"struct.std::__1::__tuple_impl" }
%"struct.std::__1::__tuple_impl" = type { %"class.std::__1::__tuple_leaf" }
%"class.std::__1::__tuple_leaf" = type { %"class.std::__1::vector.9"* }
%"class.std::__1::tuple.47" = type { i8 }
%"class.media::learning::LookupTable" = type { %"class.media::learning::Model", %"class.std::__1::map" }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZNSt3__13mapINS_6vectorIN5media8learning5ValueENS_9allocatorIS4_EEEENS3_15TargetHistogramENS_4lessIS7_EENS5_INS_4pairIKS7_S8_EEEEEixERSC_ = comdat any

$_ZN5media8learning11LookupTableD2Ev = comdat any

$_ZN5media8learning11LookupTableD0Ev = comdat any

$_ZN5media8learning11LookupTable19PredictDistributionERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS8_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS6_IST_EEEEEEDpOT_ = comdat any

$_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_ = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE = comdat any

$_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE4findIS8_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_ = comdat any

$_ZTVN5media8learning11LookupTableE = comdat any

@_ZTVN5media8learning18LookupTableTrainerE = hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::learning::LookupTableTrainer"*)* @_ZN5media8learning18LookupTableTrainerD2Ev to i8*), i8* bitcast (void (%"class.media::learning::LookupTableTrainer"*)* @_ZN5media8learning18LookupTableTrainerD0Ev to i8*), i8* bitcast (void (%"class.media::learning::LookupTableTrainer"*, %"struct.media::learning::LearningTask"*, %"class.media::learning::TrainingData"*, %"class.base::OnceCallback"*)* @_ZN5media8learning18LookupTableTrainer5TrainERKNS0_12LearningTaskERKNS0_12TrainingDataEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_5ModelENSA_14default_deleteISC_EEEEEEE to i8*)] }, align 8
@_ZTVN5media8learning11LookupTableE = linkonce_odr hidden unnamed_addr constant { [5 x i8*] } { [5 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.media::learning::LookupTable"*)* @_ZN5media8learning11LookupTableD2Ev to i8*), i8* bitcast (void (%"class.media::learning::LookupTable"*)* @_ZN5media8learning11LookupTableD0Ev to i8*), i8* bitcast (void (%"class.media::learning::TargetHistogram"*, %"class.media::learning::LookupTable"*, %"class.std::__1::vector.9"*)* @_ZN5media8learning11LookupTable19PredictDistributionERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE to i8*)] }, comdat, align 8
@_ZNSt3__1L19piecewise_constructE = internal constant %"struct.std::__1::piecewise_construct_t" undef, align 1

@_ZN5media8learning18LookupTableTrainerC1Ev = hidden unnamed_addr alias void (%"class.media::learning::LookupTableTrainer"*), void (%"class.media::learning::LookupTableTrainer"*)* @_ZN5media8learning18LookupTableTrainerC2Ev
@_ZN5media8learning18LookupTableTrainerD1Ev = hidden unnamed_addr alias void (%"class.media::learning::LookupTableTrainer"*), void (%"class.media::learning::LookupTableTrainer"*)* @_ZN5media8learning18LookupTableTrainerD2Ev

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden void @_ZN5media8learning18LookupTableTrainerC2Ev(%"class.media::learning::LookupTableTrainer"* nocapture) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %"class.media::learning::LookupTableTrainer", %"class.media::learning::LookupTableTrainer"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning18LookupTableTrainerE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  ret void
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN5media8learning18LookupTableTrainerD2Ev(%"class.media::learning::LookupTableTrainer"* nocapture) unnamed_addr #1 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning18LookupTableTrainerD0Ev(%"class.media::learning::LookupTableTrainer"*) unnamed_addr #2 align 2 {
  %2 = bitcast %"class.media::learning::LookupTableTrainer"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #10
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #3

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN5media8learning18LookupTableTrainer5TrainERKNS0_12LearningTaskERKNS0_12TrainingDataEN4base12OnceCallbackIFvNSt3__110unique_ptrINS0_5ModelENSA_14default_deleteISC_EEEEEEE(%"class.media::learning::LookupTableTrainer"* nocapture readnone, %"struct.media::learning::LearningTask"* nocapture readnone dereferenceable(176), %"class.media::learning::TrainingData"* nocapture readonly dereferenceable(32), %"class.base::OnceCallback"* nocapture) unnamed_addr #2 align 2 {
  %5 = alloca %"class.std::__1::unique_ptr.33", align 8
  %6 = alloca %"class.base::OnceCallback", align 8
  %7 = tail call i8* @_Znwm(i64 32) #10
  %8 = bitcast i8* %7 to i32 (...)***
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning11LookupTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %8, align 8
  %9 = getelementptr inbounds i8, i8* %7, i64 8
  %10 = bitcast i8* %9 to %"class.std::__1::map"*
  %11 = getelementptr inbounds i8, i8* %7, i64 16
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %11, i8 0, i64 16, i1 false) #11
  %12 = bitcast i8* %9 to i8**
  store i8* %11, i8** %12, align 8
  %13 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %2, i64 0, i32 0, i32 0, i32 0
  %14 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %13, align 8
  %15 = getelementptr inbounds %"class.media::learning::TrainingData", %"class.media::learning::TrainingData"* %2, i64 0, i32 0, i32 0, i32 1
  %16 = load %"struct.media::learning::LabelledExample"*, %"struct.media::learning::LabelledExample"** %15, align 8
  %17 = icmp eq %"struct.media::learning::LabelledExample"* %14, %16
  br i1 %17, label %25, label %18

18:                                               ; preds = %4, %18
  %19 = phi %"struct.media::learning::LabelledExample"* [ %23, %18 ], [ %14, %4 ]
  %20 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %19, i64 0, i32 0
  %21 = tail call dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZNSt3__13mapINS_6vectorIN5media8learning5ValueENS_9allocatorIS4_EEEENS3_15TargetHistogramENS_4lessIS7_EENS5_INS_4pairIKS7_S8_EEEEEixERSC_(%"class.std::__1::map"* %10, %"class.std::__1::vector.9"* dereferenceable(24) %20) #11
  %22 = tail call dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZN5media8learning15TargetHistogrampLERKNS0_15LabelledExampleE(%"class.media::learning::TargetHistogram"* %21, %"struct.media::learning::LabelledExample"* dereferenceable(40) %19) #11
  %23 = getelementptr inbounds %"struct.media::learning::LabelledExample", %"struct.media::learning::LabelledExample"* %19, i64 1
  %24 = icmp eq %"struct.media::learning::LabelledExample"* %23, %16
  br i1 %24, label %25, label %18

25:                                               ; preds = %18, %4
  %26 = bitcast %"class.std::__1::unique_ptr.33"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %26)
  %27 = getelementptr inbounds %"class.std::__1::unique_ptr.33", %"class.std::__1::unique_ptr.33"* %5, i64 0, i32 0, i32 0, i32 0
  %28 = bitcast %"class.std::__1::unique_ptr.33"* %5 to i8**
  store i8* %7, i8** %28, align 8
  %29 = bitcast %"class.base::OnceCallback"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %29) #11
  %30 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %3, i64 0, i32 0, i32 0, i32 0
  %31 = bitcast %"class.base::OnceCallback"* %3 to i64*
  %32 = load i64, i64* %31, align 8
  %33 = bitcast %"class.base::OnceCallback"* %6 to i64*
  store i64 %32, i64* %33, align 8
  store %"class.base::internal::BindStateBase"* null, %"class.base::internal::BindStateBase"** %30, align 8
  %34 = getelementptr inbounds %"class.base::OnceCallback", %"class.base::OnceCallback"* %6, i64 0, i32 0
  %35 = inttoptr i64 %32 to %"class.base::internal::BindStateBase"*
  %36 = getelementptr inbounds %"class.base::internal::BindStateBase", %"class.base::internal::BindStateBase"* %35, i64 0, i32 1
  %37 = bitcast void ()** %36 to void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.33"*)**
  %38 = load void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.33"*)*, void (%"class.base::internal::BindStateBase"*, %"class.std::__1::unique_ptr.33"*)** %37, align 8
  call void %38(%"class.base::internal::BindStateBase"* %35, %"class.std::__1::unique_ptr.33"* nonnull dereferenceable(8) %5) #11
  call void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"* nonnull %34) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %29) #11
  %39 = load %"class.media::learning::Model"*, %"class.media::learning::Model"** %27, align 8
  store %"class.media::learning::Model"* null, %"class.media::learning::Model"** %27, align 8
  %40 = icmp eq %"class.media::learning::Model"* %39, null
  br i1 %40, label %46, label %41

41:                                               ; preds = %25
  %42 = bitcast %"class.media::learning::Model"* %39 to void (%"class.media::learning::Model"*)***
  %43 = load void (%"class.media::learning::Model"*)**, void (%"class.media::learning::Model"*)*** %42, align 8
  %44 = getelementptr inbounds void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %43, i64 1
  %45 = load void (%"class.media::learning::Model"*)*, void (%"class.media::learning::Model"*)** %44, align 8
  call void %45(%"class.media::learning::Model"* nonnull %39) #11
  br label %46

46:                                               ; preds = %41, %25
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %26)
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #4

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #5

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZNSt3__13mapINS_6vectorIN5media8learning5ValueENS_9allocatorIS4_EEEENS3_15TargetHistogramENS_4lessIS7_EENS5_INS_4pairIKS7_S8_EEEEEixERSC_(%"class.std::__1::map"*, %"class.std::__1::vector.9"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = alloca %"class.std::__1::__tree_end_node"*, align 8
  %4 = alloca %"class.std::__1::unique_ptr.49", align 8
  %5 = alloca %"class.std::__1::tuple", align 8
  %6 = alloca %"class.std::__1::tuple.47", align 1
  %7 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0
  %8 = bitcast %"class.std::__1::tuple"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %8) #11
  %9 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %5, i64 0, i32 0, i32 0, i32 0
  store %"class.std::__1::vector.9"* %1, %"class.std::__1::vector.9"** %9, align 8
  %10 = getelementptr inbounds %"class.std::__1::tuple.47", %"class.std::__1::tuple.47"* %6, i64 0, i32 0
  call void @llvm.lifetime.start.p0i8(i64 1, i8* nonnull %10) #11
  %11 = bitcast %"class.std::__1::__tree_end_node"** %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #11
  store %"class.std::__1::__tree_end_node"* inttoptr (i64 -6148914691236517206 to %"class.std::__1::__tree_end_node"*), %"class.std::__1::__tree_end_node"** %3, align 8
  %12 = call dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"* %7, %"class.std::__1::__tree_end_node"** nonnull dereferenceable(8) %3, %"class.std::__1::vector.9"* dereferenceable(24) %1) #11
  %13 = bitcast %"class.std::__1::__tree_node_base"** %12 to %"class.std::__1::__tree_node"**
  %14 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %13, align 8
  %15 = icmp eq %"class.std::__1::__tree_node"* %14, null
  br i1 %15, label %16, label %43

16:                                               ; preds = %2
  %17 = bitcast %"class.std::__1::unique_ptr.49"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 24, i8* nonnull %17) #11
  %18 = getelementptr inbounds %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49"* %4, i64 0, i32 0, i32 0, i32 0
  call void @llvm.memset.p0i8.i64(i8* nonnull align 8 %17, i8 -86, i64 24, i1 false) #11
  call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS8_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS6_IST_EEEEEEDpOT_(%"class.std::__1::unique_ptr.49"* nonnull sret %4, %"class.std::__1::__tree"* %7, %"struct.std::__1::piecewise_construct_t"* nonnull dereferenceable(1) @_ZNSt3__1L19piecewise_constructE, %"class.std::__1::tuple"* nonnull dereferenceable(8) %5, %"class.std::__1::tuple.47"* nonnull dereferenceable(1) %6) #11
  %19 = bitcast %"class.std::__1::__tree_end_node"** %3 to i64*
  %20 = load i64, i64* %19, align 8
  %21 = bitcast %"class.std::__1::unique_ptr.49"* %4 to %"class.std::__1::__tree_node_base"**
  %22 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %21, align 8
  %23 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %22, i64 0, i32 2
  %24 = bitcast %"class.std::__1::__tree_node_base"* %22 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %24, i8 0, i64 16, i1 false) #11
  %25 = bitcast %"class.std::__1::__tree_end_node"** %23 to i64*
  store i64 %20, i64* %25, align 8
  store %"class.std::__1::__tree_node_base"* %22, %"class.std::__1::__tree_node_base"** %12, align 8
  %26 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 0
  %27 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %26, align 8
  %28 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %27, i64 0, i32 0
  %29 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %28, align 8
  %30 = icmp eq %"class.std::__1::__tree_node_base"* %29, null
  br i1 %30, label %35, label %31

31:                                               ; preds = %16
  %32 = ptrtoint %"class.std::__1::__tree_node_base"* %29 to i64
  %33 = bitcast %"class.std::__1::map"* %0 to i64*
  store i64 %32, i64* %33, align 8
  %34 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %12, align 8
  br label %35

35:                                               ; preds = %31, %16
  %36 = phi %"class.std::__1::__tree_node_base"* [ %22, %16 ], [ %34, %31 ]
  %37 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  call void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"* %36) #11
  %39 = getelementptr inbounds %"class.std::__1::map", %"class.std::__1::map"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %40 = load i64, i64* %39, align 8
  %41 = add i64 %40, 1
  store i64 %41, i64* %39, align 8
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %18, align 8
  call void @llvm.lifetime.end.p0i8(i64 24, i8* nonnull %17) #11
  br label %43

43:                                               ; preds = %2, %35
  %44 = phi %"class.std::__1::__tree_node"* [ %42, %35 ], [ %14, %2 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #11
  %45 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %44, i64 0, i32 1, i32 0, i32 1
  call void @llvm.lifetime.end.p0i8(i64 1, i8* nonnull %10) #11
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %8) #11
  ret %"class.media::learning::TargetHistogram"* %45
}

declare dereferenceable(24) %"class.media::learning::TargetHistogram"* @_ZN5media8learning15TargetHistogrampLERKNS0_15LabelledExampleE(%"class.media::learning::TargetHistogram"*, %"struct.media::learning::LabelledExample"* dereferenceable(40)) local_unnamed_addr #6

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media8learning11LookupTableD2Ev(%"class.media::learning::LookupTable"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning11LookupTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #11
  ret void
}

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media8learning11LookupTableD0Ev(%"class.media::learning::LookupTable"*) unnamed_addr #7 comdat align 2 {
  %2 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [5 x i8*] }, { [5 x i8*] }* @_ZTVN5media8learning11LookupTableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %0, i64 0, i32 1, i32 0
  %4 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %0, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %3, %"class.std::__1::__tree_node"* %6) #11
  %7 = bitcast %"class.media::learning::LookupTable"* %0 to i8*
  tail call void @_ZdlPv(i8* %7) #10
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5media8learning11LookupTable19PredictDistributionERKNSt3__16vectorINS0_5ValueENS2_9allocatorIS4_EEEE(%"class.media::learning::TargetHistogram"* noalias sret, %"class.media::learning::LookupTable"*, %"class.std::__1::vector.9"* dereferenceable(24)) unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %1, i64 0, i32 1, i32 0
  %5 = tail call %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE4findIS8_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"* %4, %"class.std::__1::vector.9"* dereferenceable(24) %2) #11
  %6 = getelementptr inbounds %"class.media::learning::LookupTable", %"class.media::learning::LookupTable"* %1, i64 0, i32 1, i32 0, i32 1, i32 0, i32 0
  %7 = icmp eq %"class.std::__1::__tree_end_node"* %5, %6
  br i1 %7, label %8, label %9

8:                                                ; preds = %3
  tail call void @_ZN5media8learning15TargetHistogramC1Ev(%"class.media::learning::TargetHistogram"* %0) #11
  br label %12

9:                                                ; preds = %3
  %10 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %5, i64 7
  %11 = bitcast %"class.std::__1::__tree_end_node"* %10 to %"class.media::learning::TargetHistogram"*
  tail call void @_ZN5media8learning15TargetHistogramC1ERKS1_(%"class.media::learning::TargetHistogram"* %0, %"class.media::learning::TargetHistogram"* dereferenceable(24) %11) #11
  br label %12

12:                                               ; preds = %9, %8
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden dereferenceable(8) %"class.std::__1::__tree_node_base"** @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE12__find_equalIS8_EERPNS_16__tree_node_baseIPvEERPNS_15__tree_end_nodeISL_EERKT_(%"class.std::__1::__tree"*, %"class.std::__1::__tree_end_node"** dereferenceable(8), %"class.std::__1::vector.9"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %4 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %5 = bitcast %"class.std::__1::__tree_end_node"* %4 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  %7 = icmp eq %"class.std::__1::__tree_node"* %6, null
  br i1 %7, label %75, label %8

8:                                                ; preds = %3
  %9 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0, i32 0
  %10 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %2, i64 0, i32 0, i32 1
  %11 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %2, i64 0, i32 0, i32 0
  br label %12

12:                                               ; preds = %8, %71
  %13 = phi %"class.std::__1::__tree_node"* [ %74, %71 ], [ %6, %8 ]
  %14 = phi %"class.std::__1::__tree_node_base"** [ %73, %71 ], [ %9, %8 ]
  %15 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %10, align 8
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %17 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %16, align 8
  %18 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %19 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %18, align 8
  %20 = icmp eq %"class.media::learning::Value"* %17, %19
  br i1 %20, label %44, label %21

21:                                               ; preds = %12
  %22 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %11, align 8
  br label %23

23:                                               ; preds = %31, %21
  %24 = phi %"class.media::learning::Value"* [ %32, %31 ], [ %22, %21 ]
  %25 = phi %"class.media::learning::Value"* [ %33, %31 ], [ %17, %21 ]
  %26 = icmp eq %"class.media::learning::Value"* %24, %15
  br i1 %26, label %35, label %27

27:                                               ; preds = %23
  %28 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %24, %"class.media::learning::Value"* dereferenceable(8) %25) #11
  br i1 %28, label %35, label %29

29:                                               ; preds = %27
  %30 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %25, %"class.media::learning::Value"* dereferenceable(8) %24) #11
  br i1 %30, label %41, label %31

31:                                               ; preds = %29
  %32 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %24, i64 1
  %33 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %25, i64 1
  %34 = icmp eq %"class.media::learning::Value"* %33, %19
  br i1 %34, label %41, label %23

35:                                               ; preds = %27, %23
  %36 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0, i32 0
  %37 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %36, align 8
  %38 = icmp eq %"class.std::__1::__tree_node_base"* %37, null
  br i1 %38, label %39, label %71

39:                                               ; preds = %35
  %40 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %40, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %77

41:                                               ; preds = %31, %29
  %42 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %18, align 8
  %43 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %10, align 8
  br label %44

44:                                               ; preds = %41, %12
  %45 = phi %"class.media::learning::Value"* [ %43, %41 ], [ %15, %12 ]
  %46 = phi %"class.media::learning::Value"* [ %42, %41 ], [ %17, %12 ]
  %47 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %11, align 8
  %48 = icmp eq %"class.media::learning::Value"* %47, %45
  br i1 %48, label %69, label %49

49:                                               ; preds = %44
  %50 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %16, align 8
  br label %51

51:                                               ; preds = %59, %49
  %52 = phi %"class.media::learning::Value"* [ %60, %59 ], [ %50, %49 ]
  %53 = phi %"class.media::learning::Value"* [ %61, %59 ], [ %47, %49 ]
  %54 = icmp eq %"class.media::learning::Value"* %52, %46
  br i1 %54, label %63, label %55

55:                                               ; preds = %51
  %56 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %52, %"class.media::learning::Value"* dereferenceable(8) %53) #11
  br i1 %56, label %63, label %57

57:                                               ; preds = %55
  %58 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %53, %"class.media::learning::Value"* dereferenceable(8) %52) #11
  br i1 %58, label %69, label %59

59:                                               ; preds = %57
  %60 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %52, i64 1
  %61 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %53, i64 1
  %62 = icmp eq %"class.media::learning::Value"* %61, %45
  br i1 %62, label %69, label %51

63:                                               ; preds = %55, %51
  %64 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 1
  %65 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %64, align 8
  %66 = icmp eq %"class.std::__1::__tree_node_base"* %65, null
  br i1 %66, label %67, label %71

67:                                               ; preds = %63
  %68 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %68, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %77

69:                                               ; preds = %44, %57, %59
  %70 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %13, i64 0, i32 0, i32 0
  store %"class.std::__1::__tree_end_node"* %70, %"class.std::__1::__tree_end_node"** %1, align 8
  br label %77

71:                                               ; preds = %63, %35
  %72 = phi %"class.std::__1::__tree_node_base"* [ %37, %35 ], [ %65, %63 ]
  %73 = phi %"class.std::__1::__tree_node_base"** [ %36, %35 ], [ %64, %63 ]
  %74 = bitcast %"class.std::__1::__tree_node_base"* %72 to %"class.std::__1::__tree_node"*
  br label %12

75:                                               ; preds = %3
  store %"class.std::__1::__tree_end_node"* %4, %"class.std::__1::__tree_end_node"** %1, align 8
  %76 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %4, i64 0, i32 0
  br label %77

77:                                               ; preds = %75, %69, %67, %39
  %78 = phi %"class.std::__1::__tree_node_base"** [ %36, %39 ], [ %64, %67 ], [ %14, %69 ], [ %76, %75 ]
  ret %"class.std::__1::__tree_node_base"** %78
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE16__construct_nodeIJRKNS_21piecewise_construct_tENS_5tupleIJRKS8_EEENSL_IJEEEEEENS_10unique_ptrINS_11__tree_nodeISA_PvEENS_22__tree_node_destructorINS6_IST_EEEEEEDpOT_(%"class.std::__1::unique_ptr.49"* noalias sret, %"class.std::__1::__tree"*, %"struct.std::__1::piecewise_construct_t"* dereferenceable(1), %"class.std::__1::tuple"* dereferenceable(8), %"class.std::__1::tuple.47"* dereferenceable(1)) local_unnamed_addr #2 comdat align 2 {
  %6 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %1, i64 0, i32 1
  %7 = getelementptr inbounds %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49"* %0, i64 0, i32 0, i32 1, i32 0, i32 0
  %8 = getelementptr inbounds %"class.std::__1::unique_ptr.49", %"class.std::__1::unique_ptr.49"* %0, i64 0, i32 0, i32 1, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.49"* %0 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %9, i8 -86, i64 24, i1 false)
  %10 = tail call i8* @_Znwm(i64 80) #10
  %11 = ptrtoint i8* %10 to i64
  %12 = bitcast %"class.std::__1::unique_ptr.49"* %0 to i64*
  store i64 %11, i64* %12, align 8
  %13 = bitcast %"class.std::__1::allocator.27"** %7 to %"class.std::__1::__compressed_pair.24"**
  store %"class.std::__1::__compressed_pair.24"* %6, %"class.std::__1::__compressed_pair.24"** %13, align 8
  store i8 0, i8* %8, align 8
  %14 = getelementptr inbounds i8, i8* %10, i64 32
  %15 = getelementptr inbounds %"class.std::__1::tuple", %"class.std::__1::tuple"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = load %"class.std::__1::vector.9"*, %"class.std::__1::vector.9"** %15, align 8
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 24, i1 false) #11
  %17 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %16, i64 0, i32 0, i32 1
  %18 = bitcast %"class.media::learning::Value"** %17 to i64*
  %19 = load i64, i64* %18, align 8
  %20 = bitcast %"class.std::__1::vector.9"* %16 to i64*
  %21 = load i64, i64* %20, align 8
  %22 = sub i64 %19, %21
  %23 = ashr exact i64 %22, 3
  %24 = icmp eq i64 %22, 0
  br i1 %24, label %54, label %25

25:                                               ; preds = %5
  %26 = icmp ugt i64 %23, 2305843009213693951
  br i1 %26, label %27, label %29

27:                                               ; preds = %25
  %28 = bitcast i8* %14 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %28) #12
  unreachable

29:                                               ; preds = %25
  %30 = tail call i8* @_Znwm(i64 %22) #10
  %31 = bitcast i8* %30 to %"class.media::learning::Value"*
  %32 = getelementptr inbounds i8, i8* %10, i64 40
  %33 = bitcast i8* %32 to i8**
  store i8* %30, i8** %33, align 8
  %34 = bitcast i8* %14 to i8**
  store i8* %30, i8** %34, align 8
  %35 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %31, i64 %23
  %36 = getelementptr inbounds i8, i8* %10, i64 48
  %37 = bitcast i8* %36 to %"class.media::learning::Value"**
  store %"class.media::learning::Value"* %35, %"class.media::learning::Value"** %37, align 8
  %38 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %16, i64 0, i32 0, i32 0
  %39 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %38, align 8
  %40 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %17, align 8
  %41 = bitcast i8* %32 to i64*
  %42 = ptrtoint i8* %30 to i64
  %43 = icmp eq %"class.media::learning::Value"* %39, %40
  br i1 %43, label %52, label %44

44:                                               ; preds = %29, %44
  %45 = phi %"class.media::learning::Value"* [ %48, %44 ], [ %31, %29 ]
  %46 = phi %"class.media::learning::Value"* [ %47, %44 ], [ %39, %29 ]
  tail call void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"* %45, %"class.media::learning::Value"* dereferenceable(8) %46) #11
  %47 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %46, i64 1
  %48 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %45, i64 1
  %49 = icmp eq %"class.media::learning::Value"* %47, %40
  br i1 %49, label %50, label %44

50:                                               ; preds = %44
  %51 = ptrtoint %"class.media::learning::Value"* %48 to i64
  br label %52

52:                                               ; preds = %50, %29
  %53 = phi i64 [ %42, %29 ], [ %51, %50 ]
  store i64 %53, i64* %41, align 8
  br label %54

54:                                               ; preds = %5, %52
  %55 = getelementptr inbounds i8, i8* %10, i64 56
  %56 = bitcast i8* %55 to %"class.media::learning::TargetHistogram"*
  tail call void @_ZN5media8learning15TargetHistogramC1Ev(%"class.media::learning::TargetHistogram"* %56) #11
  store i8 1, i8* %8, align 8
  ret void
}

declare zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"*, %"class.media::learning::Value"* dereferenceable(8)) local_unnamed_addr #6

declare void @_ZN5media8learning15TargetHistogramC1Ev(%"class.media::learning::TargetHistogram"*) unnamed_addr #6

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #8

declare void @_ZN5media8learning5ValueC1ERKS1_(%"class.media::learning::Value"*, %"class.media::learning::Value"* dereferenceable(8)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__127__tree_balance_after_insertIPNS_16__tree_node_baseIPvEEEEvT_S5_(%"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"*) local_unnamed_addr #2 comdat {
  %3 = icmp eq %"class.std::__1::__tree_node_base"* %1, %0
  %4 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %1, i64 0, i32 3
  %5 = zext i1 %3 to i8
  store i8 %5, i8* %4, align 8
  br i1 %3, label %156, label %6

6:                                                ; preds = %2, %149
  %7 = phi %"class.std::__1::__tree_node_base"* [ %20, %149 ], [ %1, %2 ]
  %8 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %9 = bitcast %"class.std::__1::__tree_end_node"** %8 to %"class.std::__1::__tree_node_base"**
  %10 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %9, align 8
  %11 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 3
  %12 = load i8, i8* %11, align 8, !range !2
  %13 = icmp eq i8 %12, 0
  br i1 %13, label %14, label %156

14:                                               ; preds = %6
  %15 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %16 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %15, align 8
  %17 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 0, i32 0
  %18 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %17, align 8
  %19 = icmp eq %"class.std::__1::__tree_node_base"* %18, %10
  %20 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  br i1 %19, label %21, label %87

21:                                               ; preds = %14
  %22 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 1, i32 0
  %23 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %22, align 8
  %24 = icmp eq %"class.std::__1::__tree_node_base"* %23, null
  br i1 %24, label %29, label %25

25:                                               ; preds = %21
  %26 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %23, i64 0, i32 3
  %27 = load i8, i8* %26, align 8, !range !2
  %28 = icmp eq i8 %27, 0
  br i1 %28, label %149, label %29

29:                                               ; preds = %25, %21
  %30 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %31 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %32 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %33 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %32, align 8
  %34 = icmp eq %"class.std::__1::__tree_node_base"* %33, %7
  br i1 %34, label %61, label %35

35:                                               ; preds = %29
  %36 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %37 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 1
  %38 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %37, align 8
  %39 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %39, align 8
  store %"class.std::__1::__tree_node_base"* %40, %"class.std::__1::__tree_node_base"** %37, align 8
  %41 = icmp eq %"class.std::__1::__tree_node_base"* %40, null
  br i1 %41, label %47, label %42

42:                                               ; preds = %35
  %43 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %44 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %40, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %43, %"class.std::__1::__tree_end_node"** %44, align 8
  %45 = bitcast %"class.std::__1::__tree_end_node"** %30 to i64*
  %46 = load i64, i64* %45, align 8
  br label %47

47:                                               ; preds = %35, %42
  %48 = phi i64 [ %46, %42 ], [ %36, %35 ]
  %49 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %50 = bitcast %"class.std::__1::__tree_end_node"** %49 to i64*
  store i64 %48, i64* %50, align 8
  %51 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %30, align 8
  %52 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 0, i32 0
  %53 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %52, align 8
  %54 = icmp eq %"class.std::__1::__tree_node_base"* %53, %10
  %55 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %51, i64 1, i32 0
  %56 = select i1 %54, %"class.std::__1::__tree_node_base"** %52, %"class.std::__1::__tree_node_base"** %55
  store %"class.std::__1::__tree_node_base"* %38, %"class.std::__1::__tree_node_base"** %56, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %39, align 8
  %57 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %57, %"class.std::__1::__tree_end_node"** %30, align 8
  %58 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %38, i64 0, i32 2
  %59 = bitcast %"class.std::__1::__tree_end_node"** %58 to %"class.std::__1::__tree_node_base"**
  %60 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %59, align 8
  br label %61

61:                                               ; preds = %47, %29
  %62 = phi %"class.std::__1::__tree_node_base"* [ %31, %29 ], [ %60, %47 ]
  %63 = phi %"class.std::__1::__tree_node_base"* [ %10, %29 ], [ %38, %47 ]
  %64 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %63, i64 0, i32 3
  store i8 1, i8* %64, align 8
  %65 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 3
  store i8 0, i8* %65, align 8
  %66 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0, i32 0
  %67 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %66, align 8
  %68 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 1
  %69 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %68, align 8
  store %"class.std::__1::__tree_node_base"* %69, %"class.std::__1::__tree_node_base"** %66, align 8
  %70 = icmp eq %"class.std::__1::__tree_node_base"* %69, null
  br i1 %70, label %74, label %71

71:                                               ; preds = %61
  %72 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 0
  %73 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %69, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %72, %"class.std::__1::__tree_end_node"** %73, align 8
  br label %74

74:                                               ; preds = %71, %61
  %75 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %62, i64 0, i32 2
  %76 = bitcast %"class.std::__1::__tree_end_node"** %75 to i64*
  %77 = load i64, i64* %76, align 8
  %78 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 2
  %79 = bitcast %"class.std::__1::__tree_end_node"** %78 to i64*
  store i64 %77, i64* %79, align 8
  %80 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %75, align 8
  %81 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 0, i32 0
  %82 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %81, align 8
  %83 = icmp eq %"class.std::__1::__tree_node_base"* %82, %62
  %84 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %80, i64 1, i32 0
  %85 = select i1 %83, %"class.std::__1::__tree_node_base"** %81, %"class.std::__1::__tree_node_base"** %84
  store %"class.std::__1::__tree_node_base"* %67, %"class.std::__1::__tree_node_base"** %85, align 8
  store %"class.std::__1::__tree_node_base"* %62, %"class.std::__1::__tree_node_base"** %68, align 8
  %86 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %67, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %86, %"class.std::__1::__tree_end_node"** %75, align 8
  br label %156

87:                                               ; preds = %14
  %88 = icmp eq %"class.std::__1::__tree_node_base"* %18, null
  br i1 %88, label %93, label %89

89:                                               ; preds = %87
  %90 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %18, i64 0, i32 3
  %91 = load i8, i8* %90, align 8, !range !2
  %92 = icmp eq i8 %91, 0
  br i1 %92, label %149, label %93

93:                                               ; preds = %89, %87
  %94 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 2
  %95 = bitcast %"class.std::__1::__tree_end_node"* %16 to %"class.std::__1::__tree_node_base"*
  %96 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %97 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %96, align 8
  %98 = icmp eq %"class.std::__1::__tree_node_base"* %97, %7
  br i1 %98, label %99, label %123

99:                                               ; preds = %93
  %100 = ptrtoint %"class.std::__1::__tree_end_node"* %16 to i64
  %101 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0, i32 0
  %102 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 1
  %103 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %102, align 8
  store %"class.std::__1::__tree_node_base"* %103, %"class.std::__1::__tree_node_base"** %101, align 8
  %104 = icmp eq %"class.std::__1::__tree_node_base"* %103, null
  br i1 %104, label %110, label %105

105:                                              ; preds = %99
  %106 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %10, i64 0, i32 0
  %107 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %103, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %106, %"class.std::__1::__tree_end_node"** %107, align 8
  %108 = bitcast %"class.std::__1::__tree_end_node"** %94 to i64*
  %109 = load i64, i64* %108, align 8
  br label %110

110:                                              ; preds = %99, %105
  %111 = phi i64 [ %109, %105 ], [ %100, %99 ]
  %112 = bitcast %"class.std::__1::__tree_end_node"** %8 to i64*
  store i64 %111, i64* %112, align 8
  %113 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %94, align 8
  %114 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 0, i32 0
  %115 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %114, align 8
  %116 = icmp eq %"class.std::__1::__tree_node_base"* %115, %10
  %117 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %113, i64 1, i32 0
  %118 = select i1 %116, %"class.std::__1::__tree_node_base"** %114, %"class.std::__1::__tree_node_base"** %117
  store %"class.std::__1::__tree_node_base"* %7, %"class.std::__1::__tree_node_base"** %118, align 8
  store %"class.std::__1::__tree_node_base"* %10, %"class.std::__1::__tree_node_base"** %102, align 8
  %119 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %119, %"class.std::__1::__tree_end_node"** %94, align 8
  %120 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %7, i64 0, i32 2
  %121 = bitcast %"class.std::__1::__tree_end_node"** %120 to %"class.std::__1::__tree_node_base"**
  %122 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %121, align 8
  br label %123

123:                                              ; preds = %93, %110
  %124 = phi %"class.std::__1::__tree_node_base"* [ %122, %110 ], [ %95, %93 ]
  %125 = phi %"class.std::__1::__tree_node_base"* [ %7, %110 ], [ %10, %93 ]
  %126 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %125, i64 0, i32 3
  store i8 1, i8* %126, align 8
  %127 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 3
  store i8 0, i8* %127, align 8
  %128 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 1
  %129 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %128, align 8
  %130 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0, i32 0
  %131 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %130, align 8
  store %"class.std::__1::__tree_node_base"* %131, %"class.std::__1::__tree_node_base"** %128, align 8
  %132 = icmp eq %"class.std::__1::__tree_node_base"* %131, null
  br i1 %132, label %136, label %133

133:                                              ; preds = %123
  %134 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 0
  %135 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %131, i64 0, i32 2
  store %"class.std::__1::__tree_end_node"* %134, %"class.std::__1::__tree_end_node"** %135, align 8
  br label %136

136:                                              ; preds = %133, %123
  %137 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %124, i64 0, i32 2
  %138 = bitcast %"class.std::__1::__tree_end_node"** %137 to i64*
  %139 = load i64, i64* %138, align 8
  %140 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 2
  %141 = bitcast %"class.std::__1::__tree_end_node"** %140 to i64*
  store i64 %139, i64* %141, align 8
  %142 = load %"class.std::__1::__tree_end_node"*, %"class.std::__1::__tree_end_node"** %137, align 8
  %143 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 0, i32 0
  %144 = load %"class.std::__1::__tree_node_base"*, %"class.std::__1::__tree_node_base"** %143, align 8
  %145 = icmp eq %"class.std::__1::__tree_node_base"* %144, %124
  %146 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %142, i64 1, i32 0
  %147 = select i1 %145, %"class.std::__1::__tree_node_base"** %143, %"class.std::__1::__tree_node_base"** %146
  store %"class.std::__1::__tree_node_base"* %129, %"class.std::__1::__tree_node_base"** %147, align 8
  store %"class.std::__1::__tree_node_base"* %124, %"class.std::__1::__tree_node_base"** %130, align 8
  %148 = getelementptr inbounds %"class.std::__1::__tree_node_base", %"class.std::__1::__tree_node_base"* %129, i64 0, i32 0
  store %"class.std::__1::__tree_end_node"* %148, %"class.std::__1::__tree_end_node"** %137, align 8
  br label %156

149:                                              ; preds = %89, %25
  %150 = phi i8* [ %26, %25 ], [ %90, %89 ]
  store i8 1, i8* %11, align 8
  %151 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  %152 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %16, i64 3
  %153 = bitcast %"class.std::__1::__tree_end_node"* %152 to i8*
  %154 = zext i1 %151 to i8
  store i8 %154, i8* %153, align 8
  store i8 1, i8* %150, align 8
  %155 = icmp eq %"class.std::__1::__tree_node_base"* %20, %0
  br i1 %155, label %156, label %6

156:                                              ; preds = %6, %149, %2, %136, %74
  ret void
}

; Function Attrs: nounwind
declare void @_ZN5media8learning15TargetHistogramD1Ev(%"class.media::learning::TargetHistogram"*) unnamed_addr #9

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"*, %"class.std::__1::__tree_node"*) local_unnamed_addr #2 comdat align 2 {
  %3 = icmp eq %"class.std::__1::__tree_node"* %1, null
  br i1 %3, label %21, label %4

4:                                                ; preds = %2
  %5 = bitcast %"class.std::__1::__tree_node"* %1 to %"class.std::__1::__tree_node"**
  %6 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %5, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %6) #11
  %7 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 0, i32 1
  %8 = bitcast %"class.std::__1::__tree_node_base"** %7 to %"class.std::__1::__tree_node"**
  %9 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %8, align 8
  tail call void @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE7destroyEPNS_11__tree_nodeISA_PvEE(%"class.std::__1::__tree"* %0, %"class.std::__1::__tree_node"* %9) #11
  %10 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 1
  tail call void @_ZN5media8learning15TargetHistogramD1Ev(%"class.media::learning::TargetHistogram"* %10) #11
  %11 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %12 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %11, align 8
  %13 = icmp eq %"class.media::learning::Value"* %12, null
  br i1 %13, label %19, label %14

14:                                               ; preds = %4
  %15 = ptrtoint %"class.media::learning::Value"* %12 to i64
  %16 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %1, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %17 = bitcast %"class.media::learning::Value"** %16 to i64*
  store i64 %15, i64* %17, align 8
  %18 = bitcast %"class.media::learning::Value"* %12 to i8*
  tail call void @_ZdlPv(i8* %18) #10
  br label %19

19:                                               ; preds = %4, %14
  %20 = bitcast %"class.std::__1::__tree_node"* %1 to i8*
  tail call void @_ZdlPv(i8* %20) #10
  br label %21

21:                                               ; preds = %2, %19
  ret void
}

declare void @_ZN5media8learning15TargetHistogramC1ERKS1_(%"class.media::learning::TargetHistogram"*, %"class.media::learning::TargetHistogram"* dereferenceable(24)) unnamed_addr #6

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %"class.std::__1::__tree_end_node"* @_ZNSt3__16__treeINS_12__value_typeINS_6vectorIN5media8learning5ValueENS_9allocatorIS5_EEEENS4_15TargetHistogramEEENS_19__map_value_compareIS8_SA_NS_4lessIS8_EELb1EEENS6_ISA_EEE4findIS8_EENS_15__tree_iteratorISA_PNS_11__tree_nodeISA_PvEElEERKT_(%"class.std::__1::__tree"*, %"class.std::__1::vector.9"* dereferenceable(24)) local_unnamed_addr #2 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::__tree", %"class.std::__1::__tree"* %0, i64 0, i32 1, i32 0, i32 0
  %4 = bitcast %"class.std::__1::__tree_end_node"* %3 to %"class.std::__1::__tree_node"**
  %5 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %4, align 8
  %6 = icmp eq %"class.std::__1::__tree_node"* %5, null
  br i1 %6, label %69, label %7

7:                                                ; preds = %2
  %8 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 0
  %9 = getelementptr inbounds %"class.std::__1::vector.9", %"class.std::__1::vector.9"* %1, i64 0, i32 0, i32 1
  br label %10

10:                                               ; preds = %39, %7
  %11 = phi %"class.std::__1::__tree_end_node"* [ %3, %7 ], [ %41, %39 ]
  %12 = phi %"class.std::__1::__tree_node"* [ %5, %7 ], [ %42, %39 ]
  %13 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 1
  %14 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %13, align 8
  %15 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %8, align 8
  %16 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %9, align 8
  %17 = icmp eq %"class.media::learning::Value"* %15, %16
  br i1 %17, label %33, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %20 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %19, align 8
  br label %21

21:                                               ; preds = %29, %18
  %22 = phi %"class.media::learning::Value"* [ %30, %29 ], [ %20, %18 ]
  %23 = phi %"class.media::learning::Value"* [ %31, %29 ], [ %15, %18 ]
  %24 = icmp eq %"class.media::learning::Value"* %22, %14
  br i1 %24, label %36, label %25

25:                                               ; preds = %21
  %26 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %22, %"class.media::learning::Value"* dereferenceable(8) %23) #11
  br i1 %26, label %36, label %27

27:                                               ; preds = %25
  %28 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %23, %"class.media::learning::Value"* dereferenceable(8) %22) #11
  br i1 %28, label %33, label %29

29:                                               ; preds = %27
  %30 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %22, i64 1
  %31 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %23, i64 1
  %32 = icmp eq %"class.media::learning::Value"* %31, %16
  br i1 %32, label %33, label %21

33:                                               ; preds = %29, %27, %10
  %34 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 0
  %35 = bitcast %"class.std::__1::__tree_node"* %12 to %"class.std::__1::__tree_node"**
  br label %39

36:                                               ; preds = %25, %21
  %37 = getelementptr inbounds %"class.std::__1::__tree_node", %"class.std::__1::__tree_node"* %12, i64 0, i32 0, i32 1
  %38 = bitcast %"class.std::__1::__tree_node_base"** %37 to %"class.std::__1::__tree_node"**
  br label %39

39:                                               ; preds = %36, %33
  %40 = phi %"class.std::__1::__tree_node"** [ %38, %36 ], [ %35, %33 ]
  %41 = phi %"class.std::__1::__tree_end_node"* [ %11, %36 ], [ %34, %33 ]
  %42 = load %"class.std::__1::__tree_node"*, %"class.std::__1::__tree_node"** %40, align 8
  %43 = icmp eq %"class.std::__1::__tree_node"* %42, null
  br i1 %43, label %44, label %10

44:                                               ; preds = %39
  %45 = icmp eq %"class.std::__1::__tree_end_node"* %41, %3
  br i1 %45, label %69, label %46

46:                                               ; preds = %44
  %47 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 4
  %48 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %9, align 8
  %49 = bitcast %"class.std::__1::__tree_end_node"* %47 to %"class.media::learning::Value"**
  %50 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %49, align 8
  %51 = getelementptr inbounds %"class.std::__1::__tree_end_node", %"class.std::__1::__tree_end_node"* %41, i64 5
  %52 = bitcast %"class.std::__1::__tree_end_node"* %51 to %"class.media::learning::Value"**
  %53 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %52, align 8
  %54 = icmp eq %"class.media::learning::Value"* %50, %53
  br i1 %54, label %69, label %55

55:                                               ; preds = %46
  %56 = load %"class.media::learning::Value"*, %"class.media::learning::Value"** %8, align 8
  br label %57

57:                                               ; preds = %65, %55
  %58 = phi %"class.media::learning::Value"* [ %66, %65 ], [ %56, %55 ]
  %59 = phi %"class.media::learning::Value"* [ %67, %65 ], [ %50, %55 ]
  %60 = icmp eq %"class.media::learning::Value"* %58, %48
  br i1 %60, label %69, label %61

61:                                               ; preds = %57
  %62 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %58, %"class.media::learning::Value"* dereferenceable(8) %59) #11
  br i1 %62, label %69, label %63

63:                                               ; preds = %61
  %64 = tail call zeroext i1 @_ZNK5media8learning5ValueltERKS1_(%"class.media::learning::Value"* %59, %"class.media::learning::Value"* dereferenceable(8) %58) #11
  br i1 %64, label %69, label %65

65:                                               ; preds = %63
  %66 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %58, i64 1
  %67 = getelementptr inbounds %"class.media::learning::Value", %"class.media::learning::Value"* %59, i64 1
  %68 = icmp eq %"class.media::learning::Value"* %67, %53
  br i1 %68, label %69, label %57

69:                                               ; preds = %57, %61, %65, %63, %44, %2, %46
  %70 = phi %"class.std::__1::__tree_end_node"* [ %41, %46 ], [ %3, %44 ], [ %3, %2 ], [ %3, %57 ], [ %3, %61 ], [ %41, %65 ], [ %41, %63 ]
  ret %"class.std::__1::__tree_end_node"* %70
}

; Function Attrs: nounwind
declare void @_ZN4base8internal12CallbackBaseD2Ev(%"class.base::internal::CallbackBase"*) unnamed_addr #9

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #4

attributes #0 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nounwind }
attributes #5 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { builtin nounwind }
attributes #11 = { nounwind }
attributes #12 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
