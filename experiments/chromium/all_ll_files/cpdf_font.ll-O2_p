; ModuleID = '../../third_party/pdfium/core/fpdfapi/font/cpdf_font.cpp'
source_filename = "../../third_party/pdfium/core/fpdfapi/font/cpdf_font.cpp"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%class.CPDF_Font = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.fxcrt::UnownedPtr", %class.CFX_Font, %"class.std::__1::vector.192", %"class.fxcrt::RetainPtr.200", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.218", i8, i32, i32, i32, i32, i32, %struct.FX_RECT }
%"class.fxcrt::Retainable" = type { i32 (...)**, i64 }
%"class.fxcrt::Observable" = type { %"class.std::__1::set" }
%"class.std::__1::set" = type { %"class.std::__1::__tree" }
%"class.std::__1::__tree" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair", %"class.std::__1::__compressed_pair.1" }
%"class.std::__1::__tree_end_node" = type { %"class.std::__1::__tree_node_base"* }
%"class.std::__1::__tree_node_base" = type opaque
%"class.std::__1::__compressed_pair" = type { %"struct.std::__1::__compressed_pair_elem" }
%"struct.std::__1::__compressed_pair_elem" = type { %"class.std::__1::__tree_end_node" }
%"class.std::__1::__compressed_pair.1" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"struct.std::__1::__compressed_pair_elem.2" = type { i64 }
%"class.fxcrt::UnownedPtr" = type { %class.CPDF_Document* }
%class.CPDF_Document = type { %"class.CPDF_Parser::ParsedObjectsHolder", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.16", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::vector", i8, i8, i32, i32, %"class.std::__1::unique_ptr.105", %"class.std::__1::unique_ptr.111", %"class.std::__1::unique_ptr.117", %"class.std::__1::unique_ptr.123", %"class.std::__1::vector.129", %"class.CPDF_Document::StockFontClearer", %"class.std::__1::unique_ptr.137" }
%"class.CPDF_Parser::ParsedObjectsHolder" = type { %class.CPDF_IndirectObjectHolder }
%class.CPDF_IndirectObjectHolder = type { i32 (...)**, i32, %"class.std::__1::map", %"class.fxcrt::WeakPtr" }
%"class.std::__1::map" = type { %"class.std::__1::__tree.4" }
%"class.std::__1::__tree.4" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.5", %"class.std::__1::__compressed_pair.9" }
%"class.std::__1::__compressed_pair.5" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.9" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::WeakPtr" = type { %"class.fxcrt::RetainPtr" }
%"class.fxcrt::RetainPtr" = type { %"class.std::__1::unique_ptr" }
%"class.std::__1::unique_ptr" = type { %"class.std::__1::__compressed_pair.13" }
%"class.std::__1::__compressed_pair.13" = type { %"struct.std::__1::__compressed_pair_elem.14" }
%"struct.std::__1::__compressed_pair_elem.14" = type { %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* }
%"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle" = type { i64, %"class.std::__1::unique_ptr.357" }
%"class.std::__1::unique_ptr.357" = type { %"class.std::__1::__compressed_pair.358" }
%"class.std::__1::__compressed_pair.358" = type { %"struct.std::__1::__compressed_pair_elem.359" }
%"struct.std::__1::__compressed_pair_elem.359" = type { %"class.fxcrt::StringPoolTemplate"* }
%"class.fxcrt::StringPoolTemplate" = type { %"class.std::__1::unordered_set" }
%"class.std::__1::unordered_set" = type { %"class.std::__1::__hash_table" }
%"class.std::__1::__hash_table" = type <{ %"class.std::__1::unique_ptr.360", %"class.std::__1::__compressed_pair.368", %"class.std::__1::__compressed_pair.373", %"class.std::__1::__compressed_pair.375", [4 x i8] }>
%"class.std::__1::unique_ptr.360" = type { %"class.std::__1::__compressed_pair.361" }
%"class.std::__1::__compressed_pair.361" = type { %"struct.std::__1::__compressed_pair_elem.362", %"struct.std::__1::__compressed_pair_elem.363" }
%"struct.std::__1::__compressed_pair_elem.362" = type { %"struct.std::__1::__hash_node_base"** }
%"struct.std::__1::__hash_node_base" = type { %"struct.std::__1::__hash_node_base"* }
%"struct.std::__1::__compressed_pair_elem.363" = type { %"class.std::__1::__bucket_list_deallocator" }
%"class.std::__1::__bucket_list_deallocator" = type { %"class.std::__1::__compressed_pair.364" }
%"class.std::__1::__compressed_pair.364" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.368" = type { %"struct.std::__1::__compressed_pair_elem.369" }
%"struct.std::__1::__compressed_pair_elem.369" = type { %"struct.std::__1::__hash_node_base" }
%"class.std::__1::__compressed_pair.373" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::__compressed_pair.375" = type { %"struct.std::__1::__compressed_pair_elem.376" }
%"struct.std::__1::__compressed_pair_elem.376" = type { float }
%"class.std::__1::unique_ptr.16" = type { %"class.std::__1::__compressed_pair.17" }
%"class.std::__1::__compressed_pair.17" = type { %"struct.std::__1::__compressed_pair_elem.18" }
%"struct.std::__1::__compressed_pair_elem.18" = type { %class.CPDF_Parser* }
%class.CPDF_Parser = type <{ %"class.std::__1::unique_ptr.19", %"class.std::__1::unique_ptr.23", %"class.fxcrt::UnownedPtr.29", i8, i8, i8, i8, i32, %"class.std::__1::unique_ptr.30", i64, %"class.fxcrt::RetainPtr.62", %"class.fxcrt::ByteString", %"class.std::__1::unique_ptr.74", %"class.std::__1::map.80", %"class.std::__1::set.89", i32, [4 x i8] }>
%"class.std::__1::unique_ptr.19" = type { %"class.std::__1::__compressed_pair.20" }
%"class.std::__1::__compressed_pair.20" = type { %"struct.std::__1::__compressed_pair_elem.21" }
%"struct.std::__1::__compressed_pair_elem.21" = type { %class.CPDF_SyntaxParser* }
%class.CPDF_SyntaxParser = type opaque
%"class.std::__1::unique_ptr.23" = type { %"class.std::__1::__compressed_pair.24" }
%"class.std::__1::__compressed_pair.24" = type { %"struct.std::__1::__compressed_pair_elem.25" }
%"struct.std::__1::__compressed_pair_elem.25" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.fxcrt::UnownedPtr.29" = type { %"class.CPDF_Parser::ParsedObjectsHolder"* }
%"class.std::__1::unique_ptr.30" = type { %"class.std::__1::__compressed_pair.31" }
%"class.std::__1::__compressed_pair.31" = type { %"struct.std::__1::__compressed_pair_elem.32" }
%"struct.std::__1::__compressed_pair_elem.32" = type { %class.CPDF_CrossRefTable* }
%class.CPDF_CrossRefTable = type { %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.50" }
%"class.std::__1::map.50" = type { %"class.std::__1::__tree.51" }
%"class.std::__1::__tree.51" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.52", %"class.std::__1::__compressed_pair.56" }
%"class.std::__1::__compressed_pair.52" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.56" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.62" = type { %"class.std::__1::unique_ptr.63" }
%"class.std::__1::unique_ptr.63" = type { %"class.std::__1::__compressed_pair.64" }
%"class.std::__1::__compressed_pair.64" = type { %"struct.std::__1::__compressed_pair_elem.65" }
%"struct.std::__1::__compressed_pair_elem.65" = type { %class.CPDF_SecurityHandler* }
%class.CPDF_SecurityHandler = type opaque
%"class.std::__1::unique_ptr.74" = type { %"class.std::__1::__compressed_pair.75" }
%"class.std::__1::__compressed_pair.75" = type { %"struct.std::__1::__compressed_pair_elem.76" }
%"struct.std::__1::__compressed_pair_elem.76" = type { %class.CPDF_LinearizedHeader* }
%class.CPDF_LinearizedHeader = type opaque
%"class.std::__1::map.80" = type { %"class.std::__1::__tree.81" }
%"class.std::__1::__tree.81" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.82", %"class.std::__1::__compressed_pair.86" }
%"class.std::__1::__compressed_pair.82" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.86" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::set.89" = type { %"class.std::__1::__tree.90" }
%"class.std::__1::__tree.90" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.91", %"class.std::__1::__compressed_pair.95" }
%"class.std::__1::__compressed_pair.91" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.95" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::vector" = type { %"class.std::__1::__vector_base" }
%"class.std::__1::__vector_base" = type { %"struct.std::__1::pair"*, %"struct.std::__1::pair"*, %"class.std::__1::__compressed_pair.100" }
%"struct.std::__1::pair" = type opaque
%"class.std::__1::__compressed_pair.100" = type { %"struct.std::__1::__compressed_pair_elem.101" }
%"struct.std::__1::__compressed_pair_elem.101" = type { %"struct.std::__1::pair"* }
%"class.std::__1::unique_ptr.105" = type { %"class.std::__1::__compressed_pair.106" }
%"class.std::__1::__compressed_pair.106" = type { %"struct.std::__1::__compressed_pair_elem.107" }
%"struct.std::__1::__compressed_pair_elem.107" = type { %"class.CPDF_Document::RenderDataIface"* }
%"class.CPDF_Document::RenderDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.111" = type { %"class.std::__1::__compressed_pair.112" }
%"class.std::__1::__compressed_pair.112" = type { %"struct.std::__1::__compressed_pair_elem.113" }
%"struct.std::__1::__compressed_pair_elem.113" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.CPDF_Document::PageDataIface" = type { i32 (...)**, %"class.fxcrt::UnownedPtr" }
%"class.std::__1::unique_ptr.117" = type { %"class.std::__1::__compressed_pair.118" }
%"class.std::__1::__compressed_pair.118" = type { %"struct.std::__1::__compressed_pair_elem.119" }
%"struct.std::__1::__compressed_pair_elem.119" = type { %class.JBig2_DocumentContext* }
%class.JBig2_DocumentContext = type opaque
%"class.std::__1::unique_ptr.123" = type { %"class.std::__1::__compressed_pair.124" }
%"class.std::__1::__compressed_pair.124" = type { %"struct.std::__1::__compressed_pair_elem.125" }
%"struct.std::__1::__compressed_pair_elem.125" = type { %"class.CPDF_Document::LinkListIface"* }
%"class.CPDF_Document::LinkListIface" = type { i32 (...)** }
%"class.std::__1::vector.129" = type { %"class.std::__1::__vector_base.130" }
%"class.std::__1::__vector_base.130" = type { i32*, i32*, %"class.std::__1::__compressed_pair.131" }
%"class.std::__1::__compressed_pair.131" = type { %"struct.std::__1::__compressed_pair_elem.132" }
%"struct.std::__1::__compressed_pair_elem.132" = type { i32* }
%"class.CPDF_Document::StockFontClearer" = type { %"class.fxcrt::UnownedPtr.136" }
%"class.fxcrt::UnownedPtr.136" = type { %"class.CPDF_Document::PageDataIface"* }
%"class.std::__1::unique_ptr.137" = type { %"class.std::__1::__compressed_pair.138" }
%"class.std::__1::__compressed_pair.138" = type { %"struct.std::__1::__compressed_pair_elem.139" }
%"struct.std::__1::__compressed_pair_elem.139" = type { %"class.CPDF_Document::Extension"* }
%"class.CPDF_Document::Extension" = type { i32 (...)** }
%class.CFX_Font = type <{ %"class.fxcrt::RetainPtr.143", %"class.std::__1::unique_ptr.149", %"class.fxcrt::RetainPtr.155", %"class.fxcrt::RetainPtr.171", %"class.std::__1::unique_ptr.177", %"class.std::__1::unique_ptr.183", %"class.std::__1::vector.187", %"class.pdfium::span", i8, i8, [6 x i8] }>
%"class.fxcrt::RetainPtr.143" = type { %"class.std::__1::unique_ptr.144" }
%"class.std::__1::unique_ptr.144" = type { %"class.std::__1::__compressed_pair.145" }
%"class.std::__1::__compressed_pair.145" = type { %"struct.std::__1::__compressed_pair_elem.146" }
%"struct.std::__1::__compressed_pair_elem.146" = type { %class.IFX_SeekableReadStream* }
%class.IFX_SeekableReadStream = type { %class.IFX_StreamWithSize, %"class.fxcrt::Retainable" }
%class.IFX_StreamWithSize = type { i32 (...)** }
%"class.std::__1::unique_ptr.149" = type { %"class.std::__1::__compressed_pair.150" }
%"class.std::__1::__compressed_pair.150" = type { %"struct.std::__1::__compressed_pair_elem.151" }
%"struct.std::__1::__compressed_pair_elem.151" = type { %struct.FT_StreamRec_* }
%struct.FT_StreamRec_ = type { i8*, i64, i64, %union.FT_StreamDesc_, %union.FT_StreamDesc_, i64 (%struct.FT_StreamRec_*, i64, i8*, i64)*, void (%struct.FT_StreamRec_*)*, %struct.FT_MemoryRec_*, i8*, i8* }
%union.FT_StreamDesc_ = type { i64 }
%struct.FT_MemoryRec_ = type { i8*, i8* (%struct.FT_MemoryRec_*, i64)*, void (%struct.FT_MemoryRec_*, i8*)*, i8* (%struct.FT_MemoryRec_*, i64, i64, i8*)* }
%"class.fxcrt::RetainPtr.155" = type { %"class.std::__1::unique_ptr.156" }
%"class.std::__1::unique_ptr.156" = type { %"class.std::__1::__compressed_pair.157" }
%"class.std::__1::__compressed_pair.157" = type { %"struct.std::__1::__compressed_pair_elem.158" }
%"struct.std::__1::__compressed_pair_elem.158" = type { %class.CFX_Face* }
%class.CFX_Face = type { %"class.fxcrt::Retainable", %"class.fxcrt::Observable", %"class.std::__1::unique_ptr.159", %"class.fxcrt::RetainPtr.163" }
%"class.std::__1::unique_ptr.159" = type { %"class.std::__1::__compressed_pair.160" }
%"class.std::__1::__compressed_pair.160" = type { %"struct.std::__1::__compressed_pair_elem.161" }
%"struct.std::__1::__compressed_pair_elem.161" = type { %struct.FT_FaceRec_* }
%struct.FT_FaceRec_ = type { i64, i64, i64, i64, i64, i8*, i8*, i32, %struct.FT_Bitmap_Size_*, i32, %struct.FT_CharMapRec_**, %struct.FT_Generic_, %struct.FT_BBox_, i16, i16, i16, i16, i16, i16, i16, i16, %struct.FT_GlyphSlotRec_*, %struct.FT_SizeRec_*, %struct.FT_CharMapRec_*, %struct.FT_DriverRec_*, %struct.FT_MemoryRec_*, %struct.FT_StreamRec_*, %struct.FT_ListRec_, %struct.FT_Generic_, i8*, %struct.FT_Face_InternalRec_* }
%struct.FT_Bitmap_Size_ = type { i16, i16, i64, i64, i64 }
%struct.FT_BBox_ = type { i64, i64, i64, i64 }
%struct.FT_GlyphSlotRec_ = type { %struct.FT_LibraryRec_*, %struct.FT_FaceRec_*, %struct.FT_GlyphSlotRec_*, i32, %struct.FT_Generic_, %struct.FT_Glyph_Metrics_, i64, i64, %struct.FT_Vector_, i32, %struct.FT_Bitmap_, i32, i32, %struct.FT_Outline_, i32, %struct.FT_SubGlyphRec_*, i8*, i64, i64, i64, i8*, %struct.FT_Slot_InternalRec_* }
%struct.FT_LibraryRec_ = type opaque
%struct.FT_Glyph_Metrics_ = type { i64, i64, i64, i64, i64, i64, i64, i64 }
%struct.FT_Vector_ = type { i64, i64 }
%struct.FT_Bitmap_ = type { i32, i32, i32, i8*, i16, i8, i8, i8* }
%struct.FT_Outline_ = type { i16, i16, %struct.FT_Vector_*, i8*, i16*, i32 }
%struct.FT_SubGlyphRec_ = type opaque
%struct.FT_Slot_InternalRec_ = type opaque
%struct.FT_SizeRec_ = type { %struct.FT_FaceRec_*, %struct.FT_Generic_, %struct.FT_Size_Metrics_, %struct.FT_Size_InternalRec_* }
%struct.FT_Size_Metrics_ = type { i16, i16, i64, i64, i64, i64, i64, i64 }
%struct.FT_Size_InternalRec_ = type opaque
%struct.FT_CharMapRec_ = type { %struct.FT_FaceRec_*, i32, i16, i16 }
%struct.FT_DriverRec_ = type opaque
%struct.FT_ListRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_* }
%struct.FT_ListNodeRec_ = type { %struct.FT_ListNodeRec_*, %struct.FT_ListNodeRec_*, i8* }
%struct.FT_Generic_ = type { i8*, void (i8*)* }
%struct.FT_Face_InternalRec_ = type opaque
%"class.fxcrt::RetainPtr.163" = type { %"class.std::__1::unique_ptr.164" }
%"class.std::__1::unique_ptr.164" = type { %"class.std::__1::__compressed_pair.165" }
%"class.std::__1::__compressed_pair.165" = type { %"struct.std::__1::__compressed_pair_elem.166" }
%"struct.std::__1::__compressed_pair_elem.166" = type { %"class.fxcrt::Retainable"* }
%"class.fxcrt::RetainPtr.171" = type { %"class.std::__1::unique_ptr.172" }
%"class.std::__1::unique_ptr.172" = type { %"class.std::__1::__compressed_pair.173" }
%"class.std::__1::__compressed_pair.173" = type { %"struct.std::__1::__compressed_pair_elem.174" }
%"struct.std::__1::__compressed_pair_elem.174" = type { %class.CFX_GlyphCache* }
%class.CFX_GlyphCache = type opaque
%"class.std::__1::unique_ptr.177" = type { %"class.std::__1::__compressed_pair.178" }
%"class.std::__1::__compressed_pair.178" = type { %"struct.std::__1::__compressed_pair_elem.179" }
%"struct.std::__1::__compressed_pair_elem.179" = type { %class.CFX_SubstFont* }
%class.CFX_SubstFont = type opaque
%"class.std::__1::unique_ptr.183" = type { %"class.std::__1::__compressed_pair.184" }
%"class.std::__1::__compressed_pair.184" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"struct.std::__1::__compressed_pair_elem.185" = type { i8* }
%"class.std::__1::vector.187" = type { %"class.std::__1::__vector_base.188" }
%"class.std::__1::__vector_base.188" = type { i8*, i8*, %"class.std::__1::__compressed_pair.189" }
%"class.std::__1::__compressed_pair.189" = type { %"struct.std::__1::__compressed_pair_elem.185" }
%"class.pdfium::span" = type { %"class.fxcrt::UnownedPtr.191", i64 }
%"class.fxcrt::UnownedPtr.191" = type { i8* }
%"class.std::__1::vector.192" = type { %"class.std::__1::__vector_base.193" }
%"class.std::__1::__vector_base.193" = type { %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"*, %"class.std::__1::__compressed_pair.195" }
%"class.std::__1::unique_ptr.194" = type { %"class.std::__1::__compressed_pair.352" }
%"class.std::__1::__compressed_pair.352" = type { %"struct.std::__1::__compressed_pair_elem.353" }
%"struct.std::__1::__compressed_pair_elem.353" = type { %class.CFX_Font* }
%"class.std::__1::__compressed_pair.195" = type { %"struct.std::__1::__compressed_pair_elem.196" }
%"struct.std::__1::__compressed_pair_elem.196" = type { %"class.std::__1::unique_ptr.194"* }
%"class.fxcrt::RetainPtr.200" = type { %"class.std::__1::unique_ptr.201" }
%"class.std::__1::unique_ptr.201" = type { %"class.std::__1::__compressed_pair.202" }
%"class.std::__1::__compressed_pair.202" = type { %"struct.std::__1::__compressed_pair_elem.203" }
%"struct.std::__1::__compressed_pair_elem.203" = type { %class.CPDF_StreamAcc* }
%class.CPDF_StreamAcc = type { %"class.fxcrt::Retainable", %"class.fxcrt::MaybeOwned", i32, %"class.fxcrt::ByteString", %"class.fxcrt::RetainPtr.204", %"class.fxcrt::RetainPtr.210" }
%"class.fxcrt::MaybeOwned" = type { %"class.std::__1::unique_ptr.183", %"class.fxcrt::UnownedPtr.191" }
%"class.fxcrt::RetainPtr.204" = type { %"class.std::__1::unique_ptr.205" }
%"class.std::__1::unique_ptr.205" = type { %"class.std::__1::__compressed_pair.206" }
%"class.std::__1::__compressed_pair.206" = type { %"struct.std::__1::__compressed_pair_elem.207" }
%"struct.std::__1::__compressed_pair_elem.207" = type { %class.CPDF_Dictionary* }
%class.CPDF_Dictionary = type { %class.CPDF_Object, i32, %"class.fxcrt::WeakPtr", %"class.std::__1::map.37" }
%class.CPDF_Object = type { %"class.fxcrt::Retainable", i32, i32 }
%"class.std::__1::map.37" = type { %"class.std::__1::__tree.38" }
%"class.std::__1::__tree.38" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.39", %"class.std::__1::__compressed_pair.43" }
%"class.std::__1::__compressed_pair.39" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.43" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::RetainPtr.210" = type { %"class.std::__1::unique_ptr.211" }
%"class.std::__1::unique_ptr.211" = type { %"class.std::__1::__compressed_pair.212" }
%"class.std::__1::__compressed_pair.212" = type { %"struct.std::__1::__compressed_pair_elem.213" }
%"struct.std::__1::__compressed_pair_elem.213" = type { %class.CPDF_Stream* }
%class.CPDF_Stream = type { %class.CPDF_Object, i8, i32, %"class.fxcrt::RetainPtr.33", %"class.std::__1::unique_ptr.183", %"class.fxcrt::RetainPtr.143" }
%"class.fxcrt::RetainPtr.33" = type { %"class.std::__1::unique_ptr.34" }
%"class.std::__1::unique_ptr.34" = type { %"class.std::__1::__compressed_pair.35" }
%"class.std::__1::__compressed_pair.35" = type { %"struct.std::__1::__compressed_pair_elem.36" }
%"struct.std::__1::__compressed_pair_elem.36" = type { %class.CPDF_Dictionary* }
%"class.fxcrt::ByteString" = type { %"class.fxcrt::RetainPtr.68" }
%"class.fxcrt::RetainPtr.68" = type { %"class.std::__1::unique_ptr.69" }
%"class.std::__1::unique_ptr.69" = type { %"class.std::__1::__compressed_pair.70" }
%"class.std::__1::__compressed_pair.70" = type { %"struct.std::__1::__compressed_pair_elem.71" }
%"struct.std::__1::__compressed_pair_elem.71" = type { %"class.fxcrt::StringDataTemplate"* }
%"class.fxcrt::StringDataTemplate" = type <{ i64, i64, i64, [1 x i8], [7 x i8] }>
%"class.std::__1::unique_ptr.218" = type { %"class.std::__1::__compressed_pair.219" }
%"class.std::__1::__compressed_pair.219" = type { %"struct.std::__1::__compressed_pair_elem.220" }
%"struct.std::__1::__compressed_pair_elem.220" = type { %class.CPDF_ToUnicodeMap* }
%class.CPDF_ToUnicodeMap = type { %"class.std::__1::multimap", %"class.fxcrt::UnownedPtr.229", %class.CFX_WideTextBuf }
%"class.std::__1::multimap" = type { %"class.std::__1::__tree.221" }
%"class.std::__1::__tree.221" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.222", %"class.std::__1::__compressed_pair.226" }
%"class.std::__1::__compressed_pair.222" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.226" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.fxcrt::UnownedPtr.229" = type { %class.CPDF_CID2UnicodeMap* }
%class.CPDF_CID2UnicodeMap = type opaque
%class.CFX_WideTextBuf = type { %class.CFX_BinaryBuf }
%class.CFX_BinaryBuf = type { i32 (...)**, i64, i64, i64, %"class.std::__1::unique_ptr.183" }
%struct.FX_RECT = type { i32, i32, i32, i32 }
%class.CPDF_Type1Font = type <{ %class.CPDF_SimpleFont, %"class.pdfium::Optional", [6 x i8] }>
%class.CPDF_SimpleFont = type { %class.CPDF_Font, %class.CPDF_FontEncoding, i32, i8, %"class.std::__1::vector.233", [256 x i16], [256 x i16], [256 x %struct.FX_RECT] }
%class.CPDF_FontEncoding = type { [256 x i32] }
%"class.std::__1::vector.233" = type { %"class.std::__1::__vector_base.234" }
%"class.std::__1::__vector_base.234" = type { %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"*, %"class.std::__1::__compressed_pair.235" }
%"class.std::__1::__compressed_pair.235" = type { %"struct.std::__1::__compressed_pair_elem.236" }
%"struct.std::__1::__compressed_pair_elem.236" = type { %"class.fxcrt::ByteString"* }
%"class.pdfium::Optional" = type { %"class.pdfium::internal::OptionalBase" }
%"class.pdfium::internal::OptionalBase" = type { %"struct.pdfium::internal::OptionalStorage" }
%"struct.pdfium::internal::OptionalStorage" = type { %"struct.pdfium::internal::OptionalStorageBase" }
%"struct.pdfium::internal::OptionalStorageBase" = type { i8, %union.anon }
%union.anon = type { %"struct.pdfium::internal::DummyUnionMember" }
%"struct.pdfium::internal::DummyUnionMember" = type { i8 }
%class.CPDF_TrueTypeFont = type { %class.CPDF_SimpleFont }
%class.CPDF_Type3Font = type { %class.CPDF_SimpleFont, i32, %class.CFX_Matrix, %"class.fxcrt::UnownedPtr.240", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.fxcrt::RetainPtr.33", %"class.std::__1::map.241", [256 x i32] }
%class.CFX_Matrix = type { float, float, float, float, float, float }
%"class.fxcrt::UnownedPtr.240" = type { %"class.CPDF_Font::FormFactoryIface"* }
%"class.CPDF_Font::FormFactoryIface" = type { i32 (...)** }
%"class.std::__1::map.241" = type { %"class.std::__1::__tree.242" }
%"class.std::__1::__tree.242" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.243", %"class.std::__1::__compressed_pair.247" }
%"class.std::__1::__compressed_pair.243" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.247" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CPDF_CIDFont = type { %class.CPDF_Font, %"class.fxcrt::RetainPtr.250", %"class.fxcrt::UnownedPtr.229", %"class.fxcrt::RetainPtr.200", %"class.std::__1::unique_ptr.256", i8, i8, i8, i8, i8, i16, i16, i16, %"class.std::__1::vector.262", %"class.std::__1::vector.262", [256 x %struct.FX_RECT] }
%"class.fxcrt::RetainPtr.250" = type { %"class.std::__1::unique_ptr.251" }
%"class.std::__1::unique_ptr.251" = type { %"class.std::__1::__compressed_pair.252" }
%"class.std::__1::__compressed_pair.252" = type { %"struct.std::__1::__compressed_pair_elem.253" }
%"struct.std::__1::__compressed_pair_elem.253" = type { %class.CPDF_CMap* }
%class.CPDF_CMap = type opaque
%"class.std::__1::unique_ptr.256" = type { %"class.std::__1::__compressed_pair.257" }
%"class.std::__1::__compressed_pair.257" = type { %"struct.std::__1::__compressed_pair_elem.258" }
%"struct.std::__1::__compressed_pair_elem.258" = type { %class.CFX_CTTGSUBTable* }
%class.CFX_CTTGSUBTable = type opaque
%"class.std::__1::vector.262" = type { %"class.std::__1::__vector_base.263" }
%"class.std::__1::__vector_base.263" = type { i32*, i32*, %"class.std::__1::__compressed_pair.264" }
%"class.std::__1::__compressed_pair.264" = type { %"struct.std::__1::__compressed_pair_elem.265" }
%"struct.std::__1::__compressed_pair_elem.265" = type { i32* }
%"class.fxcrt::StringViewTemplate" = type { %"class.pdfium::span.269" }
%"class.pdfium::span.269" = type { %"class.fxcrt::UnownedPtr.270", i64 }
%"class.fxcrt::UnownedPtr.270" = type { i8* }
%"class.fxcrt::WideString" = type { %"class.fxcrt::RetainPtr.271" }
%"class.fxcrt::RetainPtr.271" = type { %"class.std::__1::unique_ptr.272" }
%"class.std::__1::unique_ptr.272" = type { %"class.std::__1::__compressed_pair.273" }
%"class.std::__1::__compressed_pair.273" = type { %"struct.std::__1::__compressed_pair_elem.274" }
%"struct.std::__1::__compressed_pair_elem.274" = type { %"class.fxcrt::StringDataTemplate.275"* }
%"class.fxcrt::StringDataTemplate.275" = type <{ i64, i64, i64, [1 x i32], [4 x i8] }>
%class.CPDF_Array = type <{ %class.CPDF_Object, %"class.std::__1::vector.279", %"class.fxcrt::WeakPtr", i32, [4 x i8] }>
%"class.std::__1::vector.279" = type { %"class.std::__1::__vector_base.280" }
%"class.std::__1::__vector_base.280" = type { %"class.fxcrt::RetainPtr.281"*, %"class.fxcrt::RetainPtr.281"*, %"class.std::__1::__compressed_pair.287" }
%"class.fxcrt::RetainPtr.281" = type { %"class.std::__1::unique_ptr.282" }
%"class.std::__1::unique_ptr.282" = type { %"class.std::__1::__compressed_pair.283" }
%"class.std::__1::__compressed_pair.283" = type { %"struct.std::__1::__compressed_pair_elem.284" }
%"struct.std::__1::__compressed_pair_elem.284" = type { %class.CPDF_Object* }
%"class.std::__1::__compressed_pair.287" = type { %"struct.std::__1::__compressed_pair_elem.288" }
%"struct.std::__1::__compressed_pair_elem.288" = type { %"class.fxcrt::RetainPtr.281"* }
%"class.fxcrt::RetainPtr.292" = type { %"class.std::__1::unique_ptr.293" }
%"class.std::__1::unique_ptr.293" = type { %"class.std::__1::__compressed_pair.294" }
%"class.std::__1::__compressed_pair.294" = type { %"struct.std::__1::__compressed_pair_elem.295" }
%"struct.std::__1::__compressed_pair_elem.295" = type { %class.CPDF_Font* }
%class.CPDF_FontGlobals = type { %class.CPDF_CMapManager, [6 x %"class.pdfium::span.313"], [6 x %"class.pdfium::span.315"], %"class.std::__1::map.317" }
%class.CPDF_CMapManager = type { %"class.std::__1::map.298", [6 x %"class.std::__1::unique_ptr.307"] }
%"class.std::__1::map.298" = type { %"class.std::__1::__tree.299" }
%"class.std::__1::__tree.299" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.300", %"class.std::__1::__compressed_pair.304" }
%"class.std::__1::__compressed_pair.300" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.304" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%"class.std::__1::unique_ptr.307" = type { %"class.std::__1::__compressed_pair.308" }
%"class.std::__1::__compressed_pair.308" = type { %"struct.std::__1::__compressed_pair_elem.309" }
%"struct.std::__1::__compressed_pair_elem.309" = type { %class.CPDF_CID2UnicodeMap* }
%"class.pdfium::span.313" = type { %"class.fxcrt::UnownedPtr.314", i64 }
%"class.fxcrt::UnownedPtr.314" = type { %struct.FXCMAP_CMap* }
%struct.FXCMAP_CMap = type { i8*, i16*, %struct.FXCMAP_DWordCIDMap*, i16, i16, i8, i8 }
%struct.FXCMAP_DWordCIDMap = type { i16, i16, i16, i16 }
%"class.pdfium::span.315" = type { %"class.fxcrt::UnownedPtr.316", i64 }
%"class.fxcrt::UnownedPtr.316" = type { i16* }
%"class.std::__1::map.317" = type { %"class.std::__1::__tree.318" }
%"class.std::__1::__tree.318" = type { %"class.std::__1::__tree_end_node"*, %"class.std::__1::__compressed_pair.319", %"class.std::__1::__compressed_pair.323" }
%"class.std::__1::__compressed_pair.319" = type { %"struct.std::__1::__compressed_pair_elem" }
%"class.std::__1::__compressed_pair.323" = type { %"struct.std::__1::__compressed_pair_elem.2" }
%class.CPDF_Name = type { %class.CPDF_Object, %"class.fxcrt::ByteString" }
%"class.fxcrt::RetainPtr.385" = type { %"class.std::__1::unique_ptr.386" }
%"class.std::__1::unique_ptr.386" = type { %"class.std::__1::__compressed_pair.387" }
%"class.std::__1::__compressed_pair.387" = type { %"struct.std::__1::__compressed_pair_elem.388" }
%"struct.std::__1::__compressed_pair_elem.388" = type { %class.CPDF_Name* }
%"class.std::__1::__vector_base_common" = type { i8 }

$_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA5_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA6_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRN5fxcrt10ByteStringEEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKS3_DpOT0_ = comdat any

$_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA16_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_ = comdat any

$_ZN5fxcrt10RetainableD2Ev = comdat any

$_ZN5fxcrt10RetainableD0Ev = comdat any

$_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA5_KcEEENS2_9RetainPtrIT_EEDpOT0_ = comdat any

$_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA6_KcEEENS2_9RetainPtrIT_EEDpOT0_ = comdat any

$_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA16_KcEEENS2_9RetainPtrIT_EEDpOT0_ = comdat any

$_ZNSt3__16vectorINS_10unique_ptrI8CFX_FontNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_ = comdat any

$_ZTVN5fxcrt10RetainableE = comdat any

@_ZTV9CPDF_Font = hidden unnamed_addr constant { [29 x i8*] } { [29 x i8*] [i8* null, i8* null, i8* bitcast (void (%class.CPDF_Font*)* @_ZN9CPDF_FontD2Ev to i8*), i8* bitcast (void (%class.CPDF_Font*)* @_ZN9CPDF_FontD0Ev to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType1FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font14IsTrueTypeFontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font11IsType3FontEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font9IsCIDFontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_Type1Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType1FontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_TrueTypeFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font14AsTrueTypeFontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZNK9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_Type3Font* (%class.CPDF_Font*)* @_ZN9CPDF_Font11AsType3FontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZNK9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (%class.CPDF_CIDFont* (%class.CPDF_Font*)* @_ZN9CPDF_Font9AsCIDFontEv to i8*), i8* bitcast (void (%class.CPDF_Font*)* @_ZN9CPDF_Font15WillBeDestroyedEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font13IsVertWritingEv to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font19IsUnicodeCompatibleEv to i8*), i8* bitcast (i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)* @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm to i8*), i8* bitcast (i64 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*)* @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE to i8*), i8* bitcast (i32 (%class.CPDF_Font*, i8*, i32)* @_ZNK9CPDF_Font10AppendCharEPcj to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)* @_ZNK9CPDF_Font19UnicodeFromCharCodeEj to i8*), i8* bitcast (i32 (%class.CPDF_Font*, i32)* @_ZNK9CPDF_Font19CharCodeFromUnicodeEw to i8*), i8* bitcast (i1 (%class.CPDF_Font*)* @_ZNK9CPDF_Font13HasFontWidthsEv to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*), i8* bitcast (void ()* @__cxa_pure_virtual to i8*)] }, align 8
@.str = private unnamed_addr constant [9 x i8] c"BaseFont\00", align 1
@.str.1 = private unnamed_addr constant [6 x i8] c"Flags\00", align 1
@.str.2 = private unnamed_addr constant [12 x i8] c"ItalicAngle\00", align 1
@.str.3 = private unnamed_addr constant [6 x i8] c"StemV\00", align 1
@.str.4 = private unnamed_addr constant [7 x i8] c"Ascent\00", align 1
@.str.5 = private unnamed_addr constant [8 x i8] c"Descent\00", align 1
@.str.6 = private unnamed_addr constant [10 x i8] c"CapHeight\00", align 1
@.str.7 = private unnamed_addr constant [9 x i8] c"FontBBox\00", align 1
@.str.8 = private unnamed_addr constant [9 x i8] c"FontFile\00", align 1
@.str.9 = private unnamed_addr constant [10 x i8] c"FontFile2\00", align 1
@.str.10 = private unnamed_addr constant [10 x i8] c"FontFile3\00", align 1
@.str.11 = private unnamed_addr constant [10 x i8] c"ToUnicode\00", align 1
@.str.12 = private unnamed_addr constant [5 x i8] c"Type\00", align 1
@.str.13 = private unnamed_addr constant [5 x i8] c"Font\00", align 1
@.str.14 = private unnamed_addr constant [8 x i8] c"Subtype\00", align 1
@.str.15 = private unnamed_addr constant [6 x i8] c"Type1\00", align 1
@.str.16 = private unnamed_addr constant [9 x i8] c"Encoding\00", align 1
@.str.17 = private unnamed_addr constant [16 x i8] c"WinAnsiEncoding\00", align 1
@.str.18 = private unnamed_addr constant [9 x i8] c"TrueType\00", align 1
@_ZN12_GLOBAL__N_117kChineseFontNamesE = internal constant [5 x [4 x i8]] [[4 x i8] c"\CB\CE\CC\E5", [4 x i8] c"\BF\AC\CC\E5", [4 x i8] c"\BA\DA\CC\E5", [4 x i8] c"\B7\C2\CB\CE", [4 x i8] c"\D0\C2\CB\CE"], align 16
@.str.19 = private unnamed_addr constant [15 x i8] c"FontDescriptor\00", align 1
@.str.20 = private unnamed_addr constant [6 x i8] c"Type3\00", align 1
@.str.21 = private unnamed_addr constant [6 x i8] c"Type0\00", align 1
@.str.22 = private unnamed_addr constant [6 x i8] c"Arial\00", align 1
@_ZTVN5fxcrt10RetainableE = linkonce_odr hidden unnamed_addr constant { [4 x i8*] } { [4 x i8*] [i8* null, i8* null, i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD2Ev to i8*), i8* bitcast (void (%"class.fxcrt::Retainable"*)* @_ZN5fxcrt10RetainableD0Ev to i8*)] }, comdat, align 8

@_ZN9CPDF_FontD1Ev = hidden unnamed_addr alias void (%class.CPDF_Font*), void (%class.CPDF_Font*)* @_ZN9CPDF_FontD2Ev

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_FontC2EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [4 x i8*] }, { [4 x i8*] }* @_ZTVN5fxcrt10RetainableE, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %6 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 0, i32 1
  store i64 0, i64* %6, align 8
  %7 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"* %7) #16
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV9CPDF_Font, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %5, align 8
  %8 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 2, i32 0
  store %class.CPDF_Document* %1, %class.CPDF_Document** %8, align 8
  %9 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 3
  tail call void @_ZN8CFX_FontC1Ev(%class.CFX_Font* %9) #16
  %10 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4
  %11 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 6
  %12 = ptrtoint %class.CPDF_Dictionary* %2 to i64
  %13 = bitcast %"class.fxcrt::RetainPtr.33"* %11 to i64*
  %14 = bitcast %"class.std::__1::vector.192"* %10 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 8 %14, i8 0, i64 32, i1 false)
  store i64 %12, i64* %13, align 8
  %15 = icmp eq %class.CPDF_Dictionary* %2, null
  br i1 %15, label %20, label %16

16:                                               ; preds = %3
  %17 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %2, i64 0, i32 0, i32 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = add nsw i64 %18, 1
  store i64 %19, i64* %17, align 8
  br label %20

20:                                               ; preds = %3, %16
  %21 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 7
  %22 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #16
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret %21, %class.CPDF_Dictionary* %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  %23 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 8
  %24 = bitcast %"class.std::__1::unique_ptr.218"* %23 to i64*
  store i64 0, i64* %24, align 8
  %25 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 9
  store i8 0, i8* %25, align 8
  %26 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 10
  %27 = bitcast i32* %26 to i8*
  call void @llvm.memset.p0i8.i64(i8* align 4 %27, i8 0, i64 36, i1 false)
  ret void
}

declare void @_ZN5fxcrt10ObservableC2Ev(%"class.fxcrt::Observable"*) unnamed_addr #1

declare void @_ZN8CFX_FontC1Ev(%class.CFX_Font*) unnamed_addr #1

declare void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* sret, %class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #2

declare void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"*, i8*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"*) unnamed_addr #3

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #2

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_FontD2Ev(%class.CPDF_Font*) unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 0, i32 0
  store i32 (...)** bitcast (i8** getelementptr inbounds ({ [29 x i8*] }, { [29 x i8*] }* @_ZTV9CPDF_Font, i64 0, inrange i32 0, i64 2) to i32 (...)**), i32 (...)*** %2, align 8
  %3 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %4 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %3, align 8
  %5 = icmp eq %class.CPDF_StreamAcc* %4, null
  br i1 %5, label %20, label %6

6:                                                ; preds = %1
  %7 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 2, i32 0
  %8 = load %class.CPDF_Document*, %class.CPDF_Document** %7, align 8
  %9 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %8, i64 0, i32 11, i32 0, i32 0, i32 0
  %10 = load %"class.CPDF_Document::PageDataIface"*, %"class.CPDF_Document::PageDataIface"** %9, align 8
  %11 = icmp eq %"class.CPDF_Document::PageDataIface"* %10, null
  br i1 %11, label %20, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %4, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Stream*, %class.CPDF_Stream** %13, align 8
  %15 = tail call %class.CPDF_Stream* @_ZNK11CPDF_Stream8AsStreamEv(%class.CPDF_Stream* %14) #16
  %16 = bitcast %"class.CPDF_Document::PageDataIface"* %10 to void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)***
  %17 = load void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)**, void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*** %16, align 8
  %18 = getelementptr inbounds void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*, void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)** %17, i64 4
  %19 = load void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*, void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)** %18, align 8
  tail call void %19(%"class.CPDF_Document::PageDataIface"* nonnull %10, %class.CPDF_Stream* %15) #16
  br label %20

20:                                               ; preds = %1, %12, %6
  %21 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %22 = load %class.CPDF_ToUnicodeMap*, %class.CPDF_ToUnicodeMap** %21, align 8
  store %class.CPDF_ToUnicodeMap* null, %class.CPDF_ToUnicodeMap** %21, align 8
  %23 = icmp eq %class.CPDF_ToUnicodeMap* %22, null
  br i1 %23, label %26, label %24

24:                                               ; preds = %20
  tail call void @_ZN17CPDF_ToUnicodeMapD1Ev(%class.CPDF_ToUnicodeMap* nonnull %22) #16
  %25 = bitcast %class.CPDF_ToUnicodeMap* %22 to i8*
  tail call void @_ZdlPv(i8* %25) #17
  br label %26

26:                                               ; preds = %20, %24
  %27 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 7
  tail call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %27) #16
  %28 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %29 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %28, align 8
  store %class.CPDF_Dictionary* null, %class.CPDF_Dictionary** %28, align 8
  %30 = icmp eq %class.CPDF_Dictionary* %29, null
  br i1 %30, label %42, label %31

31:                                               ; preds = %26
  %32 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %29, i64 0, i32 0, i32 0, i32 1
  %33 = load i64, i64* %32, align 8
  %34 = add nsw i64 %33, -1
  store i64 %34, i64* %32, align 8
  %35 = icmp eq i64 %34, 0
  br i1 %35, label %36, label %42

36:                                               ; preds = %31
  %37 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %29, i64 0, i32 0, i32 0
  %38 = bitcast %class.CPDF_Dictionary* %29 to void (%"class.fxcrt::Retainable"*)***
  %39 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %38, align 8
  %40 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %39, i64 1
  %41 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %40, align 8
  tail call void %41(%"class.fxcrt::Retainable"* nonnull %37) #16
  br label %42

42:                                               ; preds = %26, %31, %36
  %43 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %3, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %3, align 8
  %44 = icmp eq %class.CPDF_StreamAcc* %43, null
  br i1 %44, label %56, label %45

45:                                               ; preds = %42
  %46 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %43, i64 0, i32 0, i32 1
  %47 = load i64, i64* %46, align 8
  %48 = add nsw i64 %47, -1
  store i64 %48, i64* %46, align 8
  %49 = icmp eq i64 %48, 0
  br i1 %49, label %50, label %56

50:                                               ; preds = %45
  %51 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %43, i64 0, i32 0
  %52 = bitcast %class.CPDF_StreamAcc* %43 to void (%"class.fxcrt::Retainable"*)***
  %53 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %52, align 8
  %54 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %53, i64 1
  %55 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %54, align 8
  tail call void %55(%"class.fxcrt::Retainable"* nonnull %51) #16
  br label %56

56:                                               ; preds = %42, %45, %50
  %57 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4
  %58 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %57, i64 0, i32 0, i32 0
  %59 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %58, align 8
  %60 = icmp eq %"class.std::__1::unique_ptr.194"* %59, null
  br i1 %60, label %81, label %61

61:                                               ; preds = %56
  %62 = bitcast %"class.std::__1::unique_ptr.194"* %59 to i8*
  %63 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4, i32 0, i32 1
  %64 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %63, align 8
  %65 = icmp eq %"class.std::__1::unique_ptr.194"* %64, %59
  br i1 %65, label %79, label %66

66:                                               ; preds = %61, %74
  %67 = phi %"class.std::__1::unique_ptr.194"* [ %68, %74 ], [ %64, %61 ]
  %68 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %67, i64 -1
  %69 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %68, i64 0, i32 0, i32 0, i32 0
  %70 = load %class.CFX_Font*, %class.CFX_Font** %69, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %69, align 8
  %71 = icmp eq %class.CFX_Font* %70, null
  br i1 %71, label %74, label %72

72:                                               ; preds = %66
  tail call void @_ZN8CFX_FontD1Ev(%class.CFX_Font* nonnull %70) #16
  %73 = bitcast %class.CFX_Font* %70 to i8*
  tail call void @_ZdlPv(i8* %73) #17
  br label %74

74:                                               ; preds = %72, %66
  %75 = icmp eq %"class.std::__1::unique_ptr.194"* %68, %59
  br i1 %75, label %76, label %66

76:                                               ; preds = %74
  %77 = bitcast %"class.std::__1::vector.192"* %57 to i8**
  %78 = load i8*, i8** %77, align 8
  br label %79

79:                                               ; preds = %76, %61
  %80 = phi i8* [ %78, %76 ], [ %62, %61 ]
  store %"class.std::__1::unique_ptr.194"* %59, %"class.std::__1::unique_ptr.194"** %63, align 8
  tail call void @_ZdlPv(i8* %80) #17
  br label %81

81:                                               ; preds = %56, %79
  %82 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 3
  tail call void @_ZN8CFX_FontD1Ev(%class.CFX_Font* %82) #16
  %83 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 1
  tail call void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"* %83) #16
  ret void
}

declare %class.CPDF_Stream* @_ZNK11CPDF_Stream8AsStreamEv(%class.CPDF_Stream*) unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN8CFX_FontD1Ev(%class.CFX_Font*) unnamed_addr #3

; Function Attrs: nounwind
declare void @_ZN5fxcrt10ObservableD2Ev(%"class.fxcrt::Observable"*) unnamed_addr #3

; Function Attrs: noreturn nounwind ssp uwtable
define hidden void @_ZN9CPDF_FontD0Ev(%class.CPDF_Font* nocapture readnone) unnamed_addr #4 align 2 {
  tail call void @llvm.trap() #18
  unreachable
}

; Function Attrs: cold noreturn nounwind
declare void @llvm.trap() #5

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font11IsType1FontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font14IsTrueTypeFontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font11IsType3FontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font9IsCIDFontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_Type1Font* @_ZNK9CPDF_Font11AsType1FontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_Type1Font* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_Type1Font* @_ZN9CPDF_Font11AsType1FontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_Type1Font* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_TrueTypeFont* @_ZNK9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_TrueTypeFont* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_TrueTypeFont* @_ZN9CPDF_Font14AsTrueTypeFontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_TrueTypeFont* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_Type3Font* @_ZNK9CPDF_Font11AsType3FontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_Type3Font* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_Type3Font* @_ZN9CPDF_Font11AsType3FontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_Type3Font* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_CIDFont* @_ZNK9CPDF_Font9AsCIDFontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_CIDFont* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden noalias %class.CPDF_CIDFont* @_ZN9CPDF_Font9AsCIDFontEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret %class.CPDF_CIDFont* null
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font19IsUnicodeCompatibleEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 false
}

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden i64 @_ZNK9CPDF_Font9CountCharEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_Font* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly) unnamed_addr #7 align 2 {
  %3 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %4 = load i64, i64* %3, align 8
  ret i64 %4
}

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden void @_ZN9CPDF_Font15WillBeDestroyedEv(%class.CPDF_Font* nocapture) unnamed_addr #6 align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font13IsVertWritingEv(%class.CPDF_Font*) unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDF_Font* %0 to %class.CPDF_CIDFont* (%class.CPDF_Font*)***
  %3 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)**, %class.CPDF_CIDFont* (%class.CPDF_Font*)*** %2, align 8
  %4 = getelementptr inbounds %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %3, i64 12
  %5 = load %class.CPDF_CIDFont* (%class.CPDF_Font*)*, %class.CPDF_CIDFont* (%class.CPDF_Font*)** %4, align 8
  %6 = tail call %class.CPDF_CIDFont* %5(%class.CPDF_Font* %0) #16
  %7 = icmp eq %class.CPDF_CIDFont* %6, null
  br i1 %7, label %10, label %8

8:                                                ; preds = %1
  %9 = tail call zeroext i1 @_ZNK12CPDF_CIDFont13IsVertWritingEv(%class.CPDF_CIDFont* nonnull %6) #16
  br label %14

10:                                               ; preds = %1
  %11 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 3, i32 9
  %12 = load i8, i8* %11, align 1, !range !2
  %13 = icmp ne i8 %12, 0
  br label %14

14:                                               ; preds = %10, %8
  %15 = phi i1 [ %9, %8 ], [ %13, %10 ]
  ret i1 %15
}

declare zeroext i1 @_ZNK12CPDF_CIDFont13IsVertWritingEv(%class.CPDF_CIDFont*) unnamed_addr #1

; Function Attrs: nofree norecurse nounwind ssp uwtable writeonly
define hidden i32 @_ZNK9CPDF_Font10AppendCharEPcj(%class.CPDF_Font* nocapture readnone, i8* nocapture, i32) unnamed_addr #8 align 2 {
  %4 = trunc i32 %2 to i8
  store i8 %4, i8* %1, align 1
  ret i32 1
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPDF_Font10AppendCharEPN5fxcrt10ByteStringEj(%class.CPDF_Font*, %"class.fxcrt::ByteString"*, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca i32, align 4
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = bitcast i32* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %6) #16
  %7 = bitcast %class.CPDF_Font* %0 to i32 (%class.CPDF_Font*, i8*, i32)***
  store i32 -1431655766, i32* %4, align 4
  %8 = load i32 (%class.CPDF_Font*, i8*, i32)**, i32 (%class.CPDF_Font*, i8*, i32)*** %7, align 8
  %9 = getelementptr inbounds i32 (%class.CPDF_Font*, i8*, i32)*, i32 (%class.CPDF_Font*, i8*, i32)** %8, i64 19
  %10 = load i32 (%class.CPDF_Font*, i8*, i32)*, i32 (%class.CPDF_Font*, i8*, i32)** %9, align 8
  %11 = call i32 %10(%class.CPDF_Font* %0, i8* nonnull %6, i32 %2) #16
  %12 = sext i32 %11 to i64
  %13 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i32**
  store i32* %4, i32** %13, align 8
  %14 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %5, i64 0, i32 0, i32 1
  store i64 %12, i64* %14, align 8
  %15 = call dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* %1, %"class.fxcrt::StringViewTemplate"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %6) #16
  ret void
}

declare dereferenceable(8) %"class.fxcrt::ByteString"* @_ZN5fxcrt10ByteStringpLENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPDF_Font19UnicodeFromCharCodeEj(%"class.fxcrt::WideString"* noalias sret, %class.CPDF_Font* nocapture, i32) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %1, i64 0, i32 9
  %5 = load i8, i8* %4, align 8, !range !2
  %6 = icmp eq i8 %5, 0
  br i1 %6, label %7, label %8

7:                                                ; preds = %3
  tail call void @_ZNK9CPDF_Font14LoadUnicodeMapEv(%class.CPDF_Font* %1)
  br label %8

8:                                                ; preds = %3, %7
  %9 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %1, i64 0, i32 8, i32 0, i32 0, i32 0
  %10 = load %class.CPDF_ToUnicodeMap*, %class.CPDF_ToUnicodeMap** %9, align 8
  %11 = icmp eq %class.CPDF_ToUnicodeMap* %10, null
  br i1 %11, label %13, label %12

12:                                               ; preds = %8
  tail call void @_ZNK17CPDF_ToUnicodeMap6LookupEj(%"class.fxcrt::WideString"* sret %0, %class.CPDF_ToUnicodeMap* nonnull %10, i32 %2) #16
  br label %14

13:                                               ; preds = %8
  tail call void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"* %0) #16
  br label %14

14:                                               ; preds = %13, %12
  ret void
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZNK9CPDF_Font14LoadUnicodeMapEv(%class.CPDF_Font* nocapture) local_unnamed_addr #0 align 2 {
  %2 = alloca %"class.fxcrt::ByteString", align 8
  %3 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 9
  store i8 1, i8* %3, align 8
  %4 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 6, i32 0, i32 0, i32 0, i32 0
  %5 = load %class.CPDF_Dictionary*, %class.CPDF_Dictionary** %4, align 8
  %6 = bitcast %"class.fxcrt::ByteString"* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %6) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %2, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.11, i64 0, i64 0)) #16
  %7 = call %class.CPDF_Stream* @_ZN15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %5, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %2) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %2) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %6) #16
  %8 = icmp eq %class.CPDF_Stream* %7, null
  br i1 %8, label %20, label %9

9:                                                ; preds = %1
  %10 = call i8* @_Znwm(i64 72) #17
  %11 = bitcast i8* %10 to %class.CPDF_ToUnicodeMap*
  call void @_ZN17CPDF_ToUnicodeMapC1EPK11CPDF_Stream(%class.CPDF_ToUnicodeMap* nonnull %11, %class.CPDF_Stream* nonnull %7) #16
  %12 = ptrtoint i8* %10 to i64
  %13 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 8
  %14 = getelementptr inbounds %"class.std::__1::unique_ptr.218", %"class.std::__1::unique_ptr.218"* %13, i64 0, i32 0, i32 0, i32 0
  %15 = load %class.CPDF_ToUnicodeMap*, %class.CPDF_ToUnicodeMap** %14, align 8
  %16 = bitcast %"class.std::__1::unique_ptr.218"* %13 to i64*
  store i64 %12, i64* %16, align 8
  %17 = icmp eq %class.CPDF_ToUnicodeMap* %15, null
  br i1 %17, label %20, label %18

18:                                               ; preds = %9
  call void @_ZN17CPDF_ToUnicodeMapD1Ev(%class.CPDF_ToUnicodeMap* nonnull %15) #16
  %19 = bitcast %class.CPDF_ToUnicodeMap* %15 to i8*
  call void @_ZdlPv(i8* %19) #17
  br label %20

20:                                               ; preds = %9, %18, %1
  ret void
}

declare void @_ZNK17CPDF_ToUnicodeMap6LookupEj(%"class.fxcrt::WideString"* sret, %class.CPDF_ToUnicodeMap*, i32) local_unnamed_addr #1

declare void @_ZN5fxcrt10WideStringC1Ev(%"class.fxcrt::WideString"*) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9CPDF_Font19CharCodeFromUnicodeEw(%class.CPDF_Font* nocapture, i32 signext) unnamed_addr #0 align 2 {
  %3 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 9
  %4 = load i8, i8* %3, align 8, !range !2
  %5 = icmp eq i8 %4, 0
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void @_ZNK9CPDF_Font14LoadUnicodeMapEv(%class.CPDF_Font* %0)
  br label %7

7:                                                ; preds = %2, %6
  %8 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 8, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_ToUnicodeMap*, %class.CPDF_ToUnicodeMap** %8, align 8
  %10 = icmp eq %class.CPDF_ToUnicodeMap* %9, null
  br i1 %10, label %13, label %11

11:                                               ; preds = %7
  %12 = tail call i32 @_ZNK17CPDF_ToUnicodeMap13ReverseLookupEw(%class.CPDF_ToUnicodeMap* nonnull %9, i32 signext %1) #16
  br label %13

13:                                               ; preds = %7, %11
  %14 = phi i32 [ %12, %11 ], [ 0, %7 ]
  ret i32 %14
}

declare i32 @_ZNK17CPDF_ToUnicodeMap13ReverseLookupEw(%class.CPDF_ToUnicodeMap*, i32 signext) local_unnamed_addr #1

; Function Attrs: norecurse nounwind readnone ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font13HasFontWidthsEv(%class.CPDF_Font* nocapture readnone) unnamed_addr #6 align 2 {
  ret i1 true
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Font18LoadFontDescriptorEPK15CPDF_Dictionary(%class.CPDF_Font*, %class.CPDF_Dictionary*) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.fxcrt::ByteString", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = alloca %"class.fxcrt::ByteString", align 8
  %14 = alloca %"class.fxcrt::ByteString", align 8
  %15 = alloca %"class.fxcrt::ByteString", align 8
  %16 = alloca %"class.fxcrt::ByteString", align 8
  %17 = alloca %"class.fxcrt::RetainPtr.200", align 8
  %18 = alloca <2 x i64>, align 16
  %19 = bitcast <2 x i64>* %18 to %"class.pdfium::span.269"*
  %20 = alloca <2 x i64>, align 16
  %21 = bitcast <2 x i64>* %20 to %"class.pdfium::span"*
  %22 = bitcast %"class.fxcrt::ByteString"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %3, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.1, i64 0, i64 0)) #16
  %23 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %3, i32 32) #16
  %24 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 10
  store i32 %23, i32* %24, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %3) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  %25 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)) #16
  %26 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  br i1 %26, label %27, label %35

27:                                               ; preds = %2
  %28 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %28) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([12 x i8], [12 x i8]* @.str.2, i64 0, i64 0)) #16
  %29 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %28) #16
  %30 = icmp slt i32 %29, 0
  br i1 %30, label %31, label %35

31:                                               ; preds = %27
  %32 = load i32, i32* %24, align 4
  %33 = or i32 %32, 64
  store i32 %33, i32* %24, align 4
  %34 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 14
  store i32 %29, i32* %34, align 4
  br label %35

35:                                               ; preds = %2, %31, %27
  %36 = phi i1 [ false, %31 ], [ false, %27 ], [ true, %2 ]
  %37 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %37) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #16
  %38 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %37) #16
  br i1 %38, label %39, label %43

39:                                               ; preds = %35
  %40 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %40) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.3, i64 0, i64 0)) #16
  %41 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7) #16
  %42 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 11
  store i32 %41, i32* %42, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %40) #16
  br label %43

43:                                               ; preds = %39, %35
  %44 = phi i1 [ false, %39 ], [ true, %35 ]
  %45 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %45) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #16
  %46 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %45) #16
  br i1 %46, label %47, label %51

47:                                               ; preds = %43
  %48 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([7 x i8], [7 x i8]* @.str.4, i64 0, i64 0)) #16
  %49 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #16
  %50 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 12
  store i32 %49, i32* %50, align 4
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  br label %51

51:                                               ; preds = %47, %43
  %52 = phi i1 [ false, %47 ], [ true, %43 ]
  %53 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %53) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #16
  %54 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %53) #16
  br i1 %54, label %55, label %59

55:                                               ; preds = %51
  %56 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %56) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.5, i64 0, i64 0)) #16
  %57 = call i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #16
  %58 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 13
  store i32 %57, i32* %58, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %56) #16
  br label %59

59:                                               ; preds = %55, %51
  %60 = phi i1 [ false, %55 ], [ true, %51 ]
  %61 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %61) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.6, i64 0, i64 0)) #16
  %62 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %61) #16
  %63 = or i1 %36, %52
  %64 = xor i1 %62, true
  %65 = or i1 %63, %64
  %66 = or i1 %60, %65
  %67 = or i1 %44, %66
  br i1 %67, label %71, label %68

68:                                               ; preds = %59
  %69 = load i32, i32* %24, align 4
  %70 = or i32 %69, 524288
  store i32 %70, i32* %24, align 4
  br label %71

71:                                               ; preds = %59, %68
  %72 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 13
  %73 = load i32, i32* %72, align 8
  %74 = icmp sgt i32 %73, 10
  br i1 %74, label %75, label %77

75:                                               ; preds = %71
  %76 = sub nsw i32 0, %73
  store i32 %76, i32* %72, align 8
  br label %77

77:                                               ; preds = %75, %71
  %78 = bitcast %"class.fxcrt::ByteString"* %13 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %78) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %13, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.7, i64 0, i64 0)) #16
  %79 = call %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %13) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %13) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %78) #16
  %80 = icmp eq %class.CPDF_Array* %79, null
  br i1 %80, label %90, label %81

81:                                               ; preds = %77
  %82 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %79, i64 0) #16
  %83 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 0
  store i32 %82, i32* %83, align 8
  %84 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %79, i64 1) #16
  %85 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 3
  store i32 %84, i32* %85, align 4
  %86 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %79, i64 2) #16
  %87 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 2
  store i32 %86, i32* %87, align 8
  %88 = call i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array* nonnull %79, i64 3) #16
  %89 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 1
  store i32 %88, i32* %89, align 4
  br label %90

90:                                               ; preds = %77, %81
  %91 = bitcast %"class.fxcrt::ByteString"* %14 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %91) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %14, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.8, i64 0, i64 0)) #16
  %92 = call %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %14) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %14) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %91) #16
  %93 = icmp eq %class.CPDF_Stream* %92, null
  br i1 %93, label %94, label %102

94:                                               ; preds = %90
  %95 = bitcast %"class.fxcrt::ByteString"* %15 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %95) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %15, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #16
  %96 = call %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %15) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %15) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %95) #16
  %97 = icmp eq %class.CPDF_Stream* %96, null
  br i1 %97, label %98, label %102

98:                                               ; preds = %94
  %99 = bitcast %"class.fxcrt::ByteString"* %16 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %99) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %16, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.10, i64 0, i64 0)) #16
  %100 = call %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %1, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %16) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %16) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %99) #16
  %101 = icmp eq %class.CPDF_Stream* %100, null
  br i1 %101, label %181, label %102

102:                                              ; preds = %90, %94, %98
  %103 = phi %class.CPDF_Stream* [ %100, %98 ], [ %96, %94 ], [ %92, %90 ]
  %104 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 2, i32 0
  %105 = load %class.CPDF_Document*, %class.CPDF_Document** %104, align 8
  %106 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %105, i64 0, i32 11, i32 0, i32 0, i32 0
  %107 = load %"class.CPDF_Document::PageDataIface"*, %"class.CPDF_Document::PageDataIface"** %106, align 8
  %108 = bitcast %"class.fxcrt::RetainPtr.200"* %17 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %108) #16
  %109 = bitcast %"class.CPDF_Document::PageDataIface"* %107 to void (%"class.fxcrt::RetainPtr.200"*, %"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)***
  %110 = load void (%"class.fxcrt::RetainPtr.200"*, %"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)**, void (%"class.fxcrt::RetainPtr.200"*, %"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*** %109, align 8
  %111 = getelementptr inbounds void (%"class.fxcrt::RetainPtr.200"*, %"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*, void (%"class.fxcrt::RetainPtr.200"*, %"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)** %110, i64 3
  %112 = load void (%"class.fxcrt::RetainPtr.200"*, %"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*, void (%"class.fxcrt::RetainPtr.200"*, %"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)** %111, align 8
  call void %112(%"class.fxcrt::RetainPtr.200"* nonnull sret %17, %"class.CPDF_Document::PageDataIface"* %107, %class.CPDF_Stream* nonnull %103) #16
  %113 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 5
  %114 = getelementptr inbounds %"class.fxcrt::RetainPtr.200", %"class.fxcrt::RetainPtr.200"* %17, i64 0, i32 0, i32 0, i32 0, i32 0
  %115 = bitcast %"class.fxcrt::RetainPtr.200"* %17 to i64*
  %116 = load i64, i64* %115, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %114, align 8
  %117 = getelementptr inbounds %"class.fxcrt::RetainPtr.200", %"class.fxcrt::RetainPtr.200"* %113, i64 0, i32 0, i32 0, i32 0, i32 0
  %118 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %117, align 8
  %119 = bitcast %"class.fxcrt::RetainPtr.200"* %113 to i64*
  store i64 %116, i64* %119, align 8
  %120 = icmp eq %class.CPDF_StreamAcc* %118, null
  br i1 %120, label %126, label %121

121:                                              ; preds = %102
  %122 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %118, i64 0, i32 0, i32 1
  %123 = load i64, i64* %122, align 8
  %124 = add nsw i64 %123, -1
  store i64 %124, i64* %122, align 8
  %125 = icmp eq i64 %124, 0
  br i1 %125, label %127, label %126

126:                                              ; preds = %102, %121
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %114, align 8
  br label %146

127:                                              ; preds = %121
  %128 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %118, i64 0, i32 0
  %129 = bitcast %class.CPDF_StreamAcc* %118 to void (%"class.fxcrt::Retainable"*)***
  %130 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %129, align 8
  %131 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %130, i64 1
  %132 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %131, align 8
  call void %132(%"class.fxcrt::Retainable"* nonnull %128) #16
  %133 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %114, align 8
  %134 = bitcast %class.CPDF_StreamAcc* %133 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %114, align 8
  %135 = icmp eq %class.CPDF_StreamAcc* %133, null
  br i1 %135, label %146, label %136

136:                                              ; preds = %127
  %137 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %133, i64 0, i32 0, i32 1
  %138 = load i64, i64* %137, align 8
  %139 = add nsw i64 %138, -1
  store i64 %139, i64* %137, align 8
  %140 = icmp eq i64 %139, 0
  br i1 %140, label %141, label %146

141:                                              ; preds = %136
  %142 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %133, i64 0, i32 0
  %143 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %134, align 8
  %144 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %143, i64 1
  %145 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %144, align 8
  call void %145(%"class.fxcrt::Retainable"* nonnull %142) #16
  br label %146

146:                                              ; preds = %126, %127, %136, %141
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %108) #16
  %147 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %117, align 8
  %148 = icmp eq %class.CPDF_StreamAcc* %147, null
  br i1 %148, label %181, label %149

149:                                              ; preds = %146
  %150 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 3
  %151 = bitcast <2 x i64>* %20 to i8*
  call void @llvm.lifetime.start.p0i8(i64 16, i8* nonnull %151) #16
  call void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span"* nonnull sret %21, %class.CPDF_StreamAcc* nonnull %147) #16
  %152 = load <2 x i64>, <2 x i64>* %20, align 16
  store <2 x i64> %152, <2 x i64>* %18, align 16
  %153 = bitcast %class.CPDF_Font* %0 to i1 (%class.CPDF_Font*)***
  %154 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %153, align 8
  %155 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %154, i64 15
  %156 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %155, align 8
  %157 = call zeroext i1 %156(%class.CPDF_Font* %0) #16
  %158 = call zeroext i1 @_ZN8CFX_Font12LoadEmbeddedEN6pdfium4spanIKhEEb(%class.CFX_Font* %150, %"class.pdfium::span.269"* nonnull %19, i1 zeroext %157) #16
  call void @llvm.lifetime.end.p0i8(i64 16, i8* nonnull %151) #16
  br i1 %158, label %181, label %159

159:                                              ; preds = %149
  %160 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %117, align 8
  %161 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %160, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %162 = load %class.CPDF_Stream*, %class.CPDF_Stream** %161, align 8
  %163 = call %class.CPDF_Stream* @_ZNK11CPDF_Stream8AsStreamEv(%class.CPDF_Stream* %162) #16
  %164 = bitcast %"class.CPDF_Document::PageDataIface"* %107 to void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)***
  %165 = load void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)**, void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*** %164, align 8
  %166 = getelementptr inbounds void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*, void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)** %165, i64 4
  %167 = load void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)*, void (%"class.CPDF_Document::PageDataIface"*, %class.CPDF_Stream*)** %166, align 8
  call void %167(%"class.CPDF_Document::PageDataIface"* %107, %class.CPDF_Stream* %163) #16
  %168 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %117, align 8
  store %class.CPDF_StreamAcc* null, %class.CPDF_StreamAcc** %117, align 8
  %169 = icmp eq %class.CPDF_StreamAcc* %168, null
  br i1 %169, label %181, label %170

170:                                              ; preds = %159
  %171 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %168, i64 0, i32 0, i32 1
  %172 = load i64, i64* %171, align 8
  %173 = add nsw i64 %172, -1
  store i64 %173, i64* %171, align 8
  %174 = icmp eq i64 %173, 0
  br i1 %174, label %175, label %181

175:                                              ; preds = %170
  %176 = getelementptr inbounds %class.CPDF_StreamAcc, %class.CPDF_StreamAcc* %168, i64 0, i32 0
  %177 = bitcast %class.CPDF_StreamAcc* %168 to void (%"class.fxcrt::Retainable"*)***
  %178 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %177, align 8
  %179 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %178, i64 1
  %180 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %179, align 8
  call void %180(%"class.fxcrt::Retainable"* nonnull %176) #16
  br label %181

181:                                              ; preds = %146, %175, %170, %159, %149, %98
  ret void
}

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringEi(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), i32) local_unnamed_addr #1

declare zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK15CPDF_Dictionary13GetIntegerForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare %class.CPDF_Array* @_ZNK15CPDF_Dictionary11GetArrayForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare i32 @_ZNK10CPDF_Array12GetIntegerAtEm(%class.CPDF_Array*, i64) local_unnamed_addr #1

declare %class.CPDF_Stream* @_ZNK15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZN8CFX_Font12LoadEmbeddedEN6pdfium4spanIKhEEb(%class.CFX_Font*, %"class.pdfium::span.269"*, i1 zeroext) local_unnamed_addr #1

declare void @_ZN14CPDF_StreamAcc7GetSpanEv(%"class.pdfium::span"* sret, %class.CPDF_StreamAcc*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Font16CheckFontMetricsEv(%class.CPDF_Font*) local_unnamed_addr #0 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 1
  %3 = load i32, i32* %2, align 4
  %4 = icmp eq i32 %3, 0
  br i1 %4, label %5, label %194

5:                                                ; preds = %1
  %6 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 3
  %7 = load i32, i32* %6, align 4
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %9, label %194

9:                                                ; preds = %5
  %10 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 0
  %11 = load i32, i32* %10, align 8
  %12 = icmp eq i32 %11, 0
  br i1 %12, label %13, label %194

13:                                               ; preds = %9
  %14 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 2
  %15 = load i32, i32* %14, align 8
  %16 = icmp eq i32 %15, 0
  br i1 %16, label %17, label %194

17:                                               ; preds = %13
  %18 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 3, i32 2, i32 0, i32 0, i32 0, i32 0
  %19 = load %class.CFX_Face*, %class.CFX_Face** %18, align 8
  %20 = icmp eq %class.CFX_Face* %19, null
  br i1 %20, label %25, label %21

21:                                               ; preds = %17
  %22 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %19, i64 0, i32 2, i32 0, i32 0, i32 0
  %23 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %22, align 8
  %24 = icmp eq %struct.FT_FaceRec_* %23, null
  br i1 %24, label %25, label %30

25:                                               ; preds = %17, %21
  %26 = bitcast %class.CPDF_Font* %0 to { i64, i64 } (%class.CPDF_Font*, i32)***
  %27 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15
  %28 = bitcast %struct.FX_RECT* %27 to i64*
  %29 = bitcast i32* %14 to i64*
  br label %154

30:                                               ; preds = %21
  %31 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %23, i64 0, i32 12, i32 0
  %32 = load i64, i64* %31, align 8
  %33 = trunc i64 %32 to i32
  %34 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %23, i64 0, i32 13
  %35 = load i16, i16* %34, align 8
  %36 = icmp eq i16 %35, 0
  br i1 %36, label %50, label %37

37:                                               ; preds = %30
  %38 = sitofp i32 %33 to double
  %39 = fmul double %38, 1.000000e+03
  %40 = lshr i16 %35, 1
  %41 = uitofp i16 %40 to double
  %42 = fadd double %39, %41
  %43 = uitofp i16 %35 to double
  %44 = fdiv double %42, %43
  %45 = fcmp olt double %44, 0xC1E0000000000000
  %46 = select i1 %45, double 0xC1E0000000000000, double %44
  %47 = fcmp ogt double %46, 0x41DFFFFFFFC00000
  %48 = select i1 %47, double 0x41DFFFFFFFC00000, double %46
  %49 = fptosi double %48 to i32
  br label %50

50:                                               ; preds = %30, %37
  %51 = phi i32 [ %49, %37 ], [ %33, %30 ]
  store i32 %51, i32* %10, align 8
  %52 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %23, i64 0, i32 12, i32 1
  %53 = load i64, i64* %52, align 8
  %54 = trunc i64 %53 to i32
  %55 = load i16, i16* %34, align 8
  %56 = icmp eq i16 %55, 0
  br i1 %56, label %70, label %57

57:                                               ; preds = %50
  %58 = sitofp i32 %54 to double
  %59 = fmul double %58, 1.000000e+03
  %60 = lshr i16 %55, 1
  %61 = uitofp i16 %60 to double
  %62 = fadd double %59, %61
  %63 = uitofp i16 %55 to double
  %64 = fdiv double %62, %63
  %65 = fcmp olt double %64, 0xC1E0000000000000
  %66 = select i1 %65, double 0xC1E0000000000000, double %64
  %67 = fcmp ogt double %66, 0x41DFFFFFFFC00000
  %68 = select i1 %67, double 0x41DFFFFFFFC00000, double %66
  %69 = fptosi double %68 to i32
  br label %70

70:                                               ; preds = %50, %57
  %71 = phi i32 [ %69, %57 ], [ %54, %50 ]
  store i32 %71, i32* %6, align 4
  %72 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %23, i64 0, i32 12, i32 2
  %73 = load i64, i64* %72, align 8
  %74 = trunc i64 %73 to i32
  %75 = load i16, i16* %34, align 8
  %76 = icmp eq i16 %75, 0
  br i1 %76, label %90, label %77

77:                                               ; preds = %70
  %78 = sitofp i32 %74 to double
  %79 = fmul double %78, 1.000000e+03
  %80 = lshr i16 %75, 1
  %81 = uitofp i16 %80 to double
  %82 = fadd double %79, %81
  %83 = uitofp i16 %75 to double
  %84 = fdiv double %82, %83
  %85 = fcmp olt double %84, 0xC1E0000000000000
  %86 = select i1 %85, double 0xC1E0000000000000, double %84
  %87 = fcmp ogt double %86, 0x41DFFFFFFFC00000
  %88 = select i1 %87, double 0x41DFFFFFFFC00000, double %86
  %89 = fptosi double %88 to i32
  br label %90

90:                                               ; preds = %70, %77
  %91 = phi i32 [ %89, %77 ], [ %74, %70 ]
  store i32 %91, i32* %14, align 8
  %92 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %23, i64 0, i32 12, i32 3
  %93 = load i64, i64* %92, align 8
  %94 = trunc i64 %93 to i32
  %95 = load i16, i16* %34, align 8
  %96 = icmp eq i16 %95, 0
  br i1 %96, label %110, label %97

97:                                               ; preds = %90
  %98 = sitofp i32 %94 to double
  %99 = fmul double %98, 1.000000e+03
  %100 = lshr i16 %95, 1
  %101 = uitofp i16 %100 to double
  %102 = fadd double %99, %101
  %103 = uitofp i16 %95 to double
  %104 = fdiv double %102, %103
  %105 = fcmp olt double %104, 0xC1E0000000000000
  %106 = select i1 %105, double 0xC1E0000000000000, double %104
  %107 = fcmp ogt double %106, 0x41DFFFFFFFC00000
  %108 = select i1 %107, double 0x41DFFFFFFFC00000, double %106
  %109 = fptosi double %108 to i32
  br label %110

110:                                              ; preds = %90, %97
  %111 = phi i32 [ %109, %97 ], [ %94, %90 ]
  store i32 %111, i32* %2, align 4
  %112 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %23, i64 0, i32 14
  %113 = load i16, i16* %112, align 2
  %114 = sext i16 %113 to i32
  %115 = load i16, i16* %34, align 8
  %116 = icmp eq i16 %115, 0
  br i1 %116, label %130, label %117

117:                                              ; preds = %110
  %118 = sitofp i16 %113 to double
  %119 = fmul double %118, 1.000000e+03
  %120 = lshr i16 %115, 1
  %121 = uitofp i16 %120 to double
  %122 = fadd double %119, %121
  %123 = uitofp i16 %115 to double
  %124 = fdiv double %122, %123
  %125 = fcmp olt double %124, 0xC1E0000000000000
  %126 = select i1 %125, double 0xC1E0000000000000, double %124
  %127 = fcmp ogt double %126, 0x41DFFFFFFFC00000
  %128 = select i1 %127, double 0x41DFFFFFFFC00000, double %126
  %129 = fptosi double %128 to i32
  br label %130

130:                                              ; preds = %110, %117
  %131 = phi i32 [ %129, %117 ], [ %114, %110 ]
  %132 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 12
  store i32 %131, i32* %132, align 4
  %133 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %23, i64 0, i32 15
  %134 = load i16, i16* %133, align 4
  %135 = sext i16 %134 to i32
  %136 = load i16, i16* %34, align 8
  %137 = icmp eq i16 %136, 0
  br i1 %137, label %151, label %138

138:                                              ; preds = %130
  %139 = sitofp i16 %134 to double
  %140 = fmul double %139, 1.000000e+03
  %141 = lshr i16 %136, 1
  %142 = uitofp i16 %141 to double
  %143 = fadd double %140, %142
  %144 = uitofp i16 %136 to double
  %145 = fdiv double %143, %144
  %146 = fcmp olt double %145, 0xC1E0000000000000
  %147 = select i1 %146, double 0xC1E0000000000000, double %145
  %148 = fcmp ogt double %147, 0x41DFFFFFFFC00000
  %149 = select i1 %148, double 0x41DFFFFFFFC00000, double %147
  %150 = fptosi double %149 to i32
  br label %151

151:                                              ; preds = %130, %138
  %152 = phi i32 [ %150, %138 ], [ %135, %130 ]
  %153 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 13
  store i32 %152, i32* %153, align 8
  br label %194

154:                                              ; preds = %190, %25
  %155 = phi i8 [ 1, %25 ], [ %191, %190 ]
  %156 = phi i32 [ 0, %25 ], [ %192, %190 ]
  %157 = load { i64, i64 } (%class.CPDF_Font*, i32)**, { i64, i64 } (%class.CPDF_Font*, i32)*** %26, align 8
  %158 = getelementptr inbounds { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %157, i64 25
  %159 = load { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %158, align 8
  %160 = tail call { i64, i64 } %159(%class.CPDF_Font* %0, i32 %156) #16
  %161 = extractvalue { i64, i64 } %160, 0
  %162 = trunc i64 %161 to i32
  %163 = lshr i64 %161, 32
  %164 = trunc i64 %163 to i32
  %165 = extractvalue { i64, i64 } %160, 1
  %166 = trunc i64 %165 to i32
  %167 = icmp eq i32 %162, %166
  br i1 %167, label %190, label %168

168:                                              ; preds = %154
  %169 = and i8 %155, 1
  %170 = icmp eq i8 %169, 0
  br i1 %170, label %172, label %171

171:                                              ; preds = %168
  store i64 %161, i64* %28, align 8
  store i64 %165, i64* %29, align 8
  br label %190

172:                                              ; preds = %168
  %173 = load i32, i32* %2, align 4
  %174 = icmp slt i32 %173, %164
  br i1 %174, label %175, label %176

175:                                              ; preds = %172
  store i32 %164, i32* %2, align 4
  br label %176

176:                                              ; preds = %175, %172
  %177 = load i32, i32* %14, align 8
  %178 = icmp slt i32 %177, %166
  br i1 %178, label %179, label %180

179:                                              ; preds = %176
  store i32 %166, i32* %14, align 8
  br label %180

180:                                              ; preds = %179, %176
  %181 = load i32, i32* %10, align 8
  %182 = icmp sgt i32 %181, %162
  br i1 %182, label %183, label %184

183:                                              ; preds = %180
  store i32 %162, i32* %10, align 8
  br label %184

184:                                              ; preds = %183, %180
  %185 = load i32, i32* %6, align 4
  %186 = lshr i64 %165, 32
  %187 = trunc i64 %186 to i32
  %188 = icmp sgt i32 %185, %187
  br i1 %188, label %189, label %190

189:                                              ; preds = %184
  store i32 %187, i32* %6, align 4
  br label %190

190:                                              ; preds = %171, %189, %184, %154
  %191 = phi i8 [ %155, %154 ], [ 0, %171 ], [ %155, %189 ], [ %155, %184 ]
  %192 = add nuw nsw i32 %156, 1
  %193 = icmp eq i32 %192, 256
  br i1 %193, label %194, label %154

194:                                              ; preds = %190, %151, %13, %9, %5, %1
  %195 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 12
  %196 = load i32, i32* %195, align 4
  %197 = icmp eq i32 %196, 0
  br i1 %197, label %198, label %235

198:                                              ; preds = %194
  %199 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 13
  %200 = load i32, i32* %199, align 8
  %201 = icmp eq i32 %200, 0
  br i1 %201, label %202, label %235

202:                                              ; preds = %198
  %203 = bitcast %class.CPDF_Font* %0 to { i64, i64 } (%class.CPDF_Font*, i32)***
  %204 = load { i64, i64 } (%class.CPDF_Font*, i32)**, { i64, i64 } (%class.CPDF_Font*, i32)*** %203, align 8
  %205 = getelementptr inbounds { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %204, i64 25
  %206 = load { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %205, align 8
  %207 = tail call { i64, i64 } %206(%class.CPDF_Font* %0, i32 65) #16
  %208 = extractvalue { i64, i64 } %207, 0
  %209 = lshr i64 %208, 32
  %210 = trunc i64 %209 to i32
  %211 = extractvalue { i64, i64 } %207, 1
  %212 = lshr i64 %211, 32
  %213 = trunc i64 %212 to i32
  %214 = icmp eq i32 %213, %210
  br i1 %214, label %215, label %217

215:                                              ; preds = %202
  %216 = load i32, i32* %2, align 4
  br label %217

217:                                              ; preds = %202, %215
  %218 = phi i32 [ %216, %215 ], [ %210, %202 ]
  store i32 %218, i32* %195, align 4
  %219 = load { i64, i64 } (%class.CPDF_Font*, i32)**, { i64, i64 } (%class.CPDF_Font*, i32)*** %203, align 8
  %220 = getelementptr inbounds { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %219, i64 25
  %221 = load { i64, i64 } (%class.CPDF_Font*, i32)*, { i64, i64 } (%class.CPDF_Font*, i32)** %220, align 8
  %222 = tail call { i64, i64 } %221(%class.CPDF_Font* %0, i32 103) #16
  %223 = extractvalue { i64, i64 } %222, 0
  %224 = extractvalue { i64, i64 } %222, 1
  %225 = lshr i64 %223, 32
  %226 = trunc i64 %225 to i32
  %227 = lshr i64 %224, 32
  %228 = trunc i64 %227 to i32
  %229 = icmp eq i32 %228, %226
  br i1 %229, label %230, label %233

230:                                              ; preds = %217
  %231 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 15, i32 3
  %232 = load i32, i32* %231, align 4
  br label %233

233:                                              ; preds = %217, %230
  %234 = phi i32 [ %232, %230 ], [ %228, %217 ]
  store i32 %234, i32* %199, align 8
  br label %235

235:                                              ; preds = %233, %198, %194
  ret void
}

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZN9CPDF_Font6TT2PDFEiP11FT_FaceRec_(i32, %struct.FT_FaceRec_* nocapture readonly) local_unnamed_addr #9 align 2 {
  %3 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %1, i64 0, i32 13
  %4 = load i16, i16* %3, align 8
  %5 = icmp eq i16 %4, 0
  br i1 %5, label %19, label %6

6:                                                ; preds = %2
  %7 = sitofp i32 %0 to double
  %8 = fmul double %7, 1.000000e+03
  %9 = lshr i16 %4, 1
  %10 = uitofp i16 %9 to double
  %11 = fadd double %8, %10
  %12 = uitofp i16 %4 to double
  %13 = fdiv double %11, %12
  %14 = fcmp olt double %13, 0xC1E0000000000000
  %15 = select i1 %14, double 0xC1E0000000000000, double %13
  %16 = fcmp ogt double %15, 0x41DFFFFFFFC00000
  %17 = select i1 %16, double 0x41DFFFFFFFC00000, double %15
  %18 = fptosi double %17 to i32
  br label %19

19:                                               ; preds = %2, %6
  %20 = phi i32 [ %18, %6 ], [ %0, %2 ]
  ret i32 %20
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memcpy.p0i8.p0i8.i64(i8* nocapture writeonly, i8* nocapture readonly, i64, i1 immarg) #2

declare %class.CPDF_Stream* @_ZN15CPDF_Dictionary12GetStreamForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9CPDF_Font14GetStringWidthEN5fxcrt18StringViewTemplateIcEE(%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %3 = alloca i64, align 8
  %4 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %5 = bitcast i64* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %5) #16
  store i64 0, i64* %3, align 8
  %6 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %7 = load i64, i64* %6, align 8
  %8 = icmp eq i64 %7, 0
  br i1 %8, label %28, label %9

9:                                                ; preds = %2
  %10 = bitcast %"class.fxcrt::StringViewTemplate"* %4 to i8*
  %11 = bitcast %"class.fxcrt::StringViewTemplate"* %1 to i8*
  %12 = bitcast %class.CPDF_Font* %0 to i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)***
  %13 = bitcast %class.CPDF_Font* %0 to i32 (%class.CPDF_Font*, i32)***
  br label %14

14:                                               ; preds = %9, %14
  %15 = phi i32 [ 0, %9 ], [ %24, %14 ]
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %10, i8* align 8 %11, i64 16, i1 false)
  %16 = load i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)**, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*** %12, align 8
  %17 = getelementptr inbounds i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)** %16, i64 17
  %18 = load i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)*, i32 (%class.CPDF_Font*, %"class.fxcrt::StringViewTemplate"*, i64*)** %17, align 8
  %19 = call i32 %18(%class.CPDF_Font* %0, %"class.fxcrt::StringViewTemplate"* nonnull %4, i64* nonnull %3) #16
  %20 = load i32 (%class.CPDF_Font*, i32)**, i32 (%class.CPDF_Font*, i32)*** %13, align 8
  %21 = getelementptr inbounds i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %20, i64 24
  %22 = load i32 (%class.CPDF_Font*, i32)*, i32 (%class.CPDF_Font*, i32)** %21, align 8
  %23 = call i32 %22(%class.CPDF_Font* %0, i32 %19) #16
  %24 = add nsw i32 %23, %15
  %25 = load i64, i64* %3, align 8
  %26 = load i64, i64* %6, align 8
  %27 = icmp ult i64 %25, %26
  br i1 %27, label %14, label %28

28:                                               ; preds = %14, %2
  %29 = phi i32 [ 0, %2 ], [ %24, %14 ]
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %5) #16
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Font12GetStockFontEP13CPDF_DocumentN5fxcrt18StringViewTemplateIcEE(%"class.fxcrt::RetainPtr.292"* noalias nocapture sret, %class.CPDF_Document*, %"class.fxcrt::StringViewTemplate"* nocapture readonly) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = alloca %"class.fxcrt::StringViewTemplate", align 8
  %6 = alloca %"class.fxcrt::RetainPtr.292", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::RetainPtr.292", align 8
  %12 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %13 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %13, align 8
  %14 = bitcast %"class.fxcrt::StringViewTemplate"* %5 to i8*
  %15 = bitcast %"class.fxcrt::StringViewTemplate"* %2 to i8*
  call void @llvm.memcpy.p0i8.p0i8.i64(i8* nonnull align 8 %14, i8* align 8 %15, i64 16, i1 false)
  call void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"* nonnull %4, %"class.fxcrt::StringViewTemplate"* nonnull %5) #16
  %16 = call i16 @_ZN14CFX_FontMapper19GetStandardFontNameEPN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull %4) #16
  %17 = trunc i16 %16 to i8
  %18 = lshr i16 %16, 8
  %19 = trunc i16 %18 to i8
  %20 = icmp eq i8 %17, 0
  br i1 %20, label %21, label %23

21:                                               ; preds = %3
  %22 = bitcast %"class.fxcrt::RetainPtr.292"* %0 to i64*
  store i64 0, i64* %22, align 8
  br label %97

23:                                               ; preds = %3
  %24 = call %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() #16
  %25 = bitcast %"class.fxcrt::RetainPtr.292"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %25) #16
  %26 = getelementptr inbounds %"class.fxcrt::RetainPtr.292", %"class.fxcrt::RetainPtr.292"* %6, i64 0, i32 0, i32 0, i32 0, i32 0
  store %class.CPDF_Font* inttoptr (i64 -6148914691236517206 to %class.CPDF_Font*), %class.CPDF_Font** %26, align 8
  %27 = icmp eq i8 %17, 1
  br i1 %27, label %29, label %28, !prof !3

28:                                               ; preds = %23
  call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !4
  call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !5
  unreachable

29:                                               ; preds = %23
  call void @_ZN16CPDF_FontGlobals4FindEP13CPDF_DocumentN14CFX_FontMapper12StandardFontE(%"class.fxcrt::RetainPtr.292"* nonnull sret %6, %class.CPDF_FontGlobals* %24, %class.CPDF_Document* %1, i8 zeroext %19) #16
  %30 = load %class.CPDF_Font*, %class.CPDF_Font** %26, align 8
  %31 = icmp eq %class.CPDF_Font* %30, null
  br i1 %31, label %36, label %32

32:                                               ; preds = %29
  %33 = ptrtoint %class.CPDF_Font* %30 to i64
  %34 = bitcast %"class.fxcrt::RetainPtr.292"* %0 to i64*
  %35 = bitcast %"class.fxcrt::RetainPtr.292"* %6 to i64*
  store i64 %33, i64* %34, align 8
  store i64 0, i64* %35, align 8
  br label %76

36:                                               ; preds = %29
  %37 = getelementptr inbounds %class.CPDF_Document, %class.CPDF_Document* %1, i64 0, i32 0, i32 0, i32 3
  %38 = call i8* @_Znwm(i64 64) #17, !noalias !6
  %39 = bitcast i8* %38 to %class.CPDF_Dictionary*
  call void @_ZN15CPDF_DictionaryC1ERKN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEE(%class.CPDF_Dictionary* nonnull %39, %"class.fxcrt::WeakPtr"* dereferenceable(8) %37) #16, !noalias !6
  %40 = getelementptr inbounds i8, i8* %38, i64 8
  %41 = bitcast i8* %40 to i64*
  %42 = load i64, i64* %41, align 8, !noalias !6
  %43 = add nsw i64 %42, 1
  store i64 %43, i64* %41, align 8, !noalias !6
  %44 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %44) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %7, i8* getelementptr inbounds ([5 x i8], [5 x i8]* @.str.12, i64 0, i64 0)) #16
  %45 = call %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA5_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %39, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %7, [5 x i8]* nonnull dereferenceable(5) @.str.13)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %44) #16
  %46 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %46) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %8, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)) #16
  %47 = call %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA6_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %39, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %8, [6 x i8]* nonnull dereferenceable(6) @.str.15)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %46) #16
  %48 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %48) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #16
  %49 = call %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRN5fxcrt10ByteStringEEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary* nonnull %39, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %48) #16
  %50 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %50) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.16, i64 0, i64 0)) #16
  %51 = call %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA16_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary* nonnull %39, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10, [16 x i8]* nonnull dereferenceable(16) @.str.17)
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %50) #16
  %52 = bitcast %"class.fxcrt::RetainPtr.292"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %52) #16
  call void @_ZN9CPDF_Font6CreateEP13CPDF_DocumentP15CPDF_DictionaryPNS_16FormFactoryIfaceE(%"class.fxcrt::RetainPtr.292"* nonnull sret %11, %class.CPDF_Document* null, %class.CPDF_Dictionary* nonnull %39, %"class.CPDF_Font::FormFactoryIface"* null)
  %53 = getelementptr inbounds %"class.fxcrt::RetainPtr.292", %"class.fxcrt::RetainPtr.292"* %11, i64 0, i32 0, i32 0, i32 0, i32 0
  %54 = bitcast %"class.fxcrt::RetainPtr.292"* %11 to i64*
  %55 = load i64, i64* %54, align 8
  store %class.CPDF_Font* null, %class.CPDF_Font** %53, align 8
  %56 = load %class.CPDF_Font*, %class.CPDF_Font** %26, align 8
  %57 = bitcast %"class.fxcrt::RetainPtr.292"* %6 to i64*
  store i64 %55, i64* %57, align 8
  %58 = icmp eq %class.CPDF_Font* %56, null
  br i1 %58, label %70, label %59

59:                                               ; preds = %36
  %60 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %56, i64 0, i32 0, i32 1
  %61 = load i64, i64* %60, align 8
  %62 = add nsw i64 %61, -1
  store i64 %62, i64* %60, align 8
  %63 = icmp eq i64 %62, 0
  br i1 %63, label %64, label %70

64:                                               ; preds = %59
  %65 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %56, i64 0, i32 0
  %66 = bitcast %class.CPDF_Font* %56 to void (%"class.fxcrt::Retainable"*)***
  %67 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %66, align 8
  %68 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %67, i64 1
  %69 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %68, align 8
  call void %69(%"class.fxcrt::Retainable"* nonnull %65) #16
  br label %70

70:                                               ; preds = %64, %59, %36
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %52) #16
  call void @_ZN16CPDF_FontGlobals3SetEP13CPDF_DocumentN14CFX_FontMapper12StandardFontERKN5fxcrt9RetainPtrI9CPDF_FontEE(%class.CPDF_FontGlobals* %24, %class.CPDF_Document* %1, i8 zeroext %19, %"class.fxcrt::RetainPtr.292"* nonnull dereferenceable(8) %6) #16
  %71 = bitcast %"class.fxcrt::RetainPtr.292"* %0 to i64*
  %72 = load i64, i64* %57, align 8
  store i64 %72, i64* %71, align 8
  store i64 0, i64* %57, align 8
  %73 = load i64, i64* %41, align 8
  %74 = add nsw i64 %73, -1
  store i64 %74, i64* %41, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %77, label %76

76:                                               ; preds = %32, %70
  store %class.CPDF_Font* null, %class.CPDF_Font** %26, align 8
  br label %96

77:                                               ; preds = %70
  %78 = bitcast i8* %38 to %"class.fxcrt::Retainable"*
  %79 = bitcast i8* %38 to void (%"class.fxcrt::Retainable"*)***
  %80 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, i64 1
  %82 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, align 8
  call void %82(%"class.fxcrt::Retainable"* nonnull %78) #16
  %83 = load %class.CPDF_Font*, %class.CPDF_Font** %26, align 8
  %84 = bitcast %class.CPDF_Font* %83 to void (%"class.fxcrt::Retainable"*)***
  store %class.CPDF_Font* null, %class.CPDF_Font** %26, align 8
  %85 = icmp eq %class.CPDF_Font* %83, null
  br i1 %85, label %96, label %86

86:                                               ; preds = %77
  %87 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %83, i64 0, i32 0, i32 1
  %88 = load i64, i64* %87, align 8
  %89 = add nsw i64 %88, -1
  store i64 %89, i64* %87, align 8
  %90 = icmp eq i64 %89, 0
  br i1 %90, label %91, label %96

91:                                               ; preds = %86
  %92 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %83, i64 0, i32 0
  %93 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %84, align 8
  %94 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %93, i64 1
  %95 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %94, align 8
  call void %95(%"class.fxcrt::Retainable"* nonnull %92) #16
  br label %96

96:                                               ; preds = %76, %77, %86, %91
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %25) #16
  br label %97

97:                                               ; preds = %96, %21
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  ret void
}

declare void @_ZN5fxcrt10ByteStringC1ENS_18StringViewTemplateIcEE(%"class.fxcrt::ByteString"*, %"class.fxcrt::StringViewTemplate"*) unnamed_addr #1

declare i16 @_ZN14CFX_FontMapper19GetStandardFontNameEPN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"*) local_unnamed_addr #1

declare %class.CPDF_FontGlobals* @_ZN16CPDF_FontGlobals11GetInstanceEv() local_unnamed_addr #1

declare void @_ZN16CPDF_FontGlobals4FindEP13CPDF_DocumentN14CFX_FontMapper12StandardFontE(%"class.fxcrt::RetainPtr.292"* sret, %class.CPDF_FontGlobals*, %class.CPDF_Document*, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA5_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), [5 x i8]* dereferenceable(5)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.281", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.385", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !11
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !12
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.385"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2
  call void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA5_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.385"* nonnull sret %5, %"class.fxcrt::WeakPtr"* dereferenceable(8) %12, [5 x i8]* dereferenceable(5) %2)
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.385", %"class.fxcrt::RetainPtr.385"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  %15 = ptrtoint %class.CPDF_Name* %14 to i64
  %16 = bitcast %"class.fxcrt::RetainPtr.281"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = icmp eq %class.CPDF_Name* %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %14, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.281"* nonnull %4) #16
  %24 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Name*
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.281", %"class.fxcrt::RetainPtr.281"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Object*, %class.CPDF_Object** %25, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %25, align 8
  %27 = icmp eq %class.CPDF_Object* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0
  %35 = bitcast %class.CPDF_Object* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #16
  br label %39

39:                                               ; preds = %22, %28, %33
  %40 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  store %class.CPDF_Name* null, %class.CPDF_Name** %13, align 8
  %41 = icmp eq %class.CPDF_Name* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0
  %49 = bitcast %class.CPDF_Name* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #16
  br label %53

53:                                               ; preds = %39, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  ret %class.CPDF_Name* %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA6_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), [6 x i8]* dereferenceable(6)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.281", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.385", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !11
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !12
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.385"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2
  call void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA6_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.385"* nonnull sret %5, %"class.fxcrt::WeakPtr"* dereferenceable(8) %12, [6 x i8]* dereferenceable(6) %2)
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.385", %"class.fxcrt::RetainPtr.385"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  %15 = ptrtoint %class.CPDF_Name* %14 to i64
  %16 = bitcast %"class.fxcrt::RetainPtr.281"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = icmp eq %class.CPDF_Name* %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %14, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.281"* nonnull %4) #16
  %24 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Name*
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.281", %"class.fxcrt::RetainPtr.281"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Object*, %class.CPDF_Object** %25, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %25, align 8
  %27 = icmp eq %class.CPDF_Object* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0
  %35 = bitcast %class.CPDF_Object* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #16
  br label %39

39:                                               ; preds = %22, %28, %33
  %40 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  store %class.CPDF_Name* null, %class.CPDF_Name** %13, align 8
  %41 = icmp eq %class.CPDF_Name* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0
  %49 = bitcast %class.CPDF_Name* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #16
  br label %53

53:                                               ; preds = %39, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  ret %class.CPDF_Name* %24
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRN5fxcrt10ByteStringEEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKS3_DpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.281", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !11
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !12
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::WeakPtr"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11)
  %12 = tail call i8* @_Znwm(i64 32) #17, !noalias !13
  %13 = bitcast i8* %12 to %class.CPDF_Name*
  %14 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0, i32 0
  %15 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %14, align 8, !noalias !13
  %16 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %15 to i64
  %17 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %16, i64* %17, align 8, !noalias !13
  %18 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %15, null
  br i1 %18, label %23, label %19

19:                                               ; preds = %10
  %20 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %15, i64 0, i32 0
  %21 = load i64, i64* %20, align 8, !noalias !13
  %22 = add nsw i64 %21, 1
  store i64 %22, i64* %20, align 8, !noalias !13
  br label %23

23:                                               ; preds = %10, %19
  call void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name* nonnull %13, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* dereferenceable(8) %2) #16, !noalias !13
  %24 = ptrtoint i8* %12 to i64
  %25 = getelementptr inbounds i8, i8* %12, i64 8
  %26 = bitcast i8* %25 to i64*
  %27 = load i64, i64* %26, align 8, !noalias !13
  %28 = add nsw i64 %27, 1
  store i64 %28, i64* %26, align 8, !noalias !13
  %29 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %30 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %29, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %29, align 8
  %31 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %30, null
  br i1 %31, label %63, label %32

32:                                               ; preds = %23
  %33 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %30, i64 0, i32 0
  %34 = load i64, i64* %33, align 8
  %35 = add nsw i64 %34, -1
  store i64 %35, i64* %33, align 8
  %36 = icmp eq i64 %35, 0
  br i1 %36, label %37, label %63

37:                                               ; preds = %32
  %38 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %30, i64 0, i32 1, i32 0, i32 0, i32 0
  %39 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %38, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %38, align 8
  %40 = icmp eq %"class.fxcrt::StringPoolTemplate"* %39, null
  br i1 %40, label %61, label %41

41:                                               ; preds = %37
  %42 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %39, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %43 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %42, align 8
  %44 = icmp eq %"struct.std::__1::__hash_node_base"* %43, null
  br i1 %44, label %53, label %45

45:                                               ; preds = %41, %45
  %46 = phi %"struct.std::__1::__hash_node_base"* [ %48, %45 ], [ %43, %41 ]
  %47 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 0, i32 0
  %48 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %47, align 8
  %49 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %46, i64 2
  %50 = bitcast %"struct.std::__1::__hash_node_base"* %49 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %50) #16
  %51 = bitcast %"struct.std::__1::__hash_node_base"* %46 to i8*
  call void @_ZdlPv(i8* %51) #17
  %52 = icmp eq %"struct.std::__1::__hash_node_base"* %48, null
  br i1 %52, label %53, label %45

53:                                               ; preds = %45, %41
  %54 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %39, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %55 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %54, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %54, align 8
  %56 = icmp eq %"struct.std::__1::__hash_node_base"** %55, null
  br i1 %56, label %59, label %57

57:                                               ; preds = %53
  %58 = bitcast %"struct.std::__1::__hash_node_base"** %55 to i8*
  call void @_ZdlPv(i8* %58) #17
  br label %59

59:                                               ; preds = %57, %53
  %60 = bitcast %"class.fxcrt::StringPoolTemplate"* %39 to i8*
  call void @_ZdlPv(i8* %60) #17
  br label %61

61:                                               ; preds = %59, %37
  %62 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %30 to i8*
  call void @_ZdlPv(i8* %62) #17
  br label %63

63:                                               ; preds = %23, %32, %61
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11)
  %64 = bitcast %"class.fxcrt::RetainPtr.281"* %5 to i64*
  store i64 %24, i64* %64, align 8
  %65 = load i64, i64* %26, align 8
  %66 = add nsw i64 %65, 1
  store i64 %66, i64* %26, align 8
  %67 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.281"* nonnull %5) #16
  %68 = bitcast %class.CPDF_Object* %67 to %class.CPDF_Name*
  %69 = getelementptr inbounds %"class.fxcrt::RetainPtr.281", %"class.fxcrt::RetainPtr.281"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %70 = load %class.CPDF_Object*, %class.CPDF_Object** %69, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %69, align 8
  %71 = icmp eq %class.CPDF_Object* %70, null
  br i1 %71, label %83, label %72

72:                                               ; preds = %63
  %73 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %70, i64 0, i32 0, i32 1
  %74 = load i64, i64* %73, align 8
  %75 = add nsw i64 %74, -1
  store i64 %75, i64* %73, align 8
  %76 = icmp eq i64 %75, 0
  br i1 %76, label %77, label %83

77:                                               ; preds = %72
  %78 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %70, i64 0, i32 0
  %79 = bitcast %class.CPDF_Object* %70 to void (%"class.fxcrt::Retainable"*)***
  %80 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %79, align 8
  %81 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, i64 1
  %82 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %81, align 8
  call void %82(%"class.fxcrt::Retainable"* nonnull %78) #16
  br label %83

83:                                               ; preds = %77, %72, %63
  %84 = load i64, i64* %26, align 8
  %85 = add nsw i64 %84, -1
  store i64 %85, i64* %26, align 8
  %86 = icmp eq i64 %85, 0
  br i1 %86, label %87, label %93

87:                                               ; preds = %83
  %88 = bitcast i8* %12 to %"class.fxcrt::Retainable"*
  %89 = bitcast i8* %12 to void (%"class.fxcrt::Retainable"*)***
  %90 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %89, align 8
  %91 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %90, i64 1
  %92 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %91, align 8
  call void %92(%"class.fxcrt::Retainable"* nonnull %88) #16
  br label %93

93:                                               ; preds = %83, %87
  ret %class.CPDF_Name* %68
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden %class.CPDF_Name* @_ZN15CPDF_Dictionary9SetNewForI9CPDF_NameJRA16_KcEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEPS7_E4typeERKN5fxcrt10ByteStringEDpOT0_(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), [16 x i8]* dereferenceable(16)) local_unnamed_addr #0 comdat align 2 {
  %4 = alloca %"class.fxcrt::RetainPtr.281", align 8
  %5 = alloca %"class.fxcrt::RetainPtr.385", align 8
  %6 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, 0
  br i1 %8, label %10, label %9, !prof !3

9:                                                ; preds = %3
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !11
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !12
  unreachable

10:                                               ; preds = %3
  %11 = bitcast %"class.fxcrt::RetainPtr.385"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %11) #16
  %12 = getelementptr inbounds %class.CPDF_Dictionary, %class.CPDF_Dictionary* %0, i64 0, i32 2
  call void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA16_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.385"* nonnull sret %5, %"class.fxcrt::WeakPtr"* dereferenceable(8) %12, [16 x i8]* dereferenceable(16) %2)
  %13 = getelementptr inbounds %"class.fxcrt::RetainPtr.385", %"class.fxcrt::RetainPtr.385"* %5, i64 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  %15 = ptrtoint %class.CPDF_Name* %14 to i64
  %16 = bitcast %"class.fxcrt::RetainPtr.281"* %4 to i64*
  store i64 %15, i64* %16, align 8
  %17 = icmp eq %class.CPDF_Name* %14, null
  br i1 %17, label %22, label %18

18:                                               ; preds = %10
  %19 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %14, i64 0, i32 0, i32 0, i32 1
  %20 = load i64, i64* %19, align 8
  %21 = add nsw i64 %20, 1
  store i64 %21, i64* %19, align 8
  br label %22

22:                                               ; preds = %10, %18
  %23 = call %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary* %0, %"class.fxcrt::ByteString"* dereferenceable(8) %1, %"class.fxcrt::RetainPtr.281"* nonnull %4) #16
  %24 = bitcast %class.CPDF_Object* %23 to %class.CPDF_Name*
  %25 = getelementptr inbounds %"class.fxcrt::RetainPtr.281", %"class.fxcrt::RetainPtr.281"* %4, i64 0, i32 0, i32 0, i32 0, i32 0
  %26 = load %class.CPDF_Object*, %class.CPDF_Object** %25, align 8
  store %class.CPDF_Object* null, %class.CPDF_Object** %25, align 8
  %27 = icmp eq %class.CPDF_Object* %26, null
  br i1 %27, label %39, label %28

28:                                               ; preds = %22
  %29 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0, i32 1
  %30 = load i64, i64* %29, align 8
  %31 = add nsw i64 %30, -1
  store i64 %31, i64* %29, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %33, label %39

33:                                               ; preds = %28
  %34 = getelementptr inbounds %class.CPDF_Object, %class.CPDF_Object* %26, i64 0, i32 0
  %35 = bitcast %class.CPDF_Object* %26 to void (%"class.fxcrt::Retainable"*)***
  %36 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %35, align 8
  %37 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %36, i64 1
  %38 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %37, align 8
  call void %38(%"class.fxcrt::Retainable"* nonnull %34) #16
  br label %39

39:                                               ; preds = %22, %28, %33
  %40 = load %class.CPDF_Name*, %class.CPDF_Name** %13, align 8
  store %class.CPDF_Name* null, %class.CPDF_Name** %13, align 8
  %41 = icmp eq %class.CPDF_Name* %40, null
  br i1 %41, label %53, label %42

42:                                               ; preds = %39
  %43 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0, i32 1
  %44 = load i64, i64* %43, align 8
  %45 = add nsw i64 %44, -1
  store i64 %45, i64* %43, align 8
  %46 = icmp eq i64 %45, 0
  br i1 %46, label %47, label %53

47:                                               ; preds = %42
  %48 = getelementptr inbounds %class.CPDF_Name, %class.CPDF_Name* %40, i64 0, i32 0, i32 0
  %49 = bitcast %class.CPDF_Name* %40 to void (%"class.fxcrt::Retainable"*)***
  %50 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %49, align 8
  %51 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %50, i64 1
  %52 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %51, align 8
  call void %52(%"class.fxcrt::Retainable"* nonnull %48) #16
  br label %53

53:                                               ; preds = %39, %42, %47
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %11) #16
  ret %class.CPDF_Name* %24
}

; Function Attrs: nounwind ssp uwtable
define hidden void @_ZN9CPDF_Font6CreateEP13CPDF_DocumentP15CPDF_DictionaryPNS_16FormFactoryIfaceE(%"class.fxcrt::RetainPtr.292"* noalias nocapture sret, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.CPDF_Font::FormFactoryIface"*) local_unnamed_addr #0 align 2 {
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = alloca %"class.fxcrt::ByteString", align 8
  %7 = alloca %"class.fxcrt::ByteString", align 8
  %8 = alloca %"class.fxcrt::ByteString", align 8
  %9 = alloca %"class.fxcrt::ByteString", align 8
  %10 = alloca %"class.fxcrt::ByteString", align 8
  %11 = alloca %"class.fxcrt::ByteString", align 8
  %12 = alloca %"class.fxcrt::ByteString", align 8
  %13 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %13) #16
  %14 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %5, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %14, align 8
  %15 = bitcast %"class.fxcrt::ByteString"* %6 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %15) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %6, i8* getelementptr inbounds ([8 x i8], [8 x i8]* @.str.14, i64 0, i64 0)) #16
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %5, %class.CPDF_Dictionary* %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %6) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %6) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %15) #16
  %16 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str.18, i64 0, i64 0)) #16
  br i1 %16, label %17, label %65

17:                                               ; preds = %4
  %18 = bitcast %"class.fxcrt::ByteString"* %7 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate"*), %"class.fxcrt::StringDataTemplate"** %19, align 8
  %20 = bitcast %"class.fxcrt::ByteString"* %8 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %20) #16
  %21 = bitcast %"class.fxcrt::ByteString"* %9 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %9, i8* getelementptr inbounds ([9 x i8], [9 x i8]* @.str, i64 0, i64 0)) #16
  call void @_ZNK15CPDF_Dictionary12GetStringForERKN5fxcrt10ByteStringE(%"class.fxcrt::ByteString"* nonnull sret %8, %class.CPDF_Dictionary* %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %9) #16
  call void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* nonnull sret %7, %"class.fxcrt::ByteString"* nonnull %8, i64 4) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %8) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %9) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %20) #16
  %22 = bitcast %"class.fxcrt::ByteString"* %10 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([5 x [4 x i8]], [5 x [4 x i8]]* @_ZN12_GLOBAL__N_117kChineseFontNamesE, i64 0, i64 0, i64 0), i64 4) #16
  %23 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br i1 %23, label %26, label %24

24:                                               ; preds = %17
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([5 x [4 x i8]], [5 x [4 x i8]]* @_ZN12_GLOBAL__N_117kChineseFontNamesE, i64 0, i64 1, i64 0), i64 4) #16
  %25 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br i1 %25, label %26, label %136

26:                                               ; preds = %140, %138, %136, %24, %17
  %27 = bitcast %"class.fxcrt::ByteString"* %11 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %27) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %11, i8* getelementptr inbounds ([15 x i8], [15 x i8]* @.str.19, i64 0, i64 0)) #16
  %28 = call %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* %2, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %11) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %11) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %27) #16
  %29 = icmp eq %class.CPDF_Dictionary* %28, null
  br i1 %29, label %33, label %30

30:                                               ; preds = %26
  %31 = bitcast %"class.fxcrt::ByteString"* %12 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %31) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.9, i64 0, i64 0)) #16
  %32 = call zeroext i1 @_ZNK15CPDF_Dictionary8KeyExistERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary* nonnull %28, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %12) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %12) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %31) #16
  br i1 %32, label %48, label %33

33:                                               ; preds = %30, %26
  %34 = call i8* @_Znwm(i64 4432) #17, !noalias !16
  %35 = bitcast i8* %34 to %class.CPDF_CIDFont*
  call void @_ZN12CPDF_CIDFontC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_CIDFont* nonnull %35, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #16, !noalias !16
  %36 = ptrtoint i8* %34 to i64
  %37 = getelementptr inbounds i8, i8* %34, i64 8
  %38 = bitcast i8* %37 to i64*
  %39 = load i64, i64* %38, align 8, !noalias !16
  %40 = add nsw i64 %39, 1
  store i64 %40, i64* %38, align 8
  %41 = icmp eq i64 %40, 0
  br i1 %41, label %42, label %63

42:                                               ; preds = %33
  %43 = bitcast i8* %34 to %"class.fxcrt::Retainable"*
  %44 = bitcast i8* %34 to void (%"class.fxcrt::Retainable"*)***
  %45 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %44, align 8
  %46 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %45, i64 1
  %47 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %46, align 8
  call void %47(%"class.fxcrt::Retainable"* nonnull %43) #16
  br label %63

48:                                               ; preds = %140, %30
  %49 = call i8* @_Znwm(i64 6416) #17, !noalias !19
  %50 = bitcast i8* %49 to %class.CPDF_TrueTypeFont*
  call void @_ZN17CPDF_TrueTypeFontC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_TrueTypeFont* nonnull %50, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #16, !noalias !19
  %51 = ptrtoint i8* %49 to i64
  %52 = getelementptr inbounds i8, i8* %49, i64 8
  %53 = bitcast i8* %52 to i64*
  %54 = load i64, i64* %53, align 8, !noalias !19
  %55 = add nsw i64 %54, 1
  store i64 %55, i64* %53, align 8
  %56 = icmp eq i64 %55, 0
  br i1 %56, label %57, label %63

57:                                               ; preds = %48
  %58 = bitcast i8* %49 to %"class.fxcrt::Retainable"*
  %59 = bitcast i8* %49 to void (%"class.fxcrt::Retainable"*)***
  %60 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %59, align 8
  %61 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %60, i64 1
  %62 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %61, align 8
  call void %62(%"class.fxcrt::Retainable"* nonnull %58) #16
  br label %63

63:                                               ; preds = %33, %42, %57, %48
  %64 = phi i64 [ %51, %48 ], [ %51, %57 ], [ %36, %42 ], [ %36, %33 ]
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %7) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  br label %114

65:                                               ; preds = %4
  %66 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.20, i64 0, i64 0)) #16
  br i1 %66, label %67, label %82

67:                                               ; preds = %65
  %68 = call i8* @_Znwm(i64 7528) #17, !noalias !22
  %69 = bitcast i8* %68 to %class.CPDF_Type3Font*
  call void @_ZN14CPDF_Type3FontC1EP13CPDF_DocumentP15CPDF_DictionaryPN9CPDF_Font16FormFactoryIfaceE(%class.CPDF_Type3Font* nonnull %69, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2, %"class.CPDF_Font::FormFactoryIface"* %3) #16, !noalias !22
  %70 = ptrtoint i8* %68 to i64
  %71 = getelementptr inbounds i8, i8* %68, i64 8
  %72 = bitcast i8* %71 to i64*
  %73 = load i64, i64* %72, align 8, !noalias !22
  %74 = add nsw i64 %73, 1
  store i64 %74, i64* %72, align 8
  %75 = icmp eq i64 %74, 0
  br i1 %75, label %76, label %114

76:                                               ; preds = %67
  %77 = bitcast i8* %68 to %"class.fxcrt::Retainable"*
  %78 = bitcast i8* %68 to void (%"class.fxcrt::Retainable"*)***
  %79 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %78, align 8
  %80 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %79, i64 1
  %81 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %80, align 8
  call void %81(%"class.fxcrt::Retainable"* nonnull %77) #16
  br label %114

82:                                               ; preds = %65
  %83 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.21, i64 0, i64 0)) #16
  br i1 %83, label %84, label %99

84:                                               ; preds = %82
  %85 = call i8* @_Znwm(i64 4432) #17, !noalias !25
  %86 = bitcast i8* %85 to %class.CPDF_CIDFont*
  call void @_ZN12CPDF_CIDFontC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_CIDFont* nonnull %86, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #16, !noalias !25
  %87 = ptrtoint i8* %85 to i64
  %88 = getelementptr inbounds i8, i8* %85, i64 8
  %89 = bitcast i8* %88 to i64*
  %90 = load i64, i64* %89, align 8, !noalias !25
  %91 = add nsw i64 %90, 1
  store i64 %91, i64* %89, align 8
  %92 = icmp eq i64 %91, 0
  br i1 %92, label %93, label %114

93:                                               ; preds = %84
  %94 = bitcast i8* %85 to %"class.fxcrt::Retainable"*
  %95 = bitcast i8* %85 to void (%"class.fxcrt::Retainable"*)***
  %96 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %95, align 8
  %97 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %96, i64 1
  %98 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %97, align 8
  call void %98(%"class.fxcrt::Retainable"* nonnull %94) #16
  br label %114

99:                                               ; preds = %82
  %100 = call i8* @_Znwm(i64 6424) #17, !noalias !28
  %101 = bitcast i8* %100 to %class.CPDF_Type1Font*
  call void @_ZN14CPDF_Type1FontC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Type1Font* nonnull %101, %class.CPDF_Document* %1, %class.CPDF_Dictionary* %2) #16, !noalias !28
  %102 = ptrtoint i8* %100 to i64
  %103 = getelementptr inbounds i8, i8* %100, i64 8
  %104 = bitcast i8* %103 to i64*
  %105 = load i64, i64* %104, align 8, !noalias !28
  %106 = add nsw i64 %105, 1
  store i64 %106, i64* %104, align 8
  %107 = icmp eq i64 %106, 0
  br i1 %107, label %108, label %114

108:                                              ; preds = %99
  %109 = bitcast i8* %100 to %"class.fxcrt::Retainable"*
  %110 = bitcast i8* %100 to void (%"class.fxcrt::Retainable"*)***
  %111 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %110, align 8
  %112 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %111, i64 1
  %113 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %112, align 8
  call void %113(%"class.fxcrt::Retainable"* nonnull %109) #16
  br label %114

114:                                              ; preds = %108, %99, %93, %84, %76, %67, %63
  %115 = phi i64 [ %64, %63 ], [ %70, %67 ], [ %70, %76 ], [ %87, %84 ], [ %87, %93 ], [ %102, %99 ], [ %102, %108 ]
  %116 = inttoptr i64 %115 to %class.CPDF_Font*
  %117 = inttoptr i64 %115 to i1 (%class.CPDF_Font*)***
  %118 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %117, align 8
  %119 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %118, i64 26
  %120 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %119, align 8
  %121 = call zeroext i1 %120(%class.CPDF_Font* %116) #16
  %122 = bitcast %"class.fxcrt::RetainPtr.292"* %0 to i64*
  br i1 %121, label %123, label %124

123:                                              ; preds = %114
  store i64 %115, i64* %122, align 8
  br label %135

124:                                              ; preds = %114
  store i64 0, i64* %122, align 8
  %125 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %116, i64 0, i32 0, i32 1
  %126 = load i64, i64* %125, align 8
  %127 = add nsw i64 %126, -1
  store i64 %127, i64* %125, align 8
  %128 = icmp eq i64 %127, 0
  br i1 %128, label %129, label %135

129:                                              ; preds = %124
  %130 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %116, i64 0, i32 0
  %131 = inttoptr i64 %115 to void (%"class.fxcrt::Retainable"*)***
  %132 = load void (%"class.fxcrt::Retainable"*)**, void (%"class.fxcrt::Retainable"*)*** %131, align 8
  %133 = getelementptr inbounds void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %132, i64 1
  %134 = load void (%"class.fxcrt::Retainable"*)*, void (%"class.fxcrt::Retainable"*)** %133, align 8
  call void %134(%"class.fxcrt::Retainable"* nonnull %130) #16
  br label %135

135:                                              ; preds = %123, %124, %129
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %13) #16
  ret void

136:                                              ; preds = %24
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([5 x [4 x i8]], [5 x [4 x i8]]* @_ZN12_GLOBAL__N_117kChineseFontNamesE, i64 0, i64 2, i64 0), i64 4) #16
  %137 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br i1 %137, label %26, label %138

138:                                              ; preds = %136
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([5 x [4 x i8]], [5 x [4 x i8]]* @_ZN12_GLOBAL__N_117kChineseFontNamesE, i64 0, i64 3, i64 0), i64 4) #16
  %139 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br i1 %139, label %26, label %140

140:                                              ; preds = %138
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %22) #16
  call void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"* nonnull %10, i8* getelementptr inbounds ([5 x [4 x i8]], [5 x [4 x i8]]* @_ZN12_GLOBAL__N_117kChineseFontNamesE, i64 0, i64 4, i64 0), i64 4) #16
  %141 = call zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"* nonnull %7, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %10) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %10) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %22) #16
  br i1 %141, label %26, label %48
}

declare void @_ZN16CPDF_FontGlobals3SetEP13CPDF_DocumentN14CFX_FontMapper12StandardFontERKN5fxcrt9RetainPtrI9CPDF_FontEE(%class.CPDF_FontGlobals*, %class.CPDF_Document*, i8 zeroext, %"class.fxcrt::RetainPtr.292"* dereferenceable(8)) local_unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqEPKc(%"class.fxcrt::ByteString"*, i8*) local_unnamed_addr #1

declare void @_ZNK5fxcrt10ByteString5FirstEm(%"class.fxcrt::ByteString"* sret, %"class.fxcrt::ByteString"*, i64) local_unnamed_addr #1

declare zeroext i1 @_ZNK5fxcrt10ByteStringeqERKS0_(%"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

declare void @_ZN5fxcrt10ByteStringC1EPKhm(%"class.fxcrt::ByteString"*, i8*, i64) unnamed_addr #1

declare %class.CPDF_Dictionary* @_ZN15CPDF_Dictionary10GetDictForERKN5fxcrt10ByteStringE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8)) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZNK9CPDF_Font11GetNextCharEN5fxcrt18StringViewTemplateIcEEPm(%class.CPDF_Font* nocapture readnone, %"class.fxcrt::StringViewTemplate"* nocapture readonly, i64* nocapture) unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 1
  %5 = load i64, i64* %4, align 8
  %6 = icmp eq i64 %5, 0
  br i1 %6, label %24, label %7

7:                                                ; preds = %3
  %8 = load i64, i64* %2, align 8
  %9 = icmp ult i64 %8, %5
  br i1 %9, label %10, label %15

10:                                               ; preds = %7
  %11 = add nuw i64 %8, 1
  store i64 %11, i64* %2, align 8
  %12 = load i64, i64* %4, align 8
  %13 = icmp ugt i64 %12, %8
  br i1 %13, label %17, label %14, !prof !3

14:                                               ; preds = %10
  tail call void asm sideeffect "int3", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !31
  tail call void asm sideeffect "ud2", "~{dirflag},~{fpsr},~{flags}"() #16, !srcloc !32
  unreachable

15:                                               ; preds = %7
  %16 = add i64 %5, -1
  br label %17

17:                                               ; preds = %10, %15
  %18 = phi i64 [ %16, %15 ], [ %8, %10 ]
  %19 = getelementptr inbounds %"class.fxcrt::StringViewTemplate", %"class.fxcrt::StringViewTemplate"* %1, i64 0, i32 0, i32 0, i32 0
  %20 = load i8*, i8** %19, align 8
  %21 = getelementptr inbounds i8, i8* %20, i64 %18
  %22 = load i8, i8* %21, align 1
  %23 = zext i8 %22 to i32
  br label %24

24:                                               ; preds = %3, %17
  %25 = phi i32 [ %23, %17 ], [ 0, %3 ]
  ret i32 %25
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZNK9CPDF_Font14IsStandardFontEv(%class.CPDF_Font*) local_unnamed_addr #0 align 2 {
  %2 = bitcast %class.CPDF_Font* %0 to i1 (%class.CPDF_Font*)***
  %3 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %2, align 8
  %4 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %3, i64 2
  %5 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %4, align 8
  %6 = tail call zeroext i1 %5(%class.CPDF_Font* %0) #16
  br i1 %6, label %7, label %20

7:                                                ; preds = %1
  %8 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 5, i32 0, i32 0, i32 0, i32 0
  %9 = load %class.CPDF_StreamAcc*, %class.CPDF_StreamAcc** %8, align 8
  %10 = icmp eq %class.CPDF_StreamAcc* %9, null
  br i1 %10, label %11, label %20

11:                                               ; preds = %7
  %12 = bitcast %class.CPDF_Font* %0 to %class.CPDF_Type1Font* (%class.CPDF_Font*)***
  %13 = load %class.CPDF_Type1Font* (%class.CPDF_Font*)**, %class.CPDF_Type1Font* (%class.CPDF_Font*)*** %12, align 8
  %14 = getelementptr inbounds %class.CPDF_Type1Font* (%class.CPDF_Font*)*, %class.CPDF_Type1Font* (%class.CPDF_Font*)** %13, i64 6
  %15 = load %class.CPDF_Type1Font* (%class.CPDF_Font*)*, %class.CPDF_Type1Font* (%class.CPDF_Font*)** %14, align 8
  %16 = tail call %class.CPDF_Type1Font* %15(%class.CPDF_Font* %0) #16
  %17 = getelementptr inbounds %class.CPDF_Type1Font, %class.CPDF_Type1Font* %16, i64 0, i32 1, i32 0, i32 0, i32 0, i32 0
  %18 = load i8, i8* %17, align 1, !range !2
  %19 = icmp ne i8 %18, 0
  br label %20

20:                                               ; preds = %7, %1, %11
  %21 = phi i1 [ %19, %11 ], [ false, %1 ], [ false, %7 ]
  ret i1 %21
}

; Function Attrs: nounwind ssp uwtable
define hidden i8* @_ZN9CPDF_Font16GetAdobeCharNameEiRKNSt3__16vectorIN5fxcrt10ByteStringENS0_9allocatorIS3_EEEEj(i32, %"class.std::__1::vector.233"* nocapture readonly dereferenceable(24), i32) local_unnamed_addr #0 align 2 {
  %4 = icmp ugt i32 %2, 255
  br i1 %4, label %27, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %"class.std::__1::vector.233", %"class.std::__1::vector.233"* %1, i64 0, i32 0, i32 0
  %7 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %6, align 8
  %8 = getelementptr inbounds %"class.std::__1::vector.233", %"class.std::__1::vector.233"* %1, i64 0, i32 0, i32 1
  %9 = load %"class.fxcrt::ByteString"*, %"class.fxcrt::ByteString"** %8, align 8
  %10 = icmp eq %"class.fxcrt::ByteString"* %7, %9
  br i1 %10, label %22, label %11

11:                                               ; preds = %5
  %12 = zext i32 %2 to i64
  %13 = getelementptr inbounds %"class.fxcrt::ByteString", %"class.fxcrt::ByteString"* %7, i64 %12, i32 0, i32 0, i32 0, i32 0, i32 0
  %14 = load %"class.fxcrt::StringDataTemplate"*, %"class.fxcrt::StringDataTemplate"** %13, align 8
  %15 = icmp eq %"class.fxcrt::StringDataTemplate"* %14, null
  br i1 %15, label %22, label %16

16:                                               ; preds = %11
  %17 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 1
  %18 = load i64, i64* %17, align 8
  %19 = icmp eq i64 %18, 0
  br i1 %19, label %22, label %20

20:                                               ; preds = %16
  %21 = getelementptr inbounds %"class.fxcrt::StringDataTemplate", %"class.fxcrt::StringDataTemplate"* %14, i64 0, i32 3, i64 0
  br label %27

22:                                               ; preds = %11, %16, %5
  %23 = icmp eq i32 %0, 0
  br i1 %23, label %27, label %24

24:                                               ; preds = %22
  %25 = trunc i32 %2 to i8
  %26 = tail call i8* @_Z33PDF_CharNameFromPredefinedCharSetih(i32 %0, i8 zeroext %25) #16
  br label %27

27:                                               ; preds = %24, %22, %3, %20
  %28 = phi i8* [ %21, %20 ], [ null, %3 ], [ %26, %24 ], [ null, %22 ]
  ret i8* %28
}

declare i8* @_Z33PDF_CharNameFromPredefinedCharSetih(i32, i8 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9CPDF_Font24FallbackFontFromCharcodeEj(%class.CPDF_Font*, i32) local_unnamed_addr #0 align 2 {
  %3 = alloca %"class.std::__1::unique_ptr.194", align 8
  %4 = alloca %"class.fxcrt::ByteString", align 8
  %5 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4
  %6 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %5, i64 0, i32 0, i32 0
  %7 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %6, align 8
  %8 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4, i32 0, i32 1
  %9 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %8, align 8
  %10 = icmp eq %"class.std::__1::unique_ptr.194"* %7, %9
  br i1 %10, label %11, label %57

11:                                               ; preds = %2
  %12 = bitcast %"class.std::__1::unique_ptr.194"* %3 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %12) #16
  %13 = tail call i8* @_Znwm(i64 96) #17
  %14 = bitcast i8* %13 to %class.CFX_Font*
  tail call void @_ZN8CFX_FontC1Ev(%class.CFX_Font* nonnull %14) #16
  %15 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %3, i64 0, i32 0, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.194"* %3 to i8**
  store i8* %13, i8** %16, align 8
  %17 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %8, align 8
  %18 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4, i32 0, i32 2, i32 0, i32 0
  %19 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %18, align 8
  %20 = icmp ult %"class.std::__1::unique_ptr.194"* %17, %19
  br i1 %20, label %21, label %27

21:                                               ; preds = %11
  %22 = ptrtoint i8* %13 to i64
  store %class.CFX_Font* null, %class.CFX_Font** %15, align 8
  %23 = bitcast %"class.std::__1::unique_ptr.194"* %17 to i64*
  store i64 %22, i64* %23, align 8
  %24 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %17, i64 1
  %25 = ptrtoint %"class.std::__1::unique_ptr.194"* %24 to i64
  %26 = bitcast %"class.std::__1::unique_ptr.194"** %8 to i64*
  store i64 %25, i64* %26, align 8
  br label %28

27:                                               ; preds = %11
  call void @_ZNSt3__16vectorINS_10unique_ptrI8CFX_FontNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.192"* %5, %"class.std::__1::unique_ptr.194"* nonnull dereferenceable(8) %3) #16
  br label %28

28:                                               ; preds = %21, %27
  %29 = load %class.CFX_Font*, %class.CFX_Font** %15, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %15, align 8
  %30 = icmp eq %class.CFX_Font* %29, null
  br i1 %30, label %33, label %31

31:                                               ; preds = %28
  call void @_ZN8CFX_FontD1Ev(%class.CFX_Font* nonnull %29) #16
  %32 = bitcast %class.CFX_Font* %29 to i8*
  call void @_ZdlPv(i8* %32) #17
  br label %33

33:                                               ; preds = %28, %31
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %12) #16
  %34 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 11
  %35 = load i32, i32* %34, align 8
  %36 = call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %35, i32 5) #16
  %37 = extractvalue { i32, i1 } %36, 1
  %38 = extractvalue { i32, i1 } %36, 0
  %39 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %6, align 8
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %39, i64 0, i32 0, i32 0, i32 0
  %41 = load %class.CFX_Font*, %class.CFX_Font** %40, align 8
  %42 = bitcast %"class.fxcrt::ByteString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %42) #16
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %4, i8* getelementptr inbounds ([6 x i8], [6 x i8]* @.str.22, i64 0, i64 0)) #16
  %43 = bitcast %class.CPDF_Font* %0 to i1 (%class.CPDF_Font*)***
  %44 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %43, align 8
  %45 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %44, i64 3
  %46 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %45, align 8
  %47 = call zeroext i1 %46(%class.CPDF_Font* %0) #16
  %48 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 10
  %49 = load i32, i32* %48, align 4
  %50 = select i1 %37, i32 400, i32 %38, !prof !33
  %51 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 14
  %52 = load i32, i32* %51, align 4
  %53 = load i1 (%class.CPDF_Font*)**, i1 (%class.CPDF_Font*)*** %43, align 8
  %54 = getelementptr inbounds i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %53, i64 15
  %55 = load i1 (%class.CPDF_Font*)*, i1 (%class.CPDF_Font*)** %54, align 8
  %56 = call zeroext i1 %55(%class.CPDF_Font* %0) #16
  call void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font* %41, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %4, i1 zeroext %47, i32 %49, i32 %50, i32 %52, i32 0, i1 zeroext %56) #16
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %42) #16
  br label %57

57:                                               ; preds = %33, %2
  ret i32 0
}

declare void @_ZN8CFX_Font9LoadSubstERKN5fxcrt10ByteStringEbjiiib(%class.CFX_Font*, %"class.fxcrt::ByteString"* dereferenceable(8), i1 zeroext, i32, i32, i32, i32, i1 zeroext) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @_ZN9CPDF_Font25FallbackGlyphFromCharcodeEij(%class.CPDF_Font*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = alloca %"class.fxcrt::WideString", align 8
  %5 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4
  %6 = icmp sgt i32 %1, -1
  br i1 %6, label %7, label %55

7:                                                ; preds = %3
  %8 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4, i32 0, i32 1
  %9 = bitcast %"class.std::__1::unique_ptr.194"** %8 to i64*
  %10 = load i64, i64* %9, align 8
  %11 = bitcast %"class.std::__1::vector.192"* %5 to i64*
  %12 = load i64, i64* %11, align 8
  %13 = sub i64 %10, %12
  %14 = ashr exact i64 %13, 3
  %15 = icmp ult i64 %14, 2147483648
  br i1 %15, label %17, label %16, !prof !3

16:                                               ; preds = %7
  tail call void @llvm.trap() #16
  unreachable

17:                                               ; preds = %7
  %18 = trunc i64 %14 to i32
  %19 = icmp sgt i32 %18, %1
  br i1 %19, label %20, label %55

20:                                               ; preds = %17
  %21 = bitcast %"class.fxcrt::WideString"* %4 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %21) #16
  %22 = getelementptr inbounds %"class.fxcrt::WideString", %"class.fxcrt::WideString"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  store %"class.fxcrt::StringDataTemplate.275"* inttoptr (i64 -6148914691236517206 to %"class.fxcrt::StringDataTemplate.275"*), %"class.fxcrt::StringDataTemplate.275"** %22, align 8
  %23 = bitcast %class.CPDF_Font* %0 to void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)***
  %24 = load void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)**, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*** %23, align 8
  %25 = getelementptr inbounds void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)** %24, i64 21
  %26 = load void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)*, void (%"class.fxcrt::WideString"*, %class.CPDF_Font*, i32)** %25, align 8
  call void %26(%"class.fxcrt::WideString"* nonnull sret %4, %class.CPDF_Font* %0, i32 %2) #16
  %27 = load %"class.fxcrt::StringDataTemplate.275"*, %"class.fxcrt::StringDataTemplate.275"** %22, align 8
  %28 = icmp eq %"class.fxcrt::StringDataTemplate.275"* %27, null
  br i1 %28, label %36, label %29

29:                                               ; preds = %20
  %30 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.275", %"class.fxcrt::StringDataTemplate.275"* %27, i64 0, i32 1
  %31 = load i64, i64* %30, align 8
  %32 = icmp eq i64 %31, 0
  br i1 %32, label %36, label %33

33:                                               ; preds = %29
  %34 = getelementptr inbounds %"class.fxcrt::StringDataTemplate.275", %"class.fxcrt::StringDataTemplate.275"* %27, i64 0, i32 3, i64 0
  %35 = load i32, i32* %34, align 4
  br label %36

36:                                               ; preds = %20, %29, %33
  %37 = phi i32 [ %35, %33 ], [ %2, %29 ], [ %2, %20 ]
  %38 = sext i32 %1 to i64
  %39 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %5, i64 0, i32 0, i32 0
  %40 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %39, align 8
  %41 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %40, i64 %38, i32 0, i32 0, i32 0
  %42 = load %class.CFX_Font*, %class.CFX_Font** %41, align 8
  %43 = getelementptr inbounds %class.CFX_Font, %class.CFX_Font* %42, i64 0, i32 2, i32 0, i32 0, i32 0, i32 0
  %44 = load %class.CFX_Face*, %class.CFX_Face** %43, align 8
  %45 = icmp eq %class.CFX_Face* %44, null
  br i1 %45, label %49, label %46

46:                                               ; preds = %36
  %47 = getelementptr inbounds %class.CFX_Face, %class.CFX_Face* %44, i64 0, i32 2, i32 0, i32 0, i32 0
  %48 = load %struct.FT_FaceRec_*, %struct.FT_FaceRec_** %47, align 8
  br label %49

49:                                               ; preds = %36, %46
  %50 = phi %struct.FT_FaceRec_* [ %48, %46 ], [ null, %36 ]
  %51 = zext i32 %37 to i64
  %52 = call i32 @FT_Get_Char_Index(%struct.FT_FaceRec_* %50, i64 %51) #16
  %53 = icmp eq i32 %52, 0
  %54 = select i1 %53, i32 -1, i32 %52
  call void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"* nonnull %4) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %21) #16
  br label %55

55:                                               ; preds = %3, %17, %49
  %56 = phi i32 [ %54, %49 ], [ -1, %17 ], [ -1, %3 ]
  ret i32 %56
}

declare i32 @FT_Get_Char_Index(%struct.FT_FaceRec_*, i64) local_unnamed_addr #1

; Function Attrs: nounwind
declare void @_ZN5fxcrt10WideStringD1Ev(%"class.fxcrt::WideString"*) unnamed_addr #3

; Function Attrs: norecurse nounwind readonly ssp uwtable
define hidden %class.CFX_Font* @_ZN9CPDF_Font15GetFontFallbackEi(%class.CPDF_Font* nocapture readonly, i32) local_unnamed_addr #7 align 2 {
  %3 = icmp slt i32 %1, 0
  br i1 %3, label %19, label %4

4:                                                ; preds = %2
  %5 = sext i32 %1 to i64
  %6 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4
  %7 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 4, i32 0, i32 1
  %8 = bitcast %"class.std::__1::unique_ptr.194"** %7 to i64*
  %9 = load i64, i64* %8, align 8
  %10 = bitcast %"class.std::__1::vector.192"* %6 to i64*
  %11 = load i64, i64* %10, align 8
  %12 = sub i64 %9, %11
  %13 = ashr exact i64 %12, 3
  %14 = icmp ugt i64 %13, %5
  br i1 %14, label %15, label %19

15:                                               ; preds = %4
  %16 = inttoptr i64 %11 to %"class.std::__1::unique_ptr.194"*
  %17 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %16, i64 %5, i32 0, i32 0, i32 0
  %18 = load %class.CFX_Font*, %class.CFX_Font** %17, align 8
  br label %19

19:                                               ; preds = %2, %4, %15
  %20 = phi %class.CFX_Font* [ %18, %15 ], [ null, %4 ], [ null, %2 ]
  ret %class.CFX_Font* %20
}

; Function Attrs: nounwind ssp uwtable
define hidden zeroext i1 @_ZN9CPDF_Font15FT_UseTTCharmapEP11FT_FaceRec_ii(%struct.FT_FaceRec_*, i32, i32) local_unnamed_addr #0 align 2 {
  %4 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 10
  %5 = load %struct.FT_CharMapRec_**, %struct.FT_CharMapRec_*** %4, align 8
  %6 = getelementptr inbounds %struct.FT_FaceRec_, %struct.FT_FaceRec_* %0, i64 0, i32 9
  %7 = load i32, i32* %6, align 8
  %8 = icmp sgt i32 %7, 0
  br i1 %8, label %9, label %29

9:                                                ; preds = %3
  %10 = sext i32 %7 to i64
  br label %11

11:                                               ; preds = %9, %24
  %12 = phi i64 [ 0, %9 ], [ %25, %24 ]
  %13 = getelementptr inbounds %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %5, i64 %12
  %14 = load %struct.FT_CharMapRec_*, %struct.FT_CharMapRec_** %13, align 8
  %15 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %14, i64 0, i32 2
  %16 = load i16, i16* %15, align 4
  %17 = zext i16 %16 to i32
  %18 = icmp eq i32 %17, %1
  br i1 %18, label %19, label %24

19:                                               ; preds = %11
  %20 = getelementptr inbounds %struct.FT_CharMapRec_, %struct.FT_CharMapRec_* %14, i64 0, i32 3
  %21 = load i16, i16* %20, align 2
  %22 = zext i16 %21 to i32
  %23 = icmp eq i32 %22, %2
  br i1 %23, label %27, label %24

24:                                               ; preds = %11, %19
  %25 = add nuw nsw i64 %12, 1
  %26 = icmp slt i64 %25, %10
  br i1 %26, label %11, label %29

27:                                               ; preds = %19
  %28 = tail call i32 @FT_Set_Charmap(%struct.FT_FaceRec_* %0, %struct.FT_CharMapRec_* %14) #16
  br label %29

29:                                               ; preds = %24, %3, %27
  %30 = phi i1 [ true, %27 ], [ false, %3 ], [ false, %24 ]
  ret i1 %30
}

declare i32 @FT_Set_Charmap(%struct.FT_FaceRec_*, %struct.FT_CharMapRec_*) local_unnamed_addr #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @_ZNK9CPDF_Font13GetFontWeightEv(%class.CPDF_Font* nocapture readonly) local_unnamed_addr #9 align 2 {
  %2 = getelementptr inbounds %class.CPDF_Font, %class.CPDF_Font* %0, i64 0, i32 11
  %3 = load i32, i32* %2, align 8
  %4 = icmp slt i32 %3, 140
  br i1 %4, label %5, label %9

5:                                                ; preds = %1
  %6 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %3, i32 5) #16
  %7 = extractvalue { i32, i1 } %6, 1
  %8 = extractvalue { i32, i1 } %6, 0
  br i1 %7, label %19, label %17

9:                                                ; preds = %1
  %10 = tail call { i32, i1 } @llvm.smul.with.overflow.i32(i32 %3, i32 4) #16
  %11 = extractvalue { i32, i1 } %10, 1
  br i1 %11, label %19, label %12

12:                                               ; preds = %9
  %13 = extractvalue { i32, i1 } %10, 0
  %14 = tail call { i32, i1 } @llvm.sadd.with.overflow.i32(i32 %13, i32 140) #16
  %15 = extractvalue { i32, i1 } %14, 1
  %16 = extractvalue { i32, i1 } %14, 0
  br i1 %15, label %19, label %17

17:                                               ; preds = %5, %12
  %18 = phi i32 [ %8, %5 ], [ %16, %12 ]
  br label %19

19:                                               ; preds = %5, %12, %9, %17
  %20 = phi i32 [ %18, %17 ], [ 400, %12 ], [ 400, %5 ], [ 400, %9 ]
  ret i32 %20
}

declare void @__cxa_pure_virtual() unnamed_addr

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD2Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN5fxcrt10RetainableD0Ev(%"class.fxcrt::Retainable"*) unnamed_addr #0 comdat align 2 {
  %2 = bitcast %"class.fxcrt::Retainable"* %0 to i8*
  tail call void @_ZdlPv(i8* %2) #17
  ret void
}

; Function Attrs: nobuiltin nounwind
declare void @_ZdlPv(i8*) local_unnamed_addr #10

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.smul.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind readnone speculatable
declare { i32, i1 } @llvm.sadd.with.overflow.i32(i32, i32) #11

; Function Attrs: nounwind
declare void @_ZN17CPDF_ToUnicodeMapD1Ev(%class.CPDF_ToUnicodeMap*) unnamed_addr #3

; Function Attrs: nobuiltin nofree
declare noalias nonnull i8* @_Znwm(i64) local_unnamed_addr #12

declare void @_ZN17CPDF_ToUnicodeMapC1EPK11CPDF_Stream(%class.CPDF_ToUnicodeMap*, %class.CPDF_Stream*) unnamed_addr #1

declare void @_ZN15CPDF_DictionaryC1ERKN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEE(%class.CPDF_Dictionary*, %"class.fxcrt::WeakPtr"* dereferenceable(8)) unnamed_addr #1

declare %class.CPDF_Object* @_ZN15CPDF_Dictionary6SetForERKN5fxcrt10ByteStringENS0_9RetainPtrI11CPDF_ObjectEE(%class.CPDF_Dictionary*, %"class.fxcrt::ByteString"* dereferenceable(8), %"class.fxcrt::RetainPtr.281"*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA5_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.385"* noalias sret, %"class.fxcrt::WeakPtr"* dereferenceable(8), [5 x i8]* dereferenceable(5)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call i8* @_Znwm(i64 32) #17
  %7 = bitcast i8* %6 to %class.CPDF_Name*
  %8 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %8, align 8
  %10 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9 to i64
  %11 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds [5 x i8], [5 x i8]* %2, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %19) #16
  call void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name* nonnull %7, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #16
  %20 = ptrtoint i8* %6 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.385"* %0 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %26 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  %28 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  %37 = icmp eq %"class.fxcrt::StringPoolTemplate"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %47) #16
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %43 to i8*
  call void @_ZdlPv(i8* %48) #17
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base"** %52 to i8*
  call void @_ZdlPv(i8* %55) #17
  br label %56

56:                                               ; preds = %54, %50
  %57 = bitcast %"class.fxcrt::StringPoolTemplate"* %36 to i8*
  call void @_ZdlPv(i8* %57) #17
  br label %58

58:                                               ; preds = %56, %34
  %59 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27 to i8*
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %17, %29, %58
  ret void
}

declare void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name*, %"class.fxcrt::WeakPtr"*, %"class.fxcrt::ByteString"* dereferenceable(8)) unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA6_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.385"* noalias sret, %"class.fxcrt::WeakPtr"* dereferenceable(8), [6 x i8]* dereferenceable(6)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call i8* @_Znwm(i64 32) #17
  %7 = bitcast i8* %6 to %class.CPDF_Name*
  %8 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %8, align 8
  %10 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9 to i64
  %11 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds [6 x i8], [6 x i8]* %2, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %19) #16
  call void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name* nonnull %7, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #16
  %20 = ptrtoint i8* %6 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.385"* %0 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %26 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  %28 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  %37 = icmp eq %"class.fxcrt::StringPoolTemplate"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %47) #16
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %43 to i8*
  call void @_ZdlPv(i8* %48) #17
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base"** %52 to i8*
  call void @_ZdlPv(i8* %55) #17
  br label %56

56:                                               ; preds = %54, %50
  %57 = bitcast %"class.fxcrt::StringPoolTemplate"* %36 to i8*
  call void @_ZdlPv(i8* %57) #17
  br label %58

58:                                               ; preds = %56, %34
  %59 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27 to i8*
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %17, %29, %58
  ret void
}

; Function Attrs: nounwind ssp uwtable
define linkonce_odr hidden void @_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERA16_KcEEENS2_9RetainPtrIT_EEDpOT0_(%"class.fxcrt::RetainPtr.385"* noalias sret, %"class.fxcrt::WeakPtr"* dereferenceable(8), [16 x i8]* dereferenceable(16)) local_unnamed_addr #0 comdat {
  %4 = alloca %"class.fxcrt::WeakPtr", align 8
  %5 = alloca %"class.fxcrt::ByteString", align 8
  %6 = tail call i8* @_Znwm(i64 32) #17
  %7 = bitcast i8* %6 to %class.CPDF_Name*
  %8 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %1, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %9 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %8, align 8
  %10 = ptrtoint %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9 to i64
  %11 = bitcast %"class.fxcrt::WeakPtr"* %4 to i64*
  store i64 %10, i64* %11, align 8
  %12 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, null
  br i1 %12, label %17, label %13

13:                                               ; preds = %3
  %14 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %9, i64 0, i32 0
  %15 = load i64, i64* %14, align 8
  %16 = add nsw i64 %15, 1
  store i64 %16, i64* %14, align 8
  br label %17

17:                                               ; preds = %3, %13
  %18 = bitcast %"class.fxcrt::ByteString"* %5 to i8*
  call void @llvm.lifetime.start.p0i8(i64 8, i8* nonnull %18) #16
  %19 = getelementptr inbounds [16 x i8], [16 x i8]* %2, i64 0, i64 0
  call void @_ZN5fxcrt10ByteStringC1EPKc(%"class.fxcrt::ByteString"* nonnull %5, i8* %19) #16
  call void @_ZN9CPDF_NameC1EN5fxcrt7WeakPtrINS0_18StringPoolTemplateINS0_10ByteStringEEENSt3__114default_deleteIS4_EEEERKS3_(%class.CPDF_Name* nonnull %7, %"class.fxcrt::WeakPtr"* nonnull %4, %"class.fxcrt::ByteString"* nonnull dereferenceable(8) %5) #16
  %20 = ptrtoint i8* %6 to i64
  %21 = bitcast %"class.fxcrt::RetainPtr.385"* %0 to i64*
  store i64 %20, i64* %21, align 8
  %22 = getelementptr inbounds i8, i8* %6, i64 8
  %23 = bitcast i8* %22 to i64*
  %24 = load i64, i64* %23, align 8
  %25 = add nsw i64 %24, 1
  store i64 %25, i64* %23, align 8
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* nonnull %5) #16
  call void @llvm.lifetime.end.p0i8(i64 8, i8* nonnull %18) #16
  %26 = getelementptr inbounds %"class.fxcrt::WeakPtr", %"class.fxcrt::WeakPtr"* %4, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %27 = load %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"*, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  store %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* null, %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"** %26, align 8
  %28 = icmp eq %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, null
  br i1 %28, label %60, label %29

29:                                               ; preds = %17
  %30 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 0
  %31 = load i64, i64* %30, align 8
  %32 = add nsw i64 %31, -1
  store i64 %32, i64* %30, align 8
  %33 = icmp eq i64 %32, 0
  br i1 %33, label %34, label %60

34:                                               ; preds = %29
  %35 = getelementptr inbounds %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle", %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27, i64 0, i32 1, i32 0, i32 0, i32 0
  %36 = load %"class.fxcrt::StringPoolTemplate"*, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  store %"class.fxcrt::StringPoolTemplate"* null, %"class.fxcrt::StringPoolTemplate"** %35, align 8
  %37 = icmp eq %"class.fxcrt::StringPoolTemplate"* %36, null
  br i1 %37, label %58, label %38

38:                                               ; preds = %34
  %39 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 1, i32 0, i32 0, i32 0
  %40 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %39, align 8
  %41 = icmp eq %"struct.std::__1::__hash_node_base"* %40, null
  br i1 %41, label %50, label %42

42:                                               ; preds = %38, %42
  %43 = phi %"struct.std::__1::__hash_node_base"* [ %45, %42 ], [ %40, %38 ]
  %44 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 0, i32 0
  %45 = load %"struct.std::__1::__hash_node_base"*, %"struct.std::__1::__hash_node_base"** %44, align 8
  %46 = getelementptr inbounds %"struct.std::__1::__hash_node_base", %"struct.std::__1::__hash_node_base"* %43, i64 2
  %47 = bitcast %"struct.std::__1::__hash_node_base"* %46 to %"class.fxcrt::ByteString"*
  call void @_ZN5fxcrt10ByteStringD1Ev(%"class.fxcrt::ByteString"* %47) #16
  %48 = bitcast %"struct.std::__1::__hash_node_base"* %43 to i8*
  call void @_ZdlPv(i8* %48) #17
  %49 = icmp eq %"struct.std::__1::__hash_node_base"* %45, null
  br i1 %49, label %50, label %42

50:                                               ; preds = %42, %38
  %51 = getelementptr inbounds %"class.fxcrt::StringPoolTemplate", %"class.fxcrt::StringPoolTemplate"* %36, i64 0, i32 0, i32 0, i32 0, i32 0, i32 0, i32 0
  %52 = load %"struct.std::__1::__hash_node_base"**, %"struct.std::__1::__hash_node_base"*** %51, align 8
  store %"struct.std::__1::__hash_node_base"** null, %"struct.std::__1::__hash_node_base"*** %51, align 8
  %53 = icmp eq %"struct.std::__1::__hash_node_base"** %52, null
  br i1 %53, label %56, label %54

54:                                               ; preds = %50
  %55 = bitcast %"struct.std::__1::__hash_node_base"** %52 to i8*
  call void @_ZdlPv(i8* %55) #17
  br label %56

56:                                               ; preds = %54, %50
  %57 = bitcast %"class.fxcrt::StringPoolTemplate"* %36 to i8*
  call void @_ZdlPv(i8* %57) #17
  br label %58

58:                                               ; preds = %56, %34
  %59 = bitcast %"class.fxcrt::WeakPtr<fxcrt::StringPoolTemplate<fxcrt::ByteString>, std::__1::default_delete<fxcrt::StringPoolTemplate<fxcrt::ByteString> > >::Handle"* %27 to i8*
  call void @_ZdlPv(i8* %59) #17
  br label %60

60:                                               ; preds = %17, %29, %58
  ret void
}

declare void @_ZN12CPDF_CIDFontC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_CIDFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

declare void @_ZN17CPDF_TrueTypeFontC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_TrueTypeFont*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

declare void @_ZN14CPDF_Type3FontC1EP13CPDF_DocumentP15CPDF_DictionaryPN9CPDF_Font16FormFactoryIfaceE(%class.CPDF_Type3Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*, %"class.CPDF_Font::FormFactoryIface"*) unnamed_addr #1

declare void @_ZN14CPDF_Type1FontC1EP13CPDF_DocumentP15CPDF_Dictionary(%class.CPDF_Type1Font*, %class.CPDF_Document*, %class.CPDF_Dictionary*) unnamed_addr #1

; Function Attrs: inlinehint nounwind ssp uwtable
define linkonce_odr hidden void @_ZNSt3__16vectorINS_10unique_ptrI8CFX_FontNS_14default_deleteIS2_EEEENS_9allocatorIS5_EEE21__push_back_slow_pathIS5_EEvOT_(%"class.std::__1::vector.192"*, %"class.std::__1::unique_ptr.194"* dereferenceable(8)) local_unnamed_addr #13 comdat align 2 {
  %3 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 1
  %4 = bitcast %"class.std::__1::unique_ptr.194"** %3 to i64*
  %5 = load i64, i64* %4, align 8
  %6 = bitcast %"class.std::__1::vector.192"* %0 to i64*
  %7 = load i64, i64* %6, align 8
  %8 = sub i64 %5, %7
  %9 = ashr exact i64 %8, 3
  %10 = add nsw i64 %9, 1
  %11 = icmp ugt i64 %10, 2305843009213693951
  br i1 %11, label %12, label %14

12:                                               ; preds = %2
  %13 = bitcast %"class.std::__1::vector.192"* %0 to %"class.std::__1::__vector_base_common"*
  tail call void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"* %13) #18
  unreachable

14:                                               ; preds = %2
  %15 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 2, i32 0, i32 0
  %16 = bitcast %"class.std::__1::unique_ptr.194"** %15 to i64*
  %17 = load i64, i64* %16, align 8
  %18 = sub i64 %17, %7
  %19 = ashr exact i64 %18, 3
  %20 = icmp ult i64 %19, 1152921504606846975
  br i1 %20, label %21, label %29

21:                                               ; preds = %14
  %22 = ashr exact i64 %18, 2
  %23 = icmp ult i64 %22, %10
  %24 = select i1 %23, i64 %10, i64 %22
  %25 = icmp eq i64 %24, 0
  br i1 %25, label %34, label %26

26:                                               ; preds = %21
  %27 = icmp ugt i64 %24, 2305843009213693951
  br i1 %27, label %28, label %29

28:                                               ; preds = %26
  tail call void @abort() #18
  unreachable

29:                                               ; preds = %14, %26
  %30 = phi i64 [ %24, %26 ], [ 2305843009213693951, %14 ]
  %31 = shl i64 %30, 3
  %32 = tail call i8* @_Znwm(i64 %31) #17
  %33 = bitcast i8* %32 to %"class.std::__1::unique_ptr.194"*
  br label %34

34:                                               ; preds = %21, %29
  %35 = phi i64 [ %30, %29 ], [ 0, %21 ]
  %36 = phi %"class.std::__1::unique_ptr.194"* [ %33, %29 ], [ null, %21 ]
  %37 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %36, i64 %9
  %38 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %36, i64 %35
  %39 = ptrtoint %"class.std::__1::unique_ptr.194"* %38 to i64
  %40 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %1, i64 0, i32 0, i32 0, i32 0
  %41 = bitcast %"class.std::__1::unique_ptr.194"* %1 to i64*
  %42 = load i64, i64* %41, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %40, align 8
  %43 = bitcast %"class.std::__1::unique_ptr.194"* %37 to i64*
  store i64 %42, i64* %43, align 8
  %44 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %37, i64 1
  %45 = ptrtoint %"class.std::__1::unique_ptr.194"* %44 to i64
  %46 = getelementptr inbounds %"class.std::__1::vector.192", %"class.std::__1::vector.192"* %0, i64 0, i32 0, i32 0
  %47 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %46, align 8
  %48 = ptrtoint %"class.std::__1::unique_ptr.194"* %47 to i64
  %49 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %3, align 8
  %50 = icmp eq %"class.std::__1::unique_ptr.194"* %49, %47
  br i1 %50, label %132, label %51

51:                                               ; preds = %34
  %52 = getelementptr %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %49, i64 -1, i32 0, i32 0, i32 0
  %53 = ptrtoint %class.CFX_Font** %52 to i64
  %54 = sub i64 %53, %48
  %55 = lshr i64 %54, 3
  %56 = add nuw nsw i64 %55, 1
  %57 = and i64 %56, 7
  %58 = icmp eq i64 %57, 0
  br i1 %58, label %71, label %59

59:                                               ; preds = %51, %59
  %60 = phi %"class.std::__1::unique_ptr.194"* [ %63, %59 ], [ %37, %51 ]
  %61 = phi %"class.std::__1::unique_ptr.194"* [ %64, %59 ], [ %49, %51 ]
  %62 = phi i64 [ %69, %59 ], [ %57, %51 ]
  %63 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %60, i64 -1
  %64 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %61, i64 -1
  %65 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %64, i64 0, i32 0, i32 0, i32 0
  %66 = bitcast %"class.std::__1::unique_ptr.194"* %64 to i64*
  %67 = load i64, i64* %66, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %65, align 8
  %68 = bitcast %"class.std::__1::unique_ptr.194"* %63 to i64*
  store i64 %67, i64* %68, align 8
  %69 = add i64 %62, -1
  %70 = icmp eq i64 %69, 0
  br i1 %70, label %71, label %59, !llvm.loop !34

71:                                               ; preds = %59, %51
  %72 = phi %"class.std::__1::unique_ptr.194"* [ undef, %51 ], [ %63, %59 ]
  %73 = phi %"class.std::__1::unique_ptr.194"* [ %37, %51 ], [ %63, %59 ]
  %74 = phi %"class.std::__1::unique_ptr.194"* [ %49, %51 ], [ %64, %59 ]
  %75 = icmp ult i64 %54, 56
  br i1 %75, label %128, label %76

76:                                               ; preds = %71, %76
  %77 = phi %"class.std::__1::unique_ptr.194"* [ %121, %76 ], [ %73, %71 ]
  %78 = phi %"class.std::__1::unique_ptr.194"* [ %122, %76 ], [ %74, %71 ]
  %79 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -1
  %80 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -1
  %81 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %80, i64 0, i32 0, i32 0, i32 0
  %82 = bitcast %"class.std::__1::unique_ptr.194"* %80 to i64*
  %83 = load i64, i64* %82, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %81, align 8
  %84 = bitcast %"class.std::__1::unique_ptr.194"* %79 to i64*
  store i64 %83, i64* %84, align 8
  %85 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -2
  %86 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -2
  %87 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %86, i64 0, i32 0, i32 0, i32 0
  %88 = bitcast %"class.std::__1::unique_ptr.194"* %86 to i64*
  %89 = load i64, i64* %88, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %87, align 8
  %90 = bitcast %"class.std::__1::unique_ptr.194"* %85 to i64*
  store i64 %89, i64* %90, align 8
  %91 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -3
  %92 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -3
  %93 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %92, i64 0, i32 0, i32 0, i32 0
  %94 = bitcast %"class.std::__1::unique_ptr.194"* %92 to i64*
  %95 = load i64, i64* %94, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %93, align 8
  %96 = bitcast %"class.std::__1::unique_ptr.194"* %91 to i64*
  store i64 %95, i64* %96, align 8
  %97 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -4
  %98 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -4
  %99 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %98, i64 0, i32 0, i32 0, i32 0
  %100 = bitcast %"class.std::__1::unique_ptr.194"* %98 to i64*
  %101 = load i64, i64* %100, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %99, align 8
  %102 = bitcast %"class.std::__1::unique_ptr.194"* %97 to i64*
  store i64 %101, i64* %102, align 8
  %103 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -5
  %104 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -5
  %105 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %104, i64 0, i32 0, i32 0, i32 0
  %106 = bitcast %"class.std::__1::unique_ptr.194"* %104 to i64*
  %107 = load i64, i64* %106, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %105, align 8
  %108 = bitcast %"class.std::__1::unique_ptr.194"* %103 to i64*
  store i64 %107, i64* %108, align 8
  %109 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -6
  %110 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -6
  %111 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %110, i64 0, i32 0, i32 0, i32 0
  %112 = bitcast %"class.std::__1::unique_ptr.194"* %110 to i64*
  %113 = load i64, i64* %112, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %111, align 8
  %114 = bitcast %"class.std::__1::unique_ptr.194"* %109 to i64*
  store i64 %113, i64* %114, align 8
  %115 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -7
  %116 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -7
  %117 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %116, i64 0, i32 0, i32 0, i32 0
  %118 = bitcast %"class.std::__1::unique_ptr.194"* %116 to i64*
  %119 = load i64, i64* %118, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %117, align 8
  %120 = bitcast %"class.std::__1::unique_ptr.194"* %115 to i64*
  store i64 %119, i64* %120, align 8
  %121 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %77, i64 -8
  %122 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %78, i64 -8
  %123 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %122, i64 0, i32 0, i32 0, i32 0
  %124 = bitcast %"class.std::__1::unique_ptr.194"* %122 to i64*
  %125 = load i64, i64* %124, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %123, align 8
  %126 = bitcast %"class.std::__1::unique_ptr.194"* %121 to i64*
  store i64 %125, i64* %126, align 8
  %127 = icmp eq %"class.std::__1::unique_ptr.194"* %122, %47
  br i1 %127, label %128, label %76

128:                                              ; preds = %76, %71
  %129 = phi %"class.std::__1::unique_ptr.194"* [ %72, %71 ], [ %121, %76 ]
  %130 = load i64, i64* %6, align 8
  %131 = load %"class.std::__1::unique_ptr.194"*, %"class.std::__1::unique_ptr.194"** %3, align 8
  br label %132

132:                                              ; preds = %34, %128
  %133 = phi %"class.std::__1::unique_ptr.194"* [ %131, %128 ], [ %47, %34 ]
  %134 = phi %"class.std::__1::unique_ptr.194"* [ %129, %128 ], [ %37, %34 ]
  %135 = phi i64 [ %130, %128 ], [ %48, %34 ]
  %136 = ptrtoint %"class.std::__1::unique_ptr.194"* %134 to i64
  store i64 %136, i64* %6, align 8
  store i64 %45, i64* %4, align 8
  store i64 %39, i64* %16, align 8
  %137 = inttoptr i64 %135 to %"class.std::__1::unique_ptr.194"*
  %138 = icmp eq %"class.std::__1::unique_ptr.194"* %133, %137
  br i1 %138, label %149, label %139

139:                                              ; preds = %132, %147
  %140 = phi %"class.std::__1::unique_ptr.194"* [ %141, %147 ], [ %133, %132 ]
  %141 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %140, i64 -1
  %142 = getelementptr inbounds %"class.std::__1::unique_ptr.194", %"class.std::__1::unique_ptr.194"* %141, i64 0, i32 0, i32 0, i32 0
  %143 = load %class.CFX_Font*, %class.CFX_Font** %142, align 8
  store %class.CFX_Font* null, %class.CFX_Font** %142, align 8
  %144 = icmp eq %class.CFX_Font* %143, null
  br i1 %144, label %147, label %145

145:                                              ; preds = %139
  tail call void @_ZN8CFX_FontD1Ev(%class.CFX_Font* nonnull %143) #16
  %146 = bitcast %class.CFX_Font* %143 to i8*
  tail call void @_ZdlPv(i8* %146) #17
  br label %147

147:                                              ; preds = %145, %139
  %148 = icmp eq %"class.std::__1::unique_ptr.194"* %141, %137
  br i1 %148, label %149, label %139

149:                                              ; preds = %147, %132
  %150 = icmp eq i64 %135, 0
  br i1 %150, label %153, label %151

151:                                              ; preds = %149
  %152 = inttoptr i64 %135 to i8*
  tail call void @_ZdlPv(i8* %152) #17
  br label %153

153:                                              ; preds = %149, %151
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

; Function Attrs: noreturn
declare void @_ZNKSt3__120__vector_base_commonILb1EE20__throw_length_errorEv(%"class.std::__1::__vector_base_common"*) local_unnamed_addr #14

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #15

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { noreturn nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { cold noreturn nounwind }
attributes #6 = { norecurse nounwind readnone ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { norecurse nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { nofree norecurse nounwind ssp uwtable writeonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #10 = { nobuiltin nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #11 = { nounwind readnone speculatable }
attributes #12 = { nobuiltin nofree "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #13 = { inlinehint nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #14 = { noreturn "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #15 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #16 = { nounwind }
attributes #17 = { builtin nounwind }
attributes #18 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
!2 = !{i8 0, i8 2}
!3 = !{!"branch_weights", i32 2000, i32 1}
!4 = !{i32 -2143482498}
!5 = !{i32 -2143482477}
!6 = !{!7, !9}
!7 = distinct !{!7, !8, !"_ZN6pdfium10MakeRetainI15CPDF_DictionaryJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEEEEENS2_9RetainPtrIT_EEDpOT0_: argument 0"}
!8 = distinct !{!8, !"_ZN6pdfium10MakeRetainI15CPDF_DictionaryJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEEEEENS2_9RetainPtrIT_EEDpOT0_"}
!9 = distinct !{!9, !10, !"_ZN25CPDF_IndirectObjectHolder3NewI15CPDF_DictionaryJEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEN5fxcrt9RetainPtrIS4_EEE4typeEDpOT0_: argument 0"}
!10 = distinct !{!10, !"_ZN25CPDF_IndirectObjectHolder3NewI15CPDF_DictionaryJEEENSt3__19enable_ifIXsr16CanInternStringsIT_EE5valueEN5fxcrt9RetainPtrIS4_EEE4typeEDpOT0_"}
!11 = !{i32 -2143102023}
!12 = !{i32 -2143102002}
!13 = !{!14}
!14 = distinct !{!14, !15, !"_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERS5_EEENS2_9RetainPtrIT_EEDpOT0_: argument 0"}
!15 = distinct !{!15, !"_ZN6pdfium10MakeRetainI9CPDF_NameJRN5fxcrt7WeakPtrINS2_18StringPoolTemplateINS2_10ByteStringEEENSt3__114default_deleteIS6_EEEERS5_EEENS2_9RetainPtrIT_EEDpOT0_"}
!16 = !{!17}
!17 = distinct !{!17, !18, !"_ZN6pdfium10MakeRetainI12CPDF_CIDFontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!18 = distinct !{!18, !"_ZN6pdfium10MakeRetainI12CPDF_CIDFontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!19 = !{!20}
!20 = distinct !{!20, !21, !"_ZN6pdfium10MakeRetainI17CPDF_TrueTypeFontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!21 = distinct !{!21, !"_ZN6pdfium10MakeRetainI17CPDF_TrueTypeFontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!22 = !{!23}
!23 = distinct !{!23, !24, !"_ZN6pdfium10MakeRetainI14CPDF_Type3FontJRP13CPDF_DocumentRP15CPDF_DictionaryRPN9CPDF_Font16FormFactoryIfaceEEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!24 = distinct !{!24, !"_ZN6pdfium10MakeRetainI14CPDF_Type3FontJRP13CPDF_DocumentRP15CPDF_DictionaryRPN9CPDF_Font16FormFactoryIfaceEEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!25 = !{!26}
!26 = distinct !{!26, !27, !"_ZN6pdfium10MakeRetainI12CPDF_CIDFontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!27 = distinct !{!27, !"_ZN6pdfium10MakeRetainI12CPDF_CIDFontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!28 = !{!29}
!29 = distinct !{!29, !30, !"_ZN6pdfium10MakeRetainI14CPDF_Type1FontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_: argument 0"}
!30 = distinct !{!30, !"_ZN6pdfium10MakeRetainI14CPDF_Type1FontJRP13CPDF_DocumentRP15CPDF_DictionaryEEEN5fxcrt9RetainPtrIT_EEDpOT0_"}
!31 = !{i32 -2143431173}
!32 = !{i32 -2143431152}
!33 = !{!"branch_weights", i32 1, i32 2000}
!34 = distinct !{!34, !35}
!35 = !{!"llvm.loop.unroll.disable"}
