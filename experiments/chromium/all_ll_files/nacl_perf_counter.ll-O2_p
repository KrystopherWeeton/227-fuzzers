; ModuleID = '../../native_client/src/trusted/perf_counter/nacl_perf_counter.c'
source_filename = "../../native_client/src/trusted/perf_counter/nacl_perf_counter.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

%struct.NaClPerfCounter = type { [128 x i8], i32, [16 x %struct.nacl_abi_timeval], [16 x [20 x i8]] }
%struct.nacl_abi_timeval = type { i64, i32 }

@.str = private unnamed_addr constant [44 x i8] c"NaClPerfCounterStart received null pointer\0A\00", align 1
@.str.1 = private unnamed_addr constant [16 x i8] c"__unknown_app__\00", align 1
@.str.2 = private unnamed_addr constant [10 x i8] c"__start__\00", align 1
@.str.3 = private unnamed_addr constant [40 x i8] c"NaClPerfCounterMark received null args\0A\00", align 1
@.str.4 = private unnamed_addr constant [46 x i8] c"NaClPerfCounterMark going beyond buffer size\0A\00", align 1
@.str.5 = private unnamed_addr constant [50 x i8] c"NaClPerfCounterInterval(%s %s:%s): %ld microsecs\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @NaClPerfCounterCtor(%struct.NaClPerfCounter*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.NaClPerfCounter* %0, null
  br i1 %3, label %4, label %5

4:                                                ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([44 x i8], [44 x i8]* @.str, i64 0, i64 0)) #5
  br label %25

5:                                                ; preds = %2
  %6 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 0, i64 0
  tail call void @llvm.memset.p0i8.i64(i8* align 8 %6, i8 0, i64 712, i1 false)
  %7 = icmp eq i8* %1, null
  %8 = select i1 %7, i8* getelementptr inbounds ([16 x i8], [16 x i8]* @.str.1, i64 0, i64 0), i8* %1
  %9 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %6, i1 false, i1 true, i1 false) #5
  %10 = tail call i8* @__strncpy_chk(i8* %6, i8* %8, i64 127, i64 %9) #5
  %11 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 0, i64 127
  store i8 0, i8* %11, align 1
  %12 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 0, i64 0
  %13 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %12, i1 false, i1 true, i1 false) #5
  %14 = tail call i8* @__strncpy_chk(i8* %12, i8* getelementptr inbounds ([10 x i8], [10 x i8]* @.str.2, i64 0, i64 0), i64 19, i64 %13) #5
  %15 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 1
  br label %16

16:                                               ; preds = %16, %5
  %17 = load i32, i32* %15, align 8
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %18
  %20 = tail call i32 @NaClGetTimeOfDay(%struct.nacl_abi_timeval* %19) #5
  %21 = icmp eq i32 %20, 0
  br i1 %21, label %22, label %16

22:                                               ; preds = %16
  %23 = load i32, i32* %15, align 8
  %24 = add i32 %23, 1
  store i32 %24, i32* %15, align 8
  br label %25

25:                                               ; preds = %22, %4
  ret void
}

declare void @NaClLog(i32, i8*, ...) local_unnamed_addr #1

; Function Attrs: argmemonly nounwind
declare void @llvm.memset.p0i8.i64(i8* nocapture writeonly, i8, i64, i1 immarg) #2

declare i32 @NaClGetTimeOfDay(%struct.nacl_abi_timeval*) local_unnamed_addr #1

; Function Attrs: nounwind ssp uwtable
define hidden i32 @NaClPerfCounterMark(%struct.NaClPerfCounter*, i8*) local_unnamed_addr #0 {
  %3 = icmp eq %struct.NaClPerfCounter* %0, null
  %4 = icmp eq i8* %1, null
  %5 = or i1 %3, %4
  br i1 %5, label %6, label %7

6:                                                ; preds = %2
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([40 x i8], [40 x i8]* @.str.3, i64 0, i64 0)) #5
  br label %28

7:                                                ; preds = %2
  %8 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 1
  %9 = load i32, i32* %8, align 8
  %10 = icmp ugt i32 %9, 15
  br i1 %10, label %11, label %12

11:                                               ; preds = %7
  tail call void (i32, i8*, ...) @NaClLog(i32 -3, i8* getelementptr inbounds ([46 x i8], [46 x i8]* @.str.4, i64 0, i64 0)) #5
  br label %28

12:                                               ; preds = %7, %12
  %13 = phi i32 [ %18, %12 ], [ %9, %7 ]
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %14
  %16 = tail call i32 @NaClGetTimeOfDay(%struct.nacl_abi_timeval* %15) #5
  %17 = icmp eq i32 %16, 0
  %18 = load i32, i32* %8, align 8
  br i1 %17, label %19, label %12

19:                                               ; preds = %12
  %20 = zext i32 %18 to i64
  %21 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 %20, i64 0
  %22 = tail call i64 @llvm.objectsize.i64.p0i8(i8* %21, i1 false, i1 true, i1 false) #5
  %23 = tail call i8* @__strncpy_chk(i8* %21, i8* %1, i64 19, i64 %22) #5
  %24 = load i32, i32* %8, align 8
  %25 = zext i32 %24 to i64
  %26 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 %25, i64 19
  store i8 0, i8* %26, align 1
  %27 = add i32 %24, 1
  store i32 %27, i32* %8, align 8
  br label %28

28:                                               ; preds = %19, %11, %6
  %29 = phi i32 [ -1, %6 ], [ -1, %11 ], [ %24, %19 ]
  ret i32 %29
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClPerfCounterInterval(%struct.NaClPerfCounter*, i32, i32) local_unnamed_addr #0 {
  %4 = icmp eq %struct.NaClPerfCounter* %0, null
  br i1 %4, label %36, label %5

5:                                                ; preds = %3
  %6 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 1
  %7 = load i32, i32* %6, align 8
  %8 = icmp ugt i32 %7, %1
  %9 = icmp ugt i32 %7, %2
  %10 = and i1 %8, %9
  %11 = icmp ult i32 %7, 17
  %12 = and i1 %11, %10
  br i1 %12, label %13, label %36

13:                                               ; preds = %5
  %14 = icmp ult i32 %1, %2
  %15 = select i1 %14, i32 %1, i32 %2
  %16 = icmp ult i32 %2, %1
  %17 = select i1 %16, i32 %1, i32 %2
  %18 = zext i32 %17 to i64
  %19 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %18, i32 0
  %20 = load i64, i64* %19, align 8
  %21 = zext i32 %15 to i64
  %22 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %21, i32 0
  %23 = load i64, i64* %22, align 8
  %24 = sub nsw i64 %20, %23
  %25 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %18, i32 1
  %26 = load i32, i32* %25, align 8
  %27 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %21, i32 1
  %28 = load i32, i32* %27, align 8
  %29 = sub nsw i32 %26, %28
  %30 = sext i32 %29 to i64
  %31 = mul nsw i64 %24, 1000000
  %32 = add nsw i64 %31, %30
  %33 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 0, i64 0
  %34 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 %21, i64 0
  %35 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 %18, i64 0
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i8* %33, i8* %34, i8* %35, i64 %32) #5
  br label %36

36:                                               ; preds = %5, %3, %13
  %37 = phi i64 [ %32, %13 ], [ -1, %3 ], [ -1, %5 ]
  ret i64 %37
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClPerfCounterIntervalLast(%struct.NaClPerfCounter*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.NaClPerfCounter* %0, null
  br i1 %2, label %32, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -2
  %7 = add i32 %5, -1
  %8 = icmp ult i32 %6, 15
  br i1 %8, label %9, label %32

9:                                                ; preds = %3
  %10 = icmp ult i32 %6, %7
  %11 = select i1 %10, i32 %6, i32 %7
  %12 = icmp ult i32 %7, %6
  %13 = select i1 %12, i32 %6, i32 %7
  %14 = zext i32 %13 to i64
  %15 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %14, i32 0
  %16 = load i64, i64* %15, align 8
  %17 = zext i32 %11 to i64
  %18 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %17, i32 0
  %19 = load i64, i64* %18, align 8
  %20 = sub nsw i64 %16, %19
  %21 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %14, i32 1
  %22 = load i32, i32* %21, align 8
  %23 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %17, i32 1
  %24 = load i32, i32* %23, align 8
  %25 = sub nsw i32 %22, %24
  %26 = sext i32 %25 to i64
  %27 = mul nsw i64 %20, 1000000
  %28 = add nsw i64 %27, %26
  %29 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 0, i64 0
  %30 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 %17, i64 0
  %31 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 %14, i64 0
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i8* %29, i8* %30, i8* %31, i64 %28) #5
  br label %32

32:                                               ; preds = %9, %3, %1
  %33 = phi i64 [ -1, %1 ], [ %28, %9 ], [ -1, %3 ]
  ret i64 %33
}

; Function Attrs: nounwind ssp uwtable
define hidden i64 @NaClPerfCounterIntervalTotal(%struct.NaClPerfCounter*) local_unnamed_addr #0 {
  %2 = icmp eq %struct.NaClPerfCounter* %0, null
  br i1 %2, label %26, label %3

3:                                                ; preds = %1
  %4 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 1
  %5 = load i32, i32* %4, align 8
  %6 = add i32 %5, -1
  %7 = icmp ult i32 %6, 16
  br i1 %7, label %8, label %26

8:                                                ; preds = %3
  %9 = zext i32 %6 to i64
  %10 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %9, i32 0
  %11 = load i64, i64* %10, align 8
  %12 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 0, i32 0
  %13 = load i64, i64* %12, align 8
  %14 = sub nsw i64 %11, %13
  %15 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 %9, i32 1
  %16 = load i32, i32* %15, align 8
  %17 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 2, i64 0, i32 1
  %18 = load i32, i32* %17, align 8
  %19 = sub nsw i32 %16, %18
  %20 = sext i32 %19 to i64
  %21 = mul nsw i64 %14, 1000000
  %22 = add nsw i64 %21, %20
  %23 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 0, i64 0
  %24 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 0, i64 0
  %25 = getelementptr inbounds %struct.NaClPerfCounter, %struct.NaClPerfCounter* %0, i64 0, i32 3, i64 %9, i64 0
  tail call void (i32, i8*, ...) @NaClLog(i32 1, i8* getelementptr inbounds ([50 x i8], [50 x i8]* @.str.5, i64 0, i64 0), i8* %23, i8* %24, i8* %25, i64 %22) #5
  br label %26

26:                                               ; preds = %8, %3, %1
  %27 = phi i64 [ -1, %1 ], [ %22, %8 ], [ -1, %3 ]
  ret i64 %27
}

; Function Attrs: nofree nounwind
declare i8* @__strncpy_chk(i8*, i8*, i64, i64) local_unnamed_addr #3

; Function Attrs: nounwind readnone speculatable
declare i64 @llvm.objectsize.i64.p0i8(i8*, i1 immarg, i1 immarg, i1 immarg) #4

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #2 = { argmemonly nounwind }
attributes #3 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { nounwind readnone speculatable }
attributes #5 = { nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
