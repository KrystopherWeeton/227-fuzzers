; ModuleID = '../../third_party/fontconfig/src/src/fcobjs.c'
source_filename = "../../third_party/fontconfig/src/src/fcobjs.c"
target datalayout = "e-m:e-i64:64-f80:128-n8:16:32:64-S128"
target triple = "x86_64-unknown-linux-gnu"

module asm ".symver exp, exp@GLIBC_2.2.5"
module asm ".symver exp2, exp2@GLIBC_2.2.5"
module asm ".symver exp2f, exp2f@GLIBC_2.2.5"
module asm ".symver expf, expf@GLIBC_2.2.5"
module asm ".symver lgamma, lgamma@GLIBC_2.2.5"
module asm ".symver lgammaf, lgammaf@GLIBC_2.2.5"
module asm ".symver lgammal, lgammal@GLIBC_2.2.5"
module asm ".symver log, log@GLIBC_2.2.5"
module asm ".symver log2, log2@GLIBC_2.2.5"
module asm ".symver log2f, log2f@GLIBC_2.2.5"
module asm ".symver logf, logf@GLIBC_2.2.5"
module asm ".symver pow, pow@GLIBC_2.2.5"
module asm ".symver powf, powf@GLIBC_2.2.5"

%struct.FcObjectOtherTypeInfo = type { %struct.FcObjectOtherTypeInfo*, %struct._FcObjectType, i32 }
%struct._FcObjectType = type { i8*, i32 }
%struct.FcObjectTypeInfo = type { i32, i32 }
%struct.FcObjectTypeNamePool_t = type { [4 x i8], [5 x i8], [5 x i8], [8 x i8], [9 x i8], [6 x i8], [7 x i8], [8 x i8], [5 x i8], [10 x i8], [5 x i8], [7 x i8], [7 x i8], [8 x i8], [10 x i8], [8 x i8], [11 x i8], [9 x i8], [9 x i8], [10 x i8], [7 x i8], [13 x i8], [9 x i8], [9 x i8], [11 x i8], [6 x i8], [5 x i8], [10 x i8], [6 x i8], [12 x i8], [15 x i8], [6 x i8], [6 x i8], [9 x i8], [9 x i8], [10 x i8], [10 x i8], [14 x i8], [11 x i8], [12 x i8], [15 x i8], [11 x i8], [15 x i8], [11 x i8], [11 x i8], [6 x i8], [13 x i8], [7 x i8], [8 x i8], [8 x i8], [15 x i8] }
%struct._IO_FILE = type { i32, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, i8*, %struct._IO_marker*, %struct._IO_FILE*, i32, i32, i64, i16, i8, [1 x i8], i8*, i64, %struct._IO_codecvt*, %struct._IO_wide_data*, %struct._IO_FILE*, i8*, i64, i32, [20 x i8] }
%struct._IO_marker = type opaque
%struct._IO_codecvt = type opaque
%struct._IO_wide_data = type opaque

@other_types = common hidden global %struct.FcObjectOtherTypeInfo* null, align 8
@FcObjectTypeLookup.wordlist = internal constant [61 x %struct.FcObjectTypeInfo] [%struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 0, i32 26 }, %struct.FcObjectTypeInfo { i32 4, i32 10 }, %struct.FcObjectTypeInfo { i32 9, i32 21 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 14, i32 13 }, %struct.FcObjectTypeInfo { i32 22, i32 25 }, %struct.FcObjectTypeInfo { i32 31, i32 7 }, %struct.FcObjectTypeInfo { i32 37, i32 32 }, %struct.FcObjectTypeInfo { i32 44, i32 24 }, %struct.FcObjectTypeInfo { i32 52, i32 45 }, %struct.FcObjectTypeInfo { i32 57, i32 15 }, %struct.FcObjectTypeInfo { i32 67, i32 34 }, %struct.FcObjectTypeInfo { i32 72, i32 11 }, %struct.FcObjectTypeInfo { i32 79, i32 8 }, %struct.FcObjectTypeInfo { i32 86, i32 33 }, %struct.FcObjectTypeInfo { i32 94, i32 30 }, %struct.FcObjectTypeInfo { i32 104, i32 17 }, %struct.FcObjectTypeInfo { i32 112, i32 31 }, %struct.FcObjectTypeInfo { i32 123, i32 5 }, %struct.FcObjectTypeInfo { i32 132, i32 19 }, %struct.FcObjectTypeInfo { i32 141, i32 41 }, %struct.FcObjectTypeInfo { i32 151, i32 1 }, %struct.FcObjectTypeInfo { i32 158, i32 6 }, %struct.FcObjectTypeInfo { i32 171, i32 42 }, %struct.FcObjectTypeInfo { i32 180, i32 29 }, %struct.FcObjectTypeInfo { i32 189, i32 2 }, %struct.FcObjectTypeInfo { i32 200, i32 9 }, %struct.FcObjectTypeInfo { i32 206, i32 27 }, %struct.FcObjectTypeInfo { i32 211, i32 16 }, %struct.FcObjectTypeInfo { i32 221, i32 28 }, %struct.FcObjectTypeInfo { i32 227, i32 51 }, %struct.FcObjectTypeInfo { i32 239, i32 46 }, %struct.FcObjectTypeInfo { i32 254, i32 3 }, %struct.FcObjectTypeInfo { i32 260, i32 47 }, %struct.FcObjectTypeInfo { i32 266, i32 38 }, %struct.FcObjectTypeInfo { i32 275, i32 50 }, %struct.FcObjectTypeInfo { i32 284, i32 4 }, %struct.FcObjectTypeInfo { i32 294, i32 12 }, %struct.FcObjectTypeInfo { i32 304, i32 20 }, %struct.FcObjectTypeInfo { i32 318, i32 40 }, %struct.FcObjectTypeInfo { i32 329, i32 35 }, %struct.FcObjectTypeInfo { i32 341, i32 18 }, %struct.FcObjectTypeInfo { i32 356, i32 36 }, %struct.FcObjectTypeInfo { i32 367, i32 49 }, %struct.FcObjectTypeInfo { i32 382, i32 23 }, %struct.FcObjectTypeInfo { i32 393, i32 37 }, %struct.FcObjectTypeInfo { i32 404, i32 22 }, %struct.FcObjectTypeInfo { i32 410, i32 43 }, %struct.FcObjectTypeInfo { i32 423, i32 48 }, %struct.FcObjectTypeInfo { i32 430, i32 14 }, %struct.FcObjectTypeInfo { i32 438, i32 44 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 -1, i32 0 }, %struct.FcObjectTypeInfo { i32 446, i32 39 }], align 16
@FcObjectTypeNamePool_contents = internal constant %struct.FcObjectTypeNamePool_t { [4 x i8] c"dpi\00", [5 x i8] c"size\00", [5 x i8] c"file\00", [8 x i8] c"spacing\00", [9 x i8] c"scalable\00", [6 x i8] c"slant\00", [7 x i8] c"matrix\00", [8 x i8] c"outline\00", [5 x i8] c"hash\00", [10 x i8] c"antialias\00", [5 x i8] c"lang\00", [7 x i8] c"aspect\00", [7 x i8] c"weight\00", [8 x i8] c"charset\00", [10 x i8] c"charwidth\00", [8 x i8] c"hinting\00", [11 x i8] c"charheight\00", [9 x i8] c"fullname\00", [9 x i8] c"autohint\00", [10 x i8] c"lcdfilter\00", [7 x i8] c"family\00", [13 x i8] c"fullnamelang\00", [9 x i8] c"namelang\00", [9 x i8] c"minspace\00", [11 x i8] c"familylang\00", [6 x i8] c"width\00", [5 x i8] c"rgba\00", [10 x i8] c"hintstyle\00", [6 x i8] c"scale\00", [12 x i8] c"fonthashint\00", [15 x i8] c"postscriptname\00", [6 x i8] c"style\00", [6 x i8] c"color\00", [9 x i8] c"embolden\00", [9 x i8] c"variable\00", [10 x i8] c"stylelang\00", [10 x i8] c"pixelsize\00", [14 x i8] c"globaladvance\00", [11 x i8] c"decorative\00", [12 x i8] c"fontversion\00", [15 x i8] c"verticallayout\00", [11 x i8] c"capability\00", [15 x i8] c"fontvariations\00", [11 x i8] c"rasterizer\00", [11 x i8] c"fontformat\00", [6 x i8] c"index\00", [13 x i8] c"fontfeatures\00", [7 x i8] c"symbol\00", [8 x i8] c"foundry\00", [8 x i8] c"prgname\00", [15 x i8] c"embeddedbitmap\00" }, align 1
@FcObjectTypeHash.asso_values = internal unnamed_addr constant [256 x i8] c"=================================================================================================\02\1E\04\10\1D\1C0\0C\02==\03\13\0E\1E\09= \0C\06!\16\0B \05\02=====================================================================================================================================", align 16
@next_id = internal global i32 1075, align 4
@stderr = external local_unnamed_addr global %struct._IO_FILE*, align 8
@.str = private unnamed_addr constant [42 x i8] c"Fontconfig error: No object ID to assign\0A\00", align 1

; Function Attrs: nounwind ssp uwtable
define hidden void @FcObjectFini() local_unnamed_addr #0 {
  br label %1

1:                                                ; preds = %4, %0
  fence seq_cst
  %2 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** @other_types, align 8
  %3 = icmp eq %struct.FcObjectOtherTypeInfo* %2, null
  br i1 %3, label %19, label %4

4:                                                ; preds = %1
  %5 = ptrtoint %struct.FcObjectOtherTypeInfo* %2 to i64
  %6 = cmpxchg i64* bitcast (%struct.FcObjectOtherTypeInfo** @other_types to i64*), i64 %5, i64 0 seq_cst seq_cst
  %7 = extractvalue { i64, i1 } %6, 1
  br i1 %7, label %8, label %1

8:                                                ; preds = %4, %16
  %9 = phi %struct.FcObjectOtherTypeInfo* [ %11, %16 ], [ %2, %4 ]
  %10 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %9, i64 0, i32 0
  %11 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** %10, align 8
  %12 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %9, i64 0, i32 1, i32 0
  %13 = load i8*, i8** %12, align 8
  %14 = icmp eq i8* %13, null
  br i1 %14, label %16, label %15

15:                                               ; preds = %8
  tail call void @free(i8* nonnull %13) #10
  br label %16

16:                                               ; preds = %8, %15
  %17 = bitcast %struct.FcObjectOtherTypeInfo* %9 to i8*
  tail call void @free(i8* %17) #10
  %18 = icmp eq %struct.FcObjectOtherTypeInfo* %11, null
  br i1 %18, label %19, label %8

19:                                               ; preds = %1, %16
  ret void
}

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.start.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind
declare void @free(i8* nocapture) local_unnamed_addr #2

; Function Attrs: argmemonly nounwind
declare void @llvm.lifetime.end.p0i8(i64 immarg, i8* nocapture) #1

; Function Attrs: nounwind readonly ssp uwtable
define hidden i32 @FcObjectLookupBuiltinIdByName(i8* nocapture readonly) local_unnamed_addr #3 {
  %2 = tail call i64 @strlen(i8* %0) #11
  %3 = add i64 %2, -3
  %4 = icmp ult i64 %3, 12
  br i1 %4, label %5, label %49

5:                                                ; preds = %1
  %6 = trunc i64 %2 to i32
  %7 = add nsw i32 %6, -3
  %8 = icmp ult i32 %7, 2
  br i1 %8, label %17, label %9

9:                                                ; preds = %5
  %10 = getelementptr inbounds i8, i8* %0, i64 4
  %11 = load i8, i8* %10, align 1
  %12 = zext i8 %11 to i64
  %13 = getelementptr inbounds [256 x i8], [256 x i8]* @FcObjectTypeHash.asso_values, i64 0, i64 %12
  %14 = load i8, i8* %13, align 1
  %15 = zext i8 %14 to i32
  %16 = add nuw nsw i32 %15, %6
  br label %17

17:                                               ; preds = %9, %5
  %18 = phi i32 [ %6, %5 ], [ %16, %9 ]
  %19 = getelementptr inbounds i8, i8* %0, i64 2
  %20 = load i8, i8* %19, align 1
  %21 = zext i8 %20 to i64
  %22 = getelementptr inbounds [256 x i8], [256 x i8]* @FcObjectTypeHash.asso_values, i64 0, i64 %21
  %23 = load i8, i8* %22, align 1
  %24 = zext i8 %23 to i32
  %25 = add nuw nsw i32 %18, %24
  %26 = icmp ult i32 %25, 61
  br i1 %26, label %27, label %49

27:                                               ; preds = %17
  %28 = zext i32 %25 to i64
  %29 = getelementptr inbounds [61 x %struct.FcObjectTypeInfo], [61 x %struct.FcObjectTypeInfo]* @FcObjectTypeLookup.wordlist, i64 0, i64 %28
  %30 = getelementptr inbounds %struct.FcObjectTypeInfo, %struct.FcObjectTypeInfo* %29, i64 0, i32 0
  %31 = load i32, i32* %30, align 8
  %32 = icmp sgt i32 %31, -1
  br i1 %32, label %33, label %49

33:                                               ; preds = %27
  %34 = sext i32 %31 to i64
  %35 = getelementptr inbounds %struct.FcObjectTypeNamePool_t, %struct.FcObjectTypeNamePool_t* @FcObjectTypeNamePool_contents, i64 0, i32 0, i64 %34
  %36 = load i8, i8* %0, align 1
  %37 = load i8, i8* %35, align 1
  %38 = icmp eq i8 %36, %37
  br i1 %38, label %39, label %49

39:                                               ; preds = %33
  %40 = getelementptr inbounds i8, i8* %0, i64 1
  %41 = getelementptr inbounds i8, i8* %35, i64 1
  %42 = tail call i32 @strcmp(i8* %40, i8* %41) #11
  %43 = icmp ne i32 %42, 0
  %44 = icmp eq %struct.FcObjectTypeInfo* %29, null
  %45 = or i1 %44, %43
  br i1 %45, label %49, label %46

46:                                               ; preds = %39
  %47 = getelementptr inbounds [61 x %struct.FcObjectTypeInfo], [61 x %struct.FcObjectTypeInfo]* @FcObjectTypeLookup.wordlist, i64 0, i64 %28, i32 1
  %48 = load i32, i32* %47, align 4
  br label %49

49:                                               ; preds = %39, %17, %27, %33, %1, %46
  %50 = phi i32 [ %48, %46 ], [ 0, %1 ], [ 0, %39 ], [ 0, %33 ], [ 0, %27 ], [ 0, %17 ]
  ret i32 %50
}

; Function Attrs: argmemonly nofree nounwind readonly
declare i64 @strlen(i8* nocapture) local_unnamed_addr #4

; Function Attrs: nounwind ssp uwtable
define hidden i32 @FcObjectLookupIdByName(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = alloca i32, align 4
  %3 = tail call i64 @strlen(i8* %0) #11
  %4 = add i64 %3, -3
  %5 = icmp ult i64 %4, 12
  br i1 %5, label %6, label %45

6:                                                ; preds = %1
  %7 = trunc i64 %3 to i32
  %8 = add nsw i32 %7, -3
  %9 = icmp ult i32 %8, 2
  br i1 %9, label %18, label %10

10:                                               ; preds = %6
  %11 = getelementptr inbounds i8, i8* %0, i64 4
  %12 = load i8, i8* %11, align 1
  %13 = zext i8 %12 to i64
  %14 = getelementptr inbounds [256 x i8], [256 x i8]* @FcObjectTypeHash.asso_values, i64 0, i64 %13
  %15 = load i8, i8* %14, align 1
  %16 = zext i8 %15 to i32
  %17 = add nuw nsw i32 %16, %7
  br label %18

18:                                               ; preds = %10, %6
  %19 = phi i32 [ %7, %6 ], [ %17, %10 ]
  %20 = getelementptr inbounds i8, i8* %0, i64 2
  %21 = load i8, i8* %20, align 1
  %22 = zext i8 %21 to i64
  %23 = getelementptr inbounds [256 x i8], [256 x i8]* @FcObjectTypeHash.asso_values, i64 0, i64 %22
  %24 = load i8, i8* %23, align 1
  %25 = zext i8 %24 to i32
  %26 = add nuw nsw i32 %19, %25
  %27 = icmp ult i32 %26, 61
  br i1 %27, label %28, label %45

28:                                               ; preds = %18
  %29 = zext i32 %26 to i64
  %30 = getelementptr inbounds [61 x %struct.FcObjectTypeInfo], [61 x %struct.FcObjectTypeInfo]* @FcObjectTypeLookup.wordlist, i64 0, i64 %29
  %31 = getelementptr inbounds %struct.FcObjectTypeInfo, %struct.FcObjectTypeInfo* %30, i64 0, i32 0
  %32 = load i32, i32* %31, align 8
  %33 = icmp sgt i32 %32, -1
  br i1 %33, label %34, label %45

34:                                               ; preds = %28
  %35 = sext i32 %32 to i64
  %36 = getelementptr inbounds %struct.FcObjectTypeNamePool_t, %struct.FcObjectTypeNamePool_t* @FcObjectTypeNamePool_contents, i64 0, i32 0, i64 %35
  %37 = load i8, i8* %0, align 1
  %38 = load i8, i8* %36, align 1
  %39 = icmp eq i8 %37, %38
  br i1 %39, label %40, label %45

40:                                               ; preds = %34
  %41 = getelementptr inbounds i8, i8* %0, i64 1
  %42 = getelementptr inbounds i8, i8* %36, i64 1
  %43 = tail call i32 @strcmp(i8* %41, i8* %42) #11
  %44 = icmp eq i32 %43, 0
  br i1 %44, label %47, label %45

45:                                               ; preds = %1, %40, %34, %28, %18
  %46 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %46) #10
  store i32 -1431655766, i32* %2, align 4
  br label %53

47:                                               ; preds = %40
  %48 = bitcast i32* %2 to i8*
  call void @llvm.lifetime.start.p0i8(i64 4, i8* nonnull %48) #10
  store i32 -1431655766, i32* %2, align 4
  %49 = icmp eq %struct.FcObjectTypeInfo* %30, null
  br i1 %49, label %53, label %50

50:                                               ; preds = %47
  %51 = getelementptr inbounds [61 x %struct.FcObjectTypeInfo], [61 x %struct.FcObjectTypeInfo]* @FcObjectTypeLookup.wordlist, i64 0, i64 %29, i32 1
  %52 = load i32, i32* %51, align 4
  br label %59

53:                                               ; preds = %45, %47
  %54 = phi i8* [ %46, %45 ], [ %48, %47 ]
  %55 = call fastcc %struct._FcObjectType* @_FcObjectLookupOtherTypeByName(i8* %0, i32* nonnull %2)
  %56 = icmp eq %struct._FcObjectType* %55, null
  %57 = load i32, i32* %2, align 4
  %58 = select i1 %56, i32 0, i32 %57
  br label %59

59:                                               ; preds = %53, %50
  %60 = phi i8* [ %48, %50 ], [ %54, %53 ]
  %61 = phi i32 [ %52, %50 ], [ %58, %53 ]
  call void @llvm.lifetime.end.p0i8(i64 4, i8* nonnull %60) #10
  ret i32 %61
}

; Function Attrs: nounwind ssp uwtable
define internal fastcc %struct._FcObjectType* @_FcObjectLookupOtherTypeByName(i8* nocapture readonly, i32*) unnamed_addr #0 {
  br label %3

3:                                                ; preds = %42, %2
  fence seq_cst
  %4 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** @other_types, align 8
  %5 = icmp eq %struct.FcObjectOtherTypeInfo* %4, null
  br i1 %5, label %16, label %6

6:                                                ; preds = %3, %12
  %7 = phi %struct.FcObjectOtherTypeInfo* [ %14, %12 ], [ %4, %3 ]
  %8 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %7, i64 0, i32 1, i32 0
  %9 = load i8*, i8** %8, align 8
  %10 = tail call i32 @strcmp(i8* %9, i8* %0) #11
  %11 = icmp eq i32 %10, 0
  br i1 %11, label %45, label %12

12:                                               ; preds = %6
  %13 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %7, i64 0, i32 0
  %14 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** %13, align 8
  %15 = icmp eq %struct.FcObjectOtherTypeInfo* %14, null
  br i1 %15, label %16, label %6

16:                                               ; preds = %12, %3
  %17 = tail call noalias i8* @malloc(i64 32) #10
  %18 = icmp eq i8* %17, null
  br i1 %18, label %53, label %19

19:                                               ; preds = %16
  %20 = tail call noalias i8* @strdup(i8* %0) #10
  %21 = getelementptr inbounds i8, i8* %17, i64 8
  %22 = bitcast i8* %21 to i8**
  store i8* %20, i8** %22, align 8
  %23 = getelementptr inbounds i8, i8* %17, i64 16
  %24 = bitcast i8* %23 to i32*
  store i32 -1, i32* %24, align 8
  %25 = atomicrmw add i32* @next_id, i32 1 seq_cst
  %26 = getelementptr inbounds i8, i8* %17, i64 24
  %27 = bitcast i8* %26 to i32*
  store i32 %25, i32* %27, align 8
  %28 = icmp slt i32 %25, 1075
  br i1 %28, label %29, label %32

29:                                               ; preds = %19
  %30 = load %struct._IO_FILE*, %struct._IO_FILE** @stderr, align 8
  %31 = tail call i64 @fwrite(i8* getelementptr inbounds ([42 x i8], [42 x i8]* @.str, i64 0, i64 0), i64 41, i64 1, %struct._IO_FILE* %30) #12
  tail call void @abort() #13
  unreachable

32:                                               ; preds = %19
  %33 = bitcast i8* %17 to %struct.FcObjectOtherTypeInfo**
  store %struct.FcObjectOtherTypeInfo* %4, %struct.FcObjectOtherTypeInfo** %33, align 8
  %34 = ptrtoint %struct.FcObjectOtherTypeInfo* %4 to i64
  %35 = ptrtoint i8* %17 to i64
  %36 = cmpxchg i64* bitcast (%struct.FcObjectOtherTypeInfo** @other_types to i64*), i64 %34, i64 %35 seq_cst seq_cst
  %37 = extractvalue { i64, i1 } %36, 1
  br i1 %37, label %43, label %38

38:                                               ; preds = %32
  %39 = load i8*, i8** %22, align 8
  %40 = icmp eq i8* %39, null
  br i1 %40, label %42, label %41

41:                                               ; preds = %38
  tail call void @free(i8* nonnull %39) #10
  br label %42

42:                                               ; preds = %38, %41
  tail call void @free(i8* nonnull %17) #10
  br label %3

43:                                               ; preds = %32
  %44 = bitcast i8* %17 to %struct.FcObjectOtherTypeInfo*
  br label %45

45:                                               ; preds = %6, %43
  %46 = phi %struct.FcObjectOtherTypeInfo* [ %44, %43 ], [ %7, %6 ]
  %47 = icmp eq i32* %1, null
  br i1 %47, label %51, label %48

48:                                               ; preds = %45
  %49 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %46, i64 0, i32 2
  %50 = load i32, i32* %49, align 8
  store i32 %50, i32* %1, align 4
  br label %51

51:                                               ; preds = %45, %48
  %52 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %46, i64 0, i32 1
  br label %53

53:                                               ; preds = %16, %51
  %54 = phi %struct._FcObjectType* [ %52, %51 ], [ null, %16 ]
  ret %struct._FcObjectType* %54
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden i8* @FcObjectLookupOtherNameById(i32) local_unnamed_addr #5 {
  fence seq_cst
  %2 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** @other_types, align 8
  %3 = icmp eq %struct.FcObjectOtherTypeInfo* %2, null
  br i1 %3, label %16, label %4

4:                                                ; preds = %1, %12
  %5 = phi %struct.FcObjectOtherTypeInfo* [ %14, %12 ], [ %2, %1 ]
  %6 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %0
  br i1 %8, label %9, label %12

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %5, i64 0, i32 1, i32 0
  %11 = load i8*, i8** %10, align 8
  br label %16

12:                                               ; preds = %4
  %13 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %5, i64 0, i32 0
  %14 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** %13, align 8
  %15 = icmp eq %struct.FcObjectOtherTypeInfo* %14, null
  br i1 %15, label %16, label %4

16:                                               ; preds = %12, %1, %9
  %17 = phi i8* [ %11, %9 ], [ null, %1 ], [ null, %12 ]
  ret i8* %17
}

; Function Attrs: nounwind ssp uwtable
define hidden %struct._FcObjectType* @FcObjectLookupOtherTypeByName(i8* nocapture readonly) local_unnamed_addr #0 {
  %2 = tail call fastcc %struct._FcObjectType* @_FcObjectLookupOtherTypeByName(i8* %0, i32* null)
  ret %struct._FcObjectType* %2
}

; Function Attrs: nofree norecurse nounwind ssp uwtable
define hidden %struct._FcObjectType* @FcObjectLookupOtherTypeById(i32) local_unnamed_addr #5 {
  fence seq_cst
  %2 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** @other_types, align 8
  %3 = icmp eq %struct.FcObjectOtherTypeInfo* %2, null
  br i1 %3, label %15, label %4

4:                                                ; preds = %1, %11
  %5 = phi %struct.FcObjectOtherTypeInfo* [ %13, %11 ], [ %2, %1 ]
  %6 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %5, i64 0, i32 2
  %7 = load i32, i32* %6, align 8
  %8 = icmp eq i32 %7, %0
  br i1 %8, label %9, label %11

9:                                                ; preds = %4
  %10 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %5, i64 0, i32 1
  br label %15

11:                                               ; preds = %4
  %12 = getelementptr inbounds %struct.FcObjectOtherTypeInfo, %struct.FcObjectOtherTypeInfo* %5, i64 0, i32 0
  %13 = load %struct.FcObjectOtherTypeInfo*, %struct.FcObjectOtherTypeInfo** %12, align 8
  %14 = icmp eq %struct.FcObjectOtherTypeInfo* %13, null
  br i1 %14, label %15, label %4

15:                                               ; preds = %11, %1, %9
  %16 = phi %struct._FcObjectType* [ %10, %9 ], [ null, %1 ], [ null, %11 ]
  ret %struct._FcObjectType* %16
}

; Function Attrs: nofree nounwind readonly
declare i32 @strcmp(i8* nocapture, i8* nocapture) local_unnamed_addr #6

; Function Attrs: nofree nounwind
declare noalias i8* @malloc(i64) local_unnamed_addr #7

; Function Attrs: nofree nounwind
declare noalias i8* @strdup(i8* nocapture readonly) local_unnamed_addr #7

; Function Attrs: noreturn nounwind
declare void @abort() local_unnamed_addr #8

; Function Attrs: nofree nounwind
declare i64 @fwrite(i8* nocapture, i64, i64, %struct._IO_FILE* nocapture) local_unnamed_addr #9

attributes #0 = { nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #1 = { argmemonly nounwind }
attributes #2 = { nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #3 = { nounwind readonly ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #4 = { argmemonly nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #5 = { nofree norecurse nounwind ssp uwtable "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "min-legal-vector-width"="0" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-jump-tables"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #6 = { nofree nounwind readonly "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #7 = { nofree nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #8 = { noreturn nounwind "correctly-rounded-divide-sqrt-fp-math"="false" "disable-tail-calls"="false" "less-precise-fpmad"="false" "no-frame-pointer-elim"="false" "no-frame-pointer-elim-non-leaf" "no-infs-fp-math"="false" "no-nans-fp-math"="false" "no-signed-zeros-fp-math"="false" "no-trapping-math"="false" "null-pointer-is-valid"="true" "stack-protector-buffer-size"="4" "target-cpu"="x86-64" "target-features"="+cx8,+fxsr,+mmx,+sse,+sse2,+sse3,+x87" "unsafe-fp-math"="false" "use-soft-float"="false" }
attributes #9 = { nofree nounwind }
attributes #10 = { nounwind }
attributes #11 = { nounwind readonly }
attributes #12 = { cold }
attributes #13 = { noreturn nounwind }

!llvm.module.flags = !{!0, !1}

!0 = !{i32 1, !"wchar_size", i32 4}
!1 = !{i32 7, !"PIC Level", i32 2}
